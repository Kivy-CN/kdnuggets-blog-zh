["```py\ninstall.packages(\"infer\")\n```", "```py\nlibrary(infer)\nlibrary(dplyr)\nmtcars <- mtcars %>%\n  mutate(cyl = factor(cyl),\n         vs = factor(vs),\n         am = factor(am),\n         gear = factor(gear),\n         carb = factor(carb))\n# For reproducibility         \nset.seed(2018)\n```", "```py\nmtcars %>%\n  specify(response = mpg) %>% # formula alt: mpg ~ NULL\n  hypothesize(null = \"point\", med = 26) %>% \n  generate(reps = 100, type = \"bootstrap\") %>% \n  calculate(stat = \"median\")\n```", "```py\n## # A tibble: 100 x 2\n##    replicate  stat\n##        <int> <dbl>\n##  1         1  26.6\n##  2         2  25.1\n##  3         3  25.2\n##  4         4  24.7\n##  5         5  24.6\n##  6         6  25.8\n##  7         7  24.7\n##  8         8  25.6\n##  9         9  25.0\n## 10        10  25.1\n## # ... with 90 more rows\n```", "```py\nlibrary(nycflights13)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(stringr)\nlibrary(infer)\nset.seed(2017)\nfli_small <- flights %>% \n  na.omit() %>% \n  sample_n(size = 500) %>% \n  mutate(season = case_when(\n    month %in% c(10:12, 1:3) ~ \"winter\",\n    month %in% c(4:9) ~ \"summer\"\n  )) %>% \n  mutate(day_hour = case_when(\n    between(hour, 1, 12) ~ \"morning\",\n    between(hour, 13, 24) ~ \"not morning\"\n  )) %>% \n  select(arr_delay, dep_delay, season, \n         day_hour, origin, carrier)\n```", "```py\nchisq_null_distn <- fli_small %>%\n  specify(origin ~ season) %>% # alt: response = origin, explanatory = season\n  hypothesize(null = \"independence\") %>%\n  generate(reps = 1000, type = \"permute\") %>%\n  calculate(stat = \"Chisq\")\nchisq_null_distn %>% visualize(obs_stat = obs_chisq, direction = \"greater\")\n```", "```py\nfli_small %>%\n  specify(origin ~ season) %>% \n  hypothesize(null = \"independence\") %>%\n  # generate() ## Not used for theoretical\n  calculate(stat = \"Chisq\") %>%\n  visualize(method = \"theoretical\", obs_stat = obs_chisq, direction = \"right\")\n```", "```py\ninstall.packages(\"janitor\")\n```", "```py\nlibrary(pacman) # for loading packages\np_load(readxl, janitor, dplyr, here)\n\nroster_raw <- read_excel(here(\"dirty_data.xlsx\")) # available at http://github.com/sfirke/janitor\nglimpse(roster_raw)\n#> Observations: 13\n#> Variables: 11\n#> $ `First Name`        <chr> \"Jason\", \"Jason\", \"Alicia\", \"Ada\", \"Desus\", \"Chien-Shiung\", \"Chien-Shiung\", N...\n#> $ `Last Name`         <chr> \"Bourne\", \"Bourne\", \"Keys\", \"Lovelace\", \"Nice\", \"Wu\", \"Wu\", NA, \"Joyce\", \"Lam...\n#> $ `Employee Status`   <chr> \"Teacher\", \"Teacher\", \"Teacher\", \"Teacher\", \"Administration\", \"Teacher\", \"Tea...\n#> $ Subject             <chr> \"PE\", \"Drafting\", \"Music\", NA, \"Dean\", \"Physics\", \"Chemistry\", NA, \"English\",...\n#> $ `Hire Date`         <dbl> 39690, 39690, 37118, 27515, 41431, 11037, 11037, NA, 32994, 27919, 42221, 347...\n#> $ `% Allocated`       <dbl> 0.75, 0.25, 1.00, 1.00, 1.00, 0.50, 0.50, NA, 0.50, 0.50, NA, NA, 0.80\n#> $ `Full time?`        <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", NA, \"No\", \"No\", \"No\", \"No\", ...\n#> $ `do not edit! --->` <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA\n#> $ Certification       <chr> \"Physical ed\", \"Physical ed\", \"Instr. music\", \"PENDING\", \"PENDING\", \"Science ...\n#> $ Certification__1    <chr> \"Theater\", \"Theater\", \"Vocal music\", \"Computers\", NA, \"Physics\", \"Physics\", N...\n#> $ Certification__2    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA\n```", "```py\nroster <- roster_raw %>%\n  clean_names() %>%\n  remove_empty(c(\"rows\", \"cols\")) %>%\n  mutate(hire_date = excel_numeric_to_date(hire_date),\n         cert = coalesce(certification, certification_1)) %>% # from dplyr\n  select(-certification, -certification_1) # drop unwanted columns\n```", "```py\nroster %>% get_dupes(first_name, last_name)\n```", "```py\nroster %>%\n  tabyl(subject)\n#>     subject n    percent valid_percent\n#>  Basketball 1 0.08333333           0.1\n#>   Chemistry 1 0.08333333           0.1\n#>        Dean 1 0.08333333           0.1\n#>    Drafting 1 0.08333333           0.1\n#>     English 2 0.16666667           0.2\n#>       Music 1 0.08333333           0.1\n#>          PE 1 0.08333333           0.1\n#>     Physics 1 0.08333333           0.1\n#>     Science 1 0.08333333           0.1\n#>        <NA> 2 0.16666667            NA\n```", "```py\n# From CRAN\ninstall.packages(\"esquisse\")\n```", "```py\nesquisse::esquisser()\n```", "```py\nesquisse::esquisser(data = iris)\n```"]