- en: 3 Ways to Merge Pandas DataFrames
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/03/3-ways-merge-pandas-dataframes.html](https://www.kdnuggets.com/2023/03/3-ways-merge-pandas-dataframes.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![3 Ways to Merge Pandas DataFrames](../Images/7c30c61ece82d6988b8a8623a38824f2.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Editor
  prefs: []
  type: TYPE_NORMAL
- en: Data in the real world is scattered and requires bringing different sources
    together on some common grounds. It also needs to be more efficient and affordable
    for organizations to store all data in a single table. Thus keeping data in multiple
    tables and then joining them together when needed is the way to get the best of
    both worlds, i.e., efficiency and valuable insights.
  prefs: []
  type: TYPE_NORMAL
- en: “Pandas” offers data frame merging, which is quite helpful in data analysis
    as it allows you to combine data from multiple sources into a single data frame.
    For example, imagine you have a sales dataset containing information on customer
    orders and another dataset containing customer demographics. By joining these
    two dataframes on the customer ID, you can create a new dataframe that includes
    all the information in one place, making it easier to analyze and understand the
    relationship between customer demographics and sales.
  prefs: []
  type: TYPE_NORMAL
- en: Combining these dataframes allows you to add additional columns to your data,
    such as calculated fields or aggregate statistics, that can drive sophisticated
    machine learning systems. Merging can also be helpful for data preparation tasks
    such as cleaning, normalizing, and pre-processing.
  prefs: []
  type: TYPE_NORMAL
- en: In this post, you will learn about the three ways to merge Pandas dataframes
    and the difference between the outputs. You will also be able to appreciate how
    it facilitates different data analysis use cases using merge, join and concatenate
    operations.
  prefs: []
  type: TYPE_NORMAL
- en: Merge
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The merge() operation is a method used to combine two dataframes based on one
    or more common columns, also called keys. The resulting data frame contains only
    the rows from both dataframes with matching keys. The merge() function is similar
    to the SQL JOIN operation.
  prefs: []
  type: TYPE_NORMAL
- en: 'The basic syntax for using merge() is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Here, df1 and df2 are the two dataframes you want to merge, and the “on” argument
    defines the column(s) for combining.
  prefs: []
  type: TYPE_NORMAL
- en: By default, pandas will perform an inner join, which means that only the rows
    with matching keys in both dataframes are included in the resulting dataframe.
    However, you can specify other types of joins, such as left, right, or outer join,
    using the how parameter.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s understand this by an example, as shown below.
  prefs: []
  type: TYPE_NORMAL
- en: Please note you can use a [Jupyter Notebook](https://jupyter.org/) (or an IDE
    of your choice) to run the below code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'This will produce the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: As evident in the result, the new data frame merged_df contains only the rows
    where the values in the 'key' column match, i.e., B and D.
  prefs: []
  type: TYPE_NORMAL
- en: Join
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: On the other hand, the join() operation combines two dataframes based on their
    index, instead of a specific column. The resulting data frame contains only the
    rows from both dataframes with matching indexes.
  prefs: []
  type: TYPE_NORMAL
- en: 'The basic syntax for using join() is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: where df1 and df2 are the two dataframes to be joined.
  prefs: []
  type: TYPE_NORMAL
- en: By default, join() performs a left join, which means that all the rows in the
    first dataframe (df1) will be included in the resulting dataframe, and any rows
    in the second dataframe (df2) with matching index values will be added as well.
    The non-matching rows in the second data frame will have NaN values if there is
    no match. However, using the how parameter, you can specify other types of joins,
    such as right, inner or outer.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s understand this by an example, as shown below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The above code would produce the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Here, the new data frame joined_df contains only the rows where the indices
    match, i.e., B and D.
  prefs: []
  type: TYPE_NORMAL
- en: Concat
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The concat() is used to concatenate multiple pandas objects (dataframe or Series)
    along a particular axis (either rows or columns). By default, the axis is 0, meaning
    that data is concatenated along the rows (vertically). It takes a list of pandas
    objects as its first argument concatenated in the order specified in the list.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The function can be customized through various parameters, such as axis, join,
    ignore_index, etc.
  prefs: []
  type: TYPE_NORMAL
- en: 'An example of using the Pandas concat function to combine two dataframes is
    shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'This will produce the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: To avoid index duplication as shown above (indexes from 0 to 3 are occurring
    twice in the concatenated data frame), use ignore_index=True as shown below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: The result would look like the below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this article, you learned three ways to merge Pandas data frames and how
    they solve different purposes when dealing with data in any BI project. The post
    illustrates examples of merge, join and concatenate operations using python code.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Vidhi Chugh](https://vidhi-chugh.medium.com/)** is an AI strategist and
    a digital transformation leader working at the intersection of product, sciences,
    and engineering to build scalable machine learning systems. She is an award-winning
    innovation leader, an author, and an international speaker. She is on a mission
    to democratize machine learning and break the jargon for everyone to be a part
    of this transformation.'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[How to Merge Pandas DataFrames](https://www.kdnuggets.com/2023/01/merge-pandas-dataframes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Merge Large DataFrames Efficiently with Pandas](https://www.kdnuggets.com/how-to-merge-large-dataframes-efficiently-with-pandas)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[3 Ways to Append Rows to Pandas DataFrames](https://www.kdnuggets.com/2022/08/3-ways-append-rows-pandas-dataframes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Combining Pandas DataFrames Made Simple](https://www.kdnuggets.com/2022/09/combining-pandas-dataframes-made-simple.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Converting JSONs to Pandas DataFrames: Parsing Them the Right Way](https://www.kdnuggets.com/converting-jsons-to-pandas-dataframes-parsing-them-the-right-way)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Query Your Pandas DataFrames with SQL](https://www.kdnuggets.com/2021/10/query-pandas-dataframes-sql.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
