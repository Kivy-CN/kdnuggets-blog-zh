- en: Why the Future of ETL Is Not ELT, But EL(T)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/12/future-etl-is-elt.html](https://www.kdnuggets.com/2020/12/future-etl-is-elt.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [John Lafleur](https://www.linkedin.com/in/jeanhenrilafleur/), Co-Founder,
    Airbyte.io**.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e532db7a6e5a91f7cfef4274593b636c.png)'
  prefs: []
  type: TYPE_IMG
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: How we store and manage data has completely changed over the last decade. We
    moved from an ETL world to an ELT world, with companies like Fivetran pushing
    the trend. However, we don’t think it is going to stop there; ELT is a transition
    in our mind towards EL(T) (with EL decoupled from T). And to understand this,
    we need to discern the underlying reasons for this trend, as they might show what’s
    in store for the future.
  prefs: []
  type: TYPE_NORMAL
- en: This is what we will be doing in this article. I’m the co-founder of [Airbyte](https://airbyte.io),
    the new upcoming open-source standard for data integrations.
  prefs: []
  type: TYPE_NORMAL
- en: What are the problems with ETL?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Historically, the data pipeline process consisted of **e**xtracting, **t**ransforming,
    and **l**oading data into a warehouse or a data lake. There are serious disadvantages
    to this sequence.
  prefs: []
  type: TYPE_NORMAL
- en: '**Inflexibility**'
  prefs: []
  type: TYPE_NORMAL
- en: ETL is inherently rigid. It forces data analysts to know beforehand every way
    they are going to use the data, every report they are going to produce. Any change
    they make can be costly. It can potentially affect data consumers downstream of
    the initial extraction.
  prefs: []
  type: TYPE_NORMAL
- en: '**Lack of visibility**'
  prefs: []
  type: TYPE_NORMAL
- en: Every transformation performed on the data obscures some of the underlying information.
    Analysts won’t see all the data in the warehouse, only the one that was kept during
    the transformation phase. This is risky, as conclusions might be drawn based on
    data that hasn’t been properly sliced.
  prefs: []
  type: TYPE_NORMAL
- en: '**Lack of Autonomy for Analysts**'
  prefs: []
  type: TYPE_NORMAL
- en: Last but not least, building an ETL-based data pipeline is often beyond the
    technical capabilities of analysts. It typically requires the close involvement
    of engineering talent, along with additional code to extract and transform each
    source of data.
  prefs: []
  type: TYPE_NORMAL
- en: The alternative to a complex engineering project is to conduct analyses and
    build reports on an ad hoc, time-intensive, and ultimately unsustainable basis.
  prefs: []
  type: TYPE_NORMAL
- en: What changed and why ELT is way better
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Cloud-based Computation and Storage of Data**'
  prefs: []
  type: TYPE_NORMAL
- en: The ETL approach was once necessary because of the high costs of on-premises
    computation and storage. With the rapid growth of cloud-based data warehouses
    such as Snowflake and the plummeting cost of cloud-based computation and storage,
    there is little reason to continue doing transformation before loading at the
    final destination. Indeed, flipping the two enables analysts to do a better job
    in an autonomous way.
  prefs: []
  type: TYPE_NORMAL
- en: '**ELT Supports Agile Decision-making for Analysts**'
  prefs: []
  type: TYPE_NORMAL
- en: When analysts can load data before transforming it, they don’t have to determine
    beforehand exactly what insights they want to generate before deciding on the
    exact schema they need to get.
  prefs: []
  type: TYPE_NORMAL
- en: Instead, the underlying source data is directly replicated to a data warehouse,
    comprising a **“single source of truth.”** Analysts can then perform transformations
    on the data as needed. Analysts will always be able to go back to the original
    data and won’t suffer from transformations that might have **compromised the integrity
    of the data,** giving them a free hand. This makes the business intelligence process
    incomparably more flexible and safe.
  prefs: []
  type: TYPE_NORMAL
- en: '**ELT Promotes Data Literacy Across the Whole Company**'
  prefs: []
  type: TYPE_NORMAL
- en: When used in combination with cloud-based business intelligence tools such as
    Looker, Mode, and Tableau, the ELT approach also broadens access to a common set
    of analytics across organizations. Business intelligence dashboards become accessible
    even to relatively non-technical users.
  prefs: []
  type: TYPE_NORMAL
- en: We’re big fans of ELT at Airbyte, too. But ELT is [not completely solving the
    data integration problem](https://airbyte.io/articles/data-engineering-thoughts/how-we-can-commoditize-data-integration-pipelines/)
    and has problems of its own. We think EL needs to be completely decoupled from
    T.
  prefs: []
  type: TYPE_NORMAL
- en: What’s changing now and why EL(T) is the future
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Merging of Data Lakes and Warehouses**'
  prefs: []
  type: TYPE_NORMAL
- en: There was a great analysis by Andreessen Horowitz about [how data infrastructures
    are evolving](https://a16z.com/2020/10/15/the-emerging-architectures-for-modern-data-infrastructure/).
    Here is the architecture diagram of the modern data infrastructure they came up
    with after a lot of interviews with industry leaders.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a2fdbe3ebab3bb46a95a2cd37da1e975.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Data infrastructure serves two purposes at a high level:'
  prefs: []
  type: TYPE_NORMAL
- en: Helps business leaders make better decisions through the use of data - **analytic
    use cases**
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Builds data intelligence into customer-facing applications, including via machine
    learning - **operational use cases**
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Two parallel ecosystems have grown up around these broad use cases.
  prefs: []
  type: TYPE_NORMAL
- en: The data warehouse forms the foundation of the analytics ecosystem. Most warehouses
    store data in a structured format. They are designed to generate insights from
    core business metrics, usually with SQL (although Python is growing in popularity).
  prefs: []
  type: TYPE_NORMAL
- en: The data lake is the backbone of the operational ecosystem. By storing data
    in raw form, it delivers the flexibility, scale, and performance required for
    applications and more advanced data processing needs. Data lakes operate on a
    wide range of languages, including Java/Scala, Python, R, and SQL.
  prefs: []
  type: TYPE_NORMAL
- en: What’s really interesting is that modern data warehouses and data lakes are
    starting to resemble one another – both offering commodity storage, native horizontal
    scaling, semi-structured data types, ACID transactions, interactive SQL queries,
    and so on.
  prefs: []
  type: TYPE_NORMAL
- en: So you might be wondering if data warehouses and data lakes are on a path toward
    convergence. Will they become interchangeable in a stack? Will data warehouses
    also be used for the operational use case?
  prefs: []
  type: TYPE_NORMAL
- en: '**EL(T) Supports Both Use Cases: Analytics and Operational ML**'
  prefs: []
  type: TYPE_NORMAL
- en: EL, in contrast to ELT, completely decouples the Extract-Load part from any
    optional transformation that may occur.
  prefs: []
  type: TYPE_NORMAL
- en: The operational use cases are all unique in the way incoming data is leveraged.
    Some might use a unique transformation process; some might not even use any transformation.
  prefs: []
  type: TYPE_NORMAL
- en: In regards to the analytics case, analysts will need to get the incoming data
    normalized for their own needs at some point. But decoupling EL from T would let
    them choose whichever normalization tool they want. [DBT](https://www.getdbt.com/)
    has been gaining a lot of traction lately among data engineering and data science
    teams. It has become the open-source standard for transformation. Even Fivetran
    integrates with them to let teams use DBT if they’re used to it.
  prefs: []
  type: TYPE_NORMAL
- en: '**EL Scales Faster and Leverages the Whole Ecosystem**'
  prefs: []
  type: TYPE_NORMAL
- en: Transformation is where all the edge cases lie. For every specific need within
    any company, there is a schema normalization unique to it, for each and every
    one of the tools.
  prefs: []
  type: TYPE_NORMAL
- en: Decoupling EL from the T enables the industry to start covering the long tail
    of connectors. At Airbyte, we’re building a “[connector manufacturing plant](https://airbyte.io/articles/data-engineering-thoughts/how-to-build-thousands-of-connectors/)”
    so we can get to 1,000 pre-built connectors in a matter of months.
  prefs: []
  type: TYPE_NORMAL
- en: 'Furthermore, as mentioned above, it would help teams leverage the whole ecosystem
    in an easier way. You start to see an open-source standard for every need. In
    a sense, the future data architecture might look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/cdeabfeb3d3ce3d7b3f694a75d84cda7.png)'
  prefs: []
  type: TYPE_IMG
- en: In the end, extract and load will be decoupled from transformation. Do you agree
    with us?
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://airbyte.io/articles/data-engineering-thoughts/why-the-future-of-etl-is-not-elt-but-el/).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio:** [John Lafleur](https://twitter.com/JeanLafleur) is a co-founder of
    [Airbyte](http://airbyte.io), the new open-source standard for data integrations.
    I’m also an author at SDTimes, Linux.com, TheNewStack, Dzone… and a happy husband
    and dad :)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[ETL vs ELT: Considering the Advancement of Data Warehouses](https://www.kdnuggets.com/2018/05/etl-vs-elt-considering-advancement-data-warehouses.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Data Engineering](https://www.kdnuggets.com/2020/12/introduction-data-engineering.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Role of the Data Engineer is Changing](https://www.kdnuggets.com/2019/01/role-data-engineer-changing.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Building a solid data team](https://www.kdnuggets.com/2021/12/build-solid-data-team.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Write Clean Python Code Using Pipes](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ETL vs ELT: Which One is Right for Your Data Pipeline?](https://www.kdnuggets.com/2023/03/etl-elt-one-right-data-pipeline.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Best ETL Tools in 2021](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ETL vs ELT: Data Integration Showdown](https://www.kdnuggets.com/2022/08/etl-elt-data-integration-showdown.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SQL and Data Integration: ETL and ELT](https://www.kdnuggets.com/2023/01/sql-data-integration-etl-elt.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
