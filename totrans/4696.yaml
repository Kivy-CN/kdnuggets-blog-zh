- en: Feature Reduction using Genetic Algorithm with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/03/feature-reduction-genetic-algorithm-python.html/2](https://www.kdnuggets.com/2019/03/feature-reduction-genetic-algorithm-python.html/2)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](/2019/03/feature-reduction-genetic-algorithm-python.html?page=2#comments)'
  prefs: []
  type: TYPE_IMG
- en: After preparing the features, class labels, and the GA parameters, we can go
    through the iterations of the GA according to the next code. At first, the fitness
    value for all solutions is calculated by calling the fitness function named **cal_pop_fitness()**
    defined in the GA file. This function accepts the current population, the extracted
    features, the class labels, the train indices, and the test indices. The function
    returns the fitness value for all solutions in a variable named **fitness**. Remember
    that the fitness value represents the classification accuracy. The best (i.e.
    highest) classification accuracy is saved into the **best_outputs** list.
  prefs: []
  type: TYPE_NORMAL
- en: Based on the calculated fitness values, the best solutions which has the highest
    classification accuracy are selected as parents in the mating pool using the **select_mating_pool()**
    function defined in the GA.py file. It accepts the current population, fitness
    values, and the number of parents to return. It returns the selected parents into
    the **parents** variable.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Next is to apply the crossover operation over the selected parents to create
    the offspring. This is done inside the **crossover()** function defined in the
    GA.py file. It accepts the parents and the shape of the offspring array to be
    returned later into the **offspring_crossover** variable. The mutation operation
    is then applied over that array using the **mutation()** function which is also
    available within the GA.py file. In addition to the crossover results, this function
    accepts the number of mutations.
  prefs: []
  type: TYPE_NORMAL
- en: Because the new population consists of the selected parents in addition to the
    offspring, both the **parents** and the **offspring_mutation** arrays are saved
    into the **new_population** variable. After that, a new generation is applied
    over the new population.
  prefs: []
  type: TYPE_NORMAL
- en: After all generations complete, the next code is executed in order to return
    the best selected set of feature elements and the number of selected elements.
    After the 100 generations complete, the algorithm used 174 feature elements in
    order to reach an accuracy of 99.59%.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The above code also displays a figure showing the progress of the GA over all
    generations which is shown below.
  prefs: []
  type: TYPE_NORMAL
- en: '![genetic-algorithm-progress](../Images/ccd232bf7d3840d9cc79d648f2d92c8d.png)'
  prefs: []
  type: TYPE_IMG
- en: Here is the complete code of the main file.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: GA.py Implementation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The implementation of the GA.py file is listed below. Within the **cal_pop_fitness()**
    function, the SVC is trained according to the selected feature elements by each
    solution. Before being trained, the features are filtered according to the selected
    elements whose genes are given a value of 1\. This is done inside the **reduce_features()**
    function. It accepts the current solution in addition to the complete features
    for all samples.
  prefs: []
  type: TYPE_NORMAL
- en: After being trained, its classification accuracy is calculated using the **classification_accuracy()**
    function. This function returns the accuracy which is stored into an array named
    accuracies within the **cal_pop_fitness()** function.
  prefs: []
  type: TYPE_NORMAL
- en: The implementation of the **crossover()** and **mutation()** functions are very
    similar to what is discussed in my previous tutorial titled "**Genetic Algorithm
    Implementation in Python**". One major difference is that the **mutation()** function
    changes the randomly selected genes by flipping their values because we are using
    binary representation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: For Contacting the Author
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'E-mail: [ahmed.f.gad@gmail.com](https://mailto:ahmed.f.gad@gmail.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'LinkedIn: [https://linkedin.com/in/ahmedfgad/](https://linkedin.com/in/ahmedfgad/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'KDnuggets: [https://www.kdnuggets.com/author/ahmed-gad](/author/ahmed-gad)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'YouTube: [https://youtube.com/AhmedGadFCIT](https://youtube.com/AhmedGadFCIT)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'TowardsDataScience: [https://towardsdatascience.com/@ahmedfgad](https://towardsdatascience.com/@ahmedfgad)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'GitHub: [https://github.com/ahmedfgad](https://github.com/ahmedfgad)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Bio: [Ahmed Gad](https://www.linkedin.com/in/ahmedfgad/)** received his B.Sc.
    degree with excellent with honors in information technology from the Faculty of
    Computers and Information (FCI), Menoufia University, Egypt, in July 2015\. For
    being ranked first in his faculty, he was recommended to work as a teaching assistant
    in one of the Egyptian institutes in 2015 and then in 2016 to work as a teaching
    assistant and a researcher in his faculty. His current research interests include
    deep learning, machine learning, artificial intelligence, digital signal processing,
    and computer vision.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://www.linkedin.com/pulse/feature-reduction-using-genetic-algorithm-ahmed-gad/).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[A Quick Guide to Feature Engineering](/2019/02/quick-guide-feature-engineering.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Artificial Neural Network Implementation using NumPy and Image Classification](/2019/02/artificial-neural-network-implementation-using-numpy-and-image-classification.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Genetic Algorithm Implementation in Python](/2018/07/genetic-algorithm-implementation-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Genetic Algorithm Key Terms, Explained](https://www.kdnuggets.com/2018/04/genetic-algorithm-key-terms-explained.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Optimizing Genes with a Genetic Algorithm](https://www.kdnuggets.com/2022/04/optimizing-genes-genetic-algorithm.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Dimensionality Reduction Techniques in Data Science](https://www.kdnuggets.com/2022/09/dimensionality-reduction-techniques-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Feature Store Summit 2022: A free conference on Feature Engineering](https://www.kdnuggets.com/2022/10/hopsworks-feature-store-summit-2022-free-conference-feature-engineering.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Genetic Programming in Python: The Knapsack Problem](https://www.kdnuggets.com/2023/01/knapsack-problem-genetic-programming-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Understanding and Implementing Genetic Algorithms in Python](https://www.kdnuggets.com/understanding-and-implementing-genetic-algorithms-in-python)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
