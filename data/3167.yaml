- en: Data Structures Related to Machine Learning Algorithms
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与机器学习算法相关的数据结构
- en: 原文：[https://www.kdnuggets.com/2018/01/data-structures-related-machine-learning-algorithms.html](https://www.kdnuggets.com/2018/01/data-structures-related-machine-learning-algorithms.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2018/01/data-structures-related-machine-learning-algorithms.html](https://www.kdnuggets.com/2018/01/data-structures-related-machine-learning-algorithms.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](/2018/01/data-structures-related-machine-learning-algorithms.html?page=2#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](/2018/01/data-structures-related-machine-learning-algorithms.html?page=2#comments)'
- en: '**By Peter Mills, Statsbot**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者：彼得·米尔斯，Statsbot**'
- en: '![Header image](../Images/9e07d08a07a2dbe643f904f1aab5d3f0.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![Header image](../Images/9e07d08a07a2dbe643f904f1aab5d3f0.png)'
- en: '[Illustration source](http://gph.is/24jTEfV)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[插图来源](http://gph.is/24jTEfV)'
- en: '* * *'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速开启网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升您的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持您的组织 IT 需求'
- en: '* * *'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '*The *[***Statsbot***](http://statsbot.co/?utm_source=blog&utm_campaign=structures_ml)* team
    has invited Peter Mills to tell you about data structures for machine learning
    approaches.*'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*[***Statsbot***](http://statsbot.co/?utm_source=blog&utm_campaign=structures_ml)团队邀请了彼得·米尔斯来讲解机器学习方法中的数据结构。*'
- en: So you’ve decided to move beyond canned algorithms and start to code your own
    machine learning methods. Maybe you’ve got an idea for a cool new way of clustering
    data, or maybe you are frustrated by the limitations in your favorite statistical
    classification package.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，您决定超越现成算法，开始编写自己的机器学习方法。也许您有一个酷炫的新数据聚类方法的想法，或者您对最喜欢的统计分类包的局限性感到沮丧。
- en: '*In either case, the better your knowledge of data structures and algorithms,
    the easier time you’ll have when it comes time to code up.*'
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*无论是哪种情况，您对数据结构和算法的知识越丰富，编码时遇到的困难就会越少。*'
- en: I don’t think the data structures used in machine learning are significantly
    different than those used in other areas of software development. Because of the
    size and difficulty of many of the problems, however, having a really solid handle
    on the basics is essential.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为机器学习中使用的数据结构与其他软件开发领域使用的数据结构并没有显著区别。然而，由于许多问题的规模和复杂性，扎实掌握基础知识是至关重要的。
- en: Also, because machine learning is a very mathematical field, one should have
    in mind how data structures can be used to solve mathematical problems and as
    mathematical objects in their own right.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，由于机器学习是一个非常数学化的领域，应该考虑数据结构如何用于解决数学问题，以及作为独立的数学对象。
- en: '*There are two ways to classify data structures: by their implementation and
    by their operation.*'
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*数据结构有两种分类方式：按实现方式和按操作方式。*'
- en: 'By implementation, I mean the nuts and bolts of how they are programmed and
    the actual storage patterns. How they look on the outside is less important than
    what’s going on under the hood. For data structures classed by operation or *abstract
    data types*, it is the opposite: their external appearance and operation is more
    important than how they are implemented, and in fact they can usually be implemented
    using a number of different internal representations.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 按实现方式分类是指编程的细节和实际的存储模式。它们的外观不如其内部机制重要。对于按操作方式或*抽象数据类型*分类的数据结构则正好相反：它们的外部表现和操作比实现方式更重要，实际上，它们通常可以使用多种不同的内部表示方式实现。
- en: '**Array**'
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**数组**'
- en: 'I’m not kidding when I say that the basic array is the most important data
    structure in machine learning, and there is more to this bread-and-butter type
    than you might think. Arrays are important because they are used in linear algebra:
    the most useful and powerful mathematical tool at your disposal.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我不是开玩笑地说基础数组是机器学习中最重要的数据结构，这种基础类型比你想象的要复杂得多。数组之所以重要，是因为它们用于线性代数：这是你手头上最有用和最强大的数学工具。
- en: Therefore, the most common types will be the one- and two-dimensional variety,
    corresponding to vectors and matrices respectively, but you will occasionally
    encounter three- or four-dimensional arrays either for higher ranked tensors or
    to group examples of the former.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，最常见的类型是一维和二维数组，分别对应于向量和矩阵，但你偶尔会遇到三维或四维数组，用于更高阶的张量或将前述的示例分组。
- en: When doing **matrix arithmetic**, you will have to choose from a dizzying variety
    of libraries, data types, and even languages. Many scientific programming languages
    such as Matlab, Interactive Data Language (IDL), and Python with the Numpy extension
    are designed primarily for working with vectors and matrices.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行**矩阵运算**时，你必须从令人眩晕的各种库、数据类型甚至语言中进行选择。许多科学编程语言，如 Matlab、互动数据语言（IDL）和具有 Numpy
    扩展的 Python，主要用于处理向量和矩阵。
- en: '![](../Images/ba05818a1013181d4f7ac23ca67e9061.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ba05818a1013181d4f7ac23ca67e9061.png)'
- en: 'But the nice thing about these data structures is that, even in more general-purpose
    programming languages, implementing vectors and matrices is straightforward right
    next to the metal, assuming the language has any Fortran DNA in it at all. Consider
    the translation of matrix-vector multiplication:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 但这些数据结构的好处在于，即使在更通用的编程语言中，实施向量和矩阵也很直接，只要语言中有任何 Fortran 的 DNA。考虑矩阵-向量乘法的翻译：
- en: 'into C++:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 到 C++ 中：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Extensible array**'
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**可扩展数组**'
- en: In most cases, arrays can be allocated to a fixed size at run time, or you can
    calculate a reliable upper bound. In those cases where you need your arrays to
    expand indefinitely, you can use an extensible array such as the vector class
    in the C++ standard template library (STL). Regular arrays in Matlab are similarly
    extensible, and extensible arrays are the basis of the entire Python language.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，数组可以在运行时分配固定大小，或者可以计算一个可靠的上限。在需要数组无限扩展的情况下，可以使用如 C++ 标准模板库（STL）中的向量类等可扩展数组。Matlab
    中的常规数组也类似地可扩展，而可扩展数组是整个 Python 语言的基础。
- en: '![](../Images/6965a8e250b390bfb150513c0f5d9059.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6965a8e250b390bfb150513c0f5d9059.png)'
- en: In this data structure, there are two pieces of “meta-data” stored alongside
    the actual data values. These are the amount of storage space allocated to the
    data structure and the actual size of the array. As soon as the size of the array
    exceeds the storage space, a new space is allocated that’s twice the size, the
    values copied into it, and the old array deleted.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种数据结构中，实际数据值旁边存储了两部分“元数据”。这些是分配给数据结构的存储空间的数量和数组的实际大小。一旦数组的大小超过存储空间，就会分配一个新的空间，其大小是原来的两倍，值被复制到其中，旧数组被删除。
- en: This is an O(*n*) operation, where *n* is the size of the array, but since it
    only happens occasionally, time to add a new value onto the end actually amortizes
    to constant time, O(1). It is a very flexible data structure with fast average
    insertions and fast access.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个 O(*n*) 操作，其中 *n* 是数组的大小，但由于它仅偶尔发生，因此将新值添加到末尾的时间实际上摊销为常数时间，O(1)。这是一种非常灵活的数据结构，具有快速的平均插入和访问速度。
- en: 'Extensible arrays are excellent for composing other, more complex data structures
    and making them extensible. For example, to store **a sparse matrix**: any number
    of new elements can be added onto the end and they are then sorted by position
    to make location faster. More on this later.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 可扩展数组非常适合构造其他更复杂的数据结构并使其可扩展。例如，为了存储**稀疏矩阵**：可以在末尾添加任意数量的新元素，然后按位置排序以提高定位速度。稍后会详细介绍。
- en: Sparse matrix can be used in [text classification problems](https://blog.statsbot.co/text-classifier-algorithms-in-machine-learning-acc115293278).
  id: totrans-33
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 稀疏矩阵可以用于 [文本分类问题](https://blog.statsbot.co/text-classifier-algorithms-in-machine-learning-acc115293278)。
- en: '**Linked list**'
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**链表**'
- en: A linked list consists of several separately allocated *nodes*. Each node contains
    a data value plus a *pointer* to the next node in the list. Insertions, at constant
    time, are very efficient, but accessing a value is slow and often requires scanning
    through much of the list.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 链表由几个单独分配的*节点*组成。每个节点包含一个数据值以及指向列表中下一个节点的*指针*。插入操作在常数时间内非常高效，但访问值较慢，通常需要扫描列表的大部分内容。
- en: 'Linked lists are easy to splice together and split apart. There are many variations:
    for instance, insertions can be done at either the head or the tail; the list
    can be doubly-linked and there are many similar data structures based on the same
    principle such as the binary tree, below.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 链表容易拼接和拆分。有许多变体：例如，插入可以在头部或尾部进行；列表可以是双向链表，还有许多基于相同原理的类似数据结构，例如下面的二叉树。
- en: '![](../Images/88c00d33f0c9d8d0c68deee14b835b0a.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/88c00d33f0c9d8d0c68deee14b835b0a.png)'
- en: Mainly, I find linked lists useful **for parsing lists of indeterminate length**.
    Afterwards, they can be converted to fixed-length arrays for fast access. For
    this reason, I use a linked list class that includes a method for conversion to
    an array.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我发现链表主要用于**解析不确定长度的列表**。之后，它们可以被转换为固定长度的数组以实现快速访问。因此，我使用一个包含转换为数组方法的链表类。
- en: '**Binary tree**'
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**二叉树**'
- en: A binary tree is similar to a linked list except that each node has two pointers
    to subsequent nodes instead of just one. The value in the *left child* is always
    less than the value in the *parent node,* which in turn is smaller than that of
    the *right child*. Thus, data in binary trees is automatically sorted. Both insertion
    and access are efficient at O(log *n*) on average. Like linked lists, they are
    easy to transform into arrays and this is the basis for a *tree-sort*.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 二叉树类似于链表，只是每个节点有两个指针指向后续节点，而不是只有一个。*左子节点*的值总是小于*父节点*的值，而*父节点*的值又小于*右子节点*的值。因此，二叉树中的数据是自动排序的。插入和访问的平均效率为O(log
    *n*)。像链表一样，它们也容易转换为数组，这也是*树排序*的基础。
- en: '![](../Images/224a4ae1fad78452e45b02fe25213f66.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/224a4ae1fad78452e45b02fe25213f66.png)'
- en: '**Balanced tree**'
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**平衡树**'
- en: If the data is already already sorted, binary trees are less efficient at O(*n*)
    worst case since the data will be laid out linearly as if it were a linked list.
    While the ordering in a binary tree is constrained, it is by no means unique and
    the same list can be arranged in many different configurations depending on the
    order in which it is inserted.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据已经排序，二叉树在最坏情况下的效率较低，为O(*n*)，因为数据将按线性方式排列，就像链表一样。虽然二叉树中的排序是受限的，但绝非唯一，按照插入顺序，同一列表可以有许多不同的排列。
- en: There are several transformations that can be applied to a tree in order to
    make it more balanced. *Self-balancing trees* perform these operations automatically
    in order to keep access and insertion at an optimal average.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 可以对树进行几种变换，以使其更平衡。*自平衡树*自动执行这些操作，以保持访问和插入的最佳平均值。
- en: '![](../Images/dffc59fb38eafc901356e3c241f27e3b.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dffc59fb38eafc901356e3c241f27e3b.png)'
- en: A widespread problem in machine learning is **finding the nearest neighbor to
    a particular point**. This problem is needed for NN algorithm. KD tree, a type
    of binary tree, provides an efficient solution for that.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习中的一个普遍问题是**找到与特定点最近的邻居**。这个问题对于NN算法是必要的。KD树，一种二叉树类型，提供了一个有效的解决方案。
- en: More On This Topic
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多关于这个主题
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[停止学习数据科学以寻找目的，寻找目的来……](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习数据科学统计的顶级资源](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[成功数据科学家的5个特征](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个数据科学家都应该了解的三个R库（即使你使用Python）](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[一个$9B的AI失败，剖析](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[为什么 Python 是初创公司的理想编程语言](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
