- en: 5 Python Interview Questions & Answers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5 个 Python 面试问题与答案
- en: 原文：[https://www.kdnuggets.com/2022/09/5-python-interview-questions-answers.html](https://www.kdnuggets.com/2022/09/5-python-interview-questions-answers.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2022/09/5-python-interview-questions-answers.html](https://www.kdnuggets.com/2022/09/5-python-interview-questions-answers.html)
- en: '![5 Python Interview Questions & Answers](../Images/187fb33af80c3f5d46a3763f7fd398e9.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![5 个 Python 面试问题与答案](../Images/187fb33af80c3f5d46a3763f7fd398e9.png)'
- en: Photo by [ThisIsEngineering ](https://www.pexels.com/photo/person-using-gray-laptop-3861964/)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[ThisIsEngineering](https://www.pexels.com/photo/person-using-gray-laptop-3861964/)
- en: Imagine you are sitting in front of the laptop, listening to the instructions
    from the hiring manager and reading a coding problem statement. If you are not
    prepared for a timed coding interview session, you will end up making mistakes.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 想象你坐在笔记本电脑前，听取招聘经理的指示并阅读编码问题陈述。如果你没有为定时编码面试做好准备，你将会犯错误。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升您的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持您的组织 IT 方面的需求'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: So, it is always good to review the most asked questions before sitting for
    an interview. It will prepare you for tricky, conditional, and advanced coding
    questions.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在参加面试之前，复习最常见的问题总是好的。这将为你准备好棘手、条件性和高级的编码问题。
- en: 'Q1: Odd or Even? Determine that!'
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'Q1: 奇数还是偶数？确定一下！'
- en: Determine if the sum of “n” consecutive numbers is even, odd, or either.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 确定“n”个连续数字的和是偶数、奇数还是任意。
- en: '**Example:**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例：**'
- en: odd_or_even(3) should return “Either”. The sum can be even or odd.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: odd_or_even(3) 应返回“Either”。总和可以是偶数或奇数。
- en: odd_or_even(2) should return “Odd”. The sum of consecutive numbers contains
    one odd and one even, so the sum will always be odd.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: odd_or_even(2) 应返回“Odd”。连续数字的和包含一个奇数和一个偶数，因此总和将始终是奇数。
- en: odd_or_even(4) should return “Even”. The sum of consecutive numbers contains
    two even and two odd, so the sum will always be even.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: odd_or_even(4) 应返回“Even”。连续数字的和包含两个偶数和两个奇数，因此总和将始终是偶数。
- en: '**Solution:**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：**'
- en: Return “Either” if by dividing the “n” by 2 the remainder is 1.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果将“n”除以 2 后余数为 1，则返回“Either”。
- en: If the first condition fails, move to the second condition.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果第一个条件失败，请转到第二个条件。
- en: First, divide the number by 2 and again divide it by two to check if it returns
    the remainder. If the remainder is 1, then the return “Odd” else return “Even”
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，将数字除以 2，然后再除以 2 以检查是否返回余数。如果余数为 1，则返回“Odd”，否则返回“Even”
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: To pass this question on the first go, you need to read the description multiple
    times. The answer is already given in examples.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在第一次尝试中通过此问题，您需要多次阅读描述。答案已经在示例中给出。
- en: It is not the only solution. You can find various solutions on the Codewars
    platform. You can even come up with your unique solution to gain more points.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不是唯一的解决方案。你可以在 Codewars 平台上找到各种解决方案。你甚至可以提出自己独特的解决方案以获得更多积分。
- en: 'Q2: What is the difference between a tuple and a list?'
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'Q2: 元组和列表有什么区别？'
- en: Both tuples and lists are used for storing and collecting the data.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 元组和列表都用于存储和收集数据。
- en: The list is declared with square brackets [1,2,3,..], whereas tuples are declared
    with round brackets (1,2,3,...)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 列表使用方括号 [1,2,3,..] 声明，而元组使用圆括号 (1,2,3,...) 声明。
- en: The **List** is mutable and primarily used for data insertion and deletion.
    It also has several built-in functions.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**列表**是可变的，主要用于数据插入和删除。它还具有多个内置函数。'
- en: The **Tuple** is immutable. The iteration is comparatively fast and consumes
    less memory than a list. It is mostly used for accessing the elements fast.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**元组**是不可变的。与列表相比，它的迭代速度较快，占用的内存较少。它主要用于快速访问元素。'
- en: 'Q3: What is a lambda function? Why are they used?'
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'Q3: 什么是 Lambda 函数？为什么使用它们？'
- en: Lambda functions are commonly known as anonymous functions. They do not have
    names.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Lambda函数通常称为匿名函数。它们没有名称。
- en: It is used alternatively for regular functions as long as the expression fits
    into one line. Lambda functions are very simple and light. They improve the code
    quality.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 当表达式适合一行时，它可以作为常规函数的替代。Lambda函数非常简单且轻量。它们提高了代码质量。
- en: 'To create a simple function that adds 20 to the input argument, we will write
    lambda and provide two components: parameters and expression.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个简单的函数，将20添加到输入参数中，我们将编写lambda并提供两个组件：参数和表达式。
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The parameter is "a", and the expression is “a+20”. The function can be activated
    by providing inputs to the “x” variable.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 参数是“a”，表达式是“a+20”。可以通过提供输入给“x”变量来激活函数。
- en: It's that simple!
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 就这么简单！
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We can also provide multiple input arguments to the function. In our case, it
    has multiplied 2 and 5 to print 10.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以向函数提供多个输入参数。在我们的例子中，它将2和5相乘以输出10。
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Q4: Maximum 69 Number'
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Q4：最大69数字
- en: You are provided with a positive integer “num”. It consists of only 6 and 9
    digits.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你得到一个正整数“num”。它仅由6和9数字组成。
- en: Return the maximum number by changing one digit (6 or 9).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 通过更改一个数字（6或9）来返回最大数字。
- en: '**Examples:**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例：**'
- en: 'Input: num = 9669, Output: 9969'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入：num = 9669，输出：9969
- en: 'Input: num = 9996, Output: 9999'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入：num = 9996，输出：9999
- en: 'Input: num = 9999, Output: 9999'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入：num = 9999，输出：9999
- en: '**Solution:**'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：**'
- en: To get the largest number, we have to always change 6 to 9, and it should be
    the first digit (6).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 为了得到最大数字，我们必须始终将6改为9，并且应该是第一个数字（6）。
- en: Let’s say we have num = 9669
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有num = 9669
- en: Changing the first digit will result in 6669.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改第一个数字将得到6669。
- en: Changing the second digit will result in 9969.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改第二个数字将得到9969。
- en: Changing the third digit will result in 9699.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改第三个数字将得到9699。
- en: Changing the fourth digit will result in 9666.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改第四个数字将得到9666。
- en: '**9969** is the highest number.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**9969** 是最高的数字。'
- en: We just have to create a simple function that will convert one from 6 to 9 at
    the start.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需要创建一个简单的函数，在开始时将一个6转换为9。
- en: For that, we will convert the number to a string and use the `.replace` function
    to replace “6” with “9”. The third argument is "count" with 1\. It will only replace
    one digit. After replacing we will convert the string to an integer.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们将数字转换为字符串，并使用`.replace`函数将“6”替换为“9”。第三个参数是“count”为1。它只会替换一个数字。替换后，我们将字符串转换为整数。
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Q5: Who wins first?'
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Q5：谁先获胜？
- en: 'Question asked during Microsoft’s coding interview:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 微软编码面试中的问题：
- en: “*Amy and Brad take turns in rolling a fair six-sided die. Whoever rolls a “6”
    first wins the game. Amy starts by rolling first. What’s the probability that
    Amy wins?*”
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: “*艾米和布拉德轮流掷一个公平的六面骰子。谁先掷到“6”谁就赢。艾米先掷。艾米获胜的概率是多少？*”
- en: Before we jump into the solution part, I want you to read the question again.
    It is a simulation question, and we will be finding the probability Amy wins.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们进入解决方案部分之前，我希望你再读一遍问题。这是一个模拟问题，我们将找到艾米获胜的概率。
- en: Amy will always roll the dice first, and if she hits the 6 on the first try
    she wins. Otherwise, Brad turns to roll the dice, and if he gets 6, he wins. If
    not, then the turn will shift back to Amy until one of them is a winner.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 艾米总是先掷骰子，如果她第一次掷到6就赢了。否则，布拉德掷骰子，如果他掷到6就赢了。如果没有，则轮到艾米，直到其中一人获胜。
- en: This question is all about iteration and logic.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题完全是关于迭代和逻辑的。
- en: Initialize the A_count and B_count with zero. We will be using them to create
    probability.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将A_count和B_count初始化为零。我们将使用它们来计算概率。
- en: After that, we will run the simulation for “size”. In our case, it is 1000.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，我们将对“size”进行模拟。在我们的例子中，它是1000。
- en: With the help of the Numpy random randint function, we will generate a number
    from 1 to 6\. The randint function requires low (inclusive) and high (exclusive)
    numbers. You can even use a random library instead of Numpy.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 利用Numpy的random randint函数，我们将生成一个从1到6的数字。randint函数需要低（包含）和高（不包含）数字。你甚至可以使用random库代替Numpy。
- en: If the random number is 6, add one to A_count (Amy) else roll again for Brad.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果随机数是6，则A_count（艾米）加一，否则布拉德再掷一次。
- en: If the B_role hits 6, add one to B_count (Brad). Else move to Amy.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果B_role掷到6，则B_count（布拉德）加一。否则，转到艾米。
- en: This cycle will run for thousand iterations, and we will collect the Amy and
    Brand winning to calculate the probability.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个循环将运行一千次，我们将收集艾米和布兰德的胜利来计算概率。
- en: To calculate the probability of Amy winning, we will divide the number of times
    Amy got 6 divided by the total winning of Amy and Brad.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了计算艾米获胜的概率，我们将把艾米掷出6的次数除以艾米和布拉德的总获胜次数。
- en: '[PRE5]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: For reproducibility purposes we will be using Numpy’s seed.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保结果的可重复性，我们将使用Numpy的种子。
- en: '[PRE6]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: As we can see, Amy has the upper hand over Brad as she starts first. She has
    a win probability of 57.5 % over 1000 iterations.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，艾米由于先开始，较布拉德更占优势。她在1000次迭代中的胜率为57.5%。
- en: Reference
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考资料
- en: Odd or Even? Determine that! | [Codewars](https://www.codewars.com/kata/619f200fd0ff91000eaf4a08/train/python)
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 奇数还是偶数？来确定一下吧！| [Codewars](https://www.codewars.com/kata/619f200fd0ff91000eaf4a08/train/python)
- en: What is the difference between a tuple and a list? | [Codecademy](https://www.codecademy.com/resources/blog/python-interview-questions-practice/)
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 元组和列表有什么区别？ | [Codecademy](https://www.codecademy.com/resources/blog/python-interview-questions-practice/)
- en: What is a lambda function? Why are they used? | [Codecademy](https://www.codecademy.com/resources/blog/python-interview-questions-practice/)
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是lambda函数？它们为什么会被使用？| [Codecademy](https://www.codecademy.com/resources/blog/python-interview-questions-practice/)
- en: Maximum 69 Number | [LeetCode](https://leetcode.com/problems/maximum-69-number/)
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最大69数字 | [LeetCode](https://leetcode.com/problems/maximum-69-number/)
- en: Who wins first? | [Leihua Ye, PhD](https://towardsdatascience.com/5-python-coding-questions-asked-at-faang-59e6cf5ba2a0)
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 谁先赢得比赛？| [Leihua Ye, PhD](https://towardsdatascience.com/5-python-coding-questions-asked-at-faang-59e6cf5ba2a0)
- en: '**[Abid Ali Awan](https://www.polywork.com/kingabzpro)** ([@1abidaliawan](https://twitter.com/1abidaliawan))
    is a certified data scientist professional who loves building machine learning
    models. Currently, he is focusing on content creation and writing technical blogs
    on machine learning and data science technologies. Abid holds a Master''s degree
    in Technology Management and a bachelor''s degree in Telecommunication Engineering.
    His vision is to build an AI product using a graph neural network for students
    struggling with mental illness.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Abid Ali Awan](https://www.polywork.com/kingabzpro)** ([@1abidaliawan](https://twitter.com/1abidaliawan))
    是一位认证的数据科学专业人士，热衷于构建机器学习模型。目前，他专注于内容创作和撰写有关机器学习和数据科学技术的技术博客。Abid拥有技术管理硕士学位和电信工程学士学位。他的愿景是利用图神经网络为那些在心理健康方面挣扎的学生构建一个AI产品。'
- en: More On This Topic
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 进一步了解此主题
- en: '[7 Data Analytics Interview Questions & Answers](https://www.kdnuggets.com/2022/09/7-data-analytics-interview-questions-answers.html)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[7个数据分析面试问题及答案](https://www.kdnuggets.com/2022/09/7-data-analytics-interview-questions-answers.html)'
- en: '[20 Questions (with Answers) to Detect Fake Data Scientists: ChatGPT…](https://www.kdnuggets.com/2023/01/20-questions-detect-fake-data-scientists-chatgpt-1.html)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[检测虚假数据科学家的20个问题（附答案）：ChatGPT…](https://www.kdnuggets.com/2023/01/20-questions-detect-fake-data-scientists-chatgpt-1.html)'
- en: '[20 Questions (with Answers) to Detect Fake Data Scientists: ChatGPT…](https://www.kdnuggets.com/2023/02/20-questions-detect-fake-data-scientists-chatgpt-2.html)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[检测虚假数据科学家的20个问题（附答案）：ChatGPT…](https://www.kdnuggets.com/2023/02/20-questions-detect-fake-data-scientists-chatgpt-2.html)'
- en: '[15 Python Coding Interview Questions You Must Know For Data Science](https://www.kdnuggets.com/2022/04/15-python-coding-interview-questions-must-know-data-science.html)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学中你必须知道的15个Python编码面试问题](https://www.kdnuggets.com/2022/04/15-python-coding-interview-questions-must-know-data-science.html)'
- en: '[SQL and Python Interview Questions for Data Analysts](https://www.kdnuggets.com/2023/02/sql-python-interview-questions-data-analysts.html)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据分析师的SQL和Python面试问题](https://www.kdnuggets.com/2023/02/sql-python-interview-questions-data-analysts.html)'
- en: '[3 Hard Python Coding Interview Questions For Data Science](https://www.kdnuggets.com/2023/03/3-hard-python-coding-interview-questions-data-science.html)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学中的3个难题Python编码面试问题](https://www.kdnuggets.com/2023/03/3-hard-python-coding-interview-questions-data-science.html)'
