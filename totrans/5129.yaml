- en: Introduction to Databases in Data Science
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据科学中的数据库介绍
- en: 原文：[https://www.kdnuggets.com/introduction-to-databases-in-data-science](https://www.kdnuggets.com/introduction-to-databases-in-data-science)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/introduction-to-databases-in-data-science](https://www.kdnuggets.com/introduction-to-databases-in-data-science)
- en: '![Introduction to Databases in Data Science](../Images/4b1f44c81c3dcc88120ea0a814ef8b2e.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![数据科学中的数据库介绍](../Images/4b1f44c81c3dcc88120ea0a814ef8b2e.png)'
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Data science involves extracting value and insights from large volumes of data
    to drive business decisions. It also involves building predictive models using
    historical data. Databases facilitate effective storage, management, retrieval,
    and analysis of such large volumes of data.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学涉及从大量数据中提取价值和洞察，以驱动业务决策。它还包括使用历史数据构建预测模型。数据库促进了对这些大量数据的有效存储、管理、检索和分析。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速开启网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你所在的组织进行IT工作'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: So, as a data scientist, you should understand the fundamentals of databases.
    Because they enable the storage and management of large and complex datasets,
    allowing for efficient data exploration, modeling, and deriving insights. Let’s
    explore this in greater detail in this article.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，作为数据科学家，你应该了解数据库的基础知识。因为它们能够存储和管理大量复杂的数据集，从而实现高效的数据探索、建模和洞察。让我们在本文中详细探讨这一点。
- en: We’ll start by discussing the *essential database skills* for data science,
    including SQL for data retrieval, database design, optimization, and much more.
    We’ll then go over the main database types, their advantages, and use cases.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从讨论数据科学的*基本数据库技能*开始，包括用于数据检索的SQL、数据库设计、优化等。然后我们将讨论主要的数据库类型、它们的优势以及使用场景。
- en: Essential Database Skills for Data Science
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据科学的基本数据库技能
- en: Database skills are essential for data scientists, as they provide the foundation
    for effective data management, analysis, and interpretation.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库技能对数据科学家至关重要，因为它们为有效的数据管理、分析和解释提供了基础。
- en: 'Here''s a breakdown of the key database skills that data scientists should
    understand:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是数据科学家应该理解的关键数据库技能的详细信息：
- en: '![Introduction to Databases in Data Science](../Images/664594cc2ae5106769a7a6b5901ca558.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![数据科学中的数据库介绍](../Images/664594cc2ae5106769a7a6b5901ca558.png)'
- en: Image by Author
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Though we’ve tried to categorize the database concepts and skills into different
    buckets, they go together. And you’d often need to know or learn them along the
    way when working on projects.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们尝试将数据库概念和技能分类到不同的类别中，但它们是相互关联的。而且你通常需要在项目中进行工作时学习或了解它们。
- en: Now let's go over each of the above.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们逐一讨论上述内容。
- en: 1\. Database Types and Concepts
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 数据库类型和概念
- en: As a data scientist, you should have a good understanding of different types
    of databases, such as relational and NoSQL databases, and their respective use
    cases.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 作为数据科学家，你应该对不同类型的数据库有一个良好的理解，例如关系型数据库和NoSQL数据库，以及它们各自的使用场景。
- en: 2\. SQL (Structured Query Language) for Data Retrieval
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. SQL（结构化查询语言）用于数据检索
- en: Proficiency in SQL achieved through practice is a must for any role in the data
    space. You should be able to write and optimize SQL queries to retrieve, filter,
    aggregate, and join data from databases.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 通过实践掌握SQL的熟练程度对于数据领域的任何角色都是必须的。你应该能够编写和优化SQL查询，以从数据库中检索、过滤、聚合和联接数据。
- en: It’s also helpful to understand query execution plans and be able to identify
    and resolve performance bottlenecks.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 理解查询执行计划并能够识别和解决性能瓶颈也是很有帮助的。
- en: 3\. Data Modeling and Database Design
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 数据建模和数据库设计
- en: Going beyond querying database tables, you should understand the basics of data
    modeling and database design, including entity-relationship (ER) diagrams, schema
    design, and data validation constraints.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 除了查询数据库表之外，你还应该理解数据建模和数据库设计的基础知识，包括实体-关系（ER）图、模式设计和数据验证约束。
- en: You should be also able to design database schemas that support efficient querying
    and data storage for analytical purposes.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你还应该能够设计支持高效查询和数据存储的数据库模式，以便于分析。
- en: 4\. Data Cleaning and Transformation
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 数据清洗和转换
- en: As a data scientist, you’ll have to preprocess and transform raw data into a
    suitable format for analysis. Databases can support data cleaning, transformation,
    and integration tasks.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 作为数据科学家，你需要将原始数据预处理和转换为适合分析的格式。数据库可以支持数据清洗、转换和集成任务。
- en: So you should know how to extract data from various sources, transform it into
    a suitable format, and load it into databases for analysis. Familiarity with ETL
    tools, scripting languages (Python, R), and data transformation techniques is
    important.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你应该知道如何从各种来源提取数据，将其转换成合适的格式，并将其加载到数据库中进行分析。熟悉ETL工具、脚本语言（Python，R）和数据转换技术很重要。
- en: 5\. Database Optimization
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. 数据库优化
- en: You should be aware of techniques to optimize database performance, such as
    creating indexes, denormalization, and using caching mechanisms.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该了解优化数据库性能的技术，例如创建索引、去范式化和使用缓存机制。
- en: To optimize database performance, indexes are used to speed up data retrieval.
    Proper indexing improves query response times by allowing the database engine
    to quickly locate the required data.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为了优化数据库性能，使用索引来加速数据检索。适当的索引通过使数据库引擎能快速定位所需数据来改善查询响应时间。
- en: 6\. Data Integrity and Quality Checks
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6\. 数据完整性和质量检查
- en: Data integrity is maintained through constraints that define rules for data
    entry. Constraints such as unique, not null, and check constraints ensure the
    accuracy and reliability of the data.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 数据完整性通过定义数据输入规则的约束来维护。像唯一约束、非空约束和检查约束这样的约束确保数据的准确性和可靠性。
- en: Transactions are used to ensure data consistency, guaranteeing that multiple
    operations are treated as a single, atomic unit.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 事务用于确保数据一致性，保证多个操作作为一个原子单位处理。
- en: 7\. Integration with Tools and Languages
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 7\. 工具和语言的集成
- en: Databases can integrate with popular analytics and visualization tools, allowing
    data scientists to analyze and present their findings effectively. So you should
    know how to connect to and interact with databases using programming languages
    like Python, and perform data analysis.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库可以与流行的分析和可视化工具集成，使数据科学家能够有效地分析和展示他们的发现。所以你应该知道如何使用像Python这样的编程语言连接和交互数据库，并进行数据分析。
- en: Familiarity with tools like Python's pandas, R, and visualization libraries
    is necessary too.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 熟悉像Python的pandas、R和可视化库等工具也很有必要。
- en: 'In summary: Understanding various database types, SQL, data modeling, ETL processes,
    performance optimization, data integrity, and integration with programming languages
    are key components of a data scientist''s skill set.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 总结：了解各种数据库类型、SQL、数据建模、ETL过程、性能优化、数据完整性以及与编程语言的集成是数据科学家技能组合的关键部分。
- en: In the remainder of this introductory guide, we’ll focus on *fundamental database
    concepts and types*.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在本简介指南的剩余部分，我们将专注于*基本的数据库概念和类型*。
- en: '![Introduction to Databases in Data Science](../Images/a68c81425c10544a58ed297fd0da21ee.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![数据科学中的数据库介绍](../Images/a68c81425c10544a58ed297fd0da21ee.png)'
- en: Image by Author
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Fundamentals of Relational Databases
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关系数据库基础
- en: Relational databases are a type of database management system (DBMS) that organize
    and store data in a structured manner using tables with rows and columns. Popular
    RDBMS include PostgreSQL, MySQL, Microsoft SQL Server, and Oracle.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 关系数据库是一种数据库管理系统（DBMS），它通过使用具有行和列的表来以结构化的方式组织和存储数据。流行的RDBMS包括PostgreSQL、MySQL、Microsoft
    SQL Server和Oracle。
- en: Let's dive into some key relational database concepts using examples.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一些示例深入了解关键的关系数据库概念。
- en: Relational Database Tables
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关系数据库表
- en: In a relational database, each *table* represents a specific **entity**, and
    the *relationships between tables* are established using **keys**.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在关系数据库中，每个*表*代表一个特定的**实体**，*表之间的关系*通过**键**建立。
- en: To understand how data is organized in relational database tables, it’s helpful
    to start with **entities** and **attributes**.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解数据如何在关系数据库表中组织，最好从**实体**和**属性**入手。
- en: 'You’ll often want to store data about objects: students, customers, orders,
    products, and the like. These objects are entities and they have attributes.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你通常会想要存储关于对象的数据：学生、客户、订单、产品等。这些对象是实体，它们有属性。
- en: 'Let’s take the example of a simple entity—a "Student" object with three attributes:
    FirstName, LastName, and Grade. When storing the data The entity becomes the database
    table, and the attributes the column names or fields. And each row is an instance
    of an entity.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以一个简单的实体为例——一个具有三个属性的“学生”对象：名字、姓氏和成绩。存储数据时，该实体变成数据库表，属性变成列名或字段。每一行是实体的一个实例。
- en: '![Introduction to Databases in Data Science](../Images/f29b4c8eb1c0cd2456fce4d608f3fb20.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![数据库在数据科学中的介绍](../Images/f29b4c8eb1c0cd2456fce4d608f3fb20.png)'
- en: Image by Author
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: 'Tables in a relational database consists of rows and columns:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 关系数据库中的表由行和列组成：
- en: The **rows** are also known as *records or tuples*, and
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**行**也被称为*记录或元组*，而且'
- en: The **columns** are referred to as *attributes or fields*.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**列**被称为*属性或字段*。'
- en: 'Here''s an example of a simple "Students" table:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个简单的“学生”表的例子：
- en: '| **StudentID** | **FirstName** | **LastName** | **Grade** |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| **学生ID** | **名字** | **姓氏** | **成绩** |'
- en: '| 1 | Jane | Smith | A+ |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 简 | 史密斯 | A+ |'
- en: '| 2 | Emily  | Brown | A |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 艾米莉 | 布朗 | A |'
- en: '| 3 | Jake | Williams | B+ |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 杰克 | 威廉姆斯 | B+ |'
- en: In this example, each row represents a student, and each column represents a
    piece of information about the student.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，每一行代表一个学生，每一列代表有关学生的信息。
- en: Understanding Keys
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解键
- en: 'Keys are used to uniquely identify rows within a table. The two important types
    of keys include:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 键用于唯一标识表中的行。两种重要的键类型包括：
- en: '**Primary Key**: A primary key uniquely identifies each row in a table. It
    ensures data integrity and provides a way to reference specific records. In the
    "Students" table, "StudentID" could be the primary key.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主键**：主键唯一标识表中的每一行。它确保数据完整性，并提供引用特定记录的方式。在“学生”表中，“学生ID”可以是主键。'
- en: '**Foreign Key**: A foreign key establishes a relationship between tables. It
    refers to the primary key of another table and is used to link related data. For
    example, if we have another table called "Courses," the "StudentID" column in
    the "Courses" table could be a foreign key referencing the "StudentID" in the
    "Students" table.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**外键**：外键建立表之间的关系。它引用另一表的主键，用于连接相关数据。例如，如果我们有一个名为“课程”的表，“课程”表中的“学生ID”列可以是一个外键，引用“学生”表中的“学生ID”。'
- en: Relationships
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关系
- en: 'Relational databases allow you to establish relationships between tables. Here
    are the most important and commonly occurring relationships:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 关系数据库允许你在表之间建立关系。这里是最重要和最常见的关系：
- en: '**One-to-One Relationship**: Under one-to-one relationship, each record in
    a table is related to one—and only one—record in another table in the database.
    For example, a "StudentDetails" table with additional information about each student
    might have a one-to-one relationship with the "Students" table.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一对一关系**：在一对一关系下，表中的每一条记录与数据库中另一表中的一条（且仅一条）记录相关。例如，一个“学生详细信息”表包含有关每个学生的附加信息，可能与“学生”表有一对一关系。'
- en: '**One-to-Many Relationship**: One record in the first table is related to multiple
    records in the second table. For instance, a "Courses" table could have a one-to-many
    relationship with the "Students" table, where each course is associated with multiple
    students.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一对多关系**：第一个表中的一个记录与第二个表中的多个记录相关。例如，一个“课程”表可以与“学生”表有一对多关系，其中每个课程与多个学生相关。'
- en: '**Many-to-Many Relationship**: Multiple records in both tables are related
    to each other. To represent this, an intermediary table, often called a junction
    or link table, is used. For example, a "StudentsCourses" table could establish
    a many-to-many relationship between students and courses.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多对多关系**：两个表中的多个记录彼此相关。为了表示这种关系，使用中介表，通常称为连接表或链接表。例如，一个“学生课程”表可以在学生和课程之间建立多对多关系。'
- en: Normalization
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 规范化
- en: Normalization (often discussed under database optimization techniques) is the
    process of organizing data in a way that *minimizes data redundancy* and improves
    data integrity. It involves breaking down large tables into smaller, related tables.
    Each table should represent a single entity or concept to avoid duplicating data.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 规范化（通常在数据库优化技术中讨论）是将数据组织成*最小化数据冗余*和提高数据完整性的过程。它涉及将大型表拆分成较小的相关表。每个表应表示一个单独的实体或概念，以避免数据重复。
- en: For instance, if we consider the "Students" table and a hypothetical "Addresses"
    table, normalization might involve creating a separate "Addresses" table with
    its own primary key and linking it to the "Students" table using a foreign key.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们考虑 "Students" 表和一个假设的 "Addresses" 表，规范化可能涉及创建一个单独的 "Addresses" 表，并将其主键与
    "Students" 表通过外键关联。
- en: Advantages and Limitations of Relational Databases
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关系型数据库的优点和限制。
- en: 'Here are some advantages of relational databases:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 关系型数据库的一些优点如下：
- en: Relational databases provide a structured and organized way to store data, making
    it easy to define relationships between different types of data.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关系型数据库提供了一种结构化且有序的方式来存储数据，使得定义不同类型数据之间的关系变得容易。
- en: They support ACID properties (Atomicity, Consistency, Isolation, Durability)
    for transactions, ensuring that data remains consistent.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们支持 ACID 属性（原子性、一致性、隔离性、持久性）以确保事务的数据一致性。
- en: 'On the flip side, they have the following limitations:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，它们有以下限制：
- en: Relational databases have challenges with horizontal scalability, making it
    challenging to handle massive amounts of data and high traffic loads.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关系型数据库在横向扩展方面存在挑战，使得处理大量数据和高流量负载变得困难。
- en: They also require a rigid schema, making it challenging to accommodate changes
    in data structure without modifying the schema.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们还需要一个严格的模式，使得在不修改模式的情况下适应数据结构的变化变得具有挑战性。
- en: Relational databases are designed for structured data with well-defined relationships.
    They may not be well-suited for storing unstructured or semi-structured data like
    documents, images, and multimedia content.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关系型数据库专为具有明确定义关系的结构化数据设计。它们可能不适合存储像文档、图像和多媒体内容这样的非结构化或半结构化数据。
- en: Exploring NoSQL Databases
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 NoSQL 数据库。
- en: NoSQL databases *do not* store data in tables in the familiar row-column format
    (so are non-relational). The term "NoSQL" stands for "not only SQL"—indicating
    that these databases differ from the traditional relational database model.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: NoSQL 数据库*不*以熟悉的行列格式存储数据（因此是非关系型的）。"NoSQL" 代表 "not only SQL"——表明这些数据库与传统的关系型数据库模型不同。
- en: The key advantages of NoSQL databases are their **scalability** and **flexibility**.
    These databases are designed to handle large volumes of unstructured or semi-structured
    data and provide more flexible and scalable solutions compared to traditional
    relational databases.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: NoSQL 数据库的主要优点是其**可扩展性**和**灵活性**。这些数据库旨在处理大量非结构化或半结构化数据，并提供比传统关系型数据库更灵活和可扩展的解决方案。
- en: 'NoSQL databases encompass a variety of database types that differ in their
    data models, storage mechanisms, and query languages. Some common categories of
    NoSQL databases include:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: NoSQL 数据库涵盖了多种不同的数据模型、存储机制和查询语言的数据库类型。一些常见的 NoSQL 数据库类别包括：
- en: Key-value stores
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 键值存储。
- en: Document databases
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档数据库。
- en: Column-family databases
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列族数据库。
- en: Graph databases.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图形数据库。
- en: Now, let's go over each of the NoSQL database categories, exploring their characteristics,
    use cases, and examples, advantages, and limitations.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们逐一探讨每种 NoSQL 数据库类别，深入了解它们的特性、使用案例、示例、优点和限制。
- en: Key-Value Stores
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 键值存储。
- en: '**Key-value stores** store data as simple **pairs of keys and values**. They
    are optimized for high-speed read and write operations. They are suitable for
    applications such as caching, session management, and real-time analytics.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**键值存储**将数据存储为简单的**键值对**。它们优化了高速读写操作，适用于缓存、会话管理和实时分析等应用。'
- en: These databases, however, have limited querying capabilities beyond key-based
    retrieval. So they’re not suitable for complex relationships.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这些数据库在键值检索之外的查询能力有限。因此，它们不适合处理复杂关系。
- en: Amazon DynamoDB and  Redis are popular key-value stores.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊 DynamoDB 和 Redis 是流行的键值存储。
- en: Document Databases
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文档数据库。
- en: '**Document databases** store data in document formats such as JSON and BSON.
    Each document can have varying structures, allowing for nested and complex data.
    Their flexible schema allows easy handling of semi-structured data, supporting
    evolving data models and hierarchical relationships.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**文档数据库**以文档格式（如 JSON 和 BSON）存储数据。每个文档可以具有不同的结构，允许嵌套和复杂数据。其灵活的模式允许轻松处理半结构化数据，支持不断发展的数据模型和层次关系。'
- en: These are particularly well-suited for content management, e-commerce platforms,
    catalogs, user profiles, and applications with changing data structures. Document
    databases may not be as efficient for complex joins or complex queries involving
    multiple documents.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数据库特别适合用于内容管理、电子商务平台、目录、用户档案和具有变化的数据结构的应用程序。文档数据库可能不适合复杂的连接或涉及多个文档的复杂查询。
- en: MongoDB and Couchbase are popular document databases.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB 和 Couchbase 是流行的文档数据库。
- en: Column-Family Stores (Wide-Column Stores)
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 列族存储（宽列存储）
- en: '**Column-family stores**, also known as columnar databases or column-oriented
    databases, are a type of NoSQL database that organizes and stores data in a column-oriented
    fashion rather than the traditional row-oriented manner of relational databases.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**列族存储**，也称为列式数据库或列导向数据库，是一种 NoSQL 数据库，按列而非传统的行方式组织和存储数据。'
- en: Column-family stores are suitable for analytical workloads that involve running
    complex queries on large datasets. Aggregations, filtering, and data transformations
    are often performed more efficiently in column-family databases. They’re helpful
    for managing large amounts of semi-structured or sparse data.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 列族存储适用于涉及在大型数据集上运行复杂查询的分析工作负载。聚合、过滤和数据转换在列族数据库中通常执行得更高效。它们有助于管理大量半结构化或稀疏数据。
- en: Apache Cassandra, ScyllaDB, and HBase are some column-family stores.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Apache Cassandra、ScyllaDB 和 HBase 是一些列族存储的例子。
- en: Graph Databases
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图数据库
- en: '**Graph databases** model data and relationships in nodes and edges, respectively.
    to represent complex relationships. These databases support efficient handling
    of complex relationships and powerful graph query languages.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**图数据库**分别通过节点和边建模数据和关系，以表示复杂的关系。这些数据库支持高效处理复杂关系和强大的图查询语言。'
- en: As you can guess, these databases are suitable for social networks, recommendation
    engines, knowledge graphs, and in general, data with intricate relationships.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所猜测的，这些数据库适用于社交网络、推荐引擎、知识图谱以及一般的复杂关系数据。
- en: Examples of popular graph databases are Neo4j and Amazon Neptune.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 流行的图数据库例子包括 Neo4j 和 Amazon Neptune。
- en: '**There are many NoSQL database types. So how do we decide which one to use?**
    *Well. The answer is: it depends. *'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**NoSQL 数据库有很多种类型。那么我们该如何决定使用哪一种呢？** *答案是：这要看情况。*'
- en: Each category of NoSQL database offers unique features and benefits, making
    them suitable for specific use cases. It's important to choose the appropriate
    NoSQL database by factoring in access patterns, scalability requirements, and
    performance considerations.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 每种 NoSQL 数据库类别都提供了独特的功能和优势，使它们适合特定的使用场景。选择合适的 NoSQL 数据库时，必须考虑访问模式、可扩展性要求和性能考虑。
- en: 'To sum up: NoSQL databases offer advantages in terms of flexibility, scalability,
    and performance, making them suitable for a wide range of applications, including
    big data, real-time analytics, and dynamic web applications. However, they come
    with trade-offs in terms of data consistency.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 总结：NoSQL 数据库在灵活性、可扩展性和性能方面提供了优势，使其适用于各种应用程序，包括大数据、实时分析和动态网页应用。然而，它们在数据一致性方面存在权衡。
- en: Advantages and Limitations of NoSQL Databases
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NoSQL 数据库的优缺点
- en: 'The following are some advantages of NoSQL databases:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 NoSQL 数据库的一些优势：
- en: NoSQL databases are designed for horizontal scalability, allowing them to handle
    massive amounts of data and traffic.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NoSQL 数据库设计用于水平扩展，允许它们处理大量的数据和流量。
- en: These databases allow for flexible and dynamic schemas. They have flexible data
    models to accommodate various data types and structures, making them well-suited
    for unstructured or semi-structured data.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些数据库允许灵活和动态的模式。它们具有灵活的数据模型，以适应各种数据类型和结构，使其非常适合非结构化或半结构化数据。
- en: Many NoSQL databases are designed to operate in distributed and fault-tolerant
    environments, providing high availability even in the presence of hardware failures
    or network outages.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多NoSQL数据库被设计为在分布式和容错环境中运行，即使在硬件故障或网络中断的情况下，也能提供高可用性。
- en: They can handle unstructured or semi-structured data, making them suitable for
    applications dealing with diverse data types.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们可以处理非结构化或半结构化数据，使其适用于处理各种数据类型的应用程序。
- en: 'Some limitations include:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 一些限制包括：
- en: NoSQL databases prioritize scalability and performance over strict ACID compliance.
    This can result in eventual consistency and may not be suitable for applications
    that require strong data consistency.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NoSQL数据库优先考虑可扩展性和性能，而不是严格的ACID合规性。这可能导致最终一致性，并可能不适用于需要强数据一致性的应用程序。
- en: Because NoSQL databases come in various flavors with different APIs and data
    models, the lack of standardization can make it challenging to switch between
    databases or integrate them seamlessly.
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于NoSQL数据库有多种类型，提供不同的API和数据模型，缺乏标准化可能会使得在不同数据库之间切换或无缝集成变得具有挑战性。
- en: It's important to note that NoSQL databases are not a one-size-fits-all solution.
    The choice between a NoSQL and a relational database depends on the specific needs
    of your application, including data volume, query patterns, and scalability requirements
    amongst others.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，NoSQL数据库并不是一种通用的解决方案。选择NoSQL数据库还是关系型数据库取决于应用程序的具体需求，包括数据量、查询模式和可扩展性要求等。
- en: Relational vs. NoSQL Databases
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关系型数据库与NoSQL数据库
- en: 'Let’s sum up the differences we’ve discussed thus far:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们总结一下迄今为止讨论的区别：
- en: '| **Feature** | **Relational Databases** | **NoSQL Databases** |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| **特性** | **关系型数据库** | **NoSQL数据库** |'
- en: '| **Data Model ** | Tabular structure (tables)  | Diverse data models (documents,
    key-value pairs, graphs, columns, etc.) |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| **数据模型** | 表格结构（表） | 多样的数据模型（文档、键值对、图形、列等） |'
- en: '| **Data Consistency ** | Strong consistency             | Eventual consistency 
    |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| **数据一致性** | 强一致性             | 最终一致性 |'
- en: '| **Schema**          | Well-defined schema   | Flexible or schema-less  |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| **模式**          | 定义良好的模式   | 灵活或无模式 |'
- en: '| **Data Relationships ** | Supports complex relationships | Varies by type
    (limited or explicit relationships) |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| **数据关系** | 支持复杂关系 | 根据类型而异（有限或显式关系） |'
- en: '| **Query Language** | SQL-based queries | Specific query language or APIs
    |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| **查询语言** | 基于SQL的查询 | 特定的查询语言或API |'
- en: '| **Flexibility** | Not as flexible for unstructured data | Suited for diverse
    data types, including  |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| **灵活性** | 对非结构化数据不够灵活 | 适用于各种数据类型，包括 |'
- en: '| **Use Cases**                         | Well-structured data, complex transactions
    | Large-scale, high-throughput, real-time applications |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| **应用场景**                         | 结构良好的数据、复杂的事务 | 大规模、高吞吐量、实时应用 |'
- en: A Note on Time Series Databases
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于时间序列数据库的说明
- en: As a data scientist, you’ll also work with time series data. Time series databases
    are also non-relational databases, but have a more specific use case.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 作为数据科学家，你也将处理时间序列数据。时间序列数据库也是非关系型数据库，但具有更具体的使用场景。
- en: They need to support storing, managing, and querying *timestamped data points*—data
    points that are recorded over time—such as sensor readings and stock prices. They
    offer specialized features for storing, querying, and analyzing time-based data
    patterns.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 它们需要支持存储、管理和查询*带时间戳的数据点*——即随时间记录的数据点——例如传感器读数和股票价格。它们提供了存储、查询和分析基于时间的数据模式的专用功能。
- en: Some examples of time series databases include InfluxDB, QuestDB, and TimescaleDB.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 一些时间序列数据库的例子包括InfluxDB、QuestDB和TimescaleDB。
- en: Conclusion
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this guide, we went over relational and NoSQL databases. It’s also worth
    noting that you can explore a few more databases beyond popular relational and
    NoSQL types. NewSQL databases such as CockroachDB provide the traditional benefits
    of SQL databases while providing the scalability and performance of NoSQL databases.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在本指南中，我们讨论了关系型数据库和NoSQL数据库。值得注意的是，除了流行的关系型和NoSQL类型外，你还可以探索一些其他数据库。新SQL数据库如CockroachDB提供了传统SQL数据库的好处，同时提供了NoSQL数据库的可扩展性和性能。
- en: You can also use an in-memory database that stores and manages data primarily
    in the main memory (RAM) of a computer, as opposed to traditional databases that
    store data on disk. This approach offers significant performance benefits due
    to the much faster read and write operations that can be performed in memory compared
    to disk storage.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用内存数据库，该数据库主要在计算机的主内存（RAM）中存储和管理数据，而不是传统的将数据存储在磁盘上的数据库。这种方法由于内存中的读写操作比磁盘存储要快得多，因此提供了显著的性能优势。
- en: '**[Bala Priya C](https://www.linkedin.com/in/bala-priya/)** is a developer
    and technical writer from India. She likes working at the intersection of math,
    programming, data science, and content creation. Her areas of interest and expertise
    include DevOps, data science, and natural language processing. She enjoys reading,
    writing, coding, and coffee! Currently, she''s working on learning and sharing
    her knowledge with the developer community by authoring tutorials, how-to guides,
    opinion pieces, and more.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Bala Priya C](https://www.linkedin.com/in/bala-priya/)** 是一位来自印度的开发者和技术作家。她喜欢在数学、编程、数据科学和内容创作的交汇点上工作。她的兴趣和专长领域包括DevOps、数据科学和自然语言处理。她喜欢阅读、写作、编码和喝咖啡！目前，她正在通过撰写教程、操作指南、观点文章等，学习并与开发者社区分享她的知识。'
- en: More On This Topic
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 了解更多相关主题
- en: '[Introduction to Databases with SQL: Free Harvard Course](https://www.kdnuggets.com/introduction-to-databases-with-sql-free-harvard-course)'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQL数据库入门：免费哈佛课程](https://www.kdnuggets.com/introduction-to-databases-with-sql-free-harvard-course)'
- en: '[From Oracle to Databases for AI: The Evolution of Data Storage](https://www.kdnuggets.com/2022/02/oracle-databases-ai-evolution-data-storage.html)'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[从Oracle到AI数据库：数据存储的演变](https://www.kdnuggets.com/2022/02/oracle-databases-ai-evolution-data-storage.html)'
- en: '[Key-Value Databases, Explained](https://www.kdnuggets.com/2021/04/nosql-explained-understanding-key-value-databases.html)'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[键值数据库的解释](https://www.kdnuggets.com/2021/04/nosql-explained-understanding-key-value-databases.html)'
- en: '[NoSQL Databases and Their Use Cases](https://www.kdnuggets.com/2023/03/nosql-databases-cases.html)'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[NoSQL数据库及其使用案例](https://www.kdnuggets.com/2023/03/nosql-databases-cases.html)'
- en: '[Semantic Search with Vector Databases](https://www.kdnuggets.com/semantic-search-with-vector-databases)'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用向量数据库进行语义搜索](https://www.kdnuggets.com/semantic-search-with-vector-databases)'
- en: '[A Guide to Working with SQLite Databases in Python](https://www.kdnuggets.com/a-guide-to-working-with-sqlite-databases-in-python)'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在Python中使用SQLite数据库的指南](https://www.kdnuggets.com/a-guide-to-working-with-sqlite-databases-in-python)'
