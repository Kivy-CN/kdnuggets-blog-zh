- en: 'OpenAI API for Beginners: Your Easy-to-Follow Starter Guide'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/openai-api-for-beginners-your-easy-to-follow-starter-guide](https://www.kdnuggets.com/openai-api-for-beginners-your-easy-to-follow-starter-guide)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![OpenAI API for Beginners: Your Easy-to-Follow Starter Guide](../Images/021a5da7a465edbf5875ee405087c7a4.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: In this tutorial, we will learn how to set up and use the OpenAI API for various
    use cases. The tutorial is designed to be easy to follow, even for those with
    limited knowledge of Python programming. We'll explore how anyone can generate
    responses and access high-quality large language models.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: What is OpenAI API?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The [OpenAI API](https://platform.openai.com/docs/api-reference) allows developers
    to easily access a wide range of AI models developed by OpenAI. It provides a
    user-friendly interface that enables developers to incorporate intelligent features
    powered by state-of-the-art OpenAI models into their applications. The API can
    be used for various purposes, including text generation, multi-turn chat, embeddings,
    transcription, translation, text-to-speech, image understanding, and image generation.
    Additionally, the API is compatible with curl, Python, and Node.js.
  prefs: []
  type: TYPE_NORMAL
- en: Getting Started
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To get started with OpenAI API, you first need to create an account on openai.com.
    Previously, every user was given free credit, but now new users are required to
    purchase credit.
  prefs: []
  type: TYPE_NORMAL
- en: To purchase credit, go to "Settings," then "Billing," and finally, "Add Payment
    Details." Enter your debit or credit card information, and make sure to disable
    auto-recharge. Once you have loaded 10 USD, you can use it for a year.
  prefs: []
  type: TYPE_NORMAL
- en: '![OpenAI API for Beginners: Your Easy-to-Follow Starter Guide](../Images/ea264965f22c6490108bef701130530f.png)'
  prefs: []
  type: TYPE_IMG
- en: Let's create the API key by navigating to "API keys" and selecting "Create new
    secret key". Give it a name and click on "Create secret key".
  prefs: []
  type: TYPE_NORMAL
- en: '![OpenAI API for Beginners: Your Easy-to-Follow Starter Guide](../Images/50d633090807549f244b93d4049f87ab.png)'
  prefs: []
  type: TYPE_IMG
- en: Copy the API and create an Environment variable at the local machine.
  prefs: []
  type: TYPE_NORMAL
- en: '![OpenAI API for Beginners: Your Easy-to-Follow Starter Guide](../Images/c730df59442728c580c8c89e93bbd8e7.png)'
  prefs: []
  type: TYPE_IMG
- en: I use Deepnote as my IDE. It's easy to create environment variables. Simply
    go to "Integration", select "create environment variable", provide a name and
    value for the key, and create the integration.
  prefs: []
  type: TYPE_NORMAL
- en: '![OpenAI API for Beginners: Your Easy-to-Follow Starter Guide](../Images/a05f1b4871e59a0117b519c91f79479c.png)'
  prefs: []
  type: TYPE_IMG
- en: Next, we will Install the OpenAI Python package using pip.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: We will now create a client that can access various types of models globally.
  prefs: []
  type: TYPE_NORMAL
- en: If you have set your environment variable with the name "OPENAI_API_KEY", you
    don't need to provide the OpenAI client with an API key.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Please note that you should only provide an API key if the name of your environment
    variable is different from the default one.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Text Generation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will use a legacy function to generate the response. The completion function
    requires the model name, prompt, and other arguments to generate the reply.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The GPT3.5 model have generate amazing story about Elon Musk.
  prefs: []
  type: TYPE_NORMAL
- en: '![OpenAI API for Beginners: Your Easy-to-Follow Starter Guide](../Images/b2d256b1e9d6e85121adba06d323ae2a.png)'
  prefs: []
  type: TYPE_IMG
- en: We can also stream our response by providing an extra argument `stream`.
  prefs: []
  type: TYPE_NORMAL
- en: Instead of waiting for the complete response, the stream feature enables processing
    of output as soon as it's generated. This approach helps to reduce perceived latency
    by returning the output of the language model token by token rather than all at
    once.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![OpenAI API for Beginners: Your Easy-to-Follow Starter Guide](../Images/bc02fedc69d47a0fa9f1bfa413f6ff3d.png)'
  prefs: []
  type: TYPE_IMG
- en: Chat
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The model used API chat completion. Before generating the response, let’s explore
    the available models.
  prefs: []
  type: TYPE_NORMAL
- en: You can view the list of all models available or read the [Models](https://platform.openai.com/docs/models/models)
    page on the official documentation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![OpenAI API for Beginners: Your Easy-to-Follow Starter Guide](../Images/0a76d73eba063f0bb6a9a124118e8ba9.png)'
  prefs: []
  type: TYPE_IMG
- en: We will use the latest version of GPT-3.5 and provide it with a list of a dictionary
    for system prompts and user messages. Make sure to follow the same message pattern.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: As we can see, we have generated a similar result as the legacy API. So, why
    use this API? Next, we will learn why the chat completion API is more flexible
    and easier to use.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: We will now learn how to have a multi-turn conversation with our AI model. To
    do this, we will add the assistant's response to the previous conversation and
    also include the new prompt in the same message format. After that, we will provide
    a list of dictionaries to the chat completion function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: The model has understood the context and summarized the feature engineering
    for us.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Embeddings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To develop advanced applications, we need to convert text into embeddings. These
    embeddings are used for similarity search, semantic search, and recommendation
    engines. We can generate embeddings by providing the API text and model name.
    It’s that simple.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Audio
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, we can convert text to speech, speech to text, and also translate it using
    audio API.
  prefs: []
  type: TYPE_NORMAL
- en: Transcriptions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will be using the [Wi-Fi 7 Will Change Everything](https://www.youtube.com/watch?v=JqQAFodjYBk)
    YouTube video and convert it into mp3\. After that, we will open the file and
    provide it to the audio transcript API.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: The Whisper model is amazing. It has a perfect transcript the the audio.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Translation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We can also transcribe the English audio into another language. In our case,
    we will be converting it into Urdu language. We will just make add another argument
    `language` and provide it with ISO language code “ur”.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: The translation for non-Latin languages is imperfect, but usable for a minimum
    viable product.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Text to Speech
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To convert your text into natural-sounding audio, we will use speech API and
    provide it with the model name, voice actor name, and input text. Next, we will
    save the audio file to our “Data” folder.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: To listen to the audio file within the Deepnote Notebook, we will use the IPython
    Audio function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '![OpenAI API for Beginners: Your Easy-to-Follow Starter Guide](../Images/e65d6c6451c0e36e20a91c8273cbc54b.png)'
  prefs: []
  type: TYPE_IMG
- en: Vision
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The OpenAI API provides users with access to a multimodal model through the
    chat completion function. To comprehend images, we can use the latest GPT-4 vision
    model.
  prefs: []
  type: TYPE_NORMAL
- en: In the message argument, we have provided a prompt for asking questions about
    the image and the image URL. The image is sourced from [Pixabay](https://www.pexels.com/photo/man-carrying-yoke-with-rice-grains-235731/).
    Please ensure that you follow the same message format to avoid any errors.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: The output perfectly explain the image.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Instead of providing an image URL, we can also load a local image file and provide
    it to the chat completion API. To do this, we first need to download the image
    by [Manjeet Singh Yadav](https://www.pexels.com/photo/woman-in-white-and-yellow-dress-with-scarf-1162983/)
    from pexels.com.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Then, we will load the image and encode in base64 format.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Instead of providing the image URL, we will provide the metadata and the image’s
    base64 string.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: The model has successfully analyzed the image and provided a detailed explanation
    about it.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Image Generation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can also generate images using the DALLE-3 model. We just have to provide
    model name, prompt, size, quality, and number of images to the images API.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: The generated image is saved online, and you can download it to view it locally.
    To do this, we will download the image with the `request` function, providing
    the image URL and the local directory where you want to save it. After that, we
    will use the Pillow library's Image function to open and show the image.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: We have received a high-quality generated image. It is simply amazing!
  prefs: []
  type: TYPE_NORMAL
- en: '![OpenAI API for Beginners: Your Easy-to-Follow Starter Guide](../Images/1be884980ebdab56db6670e67b1a2b41.png)'
  prefs: []
  type: TYPE_IMG
- en: If you are struggling to run any of the OpenAI Python APIs, feel free to check
    out my project on [Deepnote](https://deepnote.com/workspace/abid-5efa63e7-7029-4c3e-996f-40e8f1acba6f/project/OpenAI-API-for-Beginners-Your-Easy-to-Follow-Starter-Guide-9cef53b4-f44b-4d76-a6db-ace4702d282f/notebook/Notebook%201-e4ce532b1e97425ba1e69a4d3de695c2).
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I've been experimenting with OpenAPI for some time now, and we ended up using
    only 0.22 dollars in credit, which I find quite affordable. With my guide, even
    beginners can start building their own AI applications. It's a simple process
    - you don't have to train your own model or deploy it. You can access state-of-the-art
    models using the API, which is continually improving with each new release.
  prefs: []
  type: TYPE_NORMAL
- en: '![OpenAI API for Beginners: Your Easy-to-Follow Starter Guide](../Images/7fc211d6a7e26296e2db2236a81d6a26.png)'
  prefs: []
  type: TYPE_IMG
- en: In this guide, we cover how to set up the OpenAI Python API and generate simple
    text responses. We also learn about multiturn chat, embeddings, transcription,
    translation, text-to-speech, vision, and image generation APIs.
  prefs: []
  type: TYPE_NORMAL
- en: Do let me know If you want me to use these APIs to build an advanced AI application.
  prefs: []
  type: TYPE_NORMAL
- en: Thank you for reading.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://www.polywork.com/kingabzpro)****[Abid Ali Awan](https://www.polywork.com/kingabzpro)****
    ([@1abidaliawan](https://www.linkedin.com/in/1abidaliawan)) is a certified data
    scientist professional who loves building machine learning models. Currently,
    he is focusing on content creation and writing technical blogs on machine learning
    and data science technologies. Abid holds a Master''s degree in technology management
    and a bachelor''s degree in telecommunication engineering. His vision is to build
    an AI product using a graph neural network for students struggling with mental
    illness.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Free ChatGPT Course: Use The OpenAI API to Code 5 Projects](https://www.kdnuggets.com/2023/05/free-chatgpt-course-openai-api-code-5-projects.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[OpenAI’s Whisper API for Transcription and Translation](https://www.kdnuggets.com/2023/06/openai-whisper-api-transcription-translation.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Exploring the OpenAI API with Python](https://www.kdnuggets.com/exploring-the-openai-api-with-python)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Starter Guide to Data Structures for AI and Machine Learning](https://www.kdnuggets.com/guide-data-structures-ai-and-machine-learning)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Supercharge Your AI Journey! Join Uplimit''s Free Building AI…](https://www.kdnuggets.com/2024/01/uplimit-supercharge-your-ai-journey-openai-course)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Best Instagram Accounts to Follow for Data Science, Machine Learning & AI](https://www.kdnuggets.com/2022/08/best-instagram-accounts-follow-data-science-machine-learning-ai.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
