- en: Artificial Neural Network Implementation using NumPy and Image Classification
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/02/artificial-neural-network-implementation-using-numpy-and-image-classification.html](https://www.kdnuggets.com/2019/02/artificial-neural-network-implementation-using-numpy-and-image-classification.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](/2019/02/artificial-neural-network-implementation-using-numpy-and-image-classification.html?page=2#comments)'
  prefs: []
  type: TYPE_IMG
- en: '![](../Images/5f757b54b8113b34e602f5c2cef47590.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This tutorial builds artificial neural network in Python using NumPy from scratch
    in order to do an image classification application for the Fruits360 dataset.
    Everything (i.e. images and source codes) used in this tutorial, rather than the
    color Fruits360 images, are exclusive rights for my book cited as ***"Ahmed Fawzy
    Gad ''Practical Computer Vision Applications Using Deep Learning with CNNs''.
    Dec. 2018, Apress, 978-1-4842-4167-7 "***. The book is available at Springer at
    this link: [https://springer.com/us/book/9781484241660](https://springer.com/us/book/9781484241660)
    .'
  prefs: []
  type: TYPE_NORMAL
- en: 'The source code used in this tutorial is available in my GitHub page here:
    [https://github.com/ahmedfgad/NumPyANN](https://github.com/ahmedfgad/NumPyANN)'
  prefs: []
  type: TYPE_NORMAL
- en: The example being used in the book is about classification of the Fruits360
    image dataset using artificial neural network (ANN). The example does not assume
    that the reader neither extracted the features nor implemented the ANN as it discusses
    what the suitable set of features for use are and also how to implement the ANN
    in NumPy from scratch. The Fruits360 dataset has 60 classes of fruits such as
    apple, guava, avocado, banana, cherry, dates, kiwi, peach, and more. For making
    things simpler, it just works on 4 selected classes which are apple Braeburn,
    lemon Meyer, mango, and raspberry. Each class has around 491 images for training
    and another 162 for testing. The image size is 100x100 pixels.
  prefs: []
  type: TYPE_NORMAL
- en: Feature Extraction
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The book starts by selecting the suitable set of features in order to achieve
    the highest classification accuracy. Based on the sample images from the 4 selected
    classes shown below, it seems that their color is different. This is why the color
    features are suitable ones for use in this task.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5144782453ae88a2f3f04a8244732c5f.png)'
  prefs: []
  type: TYPE_IMG
- en: The RGB color space does not isolates color information from other types of
    information such as illumination. Thus, if the RGB is used for representing the
    images, the 3 channels will be involved in the calculations. For such a reason,
    it is better to use a color space that isolates the color information into a single
    channel such as HSV. The color channel in this case is the hue channel (H). The
    next figure shows the hue channel of the 4 samples presented previously. We can
    notice how the hue value for each image is different from the other images.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/95d2d57c5c54bab7efe5c74f5d9c5d5f.png)'
  prefs: []
  type: TYPE_IMG
- en: The hue channel size is still 100x100\. If the entire channel is applied to
    the ANN, then the input layer will have 10,000 neurons. The network is still huge.
    In order to reduce the amounts of data being used, we can use the histogram for
    representing the hue channel. The histogram will have 360 bins reflecting the
    number of possible values for the hue value. Here are the histograms for the 4
    sample images. Using a 360 bins histogram for the hue channel, it seems that every
    fruit votes to some specific bins of the histogram. There is less overlap among
    the different classes compared to using any channel from the RGB color space.
    For example, the bins in the apple histogram range from 0 to 10 compared to mango
    with its bins range from 90 to 110\. The margin between each of the classes makes
    it easier to reduce the ambiguity in classification and thus increasing the prediction
    accuracy.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6e96815abd2c84e2d0d8b6e32f3d197c.png)'
  prefs: []
  type: TYPE_IMG
- en: Here is the code that calculates the hue channel histogram from the 4 images.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: By looping through all images in the 4 image classes used, we can extract the
    features from all images. The next code does this. According to the number of
    images in the 4 classes (1,962) and the feature vector length extracted from each
    image (360), a NumPy array of zeros is created and saved in the **dataset_features**
    variable. In order to store the class label for each image, another NumPy array
    named **outputs** is created. The class label for apple is 0, lemon is 1, mango
    is 2, and raspberry is 3\. The code expects that it runs in a root directory in
    which there are 4 folders named according to the fruits names listed in the list
    named **fruits**. It loops through all images in all folders, extract the hue
    histogram from each of them, assign each image a class label, and finally saves
    the extracted features and the class labels using the pickle library. You can
    also use NumPy for saving the resultant NumPy arrays rather than pickle.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Currently, each image is represented using a feature vector of 360 elements.
    Such elements are filtered in order to just keep the most relevant elements for
    differentiating the 4 classes. The reduced feature vector length is 102 rather
    than 360\. Using less elements helps to do faster training than before. The **dataset_features**
    variable shape will be **1962x102**. You can read more in the book for reducing
    the feature vector length.
  prefs: []
  type: TYPE_NORMAL
- en: Up to this point, the training data (features and class labels) are ready. Next
    is implement the ANN using NumPy.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Best ETL Tools in 2021](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Write Clean Python Code Using Pipes](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Image Classification with Convolutional Neural Networks (CNNs)](https://www.kdnuggets.com/2022/05/image-classification-convolutional-neural-networks-cnns.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
