["```py\na = 2\nb = \"Hello!\"\n```", "```py\nclf = RandomForestClassifier()\nclf.fit(X,y)\n```", "```py\nRFCFit\nRFCPredict\nSVCFit\nSVCPredict\nLRFit\nLRPredict and so on.\n```", "```py\nclass myClass:\n    def __init__(self, a, b):\n        self.a = a\n        self.b = b    def somefunc(self, arg1, arg2):\n        #SOME CODE HERE\n```", "```py\nclass Account:\n    def __init__(self, account_name, balance=0):\n        self.account_name = account_name\n        self.balance = balance\n\n    def deposit(self, amount):\n        self.balance += amount\n\n    def withdraw(self,amount):\n        if amount <= self.balance:\n            self.balance -= amount\n        else:\n            print(\"Cannot Withdraw amounts as no funds!!!\")\n```", "```py\nmyAccount = Account(\"Rahul\",100)\n```", "```py\nclass iPhone:\n    def __init__(self, memory, user_id):\n         self.memory = memory\n         self.mobile_id = user_id\n    def call(self, contactNum):\n         # Some Implementation Here\n```", "```py\nclass iPhone1:\n    **def __init__(self, memory, user_id):\n         self.memory = memory\n         self.mobile_id = user_id**\n         self.pics = []    **def call(self, contactNum):\n         # Some Implementation Here**    def click_pic(self):\n         # Some Implementation Here\n         pic_taken = ...\n         self.pics.append(pic_taken)\n```", "```py\nClass iPhone1(**iPhone**):\n    def __init__(self,**memory,user_id**):\n         **super().__init__(memory,user_id)**\n         self.pics = []\n    def click_pic(self):\n         # Some Implementation Here\n         pic_taken = ...\n         self.pics.append(pic_taken)\n```", "```py\nclass myNeuralNet(nn.Module):    def __init__(self):\n        **super().__init__()**\n        # Define all your Layers Here\n        self.lin1 = nn.Linear(784, 30)\n        self.lin2 = nn.Linear(30, 10)    def forward(self, x):\n        # Connect the layer Outputs here to define the forward pass\n        x = self.lin1(x)\n        x = self.lin2(x)\n        return x\n```", "```py\nimport mathclass Shape3d:\n    def __init__(self, name):\n        self.name = name    def surfaceArea(self):\n        pass\n\n    def volume(self):\n        pass\n\n    def getName(self):\n        return self.name\n\nclass Cuboid():\n    passclass Cube():\n    pass\n\nclass Sphere():\n    pass\n```"]