["```py\nimport pandas as pd\n\nimport numpy as np\n\nplanetinfo = pd.Series(data=[12750, 6800, 142800, 120660],\n                       index=[\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"])\n\nplanetinfo\n```", "```py\ndef km_to_miles(data):\n  return 0.621371 * data\n\nprint(planetinfo.apply(km_to_miles))\n```", "```py\nstudentinfo=pd.DataFrame({'STUDENT_NAME':[\"MarkDavis\",\"PriyaSingh\",\"KimNaamjoon\",\"TomKozoyed\",\"TommyWalker\"],\n                         \"ACADEMIC_STANDING\":[\"Good\",\"Warning\",\"Probabtion\",\"Suspension\",\"Warning\"],\n                         \"ATTENDANCE_PERCENTAGE\":[0.8,0.75,0.25,0.12,0.30],\n                         \"MID_TERM_GRADE\": [\"A+\",\"B-\",\"D+\",\"D-\",\"F\"]})\n\nstudentinfo\n```", "```py\ndef datacheck(data):\n  if data.isalpha():\n   return True\n  else:\n   return False\n```", "```py\nstudentinfo[\"IS_ALPHABET\"] = studentinfo[\"STUDENT_NAME\"].apply(datacheck)\nstudentinfo\n```", "```py\ndef reduce_cardinality(data):\n  if data != \"Good\":\n   return \"ACADEMIC_STANDING_BAD\"\n  else:\n   return \"ACADEMIC_STANDING_GOOD\"\n```", "```py\nstudentinfo[\"ACADEMIC_STANDING\"]=studentinfo[\"ACADEMIC_STANDING\"].apply(reduce_cardinality)\n\nstudentinfo\n```", "```py\ndef reduce_cardinality_grade(data):\n  if data.startswith('A'):\n   return \"Corhigher\"\n  elif data.startswith('B'):\n   return \"Corhigher\"\n  elif data.startswith('C'):\n   return \"Corhigher\"\n  else:\n   return \"Dorlower\"\n```", "```py\nstudentinfo[\"MID_TERM_GRADE\"]=studentinfo[\"MID_TERM_GRADE\"].apply(reduce_cardinality_grade)\n\nstudentinfo\n```", "```py\ndef check(data):\n  if (data[\"ATTENDANCE_PERCENTAGE\"] >= 0.6) and (data[\"MID_TERM_GRADE\"] == \"Corhigher\"):\n   return \"High_Chance_Of_Passing\"\n  elif (data[\"ATTENDANCE_PERCENTAGE\"] < 0.6) and (data[\"MID_TERM_GRADE\"] == \"Dorlower\"):\n   return \"Low_Chance_Of_Passing\"\n```", "```py\nstudentinfo[\"FINAL_GRADE_STATUS\"]=studentinfo[[\"ATTENDANCE_PERCENTAGE\",\"MID_TERM_GRADE\"]].apply(check,axis = 1)\n\nstudentinfo\n```"]