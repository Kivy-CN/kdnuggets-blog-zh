["```py\nimport pandas as pd\n\nnet_df = pd.read_csv(\"Netflix_stock_history.csv\", index_col=\"Date\", parse_dates=True)\nnet_df.head(3)\n```", "```py\nnet_df[[\"Close\",\"Volume\"]].plot(subplots=True, layout=(2,1));\n```", "```py\nfrom statsmodels.tsa.arima.model import ARIMA\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\nimport math\n\ntrain_data, test_data = net_df[0:int(len(net_df)*0.9)], net_df[int(len(net_df)*0.9):]\n\ntrain_arima = train_data['Open']\ntest_arima = test_data['Open']\n\nhistory = [x for x in train_arima]\ny = test_arima\n# make first prediction\npredictions = list()\nmodel = ARIMA(history, order=(1,1,0))\nmodel_fit = model.fit()\nyhat = model_fit.forecast()[0]\npredictions.append(yhat)\nhistory.append(y[0])\n```", "```py\n# rolling forecasts\nfor i in range(1, len(y)):\n    # predict\n    model = ARIMA(history, order=(1,1,0))\n    model_fit = model.fit()\n    yhat = model_fit.forecast()[0]\n    # invert transformed prediction\n    predictions.append(yhat)\n    # observation\n    obs = y[i]\n    history.append(obs) \n```", "```py\n# report performance\nmse = mean_squared_error(y, predictions)\nprint('MSE: '+str(mse))\nmae = mean_absolute_error(y, predictions)\nprint('MAE: '+str(mae))\nrmse = math.sqrt(mean_squared_error(y, predictions))\nprint('RMSE: '+str(rmse))\n```", "```py\nMSE: 116.89611817706545\nMAE: 7.690948135967959\nRMSE: 10.811850821069696\n```", "```py\nimport matplotlib.pyplot as plt\nplt.figure(figsize=(16,8))\nplt.plot(net_df.index[-600:], net_df['Open'].tail(600), color='green', label = 'Train Stock Price')\nplt.plot(test_data.index, y, color = 'red', label = 'Real Stock Price')\nplt.plot(test_data.index, predictions, color = 'blue', label = 'Predicted Stock Price')\nplt.title('Netflix Stock Price Prediction')\nplt.xlabel('Time')\nplt.ylabel('Netflix Stock Price')\nplt.legend()\nplt.grid(True)\nplt.savefig('arima_model.pdf')\nplt.show() \n```"]