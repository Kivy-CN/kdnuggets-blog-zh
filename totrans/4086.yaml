- en: How to Update a Python Dictionary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/02/update-python-dictionary.html](https://www.kdnuggets.com/2023/02/update-python-dictionary.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![How to Update a Python Dictionary](../Images/e0b36acf7162dbca181ecbcf1a770693.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: In Python, the dictionary is a useful built-in data structure that lets you
    define a mapping between elements as key-value pairs. You can use the key to retrieve
    the corresponding values. And you can always update one or more keys of the dictionary.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: To do so, you can use for loops or the built-in dictionary `update()` method.
    In this guide, you will learn both of these methods.
  prefs: []
  type: TYPE_NORMAL
- en: Update a Python Dictionary Using For Loops
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Consider the following dictionary `books`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: In the above dictionary, the names of the books (popular Python programming
    books) are the keys and the prices in USD are the values. Note that the `books`
    dictionary has been created for this tutorial, and the prices in USD don’t correspond
    to the exact prices. :)
  prefs: []
  type: TYPE_NORMAL
- en: 'Now consider another dictionary `more_books`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![How to Update a Python Dictionary](../Images/5c4654fc03ae43fc6d7c8a3b25a9b12e.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'Suppose you’d like to update the `books` dictionary with key-value pairs from
    the `more_books` dictionary. You can do it using a for loop as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: loop through the keys of the `more_books` dictionary and access the value, and
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: update the `books` dictionary adding the key-value pair to it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: We see that the `books` dictionary has been updated to include the contents
    of the `more_books` dictionary.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'You can also use the `items()` method on the `more_books` dictionary to get
    all the key-value pairs, loop through them, and update the `books` dictionary:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Syntax of the update() Method
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The general syntax to use the `update()` dictionary method is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Here:'
  prefs: []
  type: TYPE_NORMAL
- en: '`dict` is the Python dictionary that you would like to update, and'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`iterable` refers to any Python iterable containing key-value pairs. This can
    be another Python dictionary or other iterables such as lists and tuples. Each
    item in the list or tuple should contain two elements: one for the key and one
    for the value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Update a Python Dictionary Using update()
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now let us reinitialize the `books` and the `more_books` dictionaries:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'To update the books dictionary, you can call the `update()` method on the books
    dictionary and pass in `more_books`, as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: We see that the `books` dictionary has been updated to include the contents
    of the `more_books` dictionary as well. This method keeps your code maintainable.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '**Note**: The `update()` method updates the original dictionary in place. In
    general, Using `dict1.update(dict2)` updates the dictionary `dict1` (in place)
    and does not return a new dictionary. The `update()` method call, therefore, has
    a return type of None.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Updating a Python Dictionary With Contents From Other Iterables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Next, let's see how to add how to update a Python dictionary with elements from
    another iterable that is *not* a dictionary. We have the books and their prices
    as a list of tuples `some_more_books` as shown. In each tuple, the element at
    index 0 denotes the key and the element at index 1 corresponds to the value.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '![How to Update a Python Dictionary](../Images/2cfb110da28a85642fadd35623d97dc6.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: You can use the `update()` method on the `books` dictionary as before.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: We see that the `books` dictionary has been updated as expected.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Updating a Dictionary in the Presence of Repeating Keys
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: So far, you updated an existing Python dictionary with the key-value pairs from
    another dictionary and a list of tuples. In the example we considered, the two
    dictionaries did *not* have any keys in common.
  prefs: []
  type: TYPE_NORMAL
- en: '**What happens when there are one or more repeating keys?** The value corresponding
    to the repeating key in the dictionary will be overwritten.'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s consider `and_some_more`, a list containing tuples of key-value pairs.
    Notice that it contains ‘Fluent Python’, which is already present in the `books`
    dictionary.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '![How to Update a Python Dictionary](../Images/73ea88c3dc91d74583effaaf8db3cf58.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: When you now call the `update()` method on the `books` dictionary and pass in
    `and_some_more`, you will see that the value corresponding to the key ‘Fluent
    Python’ has now been updated to 45.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In summary, Python's dictionary method `update()` updates a Python dictionary
    with key-value pairs from another dictionary or another iterable. This method
    modifies the original dictionary, and has a return type of None. You can also
    use this method to merge two Python dictionaries. However, you cannot use this
    method if you want a *new* dictionary that has the contents of both the dictionaries.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Bala Priya C](https://twitter.com/balawc27)** is a technical writer who
    enjoys creating long-form content. Her areas of interest include math, programming,
    and data science. She shares her learning with the developer community by authoring
    tutorials, how-to guides, and more.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Data Science, Statistics and Machine Learning Dictionary](https://www.kdnuggets.com/2022/05/data-science-statistics-machine-learning-dictionary.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Step up your Python game with Fast Python for Data Science!](https://www.kdnuggets.com/2022/06/manning-step-python-game-fast-python-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Optimizing Python Code Performance: A Deep Dive into Python Profilers](https://www.kdnuggets.com/2023/02/optimizing-python-code-performance-deep-dive-python-profilers.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python Enum: How To Build Enumerations in Python](https://www.kdnuggets.com/python-enum-how-to-build-enumerations-in-python)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Simplifying Decision Tree Interpretability with Python & Scikit-learn](https://www.kdnuggets.com/2017/05/simplifying-decision-tree-interpretation-decision-rules-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Sparse Matrix Representation in Python](https://www.kdnuggets.com/2020/05/sparse-matrix-representation-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
