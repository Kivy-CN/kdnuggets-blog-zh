- en: 'SQL vs NoSQL: 7 Key Takeaways'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/12/sql-vs-nosql-7-key-takeaways.html](https://www.kdnuggets.com/2020/12/sql-vs-nosql-7-key-takeaways.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Image](../Images/401006705ee816d2335d1526ff9c56c7.png)'
  prefs: []
  type: TYPE_IMG
- en: Developers are all too aware of the need for continuing education. Whether there’s
    a new framework to pick up or a new service to learn, innovation and adaptation
    are fundamental to development. One of the hottest topics for today is the decision
    to go with the standard SQL database or to move to a [NoSQL database](https://hostingdata.co.uk/nosql-database/).
  prefs: []
  type: TYPE_NORMAL
- en: NoSQL databases have been around for decades, thanks to the innovation of Carlo
    Strozzi. However, these databases weren’t in the news much until the early 2000s’.
    At this time, companies like Google and Amazon began putting more effort into
    developing NoSQL databases. Despite their recent popularity, many developers,
    architects, and designers may not be fully up to date with what NoSQL databases
    offer.
  prefs: []
  type: TYPE_NORMAL
- en: Thus, for a rundown on the differences between the two databases, check out
    the following 7 key takeaways that every developer should know.
  prefs: []
  type: TYPE_NORMAL
- en: 1\. The Use of Structured Query Language
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: SQL databases are classified due to their use of the SQL language. Any database
    that someone can interact with via SQL is an SQL database. As a powerful, universally
    used language, it’s used across numerous databases such as Microsoft SQL Server,
    MySQL, PostgreSQL, and more. The query language allows users to write complex
    queries, pull data from several tables, and more. This universality makes it a
    safe choice for anybody who needs reliability.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, although quite broadly classified, databases that do not
    utilize SQL are NoSQL databases. As we’ll soon see, the way to interact with [NoSQL
    databases](/2020/12/nosql-beginners.html) can greatly differ from one database
    to the next depending upon the schema design.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Relational vs Non-Relational
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Other common names for the two databases in question are relational and non-relational
    databases.
  prefs: []
  type: TYPE_NORMAL
- en: SQL or relational databases store data in predefined models that make them simple
    to use and rely upon. This model allows data to be inserted, updated, and extracted
    efficiently. What’s more, separate data sets can be related by unique identifiers—keys.
    In short, relational databases can be understood by all.
  prefs: []
  type: TYPE_NORMAL
- en: Conversely, non-relational databases, [NoSQL databases, are much more flexible](/2016/07/seven-steps-understanding-nosql-databases.html)
    in terms of data storage. While this may seem convenient, seasoned developers
    will understand the potential impacts of it. Over time, as more and more data
    is stored in a non-relational database, it may get difficult to keep everything
    straight as there are no standard models to follow.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../Images/fb81ebc7f7931aaa357e5417ee1f82d0.png)'
  prefs: []
  type: TYPE_IMG
- en: 3\. Defined Schemas vs Dynamic Schemas
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Piggybacking off the relational and non-relational aspect of databases, the
    differences in data storage is stark between the two styles.
  prefs: []
  type: TYPE_NORMAL
- en: '[SQL databases utilize schemas](https://insidebigdata.com/2020/11/28/do-nosql-databases-need-schemas/)
    and tables which are predefined and easy to access for all users. You have your
    primary keys, fields, and values. From there, you can create as many tables as
    you’d like. You can insert secondary keys into tables and create complex relationships
    between several tables. This style of data storage makes it easy and quick to
    analyze large amounts of data together.'
  prefs: []
  type: TYPE_NORMAL
- en: On the other side of the coin, non-relational databases allow you to create
    databases with dynamic schemas. You don’t need to create database models upfront.
    As you expand your database, you can add new models and mix data types seamlessly.
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Table Based vs the Field
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: SQL databases utilize tables, whereas NoSQL databases utilize just about anything
    else. The table-based approach goes hand-in-hand with the rigid schemas. You create
    as many tables as you need for your project, and you relate them with one another.
    Thus, you know exactly how a table will look when you need to examine data you
    haven’t seen yet.
  prefs: []
  type: TYPE_NORMAL
- en: NoSQL databases are quite vague in this sense, as their data is fluidly structured.
    There is no exact basis on which NoSQL databases are founded. Some popular NoSQL
    databases use [graph stores](https://www.infoworld.com/article/3263764/what-is-a-graph-database-a-better-way-to-store-connected-data.html),
    [key-value pairs](https://www.mongodb.com/key-value-database), [wide-column stores](https://blog.logrocket.com/nosql-wide-column-stores-demystified/),
    or [document-oriented stores](https://blog.smartcat.io/2016/intro-to-document-oriented-nosql-databases/).
    The advantage of using NoSQL databases is that you have unlimited flexibility.
    You can choose whatever kind of database engine you want.
  prefs: []
  type: TYPE_NORMAL
- en: 5\. Vertical Scaling vs Horizontal Scaling
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the leading reasons NoSQL databases grew in popularity was due to their
    horizontal scalability. SQL databases require vertical scaling— you have to add
    more power to improve performance and capacity. In theory, SQL databases have
    an upper limit which can be reached when no more hardware improvements can be
    made. This may lead to extensive downtime and greater expenses in adjusting your
    model.
  prefs: []
  type: TYPE_NORMAL
- en: No longer do you have to invest money in more expensive components and higher-end
    CPUs to accommodate scaling an SQL database. When you use a non-relational database,
    all you need to do is add more machines to your arsenal. What’s more, horizontal
    scaling essentially provides redundancy as you have several machines and not one
    point of failure.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../Images/7d944225125855a9b836b9d43d38032e.png)'
  prefs: []
  type: TYPE_IMG
- en: 6\. Use Cases
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you have a solid grasp of your project and the data you need to store, deciding
    between an SQL and NoSQL database is straightforward.
  prefs: []
  type: TYPE_NORMAL
- en: When you have data that looks like it is inherently relative, use an SQL database.
    They’re reliable, easily accessible with SQL, and proven stores of data.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, if your data is flexible and doesn’t have rigid relations,
    give a NoSQL database a shot. You have [several popular providers](/2016/06/top-nosql-database-engines.html)
    to select from. You’ll find the fluidity in being able to define new schemas on
    the fly attractive. Plus, if you’re worried about future scalability, NoSQL databases
    are right for you.
  prefs: []
  type: TYPE_NORMAL
- en: 7\. Support, or Lack Thereof
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The last key takeaway to be aware of is the support for the two types of databases.
    SQL databases are giants—they have swaths of users around the globe. They’re well-established
    and come with thorough documentation. If you run into a problem with an SQL database,
    you’ll have plenty of help. Plus, there’s plenty of walkthroughs and [SQL cheat
    sheets](/2018/07/sql-cheat-sheet.html) to help newcomers.
  prefs: []
  type: TYPE_NORMAL
- en: Although NoSQL has gained a following and popularity, they still lack the same
    support compared to SQL databases. You may struggle to find quality educational
    materials, support docs, and more.
  prefs: []
  type: TYPE_NORMAL
- en: In short, if you know how your data looks, and what the future holds for your
    database, it’s easy to choose a type of database. SQL databases provide proven
    results, a powerful query language, and consistency. NoSQL databases are innovative,
    adaptable, and powerful databases that will only grow with time.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Alex Williams](https://hostingdata.co.uk/author/alex-williams/)** is a seasoned
    full-stack developer and the owner of [Hosting Data UK](https://hostingdata.co.uk/).
    After graduating from the University of London, majoring in IT, Alex worked as
    a developer leading various projects for clients from all over the world for almost
    10 years. Recently, Alex switched to being an independent IT consultant and started
    his own blog. There, he explores web development, data management, digital marketing,
    and solutions for online business owners just starting out.'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Key Takeaways from BigData London Conference and Exhibition](https://www.kdnuggets.com/2022/10/key-takeaways-bigdata-london-conference-exhibition.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NoSQL Databases and Their Use Cases](https://www.kdnuggets.com/2023/03/nosql-databases-cases.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Database Key Terms, Explained](https://www.kdnuggets.com/2016/07/database-key-terms-explained.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Descriptive Statistics Key Terms, Explained](https://www.kdnuggets.com/2017/05/descriptive-statistics-key-terms-explained.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Key-Value Databases, Explained](https://www.kdnuggets.com/2021/04/nosql-explained-understanding-key-value-databases.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[AI, Analytics, Machine Learning, Data Science, Deep Learning…](https://www.kdnuggets.com/2021/12/developments-predictions-ai-machine-learning-data-science-research.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
