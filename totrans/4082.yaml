- en: 3 Hard Python Coding Interview Questions For Data Science
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/03/3-hard-python-coding-interview-questions-data-science.html](https://www.kdnuggets.com/2023/03/3-hard-python-coding-interview-questions-data-science.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/ef834afd04b8f0fed2b9ef0cabf7c0fa.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'In today’s article, I’ll focus on Python skills for data science. A data scientist
    without Python is like a writer without a pen. Or a typewriter. Or a laptop. OK,
    how about this: A data scientist without Python is like me without an attempt
    at humor.'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: You can know Python and not be a data scientist. But the other way around? Let
    me know if you know someone who made it in data science without Python. In the
    last 20 years, that is.
  prefs: []
  type: TYPE_NORMAL
- en: To help you practice Python and interviewing skills, I selected three Python
    coding interview questions. Two are from [StrataScratch](https://www.stratascratch.com?utm_source=blog&utm_medium=click&utm_campaign=kdn+3+hard+python+questions),
    and are the type of questions that require using Python to solve a specific business
    problem. The third question is from [LeetCode](https://leetcode.com), and tests
    how good you are at Python algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: 'Python Coding Interview Question #1: Math in Python'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/921bd99bf32d8b42c3c05943fe0907d1.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Take a look at this question by Google.
  prefs: []
  type: TYPE_NORMAL
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/27c123d68c90c7c62247b8d5fe2a8976.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Link to the question: [https://platform.stratascratch.com/coding/10067-google-fit-user-tracking](https://platform.stratascratch.com/coding/10067-google-fit-user-tracking?utm_source=blog&utm_medium=click&utm_campaign=kdn+3+hard+python+questions)'
  prefs: []
  type: TYPE_NORMAL
- en: Your task is to calculate the average distance based on GPS data using the two
    approaches. One is taking into consideration the curvature of the Earth, the other
    is not taking it into consideration.
  prefs: []
  type: TYPE_NORMAL
- en: The question gives you formulas for both approaches. As you can see, this python
    coding interview question is math-heavy. Not only do you need to understand this
    level of mathematics, but you also need to know how to translate it into a Python
    code.
  prefs: []
  type: TYPE_NORMAL
- en: Not that easy, right?
  prefs: []
  type: TYPE_NORMAL
- en: The first thing you should do is recognize there’s a math Python module that
    gives you access to the mathematical functions. You’ll use this module a lot in
    this question.
  prefs: []
  type: TYPE_NORMAL
- en: Let's start by importing necessary libraries and sine, cosine, arccosine, and
    radian functions. The next step is to merge the available DataFrame with itself
    on the user ID, session ID, and day of the session. Also, add the suffixes to
    IDs so you can distinguish between them.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Then find the difference between the two step IDs.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The previous step was necessary so we can exclude all the sessions that have
    only one step ID in the next step. That’s what the questions tell us to do. Here’s
    how to do it.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Use the pandas idxmax() function to access the sessions with the biggest difference
    between the steps.
  prefs: []
  type: TYPE_NORMAL
- en: After we prepared the dataset, now comes the mathematics part. Create a pandas
    Series and then the for loop. Use the iterrows() method to calculate the distance
    for each row, i.e., session. This is a distance that takes the Earth's curvature
    into account, and the code reflects the formula given in the question.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Now, do the same thing but considering the Earth is flat. This is the only occasion
    being a flat-Earther is beneficial.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Turn the result into a DataFrame and start calculating the output metrics. The
    first one is the average distance with Earth's curvature. Then the same calculation
    without the curvature. The final metric is the difference between the two.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The complete code, and its result are given below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '| **avg_distance_curvature** | **avg_distance_flat** | **distance_diff** |'
  prefs: []
  type: TYPE_TB
- en: '| 0.077 | 0.088 | -0.01 |'
  prefs: []
  type: TYPE_TB
- en: 'Python Coding Interview Question #2: Graph Theory in Python'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/ae168e1bc2f8162e3544af4c093cfc2f.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: This is one of the very interesting Python coding interview questions from StrataScratch.
    It puts you in a very common yet complex situation of a real-life data scientist.
  prefs: []
  type: TYPE_NORMAL
- en: It’s a question by Delta Airlines. Let’s take a look at it.
  prefs: []
  type: TYPE_NORMAL
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/6804eddaa007d73368fc15c9134e37db.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Link to the question: [https://platform.stratascratch.com/coding/2008-the-cheapest-airline-connection](https://platform.stratascratch.com/coding/2008-the-cheapest-airline-connection?utm_source=blog&utm_medium=click&utm_campaign=kdn+3+hard+python+questions)'
  prefs: []
  type: TYPE_NORMAL
- en: 'This question asks you to find the cheapest airline connection with a maximum
    of two stops. This sounds awfully familiar, doesn’t it? Yes, it’s a somewhat modified
    [shortest path problem](https://en.wikipedia.org/wiki/Shortest_path_problem):
    instead of a path, there’s cost instead.'
  prefs: []
  type: TYPE_NORMAL
- en: The solution I’ll show you extensively uses the merge() pandas function. I’ll
    also use itertools for looping. After importing all the necessary libraries and
    modules, the first step is to generate all the possible combinations of the origin
    and destination.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Now, show only combinations where the origin is different from the destination.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Let’s now merge the da_flights with itself. I’ll use the merge() function, and
    the tables will be joined from the left on the destination and the origin. That
    way, you get all the direct flights to the first destination and then the connecting
    flight whose origin is the same as the first flight’s destination.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Then we merge this result with da_flights. That way, we’ll get the third flight.
    This equals two stops, which is the maximum allowed by the question.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Let’s now tidy the merge result by assigning the logical column names and calculate
    the cost of the flights with one and two stops. (We already have the costs of
    the direct flights!). It’s easy! The total cost of the one-stop flight is the
    first flight plus the second flight. For the two-stop flight, it’s a sum of the
    costs for all three flights.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: I will now merge the DataFrame I created with the given DataFrame. This way,
    I’ll be assigning the costs of each direct flight.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Next, merge the above result with connections_2 to get the costs for the flights
    to destinations requiring one stop.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Do the same for the two-stop flights.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: The result of this is a table giving you costs from one origin to a destination
    with direct, one-stop, and two-stop flights. Now you only need to find the lowest
    cost using the min() method, remove the NA values and show the output.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: With these final lines of code, the complete solution is this.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Here’s the code output.
  prefs: []
  type: TYPE_NORMAL
- en: '| **origin** | **destination** | **min_price** |'
  prefs: []
  type: TYPE_TB
- en: '| SFO | JFK | 400 |'
  prefs: []
  type: TYPE_TB
- en: '| SFO | DFW | 200 |'
  prefs: []
  type: TYPE_TB
- en: '| SFO | MCO | 300 |'
  prefs: []
  type: TYPE_TB
- en: '| SFO | LHR | 1400 |'
  prefs: []
  type: TYPE_TB
- en: '| DFW | JFK | 200 |'
  prefs: []
  type: TYPE_TB
- en: '| DFW | MCO | 100 |'
  prefs: []
  type: TYPE_TB
- en: '| DFW | LHR | 1200 |'
  prefs: []
  type: TYPE_TB
- en: '| JFK | LHR | 1000 |'
  prefs: []
  type: TYPE_TB
- en: 'Python Coding Interview Question #3: Binary Tree in Python'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/2b3717b071ec9f80cc360e48044643fb.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Besides graphs, you’ll also work with binary trees as a data scientist. That’s
    why it would be useful if you knew how to solve this Python coding interview question
    asked by likes of DoorDash, Facebook, Microsoft, Amazon, Bloomberg, Apple, and
    TikTok.
  prefs: []
  type: TYPE_NORMAL
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/bab29be0d74887f82eb7506fefa6c2ee.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Link to the question: [https://leetcode.com/problems/binary-tree-maximum-path-sum/description/](https://leetcode.com/problems/binary-tree-maximum-path-sum/description/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The constraints are:'
  prefs: []
  type: TYPE_NORMAL
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/37c2d7aaaaeca4a3651124fd49e92861.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: The first step towards the solution is defining a maxPathSum function. To determine
    if there is a path from the root down the left or right node, write the recursive
    function gain_from_subtree.
  prefs: []
  type: TYPE_NORMAL
- en: The first instance is the root of a subtree. If the path is equal to a root
    (no child nodes), then the gain from a subtree is 0\. Then do the recursion in
    the left and the right node. If the path sum is negative, the question asks not
    to take it into account; we do that by setting it to 0.
  prefs: []
  type: TYPE_NORMAL
- en: Then compare the sum of the gains from a subtree with the current maximum path
    and update it if necessary.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, return the path sum of a subtree, which is a maximum of the root plus
    the left node and the root plus the right node.
  prefs: []
  type: TYPE_NORMAL
- en: These are the outputs for Cases 1 & 2.
  prefs: []
  type: TYPE_NORMAL
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/c977db889f49dd2afacc0384bb6f5812.png)'
  prefs: []
  type: TYPE_IMG
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/1ec7ee12b021aea078eba2a7c2a5fce5.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This time, I wanted to give you something different. There are plenty of Python
    concepts you should know as a data scientist. This time I decided to cover three
    topics I don’t see that often: mathematics, graph data structures, and binary
    trees.'
  prefs: []
  type: TYPE_NORMAL
- en: The three questions I showed you seemed ideal for showing you how to translate
    these concepts into Python code. Check out “[Python coding interview questions](https://www.stratascratch.com/blog/python-coding-interview-questions/?utm_source=blog&utm_medium=click&utm_campaign=kdn+3+hard+python+questions)”
    to practice such more Python concepts.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Nate Rosidi](https://www.stratascratch.com)** is a data scientist and in
    product strategy. He''s also an adjunct professor teaching analytics, and is the
    founder of [StrataScratch](https://www.stratascratch.com/), a platform helping
    data scientists prepare for their interviews with real interview questions from
    top companies. Connect with him on [Twitter: StrataScratch](https://twitter.com/StrataScratch)
    or [LinkedIn](https://www.linkedin.com/in/nathanrosidi/).'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[KDnuggets News, May 4: 9 Free Harvard Courses to Learn Data…](https://www.kdnuggets.com/2022/n18.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Hard Coding in a Data Science Project - Use Config Files Instead](https://www.kdnuggets.com/2023/06/stop-hard-coding-data-science-project-config-files-instead.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[15 Python Coding Interview Questions You Must Know For Data Science](https://www.kdnuggets.com/2022/04/15-python-coding-interview-questions-must-know-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Answer Data Science Coding Interview Questions](https://www.kdnuggets.com/2022/01/answer-data-science-coding-interview-questions.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Want to Become a Data Scientist? Part 1: 10 Hard Skills You Need](https://www.kdnuggets.com/want-to-become-a-data-scientist-part-1-10-hard-skills-you-need)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How Hard is it to Get into FAANG Companies](https://www.kdnuggets.com/2023/05/hard-get-faang-companies.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
