- en: How to Perform Unit Testing in Python?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在 Python 中进行单元测试？
- en: 原文：[https://www.kdnuggets.com/2023/01/perform-unit-testing-python.html](https://www.kdnuggets.com/2023/01/perform-unit-testing-python.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2023/01/perform-unit-testing-python.html](https://www.kdnuggets.com/2023/01/perform-unit-testing-python.html)
- en: '![How to Perform Unit Testing in Python?](../Images/98908d51693ac5a07f9369da920cb465.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![如何在 Python 中进行单元测试？](../Images/98908d51693ac5a07f9369da920cb465.png)'
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Introduction
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Verifying the code in isolation is necessary to ensure our code meets the quality
    standards and works as expected. While making a simple recipe, we taste it at
    various stages and adjust the flavors accordingly. Extending this concept to code,
    we constantly look through our code to validate its correctness. When it comes
    to testing, we can perform either manual testing or automated but manual testing
    is a tedious and time-consuming process. Automated testing involves the execution
    of the tests by a script instead of a human. There are various kinds of testing
    in automated testing like unit testing, integration testing, stress testing, etc
    but we will focus on unit testing for this tutorial.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 验证代码的独立性是确保我们的代码符合质量标准并按预期工作的重要步骤。在制作简单的食谱时，我们会在各个阶段品尝并相应调整味道。将这一概念扩展到代码中，我们不断审视代码以验证其正确性。在测试方面，我们可以进行手动测试或自动测试，但手动测试是一项繁琐且耗时的过程。自动化测试涉及由脚本而非人工执行测试。自动化测试中有各种测试类型，如单元测试、集成测试、压力测试等，但本教程将重点关注单元测试。
- en: Importance of Unit Testing
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单元测试的重要性
- en: Unit testing is the technique in which individual units are analyzed for errors
    to make your code stable and future-proof. These units may be individual functions,
    a complete class, or an entire module. In most cases, these units have no dependencies
    on the other part of the code. It is important because these units are the basic
    building blocks of your application and if they are faulty then your application
    to break. It also enhances the developer's productivity and encourages modular
    programming.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 单元测试是一种分析单个单元是否存在错误的技术，以使你的代码稳定并具备未来适应性。这些单元可能是单独的函数、完整的类或整个模块。在大多数情况下，这些单元与代码的其他部分没有依赖关系。它的重要性在于，这些单元是你应用程序的基本构建块，如果它们有缺陷，你的应用程序就会崩溃。它还提升了开发者的生产力，并鼓励模块化编程。
- en: UnitTest
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: UnitTest
- en: Many test runners are available for Python such as
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 许多测试运行器可用于 Python，例如
- en: Unittest
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unittest
- en: Pytest
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pytest
- en: Nose2
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nose2
- en: Testify
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Testify
- en: DocTest
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DocTest
- en: 'For this tutorial, we will be using unittest which is the built-in testing
    framework in Python standard library. It contains both the testing framework and
    the test runner and offers a variety of features ranging from test automation
    and aggregating tests into collections to the independence of tests from reporting
    framework. It has the following requirements:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将使用 `unittest`，这是 Python 标准库中的内置测试框架。它包含测试框架和测试运行器，提供了从测试自动化、将测试聚合到集合中的功能，到测试与报告框架独立的各种特性。它具有以下要求：
- en: Each unit test can be created as a method extending the TestCase Class and prefix
    your method with a test to inform the test runner about the test methods
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个单元测试可以创建为扩展 TestCase 类的方法，并在方法前加上 "test" 以通知测试运行器测试方法
- en: 'Using the sequence of special assertion methods that determine whether the
    test case has passed or failed. Some of the most commonly used assertion methods
    are mentioned below:'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用特殊的断言方法序列来确定测试用例是否通过或失败。以下是一些最常用的断言方法：
- en: '| **Method** | **Description** |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| **方法** | **描述** |'
- en: '| .assertEqual(a, b) | a == b |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| .assertEqual(a, b) | a == b |'
- en: '| .assertNotEqual(a, b) | a != b |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| .assertNotEqual(a, b) | a != b |'
- en: '| .assertTrue(x) | bool(x) is True |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| .assertTrue(x) | bool(x) 为 True |'
- en: '| .assertFalse(x) | bool(x) is False |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| .assertFalse(x) | bool(x) 为 False |'
- en: '| .assertIs(a, b) | a is b |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| .assertIs(a, b) | a 是 b |'
- en: '| .assertIs(a, b) | a is not b |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| .assertIs(a, b) | a 不是 b |'
- en: '| .assertIsNone(x) | x is None |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| .assertIsNone(x) | x 是 None |'
- en: '| .assertIsNotNone(x) | x is not None |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| .assertIsNotNone(x) | x 不是 None |'
- en: '| .assertIn(a,b) | a in b |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| .assertIn(a,b) | a 在 b 中 |'
- en: '| .assertNotIn(a,b) | a not in b |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| .assertNotIn(a,b) | a 不在 b 中 |'
- en: '| .assertIsInstance(a, b) | isinstance(a, b) |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| .assertIsInstance(a, b) | isinstance(a, b) |'
- en: '| .assertNotIsInstance(a, b) | not isinstance(a, b) |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| .assertNotIsInstance(a, b) | not isinstance(a, b) |'
- en: 'Source: [unittest official documentation](https://docs.python.org/3/library/unittest.html)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '来源: [unittest 官方文档](https://docs.python.org/3/library/unittest.html)'
- en: Steps to Perform Unit Testing using UnitTest
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 UnitTest 执行单元测试的步骤
- en: Write the code that you want to test in the Python File like **example.py.**
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Python 文件中编写你想要测试的代码，例如 **example.py**。
- en: Create a new Python file for your unit tests starting with the keyword test
    like **test_example.py.**
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个新的 Python 文件用于你的单元测试，文件名以 test 开头，例如 **test_example.py**。
- en: Import the **unittest module** and **example.py.**
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入 **unittest 模块** 和 **example.py**。
- en: Create a class extending the class **unittest.TestCase.**
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个扩展 **unittest.TestCase** 类的类。
- en: Write the test methods starting with the test keyword like **test_functionName(self****)**
    and use assert methods to verify the behavior of the code being tested.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写以 **test_functionName(self)** 开头的测试方法，并使用 assert 方法来验证正在测试的代码的行为。
- en: Run the command **python -m unittest test_example.py** in the terminal or invoke
    the main method of unittest in the test file and run **python test_example.py**
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在终端中运行命令 **python -m unittest test_example.py**，或者在测试文件中调用 unittest 的主方法，并运行
    **python test_example.py**。
- en: Example
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例
- en: Let's create a file named **calc.py** that calculates the area of the rectangle.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为 **calc.py** 的文件，用于计算矩形的面积。
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Create a test file **test_calc.py** and write the following code:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个测试文件 **test_calc.py** 并编写以下代码：
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Run **python** **test_calc.py** in your terminal. The following output will
    be displayed:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端中运行 **python test_calc.py**。将显示以下输出：
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now, change the formula of the calculating rectangle to verify our test cases.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，修改矩形计算的公式以验证我们的测试用例。
- en: '[PRE3]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Again run **python test_calc.py** in your terminal.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 再次在终端中运行 **python test_calc.py**。
- en: '[PRE4]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You can also extend this code to handle errors like division by zero.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以扩展此代码以处理如除零错误等问题。
- en: Conclusion
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: While the unittest module provides us with the basic set of tools for writing
    and running unit tests, there are also third-party libraries offering more advanced
    features. Nonetheless, Unit testing remains an important part of the software
    development life cycle and can help you catch bugs early on resulting in more
    reliable and maintainable code. I hope you enjoyed reading the article. Please
    feel free to share your thoughts or feedback in the comment section.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 unittest 模块为我们提供了编写和运行单元测试的基本工具，但也有第三方库提供更高级的功能。然而，单元测试仍然是软件开发生命周期的重要组成部分，并能帮助你及早发现错误，从而编写出更可靠和易于维护的代码。希望你喜欢这篇文章。欢迎在评论区分享你的想法或反馈。
- en: '**[Kanwal Mehreen](https://www.linkedin.com/in/kanwal-mehreen1)** is an aspiring
    software developer with a keen interest in data science and applications of AI
    in medicine. Kanwal was selected as the Google Generation Scholar 2022 for the
    APAC region. Kanwal loves to share technical knowledge by writing articles on
    trending topics, and is passionate about improving the representation of women
    in tech industry.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Kanwal Mehreen](https://www.linkedin.com/in/kanwal-mehreen1)** 是一位有志的软件开发者，对数据科学和人工智能在医学中的应用充满兴趣。Kanwal
    被选为 2022 年 APAC 区域的谷歌新生代学者。Kanwal 喜欢通过撰写关于热点话题的文章来分享技术知识，并且热衷于提高女性在科技行业的代表性。'
- en: '* * *'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速入门网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT 需求'
- en: '* * *'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Hypothesis Testing and A/B Testing](https://www.kdnuggets.com/hypothesis-testing-and-ab-testing)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[假设检验和 A/B 测试](https://www.kdnuggets.com/hypothesis-testing-and-ab-testing)'
- en: '[Testing Like a Pro: A Step-by-Step Guide to Python''s Mock Library](https://www.kdnuggets.com/testing-like-a-pro-a-step-by-step-guide-to-pythons-mock-library)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[像专业人士一样测试：Python Mock 库的逐步指南](https://www.kdnuggets.com/testing-like-a-pro-a-step-by-step-guide-to-pythons-mock-library)'
- en: '[How to Perform Motion Detection Using Python](https://www.kdnuggets.com/2022/08/perform-motion-detection-python.html)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何使用 Python 进行运动检测](https://www.kdnuggets.com/2022/08/perform-motion-detection-python.html)'
- en: '[KDnuggets News, August 17: How to Perform Motion Detection Using…](https://www.kdnuggets.com/2022/n33.html)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻，8月17日：如何进行动作检测…](https://www.kdnuggets.com/2022/n33.html)'
- en: '[Introducing the Testing Library for Natural Language Processing](https://www.kdnuggets.com/2023/04/introducing-testing-library-natural-language-processing.html)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[介绍自然语言处理的测试库](https://www.kdnuggets.com/2023/04/introducing-testing-library-natural-language-processing.html)'
- en: '[A/B Testing: A Comprehensive Guide](https://www.kdnuggets.com/ab-testing-a-comprehensive-guide)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[A/B 测试：全面指南](https://www.kdnuggets.com/ab-testing-a-comprehensive-guide)'
