- en: A Beginner’s Guide to End to End Machine Learning
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 端到端机器学习初学者指南
- en: 原文：[https://www.kdnuggets.com/2021/12/beginner-guide-end-end-machine-learning.html](https://www.kdnuggets.com/2021/12/beginner-guide-end-end-machine-learning.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/12/beginner-guide-end-end-machine-learning.html](https://www.kdnuggets.com/2021/12/beginner-guide-end-end-machine-learning.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Rebecca Vickery](https://www.linkedin.com/in/rebecca-vickery/), Data
    Scientist**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Rebecca Vickery](https://www.linkedin.com/in/rebecca-vickery/)，数据科学家**'
- en: '![](../Images/5c25025612f6dd042b4f295ebfef540f.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5c25025612f6dd042b4f295ebfef540f.png)'
- en: Photo by [Modestas Urbonas](https://unsplash.com/@modestasu?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/bridge?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Modestas Urbonas](https://unsplash.com/@modestasu?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    提供，来源于 [Unsplash](https://unsplash.com/s/photos/bridge?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: '* * *'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业轨道。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT 部门'
- en: '* * *'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Supervised machine learning is a technique that maps a series of inputs (X)
    to some known outputs (y) without being explicitly programmed. Training a machine
    learning model refers to the process where a machine learns a mapping between
    X and y. Once trained the model can be used to make predictions on new inputs
    where the output is unknown.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 监督机器学习是一种将一系列输入（X）映射到已知输出（y）的方法，而无需显式编程。训练机器学习模型指的是机器学习 X 和 y 之间的映射的过程。一旦训练完成，模型可以用于对新输入进行预测，而这些新输入的输出是未知的。
- en: The training of a machine learning model is only one element of the end to end
    machine learning lifecycle. For a model to be truly useful this mapping needs
    to be stored and deployed for use. This is often referred to as putting the model
    into production. Additionally once a model is in production, the predictions and
    overall performance of the model need to be monitored to ensure that the quality
    of the predictions does not degrade over time.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习模型的训练只是端到端机器学习生命周期中的一个环节。为了使模型真正有用，这个映射需要被存储和部署以供使用。这通常被称为将模型投入生产。此外，一旦模型投入生产，需要监控模型的预测和整体性能，以确保预测的质量不会随着时间的推移而下降。
- en: To introduce the basic concepts in the end to end machine learning workflow
    I am going to use the python library, [Pycaret](https://pycaret.org/). Pycaret
    is a low code machine learning library that seeks to simplify and speed up the
    overall machine learning workflow by providing a high-level programming interface
    and seeking to automate some of the repetitive tasks in machine learning.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为了介绍端到端机器学习工作流中的基本概念，我将使用 Python 库 [Pycaret](https://pycaret.org/)。Pycaret 是一个低代码机器学习库，旨在通过提供高级编程接口并自动化机器学习中的一些重复任务，从而简化和加速整体机器学习工作流。
- en: The library is developing quickly and has more recently added functionality
    to encompass the entire end to end machine learning workflow. From model development
    to deployment and monitoring. In the following article, I will be using this package
    to give a simple introduction to the end to end machine learning lifecycle.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 该库正在快速发展，最近添加了涵盖整个端到端机器学习工作流的功能。从模型开发到部署和监控。在接下来的文章中，我将使用这个包简单介绍端到端机器学习生命周期。
- en: The data
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据
- en: In this tutorial, I am going to use one of Pycaret’s built-in datasets known
    as “employee”. This consists of a set of features about employees at an unspecified
    company and a target variable that denotes if that employee has left the company.
    This is a classic classification task in machine learning where the goal is to
    train a model that can predict if an employee is likely to leave.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我将使用 Pycaret 的内置数据集之一，称为“employee”。该数据集包含有关某公司员工的特征集合，以及一个目标变量，表示该员工是否离开了公司。这是一个经典的分类任务，其目标是训练一个可以预测员工是否可能离开的模型。
- en: The data can easily be imported through the Pycaret API. In the below code we
    read in the data and reserve a validation sample for later use in the workflow.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可以通过 Pycaret API 轻松导入。在下面的代码中，我们读取数据并保留一个验证样本以供后续工作流程使用。
- en: 'The first few lines of the data look as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的前几行如下所示：
- en: '![](../Images/49cfd8b17983d3860b8d5ce5eaf01393.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/49cfd8b17983d3860b8d5ce5eaf01393.png)'
- en: First few rows of the “employee” dataset. Image by Author.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: “employee” 数据集的前几行。图像来源：作者。
- en: Preprocessing
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预处理
- en: Pycaret has a set of modules that contain a suite of functions for a specific
    machine learning task. The dataset we are using contains a classification problem
    so we will be primarily using the [classification](https://pycaret.org/classification1/) module.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Pycaret 有一组模块，包含特定机器学习任务的一套功能。我们使用的数据集包含一个分类问题，因此我们将主要使用[classification](https://pycaret.org/classification1/)模块。
- en: The first step is to import the setup function. This function is run prior to
    performing any other steps. It initialises the Pycaret environment and creates
    a transformation pipeline for preprocessing the data ready for modelling. When
    run Pycaret will infer the data types for all feature and target columns.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是导入 setup 函数。此函数在执行其他任何步骤之前运行。它初始化 Pycaret 环境，并创建一个用于数据预处理的转换管道，以便为建模做好准备。运行时，Pycaret
    将推断所有特征和目标列的数据类型。
- en: '![](../Images/c630fd0613c57ffd1d147bf07945cd7d.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c630fd0613c57ffd1d147bf07945cd7d.png)'
- en: Pycaret has inferred the data types for the features and target variable. Image
    by Author
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Pycaret 已经推断了特征和目标变量的数据类型。图像来源：作者
- en: If we are happy that these data types are correct and are also happy to rely
    on Pycaret’s default preprocessing methods then we can simply hit enter and Pycaret
    will prepare the data for modelling, and print a report describing the steps that
    have been taken.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们对这些数据类型的准确性感到满意，并且也愿意依赖 Pycaret 的默认预处理方法，那么我们可以直接按回车键，Pycaret 将为建模准备数据，并打印一份报告，描述所采取的步骤。
- en: Below is just the first 15 lines of this 59 line report. The setup functions
    has a large number of optional parameters that can be used to create custom preprocessing.
    For example, the parameter `categorical_features` can be used to manually specify
    categorical columns where the data type has not been inferred correctly. A full
    list of available parameters can be found [**here**](https://pycaret.org/classification1/).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 下面仅展示了这份 59 行报告的前 15 行。setup 函数具有大量可选参数，可用于创建自定义预处理。例如，参数 `categorical_features`
    可以用来手动指定数据类型未正确推断的分类列。完整的参数列表可以在[**这里**](https://pycaret.org/classification1/)找到。
- en: '![](../Images/0bfe60a344fcce2e2edc55080270eecb.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0bfe60a344fcce2e2edc55080270eecb.png)'
- en: The first 15 lines of the preprocessing report. Image by Author.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 预处理报告的前 15 行。图像来源：作者。
- en: In a real-world machine learning project, it is likely that we would perform
    more in-depth exploratory analysis and custom preprocessing. However, for the
    purposes of this tutorial, we will continue with the default preprocessing.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际的机器学习项目中，我们可能会进行更深入的探索性分析和自定义预处理。然而，出于本教程的目的，我们将继续使用默认的预处理方法。
- en: Baseline model
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基线模型
- en: Typically in machine learning workflows, it is sensible to train a simple model
    first to develop a baseline for performance before moving onto more complex algorithms.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，在机器学习工作流程中，首先训练一个简单模型以建立性能基线，然后再转向更复杂的算法是明智的。
- en: At the time of writing, Pycaret supports 18 different algorithms for classification.
    The full list can be found [**here**](https://pycaret.org/classification1/). For
    the baseline model, we will use logistic regression and we use the function `create_model` to
    train. To select the algorithm we pass in the abbreviated string found in the [**documentation**](https://pycaret.org/classification1/).
    After training, Pycaret will print a report detailing the performance of our model.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 撰写本文时，Pycaret支持18种不同的分类算法。完整列表可以在[**这里**](https://pycaret.org/classification1/)找到。对于基线模型，我们将使用逻辑回归，并使用`create_model`函数进行训练。为了选择算法，我们传入在[**文档**](https://pycaret.org/classification1/)中找到的缩写字符串。训练后，Pycaret
    将打印一份报告，详细说明我们模型的性能。
- en: '![](../Images/4e8bc2576bdd246ea8893218e81e4f0d.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4e8bc2576bdd246ea8893218e81e4f0d.png)'
- en: The create_mode report. Image by Author.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: create_model报告。图像来源：作者。
- en: Comparing models
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 比较模型
- en: By establishing a baseline model we have determined that the preprocessing and
    setup is sufficient to build a classification model.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 通过建立基线模型，我们确定了预处理和设置足以构建一个分类模型。
- en: The next step is to compare the different classification algorithms to determine
    which is the best one to use for our dataset and problem. Pycaret has a function
    called `compare_models()` which allows us to compare the performance of all available
    algorithms with one line of code.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是比较不同的分类算法，以确定哪一种算法最适合我们的数据集和问题。Pycaret 具有一个名为`compare_models()`的函数，允许我们用一行代码比较所有可用算法的性能。
- en: This function will try all algorithms and output a list ranked by accuracy.
    You can change the metric to target using the `sort` argument.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数将尝试所有算法，并输出按准确度排名的列表。你可以使用`sort`参数更改目标度量。
- en: '![](../Images/4a27c8523babf3438492294772729d77.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4a27c8523babf3438492294772729d77.png)'
- en: Comparing models. Image by Author.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 比较模型。图像来源：作者。
- en: We can see from this that Random Forest is overall the best model. We will use
    this model in the rest of our workflow.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 从中我们可以看出，随机森林整体上是最佳模型。我们将在接下来的工作流程中使用这个模型。
- en: We run `create_model()` again this time selecting the Random Forest algorithm.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们再次运行`create_model()`，这次选择了随机森林算法。
- en: Tuning the model
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 调整模型
- en: When we run create_model it automatically uses the default parameters. These
    are not necessarily the best set of parameters to use so we need to tune the model
    to find the best selection. Running the `tune_model()` function tunes the hyperparameters
    of the model using Random grid search.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们运行create_model时，它会自动使用默认参数。这些参数不一定是最佳选择，因此我们需要调整模型以找到最佳选择。运行`tune_model()`函数可以使用随机网格搜索调整模型的超参数。
- en: By default, the function will use a pre-defined grid of parameters but this
    can be customised by passing a custom grid into the `custom_grid` parameter. By
    default, the function will also optimise the accuracy score but this can also
    be customised using the `optimize` parameter.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，该函数将使用预定义的参数网格，但可以通过将自定义网格传递给`custom_grid`参数进行自定义。默认情况下，该函数还会优化准确度分数，但这也可以通过使用`optimize`参数进行自定义。
- en: In the below code we use the default parameter grid to tune the model and optimise
    for the MCC score.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，我们使用默认的参数网格来调整模型，并优化MCC分数。
- en: The function returns a table containing k-fold validated scores, by default
    the number of folds is 10.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数返回一个包含k折验证分数的表格，默认情况下折数为10。
- en: '![](../Images/2bcd1ed3f1e6ec46b0f4ca7a320e4fb3.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2bcd1ed3f1e6ec46b0f4ca7a320e4fb3.png)'
- en: Model tuning. Image by Author.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 模型调优。图像来源：作者。
- en: Interpret the results
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解释结果
- en: Pycaret has a selection of built-in plots to interpret the results of the model
    which can be accessed using the `plot_model()` function.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Pycaret 提供了一系列内置图表来解释模型的结果，可以通过`plot_model()`函数访问。
- en: Below we inspect feature importances using this function.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 下面我们使用此函数检查特征重要性。
- en: '![](../Images/1560351111f77ff35f6513760d61638d.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1560351111f77ff35f6513760d61638d.png)'
- en: Feature importances. Image by Author.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 特征重要性。图像来源：作者。
- en: Let’s also visualise the confusion matrix.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们也可视化混淆矩阵。
- en: '![](../Images/ae9263af2e92e6e47d39ff78c3e1c6a0.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ae9263af2e92e6e47d39ff78c3e1c6a0.png)'
- en: The confusion matrix. Image by Author.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 混淆矩阵。图像来源：作者。
- en: Deploy the model
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部署模型
- en: Pycaret has additional functionality to deploy models to the cloud using AWS.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Pycaret 具有将模型部署到云端的额外功能，使用AWS。
- en: To deploy the model on AWS you must first create an account on [aws.amazon.com](https://aws.amazon.com/?aws-products-analytics.sort-by=item.additionalFields.productNameLowercase&aws-products-analytics.sort-order=asc&aws-products-business-apps.sort-by=item.additionalFields.productNameLowercase&aws-products-business-apps.sort-order=asc&aws-products-containers.sort-by=item.additionalFields.productNameLowercase&aws-products-containers.sort-order=asc&aws-products-compute.sort-by=item.additionalFields.productNameLowercase&aws-products-compute.sort-order=asc&aws-products-iot.sort-by=item.additionalFields.productNameLowercase&aws-products-iot.sort-order=asc&aws-products-ml.sort-by=item.additionalFields.productNameLowercase&aws-products-ml.sort-order=asc&aws-products-mgmt-govern.sort-by=item.additionalFields.productNameLowercase&aws-products-mgmt-govern.sort-order=asc&aws-products-migration.sort-by=item.additionalFields.productNameLowercase&aws-products-migration.sort-order=asc&aws-products-network.sort-by=item.additionalFields.productNameLowercase&aws-products-network.sort-order=asc&aws-products-security.sort-by=item.additionalFields.productNameLowercase&aws-products-security.sort-order=asc&aws-products-storage.sort-by=item.additionalFields.productNameLowercase&aws-products-storage.sort-order=asc).
    Once created you need to generate an access key so that you can allow the Pycaret
    function to write to your account. To do this follow the following steps.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 要在AWS上部署模型，你必须首先在[aws.amazon.com](https://aws.amazon.com/?aws-products-analytics.sort-by=item.additionalFields.productNameLowercase&aws-products-analytics.sort-order=asc&aws-products-business-apps.sort-by=item.additionalFields.productNameLowercase&aws-products-business-apps.sort-order=asc&aws-products-containers.sort-by=item.additionalFields.productNameLowercase&aws-products-containers.sort-order=asc&aws-products-compute.sort-by=item.additionalFields.productNameLowercase&aws-products-compute.sort-order=asc&aws-products-iot.sort-by=item.additionalFields.productNameLowercase&aws-products-iot.sort-order=asc&aws-products-ml.sort-by=item.additionalFields.productNameLowercase&aws-products-ml.sort-order=asc&aws-products-mgmt-govern.sort-by=item.additionalFields.productNameLowercase&aws-products-mgmt-govern.sort-order=asc&aws-products-migration.sort-by=item.additionalFields.productNameLowercase&aws-products-migration.sort-order=asc&aws-products-network.sort-by=item.additionalFields.productNameLowercase&aws-products-network.sort-order=asc&aws-products-security.sort-by=item.additionalFields.productNameLowercase&aws-products-security.sort-order=asc&aws-products-storage.sort-by=item.additionalFields.productNameLowercase&aws-products-storage.sort-order=asc)创建一个账户。创建后，你需要生成一个访问密钥，以便允许Pycaret函数写入你的账户。为此，请按照以下步骤操作。
- en: Login to your AWS account.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到你的AWS账户。
- en: Hover over your username in the top right corner.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标悬停在右上角的用户名上。
- en: Select security credentials from the list that appears.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从出现的列表中选择安全凭证。
- en: '![](../Images/52584398b80295476026df73f3e831d4.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/52584398b80295476026df73f3e831d4.png)'
- en: 4\. From here expand the Access keys section and click on ‘Create new access
    key’.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 4. 从这里展开访问密钥部分，然后点击“创建新的访问密钥”。
- en: '![](../Images/416c07d6225c52cc4fda26f6470cefcf.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/416c07d6225c52cc4fda26f6470cefcf.png)'
- en: 5\. At this stage you need to download the credentials file when prompted. You
    will need the credentials contained file in this later.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 5. 在这个阶段，当提示时，你需要下载凭证文件。稍后你需要用到这个凭证文件。
- en: 6\. To allow Pycaret to interact with your AWS account you also need to install
    and configure the AWS CLI. To do this first run the following.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 6. 为了允许Pycaret与您的AWS账户互动，你还需要安装和配置AWS CLI。为此，请首先运行以下命令。
- en: '[PRE0]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then run this:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 然后运行以下命令：
- en: '[PRE1]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now type `aws --version` to confirm everything has been installed correctly.
    You should see something like this.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在输入`aws --version`以确认所有内容已正确安装。你应该会看到类似的信息。
- en: '![](../Images/5dc1e7f7df4d3961bdcb766a084d1f33.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5dc1e7f7df4d3961bdcb766a084d1f33.png)'
- en: Now that this is installed we can configure the AWS CLI with your account details.
    To do this run the command shown below. It will ask you to input the following
    pieces of information.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以使用你的账户详细信息来配置AWS CLI。为此，运行下面显示的命令。它会要求你输入以下信息。
- en: '**AWS Access Key ID:** this can be found in the credentials file we downloaded
    earlier.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**AWS Access Key ID:** 可以在我们之前下载的凭证文件中找到。'
- en: '**AWS Secret Acess Key:** also found in the credentials file.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**AWS Secret Access Key:** 也在凭证文件中找到。'
- en: '**Default region name:** this can be found on the AWS console.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**Default region name:** 这个可以在AWS控制台中找到。'
- en: '**Default output format:** this should be left blank.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**Default output format:** 这应该留空。'
- en: Next, we create an S3 bucket to store the deployed model. From the AWS console
    select S3 and then create a bucket with your chosen name.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们创建一个S3存储桶来存储部署的模型。在AWS控制台中选择S3，然后创建一个你选择名称的存储桶。
- en: '![](../Images/1b7ec21bd4227ca8a36a3f572e2e27ca.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1b7ec21bd4227ca8a36a3f572e2e27ca.png)'
- en: Now we are ready to use Pycaret to deploy our chosen model.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以使用Pycaret来部署我们选择的模型了。
- en: If the model has deployed you will see the following message.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果模型已经部署，你将看到以下消息。
- en: '![](../Images/501c85c4c20ae528ec98ea30363a7d42.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/501c85c4c20ae528ec98ea30363a7d42.png)'
- en: Generate predictions
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成预测
- en: To use the model we generate predictions on the validation data we reserved
    earlier.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用模型，我们在之前保留的验证数据上生成预测。
- en: The code shown below loads the model from S3 and generates predictions on the
    validation data with the labels removed.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码从S3加载模型，并在移除标签的验证数据上生成预测。
- en: Let’s view the first 5 predictions by running `predictions[:5]`.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过运行`predictions[:5]`来查看前5个预测。
- en: '![](../Images/26fb52f2644e9659db825ed6023f07b2.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/26fb52f2644e9659db825ed6023f07b2.png)'
- en: First 5 predictions. Image by Author
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 前5个预测。图片由作者提供
- en: Monitoring
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 监控
- en: An important aspect of the production machine learning workflow is tracking
    and monitoring the experiments that are performed. Pycaret has integration with [MLflow](https://mlflow.org/) an
    open-source platform for managing the end to end machine learning lifecycle.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 生产机器学习工作流的一个重要方面是跟踪和监控执行的实验。Pycaret与[MLflow](https://mlflow.org/)集成，MLflow是一个用于管理端到端机器学习生命周期的开源平台。
- en: To use MLflow via Pycaret we need to import MLflow (this should already have
    been installed along with Pycaret) and set the tracking URI. We then add a couple
    of extra parameters as shown below when calling the setup function.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 为了通过Pycaret使用MLflow，我们需要导入MLflow（这应该已经与Pycaret一起安装）并设置跟踪URI。然后在调用设置函数时，我们添加几个额外的参数，如下所示。
- en: Now if we copy the tracking URI into a browser you should see the mlflow UI
    and the experiments it has tracked.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们将跟踪URI复制到浏览器中，你应该能看到mlflow UI和它所跟踪的实验。
- en: '![](../Images/054eeebb587f788c4a96221b887e64ab.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/054eeebb587f788c4a96221b887e64ab.png)'
- en: mlflow UI. Image by author
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: mlflow UI。图片由作者提供
- en: We can click through to view the metrics, artifacts and params for each experiment
    performed.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以点击查看每个实验执行的指标、工件和参数。
- en: '![](../Images/2e68e1947cc88ad8c8520b24016fee1d.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2e68e1947cc88ad8c8520b24016fee1d.png)'
- en: Experiment tracking. Image by Author
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 实验跟踪。图片由作者提供
- en: This is a simple tutorial to learn the basic steps involved in an end to end
    machine learning project. In the real world most machine learning problems, data
    and deployment solutions require much more complex treatment. However, for the
    purposes of this tutorial I have used a simple dataset and python library to get
    you started with learning about the end to end machine learning lifecycle.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的教程，用于学习端到端机器学习项目的基本步骤。在现实世界中，大多数机器学习问题、数据和部署解决方案需要更复杂的处理。然而，为了本教程的目的，我使用了一个简单的数据集和Python库，以帮助你入门学习端到端的机器学习生命周期。
- en: Pycaret is an example of a low-code machine learning library. There are a number
    of tools being developed that seek to simplify machine learning development in
    different ways. To learn more about these low effort machine learning libraries
    see my earlier article.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: Pycaret是一个低代码机器学习库的例子。正在开发的许多工具试图以不同的方式简化机器学习开发。要了解更多关于这些低工作量的机器学习库的信息，请参见我之前的文章。
- en: '[**Low Effort Machine Learning Tools**](https://towardsdatascience.com/low-effort-machine-learning-tools-9622d7d57135)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[**低工作量机器学习工具**](https://towardsdatascience.com/low-effort-machine-learning-tools-9622d7d57135)'
- en: For more information about machine learning in the real world see the article
    below.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多关于现实世界中机器学习的信息，请参阅下面的文章。
- en: '[**Machine Learning in Real Life**](https://towardsdatascience.com/machine-learning-in-real-life-eebcb08f099c)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '[**现实生活中的机器学习**](https://towardsdatascience.com/machine-learning-in-real-life-eebcb08f099c)'
- en: Thanks for reading!
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读！
- en: '**Bio: [Rebecca Vickery](https://www.linkedin.com/in/rebecca-vickery/)** is
    a Data Scientist with extensive experience of data analysis, machine learning
    and data engineering. 12 years experience SQL, 4+ years Python, R, Apache Airflow
    and Google Analytics.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介: [Rebecca Vickery](https://www.linkedin.com/in/rebecca-vickery/)** 是一位数据科学家，拥有丰富的数据分析、机器学习和数据工程经验。拥有12年的SQL经验，4年以上的Python、R、Apache
    Airflow和Google Analytics经验。'
- en: '**Related:**'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[10 Things You Didn’t Know About Scikit-Learn](/2020/09/10-things-know-scikit-learn.html)'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[你不知道的10件关于Scikit-Learn的事](/2020/09/10-things-know-scikit-learn.html)'
- en: '[Five Command Line Tools for Data Science](/2019/07/five-command-line-tools-data-science.html)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[五个用于数据科学的命令行工具](/2019/07/five-command-line-tools-data-science.html)'
- en: '[Python Libraries for Interpretable Machine Learning](/2019/09/python-libraries-interpretable-machine-learning.html)'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[可解释的机器学习Python库](/2019/09/python-libraries-interpretable-machine-learning.html)'
- en: More On This Topic
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[A Full End-to-End Deployment of a Machine Learning Algorithm into a…](https://www.kdnuggets.com/2021/12/deployment-machine-learning-algorithm-live-production-environment.html)'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将机器学习算法完整部署到生产环境中](https://www.kdnuggets.com/2021/12/deployment-machine-learning-algorithm-live-production-environment.html)'
- en: '[5 Best End-to-End Open Source MLOps Tools](https://www.kdnuggets.com/5-best-end-to-end-open-source-mlops-tools)'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5 款最佳端到端开源 MLOps 工具](https://www.kdnuggets.com/5-best-end-to-end-open-source-mlops-tools)'
- en: '[A Simple to Implement End-to-End Project with HuggingFace](https://www.kdnuggets.com/a-simple-to-implement-end-to-end-project-with-huggingface)'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 HuggingFace 实现的简单端到端项目](https://www.kdnuggets.com/a-simple-to-implement-end-to-end-project-with-huggingface)'
- en: '[7 End-to-End MLOps Platforms You Must Try in 2024](https://www.kdnuggets.com/7-end-to-end-mlops-platforms-you-must-try-in-2024)'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2024 年必试的 7 个端到端 MLOps 平台](https://www.kdnuggets.com/7-end-to-end-mlops-platforms-you-must-try-in-2024)'
- en: '[Essential Machine Learning Algorithms: A Beginner''s Guide](https://www.kdnuggets.com/2021/05/essential-machine-learning-algorithms-beginners.html)'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[必备机器学习算法：初学者指南](https://www.kdnuggets.com/2021/05/essential-machine-learning-algorithms-beginners.html)'
- en: '[A Beginner''s Guide to the Top 10 Machine Learning Algorithms](https://www.kdnuggets.com/a-beginner-guide-to-the-top-10-machine-learning-algorithms)'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[初学者指南：十大机器学习算法](https://www.kdnuggets.com/a-beginner-guide-to-the-top-10-machine-learning-algorithms)'
