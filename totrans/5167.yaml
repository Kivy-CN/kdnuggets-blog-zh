- en: How to Write SQL in Native Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2022/02/easy-sql-native-python.html](https://www.kdnuggets.com/2022/02/easy-sql-native-python.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![How to Write SQL in Native Python](../Images/fc98e8330f52fbe4e098c359fec1932e.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Technology vector created by freepik - www.freepik.com](https://www.freepik.com/vectors/technology)'
  prefs: []
  type: TYPE_NORMAL
- en: Do you write a lot of SQL? Do you end up calling a lot of this SQL from within
    Python? Does the idea of being able to link with SQL databases and define, manipulate,
    and query using Python sound appealing?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '[SQLModel](https://github.com/tiangolo/sqlmodel) is a Python library for interacting
    with SQL databases in pure, native Python. Its design motivations include intuitiveness,
    ease of use, compatibility, and robustness. SQLModel employs Python [type annotation](https://docs.python.org/3/library/typing.html),
    enforced and managed by [Pydantic](https://pydantic-docs.helpmanual.io/), as well
    as [SQLAlchemy](https://www.sqlalchemy.org/), "Python SQL toolkit and Object Relational
    Mapper," for its SQL interaction.'
  prefs: []
  type: TYPE_NORMAL
- en: The library was written by [Sebastián Ramírez](https://github.com/tiangolo),
    the author of [FastAPI](https://fastapi.tiangolo.com/), and the 2 libraries are
    designed to interoperate seamlessly.
  prefs: []
  type: TYPE_NORMAL
- en: 'The key features of SQLModel, taken directly from the project''s GitHub repository,
    are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Intuitive to write**: Great editor support. Completion everywhere. Less time
    debugging. Designed to be easy to use and learn. Less time reading docs.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Easy to use**: It has sensible defaults and does a lot of work underneath
    to simplify the code you write.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Compatible**: It is designed to be compatible with FastAPI, Pydantic, and
    SQLAlchemy.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Extensible**: You have all the power of SQLAlchemy and Pydantic underneath.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Short**: Minimize code duplication. A single type annotation does a lot of
    work. No need to duplicate models in SQLAlchemy and Pydantic.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's have a quick look at how SQLModel works.
  prefs: []
  type: TYPE_NORMAL
- en: Create a SQLModel Model (SQL Table)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Want to create a table using SQLModel?
  prefs: []
  type: TYPE_NORMAL
- en: Here's a simple [example](https://github.com/tiangolo/sqlmodel#create-a-sqlmodel-model)
    of a code excerpt using SQLModel, from the library's GitHub repo.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: In the code above, the `Hero` class is a SQLModel object. SQLModel objects are
    equivalent to SQL tables in the SQLModel library. Class attributes, such as `id`
    and `name`, are table columns.
  prefs: []
  type: TYPE_NORMAL
- en: Create Rows (Table Instances)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Want to create a row in the table, aka a data instance?
  prefs: []
  type: TYPE_NORMAL
- en: Here's an [example](https://github.com/tiangolo/sqlmodel#create-rows) from the
    library's GitHub repo demonstrating how to do so. Note that each row is an instance
    of the above defined model.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Note that only conventional Python code has been used to achieve the creation
    of a table and enter data into it row by row, with no SQL code needed as a go-between
    for our Python objects and the backend SQL database.
  prefs: []
  type: TYPE_NORMAL
- en: Write to the SQL Database
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Note that no table or data has yet been written to any existing database, which
    can be accomplished as follows. The following full code [example](https://github.com/tiangolo/sqlmodel#write-to-the-database)
    builds on the above code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The above code will write a new table to the existing database, and add the
    3 "hero" entries to it.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, there is an awful lot more that SQLModel can do. For a full treatment
    of what is possible with the library, and how to accomplish it, have a look at
    the [full documentation](https://sqlmodel.tiangolo.com/).
  prefs: []
  type: TYPE_NORMAL
- en: '[**Matthew Mayo**](https://www.linkedin.com/in/mattmayo13/) ([**@mattmayo13**](https://twitter.com/mattmayo13))
    is a Data Scientist and the Editor-in-Chief of KDnuggets, the seminal online Data
    Science and Machine Learning resource. His interests lie in natural language processing,
    algorithm design and optimization, unsupervised learning, neural networks, and
    automated approaches to machine learning. Matthew holds a Master''s degree in
    computer science and a graduate diploma in data mining. He can be reached at editor1
    at kdnuggets[dot]com.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Cloud-Native Super Computing](https://www.kdnuggets.com/2022/03/nvidia-cloud-native-super-computing.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Write Clean Python Code Using Pipes](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How To Write Efficient Python Code: A Tutorial for Beginners](https://www.kdnuggets.com/how-to-write-efficient-python-code-a-tutorial-for-beginners)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[8 Built-in Python Decorators to Write Elegant Code](https://www.kdnuggets.com/8-built-in-python-decorators-to-write-elegant-code)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Started with PyTest: Effortlessly Write and Run Tests in Python](https://www.kdnuggets.com/getting-started-with-pytest-effortlessly-write-and-run-tests-in-python)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Pydon''ts - Write elegant Python code: Free Book Review](https://www.kdnuggets.com/2022/05/pydonts-write-elegant-python-code-free-book-review.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
