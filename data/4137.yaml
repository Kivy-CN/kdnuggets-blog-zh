- en: Using Numpy’s argmax()
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Numpy 的 argmax()
- en: 原文：[https://www.kdnuggets.com/2022/07/using-numpy-argmax.html](https://www.kdnuggets.com/2022/07/using-numpy-argmax.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2022/07/using-numpy-argmax.html](https://www.kdnuggets.com/2022/07/using-numpy-argmax.html)
- en: '![Using Numpy''s argmax()](../Images/8f28a3c503b099a667bf10b17d928f5b.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Numpy 的 argmax()](../Images/8f28a3c503b099a667bf10b17d928f5b.png)'
- en: And argmax() returns... 9?!? Yep, that's correct!
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 而 `argmax()` 返回... 9?!? 对，没错！
- en: Explaining `argmax()`
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解释 `argmax()`
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速开启网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'Recall the 5 Ws: *who, what, when, where, and why*.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下5个W：*谁，什么，何时，哪里，为什么*。
- en: When approaching a question, framing it with the proper 'W' can mean the difference
    between getting the answer you are looking for and absolute confusion.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理问题时，用正确的“W”来框定问题可能意味着你能否获得所需的答案，或者陷入完全的困惑。
- en: 'Consider the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下内容：
- en: '**When** is your name?'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**你的名字是什么时候？**'
- en: '**Where** do you do for a living?'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**你**是做什么的？'
- en: '**Why** street do you live on?'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**你**住在哪条街上？'
- en: These questions make very little sense as they are posed, and so the answer
    one is looking for might not come as quickly as hoped.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这些问题在提出时意义不大，因此你寻找的答案可能不会像预期的那样迅速出现。
- en: Similar confusion can arise when one is writing Python code and uses Numpy's
    `argmax()` function. `argmax` is useful when working with matrices, or multidimensional
    arrays, of any number of dimensions, and searching for the maximum value. However,
    and rather importantly, `argmax` returns the indices of the maximum values along
    an axis, as opposed to the maximum values themselves.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当编写 Python 代码并使用 Numpy 的 `argmax()` 函数时，也可能会出现类似的困惑。`argmax` 在处理矩阵或任何维数的多维数组并查找最大值时非常有用。然而，`argmax`
    返回的是沿某轴的最大值的索引，而不是最大值本身。
- en: '`argmax` will tell you the **where**, not the **what**. This is a critical
    point that is often misunderstood by those using the Numpy library, and one which
    can lead to frustration.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`argmax` 会告诉你**在哪里**，而不是**什么**。这是一个使用 Numpy 库的人经常误解的关键点，可能导致挫折。'
- en: Understanding `argmax()`
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 `argmax()`
- en: Let's have a look at how Numpy's `argmax` is designed to work.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看 Numpy 的 `argmax` 是如何设计的。
- en: According to the [Numpy documentation](https://numpy.org/doc/stable/reference/generated/numpy.argmax.html),
    `argmax` "[r]eturns the indices of the maximum values along an axis."
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 [Numpy 文档](https://numpy.org/doc/stable/reference/generated/numpy.argmax.html)，`argmax`
    “[返回沿某轴的最大值的索引]”。
- en: This means that actual maximum values are not being returned, just the positions
    of those maximum values.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着实际的最大值没有被返回，仅仅是这些最大值的位置。
- en: Its important parameters include the input array from which to locate the maximum
    values of a particular axis and return its position, along with a particular axis
    (which is optional). One can additionally optionally pass an output array, and
    a boolean value to retain any reduced axes in the results. Regarding the optional
    axis argument, if none is specified, the returned index is into the flattened
    input array.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 其重要参数包括从输入数组中查找特定轴的最大值并返回其位置，以及一个特定的轴（这是可选的）。此外，还可以选择传递一个输出数组，以及一个布尔值以保留结果中的任何缩减轴。关于可选的轴参数，如果没有指定，返回的索引将指向展平后的输入数组。
- en: '`argmax` returns an array of indices into the original array, the dimensions
    of which depend on the function''s input.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`argmax` 返回一个原始数组索引的数组，其维度取决于函数的输入。'
- en: Why `argmax()`?
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么 `argmax()`？
- en: 'According to Jason Brownlee in an article on [Machine Learning Mastery](https://machinelearningmastery.com/argmax-in-machine-learning):'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 Jason Brownlee 在 [机器学习大师](https://machinelearningmastery.com/argmax-in-machine-learning)
    的一篇文章：
- en: Argmax is most commonly used in machine learning for finding the class with
    the largest predicted probability.
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`argmax`在机器学习中最常用于找到预测概率最大的类别。'
- en: ''
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[...]'
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[...]'
- en: ''
  id: totrans-31
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The most common situation for using argmax that you will encounter in applied
    machine learning is in finding the index of an array that results in the largest
    value.
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在应用机器学习中，你最常遇到的使用`argmax`的情况是寻找数组中结果为最大值的索引。
- en: If we consider the probabilities of predictions of class membership, the `argmax`
    function can determine the index position into an array which contains the max
    value and, hence, the highest probability prediction. This is clearly useful for
    machine learning.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们考虑类别成员预测的概率，`argmax`函数可以确定数组中包含最大值的索引位置，从而获得最高概率的预测。这对于机器学习显然是有用的。
- en: Let's have a look at how `argmax` works in practice.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看`argmax`在实践中的表现。
- en: Using argmax()
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`argmax()`
- en: Let's have a look at `argmax` in action.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看`argmax`的实际应用。
- en: Single Dimension
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 单维度
- en: After importing Numpy in the usual manner, we create a single dimension array
    and pass it to `argmax`. Look at the array and code to figure out what you think
    the output should be.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在以通常的方式导入Numpy后，我们创建了一个单维度数组并将其传递给`argmax`。查看数组和代码，猜测一下你认为输出应该是什么。
- en: '[PRE0]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Does this output match what you expected?
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这个输出符合你的预期吗？
- en: If you recall that `argmax` is returning an index as oppposed to a value, and
    that indexing begins at 0, we see that we have been returned index 9 — which is
    actually the tenth position — which holds the value '10', the max value in the
    array.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你记得`argmax`返回的是索引而不是值，并且索引从0开始，我们可以看到我们得到的是索引9——实际上是第十个位置——它包含了'10'，即数组中的最大值。
- en: Make sense?
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 明白了吗？
- en: Multiple Dimensions
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多维度
- en: Let's have a look at how `argmax` works with an array of multiple dimensions.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看`argmax`如何在多个维度的数组中工作。
- en: '[PRE2]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now we have a 2-dimensional array. We did not pass an axis parameter, and so
    the default behavior of `argmax` is to flatten the multidimensional array into
    a single dimension, and return the index of the maximum value into this flattened
    array.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有一个二维数组。我们没有传递轴参数，因此`argmax`的默认行为是将多维数组展平为一维，并返回该展平数组中最大值的索引。
- en: As such, the result is is the same as the single dimension array in the previous
    example, and it should now be apparent as to why.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，结果与前面单维度数组的结果相同，现在应该很明显为什么。
- en: Specifying an Axis
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指定轴
- en: But what if we specify an axis?
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 但是如果我们指定一个轴呢？
- en: First, recall that axis 0 refers to *rows* while axis 1 refers to *columns*.
    Let's see what happens when we pass `axis=0` to `argmax`.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，回顾一下轴0指的是*行*，而轴1指的是*列*。让我们看看当我们将`axis=0`传递给`argmax`时会发生什么。
- en: '[PRE4]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: What's this all about?
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这到底是怎么回事？
- en: We specified `axis=0`, and so `argmax` will be returning the maximum value along
    the rows of the multidimensional array.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们指定了`axis=0`，因此`argmax`将返回多维数组行上的最大值。
- en: '**What** is the maximum value? As established previously, for this array it
    is ''10''.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**最大值**是什么？如前所述，对于这个数组，它是''10''。'
- en: '**Where** is the maximum value? It is in the last column of the second row.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**最大值**在哪里？它在第二行的最后一列。'
- en: Since we have already specified that we are interested in knowing what **row**
    it is in (`axis=0`), for each column in the array Numpy is reporting the row in
    which this maximum value appears. Recalling that indexing begins with 0, we can
    see that, for each of the columns in this array, the maximum value occurs in the
    row with the index of 1, or the second row. Looking to our code to see where the
    value '10' is located, it appears as though `argmax` is correct.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经指定了我们想知道它在**行**中的位置（`axis=0`），对于数组中的每一列，Numpy报告了最大值出现的行。回顾一下索引从0开始，我们可以看到，在这个数组的每一列中，最大值出现在索引为1的行，即第二行。查看我们的代码，值'10'的位置似乎`argmax`是正确的。
- en: What would you expect the output to be if we instead specified `axis=1`? I will
    eave this as an exercise for the reader.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们指定`axis=1`，你期望输出是什么？我将这留给读者作为练习。
- en: Summary
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this post we learned what `argmax` is, why we would use it, and have covered
    several examples using Numpy's `argmax` function.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们了解了`argmax`是什么，为什么我们要使用它，并且介绍了几个使用Numpy的`argmax`函数的例子。
- en: You should now know how `argmax` works.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在应该知道`argmax`是如何工作的。
- en: '**[Matthew Mayo](https://www.linkedin.com/in/mattmayo13/)** ([**@mattmayo13**](https://twitter.com/mattmayo13))
    is a Data Scientist and the Editor-in-Chief of KDnuggets, the seminal online Data
    Science and Machine Learning resource. His interests lie in natural language processing,
    algorithm design and optimization, unsupervised learning, neural networks, and
    automated approaches to machine learning. Matthew holds a Master''s degree in
    computer science and a graduate diploma in data mining. He can be reached at editor1
    at kdnuggets[dot]com.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Matthew Mayo](https://www.linkedin.com/in/mattmayo13/)** （**[@mattmayo13](https://twitter.com/mattmayo13)**）是数据科学家以及
    KDnuggets 的主编，KDnuggets 是一个开创性的在线数据科学和机器学习资源。他的兴趣包括自然语言处理、算法设计与优化、无监督学习、神经网络以及机器学习的自动化方法。Matthew
    拥有计算机科学硕士学位和数据挖掘研究生文凭。他可以通过 editor1 at kdnuggets[dot]com 联系。'
- en: More On This Topic
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Using NumPy to Perform Date and Time Calculations](https://www.kdnuggets.com/using-numpy-to-perform-date-and-time-calculations)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 NumPy 执行日期和时间计算](https://www.kdnuggets.com/using-numpy-to-perform-date-and-time-calculations)'
- en: '[Vector and Matrix Norms with NumPy Linalg Norm](https://www.kdnuggets.com/2023/05/vector-matrix-norms-numpy-linalg-norm.html)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 NumPy Linalg Norm 计算向量和矩阵范数](https://www.kdnuggets.com/2023/05/vector-matrix-norms-numpy-linalg-norm.html)'
- en: '[Beyond Numpy and Pandas: Unlocking the Potential of Lesser-Known…](https://www.kdnuggets.com/2023/08/beyond-numpy-pandas-unlocking-potential-lesserknown-python-libraries.html)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[超越 Numpy 和 Pandas：发掘鲜为人知的 Python 库的潜力](https://www.kdnuggets.com/2023/08/beyond-numpy-pandas-unlocking-potential-lesserknown-python-libraries.html)'
- en: '[Introduction to Numpy and Pandas](https://www.kdnuggets.com/introduction-to-numpy-and-pandas)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Numpy 和 Pandas 介绍](https://www.kdnuggets.com/introduction-to-numpy-and-pandas)'
- en: '[Elevate Math Efficiency: Navigating Numpy Array Operations](https://www.kdnuggets.com/elevate-math-efficiency-navigating-numpy-array-operations)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[提高数学效率：导航 NumPy 数组操作](https://www.kdnuggets.com/elevate-math-efficiency-navigating-numpy-array-operations)'
- en: '[Linear Regression from Scratch with NumPy](https://www.kdnuggets.com/linear-regression-from-scratch-with-numpy)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[从头开始使用 NumPy 进行线性回归](https://www.kdnuggets.com/linear-regression-from-scratch-with-numpy)'
