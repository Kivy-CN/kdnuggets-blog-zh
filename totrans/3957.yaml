- en: How to Handle Outliers in Dataset with Pandas
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/how-to-handle-outliers-in-dataset-with-pandas](https://www.kdnuggets.com/how-to-handle-outliers-in-dataset-with-pandas)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![How to Handle Outliers in Dataset with Pandas](../Images/6bd591dc6b7d3f45f9bd398b27035931.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Outliers are abnormal observations that differ significantly from the rest of
    your data. They may occur due to experimentation error, measurement error, or
    simply that variability is present within the data itself. These outliers can
    severely impact your model's performance, leading to biased results - much like
    how a top performer in relative grading at universities can raise the average
    and affect the grading criteria. Handling outliers is a crucial part of the data
    cleaning procedure.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: In this article, I'll share how you can spot outliers and different ways to
    deal with them in your dataset.
  prefs: []
  type: TYPE_NORMAL
- en: Detecting Outliers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are several methods used to detect outliers. If I were to classify them,
    here is how it looks:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Visualization-Based Methods:** Plotting scatter plots or box plots to see
    data distribution and inspect it for abnormal data points.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Statistics-Based Methods:** These approaches involve z scores and IQR (Interquartile
    Range) which offer reliability but may be less intuitive.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'I won''t cover these methods extensively to stay focused, on the topic. However,
    I''ll include some references at the end, for exploration. We will use the IQR
    method in our example. Here is how this method works:'
  prefs: []
  type: TYPE_NORMAL
- en: '*IQR (Interquartile Range) = Q3 (75th percentile) - Q1 (25th percentile)*'
  prefs: []
  type: TYPE_NORMAL
- en: The IQR method states that any data points below **Q1 - 1.5 * IQR** or above
    **Q3 + 1.5 * IQR** are marked as outliers. Let's generate some random data points
    and detect the outliers using this method.
  prefs: []
  type: TYPE_NORMAL
- en: 'Make the necessary imports and generate the random data using `np.random`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Detect the outliers from the dataset using the IQR Method:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Output ⇒** Number of outliers detected: 8'
  prefs: []
  type: TYPE_NORMAL
- en: Visualize the dataset using scatter and box plots to see how it looks
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![Original Dataset](../Images/4f18796d0b43052494447fa3076c1afe.png)'
  prefs: []
  type: TYPE_IMG
- en: Original Dataset
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have detected the outliers, let's discuss some of the different
    ways to handle the outliers.
  prefs: []
  type: TYPE_NORMAL
- en: Handling Outliers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 1\. Removing Outliers
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This is one of the simplest approaches but not always the right one. You need
    to consider certain factors. If removing these outliers significantly reduces
    your dataset size or if they hold valuable insights, then excluding them from
    your analysis not be the most favorable decision. However, if they''re due to
    measurement errors and few in number, then this approach is suitable. Let''s apply
    this technique to the dataset generated above:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![Removing Outliers](../Images/3e24516c50b914c495dc20d4588f5806.png)'
  prefs: []
  type: TYPE_IMG
- en: Removing Outliers
  prefs: []
  type: TYPE_NORMAL
- en: Notice that the distribution of the data can actually be changed by removing
    outliers. If you remove some initial outliers, the definition of what is an outlier
    may very well change. Therefore, data that would have been in the normal range
    before, may be considered outliers under a new distribution. You can see a new
    outlier with the new box plot.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Capping Outliers
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This technique is used when you do not want to discard your data points but
    keeping those extreme values can also impact your analysis. So, you set a threshold
    for the maximum and the minimum values and then bring the outliers within this
    range. You can apply this capping to outliers or to your dataset as a whole too.
    Let''s apply the capping strategy to our complete dataset to bring it within the
    range of the 5th-95th percentile. Here is how you can execute this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![Capping Outliers](../Images/e37acd91d38a3c64ca676c3afb13d6ba.png)'
  prefs: []
  type: TYPE_IMG
- en: Capping Outliers
  prefs: []
  type: TYPE_NORMAL
- en: You can see from the graph that the upper and lower points in the scatter plot
    appear to be in a line due to capping.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Imputing Outliers
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Sometimes removing values from the analysis isn''t an option as it may lead
    to information loss, and you also don''t want those values to be set to max or
    min like in capping. In this situation, another approach is to substitute these
    values with more meaningful options like mean, median, or mode. The choice varies
    depending on the domain of data under observation, but be mindful of not introducing
    biases while using this technique. Let''s replace our outliers with the mode (the
    most frequently occurring value) value and see how the graph turns out:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![Imputing Outliers](../Images/1743fdb42e0d8bf5950eb9642a87bb47.png)'
  prefs: []
  type: TYPE_IMG
- en: Imputing Outliers
  prefs: []
  type: TYPE_NORMAL
- en: Notice that now we don't have any outliers, but this doesn't guarantee that
    outliers will be removed since after the imputation, the IQR also changes. You
    need to experiment to see what fits best for your case.
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Applying a Transformation
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Transformation is applied to your complete dataset instead of specific outliers.
    You basically change the way your data is represented to reduce the impact of
    the outliers. There are several transformation techniques like log transformation,
    square root transformation, box-cox transformation, Z-scaling, Yeo-Johnson transformation,
    min-max scaling, etc. Choosing the right transformation for your case depends
    on the nature of the data and your end goal of the analysis. Here are a few tips
    to help you select the right transformation technique:'
  prefs: []
  type: TYPE_NORMAL
- en: '**For right-skewed data:** Use log, square root, or Box-Cox transformation.
    Log is even better when you want to compress small number values that are spread
    over a large scale. Square root is better when, apart from right skew, you want
    a less extreme transformation and also want to handle zero values, while Box-Cox
    also normalizes your data, which the other two don''t.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**For left-skewed data:** Reflect the data first and then apply the techniques
    mentioned for right-skewed data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**To stabilize variance:** Use Box-Cox or Yeo-Johnson (similar to Box-Cox but
    handles zero and negative values as well).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**For mean-centering and scaling:** Use z-score standardization (standard deviation
    = 1).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**For range-bound scaling (fixed range i.e., [2,5]):** Use min-max scaling.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let''s generate a right-skewed dataset and apply the log transformation to
    the complete data to see how this works:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![Applying Log Transformation](../Images/c917598f2da447d949b0d68e87c141f7.png)'
  prefs: []
  type: TYPE_IMG
- en: Applying Log Transformation
  prefs: []
  type: TYPE_NORMAL
- en: You can see that a simple transformation has handled most of the outliers itself
    and reduced them to just one. This shows the power of transformation in handling
    outliers. In this case, it’s necessary to be cautious and know your data well
    enough to choose appropriate transformation because failing to do so may cause
    problems for you.
  prefs: []
  type: TYPE_NORMAL
- en: Wrapping Up
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This brings us to the end of our discussion about outliers, different ways
    to detect them, and how to handle them. This article is part of the pandas series,
    and you can check other articles on my author page. As mentioned above, here are
    some additional resources for you to study more about outliers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Outlier detection methods in Machine Learning](https://towardsdatascience.com/outlier-detection-methods-in-machine-learning-1c8b7cca6cb8)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Different transformations in Machine Learning](https://medium.com/@vinodkumargr/09-data-transformations-in-ml-different-transformations-in-machine-learning-log-transformer-d794d61d143d)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Types Of Transformations For Better Normal Distribution](https://towardsdatascience.com/types-of-transformations-for-better-normal-distribution-61c22668d3b9)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**[](https://www.linkedin.com/in/kanwal-mehreen1/)**[Kanwal Mehreen](https://www.linkedin.com/in/kanwal-mehreen1/)****
    Kanwal is a machine learning engineer and a technical writer with a profound passion
    for data science and the intersection of AI with medicine. She co-authored the
    ebook "Maximizing Productivity with ChatGPT". As a Google Generation Scholar 2022
    for APAC, she champions diversity and academic excellence. She''s also recognized
    as a Teradata Diversity in Tech Scholar, Mitacs Globalink Research Scholar, and
    Harvard WeCode Scholar. Kanwal is an ardent advocate for change, having founded
    FEMCodes to empower women in STEM fields.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Removing Outliers Using Standard Deviation in Python](https://www.kdnuggets.com/2017/02/removing-outliers-standard-deviation-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Handle Time Zones and Timestamps Accurately with Pandas](https://www.kdnuggets.com/how-to-handle-time-zones-and-timestamps-accurately-with-pandas)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Techniques to Handle Imbalanced Data](https://www.kdnuggets.com/2017/06/7-techniques-handle-imbalanced-data.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Masked Arrays in NumPy to Handle Missing Data](https://www.kdnuggets.com/masked-arrays-in-numpy-to-handle-missing-data)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News, August 31: The Complete Data Science Study Roadmap…](https://www.kdnuggets.com/2022/n35.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Handle Missing Data with Scikit-learn''s Imputer Module](https://www.kdnuggets.com/how-to-handle-missing-data-with-scikit-learns-imputer-module)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
