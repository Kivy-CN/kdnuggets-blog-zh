- en: Write Clean Python Code Using Pipes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用管道编写干净的Python代码
- en: 原文：[https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)
- en: '**By [Khuyen Tran](https://www.linkedin.com/in/khuyen-tran-1401/), Data Science
    Intern**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**由[Khuyen Tran](https://www.linkedin.com/in/khuyen-tran-1401/)，数据科学实习生**'
- en: Motivation
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动机
- en: '`map` and `filter` are two efficient Python methods to work with iterables.
    However, the code can look messy if you use both `map` and `filter` at the same
    time.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`map`和`filter`是两个高效的Python方法用于处理可迭代对象。然而，如果同时使用`map`和`filter`，代码可能会显得杂乱无章。'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持您的组织的IT工作'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '![](../Images/26fad68726a5d69256b7604825d66940.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/26fad68726a5d69256b7604825d66940.png)'
- en: Image by Author
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 作者图片
- en: Wouldn’t be nice if you can use pipes `|` to apply multiple methods on an iterable
    like below?
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你可以使用管道`|`像下面这样在可迭代对象上应用多个方法，不会很好吗？
- en: '![](../Images/34e15612a6a99cfaa62ac5afd6c1c6e7.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/34e15612a6a99cfaa62ac5afd6c1c6e7.png)'
- en: Image by Author
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 作者图片
- en: The library Pipe allows you to do exactly that.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Pipe库允许你做到这一点。
- en: What is Pipe?
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是Pipe？
- en: '[Pipe](https://github.com/JulienPalard/Pipe) is a Python library that enables
    you to use pipes in Python. A pipe (`|`) passes the results of one method to another
    method.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[Pipe](https://github.com/JulienPalard/Pipe)是一个Python库，允许你在Python中使用管道。管道(`|`)将一个方法的结果传递给另一个方法。'
- en: I like Pipe because it makes my code look cleaner when applying multiple methods
    to a Python iterable. Since Pipe only provides a few methods, it is also very
    easy to learn Pipe. In this article, I will show you some methods I found the
    most useful.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢Pipe，因为它在对Python可迭代对象应用多个方法时，使我的代码看起来更简洁。由于Pipe只提供了一些方法，它也非常容易学习。在这篇文章中，我将展示一些我发现最有用的方法。
- en: 'To install Pipe, type:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装Pipe，请输入：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Where — Filter Elements in an Iterable
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Where — 过滤可迭代对象中的元素
- en: Similar to SQL, Pipe’s `where` method can also be used to filter elements in
    an iterable.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于SQL，Pipe的`where`方法也可以用于过滤可迭代对象中的元素。
- en: '![](../Images/7a15fc6474f7fac98aeb234d46f3d22b.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7a15fc6474f7fac98aeb234d46f3d22b.png)'
- en: Image by Author
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 作者图片
- en: Select — Apply a Function to an Iterable
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Select — 将函数应用于可迭代对象
- en: The `select` method is similar to the `map` method. `select` applies a method
    to each element of an iterable.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`select`方法类似于`map`方法。`select`对可迭代对象的每个元素应用一个方法。'
- en: In the code below, I use `select` to multiply each element in the list by 2.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，我使用`select`将列表中的每个元素乘以2。
- en: '![](../Images/9bf7eaee1a9bb411f55f8cc09cd5c5ff.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9bf7eaee1a9bb411f55f8cc09cd5c5ff.png)'
- en: Image by Author
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 作者图片
- en: 'Now, you might wonder: Why do we need the methods `where` and `select` if they
    have the same functionalities as `map` and `filter` ?'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可能会想：为什么我们需要`where`和`select`这些方法，如果它们的功能与`map`和`filter`相同？
- en: It is because you can insert one method after another method using pipes. As
    a result, using pipes removes nested parentheses and makes the code more readable.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为你可以使用管道将一个方法插入到另一个方法之后。因此，使用管道可以去掉嵌套的括号，使代码更具可读性。
- en: '![](../Images/34e15612a6a99cfaa62ac5afd6c1c6e7.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/34e15612a6a99cfaa62ac5afd6c1c6e7.png)'
- en: Image by Author
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 作者图片
- en: Unfold Iterables
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 展开可迭代对象
- en: chain — Chain a Sequence of Iterables
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: chain — 链接可迭代对象的序列
- en: It can be a pain to work with a nested iterable. Luckily, you can use `chain` to
    chain a sequence of iterables.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 处理嵌套的可迭代对象可能很麻烦。幸运的是，您可以使用`chain`来连接一系列可迭代对象。
- en: '![](../Images/92f59c0e36e157f3297cb328782be4a5.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/92f59c0e36e157f3297cb328782be4a5.png)'
- en: Image by Author
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 作者图片
- en: Even though the iterable is less nested after applying `chain`, we still have
    a nested list. To deal with a deeply nested list, we can use `traverse` instead.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在应用`chain`后可迭代对象的嵌套层级减少了，我们仍然有一个嵌套列表。处理深度嵌套的列表时，我们可以使用`traverse`。
- en: traverse — Recursively Unfold Iterables
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: traverse — 递归展开可迭代对象
- en: The `traverse` method can be used to recursively unfold iterables. Thus, you
    can use this method to turn a deeply nested list into a flat list.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`traverse`方法可以递归地展开可迭代对象。因此，您可以使用此方法将深度嵌套的列表转换为平坦的列表。'
- en: '![](../Images/1a5143597587aa2eac2c804ceeef9ffa.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1a5143597587aa2eac2c804ceeef9ffa.png)'
- en: Image by Author
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: Let’s integrate this method with the `select` method to get the values of a
    dictionary and flatten the list.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将这种方法与`select`方法结合，以获取字典的值并扁平化列表。
- en: '![](../Images/83a8a0af5bb38e72e6646b3f42fbe7f0.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/83a8a0af5bb38e72e6646b3f42fbe7f0.png)'
- en: Image by Author
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: Pretty cool!
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 很酷！
- en: Group Elements in a List
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 列表中的元素分组
- en: Sometimes, it might be useful to group elements in a list using a certain function.
    That could be easily done with the `groupby` method.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，使用某个函数对列表中的元素进行分组可能会很有用。可以通过`groupby`方法轻松实现。
- en: To see how this method works, let’s turn a list of numbers into a dictionary
    that groups numbers based on whether they are even or odd.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 为了了解此方法的工作原理，让我们将一个数字列表转换为一个基于数字是否为偶数或奇数进行分组的字典。
- en: '![](../Images/637fc5ccf9f573625b2d94a0af8b06d7.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/637fc5ccf9f573625b2d94a0af8b06d7.png)'
- en: Image by Author
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: 'In the code above, we use `groupby` to group numbers into the`Even` group and
    the`Odd` group. The output after applying this method looks like the below:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码中，我们使用`groupby`将数字分组为`Even`组和`Odd`组。应用此方法后的输出如下：
- en: '[PRE1]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Next, we use `select` to turn a list of tuples into a list of dictionaries whose
    keys are the first elements in the tuples and values are the second elements in
    the tuples.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们使用`select`将一个元组列表转换为字典列表，字典的键是元组中的第一个元素，值是元组中的第二个元素。
- en: '[PRE2]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Cool! To get only the values that are greater than 2, we can add the `where` method
    inside the `select` method:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！为了只获取大于2的值，我们可以在`select`方法内部添加`where`方法：
- en: '![](../Images/c8bfc0300e765749d13dc3cad84b019c.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c8bfc0300e765749d13dc3cad84b019c.png)'
- en: Image by Author
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: Note that there are no longer `2` and `1` in the outputs.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 注意输出中不再包含`2`和`1`。
- en: dedup — Deduplicate Values Using a Key
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: dedup — 使用键去重值
- en: The `dedup` method removes duplicates in a list.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '`dedup`方法去除列表中的重复项。'
- en: '![](../Images/9df41f88fc23e61fc0e7513ca3eebcc2.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9df41f88fc23e61fc0e7513ca3eebcc2.png)'
- en: Image by Author
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: That might not sound interesting since the `set` method can do the same thing.
    However, this method is more flexible since it enables you to get unique elements
    using a key.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能听起来不太有趣，因为`set`方法也可以做到这一点。然而，这种方法更灵活，因为它使您能够通过键获取唯一元素。
- en: For example, you can use this method to get a unique element that is smaller
    than 5 and another unique element that is larger than or equal to 5.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可以使用这种方法获取一个小于5的唯一元素和一个大于或等于5的唯一元素。
- en: '![](../Images/d19d7abd317883a464deeacdd0018073.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d19d7abd317883a464deeacdd0018073.png)'
- en: Image by Author
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: Now, let’s combine this method with `select` and `where` to get the values of
    a dictionary that has duplicated keys and `None` values.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将此方法与`select`和`where`结合，以获取具有重复键和`None`值的字典的值。
- en: '![](../Images/4c4ec094c3fefc8c0e362a8c7b61eafa.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4c4ec094c3fefc8c0e362a8c7b61eafa.png)'
- en: Image by Author
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: 'In the code above, we:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码中，我们：
- en: remove items with the same `name`
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除具有相同`name`的项
- en: get the values of `count`
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取`count`的值
- en: only choose the values that are integers.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅选择整数值。
- en: Within a few lines of code, we can apply multiple methods to an iterable while
    still keeping the code clean. Pretty cool, isn’t it?
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在几行代码内，我们可以对一个可迭代对象应用多种方法，同时保持代码简洁。很酷，不是吗？
- en: Conclusion
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: Congratulations! You have just learned how to use pipe to keep your code clean
    and short. I hope this article will give you the knowledge to turn complicated
    operations on an iterable into one simple line of code.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您刚刚学会了如何使用pipe保持代码简洁且短小。我希望这篇文章能让您学到如何将复杂的可迭代操作简化为一行代码。
- en: 'Feel free to play and fork the source code of this article here:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在此处随意玩弄并fork本文的源代码：
- en: '[**Data-science/pipe.ipynb at master · khuyentran1401/Data-science**](https://github.com/khuyentran1401/Data-science/blob/master/productive_tools/pipe.ipynb)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[**Data-science/pipe.ipynb at master · khuyentran1401/Data-science**](https://github.com/khuyentran1401/Data-science/blob/master/productive_tools/pipe.ipynb)'
- en: I like to write about basic data science concepts and play with different algorithms
    and data science tools. You could connect with me on [LinkedIn](https://www.linkedin.com/in/khuyen-tran-1401/) and [Twitter](https://twitter.com/KhuyenTran16).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢写关于基础数据科学概念的文章，并玩转各种算法和数据科学工具。你可以在[LinkedIn](https://www.linkedin.com/in/khuyen-tran-1401/)和[Twitter](https://twitter.com/KhuyenTran16)上与我联系。
- en: 'Star [this repo](https://github.com/khuyentran1401/Data-science) if you want
    to check out the codes for all of the articles I have written. Follow me on Medium
    to stay informed with my latest data science articles like these:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看我写的所有文章中的代码，请给[这个仓库](https://github.com/khuyentran1401/Data-science)加个星标。关注我在
    Medium 上，以便获取我最新的数据科学文章：
- en: '[**Python Clean Code: 6 Best Practices to Make your Python Functions more Readable**](https://towardsdatascience.com/python-clean-code-6-best-practices-to-make-your-python-functions-more-readable-7ea4c6171d60)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[**Python 清晰代码：6 个最佳实践使你的 Python 函数更具可读性**](https://towardsdatascience.com/python-clean-code-6-best-practices-to-make-your-python-functions-more-readable-7ea4c6171d60)'
- en: '[**4 pre-commit Plugins to Automate Code Reviewing and Formatting in Python**](https://towardsdatascience.com/4-pre-commit-plugins-to-automate-code-reviewing-and-formatting-in-python-c80c6d2e9f5)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[**4 个 pre-commit 插件以自动化 Python 代码审查和格式化**](https://towardsdatascience.com/4-pre-commit-plugins-to-automate-code-reviewing-and-formatting-in-python-c80c6d2e9f5)'
- en: '[**Pydash: A Kitchen Sink of Missing Python Utilities**](https://towardsdatascience.com/pydash-a-bucket-of-missing-python-utilities-5d10365be4fc)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[**Pydash：一个包含缺失 Python 实用工具的大杂烩**](https://towardsdatascience.com/pydash-a-bucket-of-missing-python-utilities-5d10365be4fc)'
- en: '[**3 Python Tricks to Read, Create, and Run Multiple Files Automatically**](https://towardsdatascience.com/3-python-tricks-to-read-create-and-run-multiple-files-automatically-5221ebaad2ba)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[**3 个 Python 技巧以自动读取、创建和运行多个文件**](https://towardsdatascience.com/3-python-tricks-to-read-create-and-run-multiple-files-automatically-5221ebaad2ba)'
- en: '**Bio: [Khuyen Tran](https://www.linkedin.com/in/khuyen-tran-1401/)** is a
    prolific data science writer, and has written [an impressive collection of useful
    data science topics along with code and articles](https://github.com/khuyentran1401/Data-science).
    Khuyne is currently looking for a machine learning engineer role, a data scientist
    role, or a developer advocate role in Bay Area after May 2022, so please reach
    out if you are looking for someone with her set of skills.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**简历： [Khuyen Tran](https://www.linkedin.com/in/khuyen-tran-1401/)** 是一位多产的数据科学作家，撰写了[一系列有用的数据科学主题，包含代码和文章](https://github.com/khuyentran1401/Data-science)。Khuyen
    目前在寻找 2022 年 5 月后在湾区的机器学习工程师、数据科学家或开发者倡导者职位，如果你在寻找具备她技能的人选，请与她联系。'
- en: '[Original](https://towardsdatascience.com/write-clean-python-code-using-pipes-1239a0f3abf5).
    Reposted with permission.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/write-clean-python-code-using-pipes-1239a0f3abf5)。已获许可转载。'
- en: '**Related:**'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[5 Advanced Tips on Python Sequences](/2021/11/5-advanced-tips-python-sequences.html)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[关于 Python 序列的 5 个高级技巧](/2021/11/5-advanced-tips-python-sequences.html)'
- en: '[A Beginner’s Guide to End to End Machine Learning](/2021/12/beginner-guide-end-end-machine-learning.html)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[初学者的端到端机器学习指南](/2021/12/beginner-guide-end-end-machine-learning.html)'
- en: '[A Spreadsheet that Generates Python: The Mito JupyterLab Extension](/2021/11/spreadsheet-generates-python-mito-jupyterlab-extension.html)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[生成 Python 代码的电子表格：Mito JupyterLab 扩展](/2021/11/spreadsheet-generates-python-mito-jupyterlab-extension.html)'
- en: More On This Topic
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Building a solid data team](https://www.kdnuggets.com/2021/12/build-solid-data-team.html)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[建立一个坚实的数据团队](https://www.kdnuggets.com/2021/12/build-solid-data-team.html)'
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[是什么让 Python 成为初创企业理想的编程语言](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个数据科学家都应该知道的三个 R 库（即使你使用 Python）](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[停止学习数据科学以寻找目标，并通过寻找目标来...](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[成为伟大的数据科学家需要的 5 项关键技能](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个初学者数据科学家都应该掌握的6种预测模型](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
