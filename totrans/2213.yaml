- en: Rust Burn Library for Deep Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/rust-burn-library-for-deep-learning](https://www.kdnuggets.com/rust-burn-library-for-deep-learning)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Rust Burn Library for Deep Learning](../Images/c1baa8606090cc97a9227c30f8a99898.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: What is Rust Burn?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Rust Burn is a new deep learning framework written entirely in the Rust programming
    language. The motivation behind creating a new framework rather than using existing
    ones like PyTorch or TensorFlow is to build a versatile framework that caters
    well to various users including researchers, machine learning engineers, and low-level
    software engineers.
  prefs: []
  type: TYPE_NORMAL
- en: The key design principles behind Rust Burn are flexibility, performance, and
    ease of use.
  prefs: []
  type: TYPE_NORMAL
- en: '**Flexibility** comes from the ability to swiftly implement cutting-edge research
    ideas and run experiments.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Performance** is achieved through optimizations like leveraging hardware-specific
    features such as Tensor Cores on Nvidia GPUs.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Ease of use** stems from simplifying the workflow of training, deploying,
    and running models in production.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Key Features:**'
  prefs: []
  type: TYPE_NORMAL
- en: Flexible and dynamic computational graph
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thread-safe data structures
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Intuitive abstractions for simplified development process
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blazingly fast performance during training and inference
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Supports multiple backend implementations for both CPU and GPU
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Full support for logging, metric, and checkpointing during training
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Small but active developer community
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting Started
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Installing Rust
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Burn is a powerful deep learning framework that is based on Rust programming
    language. It requires a basic understanding of Rust, but once you've got that
    down, you'll be able to take advantage of all the features that Burn has to offer.
  prefs: []
  type: TYPE_NORMAL
- en: To install it using an official [guide](https://www.rust-lang.org/tools/install).
    You can also check out [GeeksforGeeks](https://www.geeksforgeeks.org/how-to-install-rust-on-windows-and-linux-operating-system/)
    guide for installing Rust on Windows and Linux with screenshots.
  prefs: []
  type: TYPE_NORMAL
- en: '![Rust Burn Library for Deep Learning](../Images/30a4b3cdacc98040e517fa063e7aec99.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from [Install Rust](https://www.rust-lang.org/tools/install)
  prefs: []
  type: TYPE_NORMAL
- en: Installing Burn
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To use Rust Burn, you first need to have Rust installed on your system. Once
    Rust is correctly set up, you can create a new Rust application using **cargo**,
    Rust's package manager.
  prefs: []
  type: TYPE_NORMAL
- en: 'Run the following command in your current directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Navigate into this new directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, add Burn as a dependency, along with the WGPU backend feature which enables
    GPU operations:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'In the end, compile the project to install Burn:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This will install the Burn framework along with the WGPU backend. WGPU allows
    Burn to execute low-level GPU operations.
  prefs: []
  type: TYPE_NORMAL
- en: Example Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Element Wise Addition
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To run the following code you have to open and replace content in `src/main.rs`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: In the main function, we have created two tensors with WGPU backend and performed
    addition.
  prefs: []
  type: TYPE_NORMAL
- en: To execute the code, you must run `cargo run` in the terminal.
  prefs: []
  type: TYPE_NORMAL
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: You should now be able to view the outcome of the addition.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '**Note:** the following code is an example from Burn Book: [Getting started](https://burn-rs.github.io/book/getting-started.html).'
  prefs: []
  type: TYPE_NORMAL
- en: Position Wise Feed Forward Module
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here is an example of how easy it is to use the framework. We declare a position-wise
    feed-forward module and its forward pass using this code snippet.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The above code is from the GitHub [repository](https://github.com/burn-rs/burn).
  prefs: []
  type: TYPE_NORMAL
- en: Example Projects
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To learn about more examples and run them, clone the [https://github.com/burn-rs/burn](https://github.com/burn-rs/burn)
    repository and run the projects below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[MNIST](https://github.com/burn-rs/burn/tree/main/examples/mnist): Train a
    model on either CPU or GPU using various backends.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[MNIST Inference Web](https://github.com/burn-rs/burn/tree/main/examples/mnist-inference-web):
    Model inference in the browser.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Text Classification](https://github.com/burn-rs/burn/tree/main/examples/text-classification):
    Train a transformer encoder from scratch on GPU.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Text Generation](https://github.com/burn-rs/burn/tree/main/examples/text-generation):
    Build and train autoregressive transformer from scratch on GPU.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pre-trained Models
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To build your AI application, you can use the following pre-trained models and
    fine-tune them with your dataset.
  prefs: []
  type: TYPE_NORMAL
- en: 'SqueezeNet: [squeezenet-burn](https://github.com/burn-rs/models/blob/main/squeezenet-burn/README.md)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Llama 2: [Gadersd/llama2-burn](https://github.com/Gadersd/llama2-burn)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Whisper: [Gadersd/whisper-burn](https://github.com/Gadersd/whisper-burn)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Stable Diffusion v1.4: [Gadersd/stable-diffusion-burn](https://github.com/Gadersd/stable-diffusion-burn)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Rust Burn represents an exciting new option in the deep learning framework landscape.
    If you are already a Rust developer, you can leverage Rust's speed, safety, and
    concurrency to push the boundaries of what's possible in deep learning research
    and production. Burn sets out to find the right compromises in flexibility, performance,
    and usability to create a uniquely versatile framework suitable for diverse use
    cases.
  prefs: []
  type: TYPE_NORMAL
- en: While still in its early stages, Burn shows promise in tackling pain points
    of existing frameworks and serving the needs of various practitioners in the field.
    As the framework matures and the community around it grows, it has the potential
    to become a production-ready framework on par with established options. Its fresh
    design and language choice offer new possibilities for the deep learning community.
  prefs: []
  type: TYPE_NORMAL
- en: Resources
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Documenatiatin:** [https://burn-rs.github.io/book/overview.html](https://burn-rs.github.io/book/overview.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Website:** [https://burn-rs.github.io/](https://burn-rs.github.io/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**GitHub:** [https://github.com/burn-rs/burn](https://github.com/burn-rs/burn)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Demo:** [https://burn-rs.github.io/demo](https://burn-rs.github.io/demo)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[](https://www.polywork.com/kingabzpro)****[Abid Ali Awan](https://www.polywork.com/kingabzpro)****
    ([@1abidaliawan](https://www.linkedin.com/in/1abidaliawan)) is a certified data
    scientist professional who loves building machine learning models. Currently,
    he is focusing on content creation and writing technical blogs on machine learning
    and data science technologies. Abid holds a Master''s degree in technology management
    and a bachelor''s degree in telecommunication engineering. His vision is to build
    an AI product using a graph neural network for students struggling with mental
    illness.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Using Datawig, an AWS Deep Learning Library for Missing Value Imputation](https://www.kdnuggets.com/2021/12/datawig-aws-deep-learning-library-missing-value-imputation.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[skops: A New Library to Improve Scikit-learn in Production](https://www.kdnuggets.com/2023/02/skops-new-library-improve-scikitlearn-production.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introducing the Testing Library for Natural Language Processing](https://www.kdnuggets.com/2023/04/introducing-testing-library-natural-language-processing.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Beyond Accuracy: Evaluating & Improving a Model with the NLP Test Library](https://www.kdnuggets.com/2023/04/john-snow-beyond-accuracy-nlp-test-library.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Pandas AI: The Generative AI Python Library](https://www.kdnuggets.com/2023/05/pandas-ai-generative-ai-python-library.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introducing OpenLLM: Open Source Library for LLMs](https://www.kdnuggets.com/2023/07/introducing-openllm-open-source-library-llms.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
