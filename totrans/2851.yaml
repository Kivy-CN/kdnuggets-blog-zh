- en: Why software engineering processes and tools don’t work for machine learning
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么软件工程流程和工具不适用于机器学习
- en: 原文：[https://www.kdnuggets.com/2019/12/comet-software-engineering-machine-learning.html](https://www.kdnuggets.com/2019/12/comet-software-engineering-machine-learning.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/12/comet-software-engineering-machine-learning.html](https://www.kdnuggets.com/2019/12/comet-software-engineering-machine-learning.html)
- en: Sponsored Post.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 赞助帖子。
- en: '**By [Nikolas Laskaris](https://www.comet.ml/blog/?author=7), [Comet.ml](https://www.comet.ml/)**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Nikolas Laskaris](https://www.comet.ml/blog/?author=7), [Comet.ml](https://www.comet.ml/)**'
- en: “AI is the new electricity.” At least, that’s what [Andrew Ng](https://www.coursera.org/instructor/andrewng) suggested
    at this year’s [Amazon re:MARS](https://remars.amazon.com/) conference. In his [keynote
    address](https://www.youtube.com/watch?v=j2nGxw8sKYU), Ng discussed the rapid
    growth of artificial intelligence (AI) — its steady march into industry after
    industry; the unrelenting presence of AI breakthroughs, technologies, or fears
    in the headlines each day; the tremendous amount of investment, both from established
    enterprises seeking to modernize (see: [Sony](https://www.engadget.com/2019/11/19/sony-ai/),
    a couple of weeks ago) as well as from venture investors parachuting into the
    market riding a wave of AI-focused founders.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: “人工智能是新的电力。”至少，这就是[Andrew Ng](https://www.coursera.org/instructor/andrewng)在今年的[Amazon
    re:MARS](https://remars.amazon.com/)大会上所提出的观点。在他的[主题演讲](https://www.youtube.com/watch?v=j2nGxw8sKYU)中，Ng讨论了人工智能（AI）的快速增长——它不断渗透到各个行业；每天头条中对AI突破、技术或恐惧的持续关注；来自寻求现代化的既有企业（例如：[Sony](https://www.engadget.com/2019/11/19/sony-ai/)）以及从风险投资者在AI领域创始人潮流中进入市场的大量投资。
- en: “AI is the next big transformation,” Ng insists, and we’re watching the transformation
    unfold.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: “人工智能是下一个重大变革，”Ng坚持说，我们正在见证这一变革的展开。
- en: While AI may be the new electricity (and as a Data Scientist at [Comet](http://comet.ml/),
    I don’t need much convincing), significant challenges remain for the field to
    realize this potential.** In this blog post, I’m going to talk about why data
    scientists and teams can’t rely on the tools and processes that software engineering
    teams have been using for the last 20 years for machine learning** **(ML). **
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管人工智能可能是新的电力（作为[Comet](http://comet.ml/)的数据科学家，我不需要太多说服），但这一领域要实现其潜力仍面临重大挑战。**在这篇博客文章中，我将讨论为什么数据科学家和团队不能依赖软件工程团队过去20年用于机器学习**
    **(ML)的工具和流程。**
- en: The reliance on the tools and processes of software engineering makes sense
    – data science and software engineering are both disciplines whose principal tool
    is* code*. Yet *what is being done* in data science teams is radically different
    from what is being done in software engineering teams. An inspection of the core
    differences between the two disciplines is a helpful exercise in clarifying how
    we should think about structuring our tools and processes for doing AI.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 依赖软件工程的工具和流程是合理的——数据科学和软件工程都是以*代码*为主要工具的学科。然而，*数据科学团队正在做的*与软件工程团队正在做的有着根本的不同。检查这两个学科之间的核心差异，有助于明确我们应该如何构建工具和流程以进行人工智能。
- en: At Comet, we believe the adoption of tools and processes designed specifically
    for AI will help practitioners unlock and enable the type of revolutionary transformation
    Ng is speaking about.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在Comet，我们相信，采用专为人工智能设计的工具和流程将帮助从业者解锁并实现Ng所说的那种革命性转变。
- en: Different Disciplines, Different Processes
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 不同学科，不同流程
- en: 'Software engineering is a discipline whose aim is, considered broadly, the
    design and implementation of programs that a computer can execute to perform a
    defined function. Assuming the input to a software program is within the expected
    (or constrained) range of inputs, its behavior is knowable. In a [talk](https://leon.bottou.org/talks/2challenges) at
    ICML in 2015, Leon Bottou formulated this well: in software engineering an algorithm
    or program can be proven *correct*, in the sense that given particular assumptions
    about the input, certain properties will be true when the algorithm or program
    terminates.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 软件工程是一个学科，其目标是广泛地设计和实现计算机可以执行以完成定义功能的程序。假设软件程序的输入在预期（或受限）范围内，其行为是可知的。在2015年ICML的一个[talk](https://leon.bottou.org/talks/2challenges)中，Leon
    Bottou很好地阐述了这一点：在软件工程中，算法或程序可以被证明是*正确的*，意味着在给定特定输入假设的情况下，某些属性在算法或程序终止时将是正确的。
- en: '![Figure](../Images/17ed958cac240f480f66b7d87050da24.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/17ed958cac240f480f66b7d87050da24.png)'
- en: Source: [Futurice](https://www.futurice.com/blog/differences-between-machine-learning-and-software-engineering/)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[Futurice](https://www.futurice.com/blog/differences-between-machine-learning-and-software-engineering/)
- en: 'The provable correctness of software programs has shaped the tools and processes
    we have built for doing software engineering. Consider one corollary characteristic
    of software programming that follows from provable correctness: if a program is
    provably correct for some input values, then the program contains sub-programs
    that are also provably correct for those input values. This is why engineering
    processes like [Agile](https://en.wikipedia.org/wiki/Scaled_agile_framework) are,
    broadly speaking, successful and productive for software teams. Breaking apart
    these projects into sub-tasks works. Most [waterfall](https://en.wikipedia.org/wiki/Waterfall_model) and [scrum](https://en.wikipedia.org/wiki/Scrum_(software_development)) implementations
    also include sub-tasking as well.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 可证明的程序正确性已经塑造了我们在软件工程中使用的工具和流程。考虑一下从可证明正确性中衍生出的一个相关特性：如果一个程序对某些输入值是可证明正确的，那么程序中包含的子程序对于这些输入值也同样是可证明正确的。这就是为什么像[敏捷](https://en.wikipedia.org/wiki/Scaled_agile_framework)这样的工程流程在软件团队中通常是成功和高效的。将这些项目拆解为子任务是有效的。大多数[瀑布模型](https://en.wikipedia.org/wiki/Waterfall_model)和[scrum](https://en.wikipedia.org/wiki/Scrum_(software_development))实现也包括了子任务的划分。
- en: '![](../Images/75ab89ff047a322946c1c55059825837.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/75ab89ff047a322946c1c55059825837.png)'
- en: We see a lot of data science teams using workflow processes that are identical
    or broadly similar to these software methodologies. Unfortunately, they don’t
    work very well. The reason? The provable correctness of software engineering does
    not extend to AI and machine learning. In (supervised) machine learning, the only
    guarantee we have about a model we’ve built is that if the training set is an [iid](https://en.wikipedia.org/wiki/Independent_and_identically_distributed_random_variables) (independent
    and identically distributed) sample from some distribution, then performance on
    another iid sample from the same distribution will be *close* to the performance
    on the training set. Because uncertainty is an intrinsic property of machine learning,
    sub-tasking can lead to unforeseeable downstream effects.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到许多数据科学团队使用与这些软件方法完全相同或大致相似的工作流程。不幸的是，这些方法效果并不好。原因是什么？软件工程的可证明正确性并没有扩展到人工智能和机器学习中。在（监督）机器学习中，对于我们建立的模型，唯一的保证是，如果训练集是某个分布的[iid](https://en.wikipedia.org/wiki/Independent_and_identically_distributed_random_variables)（独立同分布）样本，那么来自同一分布的另一个iid样本上的性能将会*接近*训练集上的性能。由于不确定性是机器学习的固有特性，子任务划分可能导致不可预见的下游影响。
- en: '**Why is uncertainty intrinsic to machine learning?**'
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**为什么不确定性是机器学习的固有特性？**'
- en: Part of the answer lies in the fact that the problems that are both (a) interesting
    to us and (b) amenable to machine learning solutions (self-driving cars, object
    recognition, labeling images, and generative language models, to name a few) do
    not have a clear reproducible mathematical or programmatic specification. In place
    of specifications, machine learning systems feed in lots of data in order to detect
    patterns and generate predictions. Put another way, the *purpose of machine learning
    is to create a statistical proxy that can serve as a specification for one of
    these tasks*. We hope our collected data is a representative subsample of the
    real-world distribution, but in practice we cannot know exactly how well this
    condition is met. Finally, the algorithms and model architectures we use are complex,
    sufficiently complex that we cannot always break them apart into sub-models to
    understand precisely what is happening.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 部分答案在于这样一个事实：那些既对我们有趣又适合机器学习解决方案（例如自动驾驶汽车、物体识别、图像标注和生成语言模型等）的难题，并没有明确可重复的数学或程序规范。作为规范的替代，机器学习系统通过输入大量数据来检测模式并生成预测。换句话说，*机器学习的目的是创建一个统计代理，它可以作为这些任务之一的规范*。我们希望我们收集的数据是现实世界分布的一个代表性子样本，但实际上我们无法确切知道这个条件被满足的程度。最后，我们使用的算法和模型架构是复杂的，足够复杂到我们无法总是将它们拆解成子模型以准确理解发生了什么。
- en: From this description, obstacles to the *knowability* of machine learning systems
    should be somewhat obvious. Inherent to the types of problems amenable to machine
    learning is a lack of a clear mathematical specification. The statistical proxy
    we use in the absence of a specification is accumulating lots of environmental
    data we *hope* is iid and representative. And the models we use to extract patterns
    from this collected data are sufficiently complex that we cannot reliably break
    them apart and understand precisely how they work. My colleague at Comet, Dhruv
    Nair, has written a three-part series on uncertainty in machine learning (here’s
    a link to [Part I](https://www.comet.ml/blog/?p=662)) if you’d like to dig deeper
    into this topic.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个描述中，机器学习系统的*可知性*障碍应该是显而易见的。机器学习所适用的问题类型固有地缺乏明确的数学规范。在没有规范的情况下，我们使用的统计代理是积累大量我们*希望*是独立同分布且具有代表性的环境数据。我们用来从这些收集的数据中提取模式的模型足够复杂，以至于我们无法可靠地拆解它们并准确理解它们的工作原理。Comet的同事Dhruv
    Nair写了一系列关于机器学习不确定性的三部分系列文章（这是[第一部分](https://www.comet.ml/blog/?p=662)的链接），如果你想深入探讨这个话题。
- en: Consider, then, the implications for something like the Agile methodology used
    on a machine learning project. We cannot possibly hope to break machine learning
    tasks into *sub-tasks*, tackled as part of some larger sprint and then pieced
    together like legos into a whole product, platform, or feature, because we cannot
    reliably predict how the sub-models, or the model itself, will function.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，考虑一下类似于在机器学习项目上使用的敏捷方法的影响。我们不可能希望将机器学习任务拆解成*子任务*，作为某个更大冲刺的一部分来处理，然后像乐高一样拼凑成一个整体产品、平台或功能，因为我们无法可靠地预测子模型或模型本身的功能。
- en: '![Figure](../Images/f67a036a08977e95aabdbd6e468dcaa3.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/f67a036a08977e95aabdbd6e468dcaa3.png)'
- en: Source: [Youtube](https://www.youtube.com/watch?v=j2nGxw8sKYU)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[Youtube](https://www.youtube.com/watch?v=j2nGxw8sKYU)
- en: 'Ng discussed this topic at re:MARS as well. He revealed how his team adopted
    a workflow system designed specifically for ML: **1 day sprints**, structured
    as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Ng在re:MARS上也讨论了这个话题。他透露了他的团队如何采用专为ML设计的工作流系统：**1天冲刺**，结构如下：
- en: Build models and write code each day
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每天构建模型并编写代码
- en: Set up training and run experiments overnight
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置训练并进行过夜实验
- en: Analyze results in the morning and…
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 早晨分析结果，然后…
- en: Repeat
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复
- en: 'Ng’s 1 day sprints methodology reflects something crucial to understanding
    and designing teams that practice machine learning: it is an inherently **experimental
    science**. Because the systems being built lack a clear specification, because
    data collection is an imperfect science, and because machine learning models are
    incredibly complex, *experimentation is necessary*. Rather than structuring team
    processes around a multi-week sprint, it is usually more fruitful to test out
    many different architectures, feature engineering choices, and optimization methods
    rapidly until a rough image of what is working and what isn’t starts to emerge.
    1 day sprints allow teams to move quickly, test many hypotheses in a short amount
    of time, and begin building intuition and knowledge around a modeling task.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Ng的1天冲刺方法反映了理解和设计从事机器学习的团队的一个关键点：它本质上是**实验性科学**。由于所构建的系统缺乏明确的规范，因为数据收集是一门不完美的科学，并且机器学习模型极其复杂，*实验是必要的*。与其围绕多周冲刺来组织团队流程，不如快速测试多种不同的架构、特征工程选择和优化方法，直到出现一个大致的有效和无效的图景。1天冲刺使团队能够快速移动，短时间内测试许多假设，并开始在建模任务上建立直觉和知识。
- en: '**Tools for ML: Experiment Management **'
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**机器学习工具：实验管理**'
- en: Let’s say you adopt Andrew Ng’s 1 day sprints methodology or something similar
    (*and you should*). You’re setting new hyperparameters, tweaking your feature
    selections, and running experiments each night. What tool are you using to keep
    track of these decisions for each model training? How are you comparing experiments
    to see how different configurations are working? How are you sharing experiments
    with co-workers? Can your manager or co-worker reliably reproduce an experiment
    you ran yesterday?
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你采用Andrew Ng的1天冲刺方法或类似的东西（*你应该这样做*）。你正在设置新的超参数，调整特征选择，并每晚运行实验。你使用什么工具来跟踪这些决策以进行每次模型训练？你如何比较实验以查看不同配置的效果？你如何与同事共享实验？你的经理或同事能否可靠地重现你昨天进行的实验？
- en: In addition to processes, the tools you use to do machine learning matter as
    well. At Comet, our mission is to help companies extract business value from machine
    learning by providing a tool that does this for you. Most of the data science
    teams we speak to are stuck using a combination of git, emails, and (believe it
    or not) spreadsheets to record all of the artifacts around each experiment.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 除了过程之外，你所使用的机器学习工具也很重要。在Comet，我们的使命是通过提供一个能够为你完成这些工作的工具，帮助公司从机器学习中提取商业价值。我们与许多数据科学团队交流时发现，他们仍然依赖于git、电子邮件以及（信不信由你）电子表格来记录每次实验的所有成果。
- en: '![Figure](../Images/29a1a4003262165cf06abd6618d49848.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/29a1a4003262165cf06abd6618d49848.png)'
- en: '[Comet](http://www.comet.ml/): Hyperparameter space visualization for 20+ experiments'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[Comet](http://www.comet.ml/): 20多个实验的超参数空间可视化'
- en: Consider a modeling task where you’re keeping track of 20 hyperparameters, 10
    metrics, dozens of architectures and feature engineering techniques, all while
    iterating quickly and running dozens of models a day. It can become incredibly
    tedious to manually track all of these artifacts. Building a good ML model can
    oftentimes resemble tuning a radio with 50 knobs. If you don’t keep track of all
    of the configurations you’ve tried, the combinatorial complexity of finding the
    signal in your modeling space can become cumbersome.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一个建模任务，其中你需要跟踪20个超参数、10个指标、数十种架构和特征工程技术，同时快速迭代，每天运行数十个模型。手动跟踪所有这些成果可能变得极为繁琐。构建一个好的机器学习模型有时就像用50个旋钮调节收音机一样。如果你不记录所有尝试过的配置，找到建模空间中的信号的组合复杂度可能会变得非常繁琐。
- en: '![Figure](../Images/e38516c338b1ac6067b123f85e705641.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/e38516c338b1ac6067b123f85e705641.png)'
- en: '[Comet](http://www.comet.ml/): Single experiment live metric tracking and dashboard'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[Comet](http://www.comet.ml/): 单次实验的实时指标跟踪和仪表板'
- en: We’ve built Comet based on these needs (and what we wanted when we were working
    on data science and machine learning ourselves, at Google, IBM, and as part of
    research groups at Columbia University and Yale University). Every time you train
    a model, there should be *something* to capture all of the artifacts of your experiment
    and save them in some central ledger where you can look up, compare, and filter
    through all of your (or your team’s) work. Comet was built to provide this function
    to practitioners of machine learning.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在构建Comet时考虑了这些需求（以及当我们在谷歌、IBM以及哥伦比亚大学和耶鲁大学的研究团队中从事数据科学和机器学习工作时的需求）。每次训练模型时，都应该有*某种工具*来捕捉你实验的所有成果，并将它们保存在某个中央账本中，以便你可以查看、比较和筛选你（或你的团队）的所有工作。Comet的设计就是为了提供这一功能给机器学习从业者。
- en: 'Measuring workflow efficiency is a [notoriously difficult](https://gravityflow.io/articles/measure-workflow-automations-roi/) thing
    to do, but on average our users report *20-30% time savings by using Comet* (note:
    Comet is free for individuals and researchers – [you can sign-up here](https://www.comet.ml/pricing?opensignup=true&utm_source=Software%20Eng%20vs%20ML&utm_medium=Blog&utm_campaign=Software%20Eng%20vs%20ML%20Blog%20Post)).
    This doesn’t take into account unique insights and knowledge that arise from having
    insights to things like a visual understanding of your hyperparameter space, real-time
    metric tracking, team-wide collaboration and experiment comparison. Access to
    this knowledge enables time savings as well as, and perhaps more importantly,
    the ability to *build better models*.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 衡量工作流程效率是一个[ notoriously difficult](https://gravityflow.io/articles/measure-workflow-automations-roi/)的任务，但我们的用户平均报告称，通过使用Comet节省了*20-30%的时间*（注意：Comet对个人和研究人员免费—[你可以在这里注册](https://www.comet.ml/pricing?opensignup=true&utm_source=Software%20Eng%20vs%20ML&utm_medium=Blog&utm_campaign=Software%20Eng%20vs%20ML%20Blog%20Post)）。这还不包括从对超参数空间的可视化理解、实时指标跟踪、团队协作和实验比较等方面获得的独特见解和知识。这些知识不仅节省时间，而且更重要的是，使得*构建更好的模型*成为可能。
- en: '**Looking Ahead**'
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**展望未来**'
- en: It is tempting to ignore questions about ML tools and processes altogether.
    In a field responsible for self-driving cars, voice assistants, facial recognition,
    and many more groundbreaking technologies, one may be forgiven for leaping into
    the fray of building these tools themselves and not considering how best to build
    them.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 忽视有关机器学习工具和过程的问题是很有诱惑力的。在一个负责自动驾驶汽车、语音助手、人脸识别以及许多其他突破性技术的领域中，人们可能会被允许直接投入到构建这些工具的工作中，而不考虑如何最好地构建它们。
- en: 'If you are convinced that the software engineering stack works *well enough* for
    doing AI, you will not be proven definitively right or wrong. After all, this
    is a field defined by uncertainty. But perhaps it is best to consider this in
    the way a data scientist may consider a modeling task: what is the probability
    distribution of possible futures? What is more or less likely? **That a field
    as powerful and promising as AI will continue to rely on the tools and processes
    built for a different discipline, or that new ones will emerge to empower practitioners
    to the fullest? **'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你相信软件工程技术栈对 AI 的应用*足够好*，你不会被彻底证明对错。毕竟，这是一个充满不确定性的领域。但或许最好像数据科学家看待建模任务一样来考虑这个问题：可能未来的概率分布是什么？什么更可能或不太可能？**一个如此强大且充满潜力的领域，是否会继续依赖为不同学科构建的工具和流程，还是会有新的工具出现，以充分赋能从业者？**
- en: '*If you are curious about these ML tools or have any questions, feel free to
    reach out to me at *[*niko@comet.ml*](mailto:niko@comet.ml)*. *'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你对这些机器学习工具感兴趣或有任何问题，欢迎通过*[*niko@comet.ml*](mailto:niko@comet.ml)*联系我。*'
- en: '**Additional Reading**'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**额外阅读**'
- en: 'Blogs on the differences between Machine Learning and Software Engineering:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 关于机器学习与软件工程差异的博客：
- en: '[Futurice Blog on ML vs Software Engineering](https://www.futurice.com/blog/differences-between-machine-learning-and-software-engineering/)'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Futurice 关于机器学习与软件工程的博客](https://www.futurice.com/blog/differences-between-machine-learning-and-software-engineering/)'
- en: '[KDnuggets Blog on ML vs Software Engineering](/2017/03/software-engineering-vs-machine-learning-concepts.html)'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[KDnuggets 关于机器学习与软件工程的博客](/2017/03/software-engineering-vs-machine-learning-concepts.html)'
- en: '[Concur Labs Blog on ML vs Software Engineering](https://blog.concurlabs.com/10-differences-between-ml-and-software-development-part-1-3e21a83094d1)'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Concur Labs 关于机器学习与软件工程的博客](https://blog.concurlabs.com/10-differences-between-ml-and-software-development-part-1-3e21a83094d1)'
- en: '[Microsoft Case Study on Building ML Team Processes](https://www.microsoft.com/en-us/research/uploads/prod/2019/03/amershi-icse-2019_Software_Engineering_for_Machine_Learning.pdf)'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[微软关于构建机器学习团队流程的案例研究](https://www.microsoft.com/en-us/research/uploads/prod/2019/03/amershi-icse-2019_Software_Engineering_for_Machine_Learning.pdf)'
- en: '[Leon Bottou Slides from 2015 ICML Talk](https://icml.cc/2015/invited/LeonBottouICML2015.pdf)'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Leon Bottou 2015年 ICML 演讲幻灯片](https://icml.cc/2015/invited/LeonBottouICML2015.pdf)'
- en: '* * *'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业的捷径。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你组织的 IT 部门'
- en: '* * *'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 了解更多相关主题
- en: '[What Is ChatGPT Doing and Why Does It Work?](https://www.kdnuggets.com/2023/04/chatgpt-work.html)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ChatGPT 是如何工作的，为什么它有效？](https://www.kdnuggets.com/2023/04/chatgpt-work.html)'
- en: '[5 Tools for Automating Data Cleaning Processes](https://www.kdnuggets.com/5-tools-for-automating-data-cleaning-processes)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5 种自动化数据清理过程的工具](https://www.kdnuggets.com/5-tools-for-automating-data-cleaning-processes)'
- en: '[Software Developer vs Software Engineer](https://www.kdnuggets.com/2022/05/software-developer-software-engineer.html)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[软件开发者与软件工程师](https://www.kdnuggets.com/2022/05/software-developer-software-engineer.html)'
- en: '[Machine Learning Textbook: Stochastic Processes and Simulations](https://www.kdnuggets.com/2022/03/datashaping-machine-learning-textbook-stochastic-processes-simulations.html)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[机器学习教科书：随机过程与模拟](https://www.kdnuggets.com/2022/03/datashaping-machine-learning-textbook-stochastic-processes-simulations.html)'
- en: '[Don''t Miss Out! Enroll in FREE Courses Before 2023 Ends](https://www.kdnuggets.com/dont-miss-out-enroll-in-free-courses-before-2023-ends)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[别错过！在 2023 年结束前注册免费课程](https://www.kdnuggets.com/dont-miss-out-enroll-in-free-courses-before-2023-ends)'
- en: '[We Don''t Need Data Scientists, We Need Data Engineers](https://www.kdnuggets.com/2021/02/dont-need-data-scientists-need-data-engineers.html)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[我们不需要数据科学家，我们需要数据工程师](https://www.kdnuggets.com/2021/02/dont-need-data-scientists-need-data-engineers.html)'
