- en: Generating Random Data with NumPy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成随机数据与 NumPy
- en: 原文：[https://www.kdnuggets.com/generating-random-data-with-numpy](https://www.kdnuggets.com/generating-random-data-with-numpy)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/generating-random-data-with-numpy](https://www.kdnuggets.com/generating-random-data-with-numpy)
- en: '![Generating Random Data with NumPy](../Images/b2812e23ca1b57b27f25f46ef1875f2d.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![使用 NumPy 生成随机数据](../Images/b2812e23ca1b57b27f25f46ef1875f2d.png)'
- en: Image by Editor | Ideogram
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由编辑提供 | Ideogram
- en: Random data consists of values generated through various tools without predictable
    patterns. The occurrence of values depends on the probability distribution from
    which they are drawn because they are unpredictable.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 随机数据由通过各种工具生成的值组成，这些值没有可预测的模式。值的出现取决于它们所抽取的概率分布，因为它们是不可预测的。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前 3 个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速通道进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: There are many benefits to using Random Data in our experiments, including real-world
    data simulation, synthetic data for machine learning training, or statistical
    sampling purposes.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的实验中使用随机数据有很多好处，包括现实世界数据模拟、机器学习训练的合成数据或统计采样目的。
- en: NumPy is a powerful package that supports many mathematical and statistical
    computations, including random data generation. From simple data to complex multi-dimensional
    arrays and matrices, NumPy could help us facilitate the need for random data generation.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 是一个强大的包，支持许多数学和统计计算，包括随机数据生成。从简单的数据到复杂的多维数组和矩阵，NumPy 可以帮助我们满足随机数据生成的需求。
- en: This article will discuss further how we could generate Random data with Numpy.
    So, let’s get into it.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本文将进一步讨论如何使用 NumPy 生成随机数据。所以，让我们深入了解吧。
- en: Random Data Generation with NumPy
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 NumPy 生成随机数据
- en: You need to have the NumPy package installed in your environment. If you haven’t
    done that, you can use pip to install them.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要在环境中安装 NumPy 包。如果你还没有安装，可以使用 pip 来安装。
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When the package has been successfully installed, we will move on to the main
    part of the article.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当包成功安装后，我们将进入文章的主要部分。
- en: First, we would set the seed number for reproducibility purposes. When we perform
    random occurrences with the computer, we must remember that what we do is pseudo-random.
    The pseudo-random concept is when data seems random but is deterministic if we
    know where the starting points which we call seed.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将设置种子号以便可重复性。当我们使用计算机进行随机事件时，我们必须记住我们所做的只是伪随机的。伪随机的概念是数据看起来随机，但如果我们知道起点（我们称之为种子），它是确定性的。
- en: 'To set the seed in NumPy, we will use the following code:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 NumPy 中设置种子，我们将使用以下代码：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You can give any positive integer numbers as the seed number, which would become
    our starting point. Also, the `.random` method from the NumPy would become our
    main function for this article.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将任何正整数作为种子，这将成为我们的起点。此外，NumPy 的 `.random` 方法将成为本文的主要函数。
- en: Once we have set the seed, we will try to generate random number data with NumPy.
    Let’s try to generate five different float numbers randomly.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设置了种子，我们将尝试使用 NumPy 生成随机数数据。让我们尝试随机生成五个不同的浮点数。
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: It's possible to get the multi-dimensional array using NumPy. For example, the
    following code would result in 3x3 array filled with random float numbers.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 NumPy 可以获得多维数组。例如，以下代码将生成一个填充随机浮点数的 3x3 数组。
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Next, we could generate an integer random number from certain range. We can
    do that with this code:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以从某个范围生成一个整数随机数。我们可以使用以下代码来实现：
- en: '[PRE6]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: All the data generated by random sampling previously followed the uniform distribution.
    It means that all the data have a similar chance to occur. If we iterate the data
    generation process to infinity times, all the number taken frequency would be
    close to equal.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 之前通过随机采样生成的所有数据都遵循均匀分布。这意味着所有数据发生的机会相似。如果我们将数据生成过程迭代到无限次，所有数字的频率将接近相等。
- en: We can generate random data from various distributions. Here, we try to generate
    ten random data from the standard normal distribution.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从各种分布生成随机数据。在这里，我们尝试从标准正态分布生成十个随机数据。
- en: '[PRE8]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The code above takes the Z-score value from the normal distribution with mean
    zero and STD one.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码获取了均值为零和标准差为一的正态分布的 Z 分数值。
- en: We can generate random data following other distributions. Here is how we use
    the Poisson distribution to generate random data.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以生成遵循其他分布的随机数据。下面是我们如何使用泊松分布生成随机数据。
- en: '[PRE10]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The random sample data from Poisson Distribution in the code above would simulate
    random events at a specific average rate (5), but the number generated could vary.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码中的泊松分布随机样本数据会模拟特定平均率（5）的随机事件，但生成的数字可能会有所不同。
- en: We could generate random data following the binomial distribution.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以生成遵循二项分布的随机数据。
- en: '[PRE12]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The code above simulates the experiments we perform following the Binomial distribution.
    Just imagine that we perform coin flips ten times (first parameter ten and second
    parameter probability 0.5); how many times does it show heads? As shown in the
    output above, we did the experiment ten times (the third parameter).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码模拟了我们执行的基于二项分布的实验。假设我们进行十次掷硬币实验（第一个参数为十，第二个参数为概率 0.5）；多少次会出现正面？如上面的输出所示，我们进行了十次实验（第三个参数）。
- en: Let’s try the exponential distribution. With this code, we can generate data
    following the exponential distribution.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试指数分布。使用这段代码，我们可以生成遵循指数分布的数据。
- en: '[PRE14]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Exponential distribution explains the time between events. For example, the
    code above can be said to be waiting for the bus to enter the station, which takes
    a random amount of time but, on average, takes 1 minute.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 指数分布解释了事件之间的时间。例如，上述代码可以表示等待公交车进入车站，这需要随机的时间，但平均需要 1 分钟。
- en: For an advanced generation, you can always combine the distribution results
    to create sample data following a custom distribution. For example, 70% of the
    generated random data below follows a normal distribution, while the rest follows
    an exponential distribution.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更高级的生成，你可以随时结合分布结果来创建遵循自定义分布的样本数据。例如，下面生成的随机数据中有 70% 遵循正态分布，而其余部分遵循指数分布。
- en: '[PRE16]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: These custom distributions are much more powerful, especially if we want to
    simulate our data to follow actual case data (which is usually more messy).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这些自定义分布更为强大，特别是当我们想要模拟数据以符合实际情况数据（通常更为复杂）时。
- en: Conclusion
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: NumPy is a powerful Python package for mathematical and statistical computation.
    It generates random data that can be used for many events, such as data simulations,
    synthetic data for machine learning, and many others.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 是一个强大的 Python 包，用于数学和统计计算。它生成的随机数据可以用于许多事件，例如数据模拟、机器学习的合成数据等。
- en: In this article, we have discussed how we can generate random data with NumPy,
    including methods that could improve our data generation experience.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们讨论了如何使用 NumPy 生成随机数据，包括可以改善数据生成体验的方法。
- en: '**[](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**[Cornellius Yudha
    Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**** is a data science
    assistant manager and data writer. While working full-time at Allianz Indonesia,
    he loves to share Python and data tips via social media and writing media. Cornellius
    writes on a variety of AI and machine learning topics.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**[](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**[Cornellius Yudha
    Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**** 是一位数据科学助理经理和数据编写员。在全职工作于
    Allianz Indonesia 的同时，他喜欢通过社交媒体和写作媒体分享 Python 和数据技巧。Cornellius 撰写了各种人工智能和机器学习主题的文章。'
- en: More On This Topic
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 了解更多主题
- en: '[Fake It Till You Make It: Generating Realistic Synthetic Customer Datasets](https://www.kdnuggets.com/2022/01/fake-realistic-synthetic-customer-datasets-projects.html)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[假装直到成功：生成真实的合成客户数据集](https://www.kdnuggets.com/2022/01/fake-realistic-synthetic-customer-datasets-projects.html)'
- en: '[What are Moment-Generating Functions?](https://www.kdnuggets.com/2022/12/momentgenerating-functions.html)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[什么是矩生成函数？](https://www.kdnuggets.com/2022/12/momentgenerating-functions.html)'
- en: '[How to Use GPT for Generating Creative Content with Hugging Face…](https://www.kdnuggets.com/how-to-use-gpt-for-generating-creative-content-with-hugging-face-transformers)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何使用GPT通过Hugging Face生成创意内容…](https://www.kdnuggets.com/how-to-use-gpt-for-generating-creative-content-with-hugging-face-transformers)'
- en: '[Random Forest vs Decision Tree: Key Differences](https://www.kdnuggets.com/2022/02/random-forest-decision-tree-key-differences.html)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[随机森林与决策树：主要区别](https://www.kdnuggets.com/2022/02/random-forest-decision-tree-key-differences.html)'
- en: '[Does the Random Forest Algorithm Need Normalization?](https://www.kdnuggets.com/2022/07/random-forest-algorithm-need-normalization.html)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[随机森林算法是否需要归一化？](https://www.kdnuggets.com/2022/07/random-forest-algorithm-need-normalization.html)'
- en: '[Decision Trees vs Random Forests, Explained](https://www.kdnuggets.com/2022/08/decision-trees-random-forests-explained.html)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[决策树与随机森林，解释](https://www.kdnuggets.com/2022/08/decision-trees-random-forests-explained.html)'
