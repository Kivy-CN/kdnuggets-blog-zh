["```py\n#import libraries\nimport requests\nimport pandas as pd\nimport time\n```", "```py\n#keys\nAPI_KEY = \"AIXXXXXXXX\"\nCHANNEL_ID = \"UCW8Ews7tdKKkBT6GdtQaXvQ\"\n```", "```py\n#make API call\nresponse = requests.get('https://api.github.com').json()\n```", "```py\nresponse\n```", "```py\nemails_url': 'https://api.github.com/user/emails'\n```", "```py\nurl = \"https://www.googleapis.com/youtube/v3/\n```", "```py\nurl = \"https://www.googleapis.com/youtube/v3/search?key=\"+API_KEY+\"&\nchannelId=\"+CHANNEL_ID+\"&part=snippet,id&order=date&maxResults=10000\"\n+pageToken\n```", "```py\npageToken = \"\"\nresponse = requests.get(url).json()\n```", "```py\nresponse['items']\n```", "```py\nresponse['items'][0]\n```", "```py\nvideo_id = response['items'][0]['id']['videoId']\n```", "```py\nvideo_title = response['items'][0]['snippet']['title']\nvideo_title = str(video_title).replace(\"&\",\"\")\n```", "```py\nupload_date = response['items'][0]['snippet']['publishedAt']\n```", "```py\nupload_date = str(upload_date).split(\"T\")[0]\n```", "```py\nfor video in response['items']:\n```", "```py\n'kind': 'youtube#video',\n```", "```py\nif video['id']['kind'] == \"youtube#video\":\n```", "```py\nfor video in response['items']:\n   if video['id']['kind'] == \"youtube#video\":\n       video_id = video['id']['videoId']\n       video_title = video['snippet']['title']\n       video_title = str(video_title).replace(\"&amp;\",\"\")\n       upload_date = video['snippet']['publishedAt']\n       upload_date = str(upload_date).split(\"T\")[0]\n```", "```py\nurl_video_stats = \"https://www.googleapis.com/youtube/v3/videos?id=\"\n                  +video_id+\"&part=statistics&key=\"+API_KEY\nresponse_video_stats = requests.get(url_video_stats).json()\n\nview_count = response_video_stats['items'][0]['statistics']['viewCount']\nlike_count = response_video_stats['items'][0]['statistics']['likeCount']\ndislike_count = response_video_stats['items'][0]['statistics']\n                ['dislikeCount']\ncomment_count = response_video_stats['items'][0]['statistics']\n                ['commentCount']\n```", "```py\nfor video in response['items']:\n   if video['id']['kind'] == \"youtube#video\":\n       video_id = video['id']['videoId']\n       video_title = video['snippet']['title']\n       video_title = str(video_title).replace(\"&amp;\",\"\")\n       upload_date = video['snippet']['publishedAt']\n       upload_date = str(upload_date).split(\"T\")[0]\n\n       #colleccting view, like, dislike, comment counts\n       url_video_stats = \"https://www.googleapis.com/youtube/v3/videos?id=\"\n                          +video_id+\"&part=statistics&key=\"+API_KEY\n       response_video_stats = requests.get(url_video_stats).json()\n\n       view_count = response_video_stats['items'][0]['statistics']\n                    ['viewCount']\n       like_count = response_video_stats['items'][0]['statistics']\n                    ['likeCount']\n       dislike_count = response_video_stats['items'][0]['statistics']\n                    ['dislikeCount']\n       comment_count = response_video_stats['items'][0]['statistics']\n                    ['commentCount']\n```", "```py\ndf = pd.DataFrame(columns=[\"video_id\",\"video_title\",\"upload_date\",\n\"view_count\",\"like_count\",\"dislike_count\",\"comment_count\"])\n```", "```py\ndf = df.append({'video_id':video_id,'video_title':video_title,\n                'upload_date':upload_date,'view_count':view_count,\n                'like_count':like_count,'dislike_count':dislike_count,\n                'comment_count':comment_count},ignore_index=True)\n```", "```py\nfor video in response['items']:\n   if video['id']['kind'] == \"youtube#video\":\n       video_id = video['id']['videoId']\n       video_title = video['snippet']['title']\n       video_title = str(video_title).replace(\"&amp;\",\"\")\n       upload_date = video['snippet']['publishedAt']\n       upload_date = str(upload_date).split(\"T\")[0]\n\n       #collecting view, like, dislike, comment counts\n       url_video_stats = \"https://www.googleapis.com/youtube/v3/videos?id=\"\n                          +video_id+\"&part=statistics&key=\"+API_KEY\n       response_video_stats = requests.get(url_video_stats).json()\n\n       view_count = response_video_stats['items'][0]['statistics']\n                    ['viewCount']\n       like_count = response_video_stats['items'][0]['statistics']\n                    ['likeCount']\n       dislike_count = response_video_stats['items'][0]['statistics']\n                    ['dislikeCount']\n       comment_count = response_video_stats['items'][0]['statistics']\n                    ['commentCount']\n\n       df = df.append({'video_id':video_id,'video_title':video_title,\n                        'upload_date':upload_date,'view_count':view_count,\n'like_count':like_count,'dislike_count':dislike_count,\n                         'comment_count':comment_count},ignore_index=True)\n```", "```py\ndef get_video_details(video_id):\n   url = \"https://www.googleapis.com/youtube/v3/videos?id=\"+video_id+\"&\n          part=statistics&key=\"+API_KEY\n   response = requests.get(url).json()\n\n   return response['items'][0]['statistics']['viewCount'],\\\n          response['items'][0]['statistics']['likeCount'],\\\n          response['items'][0]['statistics']['dislikeCount'],\\\n          response['items'][0]['statistics']['commentCount']\n```", "```py\ndef get_videos(df):\n   pageToken = \"\"\n   while 1:\n       url = \"https://www.googleapis.com/youtube/v3/search?key=\"+API_KEY+\"\n&channelId=\"+CHANNEL_ID+\"&part=snippet,id&order=date&maxResults=10000&\"\n+pageToken\n\n       response = requests.get(url).json()\n       time.sleep(1) #give it a second before starting the for loop\n       for video in response['items']:\n           if video['id']['kind'] == \"youtube#video\":\n               video_id = video['id']['videoId']\n               video_title = video['snippet']['title']\n               video_title = str(video_title).replace(\"&amp;\",\"\")\n               upload_date = video['snippet']['publishedAt']\n               upload_date = str(upload_date).split(\"T\")[0]\n               print(upload_date)\n               view_count, like_count, dislike_count, comment_count = get_\n               video_details(video_id)\n\n               df = df.append({'Video_id':video_id,'Video_title':\n                    video_title,\n                               \"Upload_date\":upload_date,\"View_count\":\n                                view_count,\n                               \"Like_count\":like_count,\"Dislike_count\":\n                                dislike_count,\n                               \"Comment_count\":comment_count},ignore_index=\n                                True)\n       try:\n           if response['nextPageToken'] != None: #if none, it means it \n           reached the last page and break out of it\n               pageToken = \"pageToken=\" + response['nextPageToken']\n\n       except:\n           break\n\n   return df\n```", "```py\ndf = pd.DataFrame(columns=[\"Video_id\",\"Video_title\",\"Upload_date\",\n\"View_count\",\"Like_count\",\"Dislike_count\",\"Comment_count\"]) #build our \ndataframe\n\ndf = get_videos(df)\n\nprint(df)\n```"]