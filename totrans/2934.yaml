- en: 7 Steps to Mastering Intermediate Machine Learning with Python — 2019 Edition
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 《掌握中级Python机器学习的7个步骤——2019版》
- en: 原文：[https://www.kdnuggets.com/2019/06/7-steps-mastering-intermediate-machine-learning-python.html](https://www.kdnuggets.com/2019/06/7-steps-mastering-intermediate-machine-learning-python.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/06/7-steps-mastering-intermediate-machine-learning-python.html](https://www.kdnuggets.com/2019/06/7-steps-mastering-intermediate-machine-learning-python.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](#comments)'
- en: Are you interested in learning more about machine learning with Python?
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 你有兴趣了解更多关于Python机器学习的内容吗？
- en: I recently wrote [7 Steps to Mastering Basic Machine Learning with Python —
    2019 Edition](/2019/01/7-steps-mastering-basic-machine-learning-python.html),
    a first step in an attempt to updated a pair of posts I wrote some time back ([7
    Steps to Mastering Machine Learning With Python](/2015/11/seven-steps-machine-learning-python.html)
    and [7 More Steps to Mastering Machine Learning With Python](/2017/03/seven-more-steps-machine-learning-python.html)),
    a pair of posts which are getting stale at this point, having been around for
    a few years. It's time to add on to the "basic" post with a set of steps for learning
    "intermediate" level machine learning with Python.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我最近写了[《掌握基础Python机器学习的7个步骤——2019版》](/2019/01/7-steps-mastering-basic-machine-learning-python.html)，这是更新之前写的两篇文章的第一步（[《掌握Python机器学习的7个步骤》](/2015/11/seven-steps-machine-learning-python.html)和[《掌握Python机器学习的7个附加步骤》](/2017/03/seven-more-steps-machine-learning-python.html)），这两篇文章已经有些过时了，存在了一段时间。现在是时候在“基础”文章上增加一套步骤，以学习“中级”Python机器学习。
- en: We're talking "intermediate" in a relative sense, however, so do not expect
    to be a research-caliber machine learning engineer after getting through this
    post. The learning path is aimed at those with some understanding of programming,
    computer science concepts, and/or machine learning in an abstract sense, who are
    wanting to be able to use the implementations of machine learning algorithms of
    the prevalent Python libraries to build their own machine learning models.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们谈论的“中级”是相对的，因此不要期望在阅读完这篇文章后就成为一个研究级别的机器学习工程师。学习路径面向那些对编程、计算机科学概念和/或机器学习有一定理解的读者，目的是能够使用流行Python库中的机器学习算法实现来构建自己的机器学习模型。
- en: '![Header image](../Images/cc79578dde02c9e894b361b626ad4b7c.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![Header image](../Images/cc79578dde02c9e894b361b626ad4b7c.png)'
- en: This post, as those which came before, will leverage the existing tutorials,
    videos, and works of a variety of folks, so the thanks for anything included herein
    should be directed at them.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇文章将利用现有的教程、视频和各种作者的作品，所以对于其中任何内容的感谢应该归于他们。
- en: Instead of having a high number of resources for each topic step (say, *dimensionality
    reduction*), I have tried to select a quality tutorial or two, along with an accessible
    video preliminarily describing the underlying theory, math, or intuition of the
    given topic when appropriate.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 与每个主题步骤（例如，*维度缩减*）有大量资源相比，我尽量选择一两个优质教程，并在适当时提供一个简明的视频，初步描述给定主题的理论、数学或直觉。
- en: These steps deal with machine learning algorithms, the importance of feature
    selection and engineering, model training, transfer learning, and more.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤涉及机器学习算法、特征选择与工程的重要性、模型训练、迁移学习等内容。
- en: So grab a drink, sit back, and read the second installment in the series, and
    start mastering intermediate machine learning with Python in these 7 steps.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，拿一杯饮料，坐下来，阅读系列中的第二部分，开始在这7个步骤中掌握中级Python机器学习。
- en: 1\. Getting Started
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1. 入门
- en: It probably goes without saying, but your first step should be to review the
    previous post in this series, [7 Steps to Mastering Basic Machine Learning with
    Python — 2019 Edition](/2019/01/7-steps-mastering-basic-machine-learning-python.html).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能不用多说，但你的第一步应该是回顾这个系列中的上一篇文章，[《掌握基础Python机器学习的7个步骤——2019版》](/2019/01/7-steps-mastering-basic-machine-learning-python.html)。
- en: It might also be a good idea to keep Google's **[Machine Learning Glossary](https://developers.google.com/machine-learning/glossary/)**
    close by for reference along the way, or to have a quick look at beforehand.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 保持Google的**[机器学习术语表](https://developers.google.com/machine-learning/glossary/)**在旁参考，或者提前浏览一下，可能是个好主意。
- en: 'The quick start guide from the official documentation of each of the following
    Python libraries which are used to do a lot of the heavy lifting for machine learning
    and other data analysis tasks herein are likely a good idea to have a look at
    as well:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下每个 Python 库的官方文档中的快速入门指南，这些库用于执行大量机器学习和其他数据分析任务，也许是个好主意：
- en: '**[An introduction to machine learning with scikit-learn](https://scikit-learn.org/stable/tutorial/basic/tutorial.html)**'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[scikit-learn 机器学习入门](https://scikit-learn.org/stable/tutorial/basic/tutorial.html)**'
- en: '**[Numpy - Quickstart tutorial](https://docs.scipy.org/doc/numpy/user/quickstart.html)**'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[Numpy - 快速入门教程](https://docs.scipy.org/doc/numpy/user/quickstart.html)**'
- en: '**[10 Minutes to pandas](https://pandas.pydata.org/pandas-docs/stable/getting_started/10min.html)**'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[10分钟了解pandas](https://pandas.pydata.org/pandas-docs/stable/getting_started/10min.html)**'
- en: Now, on to the fun stuff.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，开始有趣的部分吧。
- en: 2\. Feature Selection
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2\. 特征选择
- en: A feature is a variable from the input dataset which can be used to help make
    predictions. All features are not created equal, however, and sometimes the raw
    features provided need to be used to engineer new features which can more useful
    in this pursuit of prediction.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 特征是输入数据集中的一个变量，可以用于帮助做出预测。然而，并非所有特征都是平等的，有时需要使用原始特征来工程化出新的特征，以便在预测中更有用。
- en: Read this article on **[Feature Selection Techniques in Machine Learning with
    Python](https://towardsdatascience.com/feature-selection-techniques-in-machine-learning-with-python-f24e7da3f36e)**
    by Raheel Shaikh to get an understanding of ways to go about feature selection
    techniques, and how they are approached in Python.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读**[Python中的特征选择技术](https://towardsdatascience.com/feature-selection-techniques-in-machine-learning-with-python-f24e7da3f36e)**
    这篇文章，作者 Raheel Shaikh，了解有关特征选择技术的不同方法以及在 Python 中如何处理这些方法。
- en: Next, read **[Beware Default Random Forest Importances](https://explained.ai/rf-importance/)**
    by Terence Parr, Kerem Turgutlu, Christopher Csiszar, and Jeremy Howard, an informative
    take on why "[t]he scikit-learn Random Forest feature importance and R's default
    Random Forest feature importance strategies are biased." Random Forest is a common
    method for selecting features to use in prediction, based on their importance,
    and this article provides insight into why blindly using any particular method
    for doing so is not a great idea.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，阅读**[小心默认的随机森林重要性](https://explained.ai/rf-importance/)**，由 Terence Parr、Kerem
    Turgutlu、Christopher Csiszar 和 Jeremy Howard 撰写，详细阐述了为什么“[t] scikit-learn 的随机森林特征重要性和
    R 的默认随机森林特征重要性策略是有偏的。” 随机森林是一种常见的特征选择方法，根据特征的重要性进行预测，这篇文章提供了为什么盲目使用任何特定方法并不是一个好主意的见解。
- en: 'Finally, have a look at this article, **[Step Forward Feature Selection: A
    Practical Example in Python](/2018/06/step-forward-feature-selection-python.html)**,
    which demonstrates an implementation of step forward feature selection, a disciplined,
    statistical approach to the task.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，看看这篇文章，**[前向特征选择：Python中的实际示例](/2018/06/step-forward-feature-selection-python.html)**，它展示了前向特征选择的实现，这是一种有纪律的统计方法。
- en: 3\. Feature Engineering
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3\. 特征工程
- en: Sometimes all of the raw features, or some subset of them, can be used as is
    for prediction purposes. Other times, new features can be engineered from the
    existing in order to facilitate better prediction.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，所有原始特征或其某些子集可以直接用于预测。其他时候，可以从现有特征中工程化出新的特征，以促进更好的预测。
- en: Take, for example, a simple date. This date, as is, could be useless for prediction.
    Knowing whether that date was a weekday or weekend, or if it were a statutory
    holiday, might be incredibly helpful, however. Using this raw date to create a
    new, more useful feature is a simple example of feature engineering.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，一个简单的日期。这个日期本身可能对预测没有用。然而，知道该日期是否是工作日或周末，或者是否是法定假日，可能会非常有帮助。利用这个原始日期创建一个新的、更有用的特征就是一个简单的特征工程示例。
- en: First, read **[this article on feature engineering](https://developers.google.com/machine-learning/crash-course/representation/feature-engineering)**
    from Google's Machine Learning Crash Course for an overview on the topic.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，阅读**[这篇关于特征工程的文章](https://developers.google.com/machine-learning/crash-course/representation/feature-engineering)**
    来了解该主题的概述。
- en: 'Then read Will Koehrsen''s **[Feature Engineering: What Powers Machine Learning](https://towardsdatascience.com/feature-engineering-what-powers-machine-learning-93ab191bcc2d)**
    for more information on the topic, which brings Python into the picture.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 然后阅读 Will Koehrsen 的**[特征工程：驱动机器学习的力量](https://towardsdatascience.com/feature-engineering-what-powers-machine-learning-93ab191bcc2d)**，获取更多关于这一主题的信息，并且涉及
    Python。
- en: Finally, read **[Automated Feature Engineering in Python](https://towardsdatascience.com/automated-feature-engineering-in-python-99baf11cc219)**,
    also by Will Koehrsen, for an introduction on how feature engineering can be automated
    and outsourced to the algorithms.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，阅读 Will Koehrsen 的**[Python 中的自动特征工程](https://towardsdatascience.com/automated-feature-engineering-in-python-99baf11cc219)**，了解如何将特征工程自动化并委托给算法。
- en: 4\. Even More Classification
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4\. 更深入的分类
- en: 'Next, let''s turn our attention to some classification algorithms. The first
    part of this series considered logistic regression, decision trees, and support
    vector machines. This time around we will look at a pair of other well-used and
    time-tested techniques: k-nearest neighbors and Naive Bayes.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将关注一些分类算法。本系列的第一部分讨论了逻辑回归、决策树和支持向量机。这次我们将查看另一对广泛使用且经受住时间考验的技术：k-最近邻和朴素贝叶斯。
- en: First, watch this short video from StatQuest explaining what k-nearest neighbors
    is (k-NN), and what its approach to classification is.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，观看这段来自 StatQuest 的简短视频，了解什么是 k-最近邻（k-NN），以及它在分类中的方法。
- en: Then read this article by Sam Grassi, **[Building & Improving a K-Nearest Neighbors
    Algorithm in Python](https://towardsdatascience.com/building-improving-a-k-nearest-neighbors-algorithm-in-python-3b6b5320d2f8)**,
    which first uses Scikit-learn's k-NN implementation to perform classification,
    and then implements k-NN from scratch in Python for comparison.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 然后阅读 Sam Grassi 的这篇文章**[在 Python 中构建和改进 k-最近邻算法](https://towardsdatascience.com/building-improving-a-k-nearest-neighbors-algorithm-in-python-3b6b5320d2f8)**，首先使用
    Scikit-learn 的 k-NN 实现进行分类，然后从头开始在 Python 中实现 k-NN 进行比较。
- en: After learning about k-NN, we turn our attention to Naive Bayes. Watch this
    video, also from StatQuest, in order to establish the intuition behind the algorithm.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解 k-NN 之后，我们将注意力转向朴素贝叶斯。观看这段来自 StatQuest 的视频，以建立对该算法的直观理解。
- en: Then it's time to get practical. Follow this tutorial, **[Naive Bayes Classification
    With Sklearn](https://blog.sicara.com/naive-bayes-classifier-sklearn-python-example-tips-42d100429e44)**,
    by Martin Müller, to learn more as you use Scikit-learn's implementation to build
    a classifier.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是实际操作的时间。按照 Martin Müller 的教程**[使用 Sklearn 的朴素贝叶斯分类](https://blog.sicara.com/naive-bayes-classifier-sklearn-python-example-tips-42d100429e44)**，使用
    Scikit-learn 的实现构建分类器，进一步学习。
- en: 5\. Model Training & Selection
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5\. 模型训练与选择
- en: On to model training and selection.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是模型训练和选择。
- en: There are 2 major points here. First, without trained models, we can't make
    predictions. And second, with a number of models, we need to select the "best"
    among them.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有两个主要点。首先，没有经过训练的模型，我们无法进行预测。其次，在多个模型中，我们需要选择“最佳”模型。
- en: We will first look at the concept of training, testing, and validation sets.
    Read this article by Tarang Shah, **[About Train, Validation and Test Sets in
    Machine Learning](https://towardsdatascience.com/train-validation-and-test-sets-72cb40cba9e7)**,
    which introduces the concepts.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先来看训练、测试和验证集的概念。阅读 Tarang Shah 的这篇文章**[关于机器学习中的训练集、验证集和测试集](https://towardsdatascience.com/train-validation-and-test-sets-72cb40cba9e7)**，介绍了这些概念。
- en: Then look at this video from StatQuest on the related concept of cross-validation.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 然后观看这段来自 StatQuest 的视频，了解交叉验证的相关概念。
- en: These concepts above are integral to model training. But what about once we
    have a number of models? How do we choose between them?
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 上述概念对于模型训练至关重要。但当我们拥有多个模型时，该如何选择？
- en: First, this video from StatQuest explains what a confusion matrix is, and how
    it helps summarize a machine learning classifier outcomes.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，这段来自 StatQuest 的视频解释了混淆矩阵是什么，以及它如何帮助总结机器学习分类器的结果。
- en: Dig deeper into this topic with another StatQuest video on the topic of model
    sensitivity and specificity.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 通过另一个关于模型敏感性和特异性的话题的 StatQuest 视频，深入探讨这一主题。
- en: After, read up on machine learning classification metrics, and how they can
    be practically implemented in Python using Scikit-learn. This article from Andrew
    Long, **[Data Science Performance Metrics for Everyone](https://towardsdatascience.com/data-science-performance-metrics-for-everyone-4d68f4859eef)**,
    introduces metrics, so start here.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，阅读 Andrew Long 的文章 **[数据科学性能指标简介](https://towardsdatascience.com/data-science-performance-metrics-for-everyone-4d68f4859eef)**，了解分类指标以及如何在
    Python 中使用 Scikit-learn 实际应用这些指标。
- en: Then follow along in another of Andrew Long's articles, **[Understanding Data
    Science Classification Metrics in Scikit-Learn in Python](https://towardsdatascience.com/understanding-data-science-classification-metrics-in-scikit-learn-in-python-3bc336865019)**,
    and learn how classification metrics can be implements in Python.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 然后跟随 Andrew Long 的另一篇文章 **[在 Scikit-Learn 中理解数据科学分类指标](https://towardsdatascience.com/understanding-data-science-classification-metrics-in-scikit-learn-in-python-3bc336865019)**，学习如何在
    Python 中实现分类指标。
- en: Finally, get a sense of how to choose among evaluation metrics by reading Alvira
    Swalin's **[Choosing the Right Metric for Evaluating Machine Learning Models 
    –  Part 1](/2018/04/right-metric-evaluating-machine-learning-models-1.html)**,
    and **[Choosing the Right Metric for Evaluating Machine Learning Models  –  Part
    2](/2018/06/right-metric-evaluating-machine-learning-models-2.html)**, a great
    pair of resources on how to approach this process.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，通过阅读 Alvira Swalin 的 **[选择正确的评估指标来评估机器学习模型  –  第 1 部分](/2018/04/right-metric-evaluating-machine-learning-models-1.html)**
    和 **[选择正确的评估指标来评估机器学习模型  –  第 2 部分](/2018/06/right-metric-evaluating-machine-learning-models-2.html)**，来了解如何在选择评估指标时做出决定，这是一对很好的资源。
- en: 6\. Dimensionality Reduction
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6\. 降维
- en: What is dimensionality reduction? Well, since you've asked, have a look at this
    video from Stanford's Jure Leskovec explaining just that.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是降维？既然你问了，可以看看斯坦福大学的 Jure Leskovec 讲解这个问题的视频。
- en: One of the most used forms of dimensionality reduction is a technique known
    as principal component analysis (PCA), a type of transformation which converts
    a dataset of possibly correlated variables to linearly uncorrelated variables;
    these linearly uncorrelated variables are known as principal components. Watch
    this video from StatQuest outlining PCA in more detail.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 降维最常用的形式之一是主成分分析（PCA），这是一种将可能相关的变量的数据集转换为线性无关变量的转换方法；这些线性无关变量被称为主成分。观看这个来自 StatQuest
    的视频，详细了解 PCA。
- en: Now have a look at this article by Zichen Wang, **[PCA and SVD explained with
    numpy](https://towardsdatascience.com/pca-and-svd-explained-with-numpy-5d13b0d2a4d8)**,
    demonstrating an implementation of PCA — along with singular value decomposition
    (SVD), another popular dimensionality reduction technique — from scratch in Python
    using Numpy.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在看看 Zichen Wang 的文章 **[用 numpy 解释 PCA 和 SVD](https://towardsdatascience.com/pca-and-svd-explained-with-numpy-5d13b0d2a4d8)**，这篇文章展示了如何从头开始在
    Python 中使用 Numpy 实现 PCA 及奇异值分解（SVD），另一种流行的降维技术。
- en: 'Finally, the excerpt chapter **[In Depth: Principal Component Analysis](https://jakevdp.github.io/PythonDataScienceHandbook/05.09-principal-component-analysis.html)**
    from Jake VanderPlas'' book "[Python Data Science Handbook](http://shop.oreilly.com/product/0636920034919.do)"
    gives a thorough treatment to implementing PCA using Scitkit-learn.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，Jake VanderPlas 的书《[Python 数据科学手册](http://shop.oreilly.com/product/0636920034919.do)》中的章节
    **[深入探讨：主成分分析](https://jakevdp.github.io/PythonDataScienceHandbook/05.09-principal-component-analysis.html)**
    对使用 Scikit-learn 实现 PCA 进行了详细的阐述。
- en: 7\. Transfer Learning
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 7\. 迁移学习
- en: Transfer learning is the repurposed use of a model for a task other than the
    one it was originally trained for. Of course, transfer learning is much more complex
    than this simple one sentence explanation, but it conveys the basic idea.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 迁移学习是将一个模型用于与其最初训练任务不同的任务。当然，迁移学习比这个简单的解释复杂得多，但它传达了基本概念。
- en: Watch this video from Kaggle, which better describes what transfer learning
    is, and what it can do.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 观看 Kaggle 的这个视频，它更好地描述了迁移学习是什么，以及它能做些什么。
- en: Then read Sebastian Ruder's overview of transfer learning concepts, **[Transfer
    Learning - Machine Learning's Next Frontier](http://ruder.io/transfer-learning/)**.
    The post is a couple of years old, and transfer learning moves quickly, but the
    concepts covered are no less valid today than the day it was written.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 然后阅读Sebastian Ruder对迁移学习概念的概述，**[迁移学习 - 机器学习的下一前沿](http://ruder.io/transfer-learning/)**。这篇文章已经有几年时间了，虽然迁移学习发展迅速，但所涵盖的概念今天依然有效。
- en: To see the value of transfer learning let's have a look at how it can be used
    for image classification (one of its greatest accomplishments) using neural networks
    created with the deep learning library Keras. If you are not familiar with Keras,
    have a look at this quick start guide, **[Introduction to Deep Learning with Keras](https://towardsdatascience.com/introduction-to-deep-learning-with-keras-17c09e4f0eb2)**,
    written by Gilbert Tanner.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示迁移学习的价值，让我们看看如何使用Keras深度学习库创建的神经网络进行图像分类（这是其最大的成就之一）。如果你不熟悉Keras，可以查看由Gilbert
    Tanner编写的这份快速入门指南，**[Keras深度学习介绍](https://towardsdatascience.com/introduction-to-deep-learning-with-keras-17c09e4f0eb2)**。
- en: Now put transfer learning to practical use with this tutorial written by George
    Seif, **[Transfer Learning for Image Classification using Keras](https://towardsdatascience.com/transfer-learning-for-image-classification-using-keras-c47ccf09c8c8)**.
    This should be enough to demonstrate how powerful transfer learning is, not just
    in image classification but also in natural language processing tasks and beyond.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在通过George Seif编写的教程将迁移学习付诸实践，**[使用Keras进行图像分类的迁移学习](https://towardsdatascience.com/transfer-learning-for-image-classification-using-keras-c47ccf09c8c8)**。这应该足以展示迁移学习的强大，不仅仅是在图像分类中，也在自然语言处理任务及其他领域中。
- en: I hope you have found value in these 7 steps to mastering intermediate machine
    learning with Python. Join us next time when we will move on to some more advanced
    topics.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你在掌握中级机器学习的7个步骤中找到了价值。下次加入我们，我们将讨论一些更高级的话题。
- en: '**Related**:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关**：'
- en: '[7 Steps to Mastering Basic Machine Learning with Python — 2019 Edition](/2019/01/7-steps-mastering-basic-machine-learning-python.html)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[掌握基础机器学习的7个步骤 - 2019版](/2019/01/7-steps-mastering-basic-machine-learning-python.html)'
- en: '[7 Steps to Mastering SQL for Data Science — 2019 Edition](/2019/05/7-steps-mastering-sql-data-science-2019-edition.html)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[掌握SQL在数据科学中的7个步骤 - 2019版](/2019/05/7-steps-mastering-sql-data-science-2019-edition.html)'
- en: '[7 Steps to Mastering Data Preparation with Python](/2017/06/7-steps-mastering-data-preparation-python.html)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[掌握数据准备的7个步骤](/2017/06/7-steps-mastering-data-preparation-python.html)'
- en: '* * *'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业道路。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织IT工作'
- en: '* * *'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[成为优秀数据科学家所需的5项关键技能](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个初学数据科学家都应该掌握的6种预测模型](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
- en: '[The Best ETL Tools in 2021](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2021年最佳ETL工具](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
- en: '[Write Clean Python Code Using Pipes](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用管道编写干净的Python代码](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)'
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[是什么使Python成为初创公司的理想编程语言](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每位数据科学家都应该了解的三个 R 库（即使你使用 Python）](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
