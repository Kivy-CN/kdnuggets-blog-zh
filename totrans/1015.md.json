["```py\nI = np.array([\n   [1, 0],\n   [0, 1]\n])\n\nmatrix_2d_effect(I)\n\n# [...] Add labels\n```", "```py\nA = np.array([\n   [2, 5],\n   [7, 3]\n])\n\nmatrix_2d_effect(A)\n\n# [...] Add labels\n```", "```py\nU, Sigma, V_transpose = np.linalg.svd(A)\n```", "```py\nmatrix_2d_effect(V_transpose)\n```", "```py\nmatrix_2d_effect(np.diag(Sigma) @ V_transpose)\n```", "```py\nmatrix_2d_effect(U @ np.diag(Sigma) @ V_transpose)\n```", "```py\nlambd, Q = np.linalg.eig(A)\n```", "```py\nQ[:, 0] @ Q[:, 1]\n```", "```py\n-0.16609095970747995\n```", "```py\nax = matrix_2d_effect(np.linalg.inv(Q))\n```", "```py\nax = matrix_2d_effect(np.diag(lambd) @ np.linalg.inv(Q))\n```", "```py\nax = matrix_2d_effect(Q @ np.diag(lambd) @ np.linalg.inv(Q))\n```", "```py\nA = np.array([\n   [2, 5],\n   [1, 6],\n   [7, 3]\n])\n```", "```py\nax = matrix_3_by_2_effect(A)\n\n# [...] Add styles axes, limits etc.\n```", "```py\nU, Sigma, V_transpose = np.linalg.svd(A)\n```", "```py\nmatrix_2d_effect(V_transpose)\n```", "```py\nSigma_full = np.zeros((A.shape[0], A.shape[1]))\n\nSigma_full[:A.shape[1], :A.shape[1]] = np.diag(Sigma)\n\nSigma_full\n```", "```py\narray([[9.99274669, 0\\.        ],\n       [0\\.        , 4.91375758],\n       [0\\.        , 0\\.        ]])\n```", "```py\nax = matrix_3_by_2_effect(Sigma_full @ V_transpose)\n\n# [...] Add styles axes, limits etc.\n```", "```py\nax = matrix_3_by_2_effect(U @ Sigma_full @ V_transpose)\n\n# [...] Add styles axes, limits etc.\n```"]