["```py\nfrom faker import Faker\nimport faker.providers.credit_card\nimport pandas as pd\n\nimport random\nfrom random import randint\n```", "```py\ndef random_n_digits(n):\n    range_start = 10**(n-1)\n    range_end = (10**n)-1\n    return randint(range_start, range_end)\n\ndef unique_rand(rands, n):\n    new_int = random_n_digits(n)\n    if new_int not in rands:\n        rands.append(new_int)\n    else:\n        unique_rand(rands, n)\n    return new_int, rands\n\ndef generate_cost():\n    cost = ''\n    digits = randint(1, 4)\n    cost += str(random_n_digits(digits))\n    cost += '.' + str(random_n_digits(2))\n    return cost\n```", "```py\ndef random_n_digits(n):\n    range_start = 10**(n-1)\n    range_end = (10**n)-1\n    return randint(range_start, range_end)\n\nprint(random_n_digits(3))\nprint(random_n_digits(5))\nprint(random_n_digits(10))\n```", "```py\n745\n98435\n7629340561\n```", "```py\nfake = Faker(['en_US', 'en_UK', 'it_IT', 'de_DE', 'fr_FR'], use_weighting=True)\n\ncustomers = {}\ncust_ids = []\n\nfor i in range(0, 10000):\n    customers[i]={}\n    customers[i]['cust_id'], cust_ids = unique_rand(cust_ids, 8)\n    customers[i]['name'] = fake.name()\n    customers[i]['address'] = fake.address().replace('\\n', ', ')\n    customers[i]['phone_number'] = fake.phone_number()\n    customers[i]['dob'] = fake.date()\n    customers[i]['note'] = fake.text().replace('\\n', ' ')\n\ncustomer_df = pd.DataFrame(customers).T\nprint(customer_df)\n\ncustomer_df.to_csv('customer_data.csv', index=False)\n```", "```py\n       cust_id                 name  \\\n0     52287029            Jay Brown   \n1     85688731    Frédérique Martel   \n2     95499535      Georges Leclerc   \n3     28715621  Christian Carpenter   \n4     94472217       Lorraine Watts   \n...        ...                  ...   \n9995  70168635       Léon Couturier   \n9996  10483280       Vincent Nelson   \n9997  41868059           Gert Klapp   \n9998  28049517    Simonetta Garrone   \n9999  26781527      Alessio Camanni   \n\n                                                address       phone_number  \\\n0     Flat 9, Hart islands, East Elliotchester, DY6N...       0117 4960802   \n1             boulevard Chevalier, 93506 BourgeoisBourg  625.665.4731x5846   \n2                    43 Poole way, Taylorstad, KW45 0FT         0780881522   \n3     Rotonda Olivetti 99, Sandro salentino, 48332 L...      (00960) 04254   \n4              Jolanda-Seifert-Allee 113, 91518 Koblenz    +39 353 5623602   \n...                                                 ...                ...   \n9995  Strada Molesini 3 Appartamento 32, Ariasso ven...   +44(0)1214960433   \n9996                         Trubring 86, 28785 Ansbach  +33 5 61 32 08 79   \n9997  Strada Casarin 01 Piano 8, Settimo Giovanni ne...    +39 695 7780253   \n9998        Marga-Trubin-Straße 2/4, 13495 Feuchtwangen     (07310) 491854   \n9999  avenue Susanne Berthelot, 70292 Poirier-sur-Ra...       0114 4960083   \n\n             dob                                               note  \n0     2004-08-20  Interroger dormir but remercier atteindre juge...  \n1     2009-07-08  Semblable tout désert dominer lutte. Quart mêm...  \n2     2021-04-17  Occaecati occaecati temporibus a asperiores di...  \n3     1999-05-03  Rem itaque maxime dolor eum omnis. Eligendi qu...  \n4     1997-06-02  Doloremque ut illo sunt. Modi non autem conseq...  \n...          ...                                                ...  \n9995  1981-06-06  Language state white receive soon. Usually tru...  \n9996  2020-01-03  Similique quasi eos pariatur consequatur liber...  \n9997  2018-10-13  Voluptatum exercitationem omnis rem. Beatae al...  \n9998  1983-02-09  Treat vote poor church area discuss carry argu...  \n9999  1987-02-06  Go remember center toward real food section. S...  \n\n[10000 rows x 6 columns]\n```", "```py\ncredit_cards = {}\ncc_ids = []\n\nfor i in range(0, 10000):\n    credit_cards[i]={}\n    credit_cards[i]['cc_id'], cc_ids = unique_rand(cc_ids, 5)\n    credit_cards[i]['type'] = fake.credit_card_provider()\n    credit_cards[i]['number'] = fake.credit_card_number()\n    credit_cards[i]['ccv'] = fake.credit_card_security_code()\n    credit_cards[i]['expire'] = fake.credit_card_expire()\n\ncredit_cards_df = pd.DataFrame(credit_cards).T\nprint(credit_cards_df)\n\ncredit_cards_df.to_csv('credit_card_data.csv', index=False)\n```", "```py\n      cc_id           type            number  ccv expire\n0     33257   JCB 16 digit   213177754612892  121  11/24\n1     86707  VISA 16 digit  6573538482942722  042  11/31\n2     96668  VISA 16 digit  4780281393619055  671  01/23\n3     73749  VISA 16 digit  3520725757002891  319  04/28\n4     26342  VISA 13 digit    30141856563149  495  10/29\n...     ...            ...               ...  ...    ...\n9995  14141  VISA 13 digit     4617204802844  640  04/27\n9996  35599        Maestro      639006455203  384  12/21\n9997  46479  VISA 16 digit      503885514391  587  08/24\n9998  78536  VISA 19 digit     4789890563459  057  07/22\n9999  84649     Mastercard  3590096870674031  874  04/31\n\n[10000 rows x 5 columns]\n```", "```py\norders = {}\norder_ids = []\n\nfor i in range(0, 1000):\n    orders[i]={}\n    orders[i]['order_id'], order_ids = unique_rand(order_ids, 10)\n    orders[i]['cust_id'] = random.choice(cust_ids)\n    orders[i]['cc_id'] = random.choice(cc_ids)\n    orders[i]['cost'] = generate_cost()\n\norders_df = pd.DataFrame(orders).T\nprint(orders_df)\n\norders_df.to_csv('orders.csv', index=False)\n```", "```py\n       order_id   cust_id  cc_id     cost\n0    9526379779  21484387  95840  6471.85\n1    6999189530  90073074  75578     5.31\n2    6124881941  84882923  13358   962.21\n3    7476579071  91911770  22301    60.82\n4    4102308607  60614412  28339  8086.96\n..          ...       ...    ...      ...\n995  2021016579  42107923  24863  4165.62\n996  9279206414  49397693  45436     1.27\n997  3378899620  40173623  96470    32.64\n998  2222207181  73076539  40697  9701.29\n999  1040242247  17749465  66052     9.63\n\n[1000 rows x 4 columns]\n```"]