["```py\ninstall.packages(\"DataExplorer\")\n```", "```py\n## Plot basic description for airquality data\nplot_intro(airquality)\n```", "```py\n## View missing value distribution for airquality data\nplot_missing(airquality)\n```", "```py\n## Left: frequency distribution of all discrete variables\nplot_bar(diamonds)\n## Right: `price` distribution of all discrete variables\nplot_bar(diamonds, with = \"price\")\n```", "```py\n## View histogram of all continuous variables\nplot_histogram(diamonds)\n```", "```py\ninstall.packages(\"sparklyr\")\n```", "```py\nlibrary(sparklyr)\nspark_install(version = \"2.3.1\")\n```", "```py\nlibrary(sparklyr)\nsc <- spark_connect(master = \"local\")\n```", "```py\ninstall.packages(c(\"nycflights13\", \"Lahman\"))\n\nlibrary(dplyr)\niris_tbl <- copy_to(sc, iris)\nflights_tbl <- copy_to(sc, nycflights13::flights, \"flights\")\nbatting_tbl <- copy_to(sc, Lahman::Batting, \"batting\")\nsrc_tbls(sc)\n\n## [1] \"batting\" \"flights\" \"iris\"\n```", "```py\n# filter by departure delay and print the first few records\nflights_tbl %>% filter(dep_delay == 2)\n\n## # Source:   lazy query [?? x 19]\n## # Database: spark_connection\n##     year month   day dep_time sched_dep_time dep_delay arr_time\n##    <int> <int> <int>    <int>          <int>     <dbl>    <int>\n##  1  2013     1     1      517            515         2      830\n##  2  2013     1     1      542            540         2      923\n##  3  2013     1     1      702            700         2     1058\n##  4  2013     1     1      715            713         2      911\n##  5  2013     1     1      752            750         2     1025\n##  6  2013     1     1      917            915         2     1206\n##  7  2013     1     1      932            930         2     1219\n##  8  2013     1     1     1028           1026         2     1350\n##  9  2013     1     1     1042           1040         2     1325\n## 10  2013     1     1     1231           1229         2     1523\n## # ... with more rows, and 12 more variables: sched_arr_time <int>,\n## #   arr_delay <dbl>, carrier <chr>, flight <int>, tailnum <chr>,\n## #   origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>,\n## #   minute <dbl>, time_hour <dttm>\n```", "```py\ndelay <- flights_tbl %>% \n  group_by(tailnum) %>%\n  summarise(count = n(), dist = mean(distance), delay = mean(arr_delay)) %>%\n  filter(count > 20, dist < 2000, !is.na(delay)) %>%\n  collect\n\n# plot delays\nlibrary(ggplot2)\nggplot(delay, aes(dist, delay)) +\n  geom_point(aes(size = count), alpha = 1/2) +\n  geom_smooth() +\n  scale_size_area(max_size = 2)\n\n## `geom_smooth()` using method = 'gam'\n```", "```py\n*# copy mtcars into spark*\nmtcars_tbl <- copy_to(sc, mtcars)\n\n*# transform our data set, and then partition into 'training', 'test'*\npartitions <- mtcars_tbl %>%\n  filter(hp >= 100) %>%\n  mutate(cyl8 = cyl == 8) %>%\n  sdf_partition(training = 0.5, test = 0.5, seed = 1099)\n\n*# fit a linear model to the training dataset*\nfit <- partitions$training %>%\n  ml_linear_regression(response = \"mpg\", features = c(\"wt\", \"cyl\"))\nfit\n\n## Call: ml_linear_regression.tbl_spark(., response = \"mpg\", features = c(\"wt\", \"cyl\"))  \n## \n## Formula: mpg ~ wt + cyl\n## \n## Coefficients:\n## (Intercept)          wt         cyl \n##   33.499452   -2.818463   -0.923187\n```", "```py\nsummary(fit)\n\n## Call: ml_linear_regression.tbl_spark(., response = \"mpg\", features = c(\"wt\", \"cyl\"))  \n## \n## Deviance Residuals:\n##    Min     1Q Median     3Q    Max \n## -1.752 -1.134 -0.499  1.296  2.282 \n## \n## Coefficients:\n## (Intercept)          wt         cyl \n##   33.499452   -2.818463   -0.923187 \n## \n## R-Squared: 0.8274\n## Root Mean Squared Error: 1.422\n```", "```py\n*# Install the latest stable release from CRAN.*\ninstall.packages(\"drake\")\n\n*# Alternatively, install the development version from GitHub.*\ninstall.packages(\"devtools\")\nlibrary(devtools)\ninstall_github(\"ropensci/drake\")\n```", "```py\ninstall.packages(\"DALEX\")\n```"]