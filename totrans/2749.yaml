- en: Uber’s Ludwig is an Open Source Framework for Low-Code Machine Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/06/uber-ludwig-open-source-framework-machine-learning.html](https://www.kdnuggets.com/2020/06/uber-ludwig-open-source-framework-machine-learning.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)![Figure](../Images/a2a3b89549a42a293b4320fe6ef63bf7.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Source: [https://ludwig-ai.github.io/ludwig-docs/](https://ludwig-ai.github.io/ludwig-docs/)
  prefs: []
  type: TYPE_NORMAL
- en: Training and testing deep learning models is a difficult process that requires
    sophisticated knowledge of machine learning and data infrastructures. From feature
    modeling to hyperparameter optimization, the processes for training and testing
    deep learning models are one of the biggest bottlenecks in data science solutions
    in the real world. Simplifying this element could help to streamline the adoption
    of deep learning technologies. While the low-code training of deep learning models
    is a nascent space, we are already seeing relevant innovations. One of the most
    complete solutions to tackle that problem came from Uber AI Labs. [Ludwig](https://ludwig-ai.github.io/ludwig-docs/?from=%40),
    is a framework for training and testing machine learning models without the need
    to write code. Recently, Uber released a second version of Ludwig that includes
    major enhancements in order to enable mainstream no-code experiences for machine
    learning developers.
  prefs: []
  type: TYPE_NORMAL
- en: The goal of Ludwig is to simplify the processes of training and testing machine
    learning models using a declarative, no-code experience. Training is one of the
    most developer intensive aspects of deep learning applications. Typically, data
    scientists spend numerous hours experimenting with different deep learning models
    to better perform about a specific training datasets. This process involves more
    than just training including several other aspects such as model comparison, evaluation,
    workload distribution and many others. Given its highly technical nature, the
    training of deep learning models is an activity typically constrained to data
    scientists and machine learning experts and includes a significant volume of code.
    While this problem can be generalized for any machine learning solution it has
    gotten way worse in deep learning architectures as they typically involve many
    layers and levels. Ludwig’s abstracts the complexity of training and testing machine
    learning programs using declarative models that are easy to modify and version.
  prefs: []
  type: TYPE_NORMAL
- en: Ludwig
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Functionally, Ludwig is a framework for simplifying the processes of selecting,
    training and evaluating machine learning models for a given scenario. Ludwig provides
    a set of model architectures that can be combined together to create an end-to-end
    model optimized for a specific set of requirements. Conceptually, Ludwig was designed
    based on a series of principles:'
  prefs: []
  type: TYPE_NORMAL
- en: '**No Coding Required**: Ludwig enables the training of models without requiring
    any machine learning expertise.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Generality**: Ludwig can be used across many different machine learning scenarios.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Flexibility**: Ludwig is flexible enough to be used by experienced machine
    learning practitioners as well as by non-experienced developers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Extensibility**: Ludwig was designed with extensibility in mind. Every new
    version has included new capabilities without changing the core model.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Interpretability**: Ludwig includes visualizations that help data scientists
    understand the performance of machine learning models.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Ludwig, a data scientist can train a deep learning model by simply providing
    a CSV file that contains the training data as well as a YAML file with the inputs
    and outputs of the model. Using those two data points, Ludwig performs a multi-task
    learning routine to predict all outputs simultaneously and evaluate the results.
    This simple structure is key to enable rapid prototyping. Under the covers, Ludwig
    provides a series of deep learning models that are constantly evaluated and can
    be combined in a final architecture.
  prefs: []
  type: TYPE_NORMAL
- en: The main innovation behind Ludwig is based on the idea of data-type specific
    encoders and decoders. Ludwig uses specific encoders and decoders for any given
    data type supported. Like in other deep learning architectures, encoders are responsible
    for mapping raw data to tensors while decoders map tensors to outputs. The architecture
    of Ludwig also includes the concept of a combiner which is a component that combine
    the tensors from all input encoders, process them, and return the tensors to be
    used for the output decoders.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/41b4b9afab15dfb8c92694a995c6f7ec.png)'
  prefs: []
  type: TYPE_IMG
- en: Source: [https://eng.uber.com/introducing-ludwig/](https://eng.uber.com/introducing-ludwig/)
  prefs: []
  type: TYPE_NORMAL
- en: 'Data scientists will use Ludwig for two main functionalities: training and
    predictions. Suppose that we are working on a text classification scenario with
    the following dataset.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/51f7df83525491752a0107b226cdf57a.png)'
  prefs: []
  type: TYPE_IMG
- en: Source: [https://ludwig-ai.github.io/ludwig-docs/examples/](https://ludwig-ai.github.io/ludwig-docs/examples/)
  prefs: []
  type: TYPE_NORMAL
- en: 'We can get started with Ludwig by installing it using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The next step would be to configure a model definition YAML file that specifies
    the input and output features of the model.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'With those two inputs(training data and YAML configuration), we can train a
    deep learning model using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Ludwig provides a series of visualizations that can be used during training
    and predictions. For instance, the learning curve visualization give us an idea
    of the training and testing performance of the model.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/ec069941706c5c44880403f20801cd55.png)'
  prefs: []
  type: TYPE_IMG
- en: Source: [https://ludwig-ai.github.io/ludwig-docs/getting_started/](https://ludwig-ai.github.io/ludwig-docs/getting_started/)
  prefs: []
  type: TYPE_NORMAL
- en: 'After training we can evaluate the predictions of the model using the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Other visualizations can be used to evaluate the performance of the model.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/025ce7f32a9913363b9be995d5776a6f.png)'
  prefs: []
  type: TYPE_IMG
- en: Source: [https://ludwig-ai.github.io/ludwig-docs/getting_started/](https://ludwig-ai.github.io/ludwig-docs/getting_started/)
  prefs: []
  type: TYPE_NORMAL
- en: New Additions to Ludwig
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Recently, Uber released a second version of Ludwig expands its core architectures
    with a series of new features designed to improve the no-code experience to training
    and testing models. A lot of the new Ludwig features are based on integration
    with other machine learning stacks or frameworks. Here are some of the key features:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Comet.ml Integration: **[Comet.ml](https://www.comet.ml/) is one of the most
    popular platforms in the market for hyperparameter optimization and machine learning
    experimentation. Ludwig’s new integration with Comet.ml enables capabilities such
    as hyperparameter analysis or live performance evaluation which are essential
    parts of a the data scientist toolbox.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Model Serving:** Model serving is a key component of the lifecycle of machine
    learning programs. The new version of Ludwig provides an API endpoint to serve
    trained models and query predictions using simple REST queries.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Audio/Speech Features:** One of the most important additions of Ludwig 0.2
    is the support for audio features. This allow data scientists to build audio analysis
    models with minimum code.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**BERT Encoder: **[BERT](https://arxiv.org/abs/1810.04805) is one of the most
    popular language models in the history of deep learning. Based on a [Transformer
    architecture](https://arxiv.org/abs/1904.09408), BERT can perform a number of
    language tasks such as question-answering or text generation. Ludwig now supports
    BERT as a native building block for text classification scenarios.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**H3 Features:** [H3](https://eng.uber.com/h3/) is a very popular spatial index
    that is used to encode location into 64-bit integers. Ludwig 0.2 natively supports
    H3 allowing the implementation of machine learning models using spatial datasets.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other additions to Ludwig include improvement in the visualization APIs, new
    date features, better support for non-English languages for text tokenization
    as well as better data pre-processing capabilities. Data injection in particular
    seems to be a key area of focus for the next version of Ludwig.
  prefs: []
  type: TYPE_NORMAL
- en: Ludwig remains relatively new framework that still needs a lot of improvements.
    However, its support for low-code models is a key building block to streamline
    the adoption of machine learning across a wider class of developers. Furthermore,
    Ludwig abstracts and simplifies the usage of some of the topn machine learning
    frameworks in the market.
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://medium.com/@jrodthoughts/ubers-ludwig-is-an-open-source-framework-for-low-code-machine-learning-d7c2fefd6c69).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[LinkedIn Open Sources a Small Component to Simplify the TensorFlow-Spark Interoperability](/2020/05/linkedin-open-sources-small-component-tensorflow-spark-interoperability.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Facebook Open Sources Blender, the Largest-Ever Open Domain Chatbot](/2020/05/facebook-open-sources-blender-largest-open-domain-chatbot.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Microsoft Research Unveils Three Efforts to Advance Deep Generative Models](/2020/05/microsoft-research-three-efforts-advance-deep-generative-models.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
