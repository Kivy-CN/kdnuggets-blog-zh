- en: 'Convert Bytes to String in Python: A Tutorial for Beginners'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Python 中将字节转换为字符串：初学者教程
- en: 原文：[https://www.kdnuggets.com/convert-bytes-to-string-in-python-a-tutorial-for-beginners](https://www.kdnuggets.com/convert-bytes-to-string-in-python-a-tutorial-for-beginners)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/convert-bytes-to-string-in-python-a-tutorial-for-beginners](https://www.kdnuggets.com/convert-bytes-to-string-in-python-a-tutorial-for-beginners)
- en: '![Convert Bytes to String in Python: A Tutorial for Beginners](../Images/ddc34a7dda9cd40fa9f91fdaabfdb07d.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![在 Python 中将字节转换为字符串：初学者教程](../Images/ddc34a7dda9cd40fa9f91fdaabfdb07d.png)'
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: In Python, strings are immutable sequences of characters that are human-readable
    and typically encoded in a specific character encoding, such as UTF-8\. While
    bytes represent raw binary data. A byte object is immutable and consists of an
    array of bytes (8-bit values). In Python 3, string literals are Unicode by default,
    while byte literals are prefixed with a `b`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中，字符串是不可变的字符序列，具有可读性，并通常编码为特定的字符编码，例如 UTF-8。字节表示原始的二进制数据。字节对象是不可变的，由字节数组（8
    位值）组成。在 Python 3 中，字符串文字默认是 Unicode，而字节文字以 `b` 为前缀。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速通道进入网络安全职业'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你在 IT 领域的组织'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Converting bytes to strings is a common task in Python, particularly when working
    with data from network operations, file I/O, or responses from certain APIs. This
    is a tutorial on how to convert bytes to strings in Python.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 将字节转换为字符串是 Python 中的一个常见任务，特别是在处理来自网络操作、文件 I/O 或某些 API 响应的数据时。这是一个关于如何在 Python
    中将字节转换为字符串的教程。
- en: 1\. Convert Bytes to String Using the decode() Method
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 使用 `decode()` 方法将字节转换为字符串
- en: The most straightforward way to convert bytes to a string is using the `decode()`
    method on the byte object (or the byte string). This method requires specifying
    the character encoding used.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 将字节转换为字符串的最简单方法是使用字节对象（或字节字符串）上的 `decode()` 方法。此方法需要指定所使用的字符编码。
- en: '**Note**: Strings do not have an associated binary encoding and bytes do not
    have an associated text encoding. To convert bytes to string, you can use the
    `decode()` method on the bytes object. And to convert string to bytes, you can
    use the `encode()` method on the string. In either case, specify the encoding
    to be used.'
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意**：字符串没有关联的二进制编码，而字节没有关联的文本编码。要将字节转换为字符串，你可以在字节对象上使用 `decode()` 方法。要将字符串转换为字节，你可以在字符串上使用
    `encode()` 方法。在这两种情况下，都需要指定使用的编码。'
- en: 'Example 1: UTF-8 Encoding'
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例 1：UTF-8 编码
- en: 'Here we convert `byte_data` to a UTF-8-encoded string using the `decode()`
    method:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们使用 `decode()` 方法将 `byte_data` 转换为 UTF-8 编码的字符串：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You should get the following output:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到以下输出：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You can verify the data types before and after the conversion like so:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以像这样验证转换前后的数据类型：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The data types should be as expected:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 数据类型应该如预期那样：
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Example 2: Handling Other Encodings'
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例 2：处理其他编码
- en: Sometimes, the bytes sequence may contain encodings other than UTF-8\. You can
    handle this by specifying the corresponding encoding scheme used when you call
    the `decode()` method on the bytes object.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，字节序列可能包含除 UTF-8 之外的编码。你可以通过在调用字节对象的 `decode()` 方法时指定相应的编码方案来处理这种情况。
- en: 'Here’s how you can decode a byte string with UTF-16 encoding:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是如何使用 UTF-16 编码解码字节字符串的方法：
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'And here’s the output:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这是输出结果：
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Using Chardet to Detect Encoding
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Chardet 检测编码
- en: In practice, you may not always know the encoding scheme used. And mismatched
    encodings can lead to errors or garbled text. So how do you get around this?
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，你可能并不总是知道所使用的编码方案。不匹配的编码可能导致错误或乱码。那么你该如何解决这个问题呢？
- en: 'You can use the [chardet library](https://pypi.org/project/chardet/) (install
    chardet using pip: `pip install chardet`) to detect the encoding. And then use
    it in the `decode()` method call. Here’s an example:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '你可以使用[chardet 库](https://pypi.org/project/chardet/)（使用 pip 安装 chardet: `pip
    install chardet`）来检测编码。然后在`decode()`方法调用中使用它。下面是一个示例：'
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You should get a similar output:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该得到类似的输出：
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Error Handling in Decoding
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解码中的错误处理
- en: The `bytes` object that you’re working with may not always be valid; it may
    sometimes contain invalid sequences for the specified encoding. This will lead
    to errors.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你正在使用的`bytes`对象可能并不总是有效；它有时可能包含指定编码的无效序列。这将导致错误。
- en: 'Here, `byte_data_invalid` contains the invalid sequence \xff:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`byte_data_invalid`包含无效序列 \xff：
- en: '[PRE8]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'When you try to decode it, you’ll get the following error:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当你尝试解码时，会出现以下错误：
- en: '[PRE9]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: But there are a couple of ways you can handle these errors. You can ignore such
    errors when decoding or you can replace invalid sequences with a placeholder.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 但是有几种方法可以处理这些错误。你可以在解码时忽略这些错误，也可以用占位符替换无效序列。
- en: Ignoring Errors
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 忽略错误
- en: 'To ignore invalid sequences when decoding, you can set the errors you can set
    `errors` to `ignore` in the `decode()` method call:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 要在解码时忽略无效序列，你可以将`errors`设置为`ignore`，在`decode()`方法调用中：
- en: '[PRE10]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You’ll now get the following output without any errors:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在会得到以下没有错误的输出：
- en: '[PRE11]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Replacing Errors
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 替换错误
- en: 'You can as well replace invalid sequences with the placeholder. To do this,
    you can set `errors` to `replace` as shown:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以用占位符替换无效序列。为此，你可以将`errors`设置为`replace`，如下所示：
- en: '[PRE12]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now the invalid sequence (at the end) is replaced by a placeholder:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，无效序列（在末尾）被占位符替换：
- en: '[PRE13]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 2\. Convert Bytes to String Using the str() Constructor
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 使用 str() 构造函数将字节转换为字符串
- en: 'The `decode()` method is the most common way to convert bytes to string. But
    you can also use the `str()` constructor to get a string from a bytes object.
    You can pass in the encoding scheme to `str()` like so:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`decode()`方法是将字节转换为字符串的最常见方法。但你也可以使用`str()`构造函数从字节对象获取字符串。你可以将编码方案传递给`str()`，如下所示：'
- en: '[PRE14]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This outputs:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这输出：
- en: '[PRE15]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 3\. Convert Bytes to String Using the Codecs Module
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 使用 Codecs 模块将字节转换为字符串
- en: Yet another method to convert bytes to string in Python is using the `decode()`
    function from the built-in [codecs](https://docs.python.org/3/library/codecs.html)
    module. This module provides convenience functions for encoding and decoding.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中将字节转换为字符串的另一种方法是使用内置的[codecs](https://docs.python.org/3/library/codecs.html)模块中的`decode()`函数。该模块提供了编码和解码的便利函数。
- en: 'You can call the `decode()` function with the bytes object and the encoding
    scheme as shown:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以像下面这样调用`decode()`函数，传入字节对象和编码方案：
- en: '[PRE16]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'As expected, this also outputs:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 正如预期的，这也输出：
- en: '[PRE17]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Summary
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: 'In this tutorial, we learned how to convert bytes to strings in Python while
    also handling different encodings and potential errors gracefully. Specifically,
    we learned how to:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们学习了如何在 Python 中将字节转换为字符串，同时优雅地处理不同的编码和潜在的错误。具体来说，我们学习了如何：
- en: Use the `decode()` method to convert bytes to a string, specifying the correct
    encoding.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`decode()`方法将字节转换为字符串，指定正确的编码。
- en: Handle potential decoding errors using the `errors` parameter with options like
    `ignore` or `replace`.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`errors`参数处理潜在的解码错误，选项包括`ignore`或`replace`。
- en: Use the `str()` constructor to convert a valid bytes object to a string.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`str()`构造函数将有效的字节对象转换为字符串。
- en: Use the `decode()` function from the `codecs` module that is built into the
    Python standard library to convert a valid bytes object to a string.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Python 标准库中内置的`codecs`模块的`decode()`函数将有效的字节对象转换为字符串。
- en: Happy coding!
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 编程愉快！
- en: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)****
    is a developer and technical writer from India. She likes working at the intersection
    of math, programming, data science, and content creation. Her areas of interest
    and expertise include DevOps, data science, and natural language processing. She
    enjoys reading, writing, coding, and coffee! Currently, she''s working on learning
    and sharing her knowledge with the developer community by authoring tutorials,
    how-to guides, opinion pieces, and more. Bala also creates engaging resource overviews
    and coding tutorials.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)**
    是一位来自印度的开发者和技术作家。她喜欢在数学、编程、数据科学和内容创作的交汇处工作。她的兴趣和专长领域包括 DevOps、数据科学和自然语言处理。她享受阅读、写作、编码和咖啡！目前，她正在通过编写教程、操作指南、观点文章等，学习并与开发者社区分享她的知识。Bala
    还创建了引人入胜的资源概述和编码教程。**'
- en: More On This Topic
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Convert Python Dict to JSON: A Tutorial for Beginners](https://www.kdnuggets.com/convert-python-dict-to-json-a-tutorial-for-beginners)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将 Python 字典转换为 JSON：初学者教程](https://www.kdnuggets.com/convert-python-dict-to-json-a-tutorial-for-beginners)'
- en: '[How To Write Efficient Python Code: A Tutorial for Beginners](https://www.kdnuggets.com/how-to-write-efficient-python-code-a-tutorial-for-beginners)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何编写高效的 Python 代码：初学者教程](https://www.kdnuggets.com/how-to-write-efficient-python-code-a-tutorial-for-beginners)'
- en: '[Python String Processing Cheatsheet](https://www.kdnuggets.com/2020/01/python-string-processing-primer.html)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 字符串处理备忘单](https://www.kdnuggets.com/2020/01/python-string-processing-primer.html)'
- en: '[Python String Methods](https://www.kdnuggets.com/2022/12/python-string-methods.html)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 字符串方法](https://www.kdnuggets.com/2022/12/python-string-methods.html)'
- en: '[Python String Matching Without Complex RegEx Syntax](https://www.kdnuggets.com/2023/02/python-string-matching-without-complex-regex-syntax.html)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 字符串匹配无需复杂的正则表达式语法](https://www.kdnuggets.com/2023/02/python-string-matching-without-complex-regex-syntax.html)'
- en: '[How to Convert an RGB Image to Grayscale](https://www.kdnuggets.com/2019/12/convert-rgb-image-grayscale.html)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何将 RGB 图像转换为灰度图像](https://www.kdnuggets.com/2019/12/convert-rgb-image-grayscale.html)'
