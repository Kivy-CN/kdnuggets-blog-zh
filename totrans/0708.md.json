["```py\nimport pymc as pm\nimport numpy as np\n\n# Generate synthetic data\nnp.random.seed(42)\nX = np.linspace(0, 1, 100)\ntrue_intercept = 1\ntrue_slope = 2\ny = true_intercept + true_slope * X + np.random.normal(scale=0.5, size=len(X))\n\n# Define the model\nwith pm.Model() as model:\n    # Priors for unknown model parameters\n    intercept = pm.Normal(\"intercept\", mu=0, sigma=10)\n    slope = pm.Normal(\"slope\", mu=0, sigma=10)\n    sigma = pm.HalfNormal(\"sigma\", sigma=1)\n\n    # Likelihood (sampling distribution) of observations\n    mu = intercept + slope * X\n    likelihood = pm.Normal(\"y\", mu=mu, sigma=sigma, observed=y)\n\n    # Inference\n    trace = pm.sample(2000, return_inferencedata=True)\n\n# Summarize the results\nprint(pm.summary(trace)) \n```"]