- en: Exploring Data Cleaning Techniques With Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/04/exploring-data-cleaning-techniques-python.html](https://www.kdnuggets.com/2023/04/exploring-data-cleaning-techniques-python.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Exploring Data Cleaning Techniques With Python](../Images/252e0add27f5fc4968f30d2c5734ac89.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by [freepik.com](https://www.freepik.com/free-vector/set-elements-chart-infographics-graphs-diagrams-chart-color_15573877.htm#query=graph&position=0&from_view=search&track=sph)
  prefs: []
  type: TYPE_NORMAL
- en: In real-world data science projects, the data used for analysis may contain
    several imperfections such as the presence of missing data, redundant data, data
    entries having incorrect format, presence of outliers in the data, etc. Data cleaning
    refers to the process of preprocessing and transforming raw data to render it
    in a form that is suitable for further analysis such as for descriptive analysis
    (data visualization) or prescriptive analysis (model building). Clean, accurate,
    and reliable data must be utilized for post analysis because “*bad data leads
    to bad predictive models*”.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Several libraries in Python, including pandas and numpy, can be used for data
    cleaning and transformation. These libraries offer a wide range of methods and
    functions to carry out tasks including dealing with missing values, eliminating
    outliers, and translating data into a model-friendly format. Additionally, eliminating
    redundant features or combining groups of highly correlated features into a single
    feature could lead to dimensionality reduction. Training a model using a dataset
    with fewer features will improve the computational efficiency of the model. Furthermore,
    a model built using a dataset having fewer features is easier to interpret and
    has better predictive power.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this article, we will explore various tools and techniques that are available
    in Python for cleaning, processing, and transforming data. We will demonstrate
    data cleaning techniques using the ***data.cvs*** dataset shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploring Data Cleaning Techniques With Python](../Images/75d823feaeebf8241fe270b4adc2d980.png)'
  prefs: []
  type: TYPE_IMG
- en: data.csv showing various imperfections such as duplicated data, NaN, etc. Data
    created by Author.
  prefs: []
  type: TYPE_NORMAL
- en: Libraries For Data Cleaning in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In Python, a range of libraries and tools, including pandas and NumPy, may be
    used to clean up data. For instance, the *dropna()*, *drop duplicates()*, and
    *fillna()* functions in pandas may be used to manage missing data, remove missing
    data, and remove duplicate rows, respectively. The scikit-learn toolkit offers
    tools for dealing with outliers (such as the *SimpleImputer* class) and transforming
    data into a format that can be utilized by a model, such as the *StandardScaler*
    class for standardizing normalizing numerical data, and the *MinMaxScalar* for
    normalizing data.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we will explore various data cleaning techniques that can be
    used in Python to prepare and preprocess data for use in a machine learning model.
  prefs: []
  type: TYPE_NORMAL
- en: Processing Missing Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The processing of missing data is one of the most important imperfections in
    a dataset. Several methods for dealing with missing data are provided by the pandas
    package in Python, including **dropna()** and **fillna().** The **dropna()** method
    is used to eliminate any columns or rows that have missing values. For instance,
    the code below will eliminate all rows with at least one missing value:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The **fillna()** function can be used to fill in missing values with a specific
    value or method. For example, the following code will fill in missing values in
    the ''age'' column with the mean age of the data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Handling Outliers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Handling outliers is a typical data cleaning activity. Values that diverge greatly
    from the rest of the data are considered outliers. These factors should be managed
    carefully since they have a significant influence on a model's performance. The
    *RobustScaler* class from the scikit-learn toolkit in Python is used to handle
    outliers. By deleting the median and scaling the data according to the interquartile
    range, this class may be used to scale the data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Encoding Categorical Variables
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Another common data cleaning task is converting data into a format that can
    be used by a model. For instance, before categorical data can be employed in a
    model, it must be transformed into numerical data. The *get_dummies()* method
    in the pandas package allows one to transform category data into numerical data.
    In the example below, the categorical feature *‘Departmen*t’ is transformed into
    numerical data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Removing Duplicate Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Duplicate data must also be eliminated during the data cleaning process. To
    delete duplicate rows from a Python DataFrame, the *drop_duplicates()* method
    provided by the pandas package can be used. For instance, the code below will
    eliminate any redundant rows from the data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Feature Engineering
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Feature selection and feature engineering are essential components of data
    cleaning. The process of choosing only the relevant features in a dataset is referred
    to as feature selection, whereas the process of building new features from already
    existing ones is known as feature engineering.  The code below is an illustration
    of feature engineering:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: In the above code, we first create a feature matrix (X) by dropping the '*Employee
    ID*' and '*Date of Joining*' columns, and create a target vector (y) consisting
    of the '*Salary*' column. We then scale the numerical features '*Age*' and '*Experience*'
    using the StandardScaler() function from scikit-learn.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we create dummy variables for the categorical '*Gender*' column and concatenate
    them with the scaled numerical features to create the final processed feature
    matrix (X_processed).
  prefs: []
  type: TYPE_NORMAL
- en: Note that the specific feature extraction techniques used will depend on the
    data and the specific requirements of the analysis. Also, it's important to split
    the data into training and testing sets before applying any machine learning models
    to avoid overfitting.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To conclude, data cleaning is an essential stage in the machine learning process
    since it guarantees the data used for analysis (descriptive or prescriptive) is
    of high quality. Important methods that may be used to prepare and preprocess
    data include converting data format, removing duplicate data, dealing with missing
    data, outlier detection, feature engineering, and feature selection. Pandas, NumPy,
    and scikit-learn are just a few of the many libraries and tools for feature engineering
    and data cleaning.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Benjamin O. Tayo](https://www.linkedin.com/in/benjamin-o-tayo-ph-d-a2717511/)**
    is a Physicist, Data Science Educator, and Writer, as well as the Owner of DataScienceHub.
    Previously, Benjamin was teaching Engineering and Physics at U. of Central Oklahoma,
    Grand Canyon U., and Pittsburgh State U.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering Data Cleaning and Preprocessing Techniques](https://www.kdnuggets.com/2023/08/7-steps-mastering-data-cleaning-preprocessing-techniques.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Exploring Infinite Iterators in Python''s itertools](https://www.kdnuggets.com/exploring-infinite-iterators-in-python-itertools)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Exploring the OpenAI API with Python](https://www.kdnuggets.com/exploring-the-openai-api-with-python)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Exploring Natural Sorting in Python](https://www.kdnuggets.com/exploring-natural-sorting-in-python)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Navigating the Data Revolution: Exploring the Booming Trends in…](https://www.kdnuggets.com/navigating-the-data-revolution-exploring-the-booming-trends-in-data-science-and-machine-learning)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Optimizing Data Storage: Exploring Data Types and Normalization in SQL](https://www.kdnuggets.com/optimizing-data-storage-exploring-data-types-and-normalization-in-sql)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
