- en: How to Create a Dataset for Machine Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2022/02/create-dataset-machine-learning.html](https://www.kdnuggets.com/2022/02/create-dataset-machine-learning.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![How to Create a Dataset for Machine Learning](../Images/b8a0b7682cabca9d80537171f7dcb31c.png)'
  prefs: []
  type: TYPE_IMG
- en: Why Creating Datasets for Machine Learning (ML) is Important
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Something extraordinary is happening.
  prefs: []
  type: TYPE_NORMAL
- en: '**The entry barrier to the world of algorithms is getting lower** by the day.
    That means anybody with the right goal and skills can find out great algorithms
    for Machine Learning (ML) and Artificial Intelligence (AI) tasks - computer vision,
    natural language processing, recommendation systems, or even autonomous driving.'
  prefs: []
  type: TYPE_NORMAL
- en: Open-source computing has come a long way and plenty of open-source initiatives
    are propelling the vehicles of data science, digital analytics, and ML. Researchers
    around the universities and corporate R&D labs are creating new algorithms and
    ML techniques every day. We can safely say that algorithms, programming frameworks,
    ML packages, and even tutorials and courses on how to learn these techniques are
    no longer scarce resources.
  prefs: []
  type: TYPE_NORMAL
- en: But high-quality data is. **Datasets - properly curated and labeled - remain
    a scarce resource**.
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Create a Dataset for Machine Learning](../Images/142f0db94c74e9c64496b1630d46ee58.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Fig 1**: Too many algorithms but hardly a good dataset'
  prefs: []
  type: TYPE_NORMAL
- en: Good Data is Challenging Even for Basic ML Tasks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Often, it is not a discussion about how to get high-quality data for the cool
    AI-powered travel or fashion app you are working on. That kind of consumer, social,
    or behavioral data collection presents its own issues.
  prefs: []
  type: TYPE_NORMAL
- en: '**Every application field has its own challenge to get the suitable data** that
    it needs for training high-performance ML models. For example, LiDAR for autonomous
    vehicles needs a special 3D point cloud dataset for object identification and
    semantic segmentation, that is extremely difficult to hand label.'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Create a Dataset for Machine Learning](../Images/a8989011586ca3332c241dd5a1975e29.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Fig 2**: A LiDAR 3D point cloud dataset - extremely hard to hand-label for
    training. Image [sourced from this paper](https://www.researchgate.net/publication/321142803_Airborne_LiDAR_Technology_A_Review_of_Data_Collection_and_Processing_Systems)'
  prefs: []
  type: TYPE_NORMAL
- en: However, even **having access to quality datasets for basic ML algorithm testing
    and ideation is a challenge**. Let's say an ML engineer is learning from scratch.
    The sanest advice would be to start with simple, small-scale datasets which he/she
    can plot in two dimensions to understand the patterns visually and see the inner
    workings of the ML algorithm in an intuitive fashion. As the dimensions of the
    data explode, however, the visual judgment must extend to more complicated matters
    - concepts like *learning and sample complexity*, *computational efficiency*, *class
    imbalance*, etc.
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Create a Dataset for Machine Learning](../Images/3a15c98d7f3886d5c26ec32bb19e7bc4.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Fig 3**: Data and ML model exploration begins simple - then explodes. Dataset
    must evolve too.'
  prefs: []
  type: TYPE_NORMAL
- en: Synthetic Datasets to the Rescue
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'One can always find a real-life dataset or generate data points by experimenting
    in order to evaluate and fine-tune an ML algorithm. However, with a fixed dataset,
    there is a fixed number of samples, a fixed underlying pattern, and a fixed degree
    of class separation between positive and negative samples. There are many aspects
    of an ML algorithm that one cannot test or evaluate with such a fixed dataset.
    Here are some examples:'
  prefs: []
  type: TYPE_NORMAL
- en: how the fraction of test and train data affects the algorithm’s performance
    and robustness
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: how robust the metrics are in the face of varying degrees of class imbalance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: what kind of bias-variance trade-offs must be made
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: how the algorithm performs under various noise signatures in the training as
    well as test data (i.e. noise in the label as well as in the feature set)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Synthetic datasets** come to the rescue in all these situations. Synthetic
    data is **information that''s artificially manufactured rather than generated
    by real-world events**. This type of data is best for simple validation of a model
    but is used to help train as well. The potential benefit of such synthetic datasets
    can easily be gauged for **sensitive applications - medical classifications or
    financial modeling**, where getting hands on a high-quality labeled dataset is
    often expensive and prohibitive.'
  prefs: []
  type: TYPE_NORMAL
- en: Features of a Good Dataset for ML (Synthetic or Real-Life)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: While a synthetic dataset is generated programmatically, real-life datasets
    are curated from all kinds of sources - social or scientific experiments, medical
    treatment history, business transactional data, web browsing activities, sensor
    reading, or manual labeling of images taken by automated cameras or LiDAR. No
    matter the source, there are always some desirable features for a dataset to be
    valuable for ML algorithm development and performance tuning.
  prefs: []
  type: TYPE_NORMAL
- en: Here are some examples,
  prefs: []
  type: TYPE_NORMAL
- en: It should feature a **mix of numeric, binary, or categorical** (ordinal or non-ordinal)
    features and the number of features and length of the dataset should be non-trivial
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For synthetic data, random noise should be interjected in a controllable manner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There must be some **degree of randomness** to it
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If synthetic - the user should be able to choose a wide variety of statistical
    distributions to generate this data i.e. the underlying random process/parameters
    can be precisely controlled and tuned
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If it is used for classification algorithms, then the **degree of class separation** should
    be enough to achieve decent classification accuracy but also not too large so
    as to make the problem trivial. For synthetic data, this should be controllable
    to make the learning problem easy or hard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Speed of generation** should be quite high to enable experimentation with
    a large variety of such datasets for any particular ML algorithms i.e. if the
    synthetic data is based on data augmentation on a real-life dataset, then the
    augmentation algorithm must be computationally efficient'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For real-life datasets, the **cost of data generation** should be low and the **process
    should be resource-efficient** so that the ML training does not overburden the
    business goals
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For a regression problem, a complex, non-linear generative process can be used
    for sourcing the data - **real physics models or computer simulation of physical
    processes** may come to aid in this endeavor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Regression, Classification, and Clustering Dataset Creation for ML
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**[Scikit-learn](https://www.exxactcorp.com/blog/Deep-Learning/scikit-learn-1-0-released)** is
    the most popular ML library in the Python-based software stack for data science.
    Apart from the well-optimized ML routines and pipeline building methods, it also
    boasts a solid collection of **utility methods for synthetic data generation**.
    We can create a wide variety of datasets for regular ML algorithm training and
    tuning.'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Create a Dataset for Machine Learning](../Images/9a96e4b75030004424e137175b7c456b.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Fig 4**: Regression datasets created using Scikit-learn.'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Create a Dataset for Machine Learning](../Images/1cbccaa4c0aea7bcad4d051fe3fc35fb.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Fig 5**: Classification datasets created using Scikit-learn.'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Create a Dataset for Machine Learning](../Images/4ae9b5ba938bf061f1e4283446ba2eaa.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Fig 6**: Clustering datasets created using Scikit-learn.'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Create a Dataset for Machine Learning](../Images/71781aec9800e0991600e39354ddfef1.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Fig 7**: Non-linear datasets for testing kernel-based algorithms.'
  prefs: []
  type: TYPE_NORMAL
- en: Gaussian mixture models
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Gaussian mixture models (GMM) are fascinating objects to study. They are used
    heavily in the field of unsupervised learning and topic modeling for massive text
    processing/NLP tasks. Even autonomous driving and robotic navigation algorithms
    have many uses for them. With a minimal amount of code, one can create interesting
    datasets mimicking the GMM process of arbitrary shape and complexity.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some synthetic data examples of the same:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Create a Dataset for Machine Learning](../Images/3c27c81ddb6c3d4c05fb84651319988a.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Fig 8**: Gaussian mixture model datasets created synthetically.'
  prefs: []
  type: TYPE_NORMAL
- en: Dataset generation from symbolic expressions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Often, one may require a controllable way to generate ML datasets based on a
    well-defined function (involving linear, nonlinear, rational, or even transcendental
    terms).
  prefs: []
  type: TYPE_NORMAL
- en: For example, you may want to evaluate the efficacy of the various kernelized
    SVM classifiers on datasets with increasingly complex separators (linear to non-linear)
    or want to demonstrate the limitation of linear models for datasets generated
    by rational or transcendental functions. By mixing the power of random variate
    generation and symbolic expression manipulation libraries like **SymPy**, you
    can create interesting datasets corresponding to user-defined functions.
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Create a Dataset for Machine Learning](../Images/284c564918a244f2259388d0602b0b76.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Fig 9**: Symbolic function generated datasets for advanced ML algorithm testing.'
  prefs: []
  type: TYPE_NORMAL
- en: Time-series/anomaly data generation for industrial problems
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Time-series analysis has many rich applications in modern industrial settings
    where a multitude of sensors are creating a never-ending stream of digital data
    from machines, factories, operators, and business processes. Such **digital exhaust** is
    the core feature of the **Industry 4.0** revolution.
  prefs: []
  type: TYPE_NORMAL
- en: '**Anomaly detection** in these data streams is the bread and butter of all
    modern data analytics products, services, and startups. They are employing everything
    from tried and tested time-series algorithms to the latest neural-network-based
    sequence models. However, for in-house testing of these algorithms, sometimes
    it is necessary to create synthetic datasets mimicking the anomalies of various
    nature in a time series.'
  prefs: []
  type: TYPE_NORMAL
- en: This article goes deep into this idea and shows some examples: [**Create synthetic
    time-series with anomaly signatures in Python**](https://towardsdatascience.com/create-synthetic-time-series-with-anomaly-signatures-in-python-c0b80a6c093c)**.**
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Create a Dataset for Machine Learning](../Images/9931cb25ed02520c5e3410970e2cf11a.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Fig 10**: Core generative process for time-series datasets in industrial
    applications.'
  prefs: []
  type: TYPE_NORMAL
- en: One can generate anomalies of various scales,
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Create a Dataset for Machine Learning](../Images/793a8dfd9e7a0044456dd2370ae736d5.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Fig 11**: Time-series with anomalies of various scales.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Data drift** may occur in any direction with any scale. Data may change one
    or more of its statistical properties - mean or variance, for example. This should
    also be modeled and used for dataset generation.'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Create a Dataset for Machine Learning](../Images/26fdff2ecab8b0f8d5bc48fe386e8572.png)'
  prefs: []
  type: TYPE_IMG
- en: '![How to Create a Dataset for Machine Learning](../Images/0301826cc2056fc5bb4fe7a830886cc0.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Fig 12**: Time-series datasets with anomalies and data drift combined.'
  prefs: []
  type: TYPE_NORMAL
- en: Image Data Augmentation for ML
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There are many good image datasets already for basic deep learning model training
    and tuning. However, for specific tasks or application areas, ML engineers often
    need to start with a relatively small set of good-quality images and augment them
    using clever image processing techniques.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a blog discussing at length the [data augmentation tricks with image
    data](https://neptune.ai/blog/data-augmentation-in-python) as examples:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Basically, image datasets of various depth and complexity can be created from
    some seed, high-quality images using augmentation techniques:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Create a Dataset for Machine Learning](../Images/3832a50c73158c89e0f20cb36a38f4ab.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Fig 13**: Image data augmentation for creating rich and robust datasets for
    deep learning training.'
  prefs: []
  type: TYPE_NORMAL
- en: One can also experiment with various **noise channel additions** to augment
    the dataset so that the ML model performs well in noisy situations.
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Create a Dataset for Machine Learning](../Images/f3c3ce40ef8e72cdd55e22c34eda50bf.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Fig 14**: Image data augmentation with various noise channel additions.'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this article, we went over the essential motivations behind creating high-quality
    machine learning datasets and some desirable properties for such data. Business
    processes and scientific experiments, medical and social media history - these
    are, and, will remain the most trusted source for training ML algorithms with
    real-life data.
  prefs: []
  type: TYPE_NORMAL
- en: However, synthetic datasets are increasingly in demand for the power and flexibility
    they lend for evaluating and optimizing ML algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: We briefly touched upon a lot of tools, frameworks, and techniques that are
    being used to generate such datasets for ML and how they can be precisely tailored
    to the needs of algorithm development. This field will continue to grow in importance
    and can aid in the development and flourish of new and exciting ML algorithms,
    frameworks, and techniques.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Kevin Vu](https://www.kdnuggets.com/author/kevin-vu)** manages Exxact Corp
    blog and works with many of its talented authors who write about different aspects
    of Deep Learning.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://exxactcorp.com/blog/Deep-Learning/how-to-create-a-dataset-for-machine-learning).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[How to Correctly Select a Sample From a Huge Dataset in Machine Learning](https://www.kdnuggets.com/2019/05/sample-huge-dataset-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Unsupervised Disentangled Representation Learning in Class…](https://www.kdnuggets.com/2023/01/unsupervised-disentangled-representation-learning-class-imbalanced-dataset-elastic-infogan.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Choosing the Right Clustering Algorithm for Your Dataset](https://www.kdnuggets.com/2019/10/right-clustering-algorithm.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Generate Synthetic Tabular Dataset](https://www.kdnuggets.com/2022/03/generate-tabular-synthetic-dataset.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ChatGPT-Powered Data Exploration: Unlock Hidden Insights in Your Dataset](https://www.kdnuggets.com/2023/07/chatgptpowered-data-exploration-unlock-hidden-insights-dataset.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Handle Outliers in Dataset with Pandas](https://www.kdnuggets.com/how-to-handle-outliers-in-dataset-with-pandas)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
