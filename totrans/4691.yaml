- en: A Beginner’s Guide to Linear Regression in Python with Scikit-Learn
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/03/beginners-guide-linear-regression-python-scikit-learn.html/2](https://www.kdnuggets.com/2019/03/beginners-guide-linear-regression-python-scikit-learn.html/2)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](/2019/03/beginners-guide-linear-regression-python-scikit-learn.html?page=2#comments)'
  prefs: []
  type: TYPE_IMG
- en: Multiple Linear Regression
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Figure](../Images/4f15f7ec4a039d35457676f74b14112c.png)'
  prefs: []
  type: TYPE_IMG
- en: '[source](https://hackernoon.com/an-intuitive-perspective-to-linear-regression-7dc566b2c14c)'
  prefs: []
  type: TYPE_NORMAL
- en: We just performed linear regression in the above section involving two variables.
    Almost all the real-world problems that you are going to encounter will have more
    than two variables. Linear regression involving multiple variables is called “multiple
    linear regression” or multivariate linear regression. The steps to perform multiple
    linear regression are almost similar to that of simple linear regression. The
    difference lies in the evaluation. You can use it to find out which factor has
    the highest impact on the predicted output and how different variables relate
    to each other.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, I have downloaded red wine quality dataset. The dataset related
    to red variants of the Portuguese “[Vinho Verde](https://en.wikipedia.org/wiki/Vinho_Verde)”
    wine. Due to privacy and logistic issues, only physicochemical (inputs) and sensory
    (the output) variables are available (e.g. there is no data about grape types,
    wine brand, wine selling price, etc.).
  prefs: []
  type: TYPE_NORMAL
- en: You can download the dataset from [here](https://drive.google.com/open?id=195gkZ5cTZL11L308MHc7EyBbAoiB4xqf).
  prefs: []
  type: TYPE_NORMAL
- en: We will take into account various input features like fixed acidity, volatile
    acidity, citric acid, residual sugar, chlorides, free sulfur dioxide, total sulfur
    dioxide, density, pH, sulphates, alcohol. Based on these features we will predict
    the quality of the wine.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s start our coding :'
  prefs: []
  type: TYPE_NORMAL
- en: 'import all the required libraries :'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The following command imports the dataset from the file you downloaded via
    the link above:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Let’s explore the data a little bit by checking the number of rows and columns
    in it.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: It will give (1599, 12) as output which means our dataset has 1599 rows and
    12 columns.
  prefs: []
  type: TYPE_NORMAL
- en: 'To see the statistical details of the dataset, we can use `describe()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/a825b7f56a565fe80e2b6edb8e822331.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let us clean our data little bit, So first check which are the columns the
    contains NaN values in it :'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Once the above code is executed, all the columns should give False, In case
    for any column you find True result, then remove all the null values from that
    column using below code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Our next step is to divide the data into “attributes” and “labels”. X variable
    contains all the attributes/features and y variable contains labels.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Let's check the average value of the “quality” column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![Figure](../Images/d2a4e1ae90c77b97c853af7273e45f39.png)'
  prefs: []
  type: TYPE_IMG
- en: Average value of the quality of the wine.
  prefs: []
  type: TYPE_NORMAL
- en: As we can observe that most of the time the value is either 5 or 6.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we split 80% of the data to training set while 20% of the data to test
    set using below code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Now lets train our model.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'As said earlier, in the case of multivariable linear regression, the regression
    model has to find the most optimal coefficients for all the attributes. To see
    what coefficients our regression model has chosen, execute the following script:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'it should give output something like :'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/11216eb6645322e26e5e34683b070353.png)'
  prefs: []
  type: TYPE_IMG
- en: '*This means that for a unit increase in “density”, there is a decrease of 31.51
    units in the quality of the wine. Similarly, a unit decrease in “Chlorides“ results
    in an increase of 1.87 units in the quality of the wine. We can see that the rest
    of the features have a very little effect on the quality of the wine.*'
  prefs: []
  type: TYPE_NORMAL
- en: Now let's do prediction on test data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Check the difference between the actual value and predicted value.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '![Figure](../Images/9e88cabf6460129f7099a75310035b09.png)'
  prefs: []
  type: TYPE_IMG
- en: Comparison between Actual and Predicted value
  prefs: []
  type: TYPE_NORMAL
- en: Now let's plot the comparison of Actual and Predicted values
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '![Figure](../Images/77e0fc97f77526698c8b0b2ce15a0cff.png)'
  prefs: []
  type: TYPE_IMG
- en: Bar graph showing the difference between Actual and predicted value
  prefs: []
  type: TYPE_NORMAL
- en: As we can observe here that our model has returned pretty good prediction results.
  prefs: []
  type: TYPE_NORMAL
- en: 'The final step is to evaluate the performance of the algorithm. We’ll do this
    by finding the values for [MAE](https://en.wikipedia.org/wiki/Mean_absolute_error), [MSE](https://en.wikipedia.org/wiki/Mean_squared_error),
    and [RMSE](https://en.wikipedia.org/wiki/Root-mean-square_deviation). Execute
    the following script:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'The output looks like :'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: You can see that the value of root mean squared error is 0.62, which is slightly
    greater than 10% of the mean value of the gas consumption in all states which
    is 5.63\. This means that our algorithm was not very accurate but can still make
    reasonably good predictions.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many factors that may have contributed to this inaccuracy, for example :'
  prefs: []
  type: TYPE_NORMAL
- en: '**Need more data**: We need to have a huge amount of data to get the best possible
    prediction.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Bad assumptions**: We made the assumption that this data has a linear relationship,
    but that might not be the case. Visualizing the data may help you determine that.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Poor features**: The features we used may not have had a high enough correlation
    to the values we were trying to predict.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Conclusion**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this article, we studied the most fundamental machine learning algorithms
    i.e. linear regression. We implemented both simple linear regression and multiple
    linear regression with the help of the Scikit-Learn machine learning library.
  prefs: []
  type: TYPE_NORMAL
- en: I hope you guys have enjoyed the reading. Let me know your doubts/suggestions
    in the comment section.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading.
  prefs: []
  type: TYPE_NORMAL
- en: You can also reach me out in [**LinkedIn**](https://www.linkedin.com/in/nagesh-singh-chauhan-6936bb13b/).
  prefs: []
  type: TYPE_NORMAL
- en: Happy Learning !!!
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Nagesh Singh Chauhan](https://www.linkedin.com/in/nagesh-singh-chauhan-6936bb13b/)**
    is a Data Science enthusiast. Interested in Big Data, Python, Machine Learning.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/a-beginners-guide-to-linear-regression-in-python-with-scikit-learn-83a8f7ae2b4f).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Neural Networks with Numpy for Absolute Beginners — Part 2: Linear Regression](/2019/03/neural-networks-numpy-absolute-beginners-part-2-linear-regression.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[An Introduction to Scikit Learn: The Gold Standard of Python Machine Learning](/2019/02/introduction-scikit-learn-gold-standard-python-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python Data Science for Beginners](/2019/02/python-data-science-beginners.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Making Predictions: A Beginner''s Guide to Linear Regression in Python](https://www.kdnuggets.com/2023/06/making-predictions-beginner-guide-linear-regression-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Comparing Linear and Logistic Regression](https://www.kdnuggets.com/2022/11/comparing-linear-logistic-regression.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[3 Reasons Why You Should Use Linear Regression Models Instead of…](https://www.kdnuggets.com/2021/08/3-reasons-linear-regression-instead-neural-networks.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Linear vs Logistic Regression: A Succinct Explanation](https://www.kdnuggets.com/2022/03/linear-logistic-regression-succinct-explanation.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News 22:n12, March 23: Best Data Science Books for…](https://www.kdnuggets.com/2022/n12.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Linear Regression for Data Science](https://www.kdnuggets.com/2022/07/linear-regression-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
