- en: Announcing PyCaret 1.0.0
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 宣布 PyCaret 1.0.0
- en: 原文：[https://www.kdnuggets.com/2020/04/announcing-pycaret.html](https://www.kdnuggets.com/2020/04/announcing-pycaret.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/04/announcing-pycaret.html](https://www.kdnuggets.com/2020/04/announcing-pycaret.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Moez Ali](https://www.linkedin.com/in/profile-moez/), Founder & Author
    of PyCaret**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Moez Ali](https://www.linkedin.com/in/profile-moez/)，PyCaret 创始人及作者**'
- en: '![Figure](../Images/d5695b72c8bf6d9e92ebd41fd32e6ad5.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/d5695b72c8bf6d9e92ebd41fd32e6ad5.png)'
- en: We are excited to announce [PyCaret](https://www.pycaret.org/), an open source
    machine learning library in Python to train and deploy supervised and unsupervised
    machine learning models in a **low-code** environment. PyCaret allows you to go
    from preparing data to deploying models within seconds from your choice of notebook
    environment.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们很高兴地宣布 [PyCaret](https://www.pycaret.org/)，一个开源的 Python 机器学习库，用于在**低代码**环境中训练和部署监督学习和无监督学习模型。PyCaret
    让你可以在选择的笔记本环境中，从准备数据到部署模型，只需几秒钟。
- en: In comparison with the other open source machine learning libraries, PyCaret
    is an alternate low-code library that can be used to replace hundreds of lines
    of code with few words only. This makes experiments exponentially fast and efficient.
    PyCaret is essentially a Python wrapper around several machine learning libraries
    and frameworks such as [scikit-learn](https://scikit-learn.org/stable/), [XGBoost](https://xgboost.readthedocs.io/en/latest/), [Microsoft
    LightGBM](https://github.com/microsoft/LightGBM), [spaCy](https://spacy.io/),
    and many more.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他开源机器学习库相比，PyCaret 是一个替代的低代码库，可以用少量代码替代数百行代码。这使得实验速度快且高效。PyCaret 实质上是几个机器学习库和框架的
    Python 包装器，如 [scikit-learn](https://scikit-learn.org/stable/)、 [XGBoost](https://xgboost.readthedocs.io/en/latest/)、
    [Microsoft LightGBM](https://github.com/microsoft/LightGBM)、 [spaCy](https://spacy.io/)
    等。
- en: PyCaret is **simple and** **easy to use**. All the operations performed in PyCaret
    are sequentially stored in a **Pipeline** that is fully orchestrated for **deployment. **Whether
    its imputing missing values, transforming categorical data, feature engineering
    or even hyperparameter tuning, PyCaret automates all of it. To learn more about
    PyCaret, watch this 1-minute video.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 是**简单且** **易于使用**的。PyCaret 中执行的所有操作都顺序存储在一个**管道**中，该管道完全为**部署**而编排。无论是填补缺失值、转换分类数据、特征工程还是超参数调整，PyCaret
    都能自动完成。要了解更多关于 PyCaret 的信息，请观看这个 1 分钟的视频。
- en: '*PyCaret 1.0.0 Announcement — An open source, low-code machine learning library
    in Python*'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*PyCaret 1.0.0 发布公告 — 一个开源、低代码的 Python 机器学习库*'
- en: Getting Started with PyCaret
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 入门 PyCaret
- en: The first stable release of PyCaret version 1.0.0 can be installed using pip.
    Using the command line interface or notebook environment, run the below cell of
    code to install PyCaret.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 1.0.0 的第一个稳定版本可以使用 pip 安装。使用命令行界面或笔记本环境，运行以下代码单元以安装 PyCaret。
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you are using [Azure notebooks](https://notebooks.azure.com/) or [Google
    Colab](https://colab.research.google.com/), run the below cell of code to install
    PyCaret.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用 [Azure notebooks](https://notebooks.azure.com/) 或 [Google Colab](https://colab.research.google.com/)，请运行以下代码单元以安装
    PyCaret。
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: When you install PyCaret, all dependencies are installed automatically. [Click
    here](https://github.com/pycaret/pycaret/blob/master/requirements.txt) to see
    the list of complete dependencies.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当你安装 PyCaret 时，所有依赖项会自动安装。 [点击这里](https://github.com/pycaret/pycaret/blob/master/requirements.txt)
    查看完整依赖项列表。
- en: It cannot get easier than this ????
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 再简单不过了 ????
- en: '![](../Images/281184be59fe516ab9d2ea25a2038cfe.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/281184be59fe516ab9d2ea25a2038cfe.png)'
- en: ???? Step-by-Step Tutorial
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 分步教程
- en: 1\. Getting Data
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1\. 获取数据
- en: In this step-by-step tutorial, we will use **‘diabetes’ **dataset and the goal
    is to predict patient outcome (binary 1 or 0) based on several factors such as
    Blood Pressure, Insulin Level, Age etc. The dataset is available on PyCaret’s [github
    repository](https://github.com/pycaret/pycaret). Easiest way to import dataset
    directly from repository is by using **get_data** function from **pycaret.datasets** modules.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个分步教程中，我们将使用**‘diabetes’** 数据集，目标是根据血压、胰岛素水平、年龄等多个因素预测患者结果（0 或 1）。数据集可在 PyCaret
    的 [github 仓库](https://github.com/pycaret/pycaret) 中找到。直接从仓库导入数据集的最简单方法是使用来自**pycaret.datasets**模块的**get_data**函数。
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![Figure](../Images/69d8554216ad27728edbab2f59124a38.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/69d8554216ad27728edbab2f59124a38.png)'
- en: output from get_data
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 从 get_data 输出
- en: ???? PyCaret can work directly with **pandas** dataframe.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: ???? PyCaret 可以直接与**pandas** 数据框配合使用。
- en: 2\. Setting up Environment
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2\. 设置环境
- en: The first step of any machine learning experiment in PyCaret is setting up the
    environment by importing the required module and initializing **setup**( ). The
    module used in this example is [**pycaret.classification**](https://www.pycaret.org/classification)**.**
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 中任何机器学习实验的第一步是通过导入所需的模块并初始化**setup**( )来设置环境。此示例中使用的模块是 [**pycaret.classification**](https://www.pycaret.org/classification)**.**
- en: Once the module is imported, **setup() **is initialized by defining the dataframe
    (*‘diabetes’*) and the target variable (*‘Class variable’*).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦导入模块，**setup()**通过定义数据框（*‘diabetes’*）和目标变量（*‘Class variable’*）来初始化。
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/03de3665af1b0d82edba5d5ec7094136.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/03de3665af1b0d82edba5d5ec7094136.png)'
- en: All the preprocessing steps are applied within **setup(). **With over 20 features
    to prepare data for machine learning, PyCaret creates a transformation pipeline
    based on the parameters defined in *setup *function. It automatically orchestrates
    all dependencies in a **pipeline **so that you don’t have to manually manage the
    sequential execution of transformations on test or unseen dataset. PyCaret’s pipeline
    can easily be transferred across environments to run at scale or be deployed in
    production with ease. Below are preprocessing features available in PyCaret as
    of its first release.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 所有预处理步骤都在**setup()**中应用。PyCaret 提供了超过 20 个功能来准备机器学习数据，基于在*setup*函数中定义的参数创建转换管道。它自动协调所有依赖关系于**管道**中，因此您无需手动管理测试或未见数据集上的转换的顺序执行。PyCaret
    的管道可以轻松地在不同环境之间转移，以进行大规模运行或轻松部署到生产环境。以下是 PyCaret 在首次发布时提供的预处理功能。
- en: '![Figure](../Images/ce40ef0533556a53623bfb40d4e35371.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/ce40ef0533556a53623bfb40d4e35371.png)'
- en: Preprocessing capabilities of PyCaret
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 的预处理能力
- en: ???? Data Preprocessing steps that are compulsory for machine learning such
    as missing values imputation, categorical variable encoding, label encoding (converting
    yes or no into 1 or 0), and train-test-split are automatically performed when
    setup() is initialized. [Click here](https://www.pycaret.org/preprocessing) to
    learn more about PyCaret’s preprocessing abilities.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 数据预处理步骤，如缺失值填充、分类变量编码、标签编码（将是或否转换为 1 或 0）和训练-测试-拆分，在初始化 setup() 时会自动执行。 [点击这里](https://www.pycaret.org/preprocessing) 了解更多有关
    PyCaret 预处理能力的信息。
- en: 3\. Compare Models
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3\. 比较模型
- en: 'This is the first step recommended in supervised machine learning experiments
    ([classification](https://www.pycaret.org/classification) or [regression](https://www.pycaret.org/regression)).
    This function trains all the models in the model library and compares the common
    evaluation metrics using k-fold cross validation (by default 10 folds). The evaluation
    metrics used are:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在监督机器学习实验中（[分类](https://www.pycaret.org/classification) 或 [回归](https://www.pycaret.org/regression)）推荐的第一步。该函数训练模型库中的所有模型，并使用
    k 折交叉验证（默认 10 折）比较常见的评估指标。使用的评估指标有：
- en: '**For Classification: **Accuracy, AUC, Recall, Precision, F1, Kappa'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分类模型：**准确率、AUC、召回率、精确度、F1、Kappa'
- en: '**For Regression: **MAE, MSE, RMSE, R2, RMSLE, MAPE'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**回归模型：**MAE, MSE, RMSE, R2, RMSLE, MAPE'
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Figure](../Images/b84f31630820494c6f819a4c5fa9bb1a.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/b84f31630820494c6f819a4c5fa9bb1a.png)'
- en: Output from compare_models( ) function
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: compare_models() 函数的输出
- en: ???? Metrics are evaluated using 10-fold cross validation by default. It can
    be changed by changing the value of ***fold ***parameter.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，指标使用 10 折交叉验证进行评估。可以通过更改 ***fold ***参数的值来进行更改。
- en: ???? Table is sorted by ‘Accuracy’ (Highest to Lowest) value by default. It
    can be changed by changing the value of ***sort ***parameter.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，表格按‘Accuracy’（从高到低）值排序。可以通过更改 ***sort ***参数的值进行更改。
- en: 4\. Create Model
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4\. 创建模型
- en: Creating a model in any module of PyCaret is as simple as writing **create_model.**It
    takes only one parameter i.e. the model name passed as string input. This function
    returns a table with k-fold cross validated scores and a trained model object.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在 PyCaret 的任何模块中创建模型就像编写**create_model**一样简单。它只需要一个参数，即作为字符串输入传递的模型名称。该函数返回一个包含
    k 折交叉验证分数和一个训练过的模型对象的表格。
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/cc451b6f610de9677a4f128d99248f9a.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cc451b6f610de9677a4f128d99248f9a.png)'
- en: Variable ‘adaboost’ stores a trained model object returned by **create_model** function
    is a scikit-learn estimator. Original attributes of a trained object can be accessed
    by using *period ( . ) *after variable. See example below.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 变量 ‘adaboost’ 存储了由**create_model**函数返回的训练模型对象，这是一个 scikit-learn 估计器。可以通过在变量后使用*句点（
    . ）*来访问训练对象的原始属性。见下例。
- en: '![Figure](../Images/652cb76eb88499acb604ad3ffbb9356a.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/652cb76eb88499acb604ad3ffbb9356a.png)'
- en: Attributes of trained model object
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 训练模型对象的属性
- en: ???? PyCaret has over 60 open source ready-to-use algorithms. [Click here](https://www.pycaret.org/create-model) to
    see a complete list of estimators / models available in PyCaret.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: ???? PyCaret 提供了超过60种开源现成的算法。 [点击这里](https://www.pycaret.org/create-model) 查看
    PyCaret 中可用的所有估计器/模型的完整列表。
- en: 5\. Tune Model
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5\. 调整模型
- en: The **tune_model **function is used for automatically tuning hyperparameters
    of a machine learning model**. **PyCaret uses **random grid search** over a predefined
    search space. This function returns a table with k-fold cross validated scores
    and a trained model object.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**tune_model** 函数用于自动调整机器学习模型的超参数。PyCaret 使用**随机网格搜索**在预定义的搜索空间中进行。这一函数返回一个包含k折交叉验证分数和一个训练模型对象的表格。'
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/4401f8346cd3a468652477d3cded558d.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4401f8346cd3a468652477d3cded558d.png)'
- en: ???? The **tune_model **function in unsupervised modules such as [pycaret.nlp](https://www.pycaret.org/nlp),
    [pycaret.clustering](https://www.pycaret.org/clustering) and [pycaret.anomaly](https://www.pycaret.org/anomaly)
    can be used in conjunction with supervised modules. For example, PyCaret’s NLP
    module can be used to tune *number of topics* parameter by evaluating an objective
    / cost function from a supervised ML model such as ‘Accuracy’ or ‘R2’.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: ???? **tune_model** 函数在无监督模块如 [pycaret.nlp](https://www.pycaret.org/nlp)、[pycaret.clustering](https://www.pycaret.org/clustering)和 [pycaret.anomaly](https://www.pycaret.org/anomaly)中可以与监督模块一起使用。例如，PyCaret
    的 NLP 模块可以通过评估来自监督机器学习模型的目标/成本函数（如‘准确率’或‘R2’）来调整*主题数量*参数。
- en: 6\. Ensemble Model
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6\. 集成模型
- en: The **ensemble_model **function is used for ensembling trained models**. **It
    takes only one parameter i.e. a trained model object. This functions returns a
    table with k-fold cross validated scores and a trained model object.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**ensemble_model** 函数用于集成训练后的模型。它只接受一个参数，即训练模型对象。此函数返回一个包含k折交叉验证分数和一个训练模型对象的表格。'
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/e78e6fd84e7440fda219c5f02e040210.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e78e6fd84e7440fda219c5f02e040210.png)'
- en: ???? ‘Bagging’ method is used for ensembling by default which can be changed
    to ‘Boosting’ by using the ***method*** parameter within the ensemble_model function.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: ???? 默认使用‘Bagging’方法进行集成，通过在 ***method*** 参数中使用‘Boosting’可以进行更改。
- en: ???? PyCaret also provide [blend_models](https://www.pycaret.org/blend-models) and [stack_models](https://www.pycaret.org/stack-models) functionality
    to ensemble multiple trained models.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: ???? PyCaret 还提供了 [blend_models](https://www.pycaret.org/blend-models) 和 [stack_models](https://www.pycaret.org/stack-models) 功能，用于集成多个训练后的模型。
- en: 7\. Plot Model
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 7\. 绘制模型
- en: Performance evaluation and diagnostics of a trained machine learning model can
    be done using the **plot_model **function. It takes a trained model object and
    the type of plot as a string input within the **plot_model** function.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**plot_model** 函数可以对训练好的机器学习模型进行性能评估和诊断。它接受一个训练模型对象和类型为字符串的绘图类型作为输入。
- en: '[PRE8]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/b4de96982fd287baed656707dc6bc723.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b4de96982fd287baed656707dc6bc723.png)'
- en: '[Click here](https://www.pycaret.org/plot-model) to learn more about different
    visualization in PyCaret.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[点击这里](https://www.pycaret.org/plot-model) 了解更多关于 PyCaret 中不同可视化的信息。'
- en: Alternatively, you can use **evaluate_model **function to see plots *via *user
    interface within notebook.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以使用**evaluate_model** 函数通过用户界面在笔记本中查看图表。
- en: '[PRE9]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/4827a9f02455d3ac48897f23a5d416c6.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4827a9f02455d3ac48897f23a5d416c6.png)'
- en: ???? **plot_model** function in **pycaret.nlp **module can be used to visualize *text
    corpus* and *semantic topic models*. [Click here](https://pycaret.org/plot-model/#nlp) to
    learn more about it.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: ???? **plot_model** 函数在**pycaret.nlp** 模块中可用于可视化*文本语料库*和*语义主题模型*。 [点击这里](https://pycaret.org/plot-model/#nlp) 了解更多信息。
- en: 8\. Interpret Model
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 8\. 解释模型
- en: When the relationship in data is non-linear which is often the case in real
    life we invariably see tree-based models doing much better than simple gaussian
    models. However, this comes at the cost of losing interpretability as tree-based
    models do not provide simple coefficients like linear models. PyCaret implements [SHAP
    (SHapley Additive exPlanations](https://shap.readthedocs.io/en/latest/) using **interpret_model **function.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 当数据中的关系是非线性时，这在现实生活中很常见，我们通常会看到基于树的模型比简单的高斯模型表现更好。然而，这也意味着失去了可解释性，因为树基模型不像线性模型那样提供简单的系数。PyCaret
    使用 [SHAP (SHapley Additive exPlanations](https://shap.readthedocs.io/en/latest/) 函数来实现**interpret_model**。
- en: '[PRE10]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/b3c024ce6b78f85dc2fab05caf6404e5.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b3c024ce6b78f85dc2fab05caf6404e5.png)'
- en: Interpretation of a particular datapoint (also known as reason argument) in
    the test dataset can be evaluated using ‘reason’ plot. In the below example we
    are checking the first instance in our test dataset.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 测试数据集中某个数据点的解释（也称为 reason 参数）可以使用 'reason' 图进行评估。在下面的示例中，我们检查的是测试数据集中的第一个实例。
- en: '[PRE11]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](../Images/6624e6fbbdd6d27433c8b3330ac6c4af.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6624e6fbbdd6d27433c8b3330ac6c4af.png)'
- en: 9\. Predict Model
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9\. 预测模型
- en: So far the results we have seen are based on k-fold cross validation on training
    dataset only (70% by default). In order to see the predictions and performance
    of the model on the test / hold-out dataset, the **predict_model** function is
    used.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 迄今为止，我们看到的结果仅基于训练数据集上的 k-fold 交叉验证（默认为 70%）。为了查看模型在测试/持出数据集上的预测和性能，使用 **predict_model**
    函数。
- en: '[PRE12]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](../Images/6c071fc1878a395c3f089ddae6df59ce.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6c071fc1878a395c3f089ddae6df59ce.png)'
- en: '**predict_model **function is also used to predict unseen dataset. For now,
    we will use the same dataset we have used for training as a *proxy *for new unseen
    dataset. In practice, **predict_model **function would be used iteratively, every
    time with a new unseen dataset.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**predict_model** 函数也用于预测未见过的数据集。现在，我们将使用与训练相同的数据集作为 *代理* 来进行新未见数据集的预测。在实际应用中，**predict_model**
    函数会迭代使用，每次都使用一个新的未见数据集。'
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![](../Images/efaf146dd2eee5f303fc98fdc7a3740c.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/efaf146dd2eee5f303fc98fdc7a3740c.png)'
- en: ???? predict_model function can also predict a sequential chain of models which
    are created using [stack_models](https://www.pycaret.org/stack-models) and [create_stacknet](https://www.pycaret.org/classification/#create-stacknet) function.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**predict_model** 函数还可以预测使用 [stack_models](https://www.pycaret.org/stack-models)
    和 [create_stacknet](https://www.pycaret.org/classification/#create-stacknet) 函数创建的一系列模型。'
- en: ???? predict_model function can also predict directly from the model hosted
    on AWS S3 using [deploy_model](https://www.pycaret.org/deploy-model) function.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**predict_model** 函数还可以直接从托管在 AWS S3 上的模型进行预测，使用 [deploy_model](https://www.pycaret.org/deploy-model)
    函数。'
- en: 10\. Deploy Model
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 10\. 部署模型
- en: One way to utilize the trained models to generate predictions on an unseen dataset
    is by using the predict_model function in the same notebooks / IDE in which model
    was trained. However, making the prediction on an unseen dataset is an iterative
    process; depending on the use-case, the frequency of making predictions could
    be from real time predictions to batch predictions. PyCaret’s **deploy_model**
    function allows deploying the entire pipeline including trained model on cloud
    from notebook environment.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 利用训练好的模型对未见过的数据集生成预测的一种方法是使用与模型训练相同的笔记本/IDE中的 **predict_model** 函数。然而，对未见数据集进行预测是一个迭代过程；根据使用情况，预测的频率可以从实时预测到批量预测。PyCaret
    的 **deploy_model** 函数允许将包括训练模型在内的整个流程从笔记本环境部署到云端。
- en: '[PRE14]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 11\. Save Model / Save Experiment
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11\. 保存模型 / 保存实验
- en: Once training is completed the entire pipeline containing all preprocessing
    transformations and trained model object can be saved as a binary pickle file.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 训练完成后，包含所有预处理转换和训练模型对象的整个流程可以保存为二进制 pickle 文件。
- en: '[PRE15]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![](../Images/16134a3c93dac77298509564139b3838.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/16134a3c93dac77298509564139b3838.png)'
- en: You can also save the entire experiment consisting of all intermediary outputs
    as one binary file.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以将包括所有中间输出在内的整个实验保存为一个二进制文件。
- en: '[PRE16]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![](../Images/663506d04aa6b21b430d55879f76c7e3.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/663506d04aa6b21b430d55879f76c7e3.png)'
- en: ???? You can load saved model and saved experiment using **load_model **and **load_experiment **function
    available in all modules of PyCaret.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**load_model** 和 **load_experiment** 函数可以用于加载保存的模型和保存的实验，这些函数在 PyCaret 的所有模块中都可用。'
- en: 12\. Next Tutorial
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 12\. 下一个教程
- en: In the next tutorial, we will show how to consume a trained machine learning
    model in Power BI to generate batch predictions in a real production environment.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个教程中，我们将展示如何在 Power BI 中使用训练好的机器学习模型，以在实际生产环境中生成批量预测。
- en: 'Please also see our beginner level notebooks for these modules:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 请参见我们这些模块的初学者级别的笔记本：
- en: '[Regression](https://www.pycaret.org/reg101)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[回归](https://www.pycaret.org/reg101)'
- en: '[Clustering](https://www.pycaret.org/clu101)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[聚类](https://www.pycaret.org/clu101)'
- en: '[Anomaly Detection](https://www.pycaret.org/anom101)'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '[异常检测](https://www.pycaret.org/anom101)'
- en: '[Natural Language Processing](https://www.pycaret.org/nlp101)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[自然语言处理](https://www.pycaret.org/nlp101)'
- en: '[Association Rule Mining](https://www.pycaret.org/arul101)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[关联规则挖掘](https://www.pycaret.org/arul101)'
- en: What’s in the development pipeline?
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开发流程中有哪些内容？
- en: We are actively working on improving PyCaret. Our future development pipeline
    includes a new **Time Series Forecasting **module, Integration with **TensorFlow **and
    major improvements on scalability of PyCaret. If you would like to share your
    feedback and help us improve further, you may [fill this form](https://www.pycaret.org/feedback) on
    website or leave a comment on our [GitHub](https://www.github.com/pycaret/) or [LinkedIn](https://www.linkedin.com/company/pycaret/) page.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在积极改进 PyCaret。我们的未来开发计划包括一个新的 **时间序列预测** 模块、与 **TensorFlow** 的集成以及 PyCaret
    可扩展性的重大改进。如果你想分享你的反馈并帮助我们进一步改进，可以 [填写此表单](https://www.pycaret.org/feedback) 或在我们的
    [GitHub](https://www.github.com/pycaret/) 或 [LinkedIn](https://www.linkedin.com/company/pycaret/)
    页面留言。
- en: Want to learn about a specific module?
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 想了解特定模块吗？
- en: As of the first release 1.0.0, PyCaret has the following modules available for
    use. Click on the links below to see the documentation and working examples.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 自 1.0.0 版本首次发布以来，PyCaret 现已提供以下模块供使用。点击下面的链接查看文档和工作示例。
- en: '[Classification](https://www.pycaret.org/classification)'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '[分类](https://www.pycaret.org/classification)'
- en: '[Regression](https://www.pycaret.org/regression) [Clustering](https://www.pycaret.org/clustering)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[回归分析](https://www.pycaret.org/regression) [聚类](https://www.pycaret.org/clustering)'
- en: '[Anomaly Detection](https://www.pycaret.org/anomaly-detection) [Natural Language
    Processing](https://www.pycaret.org/nlp)'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '[异常检测](https://www.pycaret.org/anomaly-detection) [自然语言处理](https://www.pycaret.org/nlp)'
- en: '[Association Rule Mining](https://www.pycaret.org/association-rules)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '[关联规则挖掘](https://www.pycaret.org/association-rules)'
- en: Important Links
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重要链接
- en: '[User Guide / Documentation](https://www.pycaret.org/guide)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[用户指南 / 文档](https://www.pycaret.org/guide)'
- en: '[Github Repository](https://www.github.com/pycaret/pycaret)'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '[Github 仓库](https://www.github.com/pycaret/pycaret)'
- en: '[Install PyCaret](https://www.pycaret.org/install)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[安装 PyCaret](https://www.pycaret.org/install)'
- en: '[Notebook Tutorials](https://www.pycaret.org/tutorial)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '[Notebook 教程](https://www.pycaret.org/tutorial)'
- en: '[Contribute in PyCaret](https://www.pycaret.org/contribute)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 PyCaret 中贡献](https://www.pycaret.org/contribute)'
- en: Give us ⭐️ on our github repo if you like PyCaret.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢 PyCaret，请在我们的 GitHub 仓库上给我们 ⭐️。
- en: To hear more about PyCaret follow us on [LinkedIn](https://www.linkedin.com/company/pycaret/) and [Youtube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g).
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 想了解更多 PyCaret 的信息，请关注我们的 [LinkedIn](https://www.linkedin.com/company/pycaret/)
    和 [Youtube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g)。
- en: '**Bio: [Moez Ali](https://www.linkedin.com/in/profile-moez/)** is a Data Scientist,
    and is Founder & Author of PyCaret.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '**Bio: [Moez Ali](https://www.linkedin.com/in/profile-moez/)** 是一名数据科学家，也是
    PyCaret 的创始人和作者。'
- en: '[Original](https://towardsdatascience.com/announcing-pycaret-an-open-source-low-code-machine-learning-library-in-python-4a1f1aad8d46).
    Reposted with permission.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/announcing-pycaret-an-open-source-low-code-machine-learning-library-in-python-4a1f1aad8d46)。经许可转载。'
- en: '**Related:**'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[A Key Missing Part of the Machine Learning Stack](/2020/04/missing-part-machine-learning-stack.html)'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[机器学习堆栈中的一个关键缺失部分](/2020/04/missing-part-machine-learning-stack.html)'
- en: '[Sharing your machine learning models through a common API](/2020/02/sharing-machine-learning-models-common-api.html)'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通过公共 API 共享你的机器学习模型](/2020/02/sharing-machine-learning-models-common-api.html)'
- en: '[Build PyTorch Models Easily Using torchlayers](/2020/04/pytorch-models-torchlayers.html)'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[轻松使用 torchlayers 构建 PyTorch 模型](/2020/04/pytorch-models-torchlayers.html)'
- en: '* * *'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你组织的 IT 需求'
- en: '* * *'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Announcing PyCaret 3.0: Open-source, Low-code Machine Learning in Python](https://www.kdnuggets.com/2023/03/announcing-pycaret-30-opensource-lowcode-machine-learning-python.html)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[宣布 PyCaret 3.0：开源、低代码 Python 机器学习](https://www.kdnuggets.com/2023/03/announcing-pycaret-30-opensource-lowcode-machine-learning-python.html)'
- en: '[Announcing a Blog Writing Contest, Winner Gets an NVIDIA GPU!](https://www.kdnuggets.com/2022/11/blog-writing-contest-nvidia-gpu.html)'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[宣布博客写作比赛，获胜者将获得 NVIDIA GPU！](https://www.kdnuggets.com/2022/11/blog-writing-contest-nvidia-gpu.html)'
- en: '[Introduction to Binary Classification with PyCaret](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 进行二分类介绍](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
- en: '[Introduction to Clustering in Python with PyCaret](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 进行 Python 聚类介绍](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)'
- en: '[Getting Started with PyCaret](https://www.kdnuggets.com/2022/11/getting-started-pycaret.html)'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyCaret 入门指南](https://www.kdnuggets.com/2022/11/getting-started-pycaret.html)'
