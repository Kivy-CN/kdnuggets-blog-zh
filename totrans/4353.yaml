- en: 10 Python Skills They Don’t Teach in Bootcamp
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/12/10-python-skills-dont-teach-bootcamp.html](https://www.kdnuggets.com/2020/12/10-python-skills-dont-teach-bootcamp.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)![Figure](../Images/3d7f5b23b52139faf90e6068dd2fd7cb.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Sandy Torchon](https://www.pexels.com/@sandy-torchon-2229511?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels) on [Pexels](https://www.pexels.com/photo/people-riding-the-roller-coaster-3973555/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels)
  prefs: []
  type: TYPE_NORMAL
- en: Data science bootcamp is a ton of fun, but they don’t have time to teach you
    everything.
  prefs: []
  type: TYPE_NORMAL
- en: The bootcamp experience is like showing up at a theme park. (Except some of
    the strangers there will become your best friends.) When the ride kicks in, it
    demands total concentration. Between bouts of intensity, you’ll have the chance
    to take a breath — trading stories, recommendations, and ideas.
  prefs: []
  type: TYPE_NORMAL
- en: Recapture the thrill of learning new things with this collection of 10 Python
    skills they don’t teach you in bootcamp.
  prefs: []
  type: TYPE_NORMAL
- en: '#10 — Set DataFrame display options'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'It’s straightforward to change the way pandas DataFrames are displayed in a
    Jupyter Notebook. I typically include this code in the same cell as my import
    statements:'
  prefs: []
  type: TYPE_NORMAL
- en: With these settings, I can fully read cells that may contain a lot of text.
    I won’t have to worry about overly long dataframes, but I can scroll to the right
    and left to my heart’s content.
  prefs: []
  type: TYPE_NORMAL
- en: Play around with these options and find what works for you. For more, you can
    check out this aspect of the pandas documentation [here](https://pandas.pydata.org/pandas-docs/stable/user_guide/options.html).
  prefs: []
  type: TYPE_NORMAL
- en: '#9 — Change how pandas displays numbers'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you want to alter how numbers are shown within DataFrames, use these handy
    options to round trailing decimal numbers.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'This second option also provides the functionality of comma separators between
    three digits of larger numbers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '#8— Import Excel workbook and append sheet name'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you’re reading in a workbook with multiple sheets, you can pull them all
    into one dataframe using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[This trick works](https://pbpython.com/pandas-excel-tabs.html) when your data
    uses all the same headers and there’s no additional info to be gained from the
    sheet name.'
  prefs: []
  type: TYPE_NORMAL
- en: Alternatively, if you want to read in the sheets and retain some info from the
    sheet name, you can use this function below.
  prefs: []
  type: TYPE_NORMAL
- en: On line 15, pandas creates a new column (‘sheet’) containing the last word of
    the sheet name as its value. If the sheets in Ticket_Sales_Total.xlsx are named *Ticket
    Sales 2017*, *Ticket Sales 2018, *and* Ticket Sales 2019*, then the read_excel_sheets()
    function will append each row with the relevant year from the sheet name.
  prefs: []
  type: TYPE_NORMAL
- en: '*Thanks *[*Colin Copland*](https://www.caktusgroup.com/blog/2019/08/13/import-multiple-excel-sheets-pandas/)* for
    this tip!*'
  prefs: []
  type: TYPE_NORMAL
- en: '#7— Check a random selection of pandas rows'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Rather than looking at just the `.head()` or `.tail()` of a dataframe, you
    can see a selection of random rows with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This is useful because in a sorted dataframe, anomalous records may fall into
    the head or tail, contributing to a distorted perspective while [conducting EDA](https://towardsdatascience.com/10-underrated-python-skills-dfdff5741fdf).
  prefs: []
  type: TYPE_NORMAL
- en: 'For a sample project with pandas, check out:'
  prefs: []
  type: TYPE_NORMAL
- en: '[**Named Entity Recognition for Clinical Text**](https://medium.com/atlas-research/ner-for-clinical-text-7c73caddd180)'
  prefs: []
  type: TYPE_NORMAL
- en: Use pandas to reformat the 2011 i2b2 dataset into CoNLL format for natural language
    processing (NLP).
  prefs: []
  type: TYPE_NORMAL
- en: '#6— Leverage Predictive Power Score instead of correlation'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The [Predictive Power Score](https://github.com/8080labs/ppscore) was developed
    by [Florian Wetschoreck](https://medium.com/u/6ed760f28120?source=post_page-----419e5e4c4d66--------------------------------) and
    the team at [8080 Labs](https://8080labs.com/) in order to improve upon correlation
    metrics.
  prefs: []
  type: TYPE_NORMAL
- en: '**Correlation is limited** because it will miss *non-linear* relationships
    (for example, a quadratic relationship charting daily temperature and theme park
    ticket sales, a step function that represents the ticket price of an amusement
    against the number of people waiting in line, or the gaussian function used at
    the “Guess Your Weight” carnival game). Any relationships related to *categorical* variables
    will also be missed by a correlation matrix.'
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, correlation lacks the capability to provide information about *asymmetry* of
    a relationship. For example, knowing a customer’s favorite part of the park might
    not predict their favorite ride, but knowing their favorite ride would have much
    stronger predictive power for evaluating their favorite part of the park.
  prefs: []
  type: TYPE_NORMAL
- en: By contrast, the Predictive Power Score can detect non-linear effects, automatically
    encodes categorical variables, and quantifies asymmetry. It computes predictive
    relationships between pairs of columns and provides a score ranging from 0 to
    1.
  prefs: []
  type: TYPE_NORMAL
- en: To use, simply `import ppscore as pps` and call `pps.matrix(df)`.
  prefs: []
  type: TYPE_NORMAL
- en: '[**The Best Data Science Certification You’ve Never Heard Of**](https://towardsdatascience.com/best-data-science-certification-4f221ac3dbe3)'
  prefs: []
  type: TYPE_NORMAL
- en: A practical guide to the most valuable training in data strategy.
  prefs: []
  type: TYPE_NORMAL
- en: 5— Create a package
  prefs:
  - PREF_H3
  - PREF_H1
  type: TYPE_NORMAL
- en: Modules help to compartmentalize reusable code, such as Python functions, variables,
    and classes. Getting organized in this way can make code easier to understand
    and use.
  prefs: []
  type: TYPE_NORMAL
- en: To me, this is the biggest productivity booster for data scientists. It enables
    you to work faster and make less mistakes. Plus, by writing packages, you also
    improve your coding skills. — [Adam Votava](https://medium.com/u/4953633c3102?source=post_page-----419e5e4c4d66--------------------------------)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'A package will contain one or more relevant modules. We can create a package
    named mythemepark, using the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Step 1 — Create a new folder named MyThemePark.
  prefs: []
  type: TYPE_NORMAL
- en: Step 2 — Inside MyThemepark, create a subfolder with the name mythemepark.
  prefs: []
  type: TYPE_NORMAL
- en: Step 3— Using a Python IDE like [atom](https://atom.io/), create modules greet_visitors.py
    (which will provide code for welcoming visitors as they enter the park), functions.py
    (which provides code to operate various rides and games), and classes.py (which
    will provide the templates from which we can instantiate new objects such as amusements,
    shops, promotions, etc.)
  prefs: []
  type: TYPE_NORMAL
- en: 'Notes:'
  prefs: []
  type: TYPE_NORMAL
- en: Make sure you’re using these [PEP8 conventions for package and module names](https://www.python.org/dev/peps/pep-0008/#package-and-module-names)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A package used to be required to have an __init__.py file, but with the introduction
    of [namespace packages](https://www.python.org/dev/peps/pep-0420/#rationale),
    this is no longer the case.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#4— Check size of packages'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: After pip installing all the dependencies for the libraries required to run
    your theme park, it’s possible your SSD may be a bit cluttered. Checking the size
    of installed package will help you understand which packages are taking up the
    most space. From here, you can make choices about which packages “spark joy,”
    and proceed to [KonMari](https://konmari.com/) appropriately.
  prefs: []
  type: TYPE_NORMAL
- en: 'To find the path to installed packages on your Linux machine, type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'This will return path/to/all/packages. Something like: /Users/yourname/opt/anaconda3/lib/python3.7/site-packages'
  prefs: []
  type: TYPE_NORMAL
- en: 'Insert that file path into the command below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: where `du` reports file system disk space usage.
  prefs: []
  type: TYPE_NORMAL
- en: This code will output the size of each package. The final line of output will
    contain the size of all packages.
  prefs: []
  type: TYPE_NORMAL
- en: '[**10 Underrated Python Skills**](https://towardsdatascience.com/10-underrated-python-skills-dfdff5741fdf)'
  prefs: []
  type: TYPE_NORMAL
- en: Up your Data Science game with these tips for improving your Python coding for
    better EDA, target analysis, feature…
  prefs: []
  type: TYPE_NORMAL
- en: '#3 — Check memory usage'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'As with optimizing your workspace, it may also be useful to examine the [memory
    usage of code components](https://stackoverflow.com/questions/40993626/list-memory-usage-in-ipython-and-jupyter).
    You can do this using Python’s [sys.getsizeof](https://docs.python.org/3/library/sys.html#sys.getsizeof) method
    by implementing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '#2— Advance your command line tools'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Click](https://click.palletsprojects.com/en/7.x/) is a command line tool for
    Python that enables you to create intuitive programs and interfaces for the bash
    shell. Click supports options dialogues, user prompts, requests for confirmation,
    values from environment variables, and more.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s an example script that could be used to request a password from a ride
    operator:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Will output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '#1 — Check everything for PEP8 compliance'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The [nblint package](https://github.com/alexandercbooth/nblint) allows you to
    run the pycodestyle engine within Jupyter Notebook. This will check your code
    (i.e. linting) with the pycodestyle engine.
  prefs: []
  type: TYPE_NORMAL
- en: Linting highlights any syntactical or stylistic problems in your Python code,
    making it less error prone and more readable to your colleagues. Linting tools
    were first introduced by frustrated debuggers in 1978, and the practice does indeed
    get its name from the act of removing small bits of stray fabric from your clothes
    coming out of the dryer.
  prefs: []
  type: TYPE_NORMAL
- en: 'Bonus: Clean the conda cache'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: First, a quick note about the difference between pip and conda. [pip](https://pip.pypa.io/en/stable/) is
    the Python Packaging Authority’s recommended tool for installing packages from
    the Python Package Index, [PyPI](https://pypi.org/). [conda](https://conda.io/docs/) is
    a cross-platform package and environment manager from [Anaconda](https://repo.anaconda.com/).
  prefs: []
  type: TYPE_NORMAL
- en: Generally speaking, it is a bad idea to mix pip and conda package managers.
    This is because the two managers don’t speak to each other — this can create package
    conflicts. Consider exclusively using pip [within virtual environments](https://towardsdatascience.com/10-underrated-python-skills-dfdff5741fdf) unless
    you are ready to commit to conda.
  prefs: []
  type: TYPE_NORMAL
- en: 'We’ve already covered how to clean up packages you’ve pip installed — here
    are instructions for removing conda installed packages. If you’ve been using the
    conda package manager, you can free up space by removing unused packages and caches
    using this code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Summary
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'One more time, here are the ten tips we’ve covered in this article:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Set DataFrame display options (#10)](https://towardsdatascience.com/10-python-skills-419e5e4c4d66#9907)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Change how pandas displays numbers (#9)](https://towardsdatascience.com/10-python-skills-419e5e4c4d66#c5b0)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Import Excel workbook and append sheet name (#8)](https://towardsdatascience.com/10-python-skills-419e5e4c4d66#1282)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Check a random selection of pandas rows (#7)](https://towardsdatascience.com/10-python-skills-419e5e4c4d66#3346)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Leverage Predictive Power Score instead of correlation (#6)](https://towardsdatascience.com/10-python-skills-419e5e4c4d66#c2df)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Create a package (#5)](https://towardsdatascience.com/10-python-skills-419e5e4c4d66#fb56)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Check size of packages (#4)](https://towardsdatascience.com/10-python-skills-419e5e4c4d66#531b)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Check memory usage (#3)](https://towardsdatascience.com/10-python-skills-419e5e4c4d66#5407)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Advance your command line tools (#2)](https://towardsdatascience.com/10-python-skills-419e5e4c4d66#35ba)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Check everything for PEP8 compliance (#1)](https://towardsdatascience.com/10-python-skills-419e5e4c4d66#4ec5)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Clean the conda cache](https://towardsdatascience.com/10-python-skills-419e5e4c4d66#9d53)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**If you enjoyed this article**, follow me on [Medium](https://medium.com/@nicolejaneway), [LinkedIn](http://www.linkedin.com/in/nicole-janeway-bills), [YouTube](https://www.youtube.com/channel/UCO6JE24WY82TKabcGI8mA0Q?view_as=subscriber),
    and [Twitter](https://twitter.com/Nicole_Janeway) for more ideas to advance your
    data science skills.'
  prefs: []
  type: TYPE_NORMAL
- en: Continue developing your skills
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[**10 Python Skills for Beginners**](https://towardsdatascience.com/10-python-skills-beginners-3066305f0d3c)'
  prefs: []
  type: TYPE_NORMAL
- en: Python is the fastest growing, most-beloved programming language. Get started
    with these Data Science tips.
  prefs: []
  type: TYPE_NORMAL
- en: '[**10 Underrated Python Skills**](https://towardsdatascience.com/10-underrated-python-skills-dfdff5741fdf)'
  prefs: []
  type: TYPE_NORMAL
- en: Up your Data Science game with these tips for improving your Python coding for
    better EDA, target analysis, feature…
  prefs: []
  type: TYPE_NORMAL
- en: '[**How to Ace the AWS Cloud Practitioner Certification with Minimal Effort**](https://nicolejaneway.medium.com/how-to-ace-the-aws-cloud-practitioner-certification-with-minimal-effort-39f10f43146)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Forecast: cloudy with a 100% chance of passing on your first try.'
  prefs: []
  type: TYPE_NORMAL
- en: '[**How to Future-Proof Your Data Science Project**](https://towardsdatascience.com/model-selection-and-deployment-cf754459f7ca)'
  prefs: []
  type: TYPE_NORMAL
- en: 5 critical elements of ML model selection & deployment
  prefs: []
  type: TYPE_NORMAL
- en: '[**Walkthrough: Mapping GIS Data in Python**](https://towardsdatascience.com/walkthrough-mapping-gis-data-in-python-92c77cd2b87a)'
  prefs: []
  type: TYPE_NORMAL
- en: Improve your understanding of geospatial information through GeoPandas DataFrames
    and Google Colab
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Nicole Janeway Bills](http://www.linkedin.com/in/nicole-janeway-bills)** is
    a machine learning engineer with experience in commercial and federal consulting.
    Proficient in Python, SQL, and Tableau, Nicole has business experience in natural
    language processing (NLP), cloud computing, statistical testing, pricing analysis,
    and ETL processes, and aims to use this background to connect data with business
    outcomes and continue to develop technical skillsets.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/10-python-skills-419e5e4c4d66). Reposted
    with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[10 Python Skills for Beginners](/2020/12/10-python-skills-beginners.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[10 Underrated Python Skills](/2020/10/10-underrated-python-skills.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Best Data Science Certification You’ve Never Heard Of](/2020/11/best-data-science-certification-never-heard.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[What are Large Language Models and How Do They Work?](https://www.kdnuggets.com/2023/05/large-language-models-work.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Are Foundation Models and How Do They Work?](https://www.kdnuggets.com/2023/05/foundation-models-work.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What are Vector Databases and Why Are They Important for LLMs?](https://www.kdnuggets.com/2023/06/vector-databases-important-llms.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Your Features Are Important? It Doesn’t Mean They Are Good](https://www.kdnuggets.com/your-features-are-important-it-doesnt-mean-they-are-good)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Which is Best: Data Science Bootcamp vs Degree vs Online Course](https://www.kdnuggets.com/2022/09/best-data-science-bootcamp-degree-online-course.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Free Full Stack LLM Bootcamp](https://www.kdnuggets.com/2023/06/free-full-stack-llm-bootcamp.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
