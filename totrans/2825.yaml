- en: Intro to Machine Learning and AI based on high school knowledge
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/02/intro-machine-learning-ai.html](https://www.kdnuggets.com/2020/02/intro-machine-learning-ai.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Today, Artificial Intelligence (AI) everywhere.
  prefs: []
  type: TYPE_NORMAL
- en: However, it is a complex topic to both teach and learn.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, I outline an approach where you could learn about Artificial
    Intelligence, Machine Learning(ML), and Deep Learning(DL) based on high school
    knowledge alone.  The later part of the article is based on simple high school
    math – which should be familiar at a GCSE level (to age 15 years). Even if the
    math is not familiar to you, you can still learn about machine learning and artificial
    intelligence from the first part of the article.
  prefs: []
  type: TYPE_NORMAL
- en: Background
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Any talk of AI often leads to ‘Terminator’ type discussions (Are robots going
    to take over humanity?). While the media gets excited about AI, the reality is
    more mundane. So, before we proceed, let's consider some definitions that we will
    adopt in this article.
  prefs: []
  type: TYPE_NORMAL
- en: '**Artificial intelligence:** refers to machines that can reason with some degree
    of autonomy'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**General Artificial Intelligence:** relates to machines that have almost complete
    autonomy. General artificial intelligence is indeed the stuff of science fiction
    (and hence not a focus of this article)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Narrow Artificial Intelligence:** refers to machines or systems that can
    learn a task in a specific context – for example – a robotic arm that learns how
    to pick and sort items on its own (without explicit training).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Machine Learning:** Has a formal definition. [Tom Mitchell](http://www.cs.cmu.edu/~tom/)
    defines Machine Learning as: *“The field of machine learning is concerned with the question of
    how to construct computer programs that automatically improve with experience*.”
    This definition is expressed as: “***A computer program is said to learn from
    experience (E) with respect to some class of tasks (T), and performance measure
    (P), if its performance at tasks in T, as measured by P, improves with experience
    (E).”.*** Machine Learning is used in a range of applications such as Spam Detection,
    Credit Card Fraud Detection, Customer Segmentation etc'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Deep Learning:** We define Deep Learning as a *“machine learning application
    with automatic feature detection.”* We explain this definition in more detail
    below.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is Learning?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let’s start with the question: “What is learning? (in context of machine learning)'
  prefs: []
  type: TYPE_NORMAL
- en: 'In Mitchell’s definition, we interpret the word **‘Learning’** as acquiring
    the ability to perform the task. For example, if we want a system to identify
    an object, then the ability to identify an object is the task.  To achieve this
    ability, we could take two opposite approaches:'
  prefs: []
  type: TYPE_NORMAL
- en: We could either explicitly write rules to identify specific objects OR
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We could program the system such that it learns (through the process of training)
    the ability to identify an object.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The former (**rule-based approach**) is not practically feasible because we
    would have to manually write down rules for all possible scenarios.  So, the other
    extreme is more viable. Instead of manually creating rules, we could find the
    rules from the data itself and then apply the rules to an unseen problem.  This
    idea of learning from a training dataset is the foundation of most machine learning
    approaches (**supervised learning**). The process of training involves presenting
    the system with a set of examples which represent a collection of features of
    interest. From these examples, the system creates a model – which in turn is used
    to identify an unseen object. A simplified definition of a model in this context
    is an algorithm (ex: classification algorithm) trained on a dataset.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider the example of predicting house prices. House prices can be influenced
    by many factors (**features**) such as the number of bedrooms, proximity to schools,
    proximity to public transport etc. Predicting the house price based on the features
    is the **outcome**. These features are inputs to the **supervised learning model**,
    which can predict the price of the house (outcome variable).  Types of Problems
    addressed by machine learning include:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Classification**: Data is assigned to a class – for example spam/no-spam
    or fraud/no-fraud etc.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Regression**: A value of data is predicted – for example predicting stock
    prices, house prices, etc.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, how do we know if the system can perform a given task? To test the
    performance of a model, we must evaluate its output using a quantitative measure
    specific to the task. For a classification task, the performance of the model
    could be measured by the accuracy of the classification.
  prefs: []
  type: TYPE_NORMAL
- en: Deep learning
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'So, how does this relate to Artificial Intelligence and Deep Learning?  Remember
    we characterised Deep learning as ‘Automatic feature detection.'' Let us reconsider
    the example of predicting house prices. To determine the features of this algorithm
    (ex: number of bedrooms, proximity to good schools, etc.), you need knowledge
    of the application (domain knowledge). For complex applications – ex in healthcare,
    genomics etc. domain knowledge can be hard and expensive to acquire.  Also, applications
    that use image, video, sequence, or audio data **use hierarchical features.**
     It is impractical for humans to detect these features.'
  prefs: []
  type: TYPE_NORMAL
- en: '*What if we could understand the structure and features of the data (i.e.,
    follow the underlying representation of the data without human intervention?).*'
  prefs: []
  type: TYPE_NORMAL
- en: This ability is achieved by a set of techniques in machine learning called **representation
    learning.** Representation learning is a set of methods that allows a machine
    to be fed with raw data and to automatically discover the representations needed
    for algorithms like classification.
  prefs: []
  type: TYPE_NORMAL
- en: '**Deep-learning methods can be classed as representation-learning** methods
    with multiple levels of representation. These layers start with the raw input,
    and each layer transforms the data into a higher-level representation – which
    acts as an input for the subsequent layer. For example, the lowest layer may detect
    pixels; the next higher layer may detect edges of an image from the pixels; the
    next layer may detect contours based on the edges, etc. Hence, each layer in the
    **neural network** builds on top of the representation from the previous layer.  
    Through many such simple transformations, the machine can learn complicated and
    hierarchical ideas. The higher-level representations of the neural network model
    can distinguish between minor variants of a concept, i.e., concepts that are similar
    but not the same. For example, the network can distinguish between wolves and
    ‘dogs which look like wolves’ (Huskies, Samoyeds and German shepherds).  The same
    technique can be applied to real problems like tumour detection and other data
    types – for example – face detection or genomic data.'
  prefs: []
  type: TYPE_NORMAL
- en: 'More generically, Deep Learning techniques are used to work **with problems
    that are not finite-domain**. For instance, chess is a finite-domain problem because
    there are only 64 squares in chess and each piece has a defined action. In contrast,
    recognising an image of a dog from a picture is easy for a child. But a computer
    cannot easily recognise pictures of dogs from an image of a dog.  Identifying
    pictures of dogs is not a finite-domain problem since there are many types of
    dogs in many different configurations in images (ex: with a collar, with their
    tail cropped etc.)'
  prefs: []
  type: TYPE_NORMAL
- en: And to wrap up this idea, artificial intelligence is based mainly on deep learning
    techniques.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/facf764953aca676aa130934997f0b78.png)'
  prefs: []
  type: TYPE_IMG
- en: Modelling as function estimation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We could now approach the problem based on basic math.
  prefs: []
  type: TYPE_NORMAL
- en: The process of modelling, which we introduced in the previous section, involves
    finding a function that represents the data (for example, a function to predict
    house prices). The function can be expressed as an equation and is used to make
    predictions on unknown data.  The process of **fitting a model** involves making
    the algorithm learn the relationship between predictors (features) and outcomes.
    Once the algorithm determines a **functional relationship** between the features
    and the outcome variables, it can predict the values of the outcome variable for
    unseen features. Hence, the best fitting algorithms have **parameters** that best
    depict the problem at hand and can also make predictions on unseen data points.
    The power of the model, of course, lies in making predictions on unseen data.
  prefs: []
  type: TYPE_NORMAL
- en: Modelling is an iterative process. It initially involves finding the trends
    and relationships between variables using a mechanism like a **scatter plot**.
    Some relationships are predictable; for example, age and experience are correlated.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/25b0ccedbe3f77ccec71ff4ecf235289.png)'
  prefs: []
  type: TYPE_IMG
- en: Linear Regression
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the simplest case, that function is linear as represented by a **linear relationship**
  prefs: []
  type: TYPE_NORMAL
- en: What is a Linear Relationship?
  prefs: []
  type: TYPE_NORMAL
- en: 'A linear relationship means that you can represent the relationship between
    two sets of variables with a straight line. A linear relationship can represent
    many phenomena. For example, the force involved in stretching a rubber band is
    a linear relationship because the greater the force results in proportionally
    more stretching of the rubber band. We can represent this relationship in the
    form of a linear equation in the form:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/08512677768a9e35c1ce21112bff56ad.png)'
  prefs: []
  type: TYPE_IMG
- en: where “m” is the slope of the line, “x” is any point (an input or x-value) on
    the line, and “c” is where the line crosses the y-axis.  In linear relationships,
    any given change in an **independent variable** produces a corresponding change
    in the **dependent variable**. Linear regression is used in predicting many problems
    like sales forecasting and analysing customer behaviour.
  prefs: []
  type: TYPE_NORMAL
- en: 'The relationship can be represented as below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f8592b5b238f475e4ade4a7b6b3451ff.png)'
  prefs: []
  type: TYPE_IMG
- en: Why start with Linear Regression?
  prefs: []
  type: TYPE_NORMAL
- en: Because it is an idea familiar to many even at high school levels, and it also
    allows us to extend our thinking to more complex ideas.  The process of fitting
    the model aims to find the optimal values of the parameters m and c. We identify
    a line that best fits the existing data points. Once we've fitted the model, we
    can use it to predict outcomes (y-axis) based on inputs (x-axis). Training of
    the model involves finding the parameters so that the model best fits the data.
    The line for which the total error between the predicted values and the observed
    values is minimum is called the best fit line or the **regression line**.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3410c1c4705c27e2be7e648db3e59668.png)'
  prefs: []
  type: TYPE_IMG
- en: In **Ordinary Least Squares (OLS) Linear Regression** as described above, our
    goal is to find the line (or hyperplane) that minimises the vertical offsets.
    Or, in other words, we define the best-fitting line as the line that minimises
    the **sum of squared errors (SSE)**.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/63f6051a6f47d45d5b24ef40525d14d1.png)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure: Ordinary Least Square Regression. [Image source](https://sebastianraschka.com/faq/docs/closed-form-vs-gd.html).*'
  prefs: []
  type: TYPE_NORMAL
- en: In this case, the total error to be minimised is
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/dbd2e470d52d62a3f01ff41ffdf1d492.png)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure: sum of square errors.*'
  prefs: []
  type: TYPE_NORMAL
- en: The same idea can be expanded to multiple features. In fact, for the house prices
    example, we are already using multiple features (x values) to predict an outcome
    (y value), i.e. the house price. So, instead of y = mx +c, the equation becomes
    of the form
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/45febb8f6c22ab66feac5d313466e4c0.png)'
  prefs: []
  type: TYPE_IMG
- en: So, the basic GCSE level maths can be used to understand the fundamentals of
    building and training models.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In this article, we saw how you could get started with machine learning and
    deep learning using basic high school knowledge. The article is based on a forthcoming
    book, and we plan to share free copies with a limited number of UK teachers. I
    am the course director for the [Artificial intelligence: Cloud and Edge implementations
    course at the University of Oxford](about:blank), and if you are a teacher and
    interested in these ideas, please [connect with me on LinkedIn](https://www.linkedin.com/in/ajitjaokar/)
    referring to this article.  The views expressed in this article are his own and
    do not belong to any organisation I am associated with.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Introduction to Artificial Neural Networks](https://www.kdnuggets.com/2019/10/introduction-artificial-neural-networks.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Beginner Friendly Steps to Learn Machine Learning and Data Science with
    Python](https://www.kdnuggets.com/2019/09/5-beginner-friendly-steps-learn-machine-learning-data-science-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Beginner’s Guide to Linear Regression in Python with Scikit-Learn](https://www.kdnuggets.com/2019/03/beginners-guide-linear-regression-python-scikit-learn.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Is Domain Knowledge Important for Machine Learning?](https://www.kdnuggets.com/2022/07/domain-knowledge-important-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News, August 3: 10 Most Used Tableau Functions • Is…](https://www.kdnuggets.com/2022/n31.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[An Overview of Mercury: Creating Data Science Portfolio and…](https://www.kdnuggets.com/2022/05/overview-mercury-creating-data-science-portfolio-notebook-based-webapps.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets™ News 22:n04, Jan 26: The High Paying Side Hustles…](https://www.kdnuggets.com/2022/n04.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[High-Fidelity Synthetic Data for Data Engineers and Data Scientists Alike](https://www.kdnuggets.com/2022/tonic-high-fidelity-synthetic-data-engineers-scientists-alike.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Most Popular Intro to Programming Course From Harvard is Free!](https://www.kdnuggets.com/2022/03/popular-intro-programming-course-harvard-free.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
