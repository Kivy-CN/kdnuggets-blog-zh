- en: Getting Started with PyCaret
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用 PyCaret
- en: 原文：[https://www.kdnuggets.com/2022/11/getting-started-pycaret.html](https://www.kdnuggets.com/2022/11/getting-started-pycaret.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2022/11/getting-started-pycaret.html](https://www.kdnuggets.com/2022/11/getting-started-pycaret.html)
- en: '![Getting Started with PyCaret](../Images/b403b58cba8bf7b381305dbaec25bc74.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![开始使用 PyCaret](../Images/b403b58cba8bf7b381305dbaec25bc74.png)'
- en: Image by Editor
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由编辑提供
- en: Any AI model training and deployment goes through a long data journey. Some
    of these steps are standard and can be automated thereby enabling fast model development
    and deployment. PyCaret is one of the packages developed in pursuit of churning
    out machine-learning models at a factory scale. Let's get started with learning
    about it.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 任何 AI 模型的训练和部署都经历漫长的数据过程。其中一些步骤是标准化的，可以自动化，从而实现快速的模型开发和部署。PyCaret 是为大规模生产机器学习模型而开发的软件包之一。让我们开始学习它吧。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: What is PyCaret?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 PyCaret？
- en: PyCaret is an open-source, low-code data science package in Python that speeds
    up the experiment cycle by automating ML workflows. It replaces hundreds of lines
    of code with only a few lines, facilitating faster and more efficient experimentation.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 是一个开源、低代码的数据科学 Python 包，通过自动化 ML 工作流来加速实验周期。它将数百行代码替换为仅几行，促进更快、更高效的实验。
- en: It's a wrapper around multiple ML libraries and frameworks such as scikit-learn,
    boosting libraries like LightGBM/XGBoost/CatBoost, spaCy, Hyperopt, Ray, etc,
    providing seamless and flexible development.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 它是围绕多个 ML 库和框架（如 scikit-learn、LightGBM/XGBoost/CatBoost 等提升库、spaCy、Hyperopt、Ray
    等）构建的封装器，提供无缝且灵活的开发。
- en: '![Getting Started with PyCaret](../Images/9ae4aad3f147edd95c9ae591d61bacce.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![开始使用 PyCaret](../Images/9ae4aad3f147edd95c9ae591d61bacce.png)'
- en: Image by [Pycaret](https://pycaret.gitbook.io/docs/)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Pycaret](https://pycaret.gitbook.io/docs/) 提供
- en: PyCaret is simple and easy to use wherein the operations are sequentially stored
    in a pipeline ready for deployment. PyCaret automates preprocessing, feature engineering,
    as well as hyperparameter tuning all out of the box.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 简单易用，其操作按顺序存储在一个准备部署的管道中。PyCaret 自动处理预处理、特征工程以及超参数调优，全部开箱即用。
- en: '![Getting Started with PyCaret](../Images/47c78bf95dd7850540cf6c3c735836b8.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![开始使用 PyCaret](../Images/47c78bf95dd7850540cf6c3c735836b8.png)'
- en: Image by [Moez Ali](https://moez-62905.medium.com/)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Moez Ali](https://moez-62905.medium.com/) 提供
- en: Its model collection has over 70 untrained models for tasks like classification,
    regression, clustering, etc with an exceptional spread of modules including supervised
    and unsupervised methods.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 它的模型库拥有超过 70 个未经训练的模型，适用于分类、回归、聚类等任务，模块覆盖了包括监督和无监督方法在内的广泛领域。
- en: PyCaret has everything covered – whether it is integration with the SHAP framework
    for explainability or with MLFlow for experiment tracking.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 一应俱全——无论是与 SHAP 框架的集成以实现可解释性，还是与 MLFlow 的集成以跟踪实验。
- en: Installation
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装
- en: Pycaret can be installed using pip. The default installation installs only the
    hard dependencies as shown below.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Pycaret 可以使用 pip 安装。默认安装仅安装硬依赖项，如下所示。
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: To install the full version run the below command in your terminal/command line.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装完整版本，请在终端/命令行中运行以下命令。
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Hands On!
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 亲自动手！
- en: Pycaret offers some standard [datasets](https://github.com/pycaret/pycaret/tree/master/datasets)
    out of the box. We will use the “Boston Housing Prices” dataset ([boston.csv](https://github.com/pycaret/pycaret/blob/master/datasets/boston.csv))
    for this tutorial.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Pycaret 提供一些标准的 [数据集](https://github.com/pycaret/pycaret/tree/master/datasets)。我们将使用“波士顿住房价格”数据集
    ([boston.csv](https://github.com/pycaret/pycaret/blob/master/datasets/boston.csv))
    进行本教程。
- en: First, let's import libraries such as “get_data” from PyCaret for loading the
    data into the Jupyter environment and “plotly express” for charting/plotting.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们导入诸如 PyCaret 中的“get_data”库，用于将数据加载到 Jupyter 环境中，以及“plotly express”库用于绘图/绘制图表。
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In case you witness any error while importing the libraries, then it might be
    because of dependency issues that need to be resolved first. Please note that
    PyCaret is not yet compatible with Python 3.9\. For this demo, Python 3.7 is used
    on [Google Colab](https://colab.research.google.com/).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在导入库时遇到任何错误，可能是因为需要先解决的依赖性问题。请注意，PyCaret 目前不兼容 Python 3.9。本演示使用的是 [Google
    Colab](https://colab.research.google.com/) 中的 Python 3.7。
- en: Load the dataset into the Jupyter Notebook using the get_data function imported
    previously from pycaret.datasets. The get_data function returns a data frame that
    can be stored as shown below.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 使用之前从 pycaret.datasets 导入的 get_data 函数将数据集加载到 Jupyter Notebook 中。get_data 函数返回一个数据框，可以按如下所示进行存储。
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: PyCaret shows the top five rows of the data frame by default. Therefore you
    do not need to call dataframe.head() function explicitly.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 默认显示数据框的前五行。因此，你不需要显式调用 dataframe.head() 函数。
- en: '![Getting Started with PyCaret](../Images/08babd7779196ddbccc92c12e0a203ed.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![开始使用 PyCaret](../Images/08babd7779196ddbccc92c12e0a203ed.png)'
- en: Each row in the dataset represents a suburb or a town in the Boston region.
    The data is originally drawn from the Boston Standard Metropolitan Statistical
    Area (SMSA) in the year 1970 with a data dictionary sourced from [here](https://archive.ics.uci.edu/ml/machine-learning-databases/housing/housing.names).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集中的每一行代表波士顿地区的一个郊区或城镇。数据最初来自 1970 年的波士顿标准大都市统计区（SMSA），数据字典来源于 [这里](https://archive.ics.uci.edu/ml/machine-learning-databases/housing/housing.names)。
- en: We are solving a regression problem given the continuous nature of the target
    variable, MEDV.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在解决一个回归问题，考虑到目标变量 MEDV 的连续性。
- en: 'The below chart represents one of the interesting scatter plots with the following
    characteristics:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图表展示了具有以下特征的有趣散点图：
- en: Bivariate distribution between the Median value of owner-occupied homes in $1000s
    (MEDV) and the percentage of the lower status of the population (LSTAT)
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中位数自有住房价值（MEDV，单位为$1000）与人口低社会经济地位百分比（LSTAT）之间的双变量分布
- en: An index of accessibility to radial highways (RAD) to the equation as a faceted
    column (equivalent to “hue” in Seaborn)
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将径向公路（RAD）的可达性指数作为一个分面列（相当于 Seaborn 中的“色调”）添加到方程中
- en: A trendline using the trendline argument with value as “OLS” representing Ordinary
    Least Squares
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 trendline 参数值为 “OLS” 的趋势线，表示普通最小二乘法
- en: The color of the trendline is chosen to be red for easy visibility using the
    argument trendline_color_override
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用参数 trendline_color_override 将趋势线的颜色设置为红色以便于可见
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The plot shows a strong negative relationship between median housing prices
    and the lower status of the population. This means that the weaker the financial
    status of the population, the lower the disposable income, and thus the lower
    would be the housing prices.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图表显示了中位数住房价格与人口低社会经济地位之间的强负相关关系。这意味着人口的经济状况越弱，可支配收入越低，因此住房价格也会越低。
- en: '![Getting Started with PyCaret](../Images/288f1fd6211a27752247578bad4b05fa.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![开始使用 PyCaret](../Images/288f1fd6211a27752247578bad4b05fa.png)'
- en: The RAD value of 24 fits the data well excluding a few outliers and has decent
    support with respect to the number of records.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: RAD 值为 24 的数据拟合效果良好，排除了一些异常值，并且在记录数量方面有不错的支持。
- en: Looking at the distribution of the target variable i.e. MEDV, it appears to
    be fairly normally distributed barring a few outliers.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 查看目标变量，即 MEDV 的分布，似乎在除了一些异常值外，分布相当接近正态分布。
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Getting Started with PyCaret](../Images/20394f59f0207bef5c8af3a5be666bc6.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![开始使用 PyCaret](../Images/20394f59f0207bef5c8af3a5be666bc6.png)'
- en: Setting up a PyCaret experiment is quite easy using the setup function. The
    function uses the following arguments as input – the data frame, target variable
    name, a boolean to log the experiment results, and the name.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 setup 函数设置 PyCaret 实验非常简单。该函数使用以下参数作为输入——数据框、目标变量名称、一个用于记录实验结果的布尔值以及名称。
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: As evident from the PyCaret output, it does a gamut of things automatically
    including but not limited to identifying missing values, continuous and categorical
    features, the cardinality of variables, splits train and test sets and performs
    cross-validation that would otherwise take considerable time and resources.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 从 PyCaret 输出可以明显看出，它自动完成了许多任务，包括但不限于识别缺失值、连续和分类特征、变量的基数、划分训练集和测试集，并执行交叉验证，这些都需要相当的时间和资源。
- en: '![Getting Started with PyCaret](../Images/998f4ad330e5a5284d1145995f28434b.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![开始使用 PyCaret](../Images/998f4ad330e5a5284d1145995f28434b.png)'
- en: Once the experiment is set up, you need to run compare_models() in order to
    experiment with a multitude of algorithms for a particular problem. The below
    code stores the best model in a variable.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦实验设置完成，你需要运行 compare_models() 来对特定问题的多种算法进行实验。以下代码将最佳模型存储在一个变量中。
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The above code trains and tests the model on different algorithms and arranges
    them in the ascending order of the error. It also displays the training time in
    seconds which is denoted by ‘TT (Sec)’ in the last column.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码在不同算法上训练和测试模型，并按错误的升序排列它们。它还显示了以秒为单位的训练时间，在最后一列中以 ‘TT (Sec)’ 表示。
- en: Notably, the training time is based on using all CPU cores in this particular
    example and might differ on different machines.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，训练时间是基于使用所有 CPU 核心的，在不同机器上可能会有所不同。
- en: '![Getting Started with PyCaret](../Images/3aa9118b971fb14bb1483ea5a18ef80d.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![开始使用 PyCaret](../Images/3aa9118b971fb14bb1483ea5a18ef80d.png)'
- en: The “get_params()” method is used to retrieve the hyperparameters of the best
    model which is the Extra Tree Regressor in our example.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: “get_params()” 方法用于检索最佳模型的超参数，在我们的例子中，这个最佳模型是 Extra Tree Regressor。
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Feature importances can be plotted using the below code.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 特征重要性可以使用以下代码绘制。
- en: '[PRE10]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![Getting Started with PyCaret](../Images/c74b2a7788393bba5583faa47506b922.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![开始使用 PyCaret](../Images/c74b2a7788393bba5583faa47506b922.png)'
- en: The visualization makes it easier to identify the top n features, with the most
    important feature at the top.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 该可视化使得识别前 n 个特征变得更容易，最重要的特征位于顶部。
- en: Model predictions are generated using the predict_model() function.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 模型预测使用 predict_model() 函数生成。
- en: '[PRE11]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The save_model() function is used to save the trained model for easy deployment.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: save_model() 函数用于保存训练好的模型以便于部署。
- en: '[PRE12]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Summary
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this post, you learned about how PyCaret makes the life of many data scientists
    and machine learning engineers easier by automating a lot of mundane tasks. The
    post also demonstrated how to automate the standard steps in a machine-learning
    pipeline using the PyCaret package.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，你了解了 PyCaret 如何通过自动化大量重复任务来简化许多数据科学家和机器学习工程师的工作。文章还演示了如何使用 PyCaret 包自动化机器学习管道中的标准步骤。
- en: '**[Vidhi Chugh](https://vidhi-chugh.medium.com/)** is an AI strategist and
    a digital transformation leader working at the intersection of product, sciences,
    and engineering to build scalable machine learning systems. She is an award-winning
    innovation leader, an author, and an international speaker. She is on a mission
    to democratize machine learning and break the jargon for everyone to be a part
    of this transformation.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Vidhi Chugh](https://vidhi-chugh.medium.com/)** 是一位 AI 策略专家和数字化转型领袖，她在产品、科学和工程的交汇处工作，致力于构建可扩展的机器学习系统。她是获奖的创新领袖、作者和国际演讲者，致力于使机器学习普及并打破术语，使每个人都能参与这一转型。'
- en: More On This Topic
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多主题
- en: '[Introduction to Binary Classification with PyCaret](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyCaret 二分类简介](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
- en: '[Introduction to Clustering in Python with PyCaret](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 在 Python 中进行聚类简介](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)'
- en: '[Announcing PyCaret 3.0: Open-source, Low-code Machine Learning in Python](https://www.kdnuggets.com/2023/03/announcing-pycaret-30-opensource-lowcode-machine-learning-python.html)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[宣布 PyCaret 3.0：开源、低代码的 Python 机器学习](https://www.kdnuggets.com/2023/03/announcing-pycaret-30-opensource-lowcode-machine-learning-python.html)'
- en: '[Getting Started with Automated Text Summarization](https://www.kdnuggets.com/2019/11/getting-started-automated-text-summarization.html)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开始自动文本摘要](https://www.kdnuggets.com/2019/11/getting-started-automated-text-summarization.html)'
- en: '[Getting Started Cleaning Data](https://www.kdnuggets.com/2022/01/getting-started-cleaning-data.html)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开始清理数据](https://www.kdnuggets.com/2022/01/getting-started-cleaning-data.html)'
- en: '[Getting Started with SQL Cheatsheet](https://www.kdnuggets.com/2022/08/getting-started-sql-cheatsheet.html)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQL 入门备忘单](https://www.kdnuggets.com/2022/08/getting-started-sql-cheatsheet.html)'
