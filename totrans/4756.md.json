["```py\nimport pygame\nimport pygame.camera\n\n# Captured image dimensions. It should be less than or equal to the maximum dimensions acceptable by the camera.\nwidth = 320\nheight = 240\n\n# Initializing PyGame and the camera.\npygame.init()\npygame.camera.init()\n\n# Specifying the camera to be used for capturing images. If there is a single camera, then it have the index 0.\ncam = pygame.camera.Camera(\"/dev/video0\",(width,height))\n\n# Preparing a resizable window of the specified size for displaying the captured images.\nwindow = pygame.display.set_mode((width,height),pygame.RESIZABLE)\n\n# Starting the camera for capturing images.\ncam.start()\n\n# Capturing an image.\nimage = cam.get_image()\n\n# Stopping the camera.\ncam.stop()\n\n# Displaying the image on the window starting from the top-left corner.\nwindow.blit(image,(0,0))\n\n# Refreshing the window.\npygame.display.update()\n\n# Saving the captured image.\npygame.image.save(window,'PyGame_image.jpg')\n\n```", "```py\npi@raspberry:~ $ python3 im_cam.py\n\n```", "```py\nimport pygame\nimport pygame.camera\n\n# Captured image dimensions. It should be less than or equal to the maximum dimensions acceptable by the camera.\nwidth = 320\nheight = 240\n\n# Initializing PyGame and the camera.\npygame.init()\npygame.camera.init()\n\n# Specifying the camera to be used for capturing images. If there is a single camera, then it has the index 0.\ncam = pygame.camera.Camera(\"/dev/video0\", (width, height))\n\n# Preparing a resizable window of the specified size for displaying the captured images.\nwindow = pygame.display.set_mode((width, height), pygame.RESIZABLE)\n\n# Starting the camera for capturing images.\ncam.start()\n\nfor im_num in range(0, 2000):\n    print(\"Image : \", im_num)\n\n    # Capturing an image.\n    image = cam.get_image()\n\n    # Displaying the image on the window starting from the top-left corner.\n    window.blit(image, (0, 0))\n\n    # Refreshing the window.\n    pygame.display.update()\n\n    # Saving the captured image.\n    pygame.image.save(window, './pygame_images/image_' + str(im_num) + '.jpg')\n\n# Stopping the camera.\ncam.stop()\n\n```", "```py\nimport skimage.io\nimport os\nimport numpy\n\ndir_files = os.listdir('./pygame_images/')\n\nbg_image = skimage.io.imread(fname=dir_files[0], as_grey=True)\n\nfor k in range(1, len(dir_files)):\n    fname = dir_files[k]\n    im = skimage.io.imread(fname=fname, as_grey=True)\n    bg_image = bg_image + im\n\nbg_image = bg_image/(len(dir_files))\nbg_image_bin = bg_image > 0.5\n\nskimage.io.imsave(fname='bg_model.jpg', arr=bg_image)\nskimage.io.imsave(fname='bg_model_bin.jpg', arr=bg_image_bin*255)\n\n```", "```py\nbg_num_ones = numpy.sum(bg_image_bin)\ntest = skimage.io.imread(fname=\"./pygame_images/image_800.jpg\", \n                         as_grey=True)\ntest_bin = test > 0.5\ntest_num_ones = numpy.sum(test_bin)\nprint(\"Num 1s in BG   :\", bg_num_ones)\nprint(\"Num 1s in Test :\", test_num_ones)\n\nif(abs(test_num_ones-bg_num_ones) < 5000):\n    print(\"Change.\")\n\n```", "```py\nimport time\nimport RPi.GPIO\nimport skimage.io\nimport numpy\nimport os\nimport pygame.camera\nimport pygame\n\n#####GPIO#####\n# Initializing the GPIO pins. The numbering using is board.\nRPi.GPIO.setmode(RPi.GPIO.BOARD)\n\n# Configuring the GPIO bin number 22 to be an output bin.\nRPi.GPIO.setup(22, RPi.GPIO.OUT)\n\n#####PyGame#####\n# Initializing PyGame and the camera.\npygame.init()\npygame.camera.init()\n\n# Captured image dimensions. It should be less than or equal to the maximum dimensions acceptable by the camera.\nwidth = 320\nheight = 240\n\n# Preparing a resizable window of the specified size for displaying the captured images.\nwindow = pygame.display.set_mode((width, height), pygame.RESIZABLE)\n\n# Specifying the camera source and the image dimensions.\ncam = pygame.camera.Camera(\"/dev/video0\",(width,height))\ncam.start()\n\n#####Background Model#####\n# Reading the background model.\nbg_image = skimage.io.imread(fname='bg_model_bin.jpg', as_grey=True)\nbg_image_bin = bg_image > 0.5\nbg_num_ones = numpy.sum(bg_image_bin)\n\nim_dir = '/home/pi/pygame_images/'\n\nfor im_num in range(0, 2000):\n    print(\"Image : \", im_num)\n\n    im = cam.get_image()\n\n    # Displaying the image on the window starting from the top-left corner.\n    window.blit(im, (0, 0))\n\n    # Refreshing the window.\n    pygame.display.update()\n\n    pygame.image.save(window, im_dir+'image'+str(im_num)+'.jpg')\n    im = pygame.surfarray.array3d(window)\n\n    test_bin = im > 0.5\n    test_num_ones = numpy.sum(test_bin)\n\n    # Checking if there is a change in the test image.\n    if (abs(test_num_ones - bg_num_ones) < 5000):\n        print(\"Change.\")\n        try:\n            RPi.GPIO.output(22, RPi.GPIO.HIGH)\n            time.sleep(0.1)\n            RPi.GPIO.output(22, RPi.GPIO.LOW)\n        except KeyboardInterrupt:  # CTRL+C\n            print(\"Keyboard Interrupt.\")\n        except:\n            print(\"Error occurred.\")\n\n# Stopping the camera.\ncam.stop()\n\n# cleanup all GPIO pins.\nprint(\"Clean Up GPIO.\")\nRPi.GPIO.cleanup()\n\n```"]