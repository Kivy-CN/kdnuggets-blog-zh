- en: 4 Tricks to Effectively Use JSON in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/09/4-tricks-effectively-use-json-python.html](https://www.kdnuggets.com/2020/09/4-tricks-effectively-use-json-python.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Erik van Baaren](https://medium.com/@eriky), [Python 3 Guide](https://python3.guide/)**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/126e2354b612ada101cd10cb652dc896.png)'
  prefs: []
  type: TYPE_IMG
- en: Illustration by author
  prefs: []
  type: TYPE_NORMAL
- en: 'Python has two data types that, together, form the perfect tool for working
    with JSON: **dictionaries** and **lists**. Let''s explore how to:'
  prefs: []
  type: TYPE_NORMAL
- en: load and write JSON
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pretty-print and validate JSON on the command line
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do advanced queries on JSON docs by using JMESPath
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1\. Decoding JSON
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Python ships with a powerful and elegant [JSON library](https://docs.python.org/3.8/library/json.html).
    It can be imported with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Decoding a string of JSON is as simple as `json.loads(…)` (short for load string).
  prefs: []
  type: TYPE_NORMAL
- en: 'It converts:'
  prefs: []
  type: TYPE_NORMAL
- en: objects to dictionaries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: arrays to lists,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: booleans, integers, floats, and strings are recognized for what they are and
    will be converted into the correct types in Python
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any `null` will be converted into Python’s `None` type
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here’s an example of `json.loads` in action:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 2\. Encoding JSON
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The other way around is just as easy. Use `json.dumps(…)` (short for ‘dump
    to string) to convert a Python object consisting of dictionaries, lists, and other
    native types into a string:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'This is the exact same document, converted back to a string! If you want to
    make your JSON document more readable for humans, use the indent option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 3\. Command-line usage
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The JSON library can also be used from the command-line, to **validate** and **pretty-print** your
    JSON:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'As a side note: if you’re on a Mac or Linux and get the chance to install it,
    look into the `jq` command-line tool too. It’s easy to remember, colorizes your
    output, and has loads of extra features as explained in [my article on becoming
    a command-line ninja](https://towardsdatascience.com/this-will-make-you-a-command-line-ninja-93a51cdb16b1).'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/bd9c87b19426c42e16f3b2c85aa24f45.png)'
  prefs: []
  type: TYPE_IMG
- en: jq will pretty-print your JSON by default
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Searching through JSON with JMESPath
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Figure](../Images/f3ce0370cfbe428e42c7aa78e160af16.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Screenshot](http://jmespath.org/) by author'
  prefs: []
  type: TYPE_NORMAL
- en: JMESPath is a query language for JSON. It allows you to easily obtain the data
    you need from a JSON document. If you ever worked with JSON before, you probably
    know that it’s easy to get a nested value.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example: `doc["person"]["age"]` will get you the nested value for age in
    a document that looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'But what if you want to extract all the age-fields from an array of persons,
    in a document like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: We could write a simple loop and loop over all the persons. Easy peasy. But
    loops are slow and introduce complexity to your code. This is where JMESPath comes
    in!
  prefs: []
  type: TYPE_NORMAL
- en: 'This JMESPath expression will get the job done:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: It will return an array with all the ages: `[38, 45, 14]`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Say you want to filter the list, and only get the ages for people named ‘erik’.
    You can do so with a filter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: See how natural and quick this is?
  prefs: []
  type: TYPE_NORMAL
- en: 'JMESPath is not part of the Python standard library, meaning you’ll need to
    install it with `pip` or `[pipenv](https://medium.com/better-programming/improve-your-python-package-management-with-pipenv-28093c007955)`.
    For example, when [using ](https://medium.com/better-programming/stop-installing-python-packages-globally-use-virtual-environments-a31dee9fb2de)`[pip](https://medium.com/better-programming/stop-installing-python-packages-globally-use-virtual-environments-a31dee9fb2de)`[ in
    in virtual environment](https://medium.com/better-programming/stop-installing-python-packages-globally-use-virtual-environments-a31dee9fb2de):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: You’re now ready to start experimenting! Make sure to try the [interactive tutorial](https://jmespath.org/tutorial.html) and
    view the [examples](https://jmespath.org/examples.html) on the JMESPath site!
  prefs: []
  type: TYPE_NORMAL
- en: If you have more JSON tips or tricks, please share them in the comments!
  prefs: []
  type: TYPE_NORMAL
- en: '**Follow me** on [Twitter](https://twitter.com/erikyan) to get my latest articles
    first and make sure to **visit my **[**Python 3 Guide**](https://python3.guide/).
    This article was originally published [there](https://python3.guide/data-processing/working-with-json) as
    well.'
  prefs: []
  type: TYPE_NORMAL
- en: '[**The Most Important Python Concept That You Need to Understand**](https://towardsdatascience.com/the-most-important-python-concept-that-you-need-to-understand-985b98bbb84)'
  prefs: []
  type: TYPE_NORMAL
- en: Learn all about the building blocks of the Python language
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Erik van Baaren](https://medium.com/@eriky)** is a software engineer
    and the webmaster of [Python 3 Guide](https://python3.guide/), where you can learn
    both beginner and advanced Python topics. He''s also a writer of tech articles
    on [Medium.com](https://medium.com/@eriky).'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/4-tricks-to-effectively-use-json-in-python-4ca18c3f91d0).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[3 Advanced Python Features You Should Know](/2020/07/3-advanced-python-features.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Why Learn Python? Here Are 8 Data-Driven Reasons](/2020/07/learn-python-8-data-driven-reasons.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[10 Things You Didn’t Know About Scikit-Learn](/2020/09/10-things-know-scikit-learn.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[How to Effectively Use Pandas GroupBy](https://www.kdnuggets.com/2023/01/effectively-pandas-groupby.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data Analytics: The Four Approaches to Analyzing Data and How To…](https://www.kdnuggets.com/2023/04/data-analytics-four-approaches-analyzing-data-effectively.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How To Use Docker Tags to Manage Image Versions Effectively](https://www.kdnuggets.com/how-to-use-docker-tags-to-manage-image-versions-effectively)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Free eBook: 10 Practical Python Programming Tricks](https://www.kdnuggets.com/2023/04/free-ebook-10-practical-python-programming-tricks.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[12 VSCode Tips and Tricks for Python Development](https://www.kdnuggets.com/2023/05/12-vscode-tips-tricks-python-development.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python f-Strings Magic: 5 Game-Changing Tricks Every Coder Needs to Know](https://www.kdnuggets.com/python-fstrings-magic-5-gamechanging-tricks-every-coder-needs-to-know)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
