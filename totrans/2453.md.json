["```py\nimport pandas as pd\nframingham = pd.read_csv('framingham.csv')# Dropping null values\nframingham = framingham.dropna()\nframingham.head()\n```", "```py\nframingham['TenYearCHD'].value_counts()\n```", "```py\nfrom sklearn.model_selection import train_test_split\nfrom imblearn.over_sampling import RandomOverSampler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import accuracy_scoreX = framingham.drop('TenYearCHD',axis=1)\ny = framingham['TenYearCHD']\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.20)oversample = RandomOverSampler(sampling_strategy='minority')\nX_over, y_over = oversample.fit_resample(X_train,y_train)rf = RandomForestClassifier()\nrf.fit(X_over,y_over)\n```", "```py\npreds = rf.predict(X_test)\nprint(accuracy_score(y_test,preds))\n```", "```py\nimport joblib\njoblib.dump(rf, 'fhs_rf_model.pkl') \n```", "```py\nimport streamlit as st\nimport joblib\nimport pandas as pd\n```", "```py\nst.write(\"# 10 Year Heart Disease Prediction\")\n```", "```py\nstreamlit run streamlit_fhs.py\n```", "```py\ngender = st.selectbox(\"Enter your gender\",[\"Male\", \"Female\"])\n```", "```py\ncol1, col2, col3 = st.columns(3)\n\n# getting user inputgender = col1.selectbox(\"Enter your gender\",[\"Male\", \"Female\"])\n\nage = col2.number_input(\"Enter your age\")\neducation = col3.selectbox(\"Highest academic qualification\",[\"High school diploma\", \"Undergraduate degree\", \"Postgraduate degree\", \"PhD\"])\n\nisSmoker = col1.selectbox(\"Are you currently a smoker?\",[\"Yes\",\"No\"])\n\nyearsSmoking = col2.number_input(\"Number of daily cigarettes\")\n\nBPMeds = col3.selectbox(\"Are you currently on BP medication?\",[\"Yes\",\"No\"])\n\nstroke = col1.selectbox(\"Have you ever experienced a stroke?\",[\"Yes\",\"No\"])\n\nhyp = col2.selectbox(\"Do you have hypertension?\",[\"Yes\",\"No\"])\n\ndiabetes = col3.selectbox(\"Do you have diabetes?\",[\"Yes\",\"No\"])\n\nchol = col1.number_input(\"Enter your cholesterol level\")\n\nsys_bp = col2.number_input(\"Enter your systolic blood pressure\")\n\ndia_bp = col3.number_input(\"Enter your diastolic blood pressure\")\n\nbmi = col1.number_input(\"Enter your BMI\")\n\nheart_rate = col2.number_input(\"Enter your resting heart rate\")\n\nglucose = col3.number_input(\"Enter your glucose level\")\n```", "```py\nst.button('Predict')\n```", "```py\ndf_pred = pd.DataFrame([[gender,age,education,isSmoker,yearsSmoking,BPMeds,stroke,hyp,diabetes,chol,sys_bp,dia_bp,bmi,heart_rate,glucose]],\n\ncolumns= ['gender','age','education','currentSmoker','cigsPerDay','BPMeds','prevalentStroke','prevalentHyp','diabetes','totChol','sysBP','diaBP','BMI','heartRate','glucose'])\n\ndf_pred['gender'] = df_pred['gender'].apply(lambda x: 1 if x == 'Male' else 0)\n\ndf_pred['prevalentHyp'] = df_pred['prevalentHyp'].apply(lambda x: 1 if x == 'Yes' else 0)\n\ndf_pred['prevalentStroke'] = df_pred['prevalentStroke'].apply(lambda x: 1 if x == 'Yes' else 0)\n\ndf_pred['diabetes'] = df_pred['diabetes'].apply(lambda x: 1 if x == 'Yes' else 0)\n\ndf_pred['BPMeds'] = df_pred['BPMeds'].apply(lambda x: 1 if x == 'Yes' else 0)\n\ndf_pred['currentSmoker'] = df_pred['currentSmoker'].apply(lambda x: 1 if x == 'Yes' else 0)def transform(data):\n    result = 3\n    if(data=='High school diploma'):\n        result = 0\n    elif(data=='Undergraduate degree'):\n        result = 1\n    elif(data=='Postgraduate degree'):\n        result = 2\n    return(result)df_pred['education'] = df_pred['education'].apply(transform)\n```", "```py\nmodel = joblib.load('fhs_rf_model.pkl')\nprediction = model.predict(df_pred)\n```", "```py\nif st.button('Predict'):\n\n    if(prediction[0]==0):\n        st.write('<p class=\"big-font\">You likely will not develop heart disease in 10 years.</p>',unsafe_allow_html=True)\n\n    else:\n        st.write('<p class=\"big-font\">You are likely to develop heart disease in 10 years.</p>',unsafe_allow_html=True)\n```"]