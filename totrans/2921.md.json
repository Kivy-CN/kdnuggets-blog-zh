["```py\nimport numpy as np\nimport matplotlib.pyplot as plt \nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn import metrics\n```", "```py\ndata = pd.read_csv('/Users/nageshsinghchauhan/Downloads/ML/KNN_art/heart.csv')\n```", "```py\ndata.target.value_counts()\n\n1    165\n0    138\nName: target, dtype: int64\n```", "```py\nsns.countplot(x=\"target\", data=data, palette=\"bwr\")\nplt.show()\n```", "```py\nsns.countplot(x='sex', data=data, palette=\"mako_r\")\nplt.xlabel(\"Sex (0 = female, 1= male)\")\nplt.show()\n```", "```py\nplt.scatter(x=data.age[data.target==1], y=data.thalach[(data.target==1)], c=\"green\")\nplt.scatter(x=data.age[data.target==0], y=data.thalach[(data.target==0)], c = 'black')\nplt.legend([\"Disease\", \"Not Disease\"])\nplt.xlabel(\"Age\")\nplt.ylabel(\"Maximum Heart Rate\")\nplt.show()\n```", "```py\nX = data.iloc[:,:-1].values\ny = data.iloc[:,13].values\n```", "```py\nX_train, X_test, y_train, y_test =  train_test_split(X,y,test_size = 0.25, random_state= 0)\n```", "```py\nsc_X = StandardScaler()\nX_train = sc_X.fit_transform(X_train)\nX_test = sc_X.transform(X_test)\n```", "```py\nclassifier = KNeighborsClassifier(n_neighbors = 5, metric = 'minkowski', p = 2)\nclassifier = classifier.fit(X_train,y_train)\n```", "```py\ny_pred = classifier.predict(X_test)\n#check accuracy\naccuracy = metrics.accuracy_score(y_test, y_pred)\nprint('Accuracy: {:.2f}'.format(accuracy))\n```", "```py\nclassifier = KNeighborsClassifier(n_neighbors = 6, metric = 'minkowski', p = 2)\nclassifier = classifier.fit(X_train,y_train)\n#prediction\ny_pred = classifier.predict(X_test)\n#check accuracy\naccuracy = metrics.accuracy_score(y_test, y_pred)\nprint('Accuracy: {:.2f}'.format(accuracy))\n```", "```py\nclassifier = KNeighborsClassifier(n_neighbors = 7, metric = 'minkowski', p = 2)\nclassifier = classifier.fit(X_train,y_train)\n#prediction\ny_pred = classifier.predict(X_test)\n#check accuracy\naccuracy = metrics.accuracy_score(y_test, y_pred)\nprint('Accuracy: {:.2f}'.format(accuracy))\n```", "```py\nclassifier = KNeighborsClassifier(n_neighbors = 8, metric = 'minkowski', p = 2)\nclassifier = classifier.fit(X_train,y_train)\n#prediction\ny_pred = classifier.predict(X_test)\n#check accuracy\naccuracy = metrics.accuracy_score(y_test, y_pred)\nprint('Accuracy: {:.2f}'.format(accuracy))\n```", "```py\nclassifier = KNeighborsClassifier(n_neighbors = 9, metric = 'minkowski', p = 2)\nclassifier = classifier.fit(X_train,y_train)\n#prediction\ny_pred = classifier.predict(X_test)\n#check accuracy\naccuracy = metrics.accuracy_score(y_test, y_pred)\nprint('Accuracy: {:.2f}'.format(accuracy))\n```", "```py\n#confusion matrix\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\n```", "```py\narray([[26, 7],\n       [ 3, 40]])\n```"]