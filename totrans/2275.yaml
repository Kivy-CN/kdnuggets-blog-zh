- en: 'Unveiling the Potential of CTGAN: Harnessing Generative AI for Synthetic Data'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/04/unveiling-potential-ctgan-harnessing-generative-ai-synthetic-data.html](https://www.kdnuggets.com/2023/04/unveiling-potential-ctgan-harnessing-generative-ai-synthetic-data.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: We all know that GANs are gaining traction in the generation of unstructured
    synthetic data, such as images and texts. However, very little work has been done
    on generating synthetic tabular data using GANs. Synthetic data has numerous benefits,
    including its use in machine learning applications, data privacy, data analysis,
    and data augmentation. There are only a few models available for generating synthetic
    tabular data, and CTGAN (Conditional Tabular Generative Adversarial Network) is
    one of them. Like other GANs, it uses a generator and discriminator neural network
    to create synthetic data with similar statistical properties to real data. CTGAN
    can preserve the underlying structure of the real data, including correlations
    between columns. The added benefits of CTGAN include augmentation of the training
    procedure with mode-specific normalization, a few architectural changes, and addressing
    data imbalance by employing a conditional generator and training-by-sampling.
  prefs: []
  type: TYPE_NORMAL
- en: In this blog post, I used CTGAN to generate synthetic data based on a dataset
    on *Credit Analysis* collected from Kaggle.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Pros of CTGAN
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Generates synthetic tabular data that have similar statistical properties as
    the real data, including correlations between different columns.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Preserves the underlying structure of real data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The synthetic data generated by CTGAN can be used for a variety of applications,
    such as data augmentation, data privacy, and data analysis.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can handle continuous, discrete, and categorical data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cons of CTGAN
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: CTGAN requires a large amount of real tabular data to train the model and generate
    synthetic data that have similar statistical properties to the real data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CTGAN is computationally intensive and may require a significant amount of computing
    resources.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The quality of the synthetic data generated by CTGAN may vary depending on the
    quality of the real data used to train the model.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tuning CTGAN
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Like all other machine learning models CTGAN performs better when it is tuned.
    And there are multiple parameters to be considered while tuning CTGANs. However,
    for this demonstration, I used all the default parameters that come with ‘ctgan
    library’:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Epochs: Number of times generator and discriminator networks are trained on
    the dataset.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Learning rate: The rate at which the model adjusts the weights during training.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Batch size: Number of samples used in each training iteration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Generator and discriminator networks size.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choice of the optimization algorithm.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CTGAN also takes account of hyperparameters, such as the dimensionality of the
    latent space, the number of layers in the generator and discriminator networks,
    and the activation functions used in each layer. The choice of parameters and
    hyperparameters affects the performance and quality of the generated synthetic
    data.
  prefs: []
  type: TYPE_NORMAL
- en: Validation of CTGAN
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Validation of CTGAN is tricky as it comes with limitations such as difficulties
    in the evaluation of the quality of the generated synthetic data, particularly
    when it comes to tabular data. Though there are metrics that can be used to evaluate
    the similarity between the real and synthetic data, it can still be challenging
    to determine if the synthetic data accurately represents the underlying patterns
    and relationships in the real data. Additionally, CTGAN is vulnerable to overfitting
    and can produce synthetic data that is too similar to the training data, which
    may limit their ability to generalize to new data.
  prefs: []
  type: TYPE_NORMAL
- en: 'A few common validations techniques include:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Statistical Tests: To compare statistical properties of generated data and
    real data. For example, tests such as correlation analysis, Kolmogorov-Smirnov
    test, Anderson-Darling test, and chi-squared test to compare the distributions
    of the generated and real data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Visualization: By plotting histograms, scatterplots, or heatmaps to visualize
    the similarities and differences.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Application Testing: By using synthetic data in real-world applications see
    if it performs similarly to the real data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Case Study
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: About Credit Analysis Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Credit analysis data contains client data in continuous and discrete/categorical
    formats. For demonstration purposes, I have pre-processed the data by removing
    rows with null values and deleting a few columns that were not needed for this
    demonstration. Due to limitations in computational resources, running all the
    data and all columns would require a lot of computation power that I do not have.
    Here is the list of columns for continuous and categorical variables (discrete
    values such as Count of Children (CNT_CHINDREN) are treated as categorical variables):'
  prefs: []
  type: TYPE_NORMAL
- en: 'Categorical Variables:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Continuous Variables:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Generative models require a large amount of clean data to be trained on for
    better results. However, due to limitations in computation power, I have selected
    only 10,000 rows (precisely 9,993) from the over 300,000 rows of real data for
    this demonstration. Although this number may be considered relatively small, it
    should be sufficient for the purpose of this demonstration.
  prefs: []
  type: TYPE_NORMAL
- en: '**Location of the Real Data:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.kaggle.com/datasets/kapoorshivam/credit-analysis](https://www.kaggle.com/datasets/kapoorshivam/credit-analysis)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Location of the generated synthetic Data:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Synthetic Credit Analysis Data by CTGAN (Kaggle)](https://www.kaggle.com/datasets/drrayislam/synthetic-credit-analysis-data-by-ctgan)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Synthetic Tabular Data Set Generated by CTGAN (Research Gate)](https://www.researchgate.net/publication/369826197_Synthetic_Tabular_Data_Set_Generated_by_CTGAN)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DOI: [10.13140/RG.2.2.23275.82728](https://dx.doi.org/10.13140/RG.2.2.23275.82728)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/fdf11e6f132e3463fb533bc183f261da.png)'
  prefs: []
  type: TYPE_IMG
- en: Credit Analysis Data | Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Results
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'I have generated 10k (9997 to be exact) synthetic data points and compared
    them to the real data. The results look good, although there is still potential
    for improvement. In my analysis, I used the default parameters, with ''relu''
    as the activation function and 3000 epochs. Increasing the number of epochs should
    result in a better generation of real-like synthetic data. The generator and discriminator
    loss also looks good, with lower losses indicating closer similarity between the
    synthetic and real data:'
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/30e9337394c50196dca7aa21e051513f.png)'
  prefs: []
  type: TYPE_IMG
- en: Generator and Discriminator loss | Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: The dots along the diagonal line in the Absolute Log Mean and Standard Deviation
    diagram indicate that the quality of the generated data is good.
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/d78ae917b78e7848fb70785bd3e2aa52.png)'
  prefs: []
  type: TYPE_IMG
- en: Absolute Log Mean and Standard Deviations of Numeric Data | Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'The cumulative sums in the following figures for continuous columns are not
    exactly overlapping, but they are close, which indicates a good generation of
    synthetic data and the absence of overfitting. The overlap in categorical/discrete
    data suggests that the synthetic data generated is near-real. Further statistical
    analyses are presented in the following figures:'
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/190d689ae7e86a3e1a682c07013671d4.png)'
  prefs: []
  type: TYPE_IMG
- en: Cumulative Sums per Feature | Image by Author![XXXXX](../Images/777416ef5219c3b162900c0c5e9861b2.png)
  prefs: []
  type: TYPE_NORMAL
- en: Distribution of Features| Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/947bd52a82a71333174503e8bc5edf2e.png)'
  prefs: []
  type: TYPE_IMG
- en: Distribution of Features | Image by Author![XXXXX](../Images/0a3117c69dbc7114cb6ef198c4ae97a5.png)
  prefs: []
  type: TYPE_NORMAL
- en: Principal Component Analysis | Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: The following correlation diagram shows noticeable correlations between the
    variables. It is important to note that even after thorough fine-tuning, there
    may be variations in properties between real and synthetic data. These differences
    can actually be beneficial, as they may reveal hidden properties within the dataset
    that can be leveraged to create novel solutions. It has been observed that increasing
    the number of epochs leads to improvements in the quality of synthetic data.
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/757eb3ac9a934085d45b8900328c92c0.png)'
  prefs: []
  type: TYPE_IMG
- en: Correlation among variables (Real Data) | Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/f0eec5a1fb2c4b88d74823fa59ef96ae.png)'
  prefs: []
  type: TYPE_IMG
- en: Correlation among variables (Synthetic Data) | Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: The summary statistics of both the sample data and real data also appear to
    be satisfactory.
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/aa2df72c0607132355d2d0199d17d4e0.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary Statistics of Real Data and Synthetic Data | Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Python Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The training process of CTGAN is expected to converge to a point where the generated
    synthetic data becomes indistinguishable from the real data. However, in reality,
    convergence cannot be guaranteed. Several factors can affect the convergence of
    CTGAN, including the choice of hyperparameters, the complexity of the data, and
    the architecture of the models. Furthermore, the instability of the training process
    can lead to mode collapse, where the generator produces only a limited set of
    similar samples instead of exploring the full diversity of the data distribution.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Ray Islam](https://blog.umd.edu/rayislam/)** is a Data Scientist (AI and
    ML) and Advisory Specialist Leader at Deloitte, USA. He holds a PhD in Engineering
    from the University of Maryland, College Park, MD, USA and has worked with major
    companies like Lockheed Martin and Raytheon, serving clients such as NASA and
    the US Airforce. Ray also has MASc in Engineering from Canada, a MSc in International
    Marketing, and an MBA from, UK. He is also the Editor-in-Chief of the upcoming
    peer-reviewed International Research Journal of Ethics for AI (INTJEAI), and his
    research interests include generative AI, augmented reality, XAI, and ethics in
    AI.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[3 Steps for Harnessing the Power of Data](https://www.kdnuggets.com/2022/05/3-steps-harnessing-power-data.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Harnessing ChatGPT for Automated Data Cleaning and Preprocessing](https://www.kdnuggets.com/2023/08/harnessing-chatgpt-automated-data-cleaning-preprocessing.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Synthetic Data Platforms: Unlocking the Power of Generative AI for…](https://www.kdnuggets.com/2023/07/synthetic-data-platforms-unlocking-power-generative-ai-structured-data.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Unveiling the Power of Meta''s Llama 2: A Leap Forward in Generative AI?](https://www.kdnuggets.com/2023/07/unveiling-power-metas-llama-2-leap-forward-generative-ai.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[High-Fidelity Synthetic Data for Data Engineers and Data Scientists Alike](https://www.kdnuggets.com/2022/tonic-high-fidelity-synthetic-data-engineers-scientists-alike.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How To Use Synthetic Data To Overcome Data Shortages For Machine…](https://www.kdnuggets.com/2022/03/synthetic-data-overcome-data-shortages-machine-learning-model-training.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
