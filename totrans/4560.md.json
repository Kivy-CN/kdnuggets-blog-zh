["```py\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n```", "```py\nmy_dataset = pd.read_csv(‘data/my_dataset.csv’, skiprows=1, low_memory=False)\n\n```", "```py\nmy_dataset = my_dataset.drop([‘url’],axis=1)\n\n```", "```py\nmy_dataset = my_dataset.dropna(thresh=half_count,axis=1)\n\n```", "```py\nX = dataset.iloc[:, :-1].values \n\n```", "```py\ny = dataset.iloc[:, -1].values\n\n```", "```py\nfrom sklearn.preprocessing import OneHotEncoder\nonehotencoder = OneHotEncoder(categorical_features = [0])X = onehotencoder.fit_transform(X).toarray()\n\n```", "```py\nfrom sklearn.preprocessing import StandardScalersc_X = StandardScaler()X_train = sc_X.fit_transform(X_train)\nX_test = sc_X.transform(X_test)As you don’t need to fit it to your test set, you can just apply transformation.sc_y = StandardScaler()\ny_train = sc_y.fit_transform(y_train)\n\n```", "```py\nmy_dataset.to_csv(“processed_data/cleaned_dataset.csv”,index=False)\n\n```"]