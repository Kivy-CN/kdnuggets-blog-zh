- en: How to Use Python and Machine Learning to Predict Football Match Winners
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/01/python-machine-learning-predict-football-match-winners.html](https://www.kdnuggets.com/2023/01/python-machine-learning-predict-football-match-winners.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![How to Use Python and Machine Learning to Predict Football Match Winners](../Images/6615eaaadd9f0b259c4193da10950ebd.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by [Freepik](https://www.freepik.com/free-photo/crop-legs-shooting-ball_2233009.htm#query=football%20field&position=0&from_view=keyword)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Python is one of the most versatile programming languages out there. Over the
    years, Python programming has grown to become the most popular programming language
    for building various machine learning applications.
  prefs: []
  type: TYPE_NORMAL
- en: A key element of such applications is often to carry out some kind of prediction
    based on the data available for processing. Predictions have the facet of uncertainty
    that is tackled very easily using Python programming.
  prefs: []
  type: TYPE_NORMAL
- en: Here, in this article, we will try to tackle one such problem. With the help
    of Python programming, we will try to predict the results of a football match.
  prefs: []
  type: TYPE_NORMAL
- en: Since this problem involves a certain level of uncertainty, Python programming
    might just be the best option to study and solve this. And that is exactly what
    we will try to accomplish here.
  prefs: []
  type: TYPE_NORMAL
- en: Overview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Football is a sport, which like any other sport, involves multiple such elements
    that are truly unpredictable in nature.
  prefs: []
  type: TYPE_NORMAL
- en: It is well-known that football matches often turn out to be different than what
    one would have anticipated.
  prefs: []
  type: TYPE_NORMAL
- en: In such a scenario, predicting football match winners comes as a challenge.
    However, even if we cannot know the events of a particular match beforehand, we
    can know the events that occurred in the past matches.
  prefs: []
  type: TYPE_NORMAL
- en: This data becomes the key element in carrying out a successful prediction when
    needed. This is the basis of a data science problem, studying the data statistics
    of the past to predict a likely future.
  prefs: []
  type: TYPE_NORMAL
- en: Thus, in this problem, we will base our results on the data derived from the
    past matches. We will carry out a statistical study on the basis of the past data
    and predict the most likely winner in a football match.
  prefs: []
  type: TYPE_NORMAL
- en: To do so, we will be using supervised machine learning to build an algorithm
    for the detection using Python programming.
  prefs: []
  type: TYPE_NORMAL
- en: Problem Statement
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This article aims to perform:'
  prefs: []
  type: TYPE_NORMAL
- en: Web-scraping to collect data of past football matches
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Supervised Machine Learning using detection models to predict the results of
    a football match on the basis of collected data
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Evaluation of the detection models
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Steps Involved
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1\. Web-scraping
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Web-scraping is the method of extracting relevant data for huge chunks of data
    available on different websites on the internet.
  prefs: []
  type: TYPE_NORMAL
- en: The data that is to be extracted is mostly unstructured and in the HTML format.
    This data is scraped in a manner that converts it to becoming structured and in
    the form of a list easily accessible for processing applications later.
  prefs: []
  type: TYPE_NORMAL
- en: For web-scraping to be carried out successfully, we need to narrow our search
    down to a website which contains data about the football matches in particular.
  prefs: []
  type: TYPE_NORMAL
- en: Once that is fixed, we will use the URL to the website to gain access to the
    HTML script of the page mainly.
  prefs: []
  type: TYPE_NORMAL
- en: Using this HTML code, the scraper will convert it to the required output format
    as needed (may be a spreadsheet or a list or a CSV/JSON file so on).
  prefs: []
  type: TYPE_NORMAL
- en: 'For the sake of this problem, we will be carrying out web-scraping on the data
    available on the website: [FBref.com](https://fbref.com/en/matches/e1867e7b/Sao-Paulo-Botafogo-RJ-April-27-2019-Serie-A)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The steps involved can be:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the “Competitions” section of the above-mentioned website.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select any mentioned competition (such as Premier League 2022-23) whose results
    you want to extract for making predictions on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to the “Scores & Fixtures” section under the selected competition section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The scores would be used to make predictions so we would need to web-scrape
    that information. Thus, copy the URL of the page.
  prefs: []
  type: TYPE_NORMAL
- en: 'For this case (let’s say, Premier League), the link would be: [https://fbref.com/en/comps/9/schedule/Premier-League-Scores-and-Fixtures#sched_2022-2023_9_1](https://fbref.com/en/comps/9/schedule/Premier-League-Scores-and-Fixtures#sched_2022-2023_9_1)'
  prefs: []
  type: TYPE_NORMAL
- en: You could also get the link to some other competition as needed.
  prefs: []
  type: TYPE_NORMAL
- en: However, it is to be noted that we could also use any other website for carrying
    out the detection as well.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For instance, we could web-scrape the results of a match off of Wikipedia itself
    simply by providing the link to the match scores, such as, [https://en.wikipedia.org/wiki/2022_FIFA_World_Cup](https://en.wikipedia.org/wiki/2022_FIFA_World_Cup)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: For performing actual web-scraping, the copied URL would need to be provided
    to the web-scraping script or code for extracting the relevant match data.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The script would be used to combine all the games in one season into a list
    or a .csv file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The copied URL from above would be given as input, along with the id of the
    tables containing information about the championship.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The compiled list comprising all the matches would be received as output.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The information that is unnecessary is omitted, such as the player statistical
    data.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The information is restricted to contain only match data mapped to team data
    so that predictions as to which team will win can be made.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The result is appended to contain the data about matches and teams (omitting
    player-specific information) with the help of a Data frame.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is majorly how web-scraping is done and the extracted data is the past
    data on the basis of which predictions will be made about future winners.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us understand this with the help of the following code snippets:'
  prefs: []
  type: TYPE_NORMAL
- en: First, we will import the necessary libraries.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Next, we will use Beautiful Soup to create a soup to extract the HTML code for
    the website.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Then, we will extract information for the matches on the basis of which we would
    predict, for instance, the data for the FIFA World Cup matches.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Next, we will extract the data/scores for the home and away teams.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Finally, we will store the data in a DataFrame to be exported to a .csv file.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 2\. Data Pre-Processing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It becomes crucial to process the data prior to running actual detection models
    on it. Thus, we will do the same in this scenario as well.
  prefs: []
  type: TYPE_NORMAL
- en: The steps include creating a variable to store the mean value of the scores
    won in previous matches.
  prefs: []
  type: TYPE_NORMAL
- en: This is because detection can only be made on the data that is already available
    to us since we do not have access to any future data.
  prefs: []
  type: TYPE_NORMAL
- en: We will calculate the average for the different variables storing information
    about the season matches.
  prefs: []
  type: TYPE_NORMAL
- en: Along with this, we will also store moving averages for various other variables.
  prefs: []
  type: TYPE_NORMAL
- en: The scores for a team were summed with each win quantified as 3, a draw point
    as 2, and a loss as 1\. These values were used to sum all the scores of a team
    in the past few matches.
  prefs: []
  type: TYPE_NORMAL
- en: Next, to ensure that the distinction between home team and away team is made,
    we can do appropriate calculations.
  prefs: []
  type: TYPE_NORMAL
- en: However, for this case, we can assume that the results need to be derived for
    the FIFA World Cup.
  prefs: []
  type: TYPE_NORMAL
- en: Since the tournament comprises matches on neutral grounds, we can ignore the
    concept of home team and away team in this particular case.
  prefs: []
  type: TYPE_NORMAL
- en: If at all, we need to consider them, we have to keep in mind to subtract the
    results of the home team from that of the away team to check if the home team
    is superior or not to the away team.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Implementing Prediction Models
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For carrying out the actual detection, we can use different kinds of prediction
    models. In this case, we will consider 3-4 models for implementing the actual
    prediction. The models being considered for the prediction here, are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Poisson Distribution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Poisson distribution is a prediction algorithm that is used for detecting how
    probable an event is by defining the probability within a fixed interval and having
    a constant mean rate.
  prefs: []
  type: TYPE_NORMAL
- en: A Poisson distribution predicts how many times an event might occur in a particular
    interval. This means that it helps provide a measure of the probability of an
    event, rather than a simple probable or not probable outcome.
  prefs: []
  type: TYPE_NORMAL
- en: This is why it is suitable for multi-classification problems generally, but
    works just as well for binary problems too (considering the two classes as the
    multi-classes in the dataset).
  prefs: []
  type: TYPE_NORMAL
- en: 'The code snippets used for the implementation is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Defining a function “predict” to calculate points for Home Team and Away Team.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Next, use the formula for Poisson distribution to calculate the value of “p”
    as can be seen below.
  prefs: []
  type: TYPE_NORMAL
- en: This value is then used to calculate respective probabilities for draw (pr_draw),
    home team as winner (pr_home) and away team as winner (pr_away).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The points for both Home Team and Away Team are calculated separately and then
    used to make the final prediction.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: This is how we can make a basic prediction for a football game winner with the
    help of a machine learning model (in this case, Poisson distribution).
  prefs: []
  type: TYPE_NORMAL
- en: This particular approach can be extended to other models as well by simply changing
    the formula for the predictive model under consideration.
  prefs: []
  type: TYPE_NORMAL
- en: The final result would be then evaluated for different models in the form of
    a comparative study to ensure that we get the best results using the most appropriate
    model available out there.
  prefs: []
  type: TYPE_NORMAL
- en: Let us take a brief look at the various other models we can also use for making
    a similar prediction.
  prefs: []
  type: TYPE_NORMAL
- en: Support Vector Machine
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: SVM or Support Vector Machine is an algorithm based on supervised machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: It is majorly used for classification problems. It classifies by creating a
    boundary between the various kinds of data.
  prefs: []
  type: TYPE_NORMAL
- en: Since it operates as a separation between two data entities, it can be thought
    of as a binary classification solution majorly.
  prefs: []
  type: TYPE_NORMAL
- en: But it can be modified or extended to multi-class classifications as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'To carry out an SVM prediction using Python programming, we can use the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Here, svc_predict is the SVM calculation for the training data denoted as x_train
    and y_train here. The x_train and y_train comprise the data on which the model
    is trained while x_test and y_test denotes the data on which the model is tested.
  prefs: []
  type: TYPE_NORMAL
- en: KNN
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: K-Nearest Neighbours or KNN is an algorithm which is also based on supervised
    machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: It performs classification of data with the help of class labels. Basically,
    the classes are labelled to create a separation.
  prefs: []
  type: TYPE_NORMAL
- en: Every data entity belonging to the same type has the same class label.
  prefs: []
  type: TYPE_NORMAL
- en: For regression cases, the prediction is made by taking the average of the “K”
    nearest neighbours.
  prefs: []
  type: TYPE_NORMAL
- en: The distance between neighbours is usually the Euclidean distance between them.
  prefs: []
  type: TYPE_NORMAL
- en: However, any other distance metric could also be used for the same.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Logistic Regression
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Logistic regression is a linear model for binary classification problems.
  prefs: []
  type: TYPE_NORMAL
- en: It can be used to make predictions about how probable an event is and this is
    why we use it for the case.
  prefs: []
  type: TYPE_NORMAL
- en: In the case of a logistic regression, the dependent variable is bounded in the
    range between 0 and 1\.
  prefs: []
  type: TYPE_NORMAL
- en: This is why it works well for binary classification problems, such as a win
    or lose scenario for a football match.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 4\. Evaluating Results Using Metrics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To evaluate the results obtained through the use of different models, we can
    use metrics to map which model performed better than the rest.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, we could calculate accuracy to determine the quality of performance of
    the models. The formula for the same might be stated as below:'
  prefs: []
  type: TYPE_NORMAL
- en: Accuracy = (True Positives + True Negatives) /
  prefs: []
  type: TYPE_NORMAL
- en: (True Positives + False Negatives + True Negatives + False Positives)
  prefs: []
  type: TYPE_NORMAL
- en: A true positive is a correctly predicted positive outcome. Similarly, a true
    negative is a correctly predicted negative outcome.
  prefs: []
  type: TYPE_NORMAL
- en: A false negative is a wrongly predicted negative outcome. Similarly, a false
    positive is a wrongly predicted positive outcome.
  prefs: []
  type: TYPE_NORMAL
- en: To check for accuracy, we need to compare the predicted outputs with the real
    outputs. This is how we can check which model makes a prediction which is the
    closest to the actual result.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The particular problem was a complex one and still we could achieve the result
    easily with the help of Python programming.
  prefs: []
  type: TYPE_NORMAL
- en: Even though the results are not absolutely accurate, the algorithm still shows
    how Python programming is changing the world everyday.
  prefs: []
  type: TYPE_NORMAL
- en: The algorithm can predict the results logically with ease, a task which, perhaps,
    humans cannot achieve without prior information about the games.
  prefs: []
  type: TYPE_NORMAL
- en: Using such prediction models, we can finetune them and achieve even better results
    in future.
  prefs: []
  type: TYPE_NORMAL
- en: Hope you have understood how to predict the data by using python and machine
    learning. You can learn more about python from free resources such as [KDnuggets](/2022/09/free-python-data-science-course.html),
    [Scaler](https://www.scaler.com/topics/python/), or [freecodecamp](https://www.freecodecamp.org/news/learning-python-from-zero-to-hero-120ea540b567/).
  prefs: []
  type: TYPE_NORMAL
- en: Happy Learning!
  prefs: []
  type: TYPE_NORMAL
- en: '**[Vaishnavi Amira Yada](https://www.linkedin.com/in/vaishnavi-amira-yada/)**
    is a technical content writer. She have knowledge of Python, Java, DSA, C, etc.
    She found herself in writing and she loved it.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Data Lakes and SQL: A Match Made in Data Heaven](https://www.kdnuggets.com/2023/01/data-lakes-sql-match-made-data-heaven.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Learn modern forecasting techniques to help predict future business…](https://www.kdnuggets.com/2022/12/sphere-learn-modern-forecasting-techniques-help-predict-future-business-outcomes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Learning How to Use ChatGPT to Learn Python (or anything else)](https://www.kdnuggets.com/2023/02/learn-python-chatgpt.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How To Use Synthetic Data To Overcome Data Shortages For Machine…](https://www.kdnuggets.com/2022/03/synthetic-data-overcome-data-shortages-machine-learning-model-training.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[4 Reasons Why You Shouldn’t Use Machine Learning](https://www.kdnuggets.com/2021/12/4-reasons-shouldnt-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How You Can Use Machine Learning to Automatically Label Data](https://www.kdnuggets.com/2022/02/machine-learning-automatically-label-data.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
