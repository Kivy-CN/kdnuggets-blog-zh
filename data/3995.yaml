- en: Understanding and Implementing Genetic Algorithms in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解和实现Python中的遗传算法
- en: 原文：[https://www.kdnuggets.com/understanding-and-implementing-genetic-algorithms-in-python](https://www.kdnuggets.com/understanding-and-implementing-genetic-algorithms-in-python)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/understanding-and-implementing-genetic-algorithms-in-python](https://www.kdnuggets.com/understanding-and-implementing-genetic-algorithms-in-python)
- en: '![Understanding and Implementing Genetic Algorithms in Python](../Images/c6d9ecd841fb100f95d4673de0425ed3.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![理解和实现Python中的遗传算法](../Images/c6d9ecd841fb100f95d4673de0425ed3.png)'
- en: Image by Author Genetic algorithms are techniques based on natural selection
    used to solve complex problems. They are used to arrive at reasonable solutions
    to the problem rather than other methods because the problems are complicated.
    In this article, we will cover the basics of genetic algorithms and how they can
    be implemented in Python.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者 遗传算法是基于自然选择的技术，用于解决复杂问题。由于问题复杂，遗传算法相比其他方法能提供合理的解决方案。本文将介绍遗传算法的基本概念及如何在
    Python 中实现它们。
- en: '* * *'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持组织的IT需求'
- en: '* * *'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Genetic Components
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 遗传组件
- en: Fitness Function
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 适应度函数
- en: The fitness function gauges the proximity of a considered solution to the best
    possible solution to the problem. It provides a fitness level for each person
    in the population, which describes the quality or efficiency of the current generation.
    This score defines the choice while the higher fitness value suggests an improved
    solution.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 适应度函数评估考虑的解决方案与问题的最佳解决方案之间的接近程度。它为种群中的每个人提供一个适应度水平，这描述了当前世代的质量或效率。这个分数定义了选择标准，而较高的适应度值则意味着更优的解决方案。
- en: For instance, suppose we are involved in the process of dealing with an actual
    function, f(x) in which x is a set of parameters. The optimal value to find is
    x so that f(x) assumes the largest value.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 比如，假设我们处理一个实际函数 f(x)，其中 x 是一组参数。我们要找到的最优值是 x，使得 f(x) 取得最大值。
- en: Selection
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择
- en: This is a process that defines which individuals within the present generation
    are to be favored and thus reproduce and contribute to the next generation. It
    is possible to identify many selection methods, and each of them has its own features
    and suitable contexts.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个定义在当前世代中哪些个体应被优先选择，从而繁殖并贡献给下一代的过程。可以识别出多种选择方法，每种方法都有其自身的特点和适用的背景。
- en: '**Roulette Wheel Selection**:'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**轮盘赌选择**：'
- en: Depending on the fitness level of the individual, the probability of choosing
    the individual is also maximal.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 根据个体的适应度水平，选择该个体的概率也是最大化的。
- en: '**Tournament Selection**:'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**锦标赛选择**：'
- en: A group is randomly selected and the best of them is taken.
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 随机选择一组个体，并选择其中最优秀的个体。
- en: '**Rank-Based Selection**:'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于排名的选择**：'
- en: People are sorted according to fitness and selection chances are proportionally
    allocated according to the fitness scores.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 人员根据适应度排序，并按适应度分配选择机会。
- en: Crossover
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 交叉
- en: Crossover is a basic concept of genetic algorithm that aims at the exchange
    of genetic information of two parent individuals to form one or more progeny.
    This process is closely similar to the crossover and recombination of the biology
    happening in nature. Applying the basic principles of heredity, crossover attempts
    to produce offspring that will embody desirable characteristics of the parents
    and, thus, possess better adaptation in the next generations. Crossover is a relatively
    broad concept which can be divided into several types each of which has their
    peculiarities and the sphere where they can be applied effectively.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 交叉是遗传算法的基本概念，旨在交换两个父本个体的遗传信息以形成一个或多个后代。这个过程与自然界中生物学上的交叉和重组非常相似。应用遗传学的基本原则，交叉尝试生成具有父本优良特征的后代，从而在下一代中具有更好的适应性。交叉是一个相对广泛的概念，可以分为几种类型，每种类型都有其特性和有效应用的领域。
- en: '**Single-Point Crossover**: A crossover point is chosen on the parent chromosomes
    and only one crossover actually happens. Prior to this position all genes are
    taken from the first parent, and all genes since this position are taken from
    the second parent.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单点交叉**：在父染色体上选择一个交叉点，只发生一次交叉。在此位置之前的所有基因来自第一个父本，从此位置开始的所有基因来自第二个父本。'
- en: '**Two-Point Crossover**: Two breakpoints are selected and the part between
    them is swapped between the two parent chromosomes. It also favors interchanging
    of genetic information as opposed to single point crossover.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**双点交叉**：选择两个断点，并在它们之间的部分在两个父染色体之间交换。这也比单点交叉更有利于遗传信息的交换。'
- en: Mutation
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 突变
- en: In Genetic Algorithms, mutation is of paramount significance because it provides
    diversity which is a crucial factor when avoiding convergence directly towards
    the area of the optimum solutions. Therefore, getting random changes in the string
    of an individual mutation allows the algorithm to go into other regions of the
    solution space that it cannot reach by means of crossover operations alone. This
    stochastic process ensures that no matter what, the population will evolve or
    shift its position in the areas of the search space which have been identified
    as optimal by the genetic algorithm.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在遗传算法中，突变具有至关重要的意义，因为它提供了多样性，这在避免直接收敛到最优解区域时是一个关键因素。因此，通过单独的交叉操作无法到达的解空间其他区域，突变的随机变化使算法能够进入。这种随机过程确保无论如何，群体会进化或在遗传算法确定的最优搜索空间区域内移动。
- en: Steps To Implement A Genetic Algorithm
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实现遗传算法的步骤
- en: Let’s try to implement the genetic algorithm in Python.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试在Python中实现遗传算法。
- en: Problem Definition
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题定义
- en: 'Problem: Compute on the specific function; f(x) = x^2f(x) = x^2; only integer
    values of x.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 问题：计算特定函数；f(x) = x^2；仅整数值的x。
- en: 'Fitness Function: For the case of a chromosome that is binary being x, an example
    of the fitness function could be f(x)= x^2.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 适应度函数：对于一个二进制染色体x，适应度函数的一个例子可以是 f(x)= x^2。
- en: '[PRE0]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Population Initialization
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 群体初始化
- en: Generate a random chromosome of a given length.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 生成一个给定长度的随机染色体。
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Fitness Evaluation
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 适应度评估
- en: Evaluate the fitness of each chromosome in the population.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 评估群体中每个染色体的适应度。
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Selection
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择
- en: Use roulette wheel selection to select parent chromosomes based on their fitness.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用轮盘赌选择法根据适应度选择父染色体。
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Crossover
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 交叉
- en: Use single-point crossover by choosing a random cross-over position in a parents’
    string and swapping all the gene values after this location between the two strings.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 通过选择父染色体字符串中的随机交叉位置，并交换此位置之后的所有基因值，来使用单点交叉。
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Mutation
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 突变
- en: Implement mutation by flipping bits with a certain probability.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 通过以一定概率翻转比特来实现突变。
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Wrapping Up
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: To sum up, genetic algorithms are consistent and efficient for solving optimization
    problems that cannot be solved directly as they mimic the evolution of species.
    Thus, once you grasp the essentials of GAs and understand how to put them into
    practice in Python, the solution to complex tasks will be much easier. Selection,
    crossover, and mutation keys enable you to make modifications in solutions and
    get the best or nearly best answers constantly. Having read this article, you
    are prepared to apply the genetic algorithms to your own tasks and thereby improve
    in different tasks and problem solving.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，遗传算法由于模拟物种进化的过程，对于解决那些无法直接解决的优化问题是稳定且高效的。因此，一旦你掌握了遗传算法的基本原理，并理解如何在 Python
    中应用它们，复杂任务的解决将变得更加容易。选择、交叉和变异的关键使你能够在解决方案中进行修改，并不断获得最佳或接近最佳的答案。阅读了这篇文章，你已准备好将遗传算法应用于自己的任务，从而在不同任务和问题解决中取得进展。
- en: '**[Jayita Gulati](https://www.linkedin.com/in/jayitagulati1998/)** is a machine
    learning enthusiast and technical writer driven by her passion for building machine
    learning models. She holds a Master''s degree in Computer Science from the University
    of Liverpool.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Jayita Gulati](https://www.linkedin.com/in/jayitagulati1998/)** 是一位机器学习爱好者和技术写作者，她对构建机器学习模型充满热情。她拥有利物浦大学的计算机科学硕士学位。'
- en: More On This Topic
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Understanding by Implementing: Decision Tree](https://www.kdnuggets.com/2023/02/understanding-implementing-decision-tree.html)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通过实现理解：决策树](https://www.kdnuggets.com/2023/02/understanding-implementing-decision-tree.html)'
- en: '[Genetic Programming in Python: The Knapsack Problem](https://www.kdnuggets.com/2023/01/knapsack-problem-genetic-programming-python.html)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 中的遗传编程：背包问题](https://www.kdnuggets.com/2023/01/knapsack-problem-genetic-programming-python.html)'
- en: '[Optimizing Genes with a Genetic Algorithm](https://www.kdnuggets.com/2022/04/optimizing-genes-genetic-algorithm.html)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用遗传算法优化基因](https://www.kdnuggets.com/2022/04/optimizing-genes-genetic-algorithm.html)'
- en: '[Genetic Algorithm Key Terms, Explained](https://www.kdnuggets.com/2018/04/genetic-algorithm-key-terms-explained.html)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[遗传算法关键术语解释](https://www.kdnuggets.com/2018/04/genetic-algorithm-key-terms-explained.html)'
- en: '[Understanding Machine Learning Algorithms: An In-Depth Overview](https://www.kdnuggets.com/understanding-machine-learning-algorithms-an-indepth-overview)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[深入了解机器学习算法：全面概述](https://www.kdnuggets.com/understanding-machine-learning-algorithms-an-indepth-overview)'
- en: '[Implementing DBSCAN in Python](https://www.kdnuggets.com/2022/08/implementing-dbscan-python.html)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 Python 实现 DBSCAN](https://www.kdnuggets.com/2022/08/implementing-dbscan-python.html)'
