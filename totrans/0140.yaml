- en: 'ChatGPT CLI: Transform Your Command-Line Interface Into ChatGPT'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/07/chatgpt-cli-transform-commandline-interface-chatgpt.html](https://www.kdnuggets.com/2023/07/chatgpt-cli-transform-commandline-interface-chatgpt.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![ChatGPT CLI: Transform Your Command-Line Interface Into ChatGPT](../Images/784b8880ab1746c2088629c3398dade2.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by [storyset](https://www.freepik.com/free-vector/hand-coding-concept-illustration_21532467.htm#query=command%20prompt&position=4&from_view=search&track=ais)
    on [Freepik](https://www.freepik.com/)
  prefs: []
  type: TYPE_NORMAL
- en: ChatGPT is a part of everyone's life right now. The GPT model has provided the
    user with something that years ago did not exist, such as easy knowledge searching,
    marketing planning, code completion, and many others. It’s a system that would
    only evolve further in the future.
  prefs: []
  type: TYPE_NORMAL
- en: One common way to use ChatGPT is through the [web platform](https://chat.openai.com/),
    where we can explore and store the prompt result. But we can also use the OpenAI
    API, which many developers do. In turn, the API can also be used to extend the
    result into our Command-Line Interface (CLI).
  prefs: []
  type: TYPE_NORMAL
- en: How do we access ChatGPT into our CLI? Let’s learn about it.
  prefs: []
  type: TYPE_NORMAL
- en: ChatGPT CLI
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[ChatGPT CLI](https://github.com/marcolardera/chatgpt-cli) is a Python script
    to use ChatGPT in our CLI. Using the OpenAI API, we can easily access ChatGPT
    in our CLI, similar to when we use it on the website. Let’s try it out ourselves.'
  prefs: []
  type: TYPE_NORMAL
- en: First, we need OpenAI API Key, which you can get by registering on the [OpenAI
    Developer Platform](https://platform.openai.com/overview) and visiting the View
    API keys within your profile. After you create and acquire your API key, store
    them somewhere, as the key will not reappear after being generated.
  prefs: []
  type: TYPE_NORMAL
- en: Next, clone the ChatGPT CLI repository onto your system using the following
    code in the CLI.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: If you have cloned the repository, change your directory to the chatgpt-cli
    folder.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Inside the folder, install the requirement using this code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Then, we would need to explore the folder previously cloned with IDE. In this
    example, I would use Visual Studio Code. When you have explored the folder, the
    content should look like the image below.
  prefs: []
  type: TYPE_NORMAL
- en: '![ChatGPT CLI: Transform Your Command-Line Interface Into ChatGPT](../Images/c06867f1e3cf8cc1da71f919edd04ddb.png)'
  prefs: []
  type: TYPE_IMG
- en: Inside them, access the config.yaml file and replace the api-key parameter with
    your OpenAI API Key.
  prefs: []
  type: TYPE_NORMAL
- en: '![ChatGPT CLI: Transform Your Command-Line Interface Into ChatGPT](../Images/f672c692f6ad1e1c4da75741c8bfaf17.png)'
  prefs: []
  type: TYPE_IMG
- en: You can also change the parameter you want to pass into the API. You can refer
    to my [previous article](/2023/04/text-summarization-development-python-tutorial-gpt35.html)
    to understand all the parameters available from the OpenAI API.
  prefs: []
  type: TYPE_NORMAL
- en: We can now use the CLI as ChatGPT with all the settings set. To do that, you
    only need to run the following code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![ChatGPT CLI: Transform Your Command-Line Interface Into ChatGPT](../Images/8abf4be3a1fe113ff43604c7743039a7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Just try to type anything on the CLI, and you will get the result immediately.
    For example, I pass the prompt, “ Give me the list of song recommendations from
    the 1990s.”![ChatGPT CLI: Transform Your Command-Line Interface Into ChatGPT](../Images/111375a04c65b013b0f8e4f167111dae.png)'
  prefs: []
  type: TYPE_NORMAL
- en: The result shows up in the CLI, similar to the image above. We can also continue
    the prompt similar to how we use the ChatGPT in the web platform.
  prefs: []
  type: TYPE_NORMAL
- en: '![ChatGPT CLI: Transform Your Command-Line Interface Into ChatGPT](../Images/78cbbf8a224b029db7535c439c4be2b4.png)'
  prefs: []
  type: TYPE_IMG
- en: The number that shows up before each prompt is the number of tokens that have
    been used so that we can be cautious about them as well.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, you can use the multi-line mode if you have a long prompt by adding
    the -ml parameter before launching the script.
  prefs: []
  type: TYPE_NORMAL
- en: '![ChatGPT CLI: Transform Your Command-Line Interface Into ChatGPT](../Images/c4a6c3715827612fefcc3cd7e23d4966.png)'
  prefs: []
  type: TYPE_IMG
- en: Finally, use the /q command if you want to quit. When you finish, the ChatGPT
    CLI will show you the number of tokens you have used and the estimated expense
    from your activity.
  prefs: []
  type: TYPE_NORMAL
- en: '![ChatGPT CLI: Transform Your Command-Line Interface Into ChatGPT](../Images/b13866c0874e15b1dd2ba7e927132868.png)'
  prefs: []
  type: TYPE_IMG
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ChatGPT is here to stay, and we should use them as maximum as possible. In this
    tutorial, we will learn how to use ChatGPT CLI to perform ChatGPT prompting in
    our Command-Line Interface.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Cornellius Yudha Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**
    is a data science assistant manager and data writer. While working full-time at
    Allianz Indonesia, he loves to share Python and Data tips via social media and
    writing media.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[GitHub CLI for Data Science Cheat Sheet](https://www.kdnuggets.com/2023/03/github-cli-data-science-cheat-sheet.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Started with GitHub CLI](https://www.kdnuggets.com/2023/03/getting-started-github-cli.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introducing DataCamps AI-Powered Chat Interface: DataLab](https://www.kdnuggets.com/introducing-datacamps-ai-powered-chat-interface-datalab)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How Artificial Intelligence Can Transform Data Integration](https://www.kdnuggets.com/2022/04/artificial-intelligence-transform-data-integration.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How Data Science Can Transform Mobile App Development?](https://www.kdnuggets.com/2023/03/data-science-transform-mobile-app-development.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Leveraging GPT Models to Transform Natural Language to SQL Queries](https://www.kdnuggets.com/leveraging-gpt-models-to-transform-natural-language-to-sql-queries)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
