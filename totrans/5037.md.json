["```py\nsudo pip install vincent\n\n```", "```py\nimport vincent\n\nword_freq = count_terms_only.most_common(20)\nlabels, freq = zip(*word_freq)\ndata = {'data': freq, 'x': labels}\nbar = vincent.Bar(data, iter_idx='x')\nbar.to_json('term_freq.json')\n\n```", "```py\n<html>  \n<head>    \n    <title>Vega Scaffold</title>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script src=\"http://d3js.org/topojson.v1.min.js\"></script>\n    <script src=\"http://d3js.org/d3.geo.projection.v0.min.js\" charset=\"utf-8\"></script>\n    <script src=\"http://trifacta.github.com/vega/vega.js\"></script>\n</head>\n<body>\n    <div id=\"vis\"></div>\n</body>\n<script type=\"text/javascript\">\n// parse a spec and create a visualization view\nfunction parse(spec) {\n  vg.parse.spec(spec, function(chart) { chart({el:\"#vis\"}).update(); });\n}\nparse(\"term_freq.json\");\n</script>\n</html>\n\n```", "```py\npython -m http.server 8888 # Python 3\npython -m SimpleHTTPServer 8888 # Python 2\n\n```", "```py\nbar.to_json('term_freq.json', html_out=True, html_path='chart.html')\n\n```", "```py\nsudo pip install pandas\n\n```", "```py\nimport pandas\nimport json\n\ndates_ITAvWAL = []\n# f is the file pointer to the JSON data set\nfor line in f:\n    tweet = json.loads(line)\n    # let's focus on hashtags only at the moment\n    terms_hash = [term for term in preprocess(tweet['text']) if term.startswith('#')]\n    # track when the hashtag is mentioned\n    if '#itavwal' in terms_hash:\n        dates_ITAvWAL.append(tweet['created_at'])\n\n# a list of \"1\" to count the hashtags\nones = [1]*len(dates_ITAvWAL)\n# the index of the series\nidx = pandas.DatetimeIndex(dates_ITAvWAL)\n# the actual series (at series of 1s for the moment)\nITAvWAL = pandas.Series(ones, index=idx)\n\n# Resampling / bucketing\nper_minute = ITAvWAL.resample('1Min', how='sum').fillna(0)\n\n```", "```py\ntime_chart = vincent.Line(ITAvWAL)\ntime_chart.axis_titles(x='Time', y='Freq')\ntime_chart.to_json('time_chart.json')\n\n```", "```py\n# all the data together\nmatch_data = dict(ITAvWAL=per_minute_i, SCOvIRE=per_minute_s, ENGvFRA=per_minute_e)\n# we need a DataFrame, to accommodate multiple series\nall_matches = pandas.DataFrame(data=match_data,\n                               index=per_minute_i.index)\n# Resampling as above\nall_matches = all_matches.resample('1Min', how='sum').fillna(0)\n\n# and now the plotting\ntime_chart = vincent.Line(all_matches[['ITAvWAL', 'SCOvIRE', 'ENGvFRA']])\ntime_chart.axis_titles(x='Time', y='Freq')\ntime_chart.legend(title='Matches')\ntime_chart.to_json('time_chart.json')\n\n```"]