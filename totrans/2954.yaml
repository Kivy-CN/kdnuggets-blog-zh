- en: How to fix an Unbalanced Dataset
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/05/fix-unbalanced-dataset.html](https://www.kdnuggets.com/2019/05/fix-unbalanced-dataset.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '**By [Will Badr](https://www.linkedin.com/in/willbadr/), Amazon Web Services**.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a0c36dc828d91a7fd4dd14345fe94e03.png)'
  prefs: []
  type: TYPE_IMG
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '**C**lassification is one of the most common machine learning problems. The
    best way to approach any classification problem is to start by analyzing and exploring
    the dataset in what we call **E**xploratory **D**ata **A**nalysis **(EDA)**. The
    sole purpose of this exercise is to generate as many insights and information
    about the data as possible. It is also used to find any problems that might exist
    in the dataset. One of the common issues found in datasets that are used for classification
    is **imbalanced classes** issue.'
  prefs: []
  type: TYPE_NORMAL
- en: '**What Is Data Imbalance?**'
  prefs: []
  type: TYPE_NORMAL
- en: Data imbalance usually reflects an unequal distribution of classes within a
    dataset. For example, in a credit card fraud detection dataset, most of the credit
    card transactions are not fraud and a very few classes are fraud transactions.
    This leaves us with something like 50:1 ratio between the fraud and non-fraud
    classes. In this article, I will use the credit card fraud transactions dataset
    from Kaggle which can be downloaded from [here](https://www.kaggle.com/mlg-ulb/creditcardfraud).
  prefs: []
  type: TYPE_NORMAL
- en: First, let’s plot the class distribution to see the imbalance.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/659df8fb4da2a00a010ded4d8f603c34.png)'
  prefs: []
  type: TYPE_IMG
- en: As you can see, the non-fraud transactions far outweigh the fraud transactions.
    If we train a binary classification model without fixing this problem, the model
    will be completely biased. It also impacts the correlations between features and
    I will show you how and why later on.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s cover a few techniques to solve the class imbalance problem. A notebook
    with the complete code can be found [HERE](https://github.com/wmlba/innovate2019/blob/master/Credit_Card_Fraud_Detection.ipynb)
  prefs: []
  type: TYPE_NORMAL
- en: '1- Resampling (Oversampling and Undersampling):'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![](../Images/c68fc22efb83763dd54238e2a32d66d6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This is as intuitive as it sounds. **Undersampling** is the process where you
    randomly delete some of the observations from the majority class in order to match
    the numbers with the minority class. An easy way to do that is shown in the code
    below:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Undersampling the majority class**'
  prefs: []
  type: TYPE_NORMAL
- en: 'After undersampling the dataset, I plot it again and it shows an equal number
    of classes:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fa89234764b677e1021c4aaec75f637e.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Balanced Dataset (Undersampling)**'
  prefs: []
  type: TYPE_NORMAL
- en: The second resampling technique is called, **Oversampling**. This process is
    a little more complicated than undersampling. It is the process of generating
    synthetic data that tries to randomly generate a sample of the attributes from
    observations in the minority class. There are a number of methods used to oversample
    a dataset for a typical classification problem. The most common technique is called **SMOTE
    (**Synthetic Minority Over-sampling Technique). In simple terms, it looks at the
    feature space for the minority class data points and considers its *k* nearest
    neighbours.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/372e64a5fa87707d51b2a10ff9132f70.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Source: [https://imbalanced-learn.readthedocs.io/en/stable/over_sampling.html](https://imbalanced-learn.readthedocs.io/en/stable/over_sampling.html)**'
  prefs: []
  type: TYPE_NORMAL
- en: To code this in python, I use a library called [**imbalanced-learn**](https://imbalanced-learn.readthedocs.io/en/stable/index.html)** or
    imblearn. **The code below shows how to implement SMOTE.
  prefs: []
  type: TYPE_NORMAL
- en: Remember when I said how imbalanced data would affect the feature correlation?
    Let me show you the correlation before and after treating the imbalanced class.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before Resampling:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The code below plots the correlation matrix between all the features.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/786ad581fe38578951627b15e790440d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After Resampling:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![](../Images/3b8ff6dfe744fd5a687bb3ba725eb2a1.png)'
  prefs: []
  type: TYPE_IMG
- en: Notice that the feature correlation is much more obvious now. Before fixing
    the imbalance problem, most of the features did not show any correlation which
    would definitely have impacted the performance of the model. Since [**the feature
    correlation really matters**](https://towardsdatascience.com/why-feature-correlation-matters-a-lot-847e8ba439c4)to
    the overall model’s performance, it is important to fix the imbalance as it will
    also impact the ML model performance.
  prefs: []
  type: TYPE_NORMAL
- en: '2- Ensembling Methods (Ensemble of Sampler):'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Machine Learning, ensemble methods use multiple learning algorithms and techniques
    to obtain better performance than what could be obtained from any of the constituent
    learning algorithms alone. (Yes, just like a democratic voting system). When using
    ensemble classifiers, bagging methods become popular and it works by building
    multiple estimators on a different randomly selected subset of data. In the scikit-learn
    library, there is an ensemble classifier namedBaggingClassifier. However, this
    classifier does not allow to balance each subset of data. Therefore, when training
    on imbalanced data set, this classifier will favour the majority classes and create
    a biased model.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to fix this, we can use [**BalancedBaggingClassifier**](https://imbalanced-learn.readthedocs.io/en/stable/generated/imblearn.ensemble.BalancedBaggingClassifier.html#imblearn.ensemble.BalancedBaggingClassifier) from **imblearn **library.
    It allows the resampling of each subset of the dataset before training each estimator
    of the ensemble. Therefore, [**BalancedBaggingClassifier**](https://imbalanced-learn.readthedocs.io/en/stable/generated/imblearn.ensemble.BalancedBaggingClassifier.html#imblearn.ensemble.BalancedBaggingClassifier) takes
    the same parameters as the scikit-learn BaggingClassifierin addition to two other
    parameters, sampling_strategy and replacement which control the behaviour of the
    random sampler. Here is some code that shows how to do this:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Train Imbalanced Dataset using Ensembling Samplers**'
  prefs: []
  type: TYPE_NORMAL
- en: That way, you can train a classifier that will handle the imbalance without
    having to undersample or oversample manually before training.
  prefs: []
  type: TYPE_NORMAL
- en: In Conclusion, everyone should know that the overall performance of ML models
    built on imbalanced datasets, will be constrained by its ability to predict rare
    and minority points. Identifying and resolving the imbalance of those points is
    crucial to the quality and performance of the generated models.
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/having-an-imbalanced-dataset-here-is-how-you-can-solve-it-1640568947eb).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio**: [Will Badr](https://www.linkedin.com/in/willbadr/) is an experienced
    Senior Technical Account Manager with a demonstrated history of working in the
    information technology and services industry. Focusing on the Artificial Intelligence
    and Machine Learning Profile and spreading the innovation culture.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Resources:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[On-line and web-based: Analytics, Data Mining, Data Science, Machine Learning
    education](https://www.kdnuggets.com/education/online.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Software for Analytics, Data Science, Data Mining, and Machine Learning](https://www.kdnuggets.com/software/index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Top R Packages for Data Cleaning](https://www.kdnuggets.com/2019/03/top-r-packages-data-cleaning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Preparing for the Unexpected](https://www.kdnuggets.com/2019/02/preparing-unexpected.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Acquiring Labeled Data to Train Your Models at Low Costs](https://www.kdnuggets.com/2019/02/labeled-data-train-models.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[10 Most Common Data Quality Issues and How to Fix Them](https://www.kdnuggets.com/2022/11/10-common-data-quality-issues-fix.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Correctly Select a Sample From a Huge Dataset in Machine Learning](https://www.kdnuggets.com/2019/05/sample-huge-dataset-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Choosing the Right Clustering Algorithm for Your Dataset](https://www.kdnuggets.com/2019/10/right-clustering-algorithm.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Create a Dataset for Machine Learning](https://www.kdnuggets.com/2022/02/create-dataset-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Generate Synthetic Tabular Dataset](https://www.kdnuggets.com/2022/03/generate-tabular-synthetic-dataset.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Unsupervised Disentangled Representation Learning in Class…](https://www.kdnuggets.com/2023/01/unsupervised-disentangled-representation-learning-class-imbalanced-dataset-elastic-infogan.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
