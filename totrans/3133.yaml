- en: Ten Machine Learning Algorithms You Should Know to Become a Data Scientist
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2018/04/10-machine-learning-algorithms-data-scientist.html/2](https://www.kdnuggets.com/2018/04/10-machine-learning-algorithms-data-scientist.html/2)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 6\. Feedforward Neural Networks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: These are basically multilayered Logistic Regression classifiers. Many layers
    of weights separated by non-linearities (sigmoid, tanh, relu + softmax and the
    cool new selu). Another popular name for them is Multi-Layered Perceptrons. FFNNs
    can be used for classification and unsupervised feature learning as autoencoders.
  prefs: []
  type: TYPE_NORMAL
- en: '![machine learning algorithms](../Images/b73e7922fae61090203dc0ec473f9f81.png)'
  prefs: []
  type: TYPE_IMG
- en: Multi-Layered perceptron
  prefs: []
  type: TYPE_NORMAL
- en: '![machine learning algorithms](../Images/1e53aeab5704a84516b7e95581213348.png)'
  prefs: []
  type: TYPE_IMG
- en: FFNN as an autoencoder
  prefs: []
  type: TYPE_NORMAL
- en: FFNNs can be used to train a classifier or extract features as autoencoders
  prefs: []
  type: TYPE_NORMAL
- en: '**Libraries:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html#sklearn.neural_network.MLPClassifier](http://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html#sklearn.neural_network.MLPClassifier)'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPRegressor.html](http://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPRegressor.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/keras-team/keras/blob/master/examples/reuters_mlp_relu_vs_selu.py](https://github.com/keras-team/keras/blob/master/examples/reuters_mlp_relu_vs_selu.py)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Introductory Tutorial(s):**'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.deeplearningbook.org/contents/mlp.html](http://www.deeplearningbook.org/contents/mlp.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.deeplearningbook.org/contents/autoencoders.html](http://www.deeplearningbook.org/contents/autoencoders.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.deeplearningbook.org/contents/representation.html](http://www.deeplearningbook.org/contents/representation.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 7\. Convolutional Neural Networks (Convnets)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Almost any state of the art Vision based Machine Learning result in the world
    today has been achieved using Convolutional Neural Networks. They can be used
    for Image classification, Object Detection or even segmentation of images. Invented
    by Yann Lecun in late 80s-early 90s, Convnets feature convolutional layers which
    act as hierarchical feature extractors. You can use them in text too (and even
    graphs).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4b9d7421c900673e7f954c1822d35b4d.png)'
  prefs: []
  type: TYPE_IMG
- en: Use convnets for state of the art image and text classification, object detection,
    image segmentation.
  prefs: []
  type: TYPE_NORMAL
- en: '**Libraries:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://developer.nvidia.com/digits](https://developer.nvidia.com/digits)'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/kuangliu/torchcv](https://github.com/kuangliu/torchcv)'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/chainer/chainercv](https://github.com/chainer/chainercv)'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://keras.io/applications/](https://keras.io/applications/)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Introductory Tutorial(s):**'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://cs231n.github.io/](http://cs231n.github.io/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://adeshpande3.github.io/A-Beginner%27s-Guide-To-Understanding-Convolutional-Neural-Networks/](https://adeshpande3.github.io/A-Beginner''s-Guide-To-Understanding-Convolutional-Neural-Networks/)'
  prefs: []
  type: TYPE_NORMAL
- en: '8\. Recurrent Neural Networks (RNNs):'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: RNNs model sequences by applying the same set of weights recursively on the
    aggregator state at a time t and input at a time t (Given a sequence has inputs
    at times 0..t..T, and have a hidden state at each time t which is output from
    t-1 step of RNN). Pure RNNs are rarely used now but its counterparts like LSTMs
    and GRUs are state of the art in most sequence modeling tasks.
  prefs: []
  type: TYPE_NORMAL
- en: '![machine learning algorithms](../Images/9df42b9af4a17bfb507f092586a6b63f.png)'
  prefs: []
  type: TYPE_IMG
- en: RNN (If here is a densely connected unit and a nonlinearity, nowadays f is generally
    LSTMs or GRUs ). LSTM unit which is used instead of a plain dense layer in a pure
    RNN.
  prefs: []
  type: TYPE_NORMAL
- en: '![machine learning algorithms](../Images/a2e8504e97e3117fc1659842b6a95898.png)'
  prefs: []
  type: TYPE_IMG
- en: Use RNNs for any sequence modelling task specially text classification, machine
    translation, language modelling
  prefs: []
  type: TYPE_NORMAL
- en: '**Library:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/tensorflow/models](https://github.com/tensorflow/models) (Many
    cool NLP research papers from Google are here)'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/wabyking/TextClassificationBenchmark](https://github.com/wabyking/TextClassificationBenchmark)'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://opennmt.net/](http://opennmt.net/)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Introductory Tutorial(s):**'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://cs224d.stanford.edu/](http://cs224d.stanford.edu/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.wildml.com/category/neural-networks/recurrent-neural-networks/](http://www.wildml.com/category/neural-networks/recurrent-neural-networks/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://colah.github.io/posts/2015-08-Understanding-LSTMs/](http://colah.github.io/posts/2015-08-Understanding-LSTMs/)'
  prefs: []
  type: TYPE_NORMAL
- en: 9\. Conditional Random Fields (CRFs)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: CRFs are probably the most frequently used models from the family of Probabilitic
    Graphical Models (PGMs). They are used for sequence modeling like RNNs and can
    be used in combination with RNNs too. Before Neural Machine Translation systems
    came in CRFs were the state of the art and in many sequence tagging tasks with
    small datasets, they will still learn better than RNNs which require a larger
    amount of data to generalize. They can also be used in other structured prediction
    tasks like Image Segmentation etc. CRF models each element of the sequence (say
    a sentence) such that neighbors affect a label of a component in a sequence instead
    of all labels being independent of each other.
  prefs: []
  type: TYPE_NORMAL
- en: Use CRFs to tag sequences (in Text, Image, Time Series, DNA etc.)
  prefs: []
  type: TYPE_NORMAL
- en: '**Library:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://sklearn-crfsuite.readthedocs.io/en/latest/](https://sklearn-crfsuite.readthedocs.io/en/latest/)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Introductory Tutorial(s):**'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://blog.echen.me/2012/01/03/introduction-to-conditional-random-fields/](http://blog.echen.me/2012/01/03/introduction-to-conditional-random-fields/)'
  prefs: []
  type: TYPE_NORMAL
- en: 7 part lecture series by Hugo Larochelle on Youtube: [https://www.youtube.com/watch?v=GF3iSJkgPbA](https://www.youtube.com/watch?v=GF3iSJkgPbA)
  prefs: []
  type: TYPE_NORMAL
- en: 10\. Decision Trees
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let’s say I am given an Excel sheet with data about various fruits and I have
    to tell which look like Apples. What I will do is ask a question “Which fruits
    are red and round ?” and divide all fruits which answer yes and no to the question.
    Now, All Red and Round fruits might not be apples and all apples won’t be red
    and round. So I will ask a question “Which fruits have red or yellow color hints
    on them? ” on red and round fruits and will ask “Which fruits are green and round
    ?” on not red and round fruits. Based on these questions I can tell with considerable
    accuracy which are apples. This cascade of questions is what a decision tree is.
    However, this is a decision tree based on my intuition. Intuition cannot work
    on high dimensional and complex data. We have to come up with the cascade of questions
    automatically by looking at tagged data. That is what Machine Learning based decision
    trees do. Earlier versions like CART trees were once used for simple data, but
    with bigger and larger dataset, the bias-variance tradeoff needs to solved with
    better algorithms. The two common decision trees algorithms used nowadays are
    Random Forests (which build different classifiers on a random subset of attributes
    and combine them for output) and Boosting Trees (which train a cascade of trees
    one on top of others, correcting the mistakes of ones below them).
  prefs: []
  type: TYPE_NORMAL
- en: Decision Trees can be used to classify datapoints (and even regression)
  prefs: []
  type: TYPE_NORMAL
- en: '**Libraries**'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html](http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.GradientBoostingClassifier.html](http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.GradientBoostingClassifier.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://xgboost.readthedocs.io/en/latest/](http://xgboost.readthedocs.io/en/latest/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://catboost.yandex/](https://catboost.yandex/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Introductory Tutorial:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[http://xgboost.readthedocs.io/en/latest/model.html](http://xgboost.readthedocs.io/en/latest/model.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://arxiv.org/abs/1511.05741](https://arxiv.org/abs/1511.05741)'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://arxiv.org/abs/1407.7502](https://arxiv.org/abs/1407.7502)'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://education.parrotprediction.teachable.com/p/practical-xgboost-in-python](http://education.parrotprediction.teachable.com/p/practical-xgboost-in-python)'
  prefs: []
  type: TYPE_NORMAL
- en: '**TD Algorithms (Good To Have)**'
  prefs: []
  type: TYPE_NORMAL
- en: If you are still wondering how can any of the above methods solve tasks like
    defeating Go world champion like DeepMind did, they cannot. All the 10 type of
    algorithms we talked about before this was Pattern Recognition, not strategy learners.
    To learn strategy to solve a multi-step problem like winning a game of chess or
    playing Atari console, we need to let an agent-free in the world and learn from
    the rewards/penalties it faces. This type of Machine Learning is called Reinforcement
    Learning. A lot (not all) of recent successes in the field is a result of combining
    perception abilities of a Convnet or LSTM to a set of algorithms called Temporal
    Difference Learning. These include Q-Learning, SARSA and some other variants.
    These algorithms are a smart play on Bellman’s equations to get a loss function
    that can be trained with rewards an agent gets from the environment.
  prefs: []
  type: TYPE_NORMAL
- en: These algorithms are used to automatically play games mostly :D, also other
    applications in language generation and object detection.
  prefs: []
  type: TYPE_NORMAL
- en: '**Libraries:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/keras-rl/keras-rl](https://github.com/keras-rl/keras-rl)'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/tensorflow/minigo](https://github.com/tensorflow/minigo)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Introductory Tutorial(s):**'
  prefs: []
  type: TYPE_NORMAL
- en: Grab the free Sutton and Barto book: [https://web2.qatar.cmu.edu/~gdicaro/15381/additional/SuttonBarto-RL-5Nov17.pdf](https://web2.qatar.cmu.edu/~gdicaro/15381/additional/SuttonBarto-RL-5Nov17.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: Watch David Silver course: [https://www.youtube.com/watch?v=2pWv7GOvuf0](https://www.youtube.com/watch?v=2pWv7GOvuf0)
  prefs: []
  type: TYPE_NORMAL
- en: These are the 10 machine learning algorithms which you can learn to become a
    data scientist.
  prefs: []
  type: TYPE_NORMAL
- en: You can also read about machine learning libraries [here](https://blog.paralleldots.com/data-science/lesser-known-machine-learning-libraries-part-ii/).
  prefs: []
  type: TYPE_NORMAL
- en: We hope you liked the article. Please [Sign Up](http://user.apis.paralleldots.com/signing-up?utm_source=blog&utm_medium=chat&utm_campaign=paralleldots_blog) for
    a free ParallelDots account to start your AI journey. You can also check demo’s
    of PrallelDots AI APIs [here](https://www.paralleldots.com/ai-apis).
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://blog.paralleldots.com/data-science/machine-learning/ten-machine-learning-algorithms-know-become-data-scientist/).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Top 20 Deep Learning Papers, 2018 Edition](https://www.kdnuggets.com/2018/03/top-20-deep-learning-papers-2018.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Hierarchical Classification – a useful approach for predicting thousands of
    possible categories](https://www.kdnuggets.com/2018/03/hierarchical-classification.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 10 Deep Learning Methods AI Practitioners Need to Apply](https://www.kdnuggets.com/2017/12/10-deep-learning-methods-ai-practitioners-need-apply.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
