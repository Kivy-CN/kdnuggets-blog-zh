- en: Scikit-Learn vs mlr for Machine Learning
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Scikit-Learn与MLR在机器学习中的对比
- en: 原文：[https://www.kdnuggets.com/2019/09/scikit-learn-mlr-machine-learning.html](https://www.kdnuggets.com/2019/09/scikit-learn-mlr-machine-learning.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/09/scikit-learn-mlr-machine-learning.html](https://www.kdnuggets.com/2019/09/scikit-learn-mlr-machine-learning.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '![](../Images/4b0bc0e253bafaade27861da7aedba31.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4b0bc0e253bafaade27861da7aedba31.png)'
- en: Scikit-Learn is known for its easily understandable API for Python users, and
    MLR became an alternative to the popular Caret package with a larger suite of
    available algorithms and an easy way of tuning hyperparameters. These two packages
    are somewhat in competition due to the debate where many people involved in analytics
    turn to Python for machine learning and R for statistical analysis.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Scikit-Learn以其易于理解的Python用户API而闻名，而MLR成为了流行的Caret包的替代品，提供了更多的算法库和简单的超参数调整方式。这两个包因许多人在分析工作中倾向于使用Python进行机器学习而R用于统计分析而处于竞争状态。
- en: One of the reasons for a preference in using Python could be that current R
    packages for machine learning are provided via other packages that contain the
    algorithm. The packages are called through MLR but still require extra installation.
    Even external feature selection libraries are needed, and they will have other
    external dependencies that need to be satisfied as well.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Python的一个原因可能是当前用于机器学习的R包通过其他包含算法的包提供。这些包通过MLR调用，但仍需额外安装。甚至外部特征选择库也需要，且它们还有其他外部依赖需要满足。
- en: Scikit-Learn is dubbed as a unified API to a number of machine learning algorithms
    that do not require the user to call any more libraries.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Scikit-Learn被称为一个统一的API，提供多个机器学习算法，无需用户调用更多库。
- en: '**This by no means discredits R.** R is still a major component in the data
    science world regardless of what an online poll would say. Anyone with a background
    in Statistics and or Mathematics will know why you should use R (regardless of
    whether they use it themselves they recognize the appeal).'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**这绝不会贬低R。** R在数据科学领域仍然是一个主要组成部分，不论在线调查如何说。任何有统计学或数学背景的人都会知道为什么你应该使用R（即使他们自己不使用，它们也认识到它的吸引力）。'
- en: Now we will take a look at how a user would go through a typical machine learning
    workflow. We will proceed with Logistic Regression in Scikit-Learn and Decision
    Tree in MLR.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将查看用户如何通过典型的机器学习工作流。我们将使用Scikit-Learn中的Logistic Regression和MLR中的决策树。
- en: '**Creating Your Training and Test Data**'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**创建你的训练和测试数据**'
- en: Scikit-Learn
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Scikit-Learn
- en: '`x_train, x_test, y_train, y_test = train_test_split(x,y,test_size)`'
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`x_train, x_test, y_train, y_test = train_test_split(x,y,test_size)`'
- en: This is the simplest way to partition datasets in sci-kit learn. The test_size
    is to determine what percentage of the data goes into the test set. train_test_split
    will create a train and test set automatically in one line of code. x is the set
    of features and y is the target variable.
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是在Scikit-Learn中分割数据集的最简单方法。test_size用于确定数据的百分比进入测试集。train_test_split将自动在一行代码中创建训练集和测试集。x是特征集，y是目标变量。
- en: MLR
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MLR
- en: '`train <- sample(1:nrow(data), 0.8 * nrow(data))`'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`train <- sample(1:nrow(data), 0.8 * nrow(data))`'
- en: '`test <- setdiff(1:nrow(train), train)`'
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`test <- setdiff(1:nrow(train), train)`'
- en: MLR does not have an in-built function to subset datasets, so users need to
    rely on other R functions for this. This is an example of creating an 80/20 train
    test set.
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: MLR没有内置的函数来子集数据集，因此用户需要依赖其他R函数。这是创建80/20训练测试集的一个例子。
- en: '**Choosing an Algorithm**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**选择算法**'
- en: Scikit-Learn
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Scikit-Learn
- en: '`LogisticRegression()`'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LogisticRegression()`'
- en: The classifier is simply chosen and initialized by calling an obviously named
    function that makes it easy to identify.
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 分类器可以通过调用一个明显命名的函数来选择和初始化，这样便于识别。
- en: MLR
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MLR
- en: '`makeLearner(''classif.rpart'')` The algorithm is called a learner, and this
    function is called to initialize it.'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`makeLearner(''classif.rpart'')` 算法被称为学习器，这个函数被调用以初始化它。'
- en: '`makeClassifTask(data=, target=)` If we are doing classification, we need to
    make a call to initialize a classification task. This function will take two arguments:
    your training data and the name of the target variable.'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`makeClassifTask(data=, target=)` 如果我们进行分类，我们需要调用此函数来初始化分类任务。此函数将接受两个参数：训练数据和目标变量的名称。'
- en: '**Hyperparameter Tuning**'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**超参数调整**'
- en: In either package, there is a process to follow when tuning hyperparameters.
    You first need to specify which parameters you want to change and the space of
    those parameters. Then conduct either a grid search or random search to find the
    best combination of parameter estimates that give you the best outcome (i.e.,
    either minimize error or maximize accuracy).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何一个软件包中，调整超参数都有一个流程。你首先需要指定要改变哪些参数以及这些参数的范围。然后进行网格搜索或随机搜索，以找到最佳的参数组合，从而获得最佳结果（即，最小化错误或最大化准确度）。
- en: Scikit-Learn
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Scikit-Learn
- en: '`penalty = [''l2'']`'
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`penalty = [''l2'']`'
- en: '`C = np.logspace(0, 4, 10)`'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`C = np.logspace(0, 4, 10)`'
- en: '`dual= [False]`'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dual= [False]`'
- en: '`max_iter= [100,110,120,130,140]`'
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_iter= [100,110,120,130,140]`'
- en: '`hyperparameters = dict(C=C, penalty=penalty, dual=dual, max_iter=max_iter)`'
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hyperparameters = dict(C=C, penalty=penalty, dual=dual, max_iter=max_iter)`'
- en: '`GridSearchCV(logreg, hyperparameters, cv=5, verbose=0)`'
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GridSearchCV(logreg, hyperparameters, cv=5, verbose=0)`'
- en: '`clf.fit(x_train, y_train)`'
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clf.fit(x_train, y_train)`'
- en: MLR
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MLR
- en: '`makeParamSet( makeDiscreteParam("minsplit", values=seq(5,10,1)), makeDiscreteParam("minbucket",
    values=seq(round(5/3,0), round(10/3,0), 1)), makeNumericParam("cp", lower = 0.01,
    upper = 0.05), makeDiscreteParam("maxcompete", values=6), makeDiscreteParam("usesurrogate",
    values=0), makeDiscreteParam("maxdepth", values=10) )`'
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`makeParamSet( makeDiscreteParam("minsplit", values=seq(5,10,1)), makeDiscreteParam("minbucket",
    values=seq(round(5/3,0), round(10/3,0), 1)), makeNumericParam("cp", lower = 0.01,
    upper = 0.05), makeDiscreteParam("maxcompete", values=6), makeDiscreteParam("usesurrogate",
    values=0), makeDiscreteParam("maxdepth", values=10) )`'
- en: '`ctrl = makeTuneControlGrid()`'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ctrl = makeTuneControlGrid()`'
- en: '`rdesc = makeResampleDesc("CV", iters = 3L, stratify=TRUE)`'
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rdesc = makeResampleDesc("CV", iters = 3L, stratify=TRUE)`'
- en: '`tuneParams(learner=dt_prob, resampling=rdesc, measures=list(tpr,auc, fnr,
    mmce, tnr, setAggregation(tpr, test.sd)), par.set=dt_param, control=ctrl, task=dt_task,
    show.info = TRUE) )`'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tuneParams(learner=dt_prob, resampling=rdesc, measures=list(tpr,auc, fnr,
    mmce, tnr, setAggregation(tpr, test.sd)), par.set=dt_param, control=ctrl, task=dt_task,
    show.info = TRUE) )`'
- en: '`setHyperPars(learner, par.vals = tuneParams$x)`'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setHyperPars(learner, par.vals = tuneParams$x)`'
- en: '**Training**'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练**'
- en: Both packages provide one line codes for trainig a model.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 两个软件包都提供了一行代码来训练模型。
- en: Scikit-Learn
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Scikit-Learn
- en: '`LogisticRegression().fit(x_train50, y_train50)`'
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LogisticRegression().fit(x_train50, y_train50)`'
- en: MLR
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MLR
- en: '`train(learner, task)`'
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`train(learner, task)`'
- en: This is arguably one of the simpler steps in the process. The most arduous step
    would be tuning hyperparameters and feature selection.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以说是过程中的较简单步骤。最艰巨的步骤是调整超参数和特征选择。
- en: '**Prediction**'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**预测**'
- en: Just like training the model, prediction can be done with one line of code.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 就像训练模型一样，预测也可以通过一行代码完成。
- en: Scikit-Learn
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Scikit-Learn
- en: '`LogisticRegression().predict(x_test)`'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LogisticRegression().predict(x_test)`'
- en: MLR
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MLR
- en: '`predict(trained model, newdata)`'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`predict(trained model, newdata)`'
- en: Scikit-learn will return an array of predicted labels while MLR will return
    a data frame of predicted labels.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Scikit-learn 将返回一个预测标签的数组，而 MLR 将返回一个预测标签的数据框。
- en: '**Model Evaluation**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**模型评估**'
- en: The most popular method for evaluating a supervised classifier will be a confusion
    matrix from which you can obtain accuracy, error, precision, recall etc.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 评估监督分类器最流行的方法是混淆矩阵，从中可以获得准确度、错误率、精确度、召回率等。
- en: Scikit-Learn
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Scikit-Learn
- en: '`confusion_matrix(y_test, prediction)` OR'
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`confusion_matrix(y_test, prediction)` OR'
- en: '`classification_report(y_test,prediction)`'
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`classification_report(y_test,prediction)`'
- en: MLR
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MLR
- en: '`performance(prediction, measures = list(tpr,auc,mmce, acc,tnr))` OR'
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`performance(prediction, measures = list(tpr,auc,mmce, acc,tnr))` OR'
- en: '`calculateROCMeasures(prediction)`'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`calculateROCMeasures(prediction)`'
- en: Both packages offer more than one method of obtaining a confusion matrix. **However,
    for an informative view in the easiest possible fashion, Python is not as informative
    as R. The first python code will only return a matrix with no labels. The user
    has to go back to the documentation to decipher which columns and rows correspond
    to which category.** The second method has a better and more informative output,
    but it will only generate precision, recall, F1 score, and support. This is also
    the more important performance measures in an imbalanced classification problem.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 两个软件包都提供了多种获取混淆矩阵的方法。**然而，为了以最简单的方式获得信息性视图，Python 可能没有 R 那么直观。第一个 Python 代码只会返回一个没有标签的矩阵。用户必须返回文档中解读哪些列和行对应于哪些类别。**
    第二种方法提供了更好且更具信息性的输出，但它仅会生成精确度、召回率、F1 分数和支持度。这些也是在不平衡分类问题中更重要的性能衡量标准。
- en: '**Decision Thresholding (i.e., Changing the Classification threshold)**'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**决策阈值调整（即，改变分类阈值）**'
- en: A threshold in a classification problem is a given probability that classifies
    each instance into a predicted category. The default threshold would always be
    0.5 (i.e., 50%). This is a major point of difference when conducting machine learning
    in Python and R. R offers one-line-of-code solution to manipulating the threshold
    to account for class imbalances. Python does not have a built-in function for
    this and is up to the user to programmatically manipulate the threshold by defining
    their custom scripts/functions.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 分类问题中的阈值是将每个实例分类到预测类别的给定概率。默认阈值通常为 0.5（即 50%）。这是在 Python 和 R 中进行机器学习时的一个主要差异。R
    提供了一行代码解决方案来调整阈值以应对类别不平衡。而 Python 没有内置函数来实现这一点，用户需要通过定义自定义脚本/函数来编程操作阈值。
- en: '![](../Images/48225c67de6b8769d9300f4c0ff33966.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/48225c67de6b8769d9300f4c0ff33966.png)'
- en: A pair of graphs showing decision thresholds.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 一对显示决策阈值的图表。
- en: Scikit-Learn
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Scikit-Learn
- en: There is no one standard way of thresholding in Scikitlearn. Check out this
    article for one way that you can implement it yourself: **Fine-tuning a Classifier
    in Scikit-Learn**
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Scikit-Learn 中没有一种标准的阈值设置方式。查看这篇文章了解你可以自己实现的一种方法：**在 Scikit-Learn 中微调分类器**
- en: MLR
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MLR
- en: '`setThreshold(prediction, threshold)`'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setThreshold(prediction, threshold)`'
- en: This one line of code in mlr will automatically change your threshold and can
    be passed as an argument to calculate your new performance metrics (i.e., confusion
    matrix)
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这行`mlr`中的代码将自动更改你的阈值，并可以作为参数传递，以计算你的新性能指标（即混淆矩阵）。
- en: Conclusion
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论
- en: In the end, both MLR and Scikit-Learn have their pros and cons when dealing
    with machine learning. Our comparison focused on using either one for machine
    learning and does not serve as a reason to use one instead of the other. Knowing
    both is what can give a true competitive advantage to someone in the field. The
    conceptual understanding of the process will make it easier to use either tool.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，MLR 和 Scikit-Learn 在处理机器学习时各有优缺点。我们的比较集中在使用其中一种进行机器学习，并不意味着使用其中一种而不是另一种。了解这两者能为该领域的人提供真正的竞争优势。对过程的概念性理解将使得使用这两种工具更为容易。
- en: '[Original](https://blog.exxactcorp.com/scikitlearn-vs-mlr-for-machine-learning/).
    Reposted with permission.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://blog.exxactcorp.com/scikitlearn-vs-mlr-for-machine-learning/)。经许可转载。'
- en: '**Related:**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[A Beginner’s Guide to Linear Regression in Python with Scikit-Learn](https://www.kdnuggets.com/2019/03/beginners-guide-linear-regression-python-scikit-learn.html)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Scikit-Learn 进行线性回归的初学者指南](https://www.kdnuggets.com/2019/03/beginners-guide-linear-regression-python-scikit-learn.html)'
- en: '[Using Linear Regression for Predictive Modeling in R](https://www.kdnuggets.com/2018/06/linear-regression-predictive-modeling-r.html)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 R 中使用线性回归进行预测建模](https://www.kdnuggets.com/2018/06/linear-regression-predictive-modeling-r.html)'
- en: '[What you need to know: The Modern Open-Source Data Science/Machine Learning
    Ecosystem](https://www.kdnuggets.com/2019/06/top-data-science-machine-learning-tools.html)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[你需要知道的：现代开源数据科学/机器学习生态系统](https://www.kdnuggets.com/2019/06/top-data-science-machine-learning-tools.html)'
- en: '* * *'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT 需求'
- en: '* * *'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[KDnuggets News, December 14: 3 Free Machine Learning Courses for…](https://www.kdnuggets.com/2022/n48.html)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻，12月14日：3 个免费机器学习课程……](https://www.kdnuggets.com/2022/n48.html)'
- en: '[5 Machine Learning Skills Every Machine Learning Engineer Should…](https://www.kdnuggets.com/2023/03/5-machine-learning-skills-every-machine-learning-engineer-know-2023.html)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每位机器学习工程师应具备的 5 项机器学习技能](https://www.kdnuggets.com/2023/03/5-machine-learning-skills-every-machine-learning-engineer-know-2023.html)'
- en: '[A Solid Plan for Learning Data Science, Machine Learning, and Deep Learning](https://www.kdnuggets.com/2023/01/mwiti-solid-plan-learning-data-science-machine-learning-deep-learning.html)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习数据科学、机器学习和深度学习的稳固计划](https://www.kdnuggets.com/2023/01/mwiti-solid-plan-learning-data-science-machine-learning-deep-learning.html)'
- en: '[AI, Analytics, Machine Learning, Data Science, Deep Learning…](https://www.kdnuggets.com/2021/12/developments-predictions-ai-machine-learning-data-science-research.html)'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[人工智能、分析、机器学习、数据科学、深度学习…](https://www.kdnuggets.com/2021/12/developments-predictions-ai-machine-learning-data-science-research.html)'
- en: '[Breaking the Data Barrier: How Zero-Shot, One-Shot, and Few-Shot…](https://www.kdnuggets.com/2023/08/breaking-data-barrier-zeroshot-oneshot-fewshot-learning-transforming-machine-learning.html)'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[突破数据壁垒：如何实现零样本、单样本和少样本学习](https://www.kdnuggets.com/2023/08/breaking-data-barrier-zeroshot-oneshot-fewshot-learning-transforming-machine-learning.html)'
- en: '[Federated Learning: Collaborative Machine Learning with a Tutorial…](https://www.kdnuggets.com/2021/12/federated-learning-collaborative-machine-learning-tutorial-get-started.html)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[联邦学习：协作机器学习教程…](https://www.kdnuggets.com/2021/12/federated-learning-collaborative-machine-learning-tutorial-get-started.html)'
