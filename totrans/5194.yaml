- en: 'Data Observability, Part II: How to Build Your Own Data Quality Monitors Using
    SQL'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据可观测性，第 II 部分：如何使用 SQL 构建自己的数据质量监控系统
- en: 原文：[https://www.kdnuggets.com/2021/02/data-observability-part-2-build-data-quality-monitors-sql.html](https://www.kdnuggets.com/2021/02/data-observability-part-2-build-data-quality-monitors-sql.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/02/data-observability-part-2-build-data-quality-monitors-sql.html](https://www.kdnuggets.com/2021/02/data-observability-part-2-build-data-quality-monitors-sql.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Barr Moses](https://www.linkedin.com/in/barrmoses/), CEO and Co-founder
    of Monte Carlo & [Ryan Kearns](https://www.linkedin.com/in/ryan-kearns-203686a9),
    Machine Learning Engineer at Monte Carlo**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者：[Barr Moses](https://www.linkedin.com/in/barrmoses/)，Monte Carlo 的首席执行官兼联合创始人
    & [Ryan Kearns](https://www.linkedin.com/in/ryan-kearns-203686a9)，Monte Carlo
    的机器学习工程师**'
- en: '*In this article series, we walk through how you can create your own data observability
    monitors from scratch, mapping to *[***five key pillars of data health***](https://towardsdatascience.com/introducing-the-five-pillars-of-data-observability-e73734b263d5)*.
    Part I can be found *[*here*](https://www.montecarlodata.com/data-observability-in-practice-using-sql-1/)*.*'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '*在这篇文章系列中，我们将讲解如何从零开始创建自己的数据可观测性监控系统，并映射到*[***数据健康的五个关键支柱***](https://towardsdatascience.com/introducing-the-five-pillars-of-data-observability-e73734b263d5)*。第一部分可以在*[*这里*](https://www.montecarlodata.com/data-observability-in-practice-using-sql-1/)*找到。*'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 在 IT 领域支持你的组织'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '*Part II of this series was adapted from Barr Moses and Ryan Kearns’ O’Reilly
    training, *[***Managing Data Downtime: Applying Observability to Your Data Pipelines***](https://www.oreilly.com/live-training/courses/managing-data-downtime/0636920508717/)*,
    the industry’s first-ever course on data observability. The associated exercises
    are available *[*here*](https://github.com/monte-carlo-data/data-downtime-challenge)*,
    and the adapted code shown in this article is available *[*here*](https://github.com/monte-carlo-data/data-observability-in-practice)*.*'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*本系列的第二部分改编自 Barr Moses 和 Ryan Kearns 的 O''Reilly 培训课程，*[***管理数据停机时间：将可观测性应用于你的数据管道***](https://www.oreilly.com/live-training/courses/managing-data-downtime/0636920508717/)*，这是业内首个数据可观测性的课程。相关的练习可以在*[*这里*](https://github.com/monte-carlo-data/data-downtime-challenge)*找到，本文中展示的改编代码可以在*[*这里*](https://github.com/monte-carlo-data/data-observability-in-practice)*找到。*'
- en: As the world’s appetite for data increases, robust data pipelines are all the
    more imperative. When data breaks — whether from schema changes, null values,
    duplication, or otherwise — data engineers need to know.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 随着世界对数据的需求增加，强大的数据管道变得更加必要。当数据出现问题时——无论是来自模式变化、空值、重复还是其他情况——数据工程师需要知道。
- en: 'Most importantly, we need to assess the root cause of the breakage — and fast
    — before it affects downstream systems and consumers. We use “[**data downtime**](https://towardsdatascience.com/the-rise-of-data-downtime-841650cedfd5)”
    to refer to periods of time when data is missing, erroneous, or otherwise inaccurate.
    If you’re a data professional, you may be familiar with asking the following questions:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的是，我们需要快速评估问题的根本原因，以免影响下游系统和用户。我们用“*[**数据停机时间**](https://towardsdatascience.com/the-rise-of-data-downtime-841650cedfd5)*”来指代数据缺失、错误或其他不准确的时间段。如果你是一名数据专业人士，你可能会问以下问题：
- en: Is the data up to date?
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据是否是最新的？
- en: Is the data complete?
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据是否完整？
- en: Are fields within expected ranges?
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字段是否在预期范围内？
- en: Is the null rate higher or lower than it should be?
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空值率是否高于或低于预期？
- en: Has the schema changed?
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模式是否发生了变化？
- en: To answer these questions in an effective way, we can take a page from the software
    engineer’s playbook: [**monitoring and observability**](https://observability.workshop.aws/en/anomalydetection.html)**.**
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 为了有效回答这些问题，我们可以借鉴软件工程师的做法：[**监控和可观测性**](https://observability.workshop.aws/en/anomalydetection.html)**。**
- en: 'To refresh your memory since Part I, we define [**data observability**](https://towardsdatascience.com/what-is-data-observability-40b337971e3e) as
    an organization’s ability to answer these questions and assess the health of their
    data ecosystem. Reflecting key variables of data health, the five pillars of data
    observability are:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助你回忆第一部分的内容，我们将[**数据可观测性**](https://towardsdatascience.com/what-is-data-observability-40b337971e3e)定义为组织回答这些问题并评估其数据生态系统健康的能力。反映数据健康的关键变量，数据可观测性的五个支柱是：
- en: '**Freshness**: is my data up to date? Are there gaps in time where my data
    has not been updated?'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**新鲜度**：我的数据是否是最新的？在何时数据没有更新？'
- en: '**Distribution**: how healthy is my data at the field-level? Is my data within
    expected ranges?'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分布**：我的数据在字段级别上有多健康？我的数据是否在预期范围内？'
- en: '**Volume**: is my data intake meeting expected thresholds?'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据量**：我的数据接收是否达到预期阈值？'
- en: '**Schema**: has the formal structure of my data management system changed?'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模式**：我的数据管理系统的正式结构是否发生了变化？'
- en: '**Lineage**: if some of my data is down, what is affected upstream and downstream?
    How do my data sources depend on one another?'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**血统**：如果我的部分数据出现问题，哪些上游和下游的内容会受到影响？我的数据源之间如何相互依赖？'
- en: In this article series, we’re interested in pulling back the curtain, and investigating
    what data observability looks like — *in the code*.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一系列文章中，我们感兴趣的是揭开面纱，研究数据可观测性在——*代码中*是如何表现的。
- en: In [Part I](https://medium.com/swlh/data-observability-building-your-own-data-quality-monitors-using-sql-a4c848b6882d),
    we looked at the first two pillars, freshness and distribution, and showed how
    a little SQL code can operationalize these concepts. These are what we would call
    more “classic” [**anomaly detection problems**](https://en.wikipedia.org/wiki/Anomaly_detection) —
    given a steady stream of data, does anything look out of whack? Good anomaly detection
    is certainly part of the data observability puzzle, but it’s not everything.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第一部分](https://medium.com/swlh/data-observability-building-your-own-data-quality-monitors-using-sql-a4c848b6882d)中，我们探讨了前两个支柱：新鲜度和分布，并展示了如何通过少量的SQL代码将这些概念转化为操作性。这些问题可以称为更“经典”的[**异常检测问题**](https://en.wikipedia.org/wiki/Anomaly_detection)——在数据持续流入的情况下，有没有什么看起来不对劲的？良好的异常检测确实是数据可观测性的一部分，但它不是全部。
- en: Equally important is [***context***](https://www.montecarlodata.com/data-teams-your-metadata-is-useless/).
    If an anomaly occurred, great. But where? What upstream pipelines may be the cause?
    What downstream dashboards will be affected? And has the formal structure of my
    data changed? Good data observability hinges on our ability to properly leverage
    metadata to answer these questions — and many others — so we can identify the
    root cause and fix the issue before it becomes a bigger problem.
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 同样重要的是[***上下文***](https://www.montecarlodata.com/data-teams-your-metadata-is-useless/)。如果发生了异常，那很好。但在哪里发生的？哪个上游管道可能是原因？哪些下游仪表盘会受到影响？我的数据的正式结构是否发生了变化？良好的数据可观测性取决于我们利用元数据来回答这些问题——以及许多其他问题——的能力，从而可以在问题变得更严重之前找出根本原因并解决它。
- en: In this article, we’ll look at the two data observability pillars designed to
    give us this critical context — **schema** and **lineage**. Once again, we’ll
    use lightweight tools like Jupyter and SQLite, so you can easily spin up our environment
    and try these exercises out yourself. Let’s get started.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将探讨旨在提供这一关键上下文的两个数据可观测性支柱——**模式**和**血统**。我们将再次使用轻量级工具，如Jupyter和SQLite，因此你可以轻松启动我们的环境，并尝试这些练习。让我们开始吧。
- en: Our Data Environment
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我们的数据环境
- en: '*This tutorial is based on *[*Exercises 2 and 3*](https://github.com/monte-carlo-data/data-downtime-challenge/blob/master/exercise_text/ex2.md)* of
    our O’Reilly course, *[*Managing Data Downtime*](https://www.oreilly.com/live-training/courses/managing-data-downtime/0636920508717/)*.
    You’re welcome to try out these exercises on your own using a Jupyter Notebook
    and SQL. We’ll be going into more detail, including exercise *[*4*](https://github.com/monte-carlo-data/data-downtime-challenge/blob/master/exercise_text/ex4.md)*,
    in future articles.*'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*本教程基于*[*练习 2 和 3*](https://github.com/monte-carlo-data/data-downtime-challenge/blob/master/exercise_text/ex2.md)*，这是我们
    O''Reilly 课程*[*Managing Data Downtime*](https://www.oreilly.com/live-training/courses/managing-data-downtime/0636920508717/)*的一部分。欢迎使用
    Jupyter Notebook 和 SQL 自行尝试这些练习。我们将在未来的文章中详细讨论，包括练习*[*4*](https://github.com/monte-carlo-data/data-downtime-challenge/blob/master/exercise_text/ex4.md)*。*'
- en: If you read [Part I](https://medium.com/swlh/data-observability-building-your-own-data-quality-monitors-using-sql-a4c848b6882d) of
    this series, you should be familiar with our data. As before, we’ll work with [mock
    astronomical data](https://github.com/monte-carlo-data/data-observability-in-practice/blob/main/EXOPLANETS.db) about
    habitable exoplanets. We generated the dataset with Python, modeling data and
    anomalies off of real incidents I’ve come across in production environments. This
    dataset is entirely free to use, and the [utils folder](https://github.com/monte-carlo-data/data-downtime-challenge/tree/master/data/utils) in
    the repository contains the code that generated the data, if you’re interested.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你阅读了[第一部分](https://medium.com/swlh/data-observability-building-your-own-data-quality-monitors-using-sql-a4c848b6882d)
    本系列文章，你应该对我们的数据比较熟悉。如之前所述，我们将处理[mock 天文数据](https://github.com/monte-carlo-data/data-observability-in-practice/blob/main/EXOPLANETS.db)，有关宜居系外行星。我们使用
    Python 生成了数据集，模拟了我在生产环境中遇到的实际事件的数据和异常。该数据集完全免费使用，[utils 文件夹](https://github.com/monte-carlo-data/data-downtime-challenge/tree/master/data/utils)
    包含生成数据的代码，如果你感兴趣的话。
- en: I’m using SQLite 3.32.3, which should make the database accessible from either
    the command prompt or SQL files with minimal setup. The concepts extend to really
    any query language, and [these implementations](https://github.com/monte-carlo-data/data-observability-in-practice/tree/main/queries) can
    be extended to MySQL, Snowflake, and other database environments with minimal
    changes.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用的是 SQLite 3.32.3，这使得数据库可以通过命令行提示符或 SQL 文件轻松访问。该概念适用于几乎任何查询语言，[这些实现](https://github.com/monte-carlo-data/data-observability-in-practice/tree/main/queries)
    可以扩展到 MySQL、Snowflake 以及其他数据库环境，所需更改极小。
- en: 'Once again, we have our EXOPLANETS table:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 再次查看我们的 EXOPLANETS 表：
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'A database entry in EXOPLANETS contains the following information:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: EXOPLANETS 数据库条目包含以下信息：
- en: '0. `_id`: A UUID corresponding to the planet.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 0. `_id`：与行星对应的 UUID。
- en: '1\. `distance`: Distance from Earth, in lightyears.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 1. `distance`：与地球的距离，单位为光年。
- en: '2. `g`: Surface gravity as a multiple of g, the gravitational force constant.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 2. `g`：作为 g 的倍数的表面重力，g 是重力常数。
- en: '3. `orbital_period`: Length of a single orbital cycle in days.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 3. `orbital_period`：单个轨道周期的长度，单位为天。
- en: '4. `avg_temp`: Average surface temperature in degrees Kelvin.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 4. `avg_temp`：表面平均温度，单位为开尔文。
- en: '5. `date_added`: The date our system discovered the planet and added it automatically
    to our databases.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 5. `date_added`：我们的系统发现该行星并自动将其添加到数据库中的日期。
- en: Note that one or more of `distance`, `g`, `orbital_period`, and `avg_temp` may
    be `NULL` for a given planet as a result of missing or erroneous data.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，由于数据缺失或错误，`distance`、`g`、`orbital_period` 和 `avg_temp` 中一个或多个可能为 `NULL`。
- en: '`sqlite> SELECT * FROM EXOPLANETS LIMIT 5;`'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`sqlite> SELECT * FROM EXOPLANETS LIMIT 5;`'
- en: Note that this exercise is retroactive — we’re looking at historical data. In
    a production data environment, data observability is real time and applied at
    each stage of the data life cycle, and thus will involve a slightly different
    implementation than what is done here.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这个练习是回顾性的——我们在查看历史数据。在生产数据环境中，数据可观测性是实时的，并应用于数据生命周期的每个阶段，因此会涉及到与这里做法稍有不同的实现。
- en: 'It looks like our oldest data is dated 2020–01–01 (*note*: most databases will
    not store timestamps for individual records, so our `DATE_ADDED` column is keeping
    track for us). Our newest data…'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来我们的最旧数据的日期是 2020–01–01 (*注意*：大多数数据库不会存储单个记录的时间戳，因此我们的 `DATE_ADDED` 列会为我们跟踪这一信息)。我们最新的数据……
- en: '[PRE1]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: … looks to be from 2020–07–18\. Of course, this is the same table we used in
    the past article. If we want to explore the more context-laden pillars of schema
    and lineage, we’ll need to expand our environment.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: …似乎来自2020-07-18。当然，这是我们在过去文章中使用的同一张表。如果我们想要探索更具上下文的模式和谱系支柱，我们需要扩展我们的环境。
- en: Now, in addition to `EXOPLANETS`, we have a table called `EXOPLANETS_EXTENDED`,
    which is a superset of our past table. It’s useful to think of these as the same
    table at *different moments in time*. In fact, `EXOPLANETS_EXTENDED` has data
    dating back to 2020–01–01…
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，除了`EXOPLANETS`，我们还有一个叫做`EXOPLANETS_EXTENDED`的表，它是我们过去表的超集。可以把这些表看作是在*不同时间点*的同一个表。实际上，`EXOPLANETS_EXTENDED`包含的数据可以追溯到2020-01-01……
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '… but also contains data up to 2020–09–06, further than `EXOPLANETS`:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: …但也包含数据到2020-09-06，比`EXOPLANETS`的数据更为广泛：
- en: '[PRE3]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Visualizing schema changes
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可视化模式变化
- en: 'Something else is different between these tables:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这些表之间还有其他不同之处：
- en: '[PRE4]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In addition to the 6 fields in `EXOPLANETS`, the `EXOPLANETS_EXTENDED` table
    contains two additional fields:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`EXOPLANETS`中的6个字段外，`EXOPLANETS_EXTENDED`表还包含两个额外字段：
- en: '6. `eccentricity`: the [orbital eccentricity](https://en.wikipedia.org/wiki/Orbital_eccentricity) of
    the planet about its host star.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 6. `eccentricity`：行星绕其宿主恒星的[轨道偏心率](https://en.wikipedia.org/wiki/Orbital_eccentricity)。
- en: '7. `atmosphere`: the dominant chemical makeup of the planet’s atmosphere.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 7. `atmosphere`：行星大气的主要化学成分。
- en: Note that like `distance`, `g`, `orbital_period`, and `avg_temp`, both `eccentricity`
    and `atmosphere` may be `NULL` for a given planet as a result of missing or erroneous
    data. For example, [rogue planets](https://en.wikipedia.org/wiki/Rogue_planet) have
    undefined orbital eccentricity, and many planets don’t have atmospheres at all.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，像`distance`、`g`、`orbital_period`和`avg_temp`一样，`eccentricity`和`atmosphere`也可能由于缺失或错误的数据而为`NULL`。例如，[流浪行星](https://en.wikipedia.org/wiki/Rogue_planet)具有未定义的轨道偏心率，许多行星根本没有大气层。
- en: Note also that data is not backfilled, meaning data entries from the beginning
    of the table (data contained also in the `EXOPLANETS` table) will not have eccentricity
    and atmosphere information.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 还要注意数据没有回填，这意味着表开始的数据（也包含在`EXOPLANETS`表中的数据）将没有偏心率和大气信息。
- en: '[PRE5]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The addition of two fields is an example of a [**schema** **change**](https://www.educative.io/blog/what-are-database-schemas-examples) —
    our data’s formal blueprint has been modified. Schema changes occur when an alteration
    is made to the structure of your data, and can be frustrating to manually debug.
    Schema changes can indicate any number of things about your data, including:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 两个字段的增加是一个[**模式** **变化**](https://www.educative.io/blog/what-are-database-schemas-examples)的例子——我们的数据的正式蓝图已经被修改。模式变化发生在对数据结构进行更改时，并且可能会令人沮丧地手动调试。模式变化可以指示有关数据的各种信息，包括：
- en: The addition of new API endpoints
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新API端点的增加
- en: Supposedly deprecated fields that are not yet… deprecated
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假定已弃用但尚未…弃用的字段
- en: The addition or subtraction of columns, rows, or entire tables
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列、行或整个表的增加或删除
- en: In an ideal world, we’d like a record of this change, as it represents a vector
    for possible issues with our pipeline. Unfortunately, our database is not naturally
    configured to keep track of such changes. It has no versioning history.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在理想情况下，我们希望有这种变化的记录，因为它代表了我们管道可能出现问题的向量。不幸的是，我们的数据库并未自然配置来跟踪此类变化。它没有版本历史记录。
- en: 'We ran into this issue in [Part I](https://medium.com/swlh/data-observability-building-your-own-data-quality-monitors-using-sql-a4c848b6882d) when
    querying for the age of individual records, and added the `DATE_ADDED` column
    to cope. In this case, we’ll do something similar, except with the addition of
    an entire table:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[第一部分](https://medium.com/swlh/data-observability-building-your-own-data-quality-monitors-using-sql-a4c848b6882d)中遇到过这个问题，当时我们查询单个记录的年龄，并添加了`DATE_ADDED`列来应对。在这种情况下，我们将做类似的操作，只不过是增加整个表：
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The `EXOPLANETS_COLUMNS` table “versions” our schema by recording the columns
    in `EXOPLANETS_EXTENDED` at any given date. Looking at the very first and last
    entries, we see that the columns definitely changed at some point:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`EXOPLANETS_COLUMNS`表通过记录`EXOPLANETS_EXTENDED`中在任何给定日期的列来“版本化”我们的模式。通过查看最初和最后的条目，我们可以看到列确实在某个时候发生了变化：'
- en: '[PRE7]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now, returning to our original question: when, exactly, did the schema change?
    Since our column lists are indexed by dates, we can find the date of the change
    with a quick SQL script:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，回到我们最初的问题：究竟是什么时候发生了模式变化？由于我们的列列表是按日期索引的，我们可以通过一个快速的SQL脚本来找到变化的日期：
- en: 'Here’s the data returned, which I’ve reformatted for legibility:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这是返回的数据，我已重新格式化以提高可读性：
- en: '[PRE8]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'With this query, we return the offending date: 2020–07–19\. Like freshness
    and distribution observability, achieving schema observability follows a pattern:
    we identify the [useful metadata](https://towardsdatascience.com/metadata-is-useless-535e43311cd8) that
    signals pipeline health, track it, and build detectors to alert us of potential
    issues. Supplying an additional table like `EXOPLANETS_COLUMNS` is one way to
    track schema, but there are many others. We encourage you to think about how you
    could implement a schema change detector for your own data pipeline!'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此查询，我们返回了问题日期：2020–07–19。像新鲜度和分布可观察性一样，实现模式可观察性遵循一个模式：我们识别[有用的元数据](https://towardsdatascience.com/metadata-is-useless-535e43311cd8)来指示管道健康，跟踪它，并构建探测器以警告我们潜在的问题。提供像`EXOPLANETS_COLUMNS`这样的额外表格是一种跟踪模式的方法，但还有许多其他方法。我们鼓励你思考如何为自己的数据管道实现模式变化检测器！
- en: Visualizing lineage
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 视觉化谱系
- en: We’ve described lineage as [the most holistic](https://towardsdatascience.com/introducing-the-five-pillars-of-data-observability-e73734b263d5) of
    the 5 pillars of data observability, and for good reason.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将谱系描述为[数据可观察性的五大支柱](https://towardsdatascience.com/introducing-the-five-pillars-of-data-observability-e73734b263d5)中最全面的一项，这也是有充分理由的。
- en: Lineage contextualizes incidents by telling us (1) which downstream sources
    may be impacted, and (2) which upstream sources may be the root cause. While it’s
    not intuitive to “visualize” lineage with SQL code, a quick example may illustrate
    how it can be useful.
  id: totrans-77
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 谱系通过告诉我们（1）哪些下游来源可能受到影响，（2）哪些上游来源可能是根本原因，从而为事件提供背景。虽然用SQL代码“可视化”谱系并不直观，但一个简单的示例可能会说明它的用途。
- en: For this, we’ll need to expand our data environment once again.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们需要再次扩展我们的数据环境。
- en: 'Introducing: HABITABLES'
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 介绍：HABITABLES
- en: 'Let’s add another table to our database. So far, we’ve been recording data
    on exoplanets. Here’s one fun question to ask: how many of these planets may harbor
    life?'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们向数据库中添加另一张表。到目前为止，我们一直在记录系外行星的数据。这里有一个有趣的问题：这些行星中有多少可能存在生命？
- en: 'The `HABITABLES` table takes data from `EXOPLANETS` to help us answer that
    question:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`HABITABLES`表格从`EXOPLANETS`中获取数据，以帮助我们回答这个问题：'
- en: '[PRE9]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'An entry in `HABITABLES` contains the following:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '`HABITABLES`中的一条记录包含以下内容：'
- en: '0. `_id`: A UUID corresponding to the planet.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 0. `_id`：对应于行星的UUID。
- en: '1. `perihelion`: The [closest distance](https://en.wikipedia.org/wiki/Apsis#Perihelion_and_aphelion) to
    the celestial body during an orbital period.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 1. `perihelion`：在一个轨道周期内，离天体的[最短距离](https://en.wikipedia.org/wiki/Apsis#Perihelion_and_aphelion)。
- en: '2. `aphelion`: The [furthest distance](https://en.wikipedia.org/wiki/Apsis#Perihelion_and_aphelion) to
    the celestial body during an orbital period.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 2. `aphelion`：在一个轨道周期内，离天体的[最远距离](https://en.wikipedia.org/wiki/Apsis#Perihelion_and_aphelion)。
- en: '3. `atmosphere`: The dominant chemical makeup of the planet’s atmosphere.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 3. `atmosphere`：行星大气层的主要化学成分。
- en: '4. `habitability`: A real number between 0 and 1, indicating how likely the
    planet is to harbor life.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 4. `habitability`：一个介于0和1之间的实数，表示行星可能存在生命的概率。
- en: '5. `min_temp`: The minimum temperature on the planet’s surface.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 5. `min_temp`：行星表面上的最低温度。
- en: '6. `max_temp`: The maximum temperature on the planet’s surface.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 6. `max_temp`：行星表面上的最高温度。
- en: '7. `date_added`: The date our system discovered the planet and added it automatically
    to our databases.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 7. `date_added`：我们的系统发现该行星并自动将其添加到数据库中的日期。
- en: 'Like the columns in `EXOPLANETS`, values for `perihelion`, `aphelion`, `atmosphere`,
    `min_temp`, and `max_temp` are allowed to be `NULL`. In fact, `perihelion` and `aphelion` will
    be `NULL` for any `_id` in `EXOPLANETS` where `eccentricity` is `NULL`, since
    you use orbital eccentricity to calculate these metrics. This explains why these
    two fields are always `NULL` in our older data entries:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 像`EXOPLANETS`中的列一样，`perihelion`、`aphelion`、`atmosphere`、`min_temp`和`max_temp`的值也可以为`NULL`。实际上，对于`EXOPLANETS`中任何`_id`的`eccentricity`为`NULL`的记录，`perihelion`和`aphelion`也会是`NULL`，因为你使用轨道偏心率来计算这些指标。这解释了为什么在我们较旧的数据条目中这两个字段总是`NULL`：
- en: '[PRE10]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'So, we know that `HABITABLES` depends on the values in `EXOPLANETS` (or, equally, `EXOPLANETS_EXTENDED`),
    and `EXOPLANETS_COLUMNS` does as well. A dependency graph of our database looks
    like this:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们知道`HABITABLES`依赖于`EXOPLANETS`（或者同样地，`EXOPLANETS_EXTENDED`）中的值，`EXOPLANETS_COLUMNS`也是如此。我们数据库的依赖关系图如下所示：
- en: '![Figure](../Images/d71210e8268ae60c9ab0032bc91921ee.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/d71210e8268ae60c9ab0032bc91921ee.png)'
- en: Image courtesy of [Monte Carlo](http://www.montecarlodata.com/).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Monte Carlo](http://www.montecarlodata.com/)提供。
- en: Very simple lineage information, but already useful. Let’s look at an anomaly
    in `HABITABLES` in the context of this graph, and see what we can learn.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 非常简单的谱系信息，但已经很有用。让我们在这个图表的背景下查看`HABITABLES`中的一个异常，并看看我们能学到什么。
- en: Investigating an anomaly
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调查异常
- en: When we have a key metric, like habitability in `HABITABLES`, we can assess
    the health of that metric in several ways. For a start, what is the average value
    of `habitability` for new data on a given day?
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们有一个关键指标，比如`HABITABLES`中的宜居性时，我们可以通过几种方式评估该指标的健康状况。首先，给定日期的新数据`habitability`的平均值是多少？
- en: Looking at this data, we see that something is wrong. The average value for `habitability` is
    normally around 0.5, but it halves to around 0.25 later in the recorded data.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 查看这些数据，我们看到情况不对。`habitability`的平均值通常在0.5左右，但在记录的数据后期降至约0.25。
- en: '![Figure](../Images/cbc0ab591e234f730b65dc895ab2426a.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/cbc0ab591e234f730b65dc895ab2426a.png)'
- en: A distribution anomaly… but what caused it?
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 一个分布异常……但是什么导致了它？
- en: This is a clear distributional anomaly, but what exactly is going on? In other
    words, what is the *root cause* of this anomaly?
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个明显的分布异常，但究竟发生了什么？换句话说，这个异常的*根本原因*是什么？
- en: Why don’t we look at the `NULL` rate for habitability, like we did in [Part
    I](https://ryanothnielkearns.medium.com/data-observability-building-your-own-data-quality-monitors-using-sql-a4c848b6882d)?
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么我们不查看一下`NULL`率对于宜居性，就像我们在[第一部分](https://ryanothnielkearns.medium.com/data-observability-building-your-own-data-quality-monitors-using-sql-a4c848b6882d)中做的那样？
- en: 'Fortunately, nothing looks out of character here:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，这里没有看起来不正常的地方：
- en: But this doesn’t look promising as the cause of our issue. What if we looked
    at another distributional health metric, the **rate of zero values**?
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 但这看起来并不对我们的问提有帮助。如果我们查看另一个分布健康指标——**零值率**，会怎样呢？
- en: 'Something seems evidently more amiss here:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 显然这里的情况更有问题：
- en: Historically, `habitability` was virtually never zero, but at later dates it
    spikes up to nearly 40% on average. This has the detected effect of lowering the
    field’s average value.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 从历史上看，`habitability`几乎从未为零，但在稍后的日期，它的零率平均接近40%。这导致了字段平均值的下降。
- en: '![Figure](../Images/ca0aa0e21a7d21ac69d342c325b39a5d.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/ca0aa0e21a7d21ac69d342c325b39a5d.png)'
- en: A distribution anomaly… but what caused it?
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 一个分布异常……但是什么导致了它？
- en: 'We can adapt one of the distribution detectors we built in Part I to get the
    first date of appreciable zero rates in the `habitability` field:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用在第一部分中构建的分布检测器之一，来获取`habitability`字段中可观的零率的首次日期：
- en: 'I ran this query through the command line:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我通过命令行运行了这个查询：
- en: '[PRE11]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 2020–07–19 was the first date the zero rate began showing anomalous results.
    Recall that this is the same day as the schema change detection in `EXOPLANETS_EXTENDED`. `EXOPLANETS_EXTENDED` is
    upstream from `HABITABLES`, so it’s very possible that these two incidents are
    related.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 2020年7月19日是零率开始显示异常结果的第一天。请记住，这也是`EXOPLANETS_EXTENDED`的架构变更检测的那一天。`EXOPLANETS_EXTENDED`位于`HABITABLES`的上游，因此这两个事件很可能是相关的。
- en: 'It is in this way that lineage information can help us identify the **root
    cause** of incidents, and move quicker towards resolving them. Compare the two
    following explanations for this incident in `HABITABLES`:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样，谱系信息可以帮助我们识别事件的**根本原因**，并更快地解决问题。比较以下两个对`HABITABLES`事件的解释：
- en: On 2020–07–19, the zero rate of the habitability column in the `HABITABLES` table
    jumped from 0% to 37%.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在2020年7月19日，`HABITABLES`表中的宜居性列的零率从0%跃升至37%。
- en: On 2020–07–19, we began tracking two additional fields, `eccentricity` and `atmosphere`,
    in the `EXOPLANETS` table. This had an adverse effect on the downstream table `HABITABLES`,
    often setting the fields `min_temp` and `max_temp` to extreme values whenever `eccentricity` was
    not `NULL`. In turn, this caused the `habitability` field spike in zero rate,
    which we detected as an anomalous decrease in the average value.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在2020年7月19日，我们开始在`EXOPLANETS`表中跟踪两个额外的字段，`eccentricity`和`atmosphere`。这对下游表`HABITABLES`产生了不利影响，通常在`eccentricity`不为`NULL`时将字段`min_temp`和`max_temp`设置为极端值。反过来，这导致了`habitability`字段中零率的激增，我们检测到了平均值的异常下降。
- en: Explanation (1) uses just the fact that an anomaly took place. Explanation (2)
    uses lineage, in terms of dependencies between both tables and fields, to put
    the incident in context and determine the root cause. Everything in (2) is actually
    correct, by the way, and I encourage you to mess around with the environment to
    understand for yourself what’s going on. While these are just simple examples,
    an engineer equipped with (2) would be faster to *understand* and *resolve* the
    underlying issue, and this is all owed to proper observability.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 解释（1）仅使用异常发生的事实。解释（2）使用血统，即表和字段之间的依赖关系，将事件置于背景中并确定根本原因。实际上，解释（2）中的一切都是正确的，我鼓励你在环境中进行实验，以自己理解发生了什么。虽然这些只是简单的示例，但拥有（2）知识的工程师将更快地*理解*和*解决*根本问题，这都归功于适当的可观测性。
- en: What’s next?
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下一步是什么？
- en: Tracking schema changes and lineage can give you unprecedented visibility into
    the health and usage patterns of your data, providing vital contextual information
    about who, what, where, why, and how your data was used. In fact, schema and lineage
    are the two most important data observability pillars when it comes to understanding
    the downstream (and often real-world) implications of data downtime.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 跟踪模式变化和血统可以让你前所未有地了解数据的健康状况和使用模式，提供关于数据使用的谁、什么、哪里、为何以及如何的关键信息。事实上，模式和血统是理解数据停机的下游（以及往往是现实世界）影响时两个最重要的数据可观测性支柱。
- en: 'To summarize:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 总结：
- en: Observing our data’s **schema** means understanding the formal structure of
    our data, and when and how it changes.
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 观察我们数据的**模式**意味着理解我们数据的正式结构，以及它何时和如何发生变化。
- en: Observing our data’s **lineage** means understanding the upstream and downstream
    dependencies in our pipeline, and putting isolated incidents in a larger context.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 观察我们数据的**血统**意味着理解管道中的上游和下游依赖关系，并将孤立事件放在更大的背景中。
- en: Both of these pillars of **data observability** involve tracking the proper
    metadata, and transforming our data in a way that makes anomalies understandable.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这两个**数据可观测性**支柱都涉及跟踪适当的元数据，并以使异常情况可理解的方式转化数据。
- en: Better observability means **better understanding of why and how data breaks**,
    reducing both time-to-detection and time-to-resolution.
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的可观测性意味着**更好地理解数据为何以及如何崩溃**，从而减少检测时间和解决时间。
- en: We hope that this second installment of “Data Observability in Context” was
    useful.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望这一期的“数据可观测性背景”对你有帮助。
- en: Until Part III, here’s wishing you no data downtime!
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在第三部分之前，祝你没有数据停机！
- en: '***Interested in learning more about Monte Carlo’s approach to data observability?
    Reach out to*** [***Ryan***](https://www.linkedin.com/in/ryan-kearns-203686a9)***, ***[***Barr***](https://www.linkedin.com/in/barrmoses/)***,
    and the ***[***Monte Carlo team***](http://www.montecarlodata.com/)***.***'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '***想了解更多关于Monte Carlo数据可观测性方法的内容吗？请联系*** [***Ryan***](https://www.linkedin.com/in/ryan-kearns-203686a9)***、***[***Barr***](https://www.linkedin.com/in/barrmoses/)***
    和 ***[***Monte Carlo团队***](http://www.montecarlodata.com/)***。***'
- en: '**[Barr Moses](https://www.linkedin.com/in/barrmoses/)** is the CEO and Co-founder
    of Monte Carlo, a data observability company. Prior, she served as a VP of Operations
    at Gainsight.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Barr Moses](https://www.linkedin.com/in/barrmoses/)** 是Monte Carlo的首席执行官兼联合创始人，这是一家数据可观测性公司。在此之前，她曾担任Gainsight的运营副总裁。'
- en: '**[Ryan Kearns](https://www.linkedin.com/in/ryan-kearns-203686a9)** is a data
    and machine learning engineer at Monte Carlo and a rising senior at Stanford University.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Ryan Kearns](https://www.linkedin.com/in/ryan-kearns-203686a9)** 是Monte
    Carlo的数据与机器学习工程师，同时是斯坦福大学的高年级学生。'
- en: '[Original](https://towardsdatascience.com/data-observability-in-practice-using-sql-part-ii-schema-lineage-5ca6c8f4f56a).
    Reposted with permission.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/data-observability-in-practice-using-sql-part-ii-schema-lineage-5ca6c8f4f56a)。经许可转载。'
- en: '**Related:**'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Data Observability: Building Data Quality Monitors Using SQL](/2021/02/data-observability-building-data-quality-monitors-using-sql.html)'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据可观测性：使用SQL构建数据质量监控器](/2021/02/data-observability-building-data-quality-monitors-using-sql.html)'
- en: '[Data Catalogs Are Dead; Long Live Data Discovery](/2020/12/data-catalogs-dead-long-live-data-discovery.html)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据目录已死；数据发现万岁](/2020/12/data-catalogs-dead-long-live-data-discovery.html)'
- en: '[Data Cleaning and Wrangling in SQL](/2021/01/data-cleaning-wrangling-sql.html)'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQL中的数据清洗与处理](/2021/01/data-cleaning-wrangling-sql.html)'
- en: More On This Topic
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Data Quality Dimensions: Assuring Your Data Quality with Great Expectations](https://www.kdnuggets.com/2023/03/data-quality-dimensions-assuring-data-quality-great-expectations.html)'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据质量维度：用“伟大期望”确保你的数据质量](https://www.kdnuggets.com/2023/03/data-quality-dimensions-assuring-data-quality-great-expectations.html)'
- en: '[Data Governance and Observability, Explained](https://www.kdnuggets.com/2022/08/data-governance-observability-explained.html)'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据治理与可观测性，详解](https://www.kdnuggets.com/2022/08/data-governance-observability-explained.html)'
- en: '[IMPACT 2022: The Data Observability Summit, on Oct. 25-26](https://www.kdnuggets.com/2022/09/monte-carlo-impact-2022-data-observability-summit.html)'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[IMPACT 2022: 数据可观测性峰会，10 月 25-26 日](https://www.kdnuggets.com/2022/09/monte-carlo-impact-2022-data-observability-summit.html)'
- en: '[IMPACT: The Data Observability Summit is back November 8th and the…](https://www.kdnuggets.com/2023/10/monte-carlo-impact-the-data-observability-summit-is-back)'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[IMPACT: 数据可观测性峰会将于 11 月 8 日重返](https://www.kdnuggets.com/2023/10/monte-carlo-impact-the-data-observability-summit-is-back)'
- en: '[LangChain 101: Build Your Own GPT-Powered Applications](https://www.kdnuggets.com/2023/04/langchain-101-build-gptpowered-applications.html)'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[LangChain 101: 构建你自己的 GPT 驱动应用程序](https://www.kdnuggets.com/2023/04/langchain-101-build-gptpowered-applications.html)'
- en: '[Build Your Own PandasAI with LlamaIndex](https://www.kdnuggets.com/build-your-own-pandasai-with-llamaindex)'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 LlamaIndex 构建你自己的 PandasAI](https://www.kdnuggets.com/build-your-own-pandasai-with-llamaindex)'
