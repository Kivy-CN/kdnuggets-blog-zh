- en: A Guide to Instagramming with Python for Data Analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2017/08/instagram-python-data-analysis.html](https://www.kdnuggets.com/2017/08/instagram-python-data-analysis.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**By Nour Galaby, Data Enthusiast.**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Instagram header](../Images/71fcd40c2f3ae3d1ae9117e7c99aa091.png)'
  prefs: []
  type: TYPE_IMG
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Instagram is the largest photo sharing social media platform with 500 million
    monthly active users, and 95 million pictures and videos uploaded on Instagram
    everyday. It has a huge amount of data and huge potential. This guide will help
    you view Instagram as a source of data and not just a platform, and how to use
    it as a developer for your projects.
  prefs: []
  type: TYPE_NORMAL
- en: '**About API and Tools**'
  prefs: []
  type: TYPE_NORMAL
- en: Instagram has an official API but it is outdated and is currently very limited
    in things you can do with it. So in this guide I will use [LevPasha’s Unofficial
    Instagram API](https://github.com/LevPasha/Instagram-API-python), which supports
    all major features like like, follow, upload photo and video, etc! It is written
    in Python, but I will focus only on the data side.
  prefs: []
  type: TYPE_NORMAL
- en: I recommend using Jupyter notebooks and IPython. Normal python will work fine,
    but you may not have features like displaying the images
  prefs: []
  type: TYPE_NORMAL
- en: '**Installation**'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can install the library using `pip` this way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'You will need `ffmpeg` if you don''t have it. To install it on Linux:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'For Windows, run this in your Python interpreter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Logging in to Instagram Using the API**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: If successful, you should receive a "Login Success" message.
  prefs: []
  type: TYPE_NORMAL
- en: '**Simple Request**'
  prefs: []
  type: TYPE_NORMAL
- en: 'With that out of the way let''s get started with our first request:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: As you can see, the result is in JSON format, containing all of the requested
    data.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can access it in the normal key/value way. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Instagram image](../Images/a56de5ee93012382d2e72ac44187abd1.png)'
  prefs: []
  type: TYPE_IMG
- en: You can use any advance viewing tool (Notepad++) to view the JSON and explore
    it.
  prefs: []
  type: TYPE_NORMAL
- en: '**Get and View Instagram Timeline**'
  prefs: []
  type: TYPE_NORMAL
- en: Now let's do something more interesting. We will request the last posts in the
    timeline and view them in our notebook.
  prefs: []
  type: TYPE_NORMAL
- en: 'With this line you can get the timeline:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'And similar to the previous request, we will use LastJson() to view the result.
    By inspecting the resulting JSON, we can see that it holds a list in a key called
    ''items.'' Each element in that list holds information about a specific post in
    the timeline, including such elements as:'
  prefs: []
  type: TYPE_NORMAL
- en: '[text] - holds the text value for the caption written under the post, including
    hashtags'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[likes] - the number of likes that a post has'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[created_at] - date post created'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[comments] - post comments'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[image_versions] - holds links to the actual JPG file, which we will use to
    display it on our Jupyter notebook'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Functions**'
  prefs: []
  type: TYPE_NORMAL
- en: '`Get_posts_from_list()` and `Get_url()` will iterate over the list of posts
    and for each post will find the URL and append it to our empty list:'
  prefs: []
  type: TYPE_NORMAL
- en: 'After it''s done, we should have a list of URLs like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Instagram](../Images/eeab5c9613f4809b1074f9151a3b1faa.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To view the images, we can use the `Ipython.display` module as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Instagram](../Images/6532b4b589e865b1ab6b4d48877c57fe.png)'
  prefs: []
  type: TYPE_IMG
- en: '![Instagram](../Images/e385c67dee5360a722e15aa86b889761.png)'
  prefs: []
  type: TYPE_IMG
- en: Viewing images in a notebook is very useful and we will use those functions
    later to view our results, as you will see.
  prefs: []
  type: TYPE_NORMAL
- en: '**Get Your Most Liked Posts**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we know how to make a basic request, but what if we want to get more complex
    requests? Here we will do something similar: we will get our most liked posts.
    In order to do that, first we need to get all posts in your user profile, and
    then sort them by number of likes:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Get All User Posts**'
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to get all the posts we will use the `next_max_id` and `more_avialable`
    values to iterate over our list of results:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Write Clean Python Code Using Pipes](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
