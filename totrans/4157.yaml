- en: Build a Web Scraper with Python in 5 Minutes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2022/02/build-web-scraper-python-5-minutes.html](https://www.kdnuggets.com/2022/02/build-web-scraper-python-5-minutes.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Data scientists are often expected to collect large amounts of data to derive
    business value in organizations. Unfortunately, this is a skill that is often
    overlooked, as most data science courses don’t teach you to collect external data.
    Instead, there is a lot of emphasis placed on model building and training.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, I will show you how to create a web scraper from scratch.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: If you aren’t already familiar with the term, a web scraper is an automated
    tool that can extract large amounts of data from sites. You can collect up to
    hundreds of thousands of data points in just a few minutes with the help of web
    scraping.
  prefs: []
  type: TYPE_NORMAL
- en: We will scrape a site called “[Quotes to Scrape](https://quotes.toscrape.com/)”
    in this tutorial. This is a site that was specifically built to practice web scraping.
  prefs: []
  type: TYPE_NORMAL
- en: 'By the end of this article, you will be familiar with:'
  prefs: []
  type: TYPE_NORMAL
- en: Extracting raw HTML from a website
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the BeautifulSoup library to parse this HTML and extract useful pieces
    of information from the site
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Collecting data from multiple webpages at once
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Storing this data into a Pandas dataframe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Before we start building the scraper, make sure you have the following libraries
    installed — [Pandas](https://pandas.pydata.org/docs/), [BeautifulSoup](https://www.crummy.com/software/BeautifulSoup/bs4/doc/), [requests](https://docs.python-requests.org/en/latest/).
  prefs: []
  type: TYPE_NORMAL
- en: Once that’s done, let’s take a look at the site we want to scrape, and decide
    on the data points to extract from it.
  prefs: []
  type: TYPE_NORMAL
- en: '![Build a Web Scraper with Python in 5 Minutes](../Images/36c24272426adc420668875de0036904.png)'
  prefs: []
  type: TYPE_IMG
- en: This site consists of a list of quotes by prominent figures. There are three
    main bits of information displayed on the page — the quote, it’s author, and a
    few tags associated with it.
  prefs: []
  type: TYPE_NORMAL
- en: The site has ten pages, and we will scrape all the information available on
    it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s start by importing the following libraries:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, using the *requests *library, we will get the page we want to scrape
    and extract it’s HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we will pass the site’s HTML text to BeautifulSoup, which will parse
    this raw data so it can be easily scraped:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: All of the site’s data is now stored in the soup object. We can easily run BeautifulSoup’s
    in-built functions on this object in order to extract the data we want.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, if we wanted to extract all of the text available on the web page,
    we can easily do it with the following lines of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: You should see all of the site’s text appear on your screen.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let’s start scraping by scraping the quotes listed on the site. Right
    click on any of the quotes, and select “*Inspect Element*.” The Chrome Developer
    Tools will appear on your screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Build a Web Scraper with Python in 5 Minutes](../Images/dbecc5467aba59a027d53cffc15711b0.png)'
  prefs: []
  type: TYPE_IMG
- en: BeautifulSoup has methods like find() and findAll() that you can use to extract
    specific HTML tags from the web page.
  prefs: []
  type: TYPE_NORMAL
- en: In this case, notice that the <span> class called *text *is highlighted. This
    is because you right-clicked on one of the quotes on the page, and all the quotes
    belong to this *text *class.
  prefs: []
  type: TYPE_NORMAL
- en: 'We need to extract all the data in this class:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Once you run the code above, the following output will be produced:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Build a Web Scraper with Python in 5 Minutes](../Images/b883a12a11853b13a2ce2a158532a465.png)'
  prefs: []
  type: TYPE_IMG
- en: There are ten quotes on the web page, and our scraper has successfully collected
    all of them. Great!
  prefs: []
  type: TYPE_NORMAL
- en: Now, we will scrape author names using the same approach.
  prefs: []
  type: TYPE_NORMAL
- en: If you right click on any of the author names on the web page and click Inspect,
    you will see that they are contained within the <small> tag, and the class name
    is *author.*
  prefs: []
  type: TYPE_NORMAL
- en: '![Build a Web Scraper with Python in 5 Minutes](../Images/800935a2cbaf6e535af7d66350f45f26.png)'
  prefs: []
  type: TYPE_IMG
- en: We will use the find() and findAll() functions to extract all the author names
    within this tag.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The following output will be rendered:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Build a Web Scraper with Python in 5 Minutes](../Images/d1cd7739f696412e760b686fbd3e3351.png)'
  prefs: []
  type: TYPE_IMG
- en: Again, we managed to scrape all authors listed on the page. We’re almost done!
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we will scrape the tags listed on the site.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you right click on any of the tags and click on Inspect Element, you will
    see that they are all contained within the <meta> tag and separated by a comma:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Build a Web Scraper with Python in 5 Minutes](../Images/afc734bb6922cf0859f71bad101fba65.png)'
  prefs: []
  type: TYPE_IMG
- en: Also, notice that the <meta> tag is wrapped by a parent <div> tag, with the
    class name *tags.*
  prefs: []
  type: TYPE_NORMAL
- en: 'To extract all the tags on the page, run the following lines of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The output on your screen will look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Build a Web Scraper with Python in 5 Minutes](../Images/cf53e9316d48061b958451244b178027.png)'
  prefs: []
  type: TYPE_IMG
- en: We have now successfully scraped all the data on a single page of the site.
  prefs: []
  type: TYPE_NORMAL
- en: But we’re not done! Remember, the site has ten pages, and we need to collect
    the same data from all of them.
  prefs: []
  type: TYPE_NORMAL
- en: Before we do this, let’s create three empty arrays so we can store the data
    collected.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Now, we will create a loop that ranges from 1–10, and iterate through every
    page on the site. We will run the exact same lines of code we created earlier.
    The only difference is that instead of printing the output, we will now append
    it to an array.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Done!
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, let’s consolidate all the data collected into a Pandas dataframe:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Taking a look at the head of the final data frame, we can see that all the
    site’s scraped data has been arranged into three columns:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Build a Web Scraper with Python in 5 Minutes](../Images/e2bfa793c4fc716c3e3fe8f06cb232a3.png)'
  prefs: []
  type: TYPE_IMG
- en: That’s all for this tutorial!
  prefs: []
  type: TYPE_NORMAL
- en: We have successfully scraped a website using Python libraries, and stored the
    extracted data into a dataframe.
  prefs: []
  type: TYPE_NORMAL
- en: This data can be used for further analysis — you can build a clustering model
    to group similar quotes together, or train a model that can automatically generate
    tags based on an input quote.
  prefs: []
  type: TYPE_NORMAL
- en: If you’d like to practice the skills you learnt above, [here](http://books.toscrape.com/) is
    another relatively easy site to scrape.
  prefs: []
  type: TYPE_NORMAL
- en: There is more to web scraping than the techniques outlined in this article.
    Real-world sites often have bot protection mechanisms in place that make it difficult
    to collect data from hundreds of pages at once. Using libraries like *requests *and *BeautifulSoup *will
    suffice when you want to pull data from static HTML webpages like the one above.
  prefs: []
  type: TYPE_NORMAL
- en: If you’re pulling data from a site that requires authentication, has verification
    mechanisms like captcha in place, or has JavaScript running in the browser while
    the page loads, you will have to use a browser automation tool like Selenium to
    aid with the scraping.
  prefs: []
  type: TYPE_NORMAL
- en: If you’d like to learn Selenium for web scraping, I suggest starting out with [this](https://www.analyticsvidhya.com/blog/2020/08/web-scraping-selenium-with-python/) beginner-friendly
    tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Natassha Selvaraj](https://www.natasshaselvaraj.com/)** is a self-taught
    data scientist with a passion for writing. You can connect with her on [LinkedIn](https://www.linkedin.com/in/natassha-selvaraj-33430717a/).'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Build a Machine Learning Web App in 5 Minutes](https://www.kdnuggets.com/2022/03/build-machine-learning-web-app-5-minutes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News March 9, 2022: Build a Machine Learning Web App in 5…](https://www.kdnuggets.com/2022/n10.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[FastAPI Tutorial: Build APIs with Python in Minutes](https://www.kdnuggets.com/fastapi-tutorial-build-apis-with-python-in-minutes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Build a Text-to-Speech Converter with Python in 5 Minutes](https://www.kdnuggets.com/2022/09/build-texttospeech-converter-python-5-minutes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Build AI Chatbot in 5 Minutes with Hugging Face and Gradio](https://www.kdnuggets.com/2023/06/build-ai-chatbot-5-minutes-hugging-face-gradio.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Understanding Bias-Variance Trade-Off in 3 Minutes](https://www.kdnuggets.com/2020/09/understanding-bias-variance-trade-off-3-minutes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
