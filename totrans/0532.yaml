- en: Using NLP to improve your Resume
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用NLP来改善你的简历
- en: 原文：[https://www.kdnuggets.com/2021/02/nlp-improve-resume.html](https://www.kdnuggets.com/2021/02/nlp-improve-resume.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/02/nlp-improve-resume.html](https://www.kdnuggets.com/2021/02/nlp-improve-resume.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [David Moore](https://www.linkedin.com/in/mooredvd/), Specialist in Finance
    Technology implementation**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由[David Moore](https://www.linkedin.com/in/mooredvd/)，金融技术实施专家**'
- en: Recruiters are using increasingly complicated Software and tools to scan and
    match Resumes to posted job positions and job specifications. If your Resume (CV)
    is generic, or the job specification is vague and/or generic, these tools will
    work against you. AI really is working against your job application, and I am
    not sure you know it or will accept it! But let me demonstrate some techniques
    that can help you **balance up the odds**. Naturally, we will use NLP (Natural
    Language Processing), Python, and some Altair visuals. Are you ready to fight
    back?
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 招聘人员正在使用越来越复杂的软件和工具来扫描和匹配简历与发布的职位和职位规格。如果你的简历（CV）是通用的，或者职位规格模糊和/或通用，这些工具可能会对你不利。人工智能确实在对抗你的职位申请，我不确定你是否知道或会接受这一点！但让我展示一些可以帮助你**平衡机会**的技巧。自然，我们将使用NLP（自然语言处理）、Python和一些Altair可视化。你准备好反击了吗？
- en: Consider that you are interested in a good position that you noticed online.
    How many others would have seen the same job? Have roughly the same experience
    and qualifications as you? How many applicants might have applied, do you think?
    Could it be less than 10 or less than 1,000?
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 设想你对在网上看到的一个好职位感兴趣。还有多少其他人看到过相同的职位？有大致相同的经验和资格吗？你认为有多少申请者申请了？会少于10个还是少于1,000个？
- en: Further, consider that the interview panel might be only 5 strong candidates.
    So how do you ‘weed’ out 995 applications to refine and deliver just 5 strong
    candidates? This is why I say you need to balance up the odds or be thrown out
    with the weeds!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，考虑到面试小组可能只有5名强候选人。那么你如何‘筛选’出995份申请，以精炼并呈现出仅5名强候选人？这就是为什么我说你需要平衡机会，否则就会被淘汰！
- en: Processing 1,000 Resumes (CV)
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 处理1,000份简历（CV）
- en: I suppose, first off, you could divide up those Resumes into a stack of 3 or
    5\. Print them off and assign them to human readers. Each reader provides one
    selection from their pile. With 5 readers that is a bunch of 200 Resumes — go
    pick the best one or two. Reading those would take a long time and probably only
    serve to yield an answer in the end. We can use Python to read all those Resumes
    in minutes!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我想，首先，你可以将这些简历分成3或5堆。打印出来，并分配给人工阅读者。每个阅读者从他们的堆中选择一份。5个阅读者就是200份简历——挑选出最好的一两份。阅读这些将需要很长时间，最终可能只会得出一个答案。我们可以使用Python在几分钟内阅读所有这些简历！
- en: Reading the article ‘[How I used NLP (Spacy) to screen Data Science Resume](https://towardsdatascience.com/do-the-keywords-in-your-resume-aptly-represent-what-type-of-data-scientist-you-are-59134105ba0d)’
    here on Medium demonstrates that just two code lines will collect up the file
    names of those 1,000 Resumes.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在Medium上的文章‘[如何使用NLP（Spacy）筛选数据科学简历](https://towardsdatascience.com/do-the-keywords-in-your-resume-aptly-represent-what-type-of-data-scientist-you-are-59134105ba0d)’中演示了只需两行代码就能收集到那1,000份简历的文件名。
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The variable ‘onlyfiles’ is a Python list that contains the file names of all
    those Resumes got using the Python os library. If you study the article, you will
    also see how your resume can be ranked and eliminated almost automatically based
    on keyword analysis. Since we are trying to even up the odds, we need to focus
    on your desired job specification and your current resume. Do they match?
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 变量‘onlyfiles’是一个Python列表，包含了通过Python os库获取的所有简历的文件名。如果你研究这篇文章，你还会看到如何基于关键词分析几乎自动对你的简历进行排名和淘汰。由于我们试图平衡机会，我们需要关注你所期望的职位规格和你当前的简历。它们匹配吗？
- en: Matching the Resume and Job Description
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 匹配简历和职位描述
- en: To even up the odds, we want to scan a job description, the Resume, and measure
    the match. Ideally, we do it so that the output is useful to tune in the game
    for you.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了平衡机会，我们希望扫描职位描述、简历，并测量匹配度。理想情况下，我们的输出能帮助你在游戏中调整策略。
- en: Reading the documents
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读文档
- en: Since it is your Resume, you likely have that in either PDF or DOCX. There are
    Python modules available to read most data formats. Figure 1 demonstrates how
    to read the documents having saved the contents into a text file.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是你的简历，你可能有PDF或DOCX格式。Python模块可以读取大多数数据格式。图1演示了如何将文档内容保存到文本文件中并读取这些文档。
- en: '![Figure](../Images/4306a58db78e77c080f98e53e6550bd5.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/4306a58db78e77c080f98e53e6550bd5.png)'
- en: 'Figure 1: Reading text files from disk and make a text object. Image taken
    by the author from Visual studio Code — Jupyter Notebook'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '图 1: 从磁盘读取文本文件并创建文本对象。图片由作者从 Visual Studio Code — Jupyter Notebook 中拍摄。'
- en: The first step is always to open the file and read the lines. The following
    step is to convert from a list of strings to a single text, doing some cleaning
    along the way. Figure 1 creates the variables ‘jobContent’, and ‘cvContent’ and
    these represent a string object that includes all the text. The next code snippet
    shows how to read a Word document directly.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步总是打开文件并读取行。接下来的步骤是将字符串列表转换为单一文本，并在过程中进行一些清理。图 1 创建了变量 ‘jobContent’ 和 ‘cvContent’，这些变量代表一个包含所有文本的字符串对象。下一个代码片段展示了如何直接读取
    Word 文档。
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The variable ‘text_resume’ is a string object that holds all the text from the
    Resume, just like before. You can also use PyPDF2.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 变量 ‘text_resume’ 是一个字符串对象，保存了简历中的所有文本，就像之前一样。你也可以使用 PyPDF2。
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Suffice it to say that a range of options exists for the practitioner to read
    the documents converting them to a clean treated text. Those documents could be
    extensive, hard to read, and frankly dull. You could start with a summary.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 说到这里，已经有一系列选项供从业者阅读文档并将其转换为清洁处理过的文本。这些文档可能很长，很难阅读，而且坦白说也很枯燥。你可以从总结开始。
- en: Processing the text
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 处理文本
- en: I love Gensim and use it frequently.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢 Gensim 并经常使用它。
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We created the variable ‘resume_text’ by reading a Word file. Let’s make a summary
    of the Resume and job posting.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过读取一个 Word 文件创建了变量 ‘resume_text’。让我们对简历和职位发布进行总结。
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Gensim.summarization.summarizer.summarize will create a concise summary for
    you.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Gensim.summarization.summarizer.summarize 将为你创建一个简洁的总结。
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now you can read an overall summary of the job role and your existing Resume!
    Did you miss anything about the job role that is being highlighted in summary?
    Small nuanced details can help you sell yourself. Does your summarized document
    make sense and bring out your essential qualities?
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以阅读职位角色和你现有简历的整体总结！你是否错过了总结中强调的职位角色的任何信息？小的细节可以帮助你推销自己。你的总结文档是否有意义，并突出了你的核心素质？
- en: Perhaps a concise summary alone is not sufficient. Next, let us measure how
    similar your Resume is to a job specification. Figure 2 provides the code.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 也许仅仅是简明的总结是不够的。接下来，让我们衡量你的简历与职位要求的相似度。图 2 提供了代码。
- en: '![Figure](../Images/cb8d354f49f7dceacc7834fe7253417c.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/cb8d354f49f7dceacc7834fe7253417c.png)'
- en: Figure 2 — code to match two documents and give a similarity score. Image by
    author.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2 — 匹配两个文档并给出相似度评分的代码。图片由作者提供。
- en: Broadly we make a list of our text objects then create an instance of the sklearn
    CountVectorizer() class. We also import the cosine_similarity metric, which helps
    us measure the similarity of the two documents. ‘**Your resume matches about 69.44%
    of the job description**’. That sounds wonderful, but I won’t get carried away.
    Now you can read a summary of the documents and get a similarity measurement.
    The odds are improving.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 大致来说，我们首先列出文本对象，然后创建 sklearn CountVectorizer() 类的实例。我们还导入了 cosine_similarity
    度量，它帮助我们测量两个文档的相似度。‘**你的简历与职位描述匹配约 69.44%**’。这听起来很棒，但我不会因此自满。现在你可以阅读文档的摘要并获取相似度测量。情况正在改善。
- en: Next, we can look at the job description keywords and see which ones are matched
    in the Resume. Did we miss out on a few keywords that could strengthen the match
    towards 100%? Over to spacy now. It’s quite a journey so far. Gensim, sklearn
    and now spacy! I hope you aren’t dizzy!
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以查看职位描述中的关键词，并查看哪些在简历中匹配到了。我们是否遗漏了一些可以提高匹配度至 100% 的关键词？现在转到 spacy。到目前为止，这是一段相当曲折的旅程。Gensim、sklearn
    现在还有 spacy！希望你没有感到头晕！
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We will use the PhraseMatcher feature of spacy to match critical phrases from
    the job description to the Resume. Gensim keywords can help to provide those phrases
    to match. Figure 3 shows how to run the match.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 spacy 的 PhraseMatcher 功能来匹配职位描述中的关键短语与简历中的内容。Gensim 关键词可以帮助提供这些短语以供匹配。图
    3 显示了如何进行匹配。
- en: '![Figure](../Images/ff153c9f6609ddbf2b7c57810b71f9f9.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/ff153c9f6609ddbf2b7c57810b71f9f9.png)'
- en: 'Figure 3: using Keywords and Phrase matching to cross-reference the documents.
    Image by author.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '图 3: 使用关键词和短语匹配来交叉引用文档。图片由作者提供。'
- en: Using the snippet, in Figure 3, provides a list of matched keywords. Figure
    4 shows a method to summarize those keyword matches. Using the Counter dictionary
    from Collections.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 使用图 3 中的代码片段，可以提供匹配的关键词列表。图 4 显示了总结这些关键词匹配的方法。使用 Collections 中的 Counter 字典。
- en: '![Figure](../Images/474218adfafd8597caabf2ce2dbe0710.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![Figure](../Images/474218adfafd8597caabf2ce2dbe0710.png)'
- en: Figure 4 — using Collections. Counter to make a count of the keyword hits. Image
    by author.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4 — 使用集合。计数器来计算关键字的命中次数。图片由作者提供。
- en: The term ‘reporting’ is contained in the job description, and the Resume has
    3 hits. What phrases or keywords are in the job posting but aren’t on the CV (resume)?
    Could we add more? I used Pandas to answer this question — you can see the output
    in Figure 5.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: “reporting” 一词包含在职位描述中，而简历中有 3 次命中。职位发布中有哪些短语或关键字在简历中没有？我们可以添加更多吗？我使用 Pandas
    来回答这个问题 — 你可以在图 5 中看到输出。
- en: '![Figure](../Images/68fe3f1342f36a1d7a62a4f3846a67b1.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![Figure](../Images/68fe3f1342f36a1d7a62a4f3846a67b1.png)'
- en: Figure 5 — keywords in the job description not mentioned on the Resume. Image
    by the author.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5 — 职位描述中的关键字在简历中未提及。图片由作者提供。
- en: If this is true, it is also strange. The match was 69.44% at the document level
    but look at that long list of keywords that aren’t mentioned on the Resume. Figure
    6 shows the keywords that are mentioned.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这是真的，那也很奇怪。文档级别的匹配度为 69.44%，但看看那些在简历中未提及的长列表的关键字。图 6 显示了提及的关键字。
- en: '![Figure](../Images/b15b7316b64ba6626de340dfc823ccef.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![Figure](../Images/b15b7316b64ba6626de340dfc823ccef.png)'
- en: Figure 6 keywords matched using Pandas. Image by the author.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6 使用 Pandas 匹配的关键字。图片由作者提供。
- en: In reality, there are very few keyword matches against the job specification,
    which leads to my scepticism about the cosine similarity measure of 69.44%. Still,
    the odds are improving because we can see keywords in the job specification that
    aren’t in the Resume. Fewer keyword matches mean that you are more likely to wash
    out with the weeds. Looking at the missing keywords, you could go right ahead,
    strengthen the Resume, and re-run the analysis. Just peppering your resume with
    keywords will have a negative consequence, though, and you have to be extremely
    careful with your art. You might get through an initial automated screening, but
    you will be eliminated because of a perceived lack of writing skill. We really
    need to rank phrases and focus on the essential topics or words in the job specification.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，与职位规范的关键字匹配非常少，这使我对 69.44% 的余弦相似度度量表示怀疑。尽管如此，情况有所改善，因为我们可以看到职位规范中的关键字在简历中未出现。关键字匹配较少意味着你更有可能被淘汰。查看缺失的关键字，你可以立即加强简历，然后重新进行分析。不过，仅仅在简历中加入关键字会产生负面后果，你必须非常谨慎。你可能通过初步的自动筛选，但由于被认为写作技巧不足而被淘汰。我们确实需要对短语进行排名，并专注于职位规范中的核心话题或单词。
- en: Let’s look at ranked phrases next. For this exercise, I will use my own NLP
    class and some methods I used previously.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们来看排名短语。对于这个练习，我将使用我自己的 NLP 类以及之前使用过的一些方法。
- en: '[PRE7]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Using my own class, I recovered the ranked phrases from the job and Resume objects
    we created earlier. The snippet below provides you with the method definition.
    We are now using the rake module to extract ranked_phrases and scores.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 使用我自己的类，我从之前创建的职位和简历对象中恢复了排名短语。下面的代码片段提供了方法定义。我们现在使用 rake 模块来提取 ranked_phrases
    和 scores。
- en: '[PRE8]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Figure 7 provides an illustration of the output of the method call.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7 提供了方法调用的输出示意图。
- en: '![Figure](../Images/2ad796cdb63bc1024c598298c8be6077.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![Figure](../Images/2ad796cdb63bc1024c598298c8be6077.png)'
- en: Figure 7 — ranked phrases from the job posting. Image by the author using his
    own code.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7 — 职位发布中的排名短语。图片由作者使用自己的代码提供。
- en: ‘project management methodology — project management’ is ranked as 31.2, so
    this is the most crucial topic in the job posting. The critical phrases in the
    Resume can also be printed with a minor variation.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: ‘project management methodology — project management’ 排名为 31.2，因此这是职位发布中的最关键话题。简历中的关键短语也可以通过小的变动来打印出来。
- en: '[PRE9]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Reading the top phrases from both the Resume and the job posting, we can ask
    ourselves is there a match or the degree of the similarity? We can certainly run
    a sequence to find out! The following code creates a cross-reference between the
    ranked phrases on the job posting and from the Resume.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 从简历和职位发布中读取顶部短语，我们可以问自己是否存在匹配或相似度的程度？我们当然可以运行一个序列来找出！以下代码创建了职位发布和简历中的排名短语之间的交叉引用。
- en: '[PRE10]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note that we are using fuzzy-wuzzy as the match engine. The code also has a
    Levenshtein ratio and jaccard_similarity function. Figure 8 provides an illustration
    of what this can look like.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们使用 fuzzy-wuzzy 作为匹配引擎。代码中还有 Levenshtein 比率和 jaccard_similarity 函数。图 8
    提供了这可能是什么样子的示意图。
- en: '![Figure](../Images/9fc309d648c7e6e1186f7dec58de93bd.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/9fc309d648c7e6e1186f7dec58de93bd.png)'
- en: Figure 8 key words cross-referenced between the job description and the Resume.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图8 显示了职位描述与简历之间交叉引用的关键词。
- en: The ‘importance’ variable is the ranked phrase score from the resume. The ‘similarity’
    variable is the ratio score from fuzzy-wuzzy. The term ‘project management methodology’
    is ranked 31.2 but cross-referencing the rated Resume phrases only scores 22.5
    on average. Whilst project management is the top priority for the job, the Resume
    scores more decisively on different technical items. You see how AI works against
    your application by doing a similar exercise.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: “重要性”变量是来自简历的排名短语分数。“相似度”变量是模糊匹配的比率分数。术语“项目管理方法论”排名31.2，但交叉引用评分的简历短语的平均分数仅为22.5。尽管项目管理是职位的首要任务，但简历在不同的技术项上得分更高。你可以通过进行类似的练习来了解人工智能如何对待你的申请。
- en: '![Figure](../Images/de97a1c49299de6aae4368ffbb712cdb.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/de97a1c49299de6aae4368ffbb712cdb.png)'
- en: Figure 9 term importance versus influence in the Resume. Image by the author.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图9 显示了简历中的术语重要性与影响力。图像由作者提供。
- en: Figure 9 shows another perspective. Working with tokens (words) shows each word’s
    importance in the job description versus the number of hits in the Resume — the
    more occurrences of a specific word in the document, the greater the influence.
    The phrase finance is of low importance to the job description but highly influential
    in the Resume. Is this a Finance guy looking for an IT job? Words can betray you
    with the AI!
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图9 显示了另一种视角。通过处理词汇（单词），可以看到每个单词在职位描述中的重要性与在简历中出现的次数——特定单词在文档中的出现次数越多，影响力越大。词汇“财务”在职位描述中的重要性较低，但在简历中具有较高的影响力。这是一个财务人员在寻找IT工作吗？单词可能会在人工智能面前背叛你！
- en: I am sure by now that you have the picture. Using NLP tools and libraries can
    help to really understand a job description and measure the relative match. It
    certainly isn’t robust or gospel, but it does tend to even the odds. Your words
    matter, but you cannot pepper keywords in a Resume. You really have to write a
    strong resume and apply for roles that suit you. Text processing and text mining
    is a big topic, and we only scratch the surface of what can be done. I find text
    mining and text-based machine learning models to be deadly accurate. Let’s look
    at some visuals using Altair and then conclude.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信你现在已经明白了。使用NLP工具和库可以帮助真正理解职位描述并衡量相对匹配度。虽然这并不完全可靠或绝对正确，但确实可以平衡竞争。你的用词很重要，但你不能在简历中随意堆砌关键词。你必须写一份强有力的简历，并申请适合你的职位。文本处理和文本挖掘是一个大话题，我们仅仅触及了可以做的表面。我发现文本挖掘和基于文本的机器学习模型非常准确。让我们看一些使用Altair的可视化效果，然后得出结论。
- en: Altair visuals
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Altair可视化
- en: I have been using Altair a lot recently and much more so that Seaborn or Matplotlib.
    The grammar in Altair just clicks with me. I made three visuals to help with the
    discussion — figure 10 shows keyword importance and influence within the Resume.
    Using a colour scale, we can see that words like adoption appear twice in the
    CV but lower priority on the job posting.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我最近一直在使用Altair，而且比Seaborn或Matplotlib更多。Altair的语法让我非常满意。我制作了三个可视化图表来帮助讨论——图10显示了简历中的关键词重要性和影响力。通过颜色比例尺，我们可以看到像“采用”这样的词在简历中出现了两次，但在职位发布中优先级较低。
- en: '![Figure](../Images/e8dcbd2bf65809e41b4da6a8abb5a7ae.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/e8dcbd2bf65809e41b4da6a8abb5a7ae.png)'
- en: Figure 10 an Altair visual. Image by the author. Words plotted against importance
    and influence in the Resume.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图10 显示了Altair的可视化效果。图像由作者提供。图表显示了简历中按重要性和影响力排列的词汇。
- en: Figure 11 shows the cross-reference of ranked topics found on the job posting
    and those found on the Resume. The most important phrase is ‘project management..’
    but that scores weakly in the ranked terms from the CV.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图11 显示了职位发布中发现的排名主题与简历中发现的主题的交叉引用。最重要的短语是“项目管理..”但在简历中排名的术语中得分较低。
- en: '![Figure](../Images/eee9c33eb18d02b18eeaa2022fec416d.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/eee9c33eb18d02b18eeaa2022fec416d.png)'
- en: Figure 11\. A stacked bar chart showing ranked phrases and correlation between
    Resume and job posting.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图11\. 显示了按排名短语和简历与职位发布之间的相关性的堆叠条形图。
- en: Figure 12 plots similar words. Finance is used 10 times on the Resume but not
    mentioned at all in the job posting. The word project is mentioned on the Resume(CV)
    and also appears in the job posting.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图12 绘制了相似词汇。财务在简历中使用了10次，但在职位发布中完全没有提及。词汇“项目”在简历（CV）中提到过，并且也出现在职位发布中。
- en: '![Figure](../Images/9be28d669e055ed510a63abddb2e3d17.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/9be28d669e055ed510a63abddb2e3d17.png)'
- en: Figure 12 analysis of the overlap of keywords between documents. Image by the
    author.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图12：文档间关键词重叠的分析。图片由作者提供。
- en: Looking at the charts, it seems to me that the Resume and job description are
    not a good match. Very few shared keywords and the ranked phrases look very different.
    This is what gets your resume washed out with the weeds!
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 从图表来看，简历和职位描述似乎不匹配。共享的关键词非常少，排名的短语看起来也很不同。这就是为什么你的简历会被淹没在杂草中的原因！
- en: Conclusion
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论
- en: Reading this article might seem more like a big-budget “**shoot ’em dead CGI
    Hollywood**” movie. All the big-name actors generally appear in those blockbusters.
    The big NLP libraries had a starring role in this article, and we even had cameo
    appearances by many more, perhaps older and more mature names such as NLTK. We
    used libraries such as Gensim, Spacy, sklearn and demonstrated their use. With
    my own class making a guest appearance, wrapping NLTK, rake, textblob and a heap
    of other modules, all performing and surfacing insights into text analytics,showing
    you how you could be separated from that opportunity to land your dream job.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读这篇文章可能更像是一部高预算的“**打得死的 CGI 好莱坞**”电影。所有的大牌演员通常都会出现在这些大片中。本文中大 NLP 库扮演了主角，我们甚至还有许多其他的“客串出演”，可能是一些较老且更成熟的名字，比如
    NLTK。我们使用了像 Gensim、Spacy、sklearn 等库，并演示了它们的使用。我的类也作为特别出演，封装了 NLTK、rake、textblob
    以及一堆其他模块，所有这些模块都在进行文本分析并提供见解，向你展示如何避免错失实现梦想工作的机会。
- en: Landing that dream job requires a clear and unrelenting focus on detail and
    careful preparation of the job application, the CV, and cover letter. Using Natural
    Language processing is not going to change you into the best overall candidate.
    That is up to you! But it can improve your chances of beating the early rounds
    powered by AI.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 实现梦想工作的关键在于对细节的明确和坚持不懈的关注，以及对求职申请、简历和求职信的精心准备。使用自然语言处理不会让你成为最佳候选人。这要靠你自己！但它可以提高你在
    AI 驱动的早期筛选中的胜算。
- en: '![Figure](../Images/fc3c5e44f24d4616960335eb92478811.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/fc3c5e44f24d4616960335eb92478811.png)'
- en: Photo by [Vidar Nordli-Mathisen](https://unsplash.com/@vidarnm?utm_source=medium&utm_medium=referral) on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Vidar Nordli-Mathisen](https://unsplash.com/@vidarnm?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Every fisher man knows that you need good bait!
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 每个渔夫都知道需要好的饵料！
- en: '**Bio: [David Moore](https://www.linkedin.com/in/mooredvd/)** ([@CognitiveDave](https://twitter.com/CognitiveDave))
    is a Specialist in Finance Technology implementation. David is interested in developing
    good Enterprise services that empower users, frees them from unnecessary work,
    and surfaces relevant insights.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：[David Moore](https://www.linkedin.com/in/mooredvd/)** ([@CognitiveDave](https://twitter.com/CognitiveDave))
    是金融技术实施专家。David 对开发优秀的企业服务感兴趣，这些服务可以赋能用户，解放他们免于不必要的工作，并提供相关的见解。'
- en: '[Original](https://towardsdatascience.com/ai-is-working-against-your-job-application-bec65d496d22).
    Reposted with permission.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/ai-is-working-against-your-job-application-bec65d496d22)。经授权转载。'
- en: '**Related:**'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[How to Get Data Science Interviews: Finding Jobs, Reaching Gatekeepers, and
    Getting Referrals](/2021/02/data-science-interviews-finding-jobs-reaching-gatekeepers-getting-referrals.html)'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何获得数据科学面试机会：寻找工作、接触门卫和获取推荐](https://www.kdnuggets.com/2021/02/data-science-interviews-finding-jobs-reaching-gatekeepers-getting-referrals.html)'
- en: '[Getting Started with 5 Essential Natural Language Processing Libraries](/2021/02/getting-started-5-essential-nlp-libraries.html)'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[入门指南：5 个必备的自然语言处理库](/2021/02/getting-started-5-essential-nlp-libraries.html)'
- en: '[6 NLP Techniques Every Data Scientist Should Know](/2021/02/6-nlp-techniques.html)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个数据科学家都应该知道的 6 种 NLP 技术](/2021/02/6-nlp-techniques.html)'
- en: More On This Topic
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关话题
- en: '[Must-haves on Your Data Science Resume](https://www.kdnuggets.com/2022/06/musthaves-data-science-resume.html)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学简历中的必备要素](https://www.kdnuggets.com/2022/06/musthaves-data-science-resume.html)'
- en: '[7 Machine Learning Portfolio Projects to Boost the Resume](https://www.kdnuggets.com/2022/09/7-machine-learning-portfolio-projects-boost-resume.html)'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[7 个机器学习作品集项目提升简历](https://www.kdnuggets.com/2022/09/7-machine-learning-portfolio-projects-boost-resume.html)'
- en: '[KDnuggets News, September 21: 7 Machine Learning Portfolio Projects…](https://www.kdnuggets.com/2022/n37.html)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻，9 月 21 日：7 个机器学习作品集项目……](https://www.kdnuggets.com/2022/n37.html)'
- en: '[7 Things Students Are Missing in a Data Science Resume](https://www.kdnuggets.com/7-things-students-are-missing-in-a-data-science-resume)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学生在数据科学简历中遗漏的 7 件事](https://www.kdnuggets.com/7-things-students-are-missing-in-a-data-science-resume)'
- en: '[7 AI Portfolio Projects to Boost the Resume](https://www.kdnuggets.com/7-ai-portfolio-projects-to-boost-the-resume)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[7 个 AI 作品集项目来提升简历](https://www.kdnuggets.com/7-ai-portfolio-projects-to-boost-the-resume)'
- en: '[How to Use ChatGPT to Improve Your Data Science Skills](https://www.kdnuggets.com/2023/03/chatgpt-improve-data-science-skills.html)'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何使用 ChatGPT 提升你的数据科学技能](https://www.kdnuggets.com/2023/03/chatgpt-improve-data-science-skills.html)'
