- en: Simplify Data Processing with Pandas Pipeline
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过Pandas管道简化数据处理
- en: 原文：[https://www.kdnuggets.com/2022/08/simplify-data-processing-pandas-pipeline.html](https://www.kdnuggets.com/2022/08/simplify-data-processing-pandas-pipeline.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2022/08/simplify-data-processing-pandas-pipeline.html](https://www.kdnuggets.com/2022/08/simplify-data-processing-pandas-pipeline.html)
- en: '![Simplify Data Processing with Pandas Pipeline](../Images/dac07a1e2d0545f432c9878310efc11d.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![通过Pandas管道简化数据处理](../Images/dac07a1e2d0545f432c9878310efc11d.png)'
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Introduction
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你所在组织的IT工作'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: In the R language, we use %>% to create pipelines and perform multiple operations
    on a dataset. Similarly, for creating a machine learning pipeline, we use scikit-learn’s
    [Pipeline](https://scikit-learn.org/stable/modules/generated/sklearn.pipeline.Pipeline.html)
    to process the data, build and evaluate the model. So, what do we use for creating
    data pipelines in Python? We use a pandas [pipe](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.pipe.html)
    to apply chainable functions.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在R语言中，我们使用%>%创建管道，并对数据集执行多个操作。类似地，为了创建机器学习管道，我们使用scikit-learn的 [Pipeline](https://scikit-learn.org/stable/modules/generated/sklearn.pipeline.Pipeline.html)
    处理数据、构建和评估模型。那么，在Python中创建数据管道时我们用什么？我们使用pandas的 [pipe](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.pipe.html)
    来应用可链式函数。
- en: Pandas Pipe Tutorial
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pandas管道教程
- en: In this tutorial, we will learn to create a pandas pipe and add multiple chainable
    functions to perform data processing and visualization.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将学习创建pandas管道，并添加多个链式函数以执行数据处理和可视化。
- en: We will be using the [Deepnote](https://deepnote.com/) environment to run the
    code and display sharp-looking pandas data frames.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 [Deepnote](https://deepnote.com/) 环境运行代码，并展示外观清晰的pandas数据框。
- en: Getting Started
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门
- en: We will load and display the [Mall Customer Segmentation](https://www.kaggle.com/datasets/vjchoudhary7/customer-segmentation-tutorial-in-python)
    dataset from Kaggle using `read_csv()`.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`read_csv()`从Kaggle加载并展示 [Mall Customer Segmentation](https://www.kaggle.com/datasets/vjchoudhary7/customer-segmentation-tutorial-in-python)
    数据集。
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: It contains customer ID, age, gender, income, and spending score.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 它包含客户ID、年龄、性别、收入和消费评分。
- en: '![Simplify Data Processing with Pandas Pipeline](../Images/da71e40975b21df97bc1f9dad0076c89.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![通过Pandas管道简化数据处理](../Images/da71e40975b21df97bc1f9dad0076c89.png)'
- en: Creating data processing functions
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建数据处理函数
- en: Now write the simple Python functions that take one or more than one arguments.
    Every function must have a dataframe as the first argument to create a chainable
    pipe.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在编写简单的Python函数，这些函数接受一个或多个参数。每个函数必须以数据框作为第一个参数，以创建链式管道。
- en: '**filter_male_income**: the function takes two columns and filters the data
    for male customers with an annual income greater than 15.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**filter_male_income**: 该函数接受两个列，并筛选出年收入大于15的男性客户数据。'
- en: '**mean_group**: it groups the dataframe on a single column with mean and drops
    the CustomerID column.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**mean_group**: 它按单列对数据框进行分组并计算均值，并删除CustomerID列。'
- en: '**uppercase_column_name**: it transforms columns name to uppercase.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**uppercase_column_name**: 它将列名转换为大写。'
- en: '**bar_plot**: the function uses the single columns and plots the bar chart.
    It is using `matplotlib.pyplot` on the back end.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**bar_plot**: 该函数使用单列并绘制条形图。它在后台使用`matplotlib.pyplot`。'
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Pipeline with one function
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 带有一个函数的管道
- en: In this part, we will create a simple pipeline with a single function. We will
    add `.pipe()` after the pandas dataframe (data) and add a function with two arguments.
    In our case, the two columns are “Gender” and "Annual Income (k$)".
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将创建一个包含单一函数的简单管道。我们将在pandas dataframe（data）后添加`.pipe()`，并添加一个有两个参数的函数。在我们的案例中，这两个列是“Gender”和“Annual
    Income (k$)”。
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![Simplify Data Processing with Pandas Pipeline](../Images/2a9097f1a48e73978843c5b1402ab086.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![使用Pandas管道简化数据处理](../Images/2a9097f1a48e73978843c5b1402ab086.png)'
- en: Pipeline with multiple functions
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 带有多个函数的管道
- en: Let’s try a bit of a complex example and add 2 more functions into the pipeline.
    To add the other function, just add `.pipe()` after the first pipe function. We
    can add as many pipes into the data pipeline with multiple arguments. The results
    are reproducible, and the code is easily readable and clean.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试一个稍复杂的示例，向管道中添加2个函数。要添加其他函数，只需在第一个管道函数后添加`.pipe()`。我们可以在数据管道中添加任意多个带有多个参数的管道。结果是可重复的，代码可读且简洁。
- en: In our case, we have filtered the dataset, grouped it by “Age”, and converted
    the column names to uppercase.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的案例中，我们已筛选了数据集，按“年龄”分组，并将列名转换为大写字母。
- en: It is simple, just like initiating a Python function.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这很简单，就像启动一个Python函数一样。
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![Simplify Data Processing with Pandas Pipeline](../Images/092e4c5a392d84645a3e41e1d38d9250.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![使用Pandas管道简化数据处理](../Images/092e4c5a392d84645a3e41e1d38d9250.png)'
- en: A complete pipeline
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个完整的管道
- en: A complete pipeline processes the data and displays some analytical results.
    In our case, it is a simple bar chart of the customer’s **Annual Income** vs.
    **Age**. We have filtered the dataframe, grouped it by Age, converted the columns
    to uppercase, and plotted the bar chart.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一个完整的管道处理数据并显示一些分析结果。在我们的案例中，它是一个客户的**年收入**与**年龄**的简单条形图。我们已筛选数据框，按年龄分组，将列转换为大写字母，并绘制了条形图。
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Simplify Data Processing with Pandas Pipeline](../Images/d188b3a9a0daba7a0ce3edb355683486.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![使用Pandas管道简化数据处理](../Images/d188b3a9a0daba7a0ce3edb355683486.png)'
- en: Conclusion
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: The pipe can be applied to pandas dataframe and series. It is quite effective
    during data processing and the experimental stage. Where you can easily switch
    the functions to get an optimal solution. The pipe allows us to have a structure
    and organized way of combining multiple functions into a single operation. It
    is clean, readable, and reproducible. You can use it to simplify the data processing
    stage.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 管道可以应用于pandas数据框和系列。在数据处理和实验阶段，它非常有效。在这里，你可以轻松切换函数以获得最佳解决方案。管道允许我们以结构化和组织化的方式将多个函数合并为单一操作。它是干净、可读且可重复的。你可以用它来简化数据处理阶段。
- en: In the tutorial, we have learned about pandas pipe functions and their use case.
    We have also created multiple pipelines with single and multiple functions. The
    pipe functions can also be used for advanced processes such as data analytics,
    data visualization, and machine learning tasks.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们学习了pandas管道函数及其使用案例。我们还创建了单个和多个函数的多个管道。管道函数还可以用于高级过程，如数据分析、数据可视化和机器学习任务。
- en: '**[Abid Ali Awan](https://www.polywork.com/kingabzpro)** ([@1abidaliawan](https://twitter.com/1abidaliawan))
    is a certified data scientist professional who loves building machine learning
    models. Currently, he is focusing on content creation and writing technical blogs
    on machine learning and data science technologies. Abid holds a Master''s degree
    in Technology Management and a bachelor''s degree in Telecommunication Engineering.
    His vision is to build an AI product using a graph neural network for students
    struggling with mental illness.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Abid Ali Awan](https://www.polywork.com/kingabzpro)** ([@1abidaliawan](https://twitter.com/1abidaliawan))
    是一位认证的数据科学专业人士，热衷于构建机器学习模型。目前，他专注于内容创作，并撰写关于机器学习和数据科学技术的技术博客。Abid拥有技术管理硕士学位和电信工程学士学位。他的愿景是利用图神经网络为那些在心理健康方面挣扎的学生构建一个AI产品。'
- en: More On This Topic
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关主题
- en: '[6 Data Science Technologies You Need to Build Your Supply Chain Pipeline](https://www.kdnuggets.com/2022/01/6-data-science-technologies-need-build-supply-chain-pipeline.html)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[构建供应链管道所需的6种数据科学技术](https://www.kdnuggets.com/2022/01/6-data-science-technologies-need-build-supply-chain-pipeline.html)'
- en: '[ETL vs ELT: Which One is Right for Your Data Pipeline?](https://www.kdnuggets.com/2023/03/etl-elt-one-right-data-pipeline.html)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ETL与ELT：哪一种适合你的数据管道？](https://www.kdnuggets.com/2023/03/etl-elt-one-right-data-pipeline.html)'
- en: '[Building a Formula 1 Streaming Data Pipeline With Kafka and Risingwave](https://www.kdnuggets.com/building-a-formula-1-streaming-data-pipeline-with-kafka-and-risingwave)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用Kafka和Risingwave构建F1流数据管道](https://www.kdnuggets.com/building-a-formula-1-streaming-data-pipeline-with-kafka-and-risingwave)'
- en: '[Building Data Pipeline with Prefect](https://www.kdnuggets.com/building-data-pipeline-with-prefect)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用Prefect构建数据管道](https://www.kdnuggets.com/building-data-pipeline-with-prefect)'
- en: '[Machine Learning Pipeline Optimization with TPOT](https://www.kdnuggets.com/2021/05/machine-learning-pipeline-optimization-tpot.html)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用TPOT进行机器学习管道优化](https://www.kdnuggets.com/2021/05/machine-learning-pipeline-optimization-tpot.html)'
- en: '[Building a Tractable, Feature Engineering Pipeline for Multivariate…](https://www.kdnuggets.com/2022/03/building-tractable-feature-engineering-pipeline-multivariate-time-series.html)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[为多变量时间序列构建一个可处理的特征工程管道](https://www.kdnuggets.com/2022/03/building-tractable-feature-engineering-pipeline-multivariate-time-series.html)'
