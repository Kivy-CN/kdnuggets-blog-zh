- en: 'FastAPI Tutorial: Build APIs with Python in Minutes'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/fastapi-tutorial-build-apis-with-python-in-minutes](https://www.kdnuggets.com/fastapi-tutorial-build-apis-with-python-in-minutes)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![bala-fastapi](../Images/338920712642879f094fe7e242b95cdc.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: FastAPI is a popular web framework for building APIs with Python. It's super
    simple to learn and is loved by developers.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: FastAPI leverages Python type hints and is based on Pydantic. This makes it
    simple to define data models and request/response schemas. The framework automatically
    validates request data against these schemas, reducing potential errors. It also
    natively supports asynchronous endpoints, making it easier to build performant
    APIs that can handle I/O-bound operations efficiently.
  prefs: []
  type: TYPE_NORMAL
- en: 'This tutorial will teach you how to build your first API with FastAPI. From
    setting up your development environment to building an API for a simple machine
    learning app, this tutorial takes you through all the steps: defining data models,
    API endpoints, handling requests, and more. By the end of this tutorial, you’ll
    have a good understanding of how to use FastAPI to build APIs quickly and efficiently.
    So let’s get started.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 1: Set Up the Environment'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'FastAPI requires Python 3.7 or later. So make sure you have a recent version
    of Python installed. In the project directory, create and activate a dedicated
    virtual environment for the project:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The above command to activate the virtual environment works if you’re on Linux
    or MacOS. If you’re a Windows user, [check the docs](https://docs.python.org/3/library/venv.html)
    to create and activate virtual environments.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, install the required packages. You can install FastAPI and uvicorn using
    pip:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'This installs FastAPI and all the required dependencies as well uvicorn, the
    server that we’ll use to run and test the API that we build. Because we’ll build
    a simple machine learning model using scikit-learn, install it in your project
    environment as well:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: With the installations out of the way, we can get to coding! You can find the
    code on [GitHub](https://github.com/balapriyac/data-science-tutorials/tree/main/fastapi).
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 2: Create a FastAPI App'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create a main.py file in the project directory. The first step is to create
    a FastAPI app instance like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The Iris dataset is one of the toy datasets that you work with when starting
    out with data science. It has 150 data records, 4 features, and a target label
    (species of Iris flowers). To keep things simple, let’s create an API to predict
    the Iris species.
  prefs: []
  type: TYPE_NORMAL
- en: In the coming steps, we’ll build a logistic regression model and create an API
    endpoint for prediction. After you’ve built the model and defined the `/predict/`
    API endpoint, you should be able to make a POST request to the API with the input
    features and receive the predicted species as a response.
  prefs: []
  type: TYPE_NORMAL
- en: '![fastapi-1](../Images/1be33281e29dd4523fab3c831c384951.png)'
  prefs: []
  type: TYPE_IMG
- en: Iris Prediction API | Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'Just so it’s helpful, let''s also define a root endpoint which returns the
    description of the app that we''re building. To do so, we define the `get_app_description`
    function and create the root endpoint with the `@app` decorator like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Sending a GET request to the root endpoint returns the description.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 3: Build a Logistic Regression Classifier'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'So far we’ve instantiated a FastAPI app and have defined a root endpoint. It’s
    now time to do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Build a machine learning model. We’ll use a logistic regression classifier.
    If you’d like to learn more about logistic regression, read [Building Predictive
    Models: Logistic Regression in Python](https://www.kdnuggets.com/building-predictive-models-logistic-regression-in-python).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Define a prediction function that receives the input features and uses the machine
    learning model to make a prediction for the species (one of setosa, versicolor,
    and virginica).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![fastapi-2](../Images/879cfea338f0d2cf05edc3c91a931725.png)'
  prefs: []
  type: TYPE_IMG
- en: Logistic Regression Classifier | Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'We build a simple logistic regression classifier from scikit-learn and define
    the `predict_species` function as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Step 4: Define Pydantic Model for Input Data'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Next, we should model the data that we send in the POST request. Here the input
    features are the length and width of the sepals and petals—all floating point
    values. To model this, we create an `IrisData` class that inherits from the Pydantic
    `BaseModel` class like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'If you need a quick tutorial on using Pydantic for data modeling and validation,
    read [Pydantic Tutorial: Data Validation in Python Made Super Simple](https://www.kdnuggets.com/pydantic-tutorial-data-validation-in-python-made-simple).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 5: Create an API Endpoint'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that we’ve built the classifier and have defined the `predict_species`
    function ready, we can create the API endpoint for prediction. Like earlier, we
    can use the `@app` decorator to define the `/predict/` endpoint that accepts a
    POST request and returns the predicted species:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: And it’s time to run the app!
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 6: Run the App'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can run the app with the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Here `main` is the name of the module and `app` is the FastAPI instance. The
    `--reload` flag ensures that the app reloads if there are any changes in the source
    code.
  prefs: []
  type: TYPE_NORMAL
- en: 'Upon running the command, you should see similar INFO messages:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'If you navigate to "http://127.0.0.1:8000"(localhost), you should see the app
    description:'
  prefs: []
  type: TYPE_NORMAL
- en: '![fastapi-3](../Images/f052651c34e8c6995c37c60dcedafd43.png)'
  prefs: []
  type: TYPE_IMG
- en: App Running on localhost
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 7: Test the API'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can now send POST requests to the `/predict/` endpoint with the sepal and
    petal measurements—with valid values—and get the predicted species. You can use
    a command-line utility like cURL. Here’s an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'For this example request this is the expected output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Wrapping Up
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this tutorial, we went over building an API with FastAPI for a simple classification
    model. We went through modeling the input data to be used in the requests, defining
    API endpoints, running the app, and querying the API.
  prefs: []
  type: TYPE_NORMAL
- en: As an exercise, take an existing machine learning model and build an API on
    top of it using FastAPI. Happy coding!
  prefs: []
  type: TYPE_NORMAL
- en: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)****
    is a developer and technical writer from India. She likes working at the intersection
    of math, programming, data science, and content creation. Her areas of interest
    and expertise include DevOps, data science, and natural language processing. She
    enjoys reading, writing, coding, and coffee! Currently, she''s working on learning
    and sharing her knowledge with the developer community by authoring tutorials,
    how-to guides, opinion pieces, and more. Bala also creates engaging resource overviews
    and coding tutorials.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Build a Web Scraper with Python in 5 Minutes](https://www.kdnuggets.com/2022/02/build-web-scraper-python-5-minutes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Build a Text-to-Speech Converter with Python in 5 Minutes](https://www.kdnuggets.com/2022/09/build-texttospeech-converter-python-5-minutes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Build a Machine Learning Web App in 5 Minutes](https://www.kdnuggets.com/2022/03/build-machine-learning-web-app-5-minutes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Build AI Chatbot in 5 Minutes with Hugging Face and Gradio](https://www.kdnuggets.com/2023/06/build-ai-chatbot-5-minutes-hugging-face-gradio.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News March 9, 2022: Build a Machine Learning Web App in 5…](https://www.kdnuggets.com/2022/n10.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[New ChatGPT and Whisper APIs from OpenAI](https://www.kdnuggets.com/2023/03/new-chatgpt-whisper-apis-openai.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
