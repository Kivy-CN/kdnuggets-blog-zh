- en: Better data apps with Streamlit’s new layout options
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Streamlit 的新布局选项构建更好的数据应用
- en: 原文：[https://www.kdnuggets.com/2020/11/streamlit-better-data-apps-new-layout-options.html](https://www.kdnuggets.com/2020/11/streamlit-better-data-apps-new-layout-options.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/11/streamlit-better-data-apps-new-layout-options.html](https://www.kdnuggets.com/2020/11/streamlit-better-data-apps-new-layout-options.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By Austin Chen, Senior Software Engineer at [Streamlit](https://www.streamlit.io/)**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Streamlit](https://www.streamlit.io/) 高级软件工程师 Austin Chen 撰写**'
- en: '![Image](../Images/9b2babdb6d159e02462402110fdb758d.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/9b2babdb6d159e02462402110fdb758d.png)'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前 3 名课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Streamlit is all about simplicity. It’s pure Python. Your script runs from top
    to bottom. Your app renders from top to bottom too. Perfect, right? Well...not
    quite. Users noted that our thinking was a bit *too* vertical. The group griped
    about grids. The community clamored for columns. Fervent friends favored flexibility.
    You get the idea.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit 完全以简洁为目标。它是纯 Python。你的脚本从上到下运行。你的应用程序也从上到下呈现。完美，对吧？嗯...并非如此。用户注意到我们的思路有点*过于*垂直。大家对网格感到不满。社区呼吁列的支持。热心的朋友们更倾向于灵活性。你明白了。
- en: So move aside, vertical layout. Make a little space for... horizontal layout! *And* a
    bunch more layout primitives. *And* some syntactic goodies too. In fact, today,
    we're introducing *four* new layout features giving you much more control over
    your app’s presentation.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，移动到一边，垂直布局。给...水平布局留点空间！*以及*更多的布局原语。*还有*一些语法糖。实际上，今天我们介绍了*四*个新的布局功能，让你对应用程序的展示有更多的控制。
- en: '`st.beta_columns`: Side-by-side columns where you can insert Streamlit elements'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`st.beta_columns`: 并排列，你可以在其中插入 Streamlit 元素'
- en: '`st.beta_expander`: An expand/collapse widget to selectively show stuff'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`st.beta_expander`: 一个展开/折叠小部件，用于选择性地显示内容'
- en: '`st.beta_container`: The fundamental building block of layout'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`st.beta_container`: 布局的基本构建块'
- en: '`with column1: st.write("hi!")`: Syntax sugar to specify which container to
    use'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`with column1: st.write("hi!")`: 语法糖，用于指定使用哪个容器'
- en: Go horizontal with columns
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用列实现横向布局
- en: '`st.beta_columns` acts similarly to our beloved `st.sidebar`, except now you
    can put the columns anywhere in your app. Just declare each column as a new variable,
    and then you can add in ANY element or component available from the Streamlit
    library.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`st.beta_columns` 的作用类似于我们喜爱的 `st.sidebar`，不过现在你可以将列放置在应用程序的任何位置。只需将每个列声明为一个新变量，然后你就可以添加任何来自
    Streamlit 库的元素或组件。'
- en: 'Use columns to compare things side-by-side:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 使用列来并排比较事物：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../Images/b9e61f8c570f35d3f712ff4729be44a0.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b9e61f8c570f35d3f712ff4729be44a0.png)'
- en: In fact, by calling `st.beta_columns` *inside* a loop, you get a grid layout!
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，通过在循环中调用 `st.beta_columns` ，你可以获得网格布局！
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/9bb9144a3e597e1fafacab80ebf3e603.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9bb9144a3e597e1fafacab80ebf3e603.png)'
- en: 'You can even get quite complex (which can be great for wide monitors!) Here''s
    an example that uses *variable-width* columns in conjunction with the wide-mode
    layout:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你甚至可以做到相当复杂（这对宽屏显示器来说可能很棒！）这是一个例子，展示了如何将*可变宽度*列与宽模式布局结合使用：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/22a15c82c5e6e7c3541b282e6b52cdbf.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/22a15c82c5e6e7c3541b282e6b52cdbf.png)'
- en: 'And just in case you were wondering: yes, columns are beautiful across devices
    and automatically resize for mobile and different browser widths.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 以防你在想：是的，列在各种设备上都很美观，并且会根据移动设备和不同浏览器宽度自动调整大小。
- en: '![](../Images/394f3e92a243711cdc265db3a42a756d.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/394f3e92a243711cdc265db3a42a756d.png)'
- en: Clean things up with expanders
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用展开器清理内容
- en: Now that we've maximized horizontal space, try `st.beta_expander`, to maximize
    your *vertical* space! Some of you may have been using `st.checkbox` for this
    before, and expander is a prettier, more performant replacement ????
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经最大化了水平空间，试试 `st.beta_expander`，来最大化你的 *垂直* 空间！你们中的一些人可能之前使用过 `st.checkbox`，而
    expander 是一个更漂亮、更高效的替代品????
- en: It's a great way to hide your secondary controls, or provide longer explanations
    that users can toggle!
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这是隐藏次要控件的好方法，或者提供用户可以切换的更长解释！
- en: '![](../Images/4681f72c8fe1fac1f6a17f64988d99fc.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4681f72c8fe1fac1f6a17f64988d99fc.png)'
- en: 'Adding a new concept: containers!'
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加了一个新概念：容器！
- en: If you squint a bit, `st.beta_columns`, `st.beta_expander`, and `st.sidebar` look
    kind of similar. They all return Python objects, which allow you to call all the
    Streamlit functions.  We've given these objects a new name: **containers**. And
    since it would be nice to create containers directly, you can!
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你稍微眯起眼睛，`st.beta_columns`、`st.beta_expander` 和 `st.sidebar` 看起来有点相似。它们都返回
    Python 对象，这些对象允许你调用所有的 Streamlit 函数。我们给这些对象起了一个新名字：**容器**。既然直接创建容器会很方便，你可以做到！
- en: '`st.beta_container` is a building block that helps you organize your app. Just
    like `st.empty`, `st.beta_container` lets you set aside some space, and then later
    write things to it out of order. But while subsequent calls to the same `st.empty`
    *replace* the item inside it, subsequent calls to the same `st.beta_container` *append* to
    it. Once again, this works just like the `st.sidebar` you''ve come to know and
    love.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`st.beta_container` 是一个构建块，帮助你组织你的应用。就像 `st.empty` 一样，`st.beta_container` 允许你留出一些空间，然后再无序地写入内容。但虽然对同一个
    `st.empty` 的后续调用会 *替换* 它内部的项目，后续对同一个 `st.beta_container` 的调用会 *追加* 到其中。再次强调，这与你熟悉并喜欢的
    `st.sidebar` 一样有效。'
- en: Organize your code with... with
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用...来组织你的代码
- en: Finally, we're introducing a new syntax to help you manage all these new containers: `with
    container`. How does it work? Well, instead of making function calls directly
    on the container...
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们引入了一种新语法，帮助你管理所有这些新容器：`with container`。它是如何工作的？好吧，不是直接在容器上调用函数...
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Use the container as a [Context Manager](https://book.pythontips.com/en/latest/context_managers.html) and
    call functions from the `st.` namespace!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 使用容器作为 [上下文管理器](https://book.pythontips.com/en/latest/context_managers.html)，并调用
    `st.` 命名空间中的函数！
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Why? This way, you can compose your own widgets in pure Python, and reuse them
    in different containers!
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么？这样，你可以用纯 Python 编写自己的组件，并在不同的容器中重用它们！
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/4cfde842be0a439f3e017f0b7aa190fd.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4cfde842be0a439f3e017f0b7aa190fd.png)'
- en: 'One last thing: the `with` syntax lets you put your Custom Components inside
    any container you like. [Check out this app by community member Sam Dobson](https://share.streamlit.io/samdobson/streamlit-sandbox/main/app.py),
    which embeds the [Streamlit Ace](https://pypi.org/project/streamlit-ace/) editor
    in a column right next to the app itself — so a user can edit the code and see
    the changes LIVE!'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一点：`with` 语法允许你将自定义组件放在任何你喜欢的容器中。[查看社区成员 Sam Dobson 的这个应用](https://share.streamlit.io/samdobson/streamlit-sandbox/main/app.py)，它在应用本身旁边的列中嵌入了
    [Streamlit Ace](https://pypi.org/project/streamlit-ace/) 编辑器——用户可以编辑代码并实时查看更改！
- en: '![](../Images/619a52b470a3c9f92801f98334e46293.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/619a52b470a3c9f92801f98334e46293.png)'
- en: That's all, folks!
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 就这些，朋友们！
- en: To start playing with layout today, simply upgrade to the latest version of
    Streamlit (v0.68).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用布局功能，只需升级到最新版本的 Streamlit (v0.68)。
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Coming up are updates with padding, alignment, responsive design, and UI customization.
    Stay tuned for that, but most importantly, let us know what YOU want from layout.
    Questions? Suggestions? Or just have a neat app you want to show off? Join us
    on the [Streamlit community forum](https://discuss.streamlit.io/) — we can't wait
    to see what you create ????
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来会有关于内边距、对齐、响应式设计和 UI 自定义的更新。敬请关注，但最重要的是，让我们知道你对布局的需求。有什么问题？建议？还是有一个很酷的应用想展示？加入我们的
    [Streamlit 社区论坛](https://discuss.streamlit.io/)——我们迫不及待想看看你创造的东西????
- en: Resources
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 资源
- en: '[Documentation](https://docs.streamlit.io/)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[文档](https://docs.streamlit.io/)'
- en: '[GitHub](https://github.com/streamlit/streamlit)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[GitHub](https://github.com/streamlit/streamlit)'
- en: '[Changelog](https://docs.streamlit.io/changelog.html)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[更新日志](https://docs.streamlit.io/changelog.html)'
- en: Kudos
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 表扬
- en: 'A shoutout to the Streamlit Community and Creators, whose feedback really shaped
    the implementation of Layout: Jesse, José, Charly, and Synode — and a special
    callout to Fanilo for going the extra mile to find bugs, suggest APIs, and overall
    try out a bunch of our prototypes. Thank you all so much ❤️'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 向 Streamlit 社区和创作者们致敬，他们的反馈真正塑造了布局的实现：Jesse、José、Charly 和 Synode —— 特别感谢 Fanilo
    为了寻找漏洞、建议 API 并整体尝试我们的一些原型所付出的额外努力。非常感谢你们 ❤️
- en: '**Bio: [Austin Chen](https://blog.streamlit.io/author/austin/)** is a Senior
    Software Engineer at **[Streamlit](https://www.streamlit.io/)**.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：[Austin Chen](https://blog.streamlit.io/author/austin/)** 是 **[Streamlit](https://www.streamlit.io/)**
    的高级软件工程师。'
- en: '[Original](https://blog.streamlit.io/introducing-new-layout-options-for-streamlit/).
    Reposted with permission.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://blog.streamlit.io/introducing-new-layout-options-for-streamlit/)。经许可转载。'
- en: '**Related:**'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Build an app to generate photorealistic faces using TensorFlow and Streamlit](/2020/04/app-generate-photorealistic-faces-tensorflow-streamlit.html)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[构建一个使用 TensorFlow 和 Streamlit 生成逼真面孔的应用](/2020/04/app-generate-photorealistic-faces-tensorflow-streamlit.html)'
- en: '[Deploying Streamlit Apps Using Streamlit Sharing](/2020/10/deploying-streamlit-apps-streamlit-sharing.html)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Streamlit Sharing 部署 Streamlit 应用](/2020/10/deploying-streamlit-apps-streamlit-sharing.html)'
- en: '[Deploying Secure and Scalable Streamlit Apps on AWS with Docker Swarm, Traefik
    and Keycloak](/2020/10/deploying-secure-scalable-streamlit-apps-aws-docker-swarm-traefik-keycloak.html)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Docker Swarm、Traefik 和 Keycloak 在 AWS 上部署安全且可扩展的 Streamlit 应用](/2020/10/deploying-secure-scalable-streamlit-apps-aws-docker-swarm-traefik-keycloak.html)'
- en: More On This Topic
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Best Architecture for Your Text Classification Task: Benchmarking…](https://www.kdnuggets.com/2023/04/best-architecture-text-classification-task-benchmarking-options.html)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[文本分类任务的最佳架构：基准测试…](https://www.kdnuggets.com/2023/04/best-architecture-text-classification-task-benchmarking-options.html)'
- en: '[Answering Questions with HuggingFace Pipelines and Streamlit](https://www.kdnuggets.com/2021/10/simple-question-answering-web-app-hugging-face-pipelines.html)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 HuggingFace Pipelines 和 Streamlit 回答问题](https://www.kdnuggets.com/2021/10/simple-question-answering-web-app-hugging-face-pipelines.html)'
- en: '[DIY Automated Machine Learning with Streamlit](https://www.kdnuggets.com/2021/11/diy-automated-machine-learning-app.html)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Streamlit 进行 DIY 自动化机器学习](https://www.kdnuggets.com/2021/11/diy-automated-machine-learning-app.html)'
- en: '[LangChain + Streamlit + Llama: Bringing Conversational AI to Your…](https://www.kdnuggets.com/2023/08/langchain-streamlit-llama-bringing-conversational-ai-local-machine.html)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[LangChain + Streamlit + Llama：将对话 AI 带到你的…](https://www.kdnuggets.com/2023/08/langchain-streamlit-llama-bringing-conversational-ai-local-machine.html)'
- en: '[Deploying a Streamlit WebApp to Heroku using DAGsHub](https://www.kdnuggets.com/2022/02/deploying-streamlit-webapp-heroku-dagshub.html)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 DAGsHub 将 Streamlit WebApp 部署到 Heroku](https://www.kdnuggets.com/2022/02/deploying-streamlit-webapp-heroku-dagshub.html)'
- en: '[12 Essential Commands for Streamlit](https://www.kdnuggets.com/2023/01/12-essential-commands-streamlit.html)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Streamlit 的 12 个必备命令](https://www.kdnuggets.com/2023/01/12-essential-commands-streamlit.html)'
