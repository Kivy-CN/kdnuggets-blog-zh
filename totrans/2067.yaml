- en: Scientific debt – what does it mean for Data Science?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2018/05/scientific-debt.html](https://www.kdnuggets.com/2018/05/scientific-debt.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '**By [David Robinson](https://twitter.com/drob), Datacamp**.'
  prefs: []
  type: TYPE_NORMAL
- en: A very useful concept in software engineering is **[technical debt](https://martinfowler.com/bliki/TechnicalDebt.html)**.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Technical debt occurs when engineers choose a quick but suboptimal solution
    to a problem, or don’t spend time to build sustainable infrastructure. Maybe they’re
    using an approach that doesn’t scale well as the team and codebase expand (such
    as hardcoding “magic numbers”), or using a tool for reasons of convenience rather
    than appropriateness (“we’ll write the DevOps infrastructure in PHP since that’s
    what our team already knows”). Either way, it’s something that seems like it’s
    working at first but causes real challenges in the long-term, in the form of delayed
    feature launches and hard-to-fix bugs.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6053ba8c88c62e2fc9c0e0077ed441b6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In my [new job as Chief Data Scientist at DataCamp](http://varianceexplained.org/r/joining-datacamp/),
    I’ve been thinking about the role of data science within a business, and discussing
    this with other professionals in the field. On [a panel earlier this year](https://twitter.com/robinson_es/status/959948446542151680),
    I realized that data scientists have a rough equivalent to this concept: “scientific
    debt.”'
  prefs: []
  type: TYPE_NORMAL
- en: '**Scientific debt is when a team takes shortcuts in data analysis, experimental
    practices, and monitoring that could have long-term negative consequences.** When
    you hear a statement like:'
  prefs: []
  type: TYPE_NORMAL
- en: “We don’t have enough time to run a randomized test, let’s launch it”
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “To a first approximation this effect is probably linear”
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “This could be a confounding factor, but we’ll look into that later”
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “It’s directionally accurate at least”
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: you’re hearing a little scientific debt being “borrowed”.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example: WidgetCorp'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Most engineers have a sense of what it’s like for a company to struggle with
    technical debt. What would a company struggling with scientific debt look like?
  prefs: []
  type: TYPE_NORMAL
- en: Imagine a small startup WidgetCorp is developing a B2B product, and deciding
    on their sales strategy. One year they decide to start focusing their sales efforts
    on larger corporate clients. They notice that as they take on this new strategy,
    their monthly revenue increases. They’re encouraged by this, and in the following
    years hire half a dozen salespeople with experience working with large clients,
    and spend marketing and design effort building that as part of their brand.
  prefs: []
  type: TYPE_NORMAL
- en: 'Years later, the strategy doesn’t seem to be paying off: their revenue is struggling
    and the early successes aren’t repeating themselves. They hire an analyst who
    looks at their sales data, and finds that in fact, it had never been the case
    that they’d had a higher return-on-investment selling to large companies. In that
    early year, their revenue had been rising because of a seasonal effect (the demand
    for widgets goes up in the fall and winter), which was compounded with some random
    noise and anecdotes (e.g. “SmallCompany.com was a waste of our time, but we just
    closed a huge deal with Megabiz!”)'
  prefs: []
  type: TYPE_NORMAL
- en: '**WidgetCorp took on too much scientific debt.**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6e635bcb5831e7943c21dcb0f6cddb84.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Some ways this might have happened:'
  prefs: []
  type: TYPE_NORMAL
- en: '**They made irreversible decisions based on flawed analyses.** It’s reasonable
    to take a quick look at metrics and be happy that they’re going in the right direction.
    But once the company made product, sales and marketing changes, it became difficult
    to reverse them. Before making a major shift in business, it’s worth making sure
    that the data supports it: that they’ve accounted for seasonal effects and applied
    proper statistical tests.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Lack of monitoring**. Early on, there may not have been enough data to tell
    whether larger clients were a better investment. But as more data was collected,
    it would be worth *continually testing* this assumption, in the form of a dashboard
    or a quarterly report. If this isn’t tracked, no one will notice that the hypothesis
    was falsified even once they have the data.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Lack of data infrastructure**: Maybe early in the company the leads were
    locked in a sales CRM, while accounting data was stored in Excel spreadsheets
    that were emailed around. Even if there were a dedicated analyst within the company,
    they may not have easy access to the relevant data (linking together sales success
    and company size). Even if it were theoretically possible to combine the datasets
    with some effort, [schlep blindness](http://www.paulgraham.com/schlep.html) might
    have made everyone avoid the analysis entirely. This is an area where technical
    debt and scientific debt often appear together, since it takes engineering effort
    to make scientific problems easy to solve.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Spreading inaccurate lore**. Suppose that the WidgetCorp CEO had given a
    series of company-wide talks and public blog posts with the message “The future
    of WidgetCorp is serving big companies!” Product teams got into the habit of prioritizing
    features in this direction, and every failure got blamed on “I guess we weren’t
    focused enough on big clients”. This kind of “cultural inertia” can be very difficult
    to reverse, even if the executive team is willing to publicly admit their mistake
    (which isn’t guaranteed!)'
  prefs: []
  type: TYPE_NORMAL
- en: Just about every experienced data scientist has at least a few of these stories,
    even from otherwise successful companies. They are to scientific debt what the
    [Daily WTF](https://thedailywtf.com/) is to technical debt.
  prefs: []
  type: TYPE_NORMAL
- en: Is scientific debt always bad?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Not at all!
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/56fe82def4c0bec91bd759fed011d8d5.png)'
  prefs: []
  type: TYPE_IMG
- en: I often take shortcuts in my own analyses. Running a randomized experiment for
    a feature launch is sometimes too expensive, especially if the number of users
    is fairly small or the change pretty uncontroversial (you wouldn’t A/B test a
    typo fix). And while correlation doesn’t imply causation, it’s usually better
    than nothing when making business decisions.
  prefs: []
  type: TYPE_NORMAL
- en: 'The comparison to technical debt is useful here: a small engineering team’s
    first goal is typically to build an minimum viable product quickly, rather than
    *overengineer* a system that they think will be robust in the distant future.
    (The equivalent in scientific debt is typically called *overthinking*, e.g. “Yes
    I suppose we could control for weather when we examine what sales deals succeed,
    but I’m pretty sure you’re overthinking this”). And the comparison to financial
    debt is meaningful too: companies typically take on debt (or, similarly, give
    up equity) while they’re growing. Just like you can’t build a company without
    borrowing money, you can’t build a company while being certain every decision
    is thoroughly supported by data.'
  prefs: []
  type: TYPE_NORMAL
- en: What’s important in both technical and scientific debt is to **keep the long-term
    cost in mind**.
  prefs: []
  type: TYPE_NORMAL
- en: It isn't technical debt if you aren't...
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 1) Leveraging it to get something valuable up front
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 2) Paying interest on it regularly
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 3) Treating it as a liability that you may eventually need to pay in full
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Code that doesn't meet this criteria isn't debt, it's just low quality work.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: — Practicing Developer (@practicingdev) [February 26, 2018](https://twitter.com/practicingdev/status/968175299581108224?ref_src=twsrc%5Etfw)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Wrong decisions are expensive, and not paying attention to data is a risk. We
    can do a cost-benefit analysis of whether the risk is worth it, but we shouldn’t
    write it off as “data scientists always find something to complain about”.
  prefs: []
  type: TYPE_NORMAL
- en: Why even call it “debt”?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To a data scientist or analyst, this post might sound pretty obvious. Of course
    there are downsides to ignoring statistical rigor, so why bother giving it a “buzzword-y”
    name? **Because it puts the concept in terms executives and managers can easily
    understand.**
  prefs: []
  type: TYPE_NORMAL
- en: 'Again, let’s go back to technical debt. There are lots of reasons individual
    engineers may want to write “clean code”: they appreciate its elegance, they want
    to impress their peers, or they’re perfectionists procrastinating on other work.
    These reasons don’t generally matter to non-technical employees, who care about
    product features and reliability. The framing of technical debt helps emphasize
    what the company loses by not investing in architecture: the idea that even if
    a product looks like it’s working, the flaws have a long-term cost in actual dollars
    and time.'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '**Engineer:** It bothers me that different internal projects use different
    naming conventions.'
  prefs: []
  type: TYPE_NORMAL
- en: '**CTO:** Sorry it annoys you, but code is code, I don’t see why you should
    waste time on this.'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '**Engineer:** Our inconsistent naming conventions are technical debt: they
    make it harder for new developers to learn the system.'
  prefs: []
  type: TYPE_NORMAL
- en: '**CTO:** I’ve been looking for ways to reduce our onboarding time! Great idea,
    let me know what you need to fix it.'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, scientists, especially from an academic background, often have a
    particular interest in discovering truths about reality. So the idea of “I’d like
    to analyze whether X is a confounding factor here” can sound like an indulgence
    rather than an immediate business need. Statisticians in particular are often
    excited by finding flaws in mathematical methods. So when a data scientist says
    something like “We can’t use that method, Jones et al 2012 proved that it is asymptotically
    inconsistent,” non-technical colleagues might assume they’re overthinking it or
    even showing off. Framing it in terms of what we’re actually *risking* helps communicate
    why it’s worth spending time on.
  prefs: []
  type: TYPE_NORMAL
- en: How can we manage scientific debt well?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Let data scientists “pay interest” on it.** Just as not every engineering
    project will lead to a new feature, not every analysis will lead to an exciting
    discovery or novel algorithm. Some time needs to be spent confirming or invalidating
    existing assumptions. [Jonathan Nolis has a great article about prioritizing data
    science work](https://towardsdatascience.com/prioritizing-data-science-work-936b3765fd45),
    where he describes this quadrant as “providing proof”.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Build data engineering processes:** As described earlier, one reason a company
    might fall into scientific debt is that analysts may not have easy access to the
    data they need. It could be locked away in a platform that hasn’t been ingested,
    or in Google sheets that are edited by hand. Ingesting relevant data into a data
    warehouse or a data lake makes it more likely data scientists can make relevant
    discoveries.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Revisit old analyses**: One common reason early-stage companies go into scientific
    debt is that they don’t yet have enough data to draw robust conclusions. Even
    if you don’t have enough data yet, that doesn’t mean you should forget about the
    problem. Sometimes [I put time on my calendar](https://medium.com/the-mission/why-calendars-are-more-effective-than-to-do-lists-9bc6ce3bee50)
    to run an analysis once I expect enough data to be available, even if it’s a few
    months away. This can also help confirm an important analysis is still relevant:
    just like you’d keep track of a KPI over time, you want to keep track of whether
    a conclusion remains true.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Have data expertise spread throughout the company**. Just as someone who
    can’t program may not recognize technical debt, someone who doesn’t have experience
    analyzing and understanding data may not recognize scientific debt. This is yet
    another reason to [democratize data science within your company](https://register.gotowebinar.com/register/5951553477110700289?source=blog),
    as [we do at DataCamp](http://varianceexplained.org/r/joining-datacamp/).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Bio: [David Robinson](https://twitter.com/drob)**, is a Chief Data Scientist
    at DataCamp, works in R and Python.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](http://varianceexplained.org/r/scientific-debt/). Reposted with
    permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[The Executive Guide to Data Science and Machine Learning](https://www.kdnuggets.com/2018/05/executive-guide-data-science-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Beginner’s Guide to Data Engineering – Part II](https://www.kdnuggets.com/2018/03/beginners-guide-data-engineering-part-2.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Doing Part of Learning Data Science](https://www.kdnuggets.com/2018/02/doing-part-learning-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Analyzing Scientific Articles with fine-tuned SciBERT NER Model and Neo4j](https://www.kdnuggets.com/2021/12/analyzing-scientific-articles-finetuned-scibert-ner-model-neo4j.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Can AI-Powered RPA and IA Mean For Businesses?](https://www.kdnuggets.com/2022/12/aipowered-rpa-ia-mean-businesses.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Your Features Are Important? It Doesn’t Mean They Are Good](https://www.kdnuggets.com/your-features-are-important-it-doesnt-mean-they-are-good)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News, November 30: What is Chebychev''s Theorem and How…](https://www.kdnuggets.com/2022/n46.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How Long Does It Take to Learn Data Science Fundamentals?](https://www.kdnuggets.com/2022/03/long-take-learn-data-science-fundamentals.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What is Chebychev''s Theorem and How Does it Apply to Data Science?](https://www.kdnuggets.com/2022/11/chebychev-theorem-apply-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
