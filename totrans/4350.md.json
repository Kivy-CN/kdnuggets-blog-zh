["```py\n**metrics** = [\n    tf.keras.metrics.TruePositives(name=\"tp\"),\n    tf.keras.metrics.TrueNegatives(name=\"tn\"),\n    tf.keras.metrics.FalseNegatives(name=\"fn\"),\n    tf.keras.metrics.FalsePositives(name=\"fp\"),\n]\n```", "```py\nmodel.compile(\n        optimizer=tf.keras.optimizers.Adam(lr=learning_rate),\n        loss=tf.keras.losses.BinaryCrossentropy(),\n       ** metrics=metrics**,\n    )\n```", "```py\nfrom sklearn.datasets import make_classificationn_features = 15\nn_informative = n_featuresd = make_classification(n_samples=10000,\n                        n_features=n_features,\n                        n_informative=n_informative,\n                        n_redundant=0,\n                        n_classes=2,\n                        **weights=[0.9,0.1]**,\n                        flip_y=0.05,\n                        class_sep=0.7)\n```", "```py\nfrom IPython.display import clear_output# Clear the previous plot\n clear_output(wait=True)\n```", "```py\n# Plots every 5th epoch\n if epoch > 0 and epoch%5==0:\n```", "```py\ndef on_epoch_end(self, epoch, logs={}):\n    # Other stuff\n    m = self.model\n    preds = m.predict(X_train)\n    plt.hist(preds, bins=50,edgecolor='k')\n```"]