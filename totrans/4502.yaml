- en: The 4 Best Jupyter Notebook Environments for Deep Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/03/4-best-jupyter-notebook-environments-deep-learning.html](https://www.kdnuggets.com/2020/03/4-best-jupyter-notebook-environments-deep-learning.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: Notebooks are becoming the de-facto standard for prototyping and analysis for
    Data Scientists. Many cloud providers offer machine learning and deep learning
    services in the form of Jupyter notebooks. Other players have now begun to offer
    cloud hosted Jupyter environments, with similar storage, compute and pricing structures.
    One of the main differences can be multi-language support and version control
    options that allow Data Scientists to share their work in one place.
  prefs: []
  type: TYPE_NORMAL
- en: '**The Increasing Popularity of Jupyter Notebook Environments**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter notebook environments are now becoming the first destination in the
    journey to productizing your data science project. The notebook environment allows
    us to keep track of errors and maintain clean code. One of the best features although
    simple is that the notebook would stop compiling your code if it spots an error.
    Regular IDE’s do not stop compilation even if an error is detected and depending
    on the amount of code, it can be a waste of time to go back and manually detect
    where the error is located.
  prefs: []
  type: TYPE_NORMAL
- en: '![Best Jupyter Notebook Environments for Deep Learning | Macbook Computer with
    Jupyter Environment Code Example](../Images/5a3949da668c9b8ccfa096fda3b98c18.png)'
  prefs: []
  type: TYPE_IMG
- en: Many cloud providers, and other third-party services, see the value of a Jupyter
    notebook environment which is why many companies now offer cloud hosted notebooks
    that are hosted on the cloud and accessible to millions of people. Many Data Scientists
    do not have the necessary hardware for conducting large scale Deep Learning, but
    with cloud hosted environments, the hardware and backend configurations are mostly
    taken care which leaves the user to only configure their desired parameters such
    as CPU/GPU/TPU, RAM, Cores etc.
  prefs: []
  type: TYPE_NORMAL
- en: '**[1\. MatrixDS](https://matrixds.com/)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[![Best Jupyter Notebook Environments for Deep Learning | Matrixds](../Images/82b6c34c187113318abb87e6ea444857.png)](https://matrixds.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: MatrixDS is a cloud platform that provides a social network type experience
    combined with GitHub that is tailored for sharing your Data Science projects with
    peers. They provide some of the most used technologies such as R, Python, Shiny,
    MongoDB, NGINX, Julia, MySQL, PostgreSQL.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They offer both free and paid tiers as well. The paid tier is similar to what
    is offered on the major cloud platforms where by you can pay by usage or time.
    The platform provides GPU support as needed so that memory heavy and compute heavy
    tasks can be accomplished when a local machine is not sufficient.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**To get started with a Jupyter notebook environment in MatrixDS:**'
  prefs: []
  type: TYPE_NORMAL
- en: Sign-up for the service to create an account. It should be a free account by
    default.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will then be prompted to a Projects page. Here, click on the green button
    on the top right corner to start a new project. Give it a name and description
    and click CREATE.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Then you will be asked to set some configurations such as the amount of RAM
    and cores. Because it is a free account, you will be limited to 4GB RAM and a
    1 Core CPU.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once completed, you will be taken to the page where your tool of choice (a Jupyter
    Notebook instance) will be configuring and getting ready.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once you see it is completed the set-up process, click START and once it is
    in operation, click OPEN and you will be taken to a new tab with your Jupyter
    Notebook instance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[2\. Google Colaboratory](https://colab.research.google.com/notebooks/welcome.ipynb#recent=true)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[![Best Jupyter Notebook Environments for Deep Learning | Google Colab](../Images/764a4191a5c1f36abd88995a7f87868c.png)](https://colab.research.google.com/notebooks/welcome.ipynb#recent=true)'
  prefs: []
  type: TYPE_NORMAL
- en: Google Colab is a FREE Jupyter notebook environment provided by Google specially
    for Deep Learning tasks. It runs completely in the cloud and enables you to share
    your  work, save to your google drive directly and offers resources for compute
    power.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One of the major advantages of Colab is it offers free GPU support (with limits
    placed of course – check their FAQ). See this great article by [Anne Bommer on
    getting started with Google Colab](https://towardsdatascience.com/getting-started-with-google-colab-f2fff97f594c).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It not only comes with GPU support, [we also have access to TPU’s on Colab](https://colab.research.google.com/notebooks/tpu.ipynb).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A simple example of using Google colab for your Jupyter environment besides
    the regular Jupyter Notebook is the ability to use The cv2.imshow() and cv.imshow()
    functions from the [opencv-python](https://github.com/skvark/opencv-python) package.
    The two functions are incompatible with the stand-alone Jupyter Notebook. Googel
    colab offers a custom fix for this issue:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0] from google.colab.patches import cv2_imshow    !curl - o logo.png https://colab.research.google.com/img/colab_favicon_256px.png    import
    cv2  img = cv2.imread(''logo.png'', cv2.IMREAD_UNCHANGED)  cv2_imshow(img) [PRE1]`'
  prefs: []
  type: TYPE_NORMAL
- en: Run the above code in a code cell to verify that it is indeed working and begin
    your image and video processing tasks.
  prefs: []
  type: TYPE_NORMAL
- en: '**[3\. AI Platform Jupyter Notebooks by Google Cloud](https://cloud.google.com/ai-platform-notebooks/)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[![Best Jupyter Notebook Environments for Deep Learning | Google Cloud AI Platform](../Images/8f7a98500f9016cb2a3f3b3e89e87256.png)](https://cloud.google.com/ai-platform-notebooks/)'
  prefs: []
  type: TYPE_NORMAL
- en: Google Cloud offers an integrated JupyterLab managed instances that comes pre-installed
    with the latest machine learning and deep learning libraries such as TensorFlow,
    PyTorch, scikit-learn, pandas, NumPy, SciPy, and Matplotlib.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The notebook instance is integrated with BigQuery, Cloud Dataproc and Cloud
    Dataflow to offer a seamless experience from ingestion, preprocessing. Exploration,
    training and deployment.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The integrated services make it hassle free for users to scale up on demand
    by adding compute and storage capacity with a few clicks.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**To begin your JupyterLab instance on GCP follow the steps in:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Before you begin](https://cloud.google.com/ai-platform/notebooks/docs/before-you-begin) and
    then,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Create a new JupyterLab instance](https://cloud.google.com/ai-platform/notebooks/docs/create-new)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Run the following code with Keras to see how well a cloud environment and [GPU](https://blog.exxactcorp.com/whats-the-best-gpu-for-deep-learning-rtx-2080-ti-vs-titan-rtx-vs-rtx-8000-vs-rtx-6000/) support
    can speed up your analysis:'
  prefs: []
  type: TYPE_NORMAL
- en: Here is the link to the dataset: [Dataset CSV File (pima-indians-diabetes.csv)](https://raw.githubusercontent.com/jbrownlee/Datasets/master/pima-indians-diabetes.data.csv).
    The dataset should be in the same working directory as your python file to make
    it simple.
  prefs: []
  type: TYPE_NORMAL
- en: Save it with the filename: *pima-diabetes.csv*
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2] from numpy import loadtxt  from keras.models import Sequential  from
    keras.layers import Dense    # load the dataset  dataset = loadtxt(''pima-diabetes.csv'',
    delimiter='','')  X = dataset[:,0:8]  y = dataset[:,8]    # define the keras model  model
    = Sequential()  model.add(Dense(12, input_dim=8, activation=''relu''))  model.add(Dense(8,
    activation=''relu''))  model.add(Dense(1, activation=''sigmoid'')) #Sigmoid is
    chosen because it is a binary classification problem    model.compile(loss=''binary_crossentropy'',
    optimizer=''adam'', metrics=[''accuracy'']) # compile the keras model    model.fit(X,
    y, epochs=150, batch_size=10) # fit the keras model on the dataset    _, accuracy
    = model.evaluate(X, y) # evaluate the keras model    print(''Accuracy: %.2f''
    % (accuracy*100) [PRE3]`'
  prefs: []
  type: TYPE_NORMAL
- en: '**[4\. Saturn Cloud](https://www.saturncloud.io/)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[![Best Jupyter Notebook Environments for Deep Learning | Saturn Cloud](../Images/cae52462c59df045a1972bd112a0d874.png)](https://www.saturncloud.io/)'
  prefs: []
  type: TYPE_NORMAL
- en: Saturn Cloud is a new cloud service that offers one-click Jupyter notebooks
    hosted on the cloud that can scale up to your compute and storage requirements
    using AWS in the backend. Here is a tutorial to get started: [How to Effortlessly
    Create, Publish, and Even Share Cloud Hosted-Jupyter Notebooks with Saturn Cloud](https://towardsdatascience.com/getting-started-with-saturn-cloud-jupyter-notebooks-b3f509a500ef)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Saturn Cloud is supposed to handle the DevOps side of Data Science and make
    your analysis more reproducible by offering version control and collaboration
    opportunities.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Saturn Cloud offers [Parallel Computing infrastructure with Dask (written in
    Python)](https://www.saturncloud.io/docs/why-dask) instead of other big data tools
    such as Spark.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**To get started with Saturn Cloud:**'
  prefs: []
  type: TYPE_NORMAL
- en: Go to their login and create an account: [Saturn Cloud Login](https://www.saturncloud.io/auth/login?next=/dash/jupyter).
    The basic plan is free to get used to the environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To create your notebook instance:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Specify a name for the notebook
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The amount of storage
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The GPU or CPU to be used
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: (Optional) Python environment (eg:- Pip, Conda)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: (Optional) Auto-Shutdown
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A requirements.txt to install the libraries for your project.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: After the above parameters have been specified you can click **CREATE** to start
    the server and your notebook instance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Saturn Cloud also offers to host your notebook making it shareable. This is
    an example of Saturn Cloud taking care of the DevOps for a data science project
    so that the user need not worry.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Run the below code to verify your instance is running as intended.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4] import pandas as pd  import matplotlib.pyplot as plt  %matplotlib inline     url
    = "https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"  names
    = [''sepal-length'', ''sepal-width'', ''petal-length'', ''petal-width'', ''class'']  data
    = pd.read_csv(url, names=names)     pd.plotting.scatter_matrix(dataset)  plt.show()
    [PRE5]`'
  prefs: []
  type: TYPE_NORMAL
- en: '**What is the Best Jupyter Notebook Environment?**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![4 Best Jupyter Environments for Deep Learning | Jupyter Environments being
    ranked from best to worst](../Images/e7af69ea33839b73861206f200433c1e.png)'
  prefs: []
  type: TYPE_IMG
- en: We ranked the Jupyter Notebook Environments from best to worst based on a number
    of different factors like analysis, visualization capabilities, data storage,
    and also databases functionality. Each platform is different with its best and
    worst use cases and its own unique selling point.
  prefs: []
  type: TYPE_NORMAL
- en: 'All of the above services are made to cater to your deep learning requirements
    and provide an environment of reproducibility to share you work and conduct your
    analysis with as little backend work as possible. As deep learning hits new milestones,
    the algorithms still require vast amounts of data and most data scientists do
    not have the capacity in their local machine to make it happen. This is when the
    above alternatives allow us to conduct our analysis with a seamless experience.
    The following is our best attempt at an objective point of view for which platform
    is best and which is the worst:'
  prefs: []
  type: TYPE_NORMAL
- en: '[**#1 MatrixDS: **](https://matrixds.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: MatrixDS is unique from the others in that it gives users the options to different
    tools for different tasks. For analysis, it provides Python, R, Julia, Tensorboard
    etc and for visualization it can offer Superset, Shiny , Flask, Bokeh etc and
    to store data it provides PostgreSQL.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**#2 Saturn Cloud:**](https://www.saturncloud.io/)'
  prefs: []
  type: TYPE_NORMAL
- en: Saturn cloud provides parallel computing support and makes the sign-up process
    and creating a Jupyter notebook as simple as simple as possible compared to the
    other providers on this list. To users that just want to get started with minimal
    frills and only need a server that can handle big data, this probably the best
    choice.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**#3 AI Platform Notebooks by Google:**](https://cloud.google.com/ai-platform-notebooks/)'
  prefs: []
  type: TYPE_NORMAL
- en: This notebook environment provides support for both Python and R. Data Science
    users may have a preferred language and support for both on a major cloud provider
    is an attractive offer. It gives access to GCP’s other services such as BigQuery
    as well straight from the Notebook itself making querying data more efficient
    and powerful.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**#4 Google Colaboratory: **](https://colab.research.google.com/notebooks/welcome.ipynb#recent=true)'
  prefs: []
  type: TYPE_NORMAL
- en: While quite powerful and the only one to offer TPU support, it is not feature
    rich for a relatively comprehensive data science workflow as the others. It only
    has Python support and functions similarly to a standard Jupyter Notebook with
    a different user interface. It offers to share your notebook on your google drive
    and can access your google drive data as well.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Original](https://blog.exxactcorp.com/the-4-best-jupyter-notebook-environments-for-deep-learning/).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[5 Google Colaboratory Tips](/2020/03/5-google-colaboratory-tips.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Alternative Cloud Hosted Data Science Environments](/2019/12/alternative-cloud-data-science-environments.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Optimize Your Jupyter Notebook](/2020/01/optimize-jupyter-notebook.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[How to Setup Julia on Jupyter Notebook](https://www.kdnuggets.com/2022/11/setup-julia-jupyter-notebook.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[10 Jupyter Notebook Tips and Tricks for Data Scientists](https://www.kdnuggets.com/2023/06/10-jupyter-notebook-tips-tricks-data-scientists.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Jupyter Notebook Magic Methods Cheat Sheet](https://www.kdnuggets.com/jupyter-notebook-magic-methods-cheat-sheet)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python in Finance: Real Time Data Streaming within Jupyter Notebook](https://www.kdnuggets.com/python-in-finance-real-time-data-streaming-within-jupyter-notebook)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Free Templates for Data Science Projects on Jupyter Notebook](https://www.kdnuggets.com/5-free-templates-for-data-science-projects-on-jupyter-notebook)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Feature Store Summit 2023: Practical Strategies for Deploying ML…](https://www.kdnuggets.com/2023/09/hopsworks-feature-store-summit-2023-practical-strategies-deploying-ml-models-production-environments)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
