["```py\n## read the text and enumerate the tokens in the text\ntext = open('example.txt', 'r').read(). # read a text file\n\nwords = text.split(\" \") # split the text on spaces\n\ntokens = {v: k for k, v in enumerate(words)} # generate a word to index mapping\n```", "```py\n\"There is an 80% chance of rainfall today. We are pretty sure it is going to rain.\"\n\n## define the text first\ntext = \"There is an 80% chance of rainfall today. We are pretty sure it is going to rain.\"\n\n## get the word frequency and add the end of word () token ## at the end of each word\nwords = text.strip().split(\" \")\n\nprint(f\"Vocabulary size: {len(words)}\")\n```", "```py\nchar_freq_dict = collections.defaultdict(int)\nfor word, freq in word_freq_dict.items():\n    chars = word.split()\n    for char in chars:\n        char_freq_dict[char] += freq\n\nchar_freq_dict\n```", "```py\nimport re\n\n## create all possible consecutive pairs\npairs = collections.defaultdict(int)\nfor word, freq in word_freq_dict.items():\n    chars = word.split()\n    for i in range(len(chars)-1):\n        pairs[chars[i], chars[i+1]] += freq\n```"]