["```py\na+b\na-b\na*b\na/b\n```", "```py\ndef add(a,b):\n    return a+b\n...\n```", "```py\nclass Calc:\n    def __init__(self,a,b):\n        self.a = a\n        self.b = b\n    def add(self):\n        return self.a+self.b\n    def sub(self):\n        return self.a-self.b\n    def mult(self):\n        return self.a*self.b\n    def div(self):\n        return self.a/self.b\n```", "```py\nm = MyLinearRegression()\nm.fit(X,y)\nm.plot_fitted()\n```", "```py\nm.plot_fitted(reference_line=True)\n```", "```py\nclass MyLinearRegression(Diagnostics_plots,Data_plots):\n\n    def __init__(self, fit_intercept=True):\n        self.coef_ = None\n        self.intercept_ = None\n        self._fit_intercept = fit_intercept\n...\n```", "```py\nm = MyLinearRegression() # A brand new model instance\nm.fit(X,y) # Fit the model with some datam.histogram_resid() # Plot histogram of the residuals\nm.qqplot_resid() # Q-Q plot of the residuals\n```", "```py\nm = MyLinearRegression() # A brand new model instance\nm.fit(X,y) # Fit the model with some datam.run_diagnostics()\n```"]