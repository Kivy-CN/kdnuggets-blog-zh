["```py\n\"\"\" Guess The Number \"\"\"\nimport random\nattempts_list = []\ndef show_score():\n    if len(attempts_list) <= 0:\n        print(\"There is currently no high score, it's yours for the taking!\")\n    else:\n        print(\"The current high score is {} attempts\".format(min(attempts_list)))\ndef start_game():\n    random_number = int(random.randint(1, 10))\n    print(\"Hello traveler! Welcome to the game of guesses!\")\n    player_name = input(\"What is your name? \")\n    wanna_play = input(\"Hi, {}, would you like to play the guessing game? (Enter Yes/No) \".format(player_name))\n    #Where the show_score function USED to be\n    attempts = 0\n    show_score()\n    while wanna_play.lower() == \"yes\":\n        try:\n            guess = input(\"Pick a number between 1 and 10 \")\n            if int(guess) < 1 or int(guess) > 10:\n                raise ValueError(\"Please guess a number within the given range\")\n            if int(guess) == random_number:\n                print(\"Nice! You got it!\")\n                attempts += 1\n                attempts_list.append(attempts)\n                print(\"It took you {} attempts\".format(attempts))\n                play_again = input(\"Would you like to play again? (Enter Yes/No) \")\n                attempts = 0\n                show_score()\n                random_number = int(random.randint(1, 10))\n                if play_again.lower() == \"no\":\n                    print(\"That's cool, have a good one!\")\n                    break\n            elif int(guess) > random_number:\n                print(\"It's lower\")\n                attempts += 1\n            elif int(guess) < random_number:\n                print(\"It's higher\")\n                attempts += 1\n        except ValueError as err:\n            print(\"Oh no!, that is not a valid value. Try again...\")\n            print(\"({})\".format(err))\n    else:\n        print(\"That's cool, have a good one!\")\nif __name__ == '__main__':\n    start_game()\n```", "```py\nwords = \"aback\",\"abaft\",\"abandoned\",\"abashed\",\"aberrant\",\"abhorrent\"...\n```", "```py\n\"\"\" Hangman \"\"\"\n\n#Imports\n​​import random\nfrom words import words\nfrom hangman_visual import lives_visual_dict\nimport string\n\ndef get_valid_word(words):\n    word = random.choice(words)  # randomly chooses something from the list\n    while '-' in word or ' ' in word:\n        word = random.choice(words)\n\n    return word.upper()\n\ndef hangman():\n    word = get_valid_word(words)\n    word_letters = set(word)  # letters in the word\n    alphabet = set(string.ascii_uppercase)\n    used_letters = set()  # what the user has guessed\n\n    lives = 7\n\n    # getting user input\n    while len(word_letters) > 0 and lives > 0:\n        # letters used\n        # ' '.join(['a', 'b', 'cd']) --> 'a b cd'\n        print('You have', lives, 'lives left and you have used these letters: ', ' '.join(used_letters))\n\n        # what current word is (ie W - R D)\n        word_list = [letter if letter in used_letters else '-' for letter in word]\n        print(lives_visual_dict[lives])\n        print('Current word: ', ' '.join(word_list))\n\n        user_letter = input('Guess a letter: ').upper()\n        if user_letter in alphabet - used_letters:\n            used_letters.add(user_letter)\n            if user_letter in word_letters:\n                word_letters.remove(user_letter)\n                print('')\n\n            else:\n                lives = lives - 1  # takes away a life if wrong\n                print('\\nYour letter,', user_letter, 'is not in the word.')\n\n        elif user_letter in used_letters:\n            print('\\nYou have already used that letter. Guess another letter.')\n\n        else:\n            print('\\nThat is not a valid letter.')\n\n    # gets here when len(word_letters) == 0 OR when lives == 0\n    if lives == 0:\n        print(lives_visual_dict[lives])\n        print('You died, sorry. The word was', word)\n    else:\n        print('YAY! You guessed the word', word, '!!')\n\nif __name__ == '__main__':\n    hangman()\n```", "```py\n# if not re.match(\"^[a-z]*$\", input_str):\nimport random\nimport os\nimport re\n\nos.system(\"cls\" if os.name == \"nt\" else \"clear\")\n\nwhile 1 < 2:\n    print(\"\\n\")\n    print(\"Rock, Paper, Scissors - Shoot!\")\n    userChoice = input(\"Choose your weapon [R]ock, [P]aper, or [S]cissors, [E]xit: \")\n    if userChoice == \"E\":\n        break\n    if not re.match(\"[SsRrPp]\", userChoice):\n        print(\"Please choose a letter:\")\n        print(\"[R]ock, [S]cissors or [P]paper.\")\n        continue\n    # Echo the user's choice\n    print(\"You chose: \" + userChoice)\n\n    choices = [\"R\", \"P\", \"S\"]\n    opponenetChoice = random.choice(choices)\n\n    print(\"I chose: \" + opponenetChoice)\n\n    if opponenetChoice == str.upper(userChoice):\n        print(\"Tie!\")\n\n    # if opponenetChoice == str(\"R\") and str.upper(userChoice) == \"P\"\n\n    elif opponenetChoice == \"R\" and userChoice.upper() == \"S\":\n        print(\"Scissors beats rock, I win!\")\n        continue\n    elif opponenetChoice == \"S\" and userChoice.upper() == \"P\":\n        print(\"Scissors beats paper! I win!\")\n        continue\n    elif opponenetChoice == \"P\" and userChoice.upper() == \"R\":\n        print(\"Paper beat rock, I win! \")\n        continue\n    else:\n        print(\"You win!\")\n\n```"]