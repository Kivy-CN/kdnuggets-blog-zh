["```py\nfilter(pred,seq)\n# pred: predicate function\n# seq: any valid Python iterable \n```", "```py\nnums = list(range(1,11)) #[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\ndef is_even(n):\n    return n % 2 == 0\n```", "```py\nnums_even = filter(is_even, nums)\nprint(list(nums_even))\n```", "```py\nOutput >>> [2, 4, 6, 8, 10]\n```", "```py\nfrom itertools import filterfalse\nfilterfalse(pred,seq)\n```", "```py\nfrom itertools import filterfalse\n\nnums_odd = filterfalse(is_even, nums)\nprint(list(nums_odd)) \n```", "```py\nOutput >>> [1, 3, 5, 7, 9]\n```", "```py\nfrom itertools import takewhile\ntakewhile(pred,seq)\n```", "```py\nfrom itertools import takewhile\n\ndef is_less_than_5(n):\n    return n < 5\n\nnums = [1, 3, 5, 2, 4, 6]\nfiltered_nums_1 = takewhile(is_less_than_5, nums)\nprint(list(filtered_nums_1)) \n```", "```py\nOutput >>> [1, 3]\n```", "```py\nfrom itertools import dropwhile\ndropwhile(pred,seq) \n```", "```py\nfrom itertools import dropwhile\n\ndef is_less_than_5(n):\n    return n < 5\n\nnums = [1, 3, 5, 2, 4, 6]\nfiltered_nums_2 = dropwhile(is_less_than_5, nums)\nprint(list(filtered_nums_2)) \n```", "```py\nOutput >>> [5, 2, 4, 6]\n```", "```py\nfrom itertools import islice\nislice(seq,start,stop,step) \n```", "```py\nnums = list(range(10)) #[0,1, 2, 3, 4, 5, 6, 7, 8, 9]\n```", "```py\nfrom itertools import islice\n\n# only stop\nsliced_nums = islice(nums, 5)\nprint(list(sliced_nums)) \n```", "```py\nOutput >>> [0, 1, 2, 3, 4]\n```", "```py\n# start and stop\nsliced_nums = islice(nums, 2, 7)\nprint(list(sliced_nums))\n```", "```py\nOutput >>> [2, 3, 4, 5, 6]\n```", "```py\n# using start, stop, and step\nsliced_nums = islice(nums, 2, 8, 2)\nprint(list(sliced_nums)) \n```", "```py\nOutput >>> [2, 4, 6]\n```"]