["```py\nimport great_expectations as gx\nimport pandas as pd\ndf = pd.read_csv('./data/customer_regional_sales.csv',dtype={'Order ID': 'Int32'})\ndf_ge = gx.from_pandas(df)\n```", "```py\ndf_ge.expect_column_values_to_not_be_null(\n   column = 'Customer Name',\n   meta = {\n     \"dimension\": \"Completeness\"\n   }\n) \n```", "```py\ndf_ge.expect_column_values_to_be_unique(\n   column = 'Order ID',\n   meta = {\n     \"dimension\": 'Uniqueness'\n   }\n) \n```", "```py\nimport datetime\n\n# Get the current date I use the start of the current year.\nnow = datetime.datetime(2023, 1, 1)\n# Define the column to validate and the expected minimum date\nmin_date = now - datetime.timedelta(days=365*4)\n# Create the expectation\ndf_ge.expect_column_values_to_be_between(\n  \"Order Date\"\n   min_value = min_date,\n   parse_strings_as_datetimes=True,\n   meta = {\n     \"dimension\": 'Timelessness'\n   }\n)\n```", "```py\ndf_ge.expect_column_values_to_match_regex(\n column = 'Order Date',\n regex = '\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])',\n meta = {\n   \"dimension\": \"Validity\"\n }\n) \n```", "```py\ndf_ge.expect_column_values_to_be_between(\n   column = 'Sales',\n   min_value = 0,\n   max_value = 25000,\n   meta = {\n   \"dimension\": 'Consistency'\n   }\n) \n```", "```py\n    df_expectations = pd.read_csv('./data/orders.csv',\n                                   usecols=['Order ID'],\n                                   squeeze = True\n                                 )\n    df_ge.expect_column_values_to_be_in_set(\n       \"Order ID\",\n       value_set = df_expectations.tolist(),\n       meta = {\n         \"dimension\": 'Integrity'\n       }\n    ) \n    ```"]