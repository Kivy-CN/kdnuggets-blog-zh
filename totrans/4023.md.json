["```py\ndef add_to_cart(item, cart=[]):\n    cart.append(item)\n    return cart\n```", "```py\n# User 1 adds items to their cart\nuser1_cart = add_to_cart(\"Apple\")\nprint(\"User 1 Cart:\", user1_cart) \n```", "```py\nOutput >>> ['Apple']\n```", "```py\n# User 2 adds items to their cart\nuser2_cart = add_to_cart(\"Cookies\")\nprint(\"User 2 Cart:\", user2_cart) \n```", "```py\nOutput >>>\n\n['Apple', 'Cookies'] # User 2 never added apples to their cart!\n```", "```py\ndef add_to_cart(item, cart=None):\n    if cart is None:\n        cart = []\n    cart.append(item)\n    return cart\n```", "```py\nx = 10\nsquares = []\nfor x in range(5):\n    squares.append(x ** 2)\n\nprint(\"Squares list:\", squares)  \n\n# x is accessible here and is the last value of the looping var\nprint(\"x after for loop:\", x)\n```", "```py\nOutput >>>\n\nSquares list: [0, 1, 4, 9, 16]\nx after for loop: 4\n```", "```py\nx = 10\nsquares = [x ** 2 for x in range(5)]\n\nprint(\"Squares list:\", squares)  \n\n# x is 10 here\nprint(\"x after list comprehension:\", x)\n```", "```py\nOutput >>>\n\nSquares list: [0, 1, 4, 9, 16]\nx after list comprehension: 10\n```", "```py\n>>> a = 7\n>>> b = 7\n>>> a == 7\nTrue\n>>> a is b\nTrue\n```", "```py\n>>> x = 280\n>>> y = 280\n>>> x == y\nTrue\n>>> x is y\nFalse\n```", "```py\n>>> my_tuple = ([1,2],3,4)\n>>> my_tuple[0].append(3)\n>>> my_tuple\n([1, 2, 3], 3, 4)\n```", "```py\n>>> my_tuple[0] += [4,5]\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: 'tuple' object does not support item assignment</module></stdin>\n```", "```py\n>>> my_tuple\n([1, 2, 3, 4, 5], 3, 4)\n```", "```py\noriginal_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n\n# Shallow copy of the original list\nshallow_copy = original_list\n\n# Modify the shallow copy\nshallow_copy[0][0] = 100\n\n# Print both the lists\nprint(\"Original List:\", original_list)\nprint(\"Shallow Copy:\", shallow_copy)\n```", "```py\nOutput >>>\n\nOriginal List: [[100, 2, 3], [4, 5, 6], [7, 8, 9]]\nShallow Copy: [[100, 2, 3], [4, 5, 6], [7, 8, 9]]\n```", "```py\nimport copy\n\noriginal_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n\n# Deep copy of the original list\ndeep_copy = copy.deepcopy(original_list)\n\n# Modify an element of the deep copy\ndeep_copy[0][0] = 100\n\n# Print both lists\nprint(\"Original List:\", original_list)\nprint(\"Deep Copy:\", deep_copy)\n```", "```py\nOutput >>>\n\nOriginal List: [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\nDeep Copy: [[100, 2, 3], [4, 5, 6], [7, 8, 9]]\n```"]