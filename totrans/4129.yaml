- en: All About Collections in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2022/09/collections-python.html](https://www.kdnuggets.com/2022/09/collections-python.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![All About Collections in Python](../Images/df4540364b3e0ee7daf7a1b76def32d0.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Editor
  prefs: []
  type: TYPE_NORMAL
- en: Python possesses a module named **collections** which has different types of
    containers. A container is a python object which consists different objects and
    implements a way to retrieve those objects and iterate over them.
  prefs: []
  type: TYPE_NORMAL
- en: In this tutorial, we would be exploring different types of containers implemented
    by the **collections** module.
  prefs: []
  type: TYPE_NORMAL
- en: Counters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OrderedDict
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DefaultDict
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ChainMap
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NamedTuple
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DeQue
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Counters
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Counters are dict subclass which is used to keep the count of the elements present
    in an iterable in an unordered dictionary where the key represents the element
    and value represents the count of the element in the iterable
  prefs: []
  type: TYPE_NORMAL
- en: In order to initialize a counter object, we use the counter () function which
    can be called in the following ways
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**1) Using sequence of items**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**2) Using Dictionary**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '**3) Using keyword arguments**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: OrderedDict
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An orderedDict are dict subclass but not like dictionary, they remember the
    order in which the keys are inserted
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '**1) When inserting new items in an existing ordered dictionary the new item
    is attached at the end of the dictionary hence maintaining the order of dictionary**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '**2) When deleting an item from an existing ordered dictionary and inserting
    the same item again then that particular item is inserted at the end of the dictionary **'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '**3) When reassigning or updating the value of an existing key – value pair
    in an OrderedDict object, the position of the key is maintained but the key gets
    a new value**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: DefaultDict
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A DefaultDict is a dict subclass which provides default values for a key which
    never exists hence never raising a keyError
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '**1) Using list as a defaultdict**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '**2) Using int as a defaultdict**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: ChainMap
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ChainMap are used to combine more than one dictionaries into a single unit hence
    returning a list of dictionaries
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '**1) Accessing Values using key name**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '**2) Accessing Values **'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '**3) Accessing Keys**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '**4) Inserting new dictionary**'
  prefs: []
  type: TYPE_NORMAL
- en: A new dictionary is inserted at the beginning of the ChainMap by using the new_child()
    method
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: NamedTuple
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A NamedTuple is a tuple object having names for every position
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '**1) Declaring the namedtuple**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '**2) Inserting values to the namedtuple**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: '**3) Accessing the value using index**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: '**4) Accessing the value using name**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: Deque
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A deque is a list for implementing append and pop operations on both sides of
    the container
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: '**1) Declaring deque**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: '**2) Using append to insert element at the right which is the end of deque**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '**3) Using append to insert element at the left which is the beginning of deque**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: '**4) Using pop to delete element from the right which is the end of deque**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: '**5) Using popleft to delete element from the left which is the beginning of
    deque**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: '**[Priya Sengar](https://www.linkedin.com/in/priya-sengar/)** (**Medium**,
    **Github**) is a Data Scientist with Old Dominion University. Priya is passionate
    about solving problems in data and converting them into solutions.'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[What''s With All the Layoffs in Tech?](https://www.kdnuggets.com/2023/02/layoffs-tech.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Super Bard: The AI That Can Do It All and Better](https://www.kdnuggets.com/2023/05/super-bard-ai-better.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[If You Want to Master Generative AI, Ignore All (But Two) Tools](https://www.kdnuggets.com/if-you-want-to-master-generative-ai-ignore-all-but-two-tools)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Popular Google Certification for All Areas in the Tech Industry](https://www.kdnuggets.com/popular-google-certification-for-all-areas-in-the-tech-industry)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Textbooks Are All You Need: A Revolutionary Approach to AI Training](https://www.kdnuggets.com/2023/07/textbooks-all-you-need-revolutionary-approach-ai-training.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Skills All Marketing Analytics and Data Science Pros Need Today](https://www.kdnuggets.com/2023/08/mads-5-skills-marketing-analytics-data-science-pros-need-today.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
