- en: Multiple Time Series Forecasting with PyCaret
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2021/04/multiple-time-series-forecasting-pycaret.html](https://www.kdnuggets.com/2021/04/multiple-time-series-forecasting-pycaret.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Moez Ali](https://www.linkedin.com/in/profile-moez/), Founder & Author
    of PyCaret**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c05ecb6b401ed3f08fb023e361b80252.png)'
  prefs: []
  type: TYPE_IMG
- en: PyCaret — An open-source, low-code machine learning library in Python
  prefs: []
  type: TYPE_NORMAL
- en: PyCaret
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: PyCaret is an open-source, low-code machine learning library and end-to-end
    model management tool built-in Python for automating machine learning workflows.
    It is incredibly popular for its ease of use, simplicity, and ability to build
    and deploy end-to-end ML prototypes quickly and efficiently.
  prefs: []
  type: TYPE_NORMAL
- en: PyCaret is an alternate low-code library that can be used to replace hundreds
    of lines of code with few lines only. This makes the experiment cycle exponentially
    fast and efficient.
  prefs: []
  type: TYPE_NORMAL
- en: PyCaret is **simple and** **easy to use**. All the operations performed in PyCaret
    are sequentially stored in a **Pipeline** that is fully automated for **deployment. **Whether
    it’s imputing missing values, one-hot-encoding, transforming categorical data,
    feature engineering, or even hyperparameter tuning, PyCaret automates all of it.
  prefs: []
  type: TYPE_NORMAL
- en: 'This tutorial assumes that you have some prior knowledge and experience with
    PyCaret. If you haven’t used it before, no problem — you can get a quick headstart
    through these tutorials:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PyCaret 2.2 is here — what’s new](https://towardsdatascience.com/pycaret-2-2-is-here-whats-new-ad7612ca63b)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Announcing PyCaret 2.0](https://towardsdatascience.com/announcing-pycaret-2-0-39c11014540e)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Five things you don’t know about PyCaret](https://towardsdatascience.com/5-things-you-dont-know-about-pycaret-528db0436eec)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**RECAP**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In my [last tutorial](https://towardsdatascience.com/time-series-forecasting-with-pycaret-regression-module-237b703a0c63),
    I have demonstrated how you can use PyCaret to forecast time-series data using
    Machine Learning through [PyCaret Regression Module](https://pycaret.readthedocs.io/en/latest/api/regression.html).
    If you haven’t read that yet, you can read [Time Series Forecasting with PyCaret
    Regression Module](https://towardsdatascience.com/time-series-forecasting-with-pycaret-regression-module-237b703a0c63) tutorial
    before continuing with this one, as this tutorial builds upon some important concepts
    covered in the last tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: Installing PyCaret
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Installing PyCaret is very easy and takes only a few minutes. We strongly recommend
    using a virtual environment to avoid potential conflicts with other libraries.
  prefs: []
  type: TYPE_NORMAL
- en: PyCaret’s default installation is a slim version of pycaret which only installs
    hard dependencies that are [listed here](https://github.com/pycaret/pycaret/blob/master/requirements.txt).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: When you install the full version of pycaret, all the optional dependencies
    as [listed here](https://github.com/pycaret/pycaret/blob/master/requirements-optional.txt) are
    also installed.
  prefs: []
  type: TYPE_NORMAL
- en: ???? PyCaret Regression Module
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: PyCaret **Regression Module** is a supervised machine learning module used for
    estimating the relationships between a **dependent variable** (often called the
    ‘outcome variable’, or ‘target’) and one or more **independent variables** (often
    called ‘features’, or ‘predictors’).
  prefs: []
  type: TYPE_NORMAL
- en: The objective of regression is to predict continuous values such as sales amount,
    quantity, temperature, number of customers, etc. All modules in PyCaret provide
    many [pre-processing](https://www.pycaret.org/preprocessing) features to prepare
    the data for modeling through the [setup ](https://www.pycaret.org/setup)function.
    It has over 25 ready-to-use algorithms and [several plots](https://www.pycaret.org/plot-model) to
    analyze the performance of trained models.
  prefs: []
  type: TYPE_NORMAL
- en: ???? Dataset
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For this tutorial, I will show the end-to-end implementation of multiple time-series
    data forecasting, including both the training as well as predicting future values.
  prefs: []
  type: TYPE_NORMAL
- en: I have used the [Store Item Demand Forecasting Challenge](https://www.kaggle.com/c/demand-forecasting-kernels-only) dataset
    from Kaggle. This dataset has 10 different stores and each store has 50 items,
    i.e. total of 500 daily level time series data for five years (2013–2017).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/df759b487e1be619cd86c59ff474a925.png)'
  prefs: []
  type: TYPE_IMG
- en: Sample Dataset
  prefs: []
  type: TYPE_NORMAL
- en: ???? Load and prepare the data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/cee173d1e1b85ba3bf47c84c1805d384.png)'
  prefs: []
  type: TYPE_IMG
- en: Samples rows from data
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: ???? Visualize time-series
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/9d91598b4177e08e4a34837cc6145ecf.png)'
  prefs: []
  type: TYPE_IMG
- en: store_1_item_1 time series and 30-day moving average
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/af2b1fa012292c287ca1c33f2da7257d.png)'
  prefs: []
  type: TYPE_IMG
- en: store_2_item_1 time series and 30-day moving average
  prefs: []
  type: TYPE_NORMAL
- en: ???? Start the training process
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now that we have the data ready, let’s start the training loop. Notice that `verbose
    = False` in all functions to avoid printing results on the console while training.
  prefs: []
  type: TYPE_NORMAL
- en: The code below is a loop around `time_series` column we created during the data
    preparatory step. There are a total of 150 time series (10 stores x 50 items).
  prefs: []
  type: TYPE_NORMAL
- en: Line 10 below is filtering the dataset for `time_series` variable. The first
    part inside the loop is initializing the `setup` function, followed by `compare_models` to
    find the best model. Line 24–26 captures the results and appends the performance
    metrics of the best model in a list called `all_results`. The last part of the
    code uses the `finalize_model` function to retrain the best model on the entire
    dataset including the 5% left in the test set and saves the entire pipeline including
    the model as a pickle file.
  prefs: []
  type: TYPE_NORMAL
- en: '[https://gist.github.com/moezali1/f258195ba1c677654abffb0d1acb2cc0](https://gist.github.com/moezali1/f258195ba1c677654abffb0d1acb2cc0)'
  prefs: []
  type: TYPE_NORMAL
- en: We can now create a data frame from `all_results` list. It will display the
    best model selected for each time series.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/fb374f6e8afef94f8a2aef439173c3dd.png)'
  prefs: []
  type: TYPE_IMG
- en: sample_rows from concat_results
  prefs: []
  type: TYPE_NORMAL
- en: Training Process ????
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Figure](../Images/425b2d2a63ec2c98390fbf8da89b63ad.png)'
  prefs: []
  type: TYPE_IMG
- en: Training process
  prefs: []
  type: TYPE_NORMAL
- en: ???? Generate predictions using trained models
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now that we have trained models, let’s use them to generate predictions, but
    first, we need to create the dataset for scoring (X variables).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/19a1fa56fa27d09a4afb8919582a888b.png)'
  prefs: []
  type: TYPE_IMG
- en: sample rows from score_df dataset
  prefs: []
  type: TYPE_NORMAL
- en: Now let’s create a loop to load the trained pipelines and use the `predict_model` function
    to generate prediction labels.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/e4eba32882da3ce5ace399f07c02ec61.png)'
  prefs: []
  type: TYPE_IMG
- en: samples rows from concat_df
  prefs: []
  type: TYPE_NORMAL
- en: We will now join the `data`and `concat_df` .
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/68ab2e1ee3847753490af9aed8f84f82.png)'
  prefs: []
  type: TYPE_IMG
- en: sample rows from final_df
  prefs: []
  type: TYPE_NORMAL
- en: We can now create a loop to see all plots.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/6bad75640eafb65d8759b7a89ee53ebf.png)'
  prefs: []
  type: TYPE_IMG
- en: store_1_item_1 actual sales and predicted labels
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/741088670e001a6d1420457e739fc2d4.png)'
  prefs: []
  type: TYPE_IMG
- en: store_2_item_1 actual sales and predicted labels
  prefs: []
  type: TYPE_NORMAL
- en: I hope that you will appreciate the ease of use and simplicity in PyCaret. In
    less than 50 lines of code and one hour of experimentation, I have trained over
    10,000 models (25 estimators x 500 time series) and productionalized 500 best
    models to generate predictions.
  prefs: []
  type: TYPE_NORMAL
- en: Coming Soon!
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Next week I will be writing a tutorial on unsupervised anomaly detection on
    time-series data using [PyCaret Anomaly Detection Module](https://pycaret.readthedocs.io/en/latest/api/anomaly.html).
    Please follow me on [Medium](https://medium.com/@moez-62905), [LinkedIn](https://www.linkedin.com/in/profile-moez/),
    and [Twitter](https://twitter.com/moezpycaretorg1) to get more updates.
  prefs: []
  type: TYPE_NORMAL
- en: There is no limit to what you can achieve using this lightweight workflow automation
    library in Python. If you find this useful, please do not forget to give us ⭐️
    on our GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: To hear more about PyCaret follow us on [LinkedIn](https://www.linkedin.com/company/pycaret/) and [Youtube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g).
  prefs: []
  type: TYPE_NORMAL
- en: Join us on our slack channel. Invite link [here](https://join.slack.com/t/pycaret/shared_invite/zt-p7aaexnl-EqdTfZ9U~mF0CwNcltffHg).
  prefs: []
  type: TYPE_NORMAL
- en: 'You may also be interested in:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Build your own AutoML in Power BI using PyCaret 2.0](https://towardsdatascience.com/build-your-own-automl-in-power-bi-using-pycaret-8291b64181d)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Deploy Machine Learning Pipeline on Azure using Docker](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-cloud-using-docker-container-bec64458dc01)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Deploy Machine Learning Pipeline on Google Kubernetes Engine](https://towardsdatascience.com/deploy-machine-learning-model-on-google-kubernetes-engine-94daac85108b)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Deploy Machine Learning Pipeline on AWS Fargate](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-aws-fargate-eb6e1c50507)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Build and deploy your first machine learning web app](https://towardsdatascience.com/build-and-deploy-your-first-machine-learning-web-app-e020db344a99)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Deploy PyCaret and Streamlit app using AWS Fargate serverless](https://towardsdatascience.com/deploy-pycaret-and-streamlit-app-using-aws-fargate-serverless-infrastructure-8b7d7c0584c2)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Build and deploy machine learning web app using PyCaret and Streamlit](https://towardsdatascience.com/build-and-deploy-machine-learning-web-app-using-pycaret-and-streamlit-28883a569104)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Deploy Machine Learning App built using Streamlit and PyCaret on GKE](https://towardsdatascience.com/deploy-machine-learning-app-built-using-streamlit-and-pycaret-on-google-kubernetes-engine-fd7e393d99cb)'
  prefs: []
  type: TYPE_NORMAL
- en: Important Links
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Documentation](https://pycaret.readthedocs.io/en/latest/installation.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Blog](https://medium.com/@moez_62905)'
  prefs: []
  type: TYPE_NORMAL
- en: '[GitHub](https://www.github.com/pycaret/pycaret)'
  prefs: []
  type: TYPE_NORMAL
- en: '[StackOverflow](https://stackoverflow.com/questions/tagged/pycaret)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Install PyCaret](https://pycaret.readthedocs.io/en/latest/installation.html)
    [Notebook Tutorials](https://pycaret.readthedocs.io/en/latest/tutorials.html)
    [Contribute in PyCaret](https://pycaret.readthedocs.io/en/latest/contribute.html)'
  prefs: []
  type: TYPE_NORMAL
- en: Want to learn about a specific module?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Click on the links below to see the documentation and working examples.
  prefs: []
  type: TYPE_NORMAL
- en: '[Classification](https://pycaret.readthedocs.io/en/latest/api/classification.html)
    [Regression](https://pycaret.readthedocs.io/en/latest/api/regression.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Clustering](https://pycaret.readthedocs.io/en/latest/api/clustering.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Anomaly Detection](https://pycaret.readthedocs.io/en/latest/api/anomaly.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Natural Language Processing](https://pycaret.readthedocs.io/en/latest/api/nlp.html)
    [Association Rule Mining](https://pycaret.readthedocs.io/en/latest/api/arules.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Moez Ali](https://www.linkedin.com/in/profile-moez/)** is a Data Scientist,
    and is Founder & Author of PyCaret.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/multiple-time-series-forecasting-with-pycaret-bc0a779a22fe).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Time Series Forecasting with PyCaret Regression Module](/2021/04/time-series-forecasting-pycaret-regression-module.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Automated Anomaly Detection Using PyCaret](/2021/04/automated-anomaly-detection-pycaret.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deploy a Machine Learning Pipeline to the Cloud Using a Docker Container](/2020/06/deploy-machine-learning-pipeline-cloud-docker.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Time Series Forecasting with Ploomber, Arima, Python, and Slurm](https://www.kdnuggets.com/2022/03/time-series-forecasting-ploomber-arima-python-slurm.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Time Series Forecasting with statsmodels and Prophet](https://www.kdnuggets.com/2023/03/time-series-forecasting-statsmodels-prophet.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Leveraging XGBoost for Time-Series Forecasting](https://www.kdnuggets.com/2023/08/leveraging-xgboost-timeseries-forecasting.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Manage Multiple Inheritance in Python](https://www.kdnuggets.com/2022/03/manage-multiple-inheritance-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Binary Classification with PyCaret](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Clustering in Python with PyCaret](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
