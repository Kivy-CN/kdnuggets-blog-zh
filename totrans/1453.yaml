- en: 'Version Control for Data Science: Tracking Machine Learning Models and Datasets'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据科学的版本控制：跟踪机器学习模型和数据集
- en: 原文：[https://www.kdnuggets.com/2019/09/version-control-data-science-tracking-machine-learning-models-datasets.html](https://www.kdnuggets.com/2019/09/version-control-data-science-tracking-machine-learning-models-datasets.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/09/version-control-data-science-tracking-machine-learning-models-datasets.html](https://www.kdnuggets.com/2019/09/version-control-data-science-tracking-machine-learning-models-datasets.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Vipul Jain](https://www.linkedin.com/in/jnvipul/), Applied Data Scientist**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者 [Vipul Jain](https://www.linkedin.com/in/jnvipul/)，应用数据科学家**'
- en: '![Figure](../Images/087fa3073bbf35d2492f21ed229949b3.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/087fa3073bbf35d2492f21ed229949b3.png)'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1. [Google网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2. [Google数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3. [Google IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Undoubtedly, GIT is the holy grail of versioning systems! Git is great in versioning
    the source code. But unlike software engineering, Data Science projects have additional
    big-ass files like datasets, trained model files, label-encodings etc. which can
    easily go to the size of a few GBs and therefore cannot be tracked using GIT.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 毋庸置疑，GIT 是版本控制系统的圣杯！Git 在版本控制源代码方面表现出色。但与软件工程不同，数据科学项目有额外的大文件，如数据集、训练模型文件、标签编码等，这些文件的大小可能达到几个
    GB，因此无法使用 GIT 进行跟踪。
- en: Tell me the Solution?
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 告诉我解决方案是什么？
- en: The amazing bunch of people at [https://dvc.org/](https://dvc.org/) have created
    this tool called `DVC`. DVC helps us to version large data files, similar to how
    we version control source code files using `git`. Also, `DVC` works flawlessly
    on top of `GIT` which makes it even better!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [https://dvc.org/](https://dvc.org/) 的一群了不起的人创建了这个名为 `DVC` 的工具。DVC 帮助我们对大型数据文件进行版本控制，类似于我们使用
    `git` 对源代码文件进行版本控制。此外，`DVC` 可以在 `GIT` 之上无缝运行，使其更加出色！
- en: '![](../Images/bdc40ca7358e34d28a4f291c467d8203.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bdc40ca7358e34d28a4f291c467d8203.png)'
- en: Most of the time, tracking of datasets and models are ignored in Data Science
    workflows. Now with DVC we can track all the artifacts — which will make Data
    Scientists a lot more productive, as we don’t have to manually keep track of what
    we did to achieve the state, and also we don’t lose time in the processing of
    data and building models to reproduce the same state.
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 大多数时候，数据科学工作流中忽略了数据集和模型的跟踪。现在有了 DVC，我们可以跟踪所有工件——这将使数据科学家更高效，因为我们无需手动跟踪实现状态的过程，也不会在处理数据和构建模型以再现相同状态时浪费时间。
- en: '![](../Images/bfb92778ee5471adefb6bd60f869ac2e.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bfb92778ee5471adefb6bd60f869ac2e.png)'
- en: Benefits Of DVC
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DVC 的好处
- en: Tracks large files easily — which makes reusability and reproducibility a piece
    of cake
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻松跟踪大文件——使得重用和再现变得轻而易举
- en: Git compatible — Works on top of git
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Git 兼容——在 git 之上运行
- en: Storage agnostic — Supports GCS/S3/Azure and many more to store data
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储无关——支持 GCS/S3/Azure 等多种数据存储方式
- en: Let’s get started!
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: Installation
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装
- en: 'Installation is quite straight-forward with the command below:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 安装非常简单，只需使用以下命令：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: To verify the installation, type `dvc` in the terminal and if you see a bunch
    of DVC command options, you are on the right track.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证安装，请在终端中输入 `dvc`，如果看到一堆 DVC 命令选项，那么你就成功了。
- en: 'For the demonstration, I will be using the repository [dvc-sample](https://github.com/jnvipul/dvc-sample) with
    the following project structure:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示，我将使用仓库 [dvc-sample](https://github.com/jnvipul/dvc-sample)，其项目结构如下：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The repository has a simple structure; there is an `src` folder which will have
    the python scripts(version controlled by git) and `artifacts` folder which will
    have all the datasets, model files and rest of the artifacts(which are bigger
    and need to be controlled by `dvc`).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 该仓库有一个简单的结构；有一个`src`文件夹，其中包含由git版本控制的Python脚本，以及一个`artifacts`文件夹，其中包含所有数据集、模型文件和其他artifacts（这些文件较大，需要用`dvc`控制）。
- en: Initializing dvc
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 初始化dvc。
- en: 'The first thing we have to do is to initialize `dvc` in the root of the project.
    We do it with the command below:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要做的第一件事是在项目的根目录初始化`dvc`。我们使用以下命令完成：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: (This is very similar to git init, we only have to do it once while setting
    up the project)
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: （这与git init非常相似，我们只需要在设置项目时执行一次）
- en: 'At this point, we have added dvc support to the project. But we still have
    to specify the folders which we want to version control using `dvc`. In this example,
    we will be versioning`artifacts` folder. We do it using the command below:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们已经为项目添加了dvc支持。但我们仍然需要指定要使用`dvc`进行版本控制的文件夹。在这个例子中，我们将对`artifacts`文件夹进行版本控制。我们使用以下命令完成：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The above statement did two things -:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 上述语句做了两件事：
- en: Specify which folder we want to track using `dvc`
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定我们要使用`dvc`跟踪的文件夹。
- en: (Creating a metafile `artifacts.dvc`)
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: （创建一个metafile `artifacts.dvc`）
- en: Add the same folder to `.gitignore`
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将相同的文件夹添加到`.gitignore`中。
- en: (As we don’t want to track the folder with git anymore)
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: （因为我们不再希望用git跟踪这个文件夹）
- en: After executing the above command, `dvc` tells us to add the above two files
    to `git`
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 执行上述命令后，`dvc`告诉我们将上述两个文件添加到`git`中。
- en: '![](../Images/411e48a22caf93a0a51ce94fba61c62c.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/411e48a22caf93a0a51ce94fba61c62c.png)'
- en: 'Now we add these files to git using the commands below:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们使用以下命令将这些文件添加到git中：
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Note**: An important thing to note here is: the meta-files of artifacts folder
    are tracked by `git` and actual artifacts files are tracked by `dvc`. In this
    case, `artifacts.dvc` is tracked by git, and contents inside `artifacts` folder
    are tracked by dvc.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**：这里需要注意的重要一点是：artifacts文件夹的元文件由`git`跟踪，而实际的artifacts文件由`dvc`跟踪。在这种情况下，`artifacts.dvc`由git跟踪，而`artifacts`文件夹内的内容由dvc跟踪。'
- en: It's okay if this is not very clear now, we will look at it closely later on.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果现在还不是很清楚，没关系，我们稍后会仔细看一下。
- en: At this point, we have added `*dvc*` to our project along with git and have
    also added the folder which we want to track using dvc.
  id: totrans-46
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 此时，我们已经在项目中添加了`*dvc*`，并且还添加了要使用dvc跟踪的文件夹。
- en: 'Now let’s look at a typical Machine Learning workflow(simplified version):'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看一个典型的机器学习工作流程（简化版本）：
- en: We have a dataset
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们有一个数据集。
- en: We do some preprocessing on the above dataset using a python script
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用一个Python脚本对上述数据集进行预处理。
- en: We train a model using a python script
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用一个Python脚本训练模型。
- en: 'We have a model file which is the output of step #3'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们有一个模型文件，这是第3步的输出。
- en: Above is a repetitive process; as we use multiple datasets, with a different
    set of preprocessing pipelines, to build and test various Machine Learning models.
    And this is what we want to version control in order to easily reproduce the previous
    versions whenever required.
  id: totrans-52
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 上述是一个重复的过程；当我们使用多个数据集并有不同的预处理流水线来构建和测试各种机器学习模型时，这就是我们想要进行版本控制的内容，以便在需要时轻松重现先前的版本。
- en: 'For the above scenario, we are tracking #2 and #3 using `git` as these are
    smaller code files. And track #1 and #4 using `dvc`, as these could be pretty
    big in size(up to a few GBs)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 对于上述场景，我们使用`git`来跟踪＃2和＃3，因为这些是较小的代码文件。而使用`dvc`跟踪＃1和＃4，因为它们可能会很大（多达几GB）。
- en: 'Have a look at the directory structure again for more clarity:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 再次查看目录结构以获得更多清晰度：
- en: '[PRE5]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: For simplicity, at any given point — the content of each of the above 4 files
    will be the version they belong to.
  id: totrans-56
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 为简单起见，在任何给定时间点，上述4个文件的内容将是它们所属版本的内容。
- en: 'Let’s say we have written 1st version of the preprocessor and training scripts
    which were used on a dataset to build the model. The 4 files look like this right
    now:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们已经编写了预处理器和训练脚本的第一个版本，用于对数据集进行建模。现在4个文件的内容看起来是这样的：
- en: '![Figure](../Images/b78b9458f6458dd5d258957ba504ce3e.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![Figure](../Images/b78b9458f6458dd5d258957ba504ce3e.png)'
- en: State of files at Version 1
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 文件在版本1时的状态。
- en: Tracking large files
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 跟踪大文件。
- en: 'Now we have to commit our code and the artifacts(dataset and model files),
    we do it in 3 steps:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们必须提交我们的代码和artifacts（数据集和模型文件），我们通过以下3个步骤完成：
- en: 1\. We track changes in`artifacts` using `dvc`
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 我们使用`dvc`来跟踪`artifacts`中的变更。
- en: '[PRE6]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: (This tracks the latest version of files inside artifacts folder and modifies
    the meta-file `artifacts.dvc`)
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: （这会跟踪 `artifacts` 文件夹内文件的最新版本，并修改元文件 `artifacts.dvc`）
- en: 2\. We track changes in code scripts and updated meta-file(artifacts.dvc) using `git`
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 2. 我们使用 `git` 跟踪代码脚本中的更改和更新的元文件（artifacts.dvc）
- en: '[PRE7]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 3\. Tag this state of the project as `experiment01`using `git`
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 3. 使用 `git` 将此项目状态标记为 `experiment01`
- en: (This will help us to roll back to a version later)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: （这将帮助我们以后回滚到一个版本）
- en: '[PRE8]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: We have successfully saved version 1 of our scripts and the artifacts using `git` and `dvc` respectively.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经分别使用 `git` 和 `dvc` 成功保存了版本 1 的脚本和工件。
- en: 'Now imagine we are running a new experiment, where we have a different dataset
    and modified scripts. The 4 files look like this right now:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在假设我们正在进行一个新的实验，其中包含不同的数据集和修改过的脚本。这 4 个文件现在看起来是这样的：
- en: '![Figure](../Images/754d30a0a887b2bb347ffcfea3bc969a.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/754d30a0a887b2bb347ffcfea3bc969a.png)'
- en: State of files at Version 2
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 版本 2 的文件状态
- en: Now we repeat the same 3 steps to track Version 2.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们重复相同的 3 个步骤以跟踪版本 2。
- en: 1\. We track changes in`artifacts` using `dvc`
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 1. 我们使用 `dvc` 跟踪 `artifacts` 中的更改
- en: '[PRE9]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 2\. We track changes in code scripts and updated meta-file(artifacts.dvc) using `git`
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 2. 我们使用 `git` 跟踪代码脚本中的更改和更新的元文件（artifacts.dvc）
- en: '[PRE10]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 3\. Tag this state of the project as `experiment02`using `git`
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 3. 使用 `git` 将此项目状态标记为 `experiment02`
- en: '[PRE11]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: At this stage, we have tracked the scripts and the artifacts of Version 2 as
    well.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，我们已经跟踪了版本 2 的脚本和工件。
- en: Switching versions — Reproducing code and artifacts
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 切换版本——重现代码和工件
- en: 'Now comes the real test, its time to see if we can jump to any version of the
    two folders with ease. To start with — let’s see whats the current state of the
    project:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在迎来了真正的考验，是时候查看我们是否可以轻松切换到这两个文件夹的任何版本。首先——让我们看看项目的当前状态：
- en: '![Figure](../Images/319bcbd802127c0ede1a329db81f2b40.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/319bcbd802127c0ede1a329db81f2b40.png)'
- en: 'Current state: Version 2'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 当前状态：版本 2
- en: As we can see from the contents of the file, we are on Version 2 right now.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 从文件内容中可以看出，我们目前处于版本 2。
- en: (We are looking at contents to for better intuition, in real life, we can look
    at git commit messages or tags)
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: （我们查看内容以便更好地理解，实际情况中，我们可以查看 git 提交消息或标签）
- en: 'Now let’s say we realized that version 1 was better and we want to rollback(the
    scripts, as well as dataset and the model) to version 1\. Let’s see how we can
    do it with just a couple of easy commands:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在假设我们意识到版本 1 更好，我们想将（脚本、数据集和模型）回滚到版本 1。让我们看看如何通过几个简单的命令做到这一点：
- en: 1\. We checkout to the `experiment01` tag
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 1. 我们检出到 `experiment01` 标签
- en: '[PRE12]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'After executing the following command, the project state looks like this:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下命令后，项目状态如下：
- en: '![](../Images/93aa1e8591eb542980bd5e3e9dc6d58b.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/93aa1e8591eb542980bd5e3e9dc6d58b.png)'
- en: Did you notice anything?
  id: totrans-93
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你注意到什么了吗？
- en: '![Figure](../Images/271dfc07b1aecf4a8a3d693b054460ae.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/271dfc07b1aecf4a8a3d693b054460ae.png)'
- en: Ref: [https://www.shutterstock.com](https://www.shutterstock.com/)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 参考：[https://www.shutterstock.com](https://www.shutterstock.com/)
- en: You can see that the scripts have been changed to Version 1\. Great!
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到脚本已经更改为版本 1。太棒了！
- en: But the artifacts are still on Version 2\. That’s right! This is because, as
    of now, we have checked out using `git` — which has rolled back the version of
    code scripts and the `artifacts.dvc` meta-file. Now as the meta-file is already
    rolled back to the version we want, all we have to do to checkout using `dvc`
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 但工件仍然是版本 2。没错！这是因为，到目前为止，我们是通过 `git` 检出的——这回滚了代码脚本和 `artifacts.dvc` 元文件的版本。现在，由于元文件已经回滚到我们想要的版本，我们所要做的就是使用
    `dvc` 进行检出
- en: '[PRE13]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This will change the files under `artifacts` folder as per the current version(v1)
    of `artifacts.dvc` file.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这将根据当前版本（v1）的 `artifacts.dvc` 文件更改 `artifacts` 文件夹中的文件。
- en: 'Let’s look at the files again:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再看一遍文件：
- en: '![Figure](../Images/5e1f68a1b1d1a40500b3c949e0f1a624.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/5e1f68a1b1d1a40500b3c949e0f1a624.png)'
- en: All the files rolled back to Version1
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 所有文件已回滚到版本 1
- en: Hurray! We have successfully rolled back from version 2 to version 1 — for the
    scripts as well as the giant dataset and model files.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 万岁！我们已经成功从版本 2 回滚到版本 1——包括脚本、巨大的数据集和模型文件。
- en: '![](../Images/306c72e2ad3b3f97d2cdffdd059dd920.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/306c72e2ad3b3f97d2cdffdd059dd920.png)'
- en: To make it simple, we have only looked at working and switching between 2 versions.
    The above process works exactly the same with even a few hundred experiments —
    giving us the power of iterating fast without maintaining manual logs while iterating
    or worrying about reproducing the earlier state of experiments when required.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，我们仅考虑了在2个版本之间工作和切换。上述过程在处理数百个实验时完全相同——使我们能够快速迭代，而不必在迭代时维护手动日志或担心在需要时重现先前实验的状态。
- en: Conclusion
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论
- en: DVC is a great tool to version the large files such as datasets and trained
    model files, exactly how we version control source code using git. It helps us
    with the reproducibility of artifacts of different ML experiments, saving us the
    time in processing data and building models.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: DVC是一个很好的工具，可以对大型文件如数据集和训练模型文件进行版本控制，就像我们使用git对源代码进行版本控制一样。它帮助我们实现不同机器学习实验的成果的可重复性，节省了我们处理数据和构建模型的时间。
- en: Other Readings
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他阅读
- en: '[Python Basics — Classes and Objects](https://medium.com/@jnvipul/python-basics-classes-and-objects-e40cf4e77668)'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python基础——类与对象](https://medium.com/@jnvipul/python-basics-classes-and-objects-e40cf4e77668)'
- en: '[Python Basics — Data Structures](https://blog.usejournal.com/python-basics-data-structures-d378d854df1b?source=post_page---------------------------)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python基础——数据结构](https://blog.usejournal.com/python-basics-data-structures-d378d854df1b?source=post_page---------------------------)'
- en: '[Python Basics — Handling Exceptions](https://blog.usejournal.com/road-to-become-a-python-ninja-handling-exceptions-afd600a762ec?source=post_page---------------------------)'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python基础——处理异常](https://blog.usejournal.com/road-to-become-a-python-ninja-handling-exceptions-afd600a762ec?source=post_page---------------------------)'
- en: '[Cyclical Learning Rates — The ultimate guide for setting learning rates for
    Neural Networks](https://towardsdatascience.com/cyclical-learning-rates-the-ultimate-guide-for-setting-learning-rates-for-neural-networks-3104e906f0ae)'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[循环学习率——设置神经网络学习率的终极指南](https://towardsdatascience.com/cyclical-learning-rates-the-ultimate-guide-for-setting-learning-rates-for-neural-networks-3104e906f0ae)'
- en: '[Idiot’s Guide to Precision, Recall and Confusion Matrix](https://medium.com/swlh/idiots-guide-to-precision-recall-and-confusion-matrix-b32d36463556?source=post_page---------------------------)'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[傻瓜指南：精确度、召回率与混淆矩阵](https://medium.com/swlh/idiots-guide-to-precision-recall-and-confusion-matrix-b32d36463556?source=post_page---------------------------)'
- en: '[Image Recognition Vs Object Detection — The Difference](https://medium.com/swlh/micro-learnings-image-classification-vs-object-detection-the-difference-77110b592343)'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[图像识别与目标检测——区别](https://medium.com/swlh/micro-learnings-image-classification-vs-object-detection-the-difference-77110b592343)'
- en: '**Bio: [Vipul Jain](https://www.linkedin.com/in/jnvipul/)** is a data scientist
    with a focus on machine learning, experience building end-to-end data products
    from ideation to production. Experience building experiment frameworks for A/B
    testing in production. Can effectively present technical concepts to non-technical
    stakeholders.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介： [Vipul Jain](https://www.linkedin.com/in/jnvipul/)** 是一位数据科学家，专注于机器学习，拥有从构思到生产的端到端数据产品构建经验。在生产环境中构建A/B测试实验框架的经验。能够有效地向非技术利益相关者展示技术概念。'
- en: '[Original](https://towardsdatascience.com/version-control-for-data-science-tracking-your-machine-learning-models-and-datasets-aaa61f20bb45).
    Reposted with permission.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/version-control-for-data-science-tracking-your-machine-learning-models-and-datasets-aaa61f20bb45)。经许可转载。'
- en: '**Related:**'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[How to Automate Tasks on GitHub With Machine Learning for Fun and Profit](/2019/05/automate-tasks-github-machine-learning-fun-profit.html)'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何利用机器学习自动化GitHub上的任务以获得乐趣和利润](/2019/05/automate-tasks-github-machine-learning-fun-profit.html)'
- en: '[5 Ways to Deal with the Lack of Data in Machine Learning](/2019/06/5-ways-lack-data-machine-learning.html)'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[处理机器学习中数据不足的5种方法](/2019/06/5-ways-lack-data-machine-learning.html)'
- en: '[7 Tips for Dealing With Small Data](/2019/07/7-tips-dealing-small-data.html)'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[处理小数据的7个技巧](/2019/07/7-tips-dealing-small-data.html)'
- en: More On This Topic
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Versioning Machine Learning Experiments vs Tracking Them](https://www.kdnuggets.com/2021/12/versioning-machine-learning-experiments-tracking.html)'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[机器学习实验版本控制与跟踪](https://www.kdnuggets.com/2021/12/versioning-machine-learning-experiments-tracking.html)'
- en: '[7 Best Tools for Machine Learning Experiment Tracking](https://www.kdnuggets.com/2023/02/7-best-tools-machine-learning-experiment-tracking.html)'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[7个最佳机器学习实验跟踪工具](https://www.kdnuggets.com/2023/02/7-best-tools-machine-learning-experiment-tracking.html)'
- en: '[Developing an Open Standard for Analytics Tracking](https://www.kdnuggets.com/2022/07/developing-open-standard-analytics-tracking.html)'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开发开放标准进行分析跟踪](https://www.kdnuggets.com/2022/07/developing-open-standard-analytics-tracking.html)'
- en: '[Python Basics: Syntax, Data Types, and Control Structures](https://www.kdnuggets.com/python-basics-syntax-data-types-and-control-structures)'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 基础：语法、数据类型和控制结构](https://www.kdnuggets.com/python-basics-syntax-data-types-and-control-structures)'
- en: '[Python Control Flow Cheat Sheet](https://www.kdnuggets.com/2022/11/python-control-flow-cheatsheet.html)'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 控制流备忘单](https://www.kdnuggets.com/2022/11/python-control-flow-cheatsheet.html)'
- en: '[Nota AI releases beta version of NetPresso Model Search, their…](https://www.kdnuggets.com/2022/04/nota-ai-releases-beta-version-netpresso-model-search-hardwareaware-automl-tool.html)'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Nota AI 发布 NetPresso 模型搜索的测试版，他们的…](https://www.kdnuggets.com/2022/04/nota-ai-releases-beta-version-netpresso-model-search-hardwareaware-automl-tool.html)'
