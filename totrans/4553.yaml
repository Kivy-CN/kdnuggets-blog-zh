- en: How to Visualize Data in Python (and R)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/11/visualize-data-python-and-r.html](https://www.kdnuggets.com/2019/11/visualize-data-python-and-r.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [SuperDataScience](https://www.superdatascience.com/courses/python-programming)**.'
  prefs: []
  type: TYPE_NORMAL
- en: At certain cocktail parties, you can get far by arguing that many problems can
    be reduced, not to data per se, but to its presentation. Brexit? Why it’s the
    result of a failure to produce compelling, easy-to-understand data visualizations
    about forecasted quality-of-life changes, you might claim. Or you might propose
    that Facebook, even by loosey-goosey California standards, is actually in the
    data-viz game; the data being that of one’s social network made artificially more
    concrete. [Air](https://projects.sfchronicle.com/trackers/california-fire-map/air-quality/)
    [Quality](https://www.nytimes.com/interactive/2019/10/10/climate/driving-emissions-map.html)?
    Traffic? You might even expound on how proper data visualization is a flexible
    hammer, and though everything will still look like your thumb, at least you’ll
    be right.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/80e8bc73e8b9d19f0adfbaec4f798241.png)'
  prefs: []
  type: TYPE_IMG
- en: '*Average speed on the bay bridge over five-minute increments for one week,
    from one sensor’s point of view (it’s located near Treasure Island). The speed
    plummets during all reasonable commuting hours, illustrating the law of fixed-supply
    and demand, which most people call traffic. Made with Matplotlib.*'
  prefs: []
  type: TYPE_NORMAL
- en: No one said finding these particular cocktail parties would be easy. Or exciting.
    But either way, being able to produce accessible data visualizations is a key
    data science skill. So here’s to the data visualizers; those of us who dare to
    make abstract numbers more immediate, spreadsheets more scintillating (?) and
    technical reports more manageable. And if you still need more fodder for your
    cocktail parties, you can name drop [W.E. Dubois](https://www.brainpickings.org/2017/10/09/w-e-b-du-bois-diagrams/)
    and [Kurt Vonnegut](https://www.youtube.com/watch?v=oP3c1h8v2ZQ) as fellow visualizers,
    too.
  prefs: []
  type: TYPE_NORMAL
- en: Python and R Walk into a Bar…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The [Church-Turing thesis](https://en.wikipedia.org/wiki/Church–Turing_thesis)
    says that what you can do in one program, you can theoretically do in any other.
    Abstractly, this is true. Practically speaking, however, what is easy to do in
    one language or software package may take hours of valuable frustration to do
    in another. (I’m looking at you, Matlab.) Clearly, a lot of these differences
    have to do with how our brains interact with the programming language, how well
    we know it, and how well the programming language’s primitives are adapted to
    the problem at hand. As you are likely aware, the two main general-purpose data
    programming languages are Python and R, but directly comparing them is unfair.
    The better comparison is between R and using the [Pandas package](https://pandas.pydata.org/)
    in conjunction with the Jupyter Notebook. (In the name of full disclosure, I am
    a member of the “Pandas is generally cooler, unless you have some very specific
    problems that have not yet been ported to a Python package” camp.).
  prefs: []
  type: TYPE_NORMAL
- en: With that out of the way, the following is what you need to know.
  prefs: []
  type: TYPE_NORMAL
- en: Pandas was first created in 2008, and Python itself was first released in 1991\.
    Many people who use Python claim it is “easy to think in.” R, on the other hand,
    is actually a mid-90’s implementation of the statistical programming language
    S, which itself was invented at Bell Labs back in the mid-70s.
  prefs: []
  type: TYPE_NORMAL
- en: 'But despite the fact that the R governing body is headquartered in Vienna,
    using it will not make you better at waltzing (indeed, it might make you worse),
    at eating [Manner Wafer cookies](https://en.wikipedia.org/wiki/Manner_(confectionery)),
    nor will discount tickets to the Vienna Philharmonic appear in your terminal.
    What can I say, life is tough. Also, a word to the wise: the only way to transfer
    programming skills to waltzing is to code on [ternary computers](https://en.wikipedia.org/wiki/Ternary_computer);
    both are in base-3\. This being said, R is set up to do the kind of data analysis
    required in laboratory settings producing peer-reviewed material. Given the aforementioned
    work by Church, Turing as well as by every single open-source contributor, Pandas
    can do the same thing (just be sure to import [statsmodels](https://www.statsmodels.org/stable/index.html)),
    generally runs faster, and is easier to optimize (use [Numba](https://numba.pydata.org/)
    and [Numpy](https://numpy.org/)).'
  prefs: []
  type: TYPE_NORMAL
- en: In my experience, when used by experts or for niche analyses, R can be a formidable
    language. However, for the non-experts, R can be harder to audit. For similar
    reasons, R is also easier to introduce uncaught, silent bugs in one’s data processing
    pipeline. In other words, this author’s opinion is that it is easier for R code
    to accumulate technical debt than Python code. On the other hand, it is useful
    to be able to read R, and clearly this advice changes if you want to work in an
    R-based shop. [Here is a short syntactical comparison](https://pandas.pydata.org/pandas-docs/stable/getting_started/comparison/comparison_with_r.html)
    between Pandas and R. And if you talk to someone whose primary language is R about
    this paragraph, they will either enthusiastically admit defeat, or make very reasonable
    points diametrically opposed to my point of view. Your mileage may vary.
  prefs: []
  type: TYPE_NORMAL
- en: The advice in this article is aimed at the kind of visualization you might to
    do better understand a dataset, gain insight about it, and communicate results
    to other people. This is a different purpose than the kind of artistic visualization
    done by the quality folks at the NYTimes, for instance. (If you are looking to
    do something that looks as snazzy, you might also want to pick up D3\. Or one
    of the D3 wrappers written [in R](https://rstudio.github.io/r2d3/index.html),
    or an [equivalent in python](https://github.com/altair-viz/altair).)
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, there are a lot of choices. Though the frustrated programmer might disagree
    with the practical interpretation of the Church-Turing thesis, it is doubly true
    for data visualization libraries. What good is a data visualization library if
    it can’t do all of the common visualizations?
  prefs: []
  type: TYPE_NORMAL
- en: General Data Visualization Advice
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Read Tufte](https://www.edwardtufte.com/tufte/).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Start a new folder whenever you do a new project, download all relevant papers
    into a research subfolder. (Whatever you are doing, it is helpful to read what
    has been previously proposed.)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Start writing the report / whitepaper / paper / summary write-up from the beginning.
    Take it from someone who has learned this the hard way: saving it for the end
    is going to engender tons o’ pain; and is likely one reason why certain grad students
    take forever to finish their thesis.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Take notes from the beginning too.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The only people fully qualified enough to write the precise description of what
    they want are also the sort of people who could do the job.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Three dimensional images are a separate category unto themselves, but having
    a Gif of a few 2-D frames stitched together that either vibrate back and forth
    or change the point of view by a few degrees can make your point.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Look through [Mike Bockstock’s data visualizations](https://bl.ocks.org/mbostock/5562380)
    and those created by the [NYTimes](https://www.nytimes.com/interactive/2019/10/10/climate/driving-emissions-map.html).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you have non-technical people who want answers, figure out if it is possible
    to make the quantitative results follow the visual results. For instance, if there
    is a way to visualize the results of a clustering analysis, show that before going
    over any metrics. Concrete is better than abstract, and that’s the point of data
    visualization.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Specific Data Visualization Advice
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The chroma, “colorfulness” or saturation of a data element can be manipulated
    to your advantage because Chroma is additive. If two data elements overlap, their
    saturation can add together to make the overlap literally more vivid. This is
    a type of “multi-channel reinforcement,” where the fact that two data-points overlap
    is communicated via both spatial and color channels. In matplotlib, this can be
    controlled with the alpha
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Perceptually uniform color series](https://colorcet.pyviz.org/) can also be
    used for multi-channel reinforcement, or to add an extra dimension of information
    to your visualization. For example, the following graphs show Downtown Santa Monica
    parking lot utilization. In the first, I used the basic colors available, in the
    second each year is colored via equally-spaced samples of a perceptual color map.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/b05acde9774f9507e5ad835ea83f5b1f.png)'
  prefs: []
  type: TYPE_IMG
- en: '*The y-axis shows five 14-day moving averages of the average number of parking
    spaces available over five-minute increments in the parking lots of Downtown Santa
    Monica. Higher values mean emptier parking lots, and the ‘0’ on the x-axis corresponds
    to the first five minutes of each new year. The 2019 line stops at the end of
    April, and this graph suggests the following conclusion: Retail is dying, long
    live retail. Made with Matplotlib.*'
  prefs: []
  type: TYPE_NORMAL
- en: Here is the immediate code I wrote to produce the following plot.  Not shown
    is the preprocessing I’ve done. I’ve set the “c” parameter to be a perceptual
    colormap named plasma.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Adding dark boundaries around data points can make them look cleaner, and this
    works if you don’t have a ton of points to visualize, and the points are relatively
    large. Look for a “edge_colors=True” matplotlib setting.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One of the lessons from [Sparklines](https://en.wikipedia.org/wiki/Sparkline)
    is that the human brain can interpret small data elements, especially if what’s
    important is the macro trend.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Several of these principles are illustrated in the following data visualization.
    For instance, most of the dots are too small to make out. Also, the saturation
    or “alpha” property of the color is set to less and 100% so that when the dots
    overlap they seem to become darker.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/61c33d7e13459d250a9823a1a527bc95.png)'
  prefs: []
  type: TYPE_IMG
- en: '*A projection of high dimensional data onto two dimensions. Made via Matplotlib.*'
  prefs: []
  type: TYPE_NORMAL
- en: For histograms, play around with the parameter that controls the number of bins
    until you get a feel for what looks like a bin-boundary problems.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Node-link graphs have their own special challenges, you can find more information
    in [this illustrated essay.](https://medium.com/kineviz-blog/visualizing-node-link-graphs-84a40a9b2fcc)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A High-level Tour of Mostly Python Data-Viz
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'There are a handful of capital t Truths we should all know about while living
    this dusty ol’ planet. Change is the only constant; “free-market efficiency” is
    a proposition about the flow of and perception of information and not about how
    well said markets work; society is basically Burning Man but with sturdier walls;
    we all travel towards death (not to mention tax season) at the leisurely pace
    of one second per second, and the quickest way to make your data visualizations
    look better in Python is to run the following three lines of code at the top of
    your Jupyter Notebook:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Once you’ve done that, you can get back to using Matplolib and contemplating
    the vastness of spacetime and the entire human endeavor as if nothing happened.
    In reality, what happened is that we’ve used the [Seaborn](https://seaborn.pydata.org/)
    defaults to clean up Matplotlib. (And if you don’t know, Seaborn is basically
    a cleaned up, higher-level version of Matplotlib, which itself is modeled on Matlab.)
    If Matplotlib proves too cumbersome, try Seaborn.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let me show you the difference. First, here is some matplotlib code to visualize
    some data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/34795b935fcd56e6dfe51ec8e9dace71.png)'
  prefs: []
  type: TYPE_IMG
- en: '*“Before”.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Compare this to what happens if I run the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/85c29c83350262fcfa325a74b090e876.png)'
  prefs: []
  type: TYPE_IMG
- en: Python has several packages and package-ecosystems for creating data visualizations;
    [click here to read a detailed walkthrough](https://dsaber.com/2016/10/02/a-dramatic-tour-through-pythons-data-visualization-landscape-including-ggplot-and-altair/).
    Matplotlib is the common workhorse of the bunch. While no one is going to win
    “designer of the year” for producing a Matplotlib illustration, it’s great for
    visualizing smallish datasets. At the same time, Matplotlib is neither set up
    for quickly visualizing 10k lines on the same plot nor for doing much that is
    off the beaten path.
  prefs: []
  type: TYPE_NORMAL
- en: For visualizing lots of data you might want to look at the [DataShader ecosystem](https://datashader.org/).
    [Bokeh](https://bokeh.org/) is great for interactive dashboards. For 3D, you can
    either use [the Matplotlib extension (mplot3d),](https://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html)
    or you can check out [Mayavi](https://docs.enthought.com/mayavi/mayavi/). And
    to produce great visualizations with relatively little code try [Altair](https://altair-viz.github.io/getting_started/overview.html).
    Seriously, try Altair. It might just change your life.
  prefs: []
  type: TYPE_NORMAL
- en: Back in the world of R, the standard plotting libraries are [ggplot2](https://ggplot2.tidyverse.org/)
    and [lattice](http://lattice.r-forge.r-project.org/). The former is a general-purpose
    plotting library, the latter makes it easy to make many small plots out of the
    same dataset. You can find a comprehensive list of R [data visualization packages
    here](https://www.computerworld.com/article/2921176/great-r-packages-for-data-import-wrangling-visualization.html).
    In looking at the basic R data visualizations, it is easy to think that.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Data visualization is a tool for understanding datasets. Though certain visualizations
    can be turned into art, the basic skills of making high-quality, day-to-day visuals
    are invaluable for any data-oriented person. Though you usually can’t make any
    grand conclusions without visualization, knowing how to manipulate, size, color,
    and motion of data elements is one thing we can all agree on.
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio:** [SuperDataScience](https://www.superdatascience.com/) is an e-learning
    platform for data scientists who want to learn data science or improve their careers.
    We make the complex simple!'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Why Data Visualization Is The Most Important Skill in a Data Analyst Arsenal](https://www.kdnuggets.com/2019/08/simpliv-data-visualization-data-analyst.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Easy Way to Do Advanced Data Visualisation for Data Scientists](https://www.kdnuggets.com/2019/08/advanced-data-visualisation-data-scientists.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to choose a visualization](https://www.kdnuggets.com/2019/06/how-choose-visualization.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[KDnuggets™ News 22:n01, Jan 5: 3 Tools to Track and Visualize…](https://www.kdnuggets.com/2022/n01.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[3 Tools to Track and Visualize the Execution of Your Python Code](https://www.kdnuggets.com/2021/12/3-tools-track-visualize-execution-python-code.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Step up your Python game with Fast Python for Data Science!](https://www.kdnuggets.com/2022/06/manning-step-python-game-fast-python-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Understanding Python''s Iteration and Membership: A Guide to…](https://www.kdnuggets.com/understanding-pythons-iteration-and-membership-a-guide-to-__contains__-and-__iter__-magic-methods)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Optimizing Python Code Performance: A Deep Dive into Python Profilers](https://www.kdnuggets.com/2023/02/optimizing-python-code-performance-deep-dive-python-profilers.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python Enum: How To Build Enumerations in Python](https://www.kdnuggets.com/python-enum-how-to-build-enumerations-in-python)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
