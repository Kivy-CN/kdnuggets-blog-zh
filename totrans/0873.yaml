- en: Vector and Matrix Norms with NumPy Linalg Norm
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 NumPy Linalg 范数的向量和矩阵范数
- en: 原文：[https://www.kdnuggets.com/2023/05/vector-matrix-norms-numpy-linalg-norm.html](https://www.kdnuggets.com/2023/05/vector-matrix-norms-numpy-linalg-norm.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2023/05/vector-matrix-norms-numpy-linalg-norm.html](https://www.kdnuggets.com/2023/05/vector-matrix-norms-numpy-linalg-norm.html)
- en: '![Vector and Matrix Norms with NumPy Linalg Norm](../Images/7358f625af3da5057e3573b28316189d.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![使用 NumPy Linalg 范数的向量和矩阵范数](../Images/7358f625af3da5057e3573b28316189d.png)'
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: '**Num**erical **Py**thon or **NumPy** is a popular library for scientific computing
    in Python. The NumPy library has a huge collection of built-in functionality to
    create n-dimensional arrays and perform computations on them.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**Num**erical **Py**thon 或 **NumPy** 是一个流行的 Python 科学计算库。NumPy 库有大量内置功能，用于创建
    n 维数组并对其进行计算。'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: If you’re interested in data science, computational linear algebra and related
    fields, learning how to compute vector and matrix norms can be helpful. And this
    tutorial will teach you how to do that using functions from NumPy’s **linalg**
    module.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对数据科学、计算线性代数和相关领域感兴趣，学习如何计算向量和矩阵的范数会很有帮助。本教程将教你如何使用 NumPy 的**linalg**模块中的函数来做到这一点。
- en: To code along, you should have Python and NumPy installed in your development
    environment. For the f-strings in the `print()` statements to work without errors,
    you need to have Python 3.8 or a later version installed.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要进行代码编写，你需要在开发环境中安装 Python 和 NumPy。为了使 `print()` 语句中的 f-strings 正常工作，你需要安装 Python
    3.8 或更高版本。
- en: Let’s begin!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: What is a Norm?
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是范数？
- en: 'In this discussion, we’ll first look at vector norms. We’ll get to matrix norms
    later. Mathematically, a norm is a function (or a mapping) from an n-dimensional
    vector space to the set of real numbers:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本讨论中，我们将首先查看向量范数。稍后我们会讨论矩阵范数。从数学上讲，范数是一个从 n 维向量空间到实数集合的函数（或映射）：
- en: '![Vector and Matrix Norms with NumPy Linalg Norm](../Images/5711822e157bdce711d26c52e5b9c19f.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![使用 NumPy Linalg 范数的向量和矩阵范数](../Images/5711822e157bdce711d26c52e5b9c19f.png)'
- en: '**Note**: Norms are also defined on complex vector spaces **C^n → R** is a
    valid definition of norm, too. But we’ll restrict ourselves to the vector space
    of real numbers in this discussion.'
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意**：范数也可以定义在复数向量空间上，**C^n → R** 也是一种有效的范数定义。但在本讨论中，我们将限制在实数向量空间。'
- en: Properties of Norms
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 范数的性质
- en: 'For an n-dimensional vector **x** = (x1,x2,x3,...,xn), the norm of **x**, commonly
    denoted by ||**x**||, should satisfy the following properties:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 n 维向量**x** = (x1,x2,x3,...,xn)，**x** 的范数通常表示为 ||**x**||，应满足以下性质：
- en: '||**x**|| is a **non-negative** quantity. For a vector **x**, the norm ||**x**||
    is always greater than or equal to zero. And ||**x**|| is equal to zero if and
    only if the vector **x** is the vector of all zeros.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '||**x**|| 是**非负**量。对于向量**x**，范数 ||**x**|| 总是大于或等于零。当且仅当向量**x**是全零向量时，||**x**||
    才等于零。'
- en: 'For two vectors **x** = (x1,x2,x3,...,xn) and **y** = (y1,y2,y3,...,yn), their
    norms ||**x**|| and ||**y**|| should satisfy the **triangle inequality**: ||**x**
    + **y**|| <= ||**x**|| + ||**y**||.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于两个向量**x** = (x1,x2,x3,...,xn) 和 **y** = (y1,y2,y3,...,yn)，它们的范数 ||**x**||
    和 ||**y**|| 应满足**三角不等式**：||**x** + **y**|| <= ||**x**|| + ||**y**||。
- en: In addition, all norms satisfy ||α**x**|| = |α| ||**x**|| for a scalar α.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此外，所有范数都满足 ||α**x**|| = |α| ||**x**||，其中 α 为标量。
- en: 'Common Vector Norms: L1, L2, and L∞ Norms'
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 常见的向量范数：L1、L2 和 L∞ 范数
- en: 'In general, the Lp norm (or p-norm) of an n-dimensional vector **x** = (x1,x2,x3,...,xn)
    for p >= 0 is given by:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，n维向量**x** = (x1,x2,x3,...,xn)的Lp范数（或p-范数）对于p >= 0定义为：
- en: '![Vector and Matrix Norms with NumPy Linalg Norm](../Images/949698ab0104ea8f6bd3bbf5d3c5be9c.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![使用 NumPy Linalg Norm 的向量和矩阵范数](../Images/949698ab0104ea8f6bd3bbf5d3c5be9c.png)'
- en: Let’s take a look at the common vector norms, namely, the L1, L2 and L∞ norms.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看常见的向量范数，即 L1、L2 和 L∞ 范数。
- en: L1 Norm
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: L1 范数
- en: 'The L1 norm is equal to the sum of the absolute values of elements in the vector:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: L1 范数等于向量中所有元素绝对值的总和：
- en: '![Vector and Matrix Norms with NumPy Linalg Norm](../Images/334e1ceeaed5cb565d25ead443da73aa.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![使用 NumPy Linalg Norm 的向量和矩阵范数](../Images/334e1ceeaed5cb565d25ead443da73aa.png)'
- en: L2 Norm
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: L2 范数
- en: 'Substituting p =2 in the general Lp norm equation, we get the following expression
    for the L2 norm of a vector:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 将 p =2 代入一般的 Lp 范数方程，我们得到向量的 L2 范数的以下表达式：
- en: '![Vector and Matrix Norms with NumPy Linalg Norm](../Images/d072dbf3fd7da9f6804c893cc25d497c.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![使用 NumPy Linalg Norm 的向量和矩阵范数](../Images/d072dbf3fd7da9f6804c893cc25d497c.png)'
- en: L∞ norm
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: L∞ 范数
- en: 'For a given vector **x**, the L∞ norm is the **maximum** of the *absolute*
    values of the elements of **x**:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 对于给定的向量 **x**，L∞ 范数是 **x** 元素 *绝对* 值中的 **最大值**：
- en: '![Vector and Matrix Norms with NumPy Linalg Norm](../Images/db19cf650980003b693f8bcb9f0018ae.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![使用 NumPy Linalg Norm 的向量和矩阵范数](../Images/db19cf650980003b693f8bcb9f0018ae.png)'
- en: It’s fairly straightforward to verify that all of these norms satisfy the properties
    of norms listed earlier.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 验证这些范数是否满足前面列出的范数属性是相当简单的。
- en: How to Compute Vector Norms in NumPy
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在 NumPy 中计算向量范数
- en: The **linalg** module in NumPy has functions that we can use to compute norms.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 中的 **linalg** 模块包含我们可以用来计算范数的函数。
- en: 'Before we begin, let’s initialize a vector:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，让我们初始化一个向量：
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: L2 Norm in NumPy
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NumPy 中的 L2 范数
- en: 'Let’s import the **linalg** module from NumPy:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从 NumPy 中导入 **linalg** 模块：
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The `norm()` function to compute both matrix and vector norms. This function
    takes in a required parameter – the vector or matrix for which we need to compute
    the norm. In addition, it takes in the following *optional* parameters:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '`norm()` 函数用于计算矩阵和向量的范数。此函数需要一个必需的参数——我们需要计算范数的向量或矩阵。此外，它还接受以下 *可选* 参数：'
- en: '`ord` that decides the order of the norm computed, and'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ord` 决定了计算的范数的阶数，以及'
- en: '`axis` that specifies the axis along which the norm is to be computed.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`axis` 指定了计算范数的轴。'
- en: 'When we don’t specify the `ord` in the function call, the `norm()` function
    computes the L2 norm by default:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在函数调用中没有指定 `ord` 时，`norm()` 函数默认计算 L2 范数：
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We can verify this by explicitly setting `ord` to 2:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过明确将 `ord` 设置为 2 来验证这一点：
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: L1 Norm in NumPy
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NumPy 中的 L1 范数
- en: 'To calculate the L1 norm of the vector, call the `norm()` function with `ord
    = 1`:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要计算向量的 L1 范数，请调用 `norm()` 函数，设置 `ord = 1`：
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'As our examples `vector` contains only positive numbers, we can verify that
    L1 norm in this case is equal to the sum of the elements:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的示例 `vector` 仅包含正数，我们可以验证在这种情况下 L1 范数等于元素的总和：
- en: '[PRE9]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: L∞ Norm in NumPy
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NumPy 中的 L∞ 范数
- en: 'To compute the  L∞ norm, set `ord` to ''np.inf'':'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 要计算 L∞ 范数，将 `ord` 设置为 'np.inf'：
- en: '[PRE10]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In this example, we get 6, the *maximum* element (in the absolute sense) in
    the vector:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们得到 6，向量中的 *最大* 元素（绝对值意义上）：
- en: '[PRE11]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: In the `norm()` function, you can also set `ord` to '-np.inf'.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `norm()` 函数中，你还可以将 `ord` 设置为 '-np.inf'。
- en: '[PRE12]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'As you may have guessed, negative  L∞ norm returns the *minimum* element (in
    the absolute sense) in the vector:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所猜，负的 L∞ 范数返回向量中的 *最小* 元素（绝对值意义上）：
- en: '[PRE13]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: A Note on L0 Norm
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于 L0 范数的说明
- en: The L0 norm gives the number of non-zero elements in the vector. Technically,
    it is not a norm. Rather it’s a pseudo norm given that it violates the property
    ||α**x**|| = |α| ||**x**||. This is because the number of non-zero elements *remains
    the same* even if the vector is multiplied by a scalar.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: L0 范数给出向量中非零元素的数量。从技术上讲，这不是一个范数。它实际上是一个伪范数，因为它违反了 ||α**x**|| = |α| ||**x**||
    的属性。这是因为，即使向量被一个标量乘以，非零元素的数量 *保持不变*。
- en: 'To get the number of non-zero elements in a vector, set `ord` to 0:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取向量中非零元素的数量，将 `ord` 设置为 0：
- en: '[PRE14]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Here, `another_vector` has 3 non-zero elements:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`another_vector` 有 3 个非零元素：
- en: '[PRE15]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Understanding Matrix Norms
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解矩阵范数
- en: 'So far we have seen how to compute vector norms. Just the way you can think
    of vector norms as mappings from an n-dimensional vector space onto the set of
    real numbers, matrix norms are a mapping from an m x n matrix space to the set
    of real numbers. Mathematically, you can represent this as:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经看到如何计算向量范数。就像你可以将向量范数视为从 n 维向量空间到实数集合的映射一样，矩阵范数是从 m x n 矩阵空间到实数集合的映射。数学上，你可以表示为：
- en: '![Vector and Matrix Norms with NumPy Linalg Norm](../Images/b90c3f12b0aaa8fe9441d83fe3429480.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![NumPy Linalg Norm 的向量和矩阵范数](../Images/b90c3f12b0aaa8fe9441d83fe3429480.png)'
- en: Common matrix norms include the Frobenius and nuclear norms.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 常见的矩阵范数包括 Frobenius 范数和核范数。
- en: Frobenius Norm
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Frobenius 范数
- en: 'For an m x n matrix A with m rows and n columns, the Frobenius norm is given
    by:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个 m x n 的矩阵 A，其中 m 行 n 列，Frobenius 范数由下式给出：
- en: '![Vector and Matrix Norms with NumPy Linalg Norm](../Images/4f935b1f8583c4049e446e54a978b487.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![NumPy Linalg Norm 的向量和矩阵范数](../Images/4f935b1f8583c4049e446e54a978b487.png)'
- en: Nuclear Norm
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 核范数
- en: Singular value decomposition or SVD is a matrix factorization technique used
    in applications such as topic modeling, image compression, and collaborative filtering.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 奇异值分解（SVD）是一种矩阵分解技术，用于主题建模、图像压缩和协同过滤等应用。
- en: SVD factorizes an input matrix into a matrix of a matrix of left singular vectors
    (U), a matrix of singular values (S), and a matrix of right singular vectors (V_T).
    And the nuclear norm is the largest singular value of the matrix.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: SVD 将输入矩阵分解为一个左奇异向量矩阵（U）、一个奇异值矩阵（S）和一个右奇异向量矩阵（V_T）。而核范数是矩阵的最大奇异值。
- en: '![Vector and Matrix Norms with NumPy Linalg Norm](../Images/65222385d97e70b2b4f9310c4fb704c1.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![NumPy Linalg Norm 的向量和矩阵范数](../Images/65222385d97e70b2b4f9310c4fb704c1.png)'
- en: How to Compute Matrix Norms in NumPy
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在 NumPy 中计算矩阵范数
- en: 'To continue our discussion on computing matrix norms in NumPy, let’s reshape
    `vector` to a 2 x 3 matrix:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 继续讨论如何在 NumPy 中计算矩阵范数，让我们将 `vector` 重塑为一个 2 x 3 的矩阵：
- en: '[PRE16]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Matrix Frobenius Norm in NumPy
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NumPy 中的矩阵 Frobenius 范数
- en: If you do not specify the `ord` parameter, the `norm()` function, by default,
    calculates the Frobenius norm.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不指定 `ord` 参数，`norm()` 函数默认计算 Frobenius 范数。
- en: 'Let''s verify this by setting `ord` to `''fro''`:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过将 `ord` 设置为 `'fro'` 来验证这一点：
- en: '[PRE18]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'When we don’t pass in the optional `ord` parameter, we get the Frobenius norm,
    too:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们不传入可选的 `ord` 参数时，我们也得到 Frobenius 范数：
- en: '[PRE20]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: To sum up, when the `norm()` function is called with a matrix as the input,
    it returns the Frobenius norm of the matrix by default.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，当 `norm()` 函数以矩阵作为输入时，默认返回矩阵的 Frobenius 范数。
- en: Matrix Nuclear Norm in NumPy
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NumPy 中的矩阵核范数
- en: 'To calculate the nuclear norm of a matrix, you can pass in the matrix and set
    `ord` to ''nuc'' in the `norm()` function call:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 要计算矩阵的核范数，你可以传入矩阵并在 `norm()` 函数调用中将 `ord` 设置为 'nuc'：
- en: '[PRE22]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Matrix Norms Along a Specific Axis
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 沿特定轴的矩阵范数
- en: We generally do not compute L1 and L2 norms on matrices, but NumPy lets you
    compute norms of any `ord` on matrices (2D-arrays) and other multi-dimensional
    arrays.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通常不会在矩阵上计算 L1 和 L2 范数，但 NumPy 允许你计算任意 `ord` 的矩阵（2D 数组）和其他多维数组的范数。
- en: Let’s see how to compute the L1 norm of a matrix along a specific axis – along
    the rows and columns.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何在特定轴上计算矩阵的 L1 范数——沿行和列。
- en: Similarly, we can set `axis = 1`.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，我们可以设置 `axis = 1`。
- en: '`axis = 0` denotes the rows of a matrix. If you set `axis = 0`, the L1 norm
    of the matrix is calculated **across the rows** (or along the columns), as shown:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '`axis = 0` 表示矩阵的行。如果设置 `axis = 0`，则计算矩阵的 L1 范数是 **跨行**（或沿列）进行的，如下所示：'
- en: '![Vector and Matrix Norms with NumPy Linalg Norm](../Images/6c64acb724eb702509298b4bb66ac0fc.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![NumPy Linalg Norm 的向量和矩阵范数](../Images/6c64acb724eb702509298b4bb66ac0fc.png)'
- en: Image by Author
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: 'Let’s verify this in NumPy:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在 NumPy 中验证这一点：
- en: '[PRE24]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Similarly, we can set `axis = 1`.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，我们可以设置 `axis = 1`。
- en: '`axis = 1` denotes the columns of a matrix. So the computation of the L1 norm
    of the matrix by setting `axis = 1` is **across the columns** (along the rows).'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`axis = 1` 表示矩阵的列。因此，通过设置 `axis = 1` 计算矩阵的 L1 范数是 **跨列**（沿行）进行的。'
- en: '![Vector and Matrix Norms with NumPy Linalg Norm](../Images/ba423c79ba54c08deb408fe0fc13979f.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![NumPy Linalg Norm 的向量和矩阵范数](../Images/ba423c79ba54c08deb408fe0fc13979f.png)'
- en: Image by Author
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: '[PRE26]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: I suggest that you play around with the `ord` and `axis` parameters on and try
    with different matrices until you get the hang of it.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议你试验 `ord` 和 `axis` 参数，并尝试不同的矩阵，直到你掌握它。
- en: Conclusion
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: I hope you now understand how to compute vector and matrix norms using NumPy.
    It’s important, however, to note that the Frobenius and nuclear norms are defined
    only for matrices. So if you compute for vectors or multidimensional arrays with
    more than two dimensions, you’ll run into errors. That's all for this tutorial!
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你现在明白了如何使用 NumPy 计算向量和矩阵范数。然而，需要注意的是，Frobenius 范数和核范数仅对矩阵定义。因此，如果你计算向量或维度超过两个的多维数组，你会遇到错误。这就是本教程的全部内容！
- en: '**[Bala Priya C](https://www.linkedin.com/in/bala-priya/)** is a technical
    writer who enjoys creating long-form content. Her areas of interest include math,
    programming, and data science. She shares her learning with the developer community
    by authoring tutorials, how-to guides, and more.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Bala Priya C](https://www.linkedin.com/in/bala-priya/)** 是一位技术作家，喜欢创作长篇内容。她的兴趣领域包括数学、编程和数据科学。她通过编写教程、使用指南等方式与开发者社区分享她的学习成果。'
- en: More On This Topic
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Python Vector Databases and Vector Indexes: Architecting LLM Apps](https://www.kdnuggets.com/2023/08/python-vector-databases-vector-indexes-architecting-llm-apps.html)'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 向量数据库与向量索引：LLM 应用架构](https://www.kdnuggets.com/2023/08/python-vector-databases-vector-indexes-architecting-llm-apps.html)'
- en: '[How to Perform Matrix Operations with NumPy](https://www.kdnuggets.com/how-to-perform-matrix-operations-with-numpy)'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何使用 NumPy 执行矩阵运算](https://www.kdnuggets.com/how-to-perform-matrix-operations-with-numpy)'
- en: '[Idiot''s Guide to Precision, Recall, and Confusion Matrix](https://www.kdnuggets.com/2020/01/guide-precision-recall-confusion-matrix.html)'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[傻瓜指南：精度、召回率和混淆矩阵](https://www.kdnuggets.com/2020/01/guide-precision-recall-confusion-matrix.html)'
- en: '[Confusion Matrix, Precision, and Recall Explained](https://www.kdnuggets.com/2022/11/confusion-matrix-precision-recall-explained.html)'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[混淆矩阵、精度和召回率解析](https://www.kdnuggets.com/2022/11/confusion-matrix-precision-recall-explained.html)'
- en: '[KDnuggets News, November 16: How LinkedIn Uses Machine Learning •…](https://www.kdnuggets.com/2022/n45.html)'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻，11月16日：LinkedIn 如何使用机器学习 •…](https://www.kdnuggets.com/2022/n45.html)'
- en: '[Vector Databases in AI and LLM Use Cases](https://www.kdnuggets.com/vector-databases-in-ai-and-llm-use-cases)'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[AI 和 LLM 使用案例中的向量数据库](https://www.kdnuggets.com/vector-databases-in-ai-and-llm-use-cases)'
