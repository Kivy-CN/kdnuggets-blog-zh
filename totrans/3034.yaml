- en: How Different are Conventional Programming and Machine Learning?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2018/12/different-conventional-programming-machine-learning.html](https://www.kdnuggets.com/2018/12/different-conventional-programming-machine-learning.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '**By Avneesh Sharma, Tech Product Management**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Header image](../Images/15028624695298db41beacf31e05677d.png)'
  prefs: []
  type: TYPE_IMG
- en: Engineering allowed us to push the limits of human capabilities. We used our
    understanding of nature and utilized that to serve our purposes. Be it a high
    performant mechanical machinery or an encoded silicon chip. Computers have been
    by far one of the most intricate utilization of nature's forces put to help humans
    in pushing their limits of capabilities i.e. many tasks which can be performed
    by computers can never be performed that quickly and efficiently by a human or
    a set of humans. As Steve Jobs would say, [computers are like a bicycle for our
    minds](https://www.youtube.com/watch?v=ob_GX50Za6c&feature=youtu.be&t=34).
  prefs: []
  type: TYPE_NORMAL
- en: I have been fascinated by computers from my childhood. I had my first interaction
    with computers back in 2001 when I wrote a program in BASIC to add two numbers.
    I was amazed that no matter how difficult the addition was, computer answered
    it instantly.
  prefs: []
  type: TYPE_NORMAL
- en: When I heard about **Machine Learning** I couldn't contain the amazement. I
    was not able to get my mind around the fact, that unlike normal software programs
    - which I was accustomed to - I wouldn't even have to teach a computer the "how"
    in detail about all the future scenarios up front. There was a way that computers
    can themselves learn how to solve a problem. It was a giant leap for mankind.
  prefs: []
  type: TYPE_NORMAL
- en: What is Machine Learning?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The term '[machine learning](https://en.wikipedia.org/wiki/Machine_learning#Overview)'
    isn't new. It was coined coined by Arthur Samuel in 1959\. It has borrowed understandings
    from different fields like Computer Science, Statistics, Linear Algebra, and Probability
    Theory and applied to solve practical problems. Machine learning enables the computers
    to learn from the historical data and formulate a solution which can be used to
    solve similar problems in future, without the explicit need of teaching computers
    all the combination of possible scenarios in the problem. And the practical application
    of machine learning is where it is not even feasible to articulate a definite
    mathematical solution to the problem.
  prefs: []
  type: TYPE_NORMAL
- en: A real-world problem is a candidate for the application of machine learning
    if -
  prefs: []
  type: TYPE_NORMAL
- en: Historical data exists in a huge amount
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A pattern exists in the data
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Extremely hard to pin down a solution mathematically
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How is it different from conventional programming?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The approach of conventional programming is to feed the computer with a set
    of instructions for a defined set of scenarios. After that computer will utilize
    its computing capabilities to help human process the data faster and in an efficient
    fashion. Whereas in machine learning, a huge amount of data is thrown at the computer,
    which in turn processes all the data and comes up with something called trained
    model(solution). Then this model is used to solve the unseen problems of the real
    world.
  prefs: []
  type: TYPE_NORMAL
- en: Example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let us take a toy problem to demonstrate the difference. The problem takes an
    input number and tries to divide by 3 and 5\. If the number is divisible by 3
    then it prints 'fizz', if it is divisible by 5 then it prints out 'buzz' and if
    it is divisible by both then it prints out 'fizzbuzz'. If it is not divisible
    by any of the 3 or 5 then print 'other'. It's called a [Fizzbuzz](https://en.wikipedia.org/wiki/Fizz_buzz) game.
  prefs: []
  type: TYPE_NORMAL
- en: '**Conventional Programming**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is extremely easy in conventional programming to feed the computer with a
    set of instructions because we have only 4 scenarios to be verified and print
    the output based on that. The python code can be written as below but you can
    skip reading code if you are not into coding.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Machine Learning**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Supposed we already have a lot of numbers whose output is already known i.e
    whether it is 'fizz' or 'buzz' or 'fizzbuzz'. All we need to do is now, write
    a machine learning code and feed (train) the available data. Then verify whether
    we have successfully created a model by verifying with testing with an unseen
    data. If model provides the output using trained model without actually calculating
    the result then we have achieved the purpose.
  prefs: []
  type: TYPE_NORMAL
- en: We will be using Google's [Tensorflow](https://www.tensorflow.org/) library
    for this purpose. Here are some code snippets from the implementation.
  prefs: []
  type: TYPE_NORMAL
- en: Again, you can skip the code if you aren't into coding. The whole working code
    can be found [here](https://github.com/sharmaavneesh/MachineLearning/tree/master/fizzbuzz) in
    my Github account.
  prefs: []
  type: TYPE_NORMAL
- en: '**a. Creating the model**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**b. Train the model**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**c. Test the model**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**d. Result:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Conclusion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We repeatedly fed the same data 5000 times, after re-shuffling it every-time.
    And after each run, we measured whether how accurate out model has become by measuring
    the error rate in test data. As it can be seen that there is 98 percent accuracy
    for the model. I have plotted the graph of error after each iteration. The closer
    it gets to 1 better our model has become. Here is what it looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/cadee22cf29994bce3ff797d5cda9e61.png)'
  prefs: []
  type: TYPE_IMG
- en: Final Words
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As seen above, in this particular toy case - the conventional program will always
    give the correct output whereas machine learning might not reach 100% accuracy
    level.
  prefs: []
  type: TYPE_NORMAL
- en: Now imagine a scenario where you are running a company like Netflix which has
    millions of customers. Each customer has a unique set of preferences. For example,
    some person might love documentaries and comedy movies but he watches documentaries
    on Tuesdays and comedies on Sunday. While other person binge watches on Saturday
    nights and loves watching horror on Sunday and so on. You can imagine how complex
    it would be to document all the habits of each individual when there are so many
    variables which determine exact preferences. Because if you want to suggest each
    customer a movie which he/she is going to watch then you must know the exact preferences
    of that person.
  prefs: []
  type: TYPE_NORMAL
- en: 'For conventional programming, this problem becomes increasingly difficult because:'
  prefs: []
  type: TYPE_NORMAL
- en: You don't know what all things determine the watching habits of a person.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Even if you know, then the solution will not scale to millions of user at a
    time because for each person you have to write a separate solution based on his/her
    habits.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'This is where machine learning is implemented. Generally, machine learning
    will be trained on two premises in this case:'
  prefs: []
  type: TYPE_NORMAL
- en: Based on your past data, which movies are most likely you are going to watch?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are people like you watching these days?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Do let me know your thoughts by commenting below.
  prefs: []
  type: TYPE_NORMAL
- en: 'PS: Full code used in the article can be found [here](https://github.com/sharmaavneesh/MachineLearning/tree/master/fizzbuzz).'
  prefs: []
  type: TYPE_NORMAL
- en: '**References**'
  prefs: []
  type: TYPE_NORMAL
- en: https://www.amazon.com/Pattern-Recognition-Learning-Information-Statistics/dp/0387310738
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: https://www.youtube.com/watch?v=mbyG85GZ0PI&index=1&list=PLD63A284B7615313A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Bio: [Avneesh Sharma](https://www.linkedin.com/in/avneesh-sharma/)** is a
    Masters in Management Information Systems candidate at University of Buffalo (2018-19).
    He has 8 years of experience in developing Software Products/Features ground up.
    He loves solving problems which have direct impact on business and make end users
    happy. He believes that creating a technology in general is a means to solve an
    existing real world pain point to make life easy.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://www.linkedin.com/pulse/how-different-conventional-programming-machine-learning-sharma/).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Is Regression Analysis Really Machine Learning?](/2017/06/regression-analysis-really-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Machine Learning vs Statistics](/2016/11/machine-learning-vs-statistics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Big Data, Bible Codes, and Bonferroni](/2016/07/big-data-bible-codes-bonferroni.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[How is Data Mining Different from Machine Learning?](https://www.kdnuggets.com/2022/06/data-mining-different-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Automated Machine Learning with Python: A Comparison of Different…](https://www.kdnuggets.com/2023/03/automated-machine-learning-python-comparison-different-approaches.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Different Ways to Load Data in Python](https://www.kdnuggets.com/2020/08/5-different-ways-load-data-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Ultimate Guide To Different Word Embedding Techniques In NLP](https://www.kdnuggets.com/2021/11/guide-word-embedding-techniques-nlp.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[AI-Generated Sports Highlights: Different Approaches](https://www.kdnuggets.com/2022/03/aigenerated-sports-highlights-different-approaches.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Range of NLP Applications in the Real World: A Different…](https://www.kdnuggets.com/2022/03/different-solution-problem-range-nlp-applications-real-world.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
