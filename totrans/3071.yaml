- en: Building a Machine Learning Model through Trial and Error
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2018/09/mathworks-building-machine-learning-model-through-trial-error.html](https://www.kdnuggets.com/2018/09/mathworks-building-machine-learning-model-through-trial-error.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Sponsored Post.
  prefs: []
  type: TYPE_NORMAL
- en: '**By Seth DeLand, Product Marketing Manager, Data Analytics, [MathWorks](https://www.mathworks.com/)**'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: The machine learning roadmap is filled with trial and error. Engineers and scientists,
    who are novices at the concept, will constantly tweak and alter their algorithms
    and models. During this process, challenges will arise, especially with handling
    data and determining the right model.
  prefs: []
  type: TYPE_NORMAL
- en: When building a machine learning model, it’s important to know that real-world
    data is imperfect, different types of data require different approaches and tools,
    and there will always be tradeoffs when determining the right model.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following systematic workflow walk through describes how to develop a trained
    model for a cell phone health monitoring app that tracks user activity throughout
    the day. The input consists of sensor data from the phone. Output will be activities
    performed: walking, standing, sitting, running, or dancing. Because the goal is
    classification, this example will involve [supervised learning](https://www.mathworks.com/help/stats/supervised-learning-machine-learning-workflow-and-algorithms.html?s_tid=srchtitle&s_eid=PEP_19715.html).'
  prefs: []
  type: TYPE_NORMAL
- en: '***Access and load the data***'
  prefs: []
  type: TYPE_NORMAL
- en: The user will sit down holding the phone, log the sensor data, and store it
    in a text file labeled “sitting.” Then, they should stand up holding the phone,
    log the sensor, and store it in a text file labeled “standing.” Repeat for running,
    walking and dancing.
  prefs: []
  type: TYPE_NORMAL
- en: '***Preprocess the data***'
  prefs: []
  type: TYPE_NORMAL
- en: Because machine learning algorithms are not able to differentiate noise from
    valuable information, data must be cleaned before it is used for training. Data
    can be preprocessed with a data analysis tool, like MATLAB. To clean the data,
    users can import and plot the data, and remove outliers. In this example, an outlier
    can result from unintentionally moving the phone while loading data. Users must
    also check for missing data, which can be replaced by approximations or comparable
    data from another sample.
  prefs: []
  type: TYPE_NORMAL
- en: '![Mathworks Fig1](../Images/5412e05be0cfb9cf73c7aeabfd0d6bf3.png)Figure 1:
    Preprocessing data includes removing any outliers, i.e. data points that lie outside
    the rest of the dataAfter cleaning, divide the data into two sets. Half will be
    used to train the model, and the other half will be “holdout” data used for testing
    and cross-validation.'
  prefs: []
  type: TYPE_NORMAL
- en: '***Derive features using the preprocessed data***'
  prefs: []
  type: TYPE_NORMAL
- en: Raw data must be turned into information a machine learning algorithm can use.
    To do this, users must derive features that categorize the content of the phone
    data.
  prefs: []
  type: TYPE_NORMAL
- en: In this example, engineers and scientists must distinguish features to help
    the algorithm classify between walking (low frequency) and running (high frequency).
  prefs: []
  type: TYPE_NORMAL
- en: '![Mathworks Fig2](../Images/d7d2eb95bb67fd4fd60eef3d107fdf9a.png)Figure 2:
    Deriving features from the data type will turn raw data into high level information
    that can be used in a machine learning model***Build and train the model***'
  prefs: []
  type: TYPE_NORMAL
- en: Start with a simple decision tree.
  prefs: []
  type: TYPE_NORMAL
- en: '![Mathworks Fig3](../Images/dd0b209e38fbf7c5eace71dd640d736c.png)Figure 3:
    The decision tree establishes parameters for classifications based on features
    characteristicsPlot the confusion matrix to observe its performance.![Mathworks
    Fig4](../Images/b1987f857860c2d794db7dac3cd8a0ee.png)Figure 4: This matrix illustrates
    a model that has trouble differentiating between running and dancingBased on the
    above confusion matrix, this indicates either the decision tree is not working
    for this type of data or that a different algorithm should be used.'
  prefs: []
  type: TYPE_NORMAL
- en: A K-nearest neighbors (KNN) algorithm stores all the training data, compares
    new points to the training data, and returns the most frequent class of the “K”
    nearest points. This shows higher accuracy.
  prefs: []
  type: TYPE_NORMAL
- en: '![Mathworks Fig5](../Images/71f1cd732656883fdb0eb5049b5ed7c5.png)Figure 5:
    Making the change to KNN algorithm improves the accuracy – although further improvements
    are still possibleAnother option is a multiclass support vector machine (SVM).![Mathworks
    Fig6](../Images/3d6805c2088cd9a9ebdd6b190ad52d90.png)Figure 6: The SVM does very
    well, with 99% for nearly every activityThis proves to be better and illustrates
    how the goal was achieved through trial and error.'
  prefs: []
  type: TYPE_NORMAL
- en: '***Improve the model***'
  prefs: []
  type: TYPE_NORMAL
- en: If the model can’t reliably classify between dancing and running, it needs to
    be improved. Models can be improved by either making them more complex (to better
    fit the data) or more simple (to reduce the chance of overfitting).
  prefs: []
  type: TYPE_NORMAL
- en: 'To simplify the model, the number of features can be reduced by the following
    means: a correlation matrix, so features not highly correlated can be removed;
    a principal component analysis (PCA) that eliminates redundancy; or a sequential
    feature reduction that reduces features repeatedly until there is no improvement.
    To make the model more complex, engineers and scientists can merge multiple simpler
    models into a larger model or add more data sources.'
  prefs: []
  type: TYPE_NORMAL
- en: Once trained and adjusted, the model can be validated with the “holdout” dataset
    set aside during preprocessing. If the model can reliably classify activities,
    then it is ready for the phone application.
  prefs: []
  type: TYPE_NORMAL
- en: Engineers and scientists training machine learning models for the first time
    will encounter challenges but should realize that trial and error is part of the
    process. The workflow outlined above provides a road map to building machine learning
    models that can also be used in varied applications like predictive maintenance,
    natural language processing, and autonomous driving.
  prefs: []
  type: TYPE_NORMAL
- en: Explore these other resources to learn more about machine learning methods and
    examples.
  prefs: []
  type: TYPE_NORMAL
- en: '[Supervised Learning Workflow and Algorithms](https://www.mathworks.com/help/stats/supervised-learning-machine-learning-workflow-and-algorithms.html?s_tid=srchtitle&s_eid=PEP_19715.html):
    Learn the workflow and steps in the supervised learning process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[MATLAB Machine Learning Examples](https://www.mathworks.com/solutions/machine-learning/getting-started.html&s_eid=PEP_19715.html):
    Get started with machine learning by exploring examples, articles, and tutorials.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Machine Learning with MATLAB](https://www.mathworks.com/campaigns/offers/machine-learning-with-matlab.html?s_iid=nd_bb15&s_eid=PEP_19715.html):
    Download this ebook for a step-by-step guide providing machine learning basics
    along with advanced techniques and algorithms.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[A Structured Approach To Building a Machine Learning Model](https://www.kdnuggets.com/2022/06/structured-approach-building-machine-learning-model.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Step-by-Step Tutorial to Building Your First Machine Learning Model](https://www.kdnuggets.com/step-by-step-tutorial-to-building-your-first-machine-learning-model)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Exploring Tree of Thought Prompting: How AI Can Learn to Reason…](https://www.kdnuggets.com/2023/07/exploring-tree-of-thought-prompting-ai-learn-reason-through-search.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data storytelling - the art of telling stories through data](https://www.kdnuggets.com/2023/07/manning-data-storytelling-the-art-telling-stories-data.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Scaling Data Management Through Apache Gobblin](https://www.kdnuggets.com/2023/01/scaling-data-management-apache-gobblin.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Unlocking Reliable Generations through Chain-of-Verification: A…](https://www.kdnuggets.com/unlocking-reliable-generations-through-chain-of-verification)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
