- en: Comparing Distance Measurements with Python and SciPy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Python和SciPy比较距离测量
- en: 原文：[https://www.kdnuggets.com/2017/08/comparing-distance-measurements-python-scipy.html](https://www.kdnuggets.com/2017/08/comparing-distance-measurements-python-scipy.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2017/08/comparing-distance-measurements-python-scipy.html](https://www.kdnuggets.com/2017/08/comparing-distance-measurements-python-scipy.html)
- en: '![Distance measurements](../Images/ec3efc49273906a5e7249a3884249fd5.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![距离测量](../Images/ec3efc49273906a5e7249a3884249fd5.png)'
- en: Clustering, or cluster analysis, is used for analyzing data which does not include
    pre-labeled classes. Data instances are grouped together using the concept of
    maximizing intraclass similarity and minimizing the similarity between differing
    classes. This translates to the clustering algorithm identifying and grouping
    instances which are very similar, as opposed to ungrouped instances which are
    much less-similar to one another. As clustering does not require the pre-labeling
    of classes, it is a form of unsupervised learning.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类或聚类分析用于分析不包含预先标记类别的数据。数据实例通过最大化类内相似性和最小化不同类别之间的相似性来进行分组。这意味着聚类算法识别并分组非常相似的实例，而不是那些彼此相似度较低的未分组实例。由于聚类不需要预先标记类别，它是一种无监督学习的形式。
- en: At the core of cluster analysis is the concept of measuring distances between
    a variety of different data point dimensions. For example, when considering k-means
    clustering, there is a need to measure a) distances between individual data point
    dimensions and the corresponding cluster centroid dimensions of all clusters,
    and b) distances between cluster centroid dimensions and all resulting cluster
    member data point dimensions.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类分析的核心是测量不同数据点维度之间的距离。例如，在考虑k-means聚类时，需要测量：a) 各个数据点维度与所有聚类中心维度之间的距离，b) 聚类中心维度与所有聚类成员数据点维度之间的距离。
- en: 'While k-means, the simplest and most prominent clustering algorithm, generally
    uses Euclidean distance as its similarity distance measurement, contriving innovative
    or variant clustering algorithms which, among other alterations, utilize different
    distance measurements is not a stretch. Translation: using different techniques
    for cluster-related distance measurement is quite easily doable. However, the
    *reasons* for actually doing so would require great knowledge of both domain and
    data.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然k-means，作为最简单且最显著的聚类算法，通常使用欧几里得距离作为相似性距离测量，但设计创新或变体聚类算法，其中包括使用不同的距离测量方法并非难事。换句话说，使用不同的聚类相关距离测量技术是相对容易实现的。然而，*实际这样做的原因*则需要对领域和数据有深入的了解。
- en: We will leave the "why" of pursuing particular distance measurements out of
    this discussion, and instead quickly introduce five perfectly valid ways of measuring
    distances between data points. We will also perform simple demonstration and comparison
    with Python and the SciPy library. For more on the distance measurements that
    are available in the SciPy `spatial.distance` module, [see here](https://docs.scipy.org/doc/scipy/reference/spatial.distance.html#module-scipy.spatial.distance).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将跳过追求特定距离测量的“为什么”的讨论，而是快速介绍五种有效的测量数据点之间距离的方法。我们还将使用Python和SciPy库进行简单的演示和比较。有关SciPy
    `spatial.distance`模块中可用的距离测量，请[点击这里](https://docs.scipy.org/doc/scipy/reference/spatial.distance.html#module-scipy.spatial.distance)。
- en: '![k-means diagram](../Images/74f11f2013236aed5dd2e96040d5be39.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![k-means图示](../Images/74f11f2013236aed5dd2e96040d5be39.png)'
- en: '**Fig. 1: Distance measurement plays an important role in clustering.**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**图1：距离测量在聚类中扮演着重要角色。**'
- en: A simple overview of the k-means clustering algorithm process, with the distance-relevant
    steps pointed out.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对k-means聚类算法过程的简单概述，并指出了与距离相关的步骤。
- en: '**Euclidean**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**欧几里得距离**'
- en: We may as well begin with the all-time Euclidean space distance measurement
    champion. Euclidean distance is the "['ordinary' straight-line distance between
    two points in Euclidean space](https://en.wikipedia.org/wiki/Euclidean_distance)."
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不妨从永恒的欧几里得空间距离测量冠军开始。欧几里得距离是"['欧几里得空间中两点之间的“普通”直线距离](https://en.wikipedia.org/wiki/Euclidean_distance)"。
- en: 'As a reminder, given 2 points in the form of *(x, y)*, Euclidean distance can
    be represented as:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 作为提醒，给定两个形式为*(x, y)*的点，欧几里得距离可以表示为：
- en: '![Equation](../Images/5496763be70b3ffcee728278cd3945e7.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![方程](../Images/5496763be70b3ffcee728278cd3945e7.png)'
- en: '**Manhattan**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**曼哈顿距离**'
- en: Manhattan -- also city block and taxicab -- distance is defined as "[the distance
    between two points is the sum of the absolute differences of their Cartesian coordinates](https://en.wikipedia.org/wiki/Taxicab_geometry)."
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 曼哈顿——也称为城市街区和出租车——距离定义为“[两个点之间的距离是它们的笛卡尔坐标绝对差的总和](https://en.wikipedia.org/wiki/Taxicab_geometry)。”
- en: '![Manhattan distance](../Images/22d70082105d90d8983de430bfa06fd9.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![曼哈顿距离](../Images/22d70082105d90d8983de430bfa06fd9.png)'
- en: '**Fig. 2:** Visualization of Manhattan geometry in blue (the staircase), Euclidean
    in green (the straight line) (Source: [Wikipedia](https://en.wikipedia.org/wiki/Taxicab_geometry)).'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 2：** 曼哈顿几何以蓝色（楼梯）可视化，欧几里得以绿色（直线）（来源：[维基百科](https://en.wikipedia.org/wiki/Taxicab_geometry)）。'
- en: '**Chebyshev**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**切比雪夫**'
- en: Chebyshev -- also chessboard -- distance is best defined as a distance metric
    "[where the distance between two vectors is the greatest of their differences
    along any coordinate dimension](https://en.wikipedia.org/wiki/Chebyshev_distance)."
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 切比雪夫——也称为棋盘——距离最好定义为一种距离度量“[其中两个向量之间的距离是它们在任何坐标维度上的差异的最大值](https://en.wikipedia.org/wiki/Chebyshev_distance)。”
- en: '![Chebyshev distance](../Images/6926f26bff94252e15a23fe80af88c36.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![切比雪夫距离](../Images/6926f26bff94252e15a23fe80af88c36.png)'
- en: '**Fig. 3:** Chebyshev visualized using the chessboard (Source: [Wikipedia](https://en.wikipedia.org/wiki/Chebyshev_distance)).'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 3：** 使用棋盘可视化切比雪夫（来源：[维基百科](https://en.wikipedia.org/wiki/Chebyshev_distance)）。'
- en: '**Canberra**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**堪培拉**'
- en: Canberra distance is a weighted version of Manhattan distance, which "[has been
    used as a metric for comparing ranked lists and for intrusion detection in computer
    security](https://en.wikipedia.org/wiki/Canberra_distance)."
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 堪培拉距离是曼哈顿距离的加权版本，“[曾被用作比较排名列表的度量和计算机安全中的入侵检测](https://en.wikipedia.org/wiki/Canberra_distance)。”
- en: Canberra distance can be represented as
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 堪培拉距离可以表示为
- en: '![Equation](../Images/8c1f0666c7c14c37c361ff5e8442e4ec.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![方程](../Images/8c1f0666c7c14c37c361ff5e8442e4ec.png)'
- en: where **p** and **q** are vectors and
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 **p** 和 **q** 是向量
- en: '![Equation](../Images/c515ca251d7d3da384e0447a7374defa.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![方程](../Images/c515ca251d7d3da384e0447a7374defa.png)'
- en: '**Cosine**'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**余弦**'
- en: 'Cosine similarity [is defined as](https://en.wikipedia.org/wiki/Cosine_similarity):'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '余弦相似度 [定义为](https://en.wikipedia.org/wiki/Cosine_similarity):'
- en: '...a measure of similarity between two non-zero vectors of an inner product
    space that measures the cosine of the angle between them. The cosine of 0° is
    1, and it is less than 1 for any other angle. It is thus a judgment of orientation
    and not magnitude: two vectors with the same orientation have a cosine similarity
    of 1, two vectors at 90° have a similarity of 0, and two vectors diametrically
    opposed have a similarity of -1, independent of their magnitude. Cosine similarity
    is particularly used in positive space, where the outcome is neatly bounded in
    [0,1].'
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '...在内积空间中度量两个非零向量之间相似度的度量，它衡量它们之间角度的余弦。0°的余弦值为1，对于其他角度则小于1。因此，它是对方向的判断而非大小：具有相同方向的两个向量的余弦相似度为1，90°的两个向量的相似度为0，而两个相反的向量的相似度为-1，与它们的大小无关。余弦相似度特别用于正空间，其中结果
    neatly 限定在 [0,1]。'
- en: Cosine similarity is often used in clustering to assess cohesion, as opposed
    to determining cluster membership.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦相似度常用于聚类中评估凝聚力，而不是确定簇的成员资格。
- en: '**Python and SciPy Comparison**'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**Python 和 SciPy 比较**'
- en: Just so that it is clear what we are doing, first 2 vectors are being created
    -- each with 10 dimensions -- after which an element-wise comparison of distances
    between the vectors is performed using the 5 measurement techniques, as implemented
    in SciPy functions, each of which accept a pair of one-dimensional vectors as
    arguments. Second, a pair of 100-dimension vectors are created, with the same
    set of distance measurements performed and reported.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为了明确我们在做什么，首先创建两个向量——每个向量有10维——然后使用5种测量技术对这些向量之间的距离进行逐元素比较，这些技术在 SciPy 函数中实现，每个函数接受一对一维向量作为参数。其次，创建一对100维的向量，并进行相同的距离测量和报告。
- en: '[PRE0] 10-dimensional vectors  ------------------------  [ 3.77539984  0.17095249  5.0676076   7.80039483  9.51290778  7.94013829    6.32300886  7.54311972  3.40075028  4.92240096]  [
    7.13095162  1.59745192  1.22637349  3.4916574   7.30864499  2.22205897    4.42982693  1.99973618  9.44411503  9.97186125]    Distance
    measurements with 10-dimensional vectors  -------------------------------------------------  Euclidean
    distance is 13.435128482  Manhattan distance is 39.3837553638  Chebyshev distance
    is 6.04336474839  Canberra distance is 4.36638963773  Cosine distance is 0.247317394393    Distance
    measurements with 100-dimensional vectors  --------------------------------------------------  Euclidean
    distance is 42.6017789666  Manhattan distance is 359.435547878  Chebyshev distance
    is 9.06282495069  Canberra distance is 40.8173353649  Cosine distance is 0.269329456631
    [PRE1]`'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE0] 10维向量 ------------------------ [ 3.77539984  0.17095249  5.0676076   7.80039483  9.51290778  7.94013829    6.32300886  7.54311972  3.40075028  4.92240096]
    [ 7.13095162  1.59745192  1.22637349  3.4916574   7.30864499  2.22205897    4.42982693  1.99973618  9.44411503  9.97186125]  10维向量的距离测量
    ------------------------------------------------- 欧几里得距离为13.435128482 曼哈顿距离为39.3837553638
    切比雪夫距离为6.04336474839 堪培拉距离为4.36638963773 余弦距离为0.247317394393 100维向量的距离测量 --------------------------------------------------
    欧几里得距离为42.6017789666 曼哈顿距离为359.435547878 切比雪夫距离为9.06282495069 堪培拉距离为40.8173353649
    余弦距离为0.269329456631 [PRE1]`'
- en: 'With the measurements performed, we can quickly notice 2 important takeaways:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 从这些测量结果中，我们可以迅速发现两个重要的结论：
- en: The reported distances (obviously) vary greatly between distance measurement
    techniques
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 报告的距离（显然）在距离测量技术之间差异很大
- en: Some measurement techniques are more susceptible (at least, in this experiment)
    to increased dimensionality (while, conversely, others are much less-influenced)
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一些测量技术在（至少在这个实验中）更容易受到维度增加的影响（而相反，有些技术的影响要小得多）
- en: 'While no grand conclusions can be drawn from this simple overview and presentation,
    the results should also put this excerpt from Hastie, Tibshirani and Friedman''s
    [Elements of Statistical Learning](https://web.stanford.edu/~hastie/ElemStatLearn/)
    in perspective:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管从这个简单的概述和展示中无法得出重大结论，但这些结果应该将Hastie、Tibshirani和Friedman的[《统计学习元素》](https://web.stanford.edu/~hastie/ElemStatLearn/)的这段摘录放在合适的背景下考虑：
- en: An appropriate dissimilarity measure is far more important in obtaining success
    with clustering than choice of clustering algorithm. This aspect of the problem
    ... depends on domain specific knowledge and is less amenable to general research.
  id: totrans-39
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 适当的差异度量在聚类的成功中比聚类算法的选择更为重要。这个问题的这一方面……取决于领域特定知识，并且不太适合通用研究。
- en: It's also important to note that the key idea of distance, as it relates to
    cluster analysis, is not the exact value of the measurements, but how the resulting
    measurements are used to groups the data points. For example, if you multiply
    each measure by 100, the values will be different, but the resulting clustering
    remains the same.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 同样重要的是要注意，距离的关键概念在聚类分析中，并不是测量值的确切数值，而是这些测量值如何用于对数据点进行分组。例如，如果你将每个测量值乘以100，数值会有所不同，但最终的聚类结果仍然保持不变。
- en: When considering "clustering," far too many people tend to think only of throwing
    their dataset at k-means, with the defaults. Hopefully this short post has shed
    some light on the potential complexities and implications of clustering algorithms
    and their components.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在考虑“聚类”时，很多人往往只会将数据集直接投入到k-means算法中，使用默认设置。希望这篇简短的文章能为聚类算法及其组成部分的潜在复杂性和影响提供一些见解。
- en: '**Related**:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关**：'
- en: '[Comparing Clustering Techniques: A Concise Technical Overview](/2016/09/comparing-clustering-techniques-concise-technical-overview.html)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比较聚类技术：简明技术概述](/2016/09/comparing-clustering-techniques-concise-technical-overview.html)'
- en: '[Clustering Key Terms, Explained](/2016/10/clustering-key-terms-explained.html)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[聚类关键术语解释](/2016/10/clustering-key-terms-explained.html)'
- en: '[Machine Learning Workflows in Python from Scratch Part 2: k-means Clustering](/2017/06/machine-learning-workflows-python-scratch-part-2.html)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[从头开始的Python机器学习工作流程第2部分：k-means聚类](/2017/06/machine-learning-workflows-python-scratch-part-2.html)'
- en: '* * *'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速开启网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT 部门'
- en: '* * *'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Distance Metrics: Euclidean, Manhattan, Minkowski, Oh My!](https://www.kdnuggets.com/2023/03/distance-metrics-euclidean-manhattan-minkowski-oh.html)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[距离度量：欧几里得、曼哈顿、明可夫斯基，天呐！](https://www.kdnuggets.com/2023/03/distance-metrics-euclidean-manhattan-minkowski-oh.html)'
- en: '[Comparing Linear and Logistic Regression](https://www.kdnuggets.com/2022/11/comparing-linear-logistic-regression.html)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比较线性回归和逻辑回归](https://www.kdnuggets.com/2022/11/comparing-linear-logistic-regression.html)'
- en: '[PyTorch or TensorFlow? Comparing popular Machine Learning frameworks](https://www.kdnuggets.com/2022/02/packt-pytorch-tensorflow-comparing-popular-machine-learning-frameworks.html)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyTorch 还是 TensorFlow？比较流行的机器学习框架](https://www.kdnuggets.com/2022/02/packt-pytorch-tensorflow-comparing-popular-machine-learning-frameworks.html)'
- en: '[Comparing Natural Language Processing Techniques: RNNs, Transformers, BERT](https://www.kdnuggets.com/comparing-natural-language-processing-techniques-rnns-transformers-bert)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比较自然语言处理技术：RNNs、Transformers、BERT](https://www.kdnuggets.com/comparing-natural-language-processing-techniques-rnns-transformers-bert)'
- en: '[Understanding Python''s Iteration and Membership: A Guide to…](https://www.kdnuggets.com/understanding-pythons-iteration-and-membership-a-guide-to-__contains__-and-__iter__-magic-methods)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[理解 Python 的迭代和成员资格：__contains__ 和 __iter__ 魔法方法指南](https://www.kdnuggets.com/understanding-pythons-iteration-and-membership-a-guide-to-__contains__-and-__iter__-magic-methods)'
- en: '[Step up your Python game with Fast Python for Data Science!](https://www.kdnuggets.com/2022/06/manning-step-python-game-fast-python-data-science.html)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通过《Fast Python for Data Science》提升你的 Python 技能！](https://www.kdnuggets.com/2022/06/manning-step-python-game-fast-python-data-science.html)'
