- en: Overview of Python Visualization Tools
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 可视化工具概述
- en: 原文：[https://www.kdnuggets.com/2015/11/overview-python-visualization-tools.html/2](https://www.kdnuggets.com/2015/11/overview-python-visualization-tools.html/2)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2015/11/overview-python-visualization-tools.html/2](https://www.kdnuggets.com/2015/11/overview-python-visualization-tools.html/2)
- en: Bokeh
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Bokeh
- en: '[Bokeh](http://bokeh.pydata.org/) is different from the prior 3 libraries in
    that it does not depend on matplotlib and is geared toward generating visualizations
    in modern web browsers. It is meant to make interactive web visualizations so
    my example is fairly simplistic. Import and read in the data:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[Bokeh](http://bokeh.pydata.org/) 与之前的 3 个库不同，它不依赖于 matplotlib，并且旨在生成现代网页浏览器中的可视化。它用于制作交互式网页可视化，因此我的示例相当简化。导入并读取数据：'
- en: '`import pandas as pd from bokeh.charts import Bar`'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`import pandas as pd from bokeh.charts import Bar`'
- en: '`budget = pd.read_csv("mn-budget-detail-2014.csv") budget = budget.sort(''amount'',ascending=False)[:>10]`'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`budget = pd.read_csv("mn-budget-detail-2014.csv") budget = budget.sort(''amount'',ascending=False)[:>10]`'
- en: One different aspect of bokeh is that I need to explicitly list out the values
    we want to plot.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Bokeh 的一个不同之处在于，我需要明确列出我们要绘制的值。
- en: '`details = budget["detail"].values.tolist() amount = >list(budget["amount"].astype(>float).values)`'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`details = budget["detail"].values.tolist() amount = >list(budget["amount"].astype(>float).values)`'
- en: Now we can plot it. This code causes the browser to display the HTML page containing
    the graph. I was able to save a png copy in case I wanted to use it for other
    display purposes.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以绘制图表。这段代码会导致浏览器显示包含图表的 HTML 页面。我能够保存一个 png 版本，以防我想用于其他显示目的。
- en: '`bar = Bar(amount, details, filename="bar.html") bar.title("MN Capital Budget
    - 2014").xlabel("Detail").ylabel("Amount") bar.show()`'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`bar = Bar(amount, details, filename="bar.html") bar.title("MN Capital Budget
    - 2014").xlabel("Detail").ylabel("Amount") bar.show()`'
- en: 'Here is the png image:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 png 图像：
- en: '![Bokeh image](../Images/f49503165394e2a493d8c5153af91c14.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![Bokeh image](../Images/f49503165394e2a493d8c5153af91c14.png)'
- en: As you can see the graph is nice and clean. I did not find a simple way to more
    easily format the y-axis. Bokeh has a lot more functionality but I did not dive
    into in this example.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，图表干净整洁。我没有找到一种简单的方法来更轻松地格式化 y 轴。Bokeh 功能更多，但我在这个示例中没有深入探讨。
- en: Pygal
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Pygal
- en: '[Pygal](http://pygal.org/) is used for creating svg charts. If the proper dependencies
    are installed, you can also save a file as a png. The svg files are pretty useful
    for easily making interactive charts. I also found that it was pretty easy to
    create unique looking and visually appealing charts with this tool. Do our imports
    and read in the data:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[Pygal](http://pygal.org/) 用于创建 svg 图表。如果安装了正确的依赖项，你还可以将文件保存为 png。svg 文件对于轻松制作交互式图表非常有用。我还发现使用这个工具创建独特且视觉上令人愉悦的图表非常简单。进行导入并读取数据：'
- en: '`import pandas as pd import pygal from pygal.style import LightStyle`'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '`import pandas as pd import pygal from pygal.style import LightStyle`'
- en: '`budget = pd.read_csv("mn-budget-detail-2014.csv") budget = budget.sort(''amount'',ascending=False)[:>10]`'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`budget = pd.read_csv("mn-budget-detail-2014.csv") budget = budget.sort(''amount'',ascending=False)[:>10]`'
- en: 'We need to create the type of chart and set some basic settings:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要创建图表类型并设置一些基本设置：
- en: '`bar_chart = pygal.Bar(style=LightStyle, width=>800, height=>600, legend_at_bottom=True,
    human_readable=True, title=''MN Capital Budget - 2014'')`'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`bar_chart = pygal.Bar(style=LightStyle, width=>800, height=>600, legend_at_bottom=True,
    human_readable=True, title=''MN Capital Budget - 2014'')`'
- en: One interesting note is `human_readable` which does a nice job of formatting
    the data so that it mostly “just works.” Now we need to add the data to our chart.
    This is where the integration with pandas is not very tight but I found it straightforward
    to do for this small data set. Performance might be an issue when there are lots
    of rows.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有趣的注意点是 `human_readable`，它很好的格式化了数据，使其大部分“正常工作”。现在我们需要将数据添加到图表中。这是 pandas
    集成不是非常紧密的地方，但我发现对这个小数据集来说还是很简单的。当有大量行时，性能可能会成为问题。
- en: '`for index, row >in budget.iterrows(): bar_chart.add(row["detail"], row["amount"])`'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`for index, row >in budget.iterrows(): bar_chart.add(row["detail"], row["amount"])`'
- en: 'Now render the file as an svg and png file:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将文件渲染为 svg 和 png 文件：
- en: '`bar_chart.render_to_file(''budget.svg'') bar_chart.render_to_png(''budget.png'')`'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`bar_chart.render_to_file(''budget.svg'') bar_chart.render_to_png(''budget.png'')`'
- en: '![Pygal image](../Images/8e2f7004512d00bc9ad18594ee28d5d0.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![Pygal image](../Images/8e2f7004512d00bc9ad18594ee28d5d0.png)'
- en: I think the svg presentation is really nice and I like how the resulting graph
    has a unique, visually pleasing style. I also found it relatively easy to figure
    out what I could and could not do with the tool. I encourage you to download the
    [svg file](http://pbpython.com/extras/MN-2014-budget-pygal.svg) and look at it
    in your browser to see the interactive nature of the graph.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为 SVG 展示效果非常好，我喜欢结果图表具有独特的、视觉上令人愉悦的风格。我还发现相对容易弄清楚我可以用这个工具做什么，不能做什么。我鼓励你下载[svg
    文件](http://pbpython.com/extras/MN-2014-budget-pygal.svg)并在浏览器中查看，以了解图表的互动性。
- en: Plot.ly
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Plot.ly
- en: '[Plot.ly](#plot-ly) is differentiated by being an online tool for doing analytics
    and visualization. It has robust API’s and includes one for python. Browsing the
    website, you’ll see that there are lots of very rich, interactive graphs. Thanks
    to the excellent [documentation](https://plot.ly/python/user-guide/), creating
    the bar chart was relatively simple. You’ll need to follow the [docs](https://plot.ly/python/getting-started/)
    to get your API key set up. Once you do, it seems to all work pretty seamlessly.
    The one caveat is that everything you are doing is posted on the web so make sure
    you are ok with it. There is an option to keep plots private so you do have control
    over that aspect. Plotly integrates pretty seamlessly with pandas. I also will
    give a shout out to them for being very responsive to an email question I had.
    I appreciate their timely reply. Setup my imports and read in the data'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[Plot.ly](#plot-ly) 的特点在于它是一个用于分析和可视化的在线工具。它拥有强大的 API，其中包括 Python 的 API。浏览网站时，你会看到有很多非常丰富、互动性强的图表。感谢优秀的[文档](https://plot.ly/python/user-guide/)，创建条形图相对简单。你需要按照[文档](https://plot.ly/python/getting-started/)的说明来设置
    API 密钥。一旦设置好，它似乎可以非常顺利地工作。唯一需要注意的是，你所做的一切都会发布在网络上，因此请确保你对此没有问题。虽然有一个选项可以保持图表私密，你可以控制这一方面。Plotly
    与 pandas 的集成也非常顺畅。我还要对他们快速回复我邮件的问题表示感谢，我很欣赏他们及时的回复。设置我的导入并读取数据'
- en: '`import plotly.plotly as py import pandas as pd from plotly.graph_objs import
    *`'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`import plotly.plotly as py import pandas as pd from plotly.graph_objs import
    *`'
- en: budget=pd.read_csv(“mn-budget-detail-2014.csv”)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: budget=pd.read_csv(“mn-budget-detail-2014.csv”)
- en: budget.sort(‘amount’,ascending=False,inplace=True)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: budget.sort(‘amount’,ascending=False,inplace=True)
- en: budget = budget[:>10]
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: budget = budget[:>10]
- en: Setup the data and chart type for plotly.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 设置数据和图表类型以用于 plotly。
- en: '`data = Data([ Bar( x=budget["detail"], y=budget["amount"] ) ])`'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`data = Data([ Bar( x=budget["detail"], y=budget["amount"] ) ])`'
- en: I also decided to add some additional layout information.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我还决定添加一些额外的布局信息。
- en: '`layout = Layout( title=''2014 MN Capital Budget'', font=Font( family=''Raleway,
    sans-serif'' ), showlegend=False, xaxis=XAxis( tickangle=->45 ), bargap=>0.05
    )`'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`layout = Layout( title=''2014 MN Capital Budget'', font=Font( family=''Raleway,
    sans-serif'' ), showlegend=False, xaxis=XAxis( tickangle=->45 ), bargap=>0.05
    )`'
- en: Finally, plot the data. This will open up a browser and take you to your finished
    plot. I originally didn’t see this but you can save a local copy as well, using
    `py.image.save_as` . This is a really cool feature. You get the interactivity
    of a rich web-based report as well as the ability to save a local copy to for
    embedding in your documents.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，绘制数据。这将打开一个浏览器并带你到完成的图表。我最初没有看到这一点，但你也可以使用 `py.image.save_as` 保存本地副本。这是一个非常酷的功能。你可以获得丰富的基于网络的报告的互动性，同时还可以保存本地副本以嵌入到你的文档中。
- en: '`fig = Figure(data=data, layout=layout) plot_url = py.plot(data,filename=''MN
    Capital Budget - 2014'') py.image.save_as(fig, ''mn-14-budget.png'')`'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`fig = Figure(data=data, layout=layout) plot_url = py.plot(data,filename=''MN
    Capital Budget - 2014'') py.image.save_as(fig, ''mn-14-budget.png'')`'
- en: '![plotly image](../Images/ef2e3e99ad492484176dc11a830f581b.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![plotly image](../Images/ef2e3e99ad492484176dc11a830f581b.png)'
- en: Check out the [full-interactive version](https://plot.ly/~chris1610/12/) too.
    You can see a lot more robust examples on their site. The out of the box plot
    is very appealing and highly interactive. Because of the docs and the python api,
    getting up and running was pretty easy and I liked the final product.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 也查看一下[全互动版本](https://plot.ly/~chris1610/12/)。你可以在他们的网站上看到更多强大的示例。开箱即用的图表非常吸引人，互动性强。由于文档和
    Python API，上手比较容易，我喜欢最终的产品。
- en: Summary
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结
- en: 'Plotting data in the python ecosystem is a good news/bad news story. The good
    news is that there are a lot of options. The bad news is that there are a lot
    of options. Trying to figure out which ones works for you will depend on what
    you’re trying to accomplish. To some degree, you need to play with the tools to
    figure out if they will work for you. I don’t see one clear winner or clear loser.
    Here are a few of my closing thoughts:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 生态系统中绘制数据既是好消息也是坏消息。好消息是有很多选择。坏消息是有很多选择。确定哪些工具适合你将取决于你想要实现的目标。在某种程度上，你需要尝试这些工具以确定它们是否适合你。我没有看到一个明确的赢家或失败者。以下是我对这些工具的一些结语：
- en: Pandas is handy for simple plots but you need to be willing to learn matplotlib
    to customize.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pandas 对于简单绘图非常方便，但你需要愿意学习 matplotlib 以进行自定义。
- en: Seaborn can support some more complex visualization approaches but still requires
    matplotlib knowledge to tweak. The color schemes are a nice bonus.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Seaborn 可以支持一些更复杂的可视化方法，但仍然需要 matplotlib 知识来调整。配色方案是一个不错的额外功能。
- en: ggplot has a lot of promise but is still going through growing pains.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ggplot 有很大的潜力，但仍在经历成长的痛苦。
- en: bokeh is a robust tool if you want to set up your own visualization server but
    may be overkill for the simple scenarios.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: bokeh 是一个强大的工具，如果你想建立自己的可视化服务器，但对于简单场景来说可能有些过于复杂。
- en: pygal stands alone by being able to generate interactive svg graphs and png
    files. It is not as flexible as the matplotlib based solutions.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pygal 通过能够生成互动 svg 图表和 png 文件而独树一帜。它不像基于 matplotlib 的解决方案那样灵活。
- en: Plotly generates the most interactive graphs. You can save them offline and
    create very rich web-based visualizations.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Plotly 生成最互动的图表。你可以离线保存它们，并创建非常丰富的基于网络的可视化。
- en: As it stands now, I’ll continue to watch progress on the ggplot landscape and
    use pygal and plotly where interactivity is needed. Feel free to provide feedback
    in the comments. I am sure people will have lots of questions and comments on
    this topic. If I’ve missed anything or there are other options out there, let
    me know.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 目前的情况是，我将继续关注 ggplot 的进展，并在需要互动的地方使用 pygal 和 plotly。欢迎在评论中提供反馈。我相信大家会对此话题有很多问题和评论。如果我遗漏了什么或有其他选项，请告诉我。
- en: '**Bio:** [Chris Moffitt](https://www.linkedin.com/in/cmoffitt) is a Director,
    Pricing and Contracting at Boston Scientific. He has extensive experience in pricing
    and contracting in the medical device industry and also leading teams in IS and
    business functional roles to develop and support new applications for sales and
    marketing organizations.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：** [克里斯·莫菲特](https://www.linkedin.com/in/cmoffitt) 是波士顿科学公司的定价和合同主任。他在医疗设备行业的定价和合同方面具有丰富的经验，并且在信息系统和业务职能角色中领导团队，开发和支持销售与营销组织的新应用程序。'
- en: '[Original](http://pbpython.com/visualization-tools-1.html ).'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[原始](http://pbpython.com/visualization-tools-1.html)'
- en: '**Related**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关**'
- en: '[TheWalnut.io: An Easy Way to Create Algorithm Visualizations](/2015/07/thewalnutio-algorithm-visualizations.html)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TheWalnut.io：创建算法可视化的简便方法](/2015/07/thewalnutio-algorithm-visualizations.html)'
- en: '[Open Source Enabled Interactive Analytics: An Overview](/2015/06/open-source-interactive-analytics-overview.html)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开源交互式分析：概述](/2015/06/open-source-interactive-analytics-overview.html)'
- en: '[21 Essential Data Visualization Tools](/2015/05/21-essential-data-visualization-tools.html)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[21 个必备的数据可视化工具](/2015/05/21-essential-data-visualization-tools.html)'
- en: '* * *'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速开启网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Data Labeling for Machine Learning: Market Overview, Approaches, and Tools](https://www.kdnuggets.com/2021/12/data-labeling-ml-overview-and-tools.html)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[机器学习的数据标注：市场概述、方法和工具](https://www.kdnuggets.com/2021/12/data-labeling-ml-overview-and-tools.html)'
- en: '[A Comparative Overview of the Top 10 Open Source Data Science Tools in 2023](https://www.kdnuggets.com/a-comparative-overview-of-the-top-10-open-source-data-science-tools-in-2023)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2023年十大开源数据科学工具的比较概述](https://www.kdnuggets.com/a-comparative-overview-of-the-top-10-open-source-data-science-tools-in-2023)'
- en: '[5 SQL Visualization Tools for Data Engineers](https://www.kdnuggets.com/2023/02/5-sql-visualization-tools-data-engineers.html)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据工程师的5个SQL可视化工具](https://www.kdnuggets.com/2023/02/5-sql-visualization-tools-data-engineers.html)'
- en: '[Approaches to Text Summarization: An Overview](https://www.kdnuggets.com/2019/01/approaches-text-summarization-overview.html)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[文本总结方法：概述](https://www.kdnuggets.com/2019/01/approaches-text-summarization-overview.html)'
- en: '[An Overview of Logistic Regression](https://www.kdnuggets.com/2022/02/overview-logistic-regression.html)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[逻辑回归概述](https://www.kdnuggets.com/2022/02/overview-logistic-regression.html)'
- en: '[An Overview of Mercury: Creating Data Science Portfolio and…](https://www.kdnuggets.com/2022/05/overview-mercury-creating-data-science-portfolio-notebook-based-webapps.html)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[汞概述：创建数据科学作品集及…](https://www.kdnuggets.com/2022/05/overview-mercury-creating-data-science-portfolio-notebook-based-webapps.html)'
