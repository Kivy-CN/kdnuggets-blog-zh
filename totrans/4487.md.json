["```py\npip install pycaret\n```", "```py\n!pip install pycaret\n```", "```py\nfrom **pycaret.datasets** import **get_data**\ndiabetes = **get_data**('diabetes')\n```", "```py\nfrom **pycaret.classification** import ***** exp1 = **setup**(diabetes, target = 'Class variable')\n```", "```py\n**compare_models**()\n```", "```py\nadaboost = **create_model**('ada')\n```", "```py\ntuned_adaboost = tune_model('ada')\n```", "```py\n# creating a decision tree model\ndt = **create_model**('dt')# ensembling a trained dt model\ndt_bagged = **ensemble_model**(dt)\n```", "```py\n# create a model\nadaboost = **create_model**('ada')# AUC plot\n**plot_model**(adaboost, plot = 'auc')# Decision Boundary\n**plot_model**(adaboost, plot = 'boundary')# Precision Recall Curve\n**plot_model**(adaboost, plot = 'pr')# Validation Curve\n**plot_model**(adaboost, plot = 'vc')\n```", "```py\n**evaluate_model**(adaboost)\n```", "```py\n# create a model\nxgboost = **create_model**('xgboost')# summary plot\n**interpret_model**(xgboost)# correlation plot\n**interpret_model**(xgboost, plot = 'correlation')\n```", "```py\n**interpret_model**(xgboost, plot = 'reason', observation = 0) \n```", "```py\n# create a model\nrf = **create_model**('rf')# predict test / hold-out dataset\nrf_holdout_pred **= predict_model**(rf)\n```", "```py\npredictions = **predict_model**(rf, data = diabetes)\n```", "```py\n**deploy_model**(model = rf, model_name = 'rf_aws', platform = 'aws', \n             authentication =  {'bucket'  : 'pycaret-test'})\n```", "```py\n# creating model\nadaboost = **create_model**('ada')# saving model **save_model**(adaboost, model_name = 'ada_for_deployment')\n```", "```py\n**save_experiment**(experiment_name = 'my_first_experiment')\n```"]