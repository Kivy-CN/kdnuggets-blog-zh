- en: A Practical Approach To Feature Engineering In Machine Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/07/practical-approach-feature-engineering-machine-learning.html](https://www.kdnuggets.com/2023/07/practical-approach-feature-engineering-machine-learning.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/dd58a3648a01e9d1efc4aac065e5646d.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Pixabay](https://www.pexels.com/photo/abstract-art-circle-clockwork-414579/)
  prefs: []
  type: TYPE_NORMAL
- en: Feature learning is a vital component of [machine learning](/tag/machine-learning)
    but is often little talked about, with many guides and blog posts focusing on
    the latter stages of the ML lifecycle. This supporting step can make machine learning
    models more accurate and efficient, turning raw data into something more tangible
    and ready to use. Without it, building a fully-optimized model is impossible.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we will talk about how feature learning works in machine learning
    and how it can be implemented in simple, practical steps. In addition, we will
    also discuss some of the drawbacks of ML, giving a comprehensive overview of this
    essential process.
  prefs: []
  type: TYPE_NORMAL
- en: What Is Feature Engineering?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Feature engineering is an important machine learning (ML) technique that processes
    datasets and turns them into a usable set of figures that are relevant to specific
    tasks.
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/5608b44813dc14a94b21c7d841062dda.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Source](https://www.heavy.ai/technical-glossary/feature-engineering)'
  prefs: []
  type: TYPE_NORMAL
- en: Features are the data elements that are analyzed, appearing as columns within
    a dataset. By correcting, sorting, and [normalizing these data elements](https://learn.microsoft.com/en-us/azure/machine-learning/component-reference/normalize-data?view=azureml-api-2#:~:text=Normalization%20is%20a%20technique%20often,of%20values%20or%20losing%20information.),
    models can be optimized for better performance. Feature learning modifies these
    data elements to make them relevant, thus making models more accurate and with
    quicker response times thanks to fewer variables being used.
  prefs: []
  type: TYPE_NORMAL
- en: 'The feature engineering process can be broken down as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Analysis is performed to correct any issues found in the data, such as incomplete
    fields, inconsistencies, and other anomalies.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any variables that do not have any relevance to the model behavior are deleted.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Duplicate data is dismissed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The records are correlated and normalized.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why Is Feature Engineering So Important In Machine Learning?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Without feature engineering, it would not be possible to design predictive models
    that are capable of performing their function accurately. Feature learning also
    reduces the time and computation resources needed, making models more efficient.
  prefs: []
  type: TYPE_NORMAL
- en: The features of the data dictate how the predictive model will work, helping
    to train each model to achieve the desired results. This means that even data
    that is not fully applicable to a specific function can be modified to achieve
    a suitable outcome. Feature learning also significantly reduces the time that
    is spent conducting data analysis later on.
  prefs: []
  type: TYPE_NORMAL
- en: 'Feature Engineering: Benefits and Drawbacks'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Although feature learning is essential, it does have some limitations, as well
    as the obvious benefits, which are listed below.
  prefs: []
  type: TYPE_NORMAL
- en: '**Feature Engineering: Benefits**'
  prefs: []
  type: TYPE_NORMAL
- en: Models with engineered features benefit from faster data processing.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Models are simplified and, therefore, easier to maintain.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Predictions and estimations are more accurate.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Feature Engineering: Drawbacks**'
  prefs: []
  type: TYPE_NORMAL
- en: Feature engineering can be a time-consuming process.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deep analysis is required to build an effective feature list. This includes
    a thorough understanding of the datasets, the model’s processing behaviors, and
    the business context.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A Practical Approach To Feature Engineering In Machine Learning: Six Steps'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now we have a better understanding of what feature learning can do, as well
    as its drawbacks, let’s consider a practical approach to the process in 6 key
    steps.
  prefs: []
  type: TYPE_NORMAL
- en: '#1 Data Preparation'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The first step in the feature engineering process is to convert the raw data
    that has been collated from a range of sources into a usable format. Usable ML
    formats include; .csc; .tfrecords; .json; .xml; and .avro. To prepare the data,
    it must go through a range of processes such as cleansing, fusion, [ingestion](https://www.techtarget.com/whatis/definition/data-ingestion),
    and loading.
  prefs: []
  type: TYPE_NORMAL
- en: '#2 Data Analysis'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The analysis stage, sometimes referred to as the exploratory stage, is when
    insights and descriptive statistics are taken from the datasets, which are then
    presented in visualizations to better understand the data. This is then followed
    by identifying correlated variables and their properties so they can be cleaned.
  prefs: []
  type: TYPE_NORMAL
- en: '#3 Improvement'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Once the data has been analyzed and cleansed, it is time to improve it by adding
    any missing values, normalizing, transforming, and scaling. Data can also be further
    modified by adding dummy values which are qualitative/ discrete variables that
    represent categorical data.
  prefs: []
  type: TYPE_NORMAL
- en: '#4 Construction'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Features can be constructed both manually and automatically [using algorithms](/2022/07/machine-learning-algorithms-explained-less-1-minute.html)
    ([tSNE](https://en.wikipedia.org/wiki/T-distributed_stochastic_neighbor_embedding#:~:text=t%2Ddistributed%20stochastic%20neighbor%20embedding%20(t%2DSNE)%20is,two%20or%20three%2Ddimensional%20map.)
    or Principal Component Analysis ([PCA](https://en.wikipedia.org/wiki/Principal_component_analysis)),
    for example). There are an almost inexhaustible number of options when it comes
    to feature construction. However, the solution will always depend on the problem.
  prefs: []
  type: TYPE_NORMAL
- en: '#5 Selection'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Feature/ variable/ attribute selection reduces the number of input variables
    (feature columns) by only choosing the ones that are most relevant to the variable
    that the model is built to predict. This helps to deliver better processing speeds
    and reduce computational resource usage.
  prefs: []
  type: TYPE_NORMAL
- en: 'Feature selection techniques include:'
  prefs: []
  type: TYPE_NORMAL
- en: Filters to remove any irrelevant features.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wrappers to train ML models to use several features
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hybrid models which combine filters and wrappers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Filter-based techniques, for example, rely on statistical tests to determine
    whether the feature correlates sufficiently with the target variable.
  prefs: []
  type: TYPE_NORMAL
- en: '#6 Evaluation and Verification'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The evaluation process determines the accuracy of the model in terms of training
    data using the features selected. If the level of accuracy meets the required
    standard, then the model can be verified. If not, then the feature selection stage
    will need to be repeated.
  prefs: []
  type: TYPE_NORMAL
- en: Feature Engineering Use Cases
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now let’s take a look at three common use cases for feature engineering in machine
    learning.
  prefs: []
  type: TYPE_NORMAL
- en: Additional Insights From The Same Dataset
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Many datasets contain arbitrary values, such as date, age, etc., that could
    be modified into different formats that provide specific information regarding
    a query. For example, date and duration details can be cross-referenced to determine
    user behaviors, such as how frequently they visit a website and how much time
    they spend on there.
  prefs: []
  type: TYPE_NORMAL
- en: Predictive Models
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Selecting the correct features can help to build predictive models for a range
    of industries, one industry that can benefit from such a model is public transport,
    helping to gauge how many passengers may use a service on a specific day.
  prefs: []
  type: TYPE_NORMAL
- en: Malware Detection
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Manual malware detection is extremely difficult, and most neural networks also
    have issues in this regard. However, feature engineering can combine manual techniques
    and neural networks to highlight unusual behaviors.
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/4888dded93f4361e8f1cfd852428d66a.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Source](https://hcis-journal.springeropen.com/articles/10.1186/s13673-018-0125-x)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Feature Engineering In Machine Learning: Conclusion'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Feature engineering is an important stage when building machine learning models,
    and getting this stage right can ensure ML models are more accurate, use less
    computational resources, and process at higher speeds.
  prefs: []
  type: TYPE_NORMAL
- en: The feature engineering process can be broken down into six stages, from the
    initial data preparation to verification, choosing only the most relevant data
    elements for a specific task.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Nahla Davies](http://nahlawrites.com/)** is a software developer and tech
    writer. Before devoting her work full time to technical writing, she managed —
    among other intriguing things — to serve as a lead programmer at an Inc. 5,000
    experiential branding organization whose clients include Samsung, Time Warner,
    Netflix, and Sony.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Feature Store Summit 2022: A free conference on Feature Engineering](https://www.kdnuggets.com/2022/10/hopsworks-feature-store-summit-2022-free-conference-feature-engineering.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Customer Segmentation in Python: A Practical Approach](https://www.kdnuggets.com/customer-segmentation-in-python-a-practical-approach)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Feature Store Summit 2023: Practical Strategies for Deploying ML…](https://www.kdnuggets.com/2023/09/hopsworks-feature-store-summit-2023-practical-strategies-deploying-ml-models-production-environments)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Building a Tractable, Feature Engineering Pipeline for Multivariate…](https://www.kdnuggets.com/2022/03/building-tractable-feature-engineering-pipeline-multivariate-time-series.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using RAPIDS cuDF to Leverage GPU in Feature Engineering](https://www.kdnuggets.com/2023/06/rapids-cudf-leverage-gpu-feature-engineering.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Feature Engineering for Beginners](https://www.kdnuggets.com/feature-engineering-for-beginners)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
