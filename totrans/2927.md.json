["```py\n\nimport pandas as pd\nfrom sklearn import linear_model\n\nX_0 = pd.DataFrame([[0,0], [1,0]] )\ny_0 = pd.DataFrame([[0], [0]])\n\nX_1 = pd.DataFrame([[0,1], [1,1], [1,1]])\ny_1 = pd.DataFrame([[1], [1], [1]])\n\nclf = linear_model.SGDClassifier()\n\nclf.partial_fit(X_0, y_0, classes=[0,1])\nprint(clf.predict([[0,0]])) # -> 0\nprint(clf.predict([[0,1]])) # -> 0\n\nclf.partial_fit(X_1, y_1, classes=[0,1])\nprint(clf.predict([[0,0]])) # -> 0\nprint(clf.predict([[0,1]])) # -> 1\n\n```", "```py\n\nimport logging\n\nimport azure.functions as func\nimport pandas as pd\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.externals import joblib\n\ndef main(req: func.HttpRequest) -> func.HttpResponse:\n    logging.info('Python HTTP trigger function processed a request.')\n    if req.body:\n        try:\n            logging.info(\"Converting Request to DataFrame\")\n            req_body = req.get_json()\n            df_body  = pd.DataFrame([req_body])\n\n            logging.info(\"Loadding the Prediction Model\")\n            filename = \"model.pckl\"\n            loaded_model = joblib.load(filename)\n            # Features names need to have been added to the pickled model\n            feature_names = loaded_model.feature_names\n            # subselect only the feature names \n\n            logging.info(\"Subselecting the dataframe\")\n            df_subselect = df_body[feature_names]\n\n            logging.info(\"Predicting the Probability\")\n            result = loaded_model.predict_proba(df_subselect)\n            # We are looking at the probba prediction for class 1\n            prediction = result[0][1]\n\n            return func.HttpResponse(\"{prediction}\".format(prediction=prediction), status_code=200)\n\n        except ValueError:\n            pass\n    else:\n        return func.HttpResponse(\n             \"Please pass a name on the query string or in the request body\",\nstatus_code=400\n        )\n\n```"]