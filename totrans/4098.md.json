["```py\nlambda parameters: expression\n```", "```py\ndef square(x):\n    return x**2\n```", "```py\nlambda x: x**2\n```", "```py\n(lambda x: x**2)(3)\n```", "```py\nOutput >> 9\n```", "```py\n(lambda x, y, z: x**2 + y**2 + z**2)(1, 2, 0)\n```", "```py\nOutput >> 100\n```", "```py\n(lambda x: 100 if x > 100 else (50 if x > 50 else x))(75)\n```", "```py\nOutput >> 100\n```", "```py\n(lambda x: 100 if x > 100 else (50 if x > 50 else x))(75)\n```", "```py\nOutput >> 50\n```", "```py\ndef conditional_statement_demo(x):\n    if x > 100:\n        return100\n    elif x > 50:\n        return 50\n    else:\n        return x\nconditional_statement_demo(75)\n```", "```py\nOutput >> 50\n```", "```py\nsquare = lambda x: x**2\nsquare(3)\n```", "```py\nOutput >> 9\n```", "```py\nwelcome_msg = lambda name : print('Hi', name + '! This is your computer.')\nwelcome_msg(“Vidhi”)\n```", "```py\nOutput >> Hi Vidhi! This is your computer.\n```", "```py\ndef power(y):\n  return lambda x : x**y\nsquare = power(2)\nprint(square(5))\n```", "```py\nOutput >> 25\n```", "```py\nlambda x, y : x**y\n_(2,3)\n```", "```py\nOutput >> 8\n```", "```py\nprint(list(map(lambda x: x**2, range(1,11))))\n```", "```py\nOutput >> [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n```", "```py\nfrom functools import reduce\nprint(reduce((lambda x, y: x * y), range(1,5)))\n```", "```py\nOutput >> 24\n```", "```py\nlst = [8, 9, 50, 6, 12]\nprint(reduce(lambda a, b: a if a > b else b, lst))\n```", "```py\nOutput >> 50\n```", "```py\nlst = [12, 2, 8, 46, 3, 34, 68, 92, 49]\nresult = list(filter(lambda x: (x % 2 != 0), lst))\nprint(result)\n```", "```py\nOutput >> [3, 49]\n```"]