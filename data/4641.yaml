- en: Become a Pro at Pandas, Python’s Data Manipulation Library
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 成为 Pandas 大师，掌握 Python 数据操作库
- en: 原文：[https://www.kdnuggets.com/2019/06/pro-pandas-python-library.html](https://www.kdnuggets.com/2019/06/pro-pandas-python-library.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/06/pro-pandas-python-library.html](https://www.kdnuggets.com/2019/06/pro-pandas-python-library.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](#comments)'
- en: '**By [Julien Kervizic,](https://www.linkedin.com/in/julienkervizic/) Senior
    Enterprise Data Architect at GrandVision NV**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Julien Kervizic](https://www.linkedin.com/in/julienkervizic/)，GrandVision
    NV 高级企业数据架构师**'
- en: The Pandas library is the most popular data manipulation library for Python.
    It provides an easy way to manipulate data through its data-frame api, inspired
    from R’s data-frames.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 库是 Python 中最受欢迎的数据操作库。它通过数据框 API 提供了一种简便的数据操作方式，灵感来自 R 的数据框。
- en: '![Figure](../Images/73e3a95f3d1080b63b095ed1c8a7ae81.png)Photo by [Damian Patkowski](https://unsplash.com/@damianpatkowski?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com?utm_source=medium&utm_medium=referral)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![Figure](../Images/73e3a95f3d1080b63b095ed1c8a7ae81.png)照片由 [Damian Patkowski](https://unsplash.com/@damianpatkowski?utm_source=medium&utm_medium=referral)
    供图，来源于 [Unsplash](https://unsplash.com?utm_source=medium&utm_medium=referral)'
- en: Understanding the Pandas library
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 理解 Pandas 库
- en: One of the keys to getting a good understanding of Pandas is to understand that
    Pandas is mostly a wrapper around a series of other Python libraries. The main
    ones being Numpy, SQLAlchemy, Matplotlib and openpyxl.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 理解 Pandas 的关键之一是要明白 Pandas 大多数情况下是对一系列其他 Python 库的封装。主要的库包括 Numpy、SQLAlchemy、Matplotlib
    和 openpyxl。
- en: The core internal model of the data-frame is a series of numpy arrays, and Pandas
    functions such as the now deprecated “as_matrix” return results in that [internal
    representation](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.as_matrix.html).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框的核心内部模型是一系列 numpy 数组，Pandas 函数如现在已弃用的 “as_matrix” 返回的结果就是这种 [内部表示](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.as_matrix.html)。
- en: Pandas leverages other libraries to get data in and out of data-frames, SQLAlchemy,
    for instance, is used through the read_sql and to_sql functions. And openpyxl
    and xlsx writer are used for read_excel and to_excel functions.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 利用其他库将数据输入和输出到数据框中，例如，通过 read_sql 和 to_sql 函数使用 SQLAlchemy，而 openpyxl
    和 xlsx writer 则用于 read_excel 和 to_excel 函数。
- en: Matplotlib and Seaborn are instead used to provide an easy interface to plot
    information available within a data frame, using command such as df.plot().
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 和 Seaborn 用于提供一个简单的接口来绘制数据框中的信息，使用诸如 df.plot() 这样的命令。
- en: Numpy’s Pandas — Efficient Pandas
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Numpy 的 Pandas——高效的 Pandas
- en: One of the complain that you often hear is that Python is slow or that it is
    difficult to handle large amount of data. Most often than not, this is due to
    poor efficiency of the code being written. It is true that native Python code
    tends to be slower than compiled code, but libraries like Pandas effectively provides
    an interface in Python code to compiled code. Knowing how to properly interface
    with it, let us get the best out of Pandas/Python.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你经常听到的抱怨之一是 Python 速度慢或难以处理大量数据。大多数时候，这是由于编写的代码效率不高。确实，原生 Python 代码通常比编译代码慢，但像
    Pandas 这样的库有效地提供了 Python 代码到编译代码的接口。了解如何正确地与之接口，可以让我们充分发挥 Pandas/Python 的优势。
- en: '**APPLY VECTORIZED OPERATIONS**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**应用矢量化操作**'
- en: Pandas, like its underlying library Numpy, performs vectorized operations more
    efficiently than performing loops. These efficiencies are due to vectorized operations
    being performed through C compiled code, rather than native Python code and on
    the ability of vectorized operations to operate on entire datasets.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas，像其底层库 Numpy 一样，比起执行循环，执行矢量化操作更高效。这些效率源于矢量化操作通过 C 编译代码而非原生 Python 代码来执行，以及矢量化操作能够在整个数据集上进行操作。
- en: 'The apply interface allows to gain some of the efficiency by using a CPython
    interfaces to do the looping:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: apply 接口通过使用 CPython 接口进行循环来提高一些效率：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: But most of the performance gain would be obtained from the use of vectorized
    operations themselves, be it directly in Pandas or by calling its internal Numpy
    arrays directly.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 但大部分性能提升来自于直接使用矢量化操作，无论是在 Pandas 中还是直接调用其内部 Numpy 数组。
- en: '![](../Images/3c9be232f2b5ca462463b089f4509c23.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3c9be232f2b5ca462463b089f4509c23.png)'
- en: 'As you can see from the picture above the difference in performance can be
    drastic, between processing it with a vectorized operation (3.53ms) and looping
    with Apply to do an addition (27.8s). Additional efficiencies can be obtained
    by directly invoking the numpy’s arrays and API, eg:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 正如上图所示，性能差异可能非常显著，处理方式不同（向量化操作 3.53ms 与使用 Apply 循环进行加法 27.8s）。通过直接调用 numpy 的数组和
    API 可以获得额外的效率，例如：
- en: '![](../Images/e1dd6e05293f2014c3a4a6e11a84edfb.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e1dd6e05293f2014c3a4a6e11a84edfb.png)'
- en: '***Swifter:*** Swifter is a Python library that makes it easy to vectorize
    different types of operations on dataframe, its API is fairly similar to that
    of the Apply function.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '***Swifter:*** Swifter 是一个 Python 库，它使得对数据框进行不同类型的操作的向量化变得容易，它的 API 与 Apply
    函数非常相似。'
- en: '**EFFICIENT DATA STORING THROUGH DTYPES**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**通过数据类型高效存储数据**'
- en: When loading a data-frame into memory, be it through read_csv, or read_excel
    or some other data-frame read function, SQL makes type inference which might prove
    to be inefficient. These APIs allow you to specify the types of each columns explicitly.
    This allows for a more efficient storage of data in memory.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在将数据框加载到内存中时，无论是通过 read_csv、read_excel 还是其他数据框读取函数，SQL 都会进行类型推断，这可能会效率低下。这些
    API 允许你显式指定每列的数据类型。这使得在内存中存储数据更加高效。
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Dtypes are native object from [Numpy](https://docs.scipy.org/doc/numpy/reference/arrays.dtypes.html),
    which allows you to define the exact type and number of bits used to store certain
    informations.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 数据类型（dtypes）是 [Numpy](https://docs.scipy.org/doc/numpy/reference/arrays.dtypes.html)
    的本地对象，它允许你定义存储特定信息所使用的确切类型和位数。
- en: 'Numpy’s dtype `np.dtype(''int32'')` would for instance represent a 32 bits
    long integer. Pandas default to 64 bits integer, we could save half the space
    by using 32 bits:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Numpy 的数据类型 `np.dtype('int32')` 例如表示一个 32 位长的整数。Pandas 默认使用 64 位整数，我们可以通过使用
    32 位来节省一半的空间：
- en: '![](../Images/46631fef435c478ae884ed86433f6d70.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/46631fef435c478ae884ed86433f6d70.png)'
- en: memory_usage() shows the number of bytes used by each of the columns, since
    there is only one entry (row) per column, the size of each int64 column is 8 bytes
    and of int32 4 bytes.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: memory_usage() 显示了每一列使用的字节数，由于每列只有一条记录（行），因此每个 int64 列的大小为 8 字节，int32 列为 4 字节。
- en: Pandas also introduces the categorical dtype, that allows for efficient memory
    utilization for frequently occurring values. In the example below, we can see
    a 28x decrease in memory utilization for the field posting_date when we converted
    it to a categorical value.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 还引入了分类数据类型（categorical dtype），这可以有效利用内存来存储经常出现的值。在下面的例子中，我们可以看到，当将字段
    posting_date 转换为分类值时，内存使用量减少了 28 倍。
- en: '![](../Images/62ebd44ecf864e7bdcdfee1279cbb88a.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/62ebd44ecf864e7bdcdfee1279cbb88a.png)'
- en: 'In our example, the overall size of the data-frame drops by more than 3X by
    just changing this data type:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，仅通过更改数据类型，数据框的总体大小就减少了超过 3 倍：
- en: '![](../Images/b72d530479acbb713a57679d26728ca8.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b72d530479acbb713a57679d26728ca8.png)'
- en: Not only using the right dtypes allows you to handle larger datasets in memory,
    it also makes some computations become more effective. In the example below, we
    can see that using categorical type brought a 3X speed improvement for the groupby/sum
    operation.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 不仅使用正确的数据类型允许你在内存中处理更大的数据集，而且还使某些计算变得更加高效。在下面的例子中，我们可以看到，使用分类类型使 groupby/sum
    操作的速度提高了 3 倍。
- en: '![](../Images/f3fefdc673f8c61cb4e5c7bd636b5806.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f3fefdc673f8c61cb4e5c7bd636b5806.png)'
- en: Within Pandas, you can define the dtypes during the data load (read_ ) or as
    a type conversion (astype).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Pandas 中，你可以在数据加载（read_）期间定义数据类型，或作为类型转换（astype）进行定义。
- en: '***CyberPandas:*** [CyberPandas](https://www.anaconda.com/cyberpandas-extending-pandas-with-richer-types/)
    is one of the different library extensions that enables a richer variety of datatypes
    by supporting ipv4 and ipv6 data types and storing them efficiently.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '***CyberPandas:*** [CyberPandas](https://www.anaconda.com/cyberpandas-extending-pandas-with-richer-types/)
    是其中一个不同的库扩展，它通过支持 ipv4 和 ipv6 数据类型并高效存储它们，从而实现了更丰富的数据类型。'
- en: '**HANDLING LARGE DATASETS WITH CHUNKS**'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**处理大型数据集的方法**'
- en: Pandas allows for the loading of data in a data-frame by chunks, it is therefore
    possible to process data-frames as iterators and be able to handle data-frames
    larger than the available memory.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 允许按块加载数据框，因此可以将数据框作为迭代器处理，并能够处理比可用内存更大的数据框。
- en: '![](../Images/cef1c6aae090dae3a12db27756c65cd4.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cef1c6aae090dae3a12db27756c65cd4.png)'
- en: 'The combination of defining a chunksize when reading a data source and the
    get_chunk method, allows Pandas to process data as an [iterator](https://www.w3schools.com/python/python_iterators.asp).
    For instance, in the example shown above, the data frame is read 2 rows at the
    time. These chunks can then be iterated through:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在读取数据源时定义 chunksize 并使用 get_chunk 方法的组合，使 Pandas 能够将数据处理为 [迭代器](https://www.w3schools.com/python/python_iterators.asp)。例如，在上述示例中，数据框每次读取
    2 行。这些块可以被迭代：
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The output of which can then be fed to a csv file, pickled, exported to a database,
    etc…
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 结果可以导出到 csv 文件、进行 pickle 操作、导出到数据库等…
- en: setting up a operator by chunks also allows certain operations to be performed
    through [multi-processing](https://docs.python.org/2/library/multiprocessing.html).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 通过分块设置操作符还允许通过 [多进程](https://docs.python.org/2/library/multiprocessing.html)执行某些操作。
- en: '***Dask:*** It is a framework built on top of Pandas and built with multi-processing
    and distributed processing in mind. It makes use of collections of chunks of Pandas
    data-frames both in memory and on disk.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '***Dask:*** 这是一个建立在 Pandas 之上的框架，设计时考虑了多进程和分布式处理。它利用了内存和磁盘上的 Pandas 数据框集合。'
- en: SQL Alchemy’s Pandas — Database Pandas
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SQL Alchemy 的 Pandas — 数据库 Pandas
- en: 'Pandas also is built up on top of SQLAlchemy to interface with databases, as
    such it is able to download datasets from diverse SQL type of databases as well
    as push records to it. Using the SQLAlchemy interface ( rather than using the
    Pandas API) directly allows us to do certain operations not natively supported
    within Pandas such as transactions or upserts:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 还建立在 SQLAlchemy 之上以与数据库接口，因此它能够从各种 SQL 类型的数据库下载数据集以及推送记录。直接使用 SQLAlchemy
    接口（而不是 Pandas API）允许我们进行某些 Pandas 本身不支持的操作，如事务或 upserts：
- en: '**SQL TRANSACTIONS**'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**SQL 事务**'
- en: Pandas can also make use of SQL transactions, handling commits and rollbacks.
    Pedro Capelastegui, explained in one of his [blog posts](https://capelastegui.wordpress.com/2018/05/21/commit-and-rollback-with-pandas-dataframe-to_sql/),
    how Pandas could take advantage of transactions through a SQLAlchemy context manager.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 还可以利用 SQL 事务，处理提交和回滚。Pedro Capelastegui 在他的一个 [博客文章](https://capelastegui.wordpress.com/2018/05/21/commit-and-rollback-with-pandas-dataframe-to_sql/)中解释了
    Pandas 如何通过 SQLAlchemy 上下文管理器利用事务。
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The advantage of using a SQL transaction, is the fact that the transaction would
    roll back, if the data load fail.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 SQL 事务的优势在于，如果数据加载失败，事务会回滚。
- en: '**SQL Extension**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**SQL 扩展**'
- en: '***PandaSQL***'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '***PandaSQL***'
- en: Pandas has a few SQL extension such as [pandasql](https://pypi.org/project/pandasql/)
    a library that allows to perform SQL queries on top of data-frames. Through pandasql
    the data-frame object can be queried directly as if they were database tables.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 有一些 SQL 扩展，如 [pandasql](https://pypi.org/project/pandasql/)，这是一个允许对数据框进行
    SQL 查询的库。通过 pandasql，可以像查询数据库表一样直接查询数据框对象。
- en: '![](../Images/6be752d989ff587a20fab8e397687efd.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6be752d989ff587a20fab8e397687efd.png)'
- en: '***SQL UPSERTs***'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '***SQL UPSERTs***'
- en: Pandas doesn’t natively support upsert exports to SQL on databases supporting
    this function. [Patches to Pandas](https://github.com/ryanbaumann/Pandas-to_sql-upsert)
    exists to allow this feature.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 本身不支持将 upsert 导出到支持此功能的 SQL 数据库。[Pandas 的补丁](https://github.com/ryanbaumann/Pandas-to_sql-upsert)
    使这个功能成为可能。
- en: MatplotLib/Seaborn — Visual Pandas
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MatplotLib/Seaborn — 视觉 Pandas
- en: Matplotlib and Seaborn visualization are already integrated in some of the dataframe
    APIs such as through the .plot command. There is a fairly comprehensive documentation
    as how the interface works, on [Pandas website](https://pandas.pydata.org/pandas-docs/version/0.22/visualization.html).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 和 Seaborn 可视化已经在某些数据框 API 中集成，例如通过 .plot 命令。有一个相当全面的文档说明接口的工作原理，可以在
    [Pandas 网站](https://pandas.pydata.org/pandas-docs/version/0.22/visualization.html)上查看。
- en: '**Extensions:** Different extensions exists such as Bokeh and plotly to provide
    interactive visualization within Jupyter notebooks, while it is also possible
    to extend matplotlib to handle [3D graph](https://pythonprogramming.net/3d-graphing-pandas-matplotlib/)s.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**扩展：** 存在不同的扩展，如 Bokeh 和 plotly，可以在 Jupyter notebooks 中提供交互式可视化，同时也可以扩展 matplotlib
    以处理 [3D 图形](https://pythonprogramming.net/3d-graphing-pandas-matplotlib/)。'
- en: Other Extensions
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他扩展
- en: Quite a few other extensions for Pandas exists, which are there to handle no-core
    functionalities. One of them is tqdm, which provides a progress bar functionality
    for certain operations, another is pretty Pandas which allows to format dataframes
    and add summary informations.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多其他的Pandas扩展，用于处理非核心功能。其中之一是`tqdm`，它为某些操作提供进度条功能，另一个是`pretty Pandas`，它允许格式化数据框并添加汇总信息。
- en: '***tqdm***'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '***tqdm***'
- en: 'tqdm is a progress bar extension in Python that interacts with Pandas, it allows
    user to see the progress of maps and apply operations on Pandas dataframe when
    using the relevant function (progress_map and progress_apply):'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '`tqdm` 是Python中的一个进度条扩展，能够与Pandas交互，它允许用户在使用相关函数（progress_map和progress_apply）时查看Pandas数据框的操作进度：'
- en: '![](../Images/f0fd3706d7d79e11c99e728aa4dee228.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f0fd3706d7d79e11c99e728aa4dee228.png)'
- en: '***PrettyPandas***'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '***PrettyPandas***'
- en: '[PrettyPandas](https://github.com/HHammond/PrettyPandas) is a library that
    provides an easy way to format data-frames and to add table summaries to them:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[PrettyPandas](https://github.com/HHammond/PrettyPandas)是一个库，提供了一种简便的方法来格式化数据框并为其添加表格摘要：'
- en: '![](../Images/70e929ab46a99eaee395d8067e2f2abf.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/70e929ab46a99eaee395d8067e2f2abf.png)'
- en: '**Bio: [Julien Kervizic](https://www.linkedin.com/in/julienkervizic/)** is
    a Senior Enterprise Data Architect at GrandVision NV.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介： [Julien Kervizic](https://www.linkedin.com/in/julienkervizic/)** 是GrandVision
    NV的高级企业数据架构师。'
- en: '[Original](https://medium.com/analytics-and-data/become-a-pro-at-pandas-pythons-data-manipulation-library-264351b586b1).
    Reposted with permission.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://medium.com/analytics-and-data/become-a-pro-at-pandas-pythons-data-manipulation-library-264351b586b1)。经许可转载。'
- en: '**Related:**'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Pandas DataFrame Indexing](/2019/04/pandas-dataframe-indexing.html)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Pandas DataFrame 索引](/2019/04/pandas-dataframe-indexing.html)'
- en: '[Beginner Data Visualization & Exploration Using Pandas](/2018/10/beginner-data-visualization-exploration-using-pandas-beginner.html)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[初学者数据可视化与探索使用Pandas](/2018/10/beginner-data-visualization-exploration-using-pandas-beginner.html)'
- en: '[Python Data Preparation Case Files: Group-based Imputation](/2017/09/python-data-preparation-case-files-group-based-imputation.html)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python数据准备案例文件：基于组的插补](/2017/09/python-data-preparation-case-files-group-based-imputation.html)'
- en: '* * *'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持组织的IT需求'
- en: '* * *'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Testing Like a Pro: A Step-by-Step Guide to Python''s Mock Library](https://www.kdnuggets.com/testing-like-a-pro-a-step-by-step-guide-to-pythons-mock-library)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[像专业人士一样测试：Python的Mock库逐步指南](https://www.kdnuggets.com/testing-like-a-pro-a-step-by-step-guide-to-pythons-mock-library)'
- en: '[Free Python Resources That Can Help You Become a Pro](https://www.kdnuggets.com/free-python-resources-that-can-help-you-become-a-pro)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[可以帮助你成为专业人士的免费Python资源](https://www.kdnuggets.com/free-python-resources-that-can-help-you-become-a-pro)'
- en: '[10 Pandas One Liners for Data Access, Manipulation, and Management](https://www.kdnuggets.com/2023/01/pandas-one-liners-data-access-manipulation-management.html)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用于数据访问、处理和管理的10个Pandas一行代码](https://www.kdnuggets.com/2023/01/pandas-one-liners-data-access-manipulation-management.html)'
- en: '[Essential Python Libraries for Data Manipulation](https://www.kdnuggets.com/essential-python-libraries-for-data-manipulation)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据处理的必备Python库](https://www.kdnuggets.com/essential-python-libraries-for-data-manipulation)'
- en: '[8 Best Python Image Manipulation Tools](https://www.kdnuggets.com/2022/11/8-best-python-image-manipulation-tools.html)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[8个最佳Python图像处理工具](https://www.kdnuggets.com/2022/11/8-best-python-image-manipulation-tools.html)'
- en: '[Pandas AI: The Generative AI Python Library](https://www.kdnuggets.com/2023/05/pandas-ai-generative-ai-python-library.html)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Pandas AI：生成性AI Python库](https://www.kdnuggets.com/2023/05/pandas-ai-generative-ai-python-library.html)'
