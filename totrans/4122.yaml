- en: 5 Python Interview Questions & Answers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2022/09/5-python-interview-questions-answers.html](https://www.kdnuggets.com/2022/09/5-python-interview-questions-answers.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![5 Python Interview Questions & Answers](../Images/187fb33af80c3f5d46a3763f7fd398e9.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [ThisIsEngineering ](https://www.pexels.com/photo/person-using-gray-laptop-3861964/)
  prefs: []
  type: TYPE_NORMAL
- en: Imagine you are sitting in front of the laptop, listening to the instructions
    from the hiring manager and reading a coding problem statement. If you are not
    prepared for a timed coding interview session, you will end up making mistakes.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: So, it is always good to review the most asked questions before sitting for
    an interview. It will prepare you for tricky, conditional, and advanced coding
    questions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Q1: Odd or Even? Determine that!'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Determine if the sum of “n” consecutive numbers is even, odd, or either.
  prefs: []
  type: TYPE_NORMAL
- en: '**Example:**'
  prefs: []
  type: TYPE_NORMAL
- en: odd_or_even(3) should return “Either”. The sum can be even or odd.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: odd_or_even(2) should return “Odd”. The sum of consecutive numbers contains
    one odd and one even, so the sum will always be odd.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: odd_or_even(4) should return “Even”. The sum of consecutive numbers contains
    two even and two odd, so the sum will always be even.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Solution:**'
  prefs: []
  type: TYPE_NORMAL
- en: Return “Either” if by dividing the “n” by 2 the remainder is 1.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If the first condition fails, move to the second condition.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: First, divide the number by 2 and again divide it by two to check if it returns
    the remainder. If the remainder is 1, then the return “Odd” else return “Even”
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: To pass this question on the first go, you need to read the description multiple
    times. The answer is already given in examples.
  prefs: []
  type: TYPE_NORMAL
- en: It is not the only solution. You can find various solutions on the Codewars
    platform. You can even come up with your unique solution to gain more points.
  prefs: []
  type: TYPE_NORMAL
- en: 'Q2: What is the difference between a tuple and a list?'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Both tuples and lists are used for storing and collecting the data.
  prefs: []
  type: TYPE_NORMAL
- en: The list is declared with square brackets [1,2,3,..], whereas tuples are declared
    with round brackets (1,2,3,...)
  prefs: []
  type: TYPE_NORMAL
- en: The **List** is mutable and primarily used for data insertion and deletion.
    It also has several built-in functions.
  prefs: []
  type: TYPE_NORMAL
- en: The **Tuple** is immutable. The iteration is comparatively fast and consumes
    less memory than a list. It is mostly used for accessing the elements fast.
  prefs: []
  type: TYPE_NORMAL
- en: 'Q3: What is a lambda function? Why are they used?'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Lambda functions are commonly known as anonymous functions. They do not have
    names.
  prefs: []
  type: TYPE_NORMAL
- en: It is used alternatively for regular functions as long as the expression fits
    into one line. Lambda functions are very simple and light. They improve the code
    quality.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a simple function that adds 20 to the input argument, we will write
    lambda and provide two components: parameters and expression.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The parameter is "a", and the expression is “a+20”. The function can be activated
    by providing inputs to the “x” variable.
  prefs: []
  type: TYPE_NORMAL
- en: It's that simple!
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: We can also provide multiple input arguments to the function. In our case, it
    has multiplied 2 and 5 to print 10.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Q4: Maximum 69 Number'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You are provided with a positive integer “num”. It consists of only 6 and 9
    digits.
  prefs: []
  type: TYPE_NORMAL
- en: Return the maximum number by changing one digit (6 or 9).
  prefs: []
  type: TYPE_NORMAL
- en: '**Examples:**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Input: num = 9669, Output: 9969'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Input: num = 9996, Output: 9999'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Input: num = 9999, Output: 9999'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Solution:**'
  prefs: []
  type: TYPE_NORMAL
- en: To get the largest number, we have to always change 6 to 9, and it should be
    the first digit (6).
  prefs: []
  type: TYPE_NORMAL
- en: Let’s say we have num = 9669
  prefs: []
  type: TYPE_NORMAL
- en: Changing the first digit will result in 6669.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changing the second digit will result in 9969.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changing the third digit will result in 9699.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changing the fourth digit will result in 9666.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**9969** is the highest number.'
  prefs: []
  type: TYPE_NORMAL
- en: We just have to create a simple function that will convert one from 6 to 9 at
    the start.
  prefs: []
  type: TYPE_NORMAL
- en: For that, we will convert the number to a string and use the `.replace` function
    to replace “6” with “9”. The third argument is "count" with 1\. It will only replace
    one digit. After replacing we will convert the string to an integer.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Q5: Who wins first?'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Question asked during Microsoft’s coding interview:'
  prefs: []
  type: TYPE_NORMAL
- en: “*Amy and Brad take turns in rolling a fair six-sided die. Whoever rolls a “6”
    first wins the game. Amy starts by rolling first. What’s the probability that
    Amy wins?*”
  prefs: []
  type: TYPE_NORMAL
- en: Before we jump into the solution part, I want you to read the question again.
    It is a simulation question, and we will be finding the probability Amy wins.
  prefs: []
  type: TYPE_NORMAL
- en: Amy will always roll the dice first, and if she hits the 6 on the first try
    she wins. Otherwise, Brad turns to roll the dice, and if he gets 6, he wins. If
    not, then the turn will shift back to Amy until one of them is a winner.
  prefs: []
  type: TYPE_NORMAL
- en: This question is all about iteration and logic.
  prefs: []
  type: TYPE_NORMAL
- en: Initialize the A_count and B_count with zero. We will be using them to create
    probability.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After that, we will run the simulation for “size”. In our case, it is 1000.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With the help of the Numpy random randint function, we will generate a number
    from 1 to 6\. The randint function requires low (inclusive) and high (exclusive)
    numbers. You can even use a random library instead of Numpy.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If the random number is 6, add one to A_count (Amy) else roll again for Brad.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If the B_role hits 6, add one to B_count (Brad). Else move to Amy.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This cycle will run for thousand iterations, and we will collect the Amy and
    Brand winning to calculate the probability.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To calculate the probability of Amy winning, we will divide the number of times
    Amy got 6 divided by the total winning of Amy and Brad.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: For reproducibility purposes we will be using Numpy’s seed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: As we can see, Amy has the upper hand over Brad as she starts first. She has
    a win probability of 57.5 % over 1000 iterations.
  prefs: []
  type: TYPE_NORMAL
- en: Reference
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Odd or Even? Determine that! | [Codewars](https://www.codewars.com/kata/619f200fd0ff91000eaf4a08/train/python)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the difference between a tuple and a list? | [Codecademy](https://www.codecademy.com/resources/blog/python-interview-questions-practice/)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is a lambda function? Why are they used? | [Codecademy](https://www.codecademy.com/resources/blog/python-interview-questions-practice/)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Maximum 69 Number | [LeetCode](https://leetcode.com/problems/maximum-69-number/)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Who wins first? | [Leihua Ye, PhD](https://towardsdatascience.com/5-python-coding-questions-asked-at-faang-59e6cf5ba2a0)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**[Abid Ali Awan](https://www.polywork.com/kingabzpro)** ([@1abidaliawan](https://twitter.com/1abidaliawan))
    is a certified data scientist professional who loves building machine learning
    models. Currently, he is focusing on content creation and writing technical blogs
    on machine learning and data science technologies. Abid holds a Master''s degree
    in Technology Management and a bachelor''s degree in Telecommunication Engineering.
    His vision is to build an AI product using a graph neural network for students
    struggling with mental illness.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[7 Data Analytics Interview Questions & Answers](https://www.kdnuggets.com/2022/09/7-data-analytics-interview-questions-answers.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[20 Questions (with Answers) to Detect Fake Data Scientists: ChatGPT…](https://www.kdnuggets.com/2023/01/20-questions-detect-fake-data-scientists-chatgpt-1.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[20 Questions (with Answers) to Detect Fake Data Scientists: ChatGPT…](https://www.kdnuggets.com/2023/02/20-questions-detect-fake-data-scientists-chatgpt-2.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[15 Python Coding Interview Questions You Must Know For Data Science](https://www.kdnuggets.com/2022/04/15-python-coding-interview-questions-must-know-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SQL and Python Interview Questions for Data Analysts](https://www.kdnuggets.com/2023/02/sql-python-interview-questions-data-analysts.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[3 Hard Python Coding Interview Questions For Data Science](https://www.kdnuggets.com/2023/03/3-hard-python-coding-interview-questions-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
