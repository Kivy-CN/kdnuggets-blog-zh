["```py\n# Way 1\nemptyTuple = ()\n```", "```py\n# Way 2\nemptyTuple = tuple()\n```", "```py\n# way 1\nz = (3, 7, 4, 2)# way 2 (tuples can also can be created without parenthesis)\nz = 3, 7, 4, 2\n```", "```py\n# tuple with one value\ntup1 = ('Michael',)# tuple with one value\ntup2 = 'Michael',# This is a string, NOT a tuple.\nnotTuple = ('Michael')\n```", "```py\n# Initialize a tuple\nz = (3, 7, 4, 2)*# Access the first item of a tuple at index 0*\nprint(z[0])\n```", "```py\n*# print last item in the tuple*\nprint(z[-1])\n```", "```py\n# Initialize a tuple\nz = (3, 7, 4, 2)# first index is inclusive (before the :) and last (after the :) is not.\nprint(z[0:2])\n```", "```py\n*# everything up to but not including index 3*\nprint(z[:3])\n```", "```py\nprint(z[-4:-1])\n```", "```py\nz = (3, 7, 4, 2)z[1] = \"fish\"\n```", "```py\n# Initialize tuple\ntup1 = ('Python', 'SQL')# Initialize another Tuple\ntup2 = ('R',)# Create new tuple based on existing tuples\nnew_tuple = tup1 + tup2;\nprint(new_tuple)\n```", "```py\n# Initialize a tuple\nanimals = ('lama', 'sheep', 'lama', 48)\n```", "```py\nprint(animals.index('lama'))\n```", "```py\nprint(animals.count('lama'))\n```", "```py\nfor item in ('lama', 'sheep', 'lama', 48):\n   print(item)\n```", "```py\nx, y = (7, 10);\nprint(\"Value of x is {}, the value of y is {}.\".format(x, y))\n```", "```py\nfriends = ('Steve', 'Rachel', 'Michael', 'Monica')\nfor index, friend in enumerate(friends):\n    print(index,friend)\n```", "```py\nimport timeitprint(timeit.timeit('x=(1,2,3,4,5,6,7,8,9,10,11,12)', number=1000000))print(timeit.timeit('x=[1,2,3,4,5,6,7,8,9,10,11,12]', number=1000000))\n```"]