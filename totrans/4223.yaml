- en: A Python Data Processing Script Template
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2021/08/python-data-processing-script-template.html](https://www.kdnuggets.com/2021/08/python-data-processing-script-template.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../Images/2af4a97469a9a229181550d8825a4383.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
- en: Like many of you, I tend to write a lot of Python scripts which are meant to
    perform similar tasks, or at least follow a similar pattern of functionality.
    In an effort to not repeat myself (or, approached from a different angle, to always
    repeat myself in exactly the same way), I like to setup boilerplate or template
    code for these kinds of scripts in an effort to keep my programming life as lazy
    as possible.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: I recently wrote about [Managing Your Reusable Python Code as a Data Scientist](/2021/06/managing-reusable-python-code-data-scientist.html),
    and in that same vein I have put together a generic Python data processing script
    template I start off most projects with these days. It has changed and been tweaked
    over time, but this current version is the go-to for most, non-specialized (i.e.
    not machine learning) scripts that I start out writing.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: 'First, here''s a little about what I generally am looking to broadly accomplish
    with my scripts these days:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: Parse command line arguments
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setup required paths and filenames
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access to Google Sheets for data retrieval and storage
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access to SQL databases for data retrieval and storage
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Filesystem management
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HTML and other text manipulation
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use of some of my own custom Python modules
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Retrieval of some resources on the internet, HTML or CSV files, for example
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's go through the code step by step.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: Libraries
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I'm particular with what and how I import. The first line imports (mostly) standard
    library modules; the next few lines import third party libraries, in the order
    'import', 'import ... as ...', and 'from ... import ...'; a custom module named
    const is imported, which I include in my projects as a separate Python file holding
    immutable project-specific variable assignments (constants); finally, any of my
    own custom Python modules are imported, in this case a 'dates' modules from my
    own preprocessing library.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Exit Functions
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Along with, or in place of, error logging, I add some exit functions to be called
    from later code for different reasons. Here are a few examples, the first of which
    I always include.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: I like argparse, see below, but I like to call a custom exit function with a
    concrete example of how to initialize the command line script, as opposed to only
    the argparse default messaging. The second function would obviously be repurposed
    for something specific, if needed.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: Parsing Command Line Arguments
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I use argparse to parse command line arguments because why not? These args are
    included in my template for quick editing, and so I don't have to reference documentation
    all the time.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note the call to the custom exit function outlined above in the try/except block,
    as well as the assignment of the parsed args to friendlier variable names.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: Data Filenames and Paths
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Time to setup project-specific data filenames and paths, since I am almost always
    processing data of some sort. The benefit of storing these in YAML files is that
    they are collected in one spot and can be easily changed without searching through
    code.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Here I have grabbed input, output, temp, and database files from a project
    YAML file, which resides in the same directory and looks like this:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Change in these filenames or locations? Just change them here once.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: Google Sheets Setup and Config
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I have taken to using Google Sheets for much (small scale) data storage, and
    so I need to be able to access and manipulate this data. I use the [gspread](https://github.com/burnash/gspread)
    library to do so, the config of which is beyond the scope of this article.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This code gets API credential data from a pair of YAML and JSON files, authenticates,
    and connects to a specific workbook and a specific worksheet, in order to do some
    stuff in them in subsequent code.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: SQLite Setup and Config
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I also regularly access and manipulate SQL databases using SQLite3\. Here is
    the code to setup and configure a database connection.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: BeautfulSoup, String Manipulation, and Using "Constants"
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Scraping HTML is a common task I perform, and I do so using a combination of
    the BeautifulSoup library, simple string manipulation, and regular expressions.
    Here is the code for setting up BeautifulSoup, removing some HTML tags, using
    some variables stored in the const module for simple string replacements, as well
    as some use of regular expressions. These are all example stand-in excerpts to
    be changed without having to consult documentation.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The final result in this case is saved to file, and all open files are closed.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: Custom Library
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Here is an example of some custom library functionality. The functionality of
    this code creating some simple date features can be found [here](/2021/08/engineer-date-features-python.html).
    As I use my collection of preprocessing snippets often, they have been packaged
    as the my_preprocessing library, which I automatically import.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The Entire Template
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: And now that we've been over the code, here is the entire `template.py` file
    that I copy and set out with whenever I go to create a new data processing script.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: I hope someone has found this useful.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '**Related**:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '[Managing Your Reusable Python Code as a Data Scientist](/2021/06/managing-reusable-python-code-data-scientist.html)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python Data Structures Compared](/2021/07/python-data-structures-compared.html)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Automate Microsoft Excel and Word Using Python](/2021/08/automate-microsoft-excel-word-python.html)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT 方面的工作'
- en: '* * *'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 了解更多相关话题
- en: '[FREE Ratio Analysis Template](https://www.kdnuggets.com/2023/04/boxplot-outlier-free-ratio-analysis-template.html)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[免费比率分析模板](https://www.kdnuggets.com/2023/04/boxplot-outlier-free-ratio-analysis-template.html)'
- en: '[25 Free Books to Master SQL, Python, Data Science, Machine…](https://www.kdnuggets.com/25-free-books-to-master-sql-python-data-science-machine-learning-and-natural-language-processing)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[25 本免费书籍，掌握 SQL、Python、数据科学、机器学习…](https://www.kdnuggets.com/25-free-books-to-master-sql-python-data-science-machine-learning-and-natural-language-processing)'
- en: '[Python String Processing Cheatsheet](https://www.kdnuggets.com/2020/01/python-string-processing-primer.html)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 字符串处理备忘单](https://www.kdnuggets.com/2020/01/python-string-processing-primer.html)'
- en: '[Parallel Processing Large File in Python](https://www.kdnuggets.com/2022/07/parallel-processing-large-file-python.html)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 中的并行处理大文件](https://www.kdnuggets.com/2022/07/parallel-processing-large-file-python.html)'
- en: '[KDnuggets News, July 20: Machine Learning Algorithms Explained in…](https://www.kdnuggets.com/2022/n29.html)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻，7 月 20 日：机器学习算法详解…](https://www.kdnuggets.com/2022/n29.html)'
- en: '[Data Representation for Natural Language Processing Tasks](https://www.kdnuggets.com/2018/11/data-representation-natural-language-processing.html)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[自然语言处理任务的数据表示](https://www.kdnuggets.com/2018/11/data-representation-natural-language-processing.html)'
