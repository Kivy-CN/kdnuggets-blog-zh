- en: 'Amazon Machine Learning: Nice and Easy or Overly Simple?'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Amazon Machine Learning：实用还是过于简单？
- en: 原文：[https://www.kdnuggets.com/2016/02/amazon-machine-learning-nice-easy-simple.html](https://www.kdnuggets.com/2016/02/amazon-machine-learning-nice-easy-simple.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2016/02/amazon-machine-learning-nice-easy-simple.html](https://www.kdnuggets.com/2016/02/amazon-machine-learning-nice-easy-simple.html)
- en: '**By Alex Perrier, [@alexip](https://twitter.com/alexip)**, (originally published
    on the [Open Data Science blog](http://www.opendatascience.com/blog/amazon-machine-learning-nice-and-easy-or-overly-simple/))'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者：Alex Perrier，[@alexip](https://twitter.com/alexip)**，（最初发布于[Open Data
    Science博客](http://www.opendatascience.com/blog/amazon-machine-learning-nice-and-easy-or-overly-simple/)）'
- en: '**Machine Learning as a Service (MLaaS) promises to put data science within
    the reach of companies. In that context, Amazon Machine Learning is a predictive
    analytics service with binary/multiclass classification and linear regression
    features. The service offers a simple workflow but lacks model selection features
    and has slow execution times. Predictive performances are satisfying.**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**机器学习即服务（MLaaS）承诺将数据科学带入公司可及的范围。在这种背景下，Amazon Machine Learning是一种具有二分类/多分类和线性回归特性的预测分析服务。该服务提供了简单的工作流程，但缺乏模型选择功能，执行时间较慢。预测性能令人满意。**'
- en: '![AmazonWebservices_Logo.svg](../Images/76dc4722bfa89125a95988a8f65108c7.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![AmazonWebservices_Logo.svg](../Images/76dc4722bfa89125a95988a8f65108c7.png)'
- en: Data science is hot and sexy, but it is complex. Building and maintaining a
    data science infrastructure can be expensive. Experienced data scientists are
    scarce and in-house development of algorithms, building predictive analytics applications,
    and creating production-ready APIs, requires specific know-how and resources.
    Even though companies may anticipate the benefits of a data science service, they
    may not be ready to make the necessary investments without testing the waters
    first.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学很热门且具有吸引力，但它也很复杂。构建和维护数据科学基础设施可能很昂贵。经验丰富的数据科学家稀缺，内部开发算法、构建预测分析应用程序和创建生产就绪的API需要特定的专业知识和资源。尽管公司可能预计数据科学服务的好处，但在进行必要投资之前，他们可能不愿意先行测试。
- en: 'This is where Machine Learning-as-a-Service comes in with a promise to simplify
    and democratize Machine Learning: reap the benefits of Machine Learning within
    a short timeframe while keeping costs low.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是机器学习即服务（Machine Learning-as-a-Service）介入的地方，它承诺简化和普及机器学习：在短时间内享受机器学习的好处，同时保持低成本。
- en: 'Several key players have entered that field: [Google Predictive Analytics](https://cloud.google.com/prediction/),
    [Microsoft Azure Machine Learning](https://azure.microsoft.com/en-us/services/machine-learning/),
    [IBM Watson](http://www.ibm.com/analytics/watson-analytics/), [Big ML](https://bigml.com/)
    and [many others](http://www.butleranalytics.com/10-machine-learning-as-a-service-platforms/).
    Some offer a simplified Prediction Analytics service while others offer a more
    specialized interface and data science services beyond prediction.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一些关键参与者已经进入了这个领域：[Google Predictive Analytics](https://cloud.google.com/prediction/)、[Microsoft
    Azure Machine Learning](https://azure.microsoft.com/en-us/services/machine-learning/)、[IBM
    Watson](http://www.ibm.com/analytics/watson-analytics/)、[Big ML](https://bigml.com/)和[许多其他](http://www.butleranalytics.com/10-machine-learning-as-a-service-platforms/)。有些提供简化的预测分析服务，而有些则提供更专业的界面和超越预测的数据科学服务。
- en: One relatively new entrant is AWS with its [Amazon Machine Learning](https://aws.amazon.com/machine-learning/)
    service. Launched in April 2015, less than a year ago, at the AWS 2015 summit,
    Amazon Machine Learning aims at simplifying predictive analytics by focusing on
    the data workflow and keeping the more involved and challenging technical details
    under the hood. By removing an important part of the technical details from the
    sight of the user, Amazon Machine Learning brings data science to a much broader
    audience. It significantly lowers the barrier of entry for companies wishing to
    experiment with predictive analytics by making powerful Machine Learning tools
    available and operational in a very short timeframe.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 相对较新的参与者是AWS的[Amazon Machine Learning](https://aws.amazon.com/machine-learning/)服务。该服务于2015年4月在AWS
    2015峰会上推出，距今不足一年。Amazon Machine Learning旨在通过关注数据工作流并将更复杂的技术细节隐藏在后台，简化预测分析。通过将技术细节的重要部分从用户视野中移除，Amazon
    Machine Learning将数据科学带给更广泛的受众。它显著降低了公司尝试预测分析的门槛，使强大的机器学习工具能够在很短的时间内可用和运作。
- en: A large portion of the Internet already runs on AWS many services. AWS move
    to add a Machine Learning offering to the mix will allow engineers to include
    predictive analytics capabilities into their existing applications.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网的大部分已经在运行 AWS 的许多服务。AWS 将机器学习服务添加到其中将允许工程师将预测分析能力纳入现有应用程序。
- en: Amazon Machine Learning enables companies to experiment with data science and
    assess its business value without commiting significant resources and investments.
    In that regard, Amazon Machine Learning is [Predictive Analytics 101](http://docs.aws.amazon.com/machine-learning/latest/dg/machine-learning-concepts.html)
    for companies wishing to board the data science train.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊机器学习使公司能够在不投入大量资源和投资的情况下尝试数据科学并评估其业务价值。在这方面，亚马逊机器学习是希望搭乘数据科学列车的公司的 [预测分析入门](http://docs.aws.amazon.com/machine-learning/latest/dg/machine-learning-concepts.html)。
- en: 'Pistons, Carburetors and Filters: What’s Under the Hood?'
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活塞、汽化器和滤清器：引擎下的秘密是什么？
- en: One important trait of Amazon Machine Learning is its simplified approach to
    Machine Learning. It “[dumbs down machine learning for the rest of us [InfoWorld]](http://www.infoworld.com/article/2908498/amazon-web-services/amazon-machine-learning-for-the-rest-us.html)“;
    it “[puts Machine Learning In Reach Of Any Developer [Techcrunch]](http://techcrunch.com/2015/04/09/aws-wants-to-put-machine-learning-in-reach-of-any-developer/#.mdrfnlu:aFbV).”
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊机器学习的一个重要特征是其简化的机器学习方法。它“[为我们简化了机器学习 [InfoWorld]](http://www.infoworld.com/article/2908498/amazon-web-services/amazon-machine-learning-for-the-rest-us.html)“；它“[使任何开发者都能触及机器学习
    [Techcrunch]](http://techcrunch.com/2015/04/09/aws-wants-to-put-machine-learning-in-reach-of-any-developer/#.mdrfnlu:aFbV).”
- en: But predictive analytics is a complex field. Tasks such as data munging, feature
    engineering, parameter tuning, and model selection take time and follow a well
    established set of protocols, methods and techniques. Can Amazon Machine Learning’s
    simplified service still deliver performance at the expense of this complexity?
    Can you still reap the benefits of predictive analytics with a simplified Machine
    Learning pipeline?
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 但预测分析是一个复杂的领域。诸如数据处理、特征工程、参数调整和模型选择等任务需要时间，并遵循一套完善的协议、方法和技术。亚马逊机器学习的简化服务是否仍能在不牺牲复杂性的情况下提供性能？你是否还能通过简化的机器学习流程获得预测分析的好处？
- en: '**1 Model, 1 Algorithm, 3 Different Tasks, Easy Pipeline Setup, Wizards, and
    Smart Defaults**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**1 个模型，1 种算法，3 种任务，简单的管道设置，向导和智能默认值**'
- en: According to the [documentation](https://aws.amazon.com/documentation/machine-learning/),
    Amazon Machine Learning is based on linear models trained via [Stochastic Gradient
    Descent](https://en.wikipedia.org/wiki/Stochastic_gradient_descent) (SGD for short).
    That’s it. No Random Forests or Boosted trees, no Kernel SVM, Bayes classifiers
    or Clustering. This may appear to be a drastic limitation. However the Stochastic
    Gradient Descent algorithm developed by [Leon Bottou](http://leon.bottou.org/papers)
    is a very stable and resilient algorithm. This algorithm has been around for a
    long time with many improved versions over the years.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 [文档](https://aws.amazon.com/documentation/machine-learning/)，亚马逊机器学习基于通过
    [随机梯度下降](https://en.wikipedia.org/wiki/Stochastic_gradient_descent)（简称 SGD）训练的线性模型。就是这样。没有随机森林或提升树，没有内核
    SVM、贝叶斯分类器或聚类。这可能看起来是一个严峻的限制。然而，由 [Leon Bottou](http://leon.bottou.org/papers)
    开发的随机梯度下降算法是一个非常稳定和鲁棒的算法。这个算法已经存在很长时间，并且多年来有许多改进版本。
- en: This simple predictive setup will most probably be sufficient to address a large
    portion of real world business prediction problems. As we will see it also presents
    decent performances.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这个简单的预测设置很可能足以解决大量现实世界的商业预测问题。正如我们将看到的，它也表现出不错的性能。
- en: '**Tasks**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**任务**'
- en: 'The Amazon Machine Learning platform gives you a choice of three supervised
    learning tasks, each with their associated models and loss functions:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊机器学习平台提供三种监督学习任务，每种任务都有其相关模型和损失函数。
- en: '**binary classification** with logistic regression (logistic loss function
    + SGD)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**二分类** 使用逻辑回归（逻辑损失函数 + SGD）'
- en: '**multiclass classification** with multinomial logistic regression (multinomial
    logistic loss + SGD)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多分类** 使用多项逻辑回归（多项逻辑损失 + SGD）'
- en: and **regression** with linear regression (squared loss function + SGD)
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以及 **回归** 使用线性回归（平方损失函数 + SGD）
- en: For binary classifier, the scoring function is the [F1-measure](https://en.wikipedia.org/wiki/F1_score);
    for multiclass classifier, scoring is the macro average F1-measure which averages
    the F1-measure of each class; and for regression the RMSE metric is used. Commonly
    used in information retrieval, the F1-measure is the harmonic mean of precision
    and recall. It is a robust classification measure somewhat insensitive to multiclass
    imbalance.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 对于二分类器，评分函数是[F1-measure](https://en.wikipedia.org/wiki/F1_score)；对于多类分类器，评分是宏平均
    F1-measure，它是每个类别 F1-measure 的平均值；对于回归使用 RMSE 指标。F1-measure 通常用于信息检索，是精确率和召回率的调和平均数。这是一种稳健的分类度量，对多类不平衡不太敏感。
- en: '**Feature Engineering with Recipes**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用 Recipes 进行特征工程**'
- en: 'Within the Amazon Machine Learning pipeline is the possibility to transform
    your variables with [Recipes](http://docs.aws.amazon.com/machine-learning/latest/dg/feature-processing.html).
    Several transformations are available through JSON formatted instructions: replacing
    missing values, Cartesian products, binning categorical variables into numerical
    ones, or forming n-grams for text data.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Amazon 机器学习管道中，可以使用[Recipes](http://docs.aws.amazon.com/machine-learning/latest/dg/feature-processing.html)来转换你的变量。通过
    JSON 格式的指令可以进行多种转换：替换缺失值、笛卡尔积、将分类变量分箱为数值型变量，或为文本数据形成 n-grams。
- en: For instance here is one of the recipe that was automatically generated to transform
    categorical values into numeric ones when working on the [iris](https://archive.ics.uci.edu/ml/datasets/Iris)
    dataset.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，这里是一个在处理[鸢尾花](https://archive.ics.uci.edu/ml/datasets/Iris)数据集时自动生成的将分类值转换为数值值的
    Recipe。
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Training vs Validation Sets**'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练集与验证集**'
- en: By default, Amazon Machine Learning splits your training dataset into 70/30
    chunks. Here again Amazon Machine Learning simplifies rich techniques into very
    simple and limited choices. Splitting your data into training and validation could
    be done in a myriad ways which Amazon Machine Learning boils down to randomizing
    the samples or not. You can of course still split your data as you wish outside
    of Amazon Machine Learning, create a new datasource for an held-out set, and evaluate
    the performance of your model on this held-out dataset.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Amazon 机器学习将你的训练数据集拆分为 70/30。Amazon 机器学习将丰富的技术简化为非常简单且有限的选择。数据拆分为训练集和验证集可以用多种方式进行，而
    Amazon 机器学习将其简化为随机化样本或不随机化。你当然可以在 Amazon 机器学习之外自行拆分数据，创建一个新的数据源用于保留集，并在该保留集上评估模型的性能。
- en: '**SGD Parameter Tuning**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**SGD 参数调整**'
- en: 'A reduced number of parameters are available for tuning your model: the number
    of passes, the regularization type (None, L1, L2), and the regularization parameter.
    It is not possible to set up the learning rate of the algorithm and no information
    is given on how this important parameter is set.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 可用于调整模型的参数数量较少：传递次数、正则化类型（无、L1、L2）和正则化参数。无法设置算法的学习率，也没有信息说明如何设置这个重要参数。
- en: But Where Do You Start?
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 那么，你从哪里开始？
- en: With over 50 different services with cool names like Elastic Beanstalk, Kinesis,
    RedShift, or Route 53, the AWS console home page can definitely be intimidating.
    However, thanks to good [documentation](http://docs.aws.amazon.com/machine-learning/latest/dg/what-is-amazon-machine-learning.html)
    and a set of well conceived wizards, creating your first project is a fast and
    pleasant experience.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 控制台主页有超过 50 种不同服务，名称如 Elastic Beanstalk、Kinesis、RedShift 或 Route 53，这可能会让人感到畏惧。然而，得益于良好的[文档](http://docs.aws.amazon.com/machine-learning/latest/dg/what-is-amazon-machine-learning.html)和一套设计良好的向导，创建你的第一个项目将是一个快速且愉快的体验。
- en: 'Once you have your data set in a properly formatted csv file on S3, the whole
    process is composed of four steps:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的数据集以正确格式的 csv 文件存储在 S3 上，整个过程分为四个步骤：
- en: 'Creating a **datasource**: Telling Amazon Machine Learning where your data
    is and what schema it follows'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个**数据源**：告知 Amazon 机器学习你的数据所在位置及其遵循的模式。
- en: 'Creating a **model**: The task is inferred from the data type of your target
    (numeric => regression, binary => classification or categorical for multinomial
    classification) and you can set some custom parameters to the model'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个**模型**：任务由目标的数据类型推断（数值型 => 回归，二分类 => 分类或分类数据用于多项分类），你可以为模型设置一些自定义参数。
- en: '**Training** and evaluating the model'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**训练**和评估模型'
- en: Performing batch **predictions**
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行批量**预测**
- en: The best strategy to get started is to follow the well written and detailed
    [Amazon Machine Learning’s tutorial](http://docs.aws.amazon.com/machine-learning/latest/dg/tutorial.html).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳的入门策略是遵循编写精良且详细的 [Amazon Machine Learning 的教程](http://docs.aws.amazon.com/machine-learning/latest/dg/tutorial.html)。
- en: 'These resources are also available:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这些资源也可用：
- en: '[Cloud Academy Course on AWS Machine Learning](https://cloudacademy.com/amazon-web-services/amazon-machine-learning-course/)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[AWS Machine Learning 的 Cloud Academy 课程](https://cloudacademy.com/amazon-web-services/amazon-machine-learning-course/)'
- en: '[Amazon Machine Learning: use cases and a real example in Python](http://cloudacademy.com/blog/aws-machine-learning/)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Amazon Machine Learning：使用案例和 Python 中的实际示例](http://cloudacademy.com/blog/aws-machine-learning/)'
- en: and this excellent YouTube video [Your first week on Amazon AWS](https://www.youtube.com/watch?v=7CiHBcqw6zc),
    by Miles Ward for EC2 setup.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以及这个优秀的 YouTube 视频 [你在 Amazon AWS 的第一周](https://www.youtube.com/watch?v=7CiHBcqw6zc)，由
    Miles Ward 提供，用于 EC2 设置。
- en: And in Practice?
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 那实践中呢？
- en: '**Cross Validation**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**交叉验证**'
- en: There is no cross-validation methods, per se, in Amazon Machine Learning. The
    suggested way is to create your data files following a K-fold cross validation
    scheme, create the data sources for each fold, and train models on each datasource.
    For instance, in order to perform a four-fold cross-validation you would need
    to create four datasources, four models and four evaluations. You can then average
    the four evaluation scores to obtain the final cross-validated score of your model.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Amazon Machine Learning 中没有专门的交叉验证方法。建议的方式是按照 K 折交叉验证方案创建数据文件，为每个折创建数据源，并在每个数据源上训练模型。例如，为了执行四折交叉验证，你需要创建四个数据源、四个模型和四个评估。然后，你可以平均这四个评估分数，以获得模型的最终交叉验证分数。
- en: '**Overfitting**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**过拟合**'
- en: '[Overfitting](http://docs.aws.amazon.com/machine-learning/latest/dg/model-fit-underfitting-vs-overfitting.html)
    happens when your model adheres so closely to the training data that it loses
    its ability to predict new data. Detecting overfitting is important to make sure
    your model has any predictive power. It can be done via a [Learning Curve](https://class.coursera.org/ml-005/lecture/64),
    by comparing [error curves](http://scikit-learn.org/stable/modules/learning_curve.html)
    between training sets and validation sets for different sample sizes.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[过拟合](http://docs.aws.amazon.com/machine-learning/latest/dg/model-fit-underfitting-vs-overfitting.html)发生在你的模型过于紧密地贴合训练数据，以至于丧失预测新数据的能力。检测过拟合很重要，以确保模型具有预测能力。这可以通过
    [学习曲线](https://class.coursera.org/ml-005/lecture/64) 来完成，通过比较训练集和验证集的 [误差曲线](http://scikit-learn.org/stable/modules/learning_curve.html)
    来检测不同样本大小的表现。'
- en: Amazon Machine Learning offers two classic regularization methods (L1 Lasso
    and L2 Ridge) to reduce overfitting but no overfitting detection methods. To check
    if your model is overfitting your training data, you would need to create different
    datasets and models and evaluate each of them.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Machine Learning 提供了两种经典的正则化方法（L1 Lasso 和 L2 Ridge）来减少过拟合，但没有过拟合检测方法。要检查你的模型是否对训练数据过拟合，你需要创建不同的数据集和模型，并对每个模型进行评估。
- en: '**Costs**'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**成本**'
- en: Feature engineering and feature selection is a rinse-and-repeat process that
    requires creating and evaluating many of datasets. Each time a new data source
    is created, Amazon Machine Learning carries out a statistical analysis of the
    data which can add significantly to the overall cost of a project. While researching
    for this article, 95% of the costs were due to creating data statistics for each
    new datasources I tried. And it took Amazon Machine Learning around 15 hours to
    process approximately 400,000 samples.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 特征工程和特征选择是一个反复进行的过程，需要创建和评估许多数据集。每次创建新的数据源时，Amazon Machine Learning 会对数据进行统计分析，这可能会显著增加项目的整体成本。在为本文进行研究时，95%
    的成本是由于为我尝试的每个新数据源创建数据统计。而且 Amazon Machine Learning 处理大约 400,000 个样本花费了大约 15 小时。
- en: '**Alternative to the Console**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**控制台的替代方案**'
- en: Building a fast test/fail loop is primordial to any data science project. Back
    and forth processes between data files, models and validations need to happen
    in order to build a resilient model with strong predictive powers.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 构建一个快速的测试/失败循环对任何数据科学项目都是至关重要的。数据文件、模型和验证之间的反复过程需要进行，以构建一个具有强大预测能力的鲁棒模型。
- en: Interacting with Amazon Machine Learning through the UI quickly becomes tedious
    especially if you’re already comfortable with the command line. A brand new Data-Model-Evaluation
    process involves about eight to ten pages, fields, and clicks. All this UI goodness
    takes time. Furthermore each new entity can take a few minutes to be available.
    You end up with a very slow process compared to a scripting based flow (command
    line, R studio, Jupyter notebooks, …).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 UI 与 Amazon Machine Learning 交互会很快变得乏味，特别是如果你已经习惯了命令行的话。全新的数据-模型-评估流程涉及大约八到十页的页面、字段和点击。这些
    UI 操作需要时间。此外，每个新实体可能需要几分钟才能可用。与基于脚本的流程（如命令行、R Studio、Jupyter notebooks 等）相比，这个过程非常缓慢。
- en: Using recipes, uploading predefined schemas for your data sources, and using
    AWS CLI to manage S3 will help speed things up.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 使用配方、上传预定义的模式以及使用 AWS CLI 管理 S3 将有助于加快速度。
- en: AWS offers SDKs in many languages including methods for Amazon Machine Learning.
    You can drive your Amazon Machine Learning projects in Python, Java or Scala.
    See for instance this github repo of[Amazon Machine Learning code samples](https://github.com/awslabs/machine-learning-samples).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 提供了多种语言的 SDK，包括用于 Amazon Machine Learning 的方法。你可以使用 Python、Java 或 Scala
    来驱动你的 Amazon Machine Learning 项目。例如，可以查看这个[Amazon Machine Learning 代码示例](https://github.com/awslabs/machine-learning-samples)的
    GitHub 仓库。
- en: Interacting with Amazon Machine Learning through scripting is probably the most
    efficient way to interact with the service. But if you’re going to be writing
    scripts in Python anyway, the advantage of using Amazon Machine Learning becomes
    less obvious. You might as well use a dedicated data science toolkit such as Scikit-learn.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 通过脚本与 Amazon Machine Learning 交互可能是与该服务交互的最有效方式。但如果你无论如何都会编写 Python 脚本，那么使用
    Amazon Machine Learning 的优势就不那么明显了。你完全可以使用像 Scikit-learn 这样的专用数据科学工具包。
- en: Case Study
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 案例研究
- en: By being limited to linear models and the Stochastic Gradient Descent algorithm,
    one may wonder about the service’s performances. In the rest of this article,
    I will compare Scikit-learn and Amazon Machine Learning performances for binary
    and multiclass classification.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 由于限制在线性模型和随机梯度下降算法上，人们可能会对服务的性能产生疑问。在本文的其余部分，我将比较 Scikit-learn 和 Amazon Machine
    Learning 在二分类和多分类任务中的表现。
- en: Iris Dataset
  id: totrans-59
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 鸢尾花数据集
- en: Let’s start with a simple and very easy multi-class classification dataset,
    the [Iris dataset](http://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_iris.html),
    and compare performances of Scikit-learn’s [SGDClassifier](http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.SGDClassifier.html)
    with the Amazon Machine Learning multi-class classification .
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从一个简单且非常容易的多分类数据集——[鸢尾花数据集](http://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_iris.html)
    开始，并比较 Scikit-learn 的 [SGDClassifier](http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.SGDClassifier.html)
    与 Amazon Machine Learning 的多分类任务的表现。
- en: 'The SGDClassifier is set up similarly to the Amazon Machine Learning SGD parameters:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: SGDClassifier 的设置与 Amazon Machine Learning 的 SGD 参数类似：
- en: L2 regularization (alpha = 10^(-6) )
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: L2 正则化 (alpha = 10^(-6) )
- en: optimal learning rate
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最优学习率
- en: log loss function
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对数损失函数
- en: 10 iterations
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 10 次迭代
- en: The training set is split 70/30 for training and evaluation with random sample
    selection. The macro-averaged F1-score is used both with Scikit and Amazon Machine
    Learning.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 训练集被随机选择为 70/30 以进行训练和评估。宏平均 F1 分数在 Scikit 和 Amazon Machine Learning 中都被使用。
- en: 'The final evaluation score on the held-out set is very similar between Scikit-learn
    and Amazon Machine Learning with:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在保留集上的最终评估分数在 Scikit-learn 和 Amazon Machine Learning 之间非常相似：
- en: 'Scikit-learn: 0.93'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Scikit-learn: 0.93'
- en: 'Amazon Machine Learning: 0.94'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Amazon Machine Learning: 0.94'
- en: So far so good. Now for a more complex dataset.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，一切顺利。现在来处理一个更复杂的数据集。
- en: Kaggle Airbnb Data
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Kaggle Airbnb 数据
- en: The recent [Airbnb New User Bookings](https://www.kaggle.com/c/airbnb-recruiting-new-user-bookings)
    Kaggle competition consists in predicting the country destination of Airbnb users
    given a series of datasets (country, age gender info, users and sessions).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 最近的 [Airbnb 新用户预订](https://www.kaggle.com/c/airbnb-recruiting-new-user-bookings)
    Kaggle 竞赛旨在预测 Airbnb 用户的国家目的地，给定一系列数据集（国家、年龄、性别信息、用户和会话）。
- en: 'We will simplify the dataset and only consider the user training data which
    is composed of features such as: gender, age, affiliate, browser, date of registration,
    etc. The data set is freely available on the competition page, and only requires
    registration to Kaggle.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将简化数据集，仅考虑由性别、年龄、附属、浏览器、注册日期等特征组成的用户训练数据。数据集在竞赛页面上免费提供，只需注册 Kaggle 即可。
- en: In this dataset, about 40% of all users have not made any bookings. Instead
    of trying to predict the country of destination (if any), we will try to predict
    whether a user has booked a reservation or not, therefore solving a binary classification
    problem.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个数据集中，大约40%的用户没有进行任何预订。我们将尝试预测用户是否进行了预订，而不是预测目的地国家（如果有的话），从而解决一个二分类问题。
- en: 'Using 100k rows for a training dataset and the AUC score we get the following
    performance results on the training dataset:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 使用10万行数据作为训练数据集，根据AUC分数，我们在训练数据集上获得了以下性能结果：
- en: 'Amazon Machine Learning SGD : 0.71'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Amazon Machine Learning SGD : 0.71'
- en: 'scikit SGD : 0.61'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'scikit SGD : 0.61'
- en: 'scikit RandomForest: 0.70'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'scikit RandomForest: 0.70'
- en: 'XGboost: 0.74'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'XGboost: 0.74'
- en: '*Note: This is by no means intended to be a benchmark. The results above are
    only intended as illustration.*'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意：这绝不是一个基准测试。以上结果仅用于说明。*'
- en: We tried several settings for SGD in scikit and could not get much closer to
    Amazon Machine Learning score. The scores were averaged over the initial validation
    30k samples created by Amazon Machine Learning and another heldout set of 50k
    samples.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们尝试了多种 SGD 设置，但未能更接近 Amazon Machine Learning 的分数。分数是基于 Amazon Machine Learning
    创建的初始验证30k样本和另一组50k样本进行平均的。
- en: No grid search was used for the Random Forest of the XGBoost classifiers. We
    used the default settings whenever possible.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: XGBoost 分类器的随机森林没有使用网格搜索。我们在可能的情况下使用了默认设置。
- en: What these results illustrate is that Amazon Machine Learning’s performances
    are as good as they can get when using a SGD classifier. The Amazon Machine Learning
    SGD outperforms Scikit-learn’s SGD. It is in the same ballpark as Random forest
    and is outperformed by XGboost. Similar performances have been observed in this
    [blog post](http://lenguyenthedat.com/minimal-data-science-2-avazu/#comment-2451032447).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这些结果表明，当使用 SGD 分类器时，Amazon Machine Learning 的性能达到了最佳水平。Amazon Machine Learning
    SGD 超越了 Scikit-learn 的 SGD。它与随机森林性能相近，但被 XGboost 超越。在这篇[博客文章](http://lenguyenthedat.com/minimal-data-science-2-avazu/#comment-2451032447)中也观察到了类似的表现。
- en: Conclusion
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论
- en: In conclusion Amazon Machine Learning is a great way for companies to quickly
    start data science projects. The service is performant and easy to use. But it
    is missing important model selection features, has a very restricted set of algorithms
    and long execution times.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，Amazon Machine Learning 是一个让公司快速启动数据科学项目的绝佳方式。该服务性能出色且易于使用。但它缺少重要的模型选择功能，算法种类非常有限，执行时间较长。
- en: Amazon Machine Learning’s simplified approach enables engineers to quickly implement
    predictive analytics services. Which in turns allows companies to experiment and
    assess the business value of Data science.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Machine Learning 的简化方法使工程师能够快速实现预测分析服务。这反过来允许公司进行实验并评估数据科学的商业价值。
- en: It is also an excellent platform to learn and practice machine learning concepts
    without worrying about algorithms and models. A good way for aspiring data scientist
    to experience a real although simplified, data science project workflow.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是一个很好的平台，可以学习和实践机器学习概念，而无需担心算法和模型。对于有志成为数据科学家的人员来说，这是体验真实（尽管简化过的）数据科学项目工作流程的好方法。
- en: The console-based workflow is slow. Using [SDKs](https://aws.amazon.com/sdk-for-python/)
    and [AWS CLI](http://docs.aws.amazon.com/cli/latest/reference/machinelearning/index.html)
    quickly becomes necessary.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 基于控制台的工作流程较慢。使用[SDKs](https://aws.amazon.com/sdk-for-python/)和[AWS CLI](http://docs.aws.amazon.com/cli/latest/reference/machinelearning/index.html)很快变得必要。
- en: Tuning the model to address under-fitting and overfitting issues is possible
    through regularization. However, there is no easy way to detect the presence of
    overfitting or under-fitting. Adding classic visualization such as learning curves
    would greatly facilitate model selection.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 通过正则化可以调整模型以解决欠拟合和过拟合问题。然而，没有简单的方法来检测过拟合或欠拟合的存在。添加经典的可视化，如学习曲线，将极大地促进模型选择。
- en: 'Bio: [Alex Perrier, Ph. D.](https://twitter.com/alexip) , is a Data Scientist,
    Software Engineer at Berklee Online and Contributor to ODSC. You can read more
    on his [Machine Learning blog](http://alexperrier.github.io).'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 简介：[亚历克斯·佩里埃博士](https://twitter.com/alexip)，是数据科学家、Berklee Online的软件工程师以及ODSC的贡献者。你可以在他的[机器学习博客](http://alexperrier.github.io)上阅读更多内容。
- en: '[Original](http://www.opendatascience.com/blog/amazon-machine-learning-nice-and-easy-or-overly-simple/).'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](http://www.opendatascience.com/blog/amazon-machine-learning-nice-and-easy-or-overly-simple/)。'
- en: '**Related:**'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[5 Best Machine Learning APIs for Data Science](/2015/11/machine-learning-apis-data-science.html)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学中5个最佳机器学习API](/2015/11/machine-learning-apis-data-science.html)'
- en: '[Standardizing the World of Machine Learning Web Service APIs](/2015/07/psi-machine-learning-web-service-apis.html)'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[标准化机器学习网络服务API的世界](/2015/07/psi-machine-learning-web-service-apis.html)'
- en: '[Cloud Machine Learning Wars: Amazon vs IBM Watson vs Microsoft Azure](/2015/04/cloud-machine-learning-amazon-ibm-watson-microsoft-azure.html)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[云机器学习战争：亚马逊 vs IBM Watson vs 微软Azure](/2015/04/cloud-machine-learning-amazon-ibm-watson-microsoft-azure.html)'
- en: '* * *'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织IT需求'
- en: '* * *'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[How to Make Large Language Models Play Nice with Your Software…](https://www.kdnuggets.com/how-to-make-large-language-models-play-nice-with-your-software-using-langchain)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何让大型语言模型与您的软件兼容……](https://www.kdnuggets.com/how-to-make-large-language-models-play-nice-with-your-software-using-langchain)'
- en: '[An Easy Guide to Choose the Right Machine Learning Algorithm](https://www.kdnuggets.com/2020/05/guide-choose-right-machine-learning-algorithm.html)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[选择合适的机器学习算法的简单指南](https://www.kdnuggets.com/2020/05/guide-choose-right-machine-learning-algorithm.html)'
- en: '[Learn how to design, measure and implement trustworthy A/B tests…](https://www.kdnuggets.com/2023/01/sphere-design-measure-implement-trustworthy-ab-tests-ronny-kohavi.html)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习如何设计、测量和实施可信的A/B测试……](https://www.kdnuggets.com/2023/01/sphere-design-measure-implement-trustworthy-ab-tests-ronny-kohavi.html)'
- en: '[Building a Recommender System for Amazon Products with Python](https://www.kdnuggets.com/2023/02/building-recommender-system-amazon-products-python.html)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用Python为亚马逊产品构建推荐系统](https://www.kdnuggets.com/2023/02/building-recommender-system-amazon-products-python.html)'
- en: '[Free Amazon Courses to Learn Generative AI: For All Levels](https://www.kdnuggets.com/free-amazon-courses-to-learn-generative-ai-for-all-levels)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[免费亚马逊课程学习生成式AI：适合所有级别](https://www.kdnuggets.com/free-amazon-courses-to-learn-generative-ai-for-all-levels)'
- en: '[Tick-Tock: Using Pendulum For Easy Date And Time Management In Python](https://www.kdnuggets.com/tick-tock-using-pendulum-for-easy-date-and-time-management-in-python)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[滴答：使用Pendulum进行Python中的日期和时间管理](https://www.kdnuggets.com/tick-tock-using-pendulum-for-easy-date-and-time-management-in-python)'
