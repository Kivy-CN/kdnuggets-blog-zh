- en: GitHub is the Best AutoML You Will Ever Need
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GitHub 是你所需的最佳 AutoML 解决方案
- en: 原文：[https://www.kdnuggets.com/2020/08/github-best-automl-ever-need.html](https://www.kdnuggets.com/2020/08/github-best-automl-ever-need.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/08/github-best-automl-ever-need.html](https://www.kdnuggets.com/2020/08/github-best-automl-ever-need.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Moez Ali](https://www.linkedin.com/in/profile-moez/), Founder & Author
    of PyCaret**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者：[Moez Ali](https://www.linkedin.com/in/profile-moez/)，PyCaret 创始人及作者**'
- en: '![Figure](../Images/1c266288614c3c6c6f7071109f5a5a22.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/1c266288614c3c6c6f7071109f5a5a22.png)'
- en: PyCaret — An open source, low-code machine learning library in Python!
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret — 一个开源、低代码的 Python 机器学习库！
- en: You may be wondering since when did GitHub get into the business of Automated
    Machine Learning. Well, it didn’t but you can use it for testing your personalized
    AutoML software. In this tutorial, we will show you how to build and containerize
    your own Automated Machine Learning software and test it on GitHub using Docker
    container.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会好奇 GitHub 什么时候开始涉足自动化机器学习业务的。其实，GitHub 并没有直接涉足，但你可以利用它来测试你的个性化 AutoML 软件。在本教程中，我们将展示如何构建和容器化自己的自动化机器学习软件，并使用
    Docker 容器在 GitHub 上进行测试。
- en: We will use PyCaret 2.0, an open source, low-code machine learning library in
    Python to develop a simple AutoML solution and deploy it as a Docker container
    using GitHub actions. If you haven’t heard about PyCaret before, you can read
    official announcement for PyCaret 2.0 [here](https://towardsdatascience.com/announcing-pycaret-2-0-39c11014540e) or
    check the detailed release notes [here](https://github.com/pycaret/pycaret/releases/tag/2.0).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 PyCaret 2.0，这是一款开源的低代码 Python 机器学习库，来开发一个简单的 AutoML 解决方案，并通过 GitHub Actions
    将其部署为 Docker 容器。如果你之前没有听说过 PyCaret，你可以在[这里](https://towardsdatascience.com/announcing-pycaret-2-0-39c11014540e)阅读
    PyCaret 2.0 的官方公告，或查看详细的发布说明[这里](https://github.com/pycaret/pycaret/releases/tag/2.0)。
- en: ???? Learning Goals of this Tutorial
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 本教程的学习目标
- en: Understanding what Automated Machine Learning is and how to build a simple AutoML
    software using PyCaret 2.0.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解什么是自动化机器学习以及如何使用 PyCaret 2.0 构建一个简单的 AutoML 软件。
- en: Understand what is a container and how to deploy your AutoML solution as a Docker
    container.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解什么是容器，以及如何将你的 AutoML 解决方案部署为 Docker 容器。
- en: What are GitHub actions and how can you use them to test your AutoML.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 GitHub Actions，如何使用它们来测试你的 AutoML。
- en: What is Automated Machine Learning?
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 什么是自动化机器学习？
- en: Automated machine learning (AutoML) is a process of automating the time consuming,
    iterative tasks of machine learning. It allows data scientists and analysts to
    build machine learning models with efficiency while sustaining the model quality.
    The final goal of any AutoML software is to finalize the best model based on some
    performance criteria.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化机器学习（AutoML）是一个自动化耗时、反复迭代的机器学习任务的过程。它允许数据科学家和分析师高效地构建机器学习模型，同时保持模型质量。任何 AutoML
    软件的最终目标是根据某些性能标准来确定最佳模型。
- en: Traditional machine learning model development process is resource-intensive,
    requiring significant domain knowledge and time to produce and compare dozens
    of models. With automated machine learning, you’ll accelerate the time it takes
    to develop production-ready ML models with great ease and efficiency.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的机器学习模型开发过程资源密集，要求显著的领域知识，并且需要大量时间来生成和比较几十个模型。通过自动化机器学习，你可以大大加快开发生产就绪 ML 模型的时间，过程轻松高效。
- en: There are many AutoML software out there, paid as well as open source. Almost
    all of them use the same collection of transformations and base algorithms. Hence
    the quality and performances of the models trained under such software are approximately
    the same.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 目前有许多 AutoML 软件，既有付费的也有开源的。几乎所有这些软件都使用相同的转换集合和基本算法。因此，在这些软件下训练的模型的质量和性能大致相同。
- en: Paid AutoML software as a service are very expensive and financially infeasible
    if you does not have dozens of use-cases in your back pocket. Managed machine
    learning as a service platforms are relatively less expensive, but they are often
    hard to use and require knowledge of the specific platform.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 付费的 AutoML 软件作为服务非常昂贵，如果你没有大量用例的话，经济上不可行。托管的机器学习服务平台相对便宜，但通常难以使用，并且需要对特定平台有了解。
- en: Among many other open source AutoML libraries, PyCaret is relatively a new library
    and has a unique low-code approach to machine learning. The design and functionality
    of PyCaret is simple, human friendly, and intuitive. In short amount of time,
    PyCaret was adopted by over 100,000 data scientists globally and we are a growing
    community of developers.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在众多开源 AutoML 库中，PyCaret 相对较新，具有独特的低代码机器学习方法。PyCaret 的设计和功能简单、对人友好且直观。在短时间内，PyCaret
    已被全球超过 100,000 名数据科学家采用，我们正在成为一个不断发展的开发者社区。
- en: How Does PyCaret works?
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PyCaret 是如何工作的？
- en: 'PyCaret is a workflow automation tool for supervised and unsupervised machine
    learning. It is organized into six modules and each module has a set of functions
    available to perform some specific action. Each function takes an input and returns
    an output, which in most cases is a trained machine learning model. Modules available
    as of the second release are:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 是一个用于监督和无监督机器学习的工作流自动化工具。它被组织为六个模块，每个模块都有一组可用于执行特定操作的功能。每个功能接受一个输入并返回一个输出，在大多数情况下是一个训练好的机器学习模型。第二版发布时提供的模块包括：
- en: '[Classification](https://www.pycaret.org/classification)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[分类](https://www.pycaret.org/classification)'
- en: '[Regression](https://www.pycaret.org/regression)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[回归分析](https://www.pycaret.org/regression)'
- en: '[Clustering](https://www.pycaret.org/clustering)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[聚类分析](https://www.pycaret.org/clustering)'
- en: '[Anomaly Detection](https://www.pycaret.org/anomaly-detection)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[异常检测](https://www.pycaret.org/anomaly-detection)'
- en: '[Natural Language Processing](https://www.pycaret.org/nlp)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[自然语言处理](https://www.pycaret.org/nlp)'
- en: '[Association Rule Mining](https://www.pycaret.org/association-rules)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[关联规则挖掘](https://www.pycaret.org/association-rules)'
- en: All modules in PyCaret supports data preparation (over 25+ essential preprocessing
    techniques, comes with a huge collection of untrained models & support for custom
    models, automatic hyperparameter tuning, model analysis and interpretability,
    automatic model selection, experiment logging and easy cloud deployment options.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 的所有模块支持数据准备（包括 25+ 种重要的数据预处理技术，提供大量未训练的模型和自定义模型支持，自动超参数调整，模型分析与解释，自动模型选择，实验记录和便捷的云部署选项）。
- en: '![Figure](../Images/e1bfc98d5038945c37c5b77cf7db884e.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/e1bfc98d5038945c37c5b77cf7db884e.png)'
- en: '[https://www.pycaret.org/guide](https://www.pycaret.org/guide)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.pycaret.org/guide](https://www.pycaret.org/guide)'
- en: To learn more about PyCaret, [click here](https://towardsdatascience.com/announcing-pycaret-2-0-39c11014540e) to
    read our official release announcement.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于 PyCaret 的信息，[点击这里](https://towardsdatascience.com/announcing-pycaret-2-0-39c11014540e)
    阅读我们的官方发布公告。
- en: If you want to get started in Python, [click here](https://github.com/pycaret/pycaret/tree/master/examples) to
    see a gallery of example notebooks to get started.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在 Python 中入门，[点击这里](https://github.com/pycaret/pycaret/tree/master/examples)
    查看一个示例笔记本的画廊以便开始。
- en: ???? Before we start
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 在我们开始之前
- en: Let’s understand the following terminologies before starting to build an AutoML
    software. At this point all you need is some basic theoretical knowledge of these
    tools / terms that we are using in this tutorial. If you would like to go in more
    details, there are links at the end of this tutorial for you to explore later.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始构建 AutoML 软件之前，让我们理解以下术语。此时你只需对本教程中使用的工具/术语有一些基本的理论知识。如果你希望深入了解，可以在本教程的末尾找到链接以供稍后探索。
- en: '**Container**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**容器**'
- en: '**Containers** provide a portable and consistent environment that can be deployed
    rapidly in different environments to maximize the accuracy, performance, and efficiency
    of **machine learning** applications. Environment contains run-time language (for
    e.g. Python), all the libraries, and the dependencies of your application.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**容器** 提供一个可移植且一致的环境，可以在不同环境中快速部署，以最大化 **机器学习** 应用的准确性、性能和效率。环境包含运行时语言（例如 Python）、所有库和应用程序的依赖项。'
- en: '**Docker**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**Docker**'
- en: Docker is a company that provides software (also called Docker) that allows
    users to build, run, and manage containers. While Docker’s container are the most
    common, there are other less famous *alternatives* such as [LXD](https://linuxcontainers.org/lxd/introduction/) and [LXC](https://linuxcontainers.org/) that
    also provide container solution.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 是一家提供软件（也称为 Docker）的公司，允许用户构建、运行和管理容器。虽然 Docker 的容器是最常见的，但还有其他不太知名的 *替代品*，如
    [LXD](https://linuxcontainers.org/lxd/introduction/) 和 [LXC](https://linuxcontainers.org/)，也提供容器解决方案。
- en: '**GitHub**'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**GitHub**'
- en: '[GitHub](https://www.github.com/) is a cloud-based service that is used to
    host, manage and control code. Imagine you are working in a large team where multiple
    people (sometime in hundreds) are making changes on the same code base. PyCaret
    is itself an example of an open-source project where hundreds of community developers
    are continuously contributing to source code. If you haven’t used GitHub before,
    you can [sign up](https://github.com/join) for a free account.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[GitHub](https://www.github.com/) 是一个基于云的服务，用于托管、管理和控制代码。假设你在一个大型团队中工作，其中有多人（有时达到几百人）在对相同的代码库进行更改。PyCaret
    本身就是一个开源项目的例子，数百名社区开发者不断为源代码做贡献。如果你以前没有使用过 GitHub，你可以 [注册](https://github.com/join)
    免费账户。'
- en: '**GitHub Actions**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**GitHub Actions**'
- en: GitHub Actions help you automate your software development workflows in the
    same place you store code and collaborate on pull requests and issues. You can
    write individual tasks, called actions, and combine them to create a custom workflow.
    Workflows are custom automated processes that you can set up in your repository
    to build, test, package, release, or deploy any code project on GitHub.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Actions 帮助你在存储代码和协作处理拉取请求及问题的同一个地方自动化你的软件开发工作流。你可以编写单独的任务，称为动作，并将它们组合起来创建自定义工作流。工作流是你可以在仓库中设置的自定义自动化过程，用于构建、测试、打包、发布或部署任何
    GitHub 上的代码项目。
- en: ???? Let’s get started
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 让我们开始吧
- en: Objective
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 目标
- en: To train and select the best performing regression model that predicts patient
    charges based on the other variables in the dataset i.e. age, sex, bmi, children,
    smoker, and region.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 训练并选择最佳表现的回归模型，该模型基于数据集中的其他变量（即年龄、性别、体质指数、子女、吸烟者和地区）预测患者费用。
- en: ???? **Step 1 — Develop app.py**
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? **第 1 步 — 开发 app.py**
- en: This is the main file for AutoML, which is also an entry point for Dockerfile
    (see below in step 2). If you have used PyCaret before then this code must be
    self-explanatory to you.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 AutoML 的主要文件，也是 Dockerfile 的入口点（见下文第 2 步）。如果你以前使用过 PyCaret，那么这段代码对你来说应该是不言自明的。
- en: First five lines are about importing libraries and variables from the environment.
    Next three lines are for reading data as *pandas* dataframe. Line 12 to Line 15
    is to import the relevant module based on environment variable and Line 17 onwards
    is about PyCaret’s functions to initialize the environment, compare base models
    and to save the best performing model on your device. The last line downloads
    the experiment logs as a csv file.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 前五行是关于从环境中导入库和变量的。接下来的三行用于读取数据为 *pandas* 数据框。第 12 行到第 15 行是根据环境变量导入相关模块，第 17
    行及之后的部分涉及 PyCaret 的功能，用于初始化环境、比较基础模型并将最佳表现的模型保存到你的设备上。最后一行将实验日志下载为 csv 文件。
- en: ???? Step 2— Create Dockerfile
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 第 2 步— 创建 Dockerfile
- en: Dockerfile is just a file with a few lines of instructions that are saved in
    your project folder with name “Dockerfile” (case-sensitive and no extension).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Dockerfile 只是一个包含几行指令的文件，这些指令保存在你的项目文件夹中，文件名为“Dockerfile”（区分大小写，无扩展名）。
- en: Another way to think about a Docker file is that it is like a recipe you have
    invented in your own kitchen. When you share such recipe with others and if they
    follow the exact same instructions in the recipe, they will able to reproduce
    the same dish with same quality. Similarly, you can share your docker file with
    others, who can then create images and run containers based on that docker file.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种理解 Docker 文件的方法是，它就像是你在自己厨房里发明的食谱。当你与他人分享这样的食谱，并且他们按照食谱中的确切指示进行操作时，他们将能够重现相同质量的菜肴。同样，你可以与他人分享你的
    Docker 文件，他们可以基于该 Docker 文件创建镜像并运行容器。
- en: 'This Docker file for this project is simple and consist of 6 lines only. See
    below:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目的 Docker 文件很简单，仅包含 6 行。见下文：
- en: The first line in the Dockerfile imports the python:3.7-slim image. Next four
    lines create an app folder, update **libgomp1 **library, and install all the requirements
    from the **requirements.txt **file which in this case only requires pycaret. Finally,
    the last two lines define the entry point of your application; this means that
    when the container starts, it will execute the **app.py** file that we earlier
    saw above in step 1.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Dockerfile 中的第一行导入了 python:3.7-slim 镜像。接下来的四行创建了一个应用程序文件夹，更新了 **libgomp1** 库，并从
    **requirements.txt** 文件中安装所有要求，这里只需要 pycaret。最后两行定义了应用程序的入口点；这意味着当容器启动时，它将执行我们在第
    1 步中看到的 **app.py** 文件。
- en: ???? Step 3 — Create action.yml
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 第 3 步 — 创建 action.yml
- en: Docker actions require a metadata file. The metadata filename must be either `action.yml` or `action.yaml`.
    The data in the metadata file defines the inputs, outputs and main entrypoint
    for your action. Action file uses YAML syntax.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Docker actions 需要一个元数据文件。元数据文件名必须是`action.yml`或`action.yaml`。元数据文件中的数据定义了你的动作的输入、输出和主要入口点。动作文件使用
    YAML 语法。
- en: Environment variable dataset, target, and usecase are all declared in line 6,
    9, and 14 respectively. See line 4–6 of app.py to understand how we have used
    these environment variables in our app.py file.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 环境变量 dataset、target 和 usecase 分别在第 6、9 和 14 行声明。查看 app.py 的第 4-6 行，以了解我们如何在
    app.py 文件中使用这些环境变量。
- en: ???? Step 4 — Publish action on GitHub
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 第 4 步 — 在 GitHub 上发布动作
- en: 'At this point your project folder should look like this:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 此时你的项目文件夹应如下所示：
- en: '![Figure](../Images/16acdcc5339565ec188a08a18dafd493.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/16acdcc5339565ec188a08a18dafd493.png)'
- en: '[https://github.com/pycaret/pycaret-git-actions](https://github.com/pycaret/pycaret-git-actions)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/pycaret/pycaret-git-actions](https://github.com/pycaret/pycaret-git-actions)'
- en: 'Click on **‘Releases’**:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**‘Releases’**：
- en: '![Figure](../Images/e009338b6ce68ef034e824c83ad6ce44.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/e009338b6ce68ef034e824c83ad6ce44.png)'
- en: GitHub Action — Click on Releases
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Action — 点击 Releases
- en: 'Draft a new release:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 草拟一个新版本：
- en: '![Figure](../Images/b7ffe2205eaae51c95a13a6f00e1a827.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/b7ffe2205eaae51c95a13a6f00e1a827.png)'
- en: GitHub Action — Draft a new release
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Action — 草拟一个新版本
- en: 'Fill in the details (tag, release title and description) and click on **‘Publish
    release’**:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 填写详细信息（标签、版本标题和描述），然后点击**‘Publish release’**：
- en: '![Figure](../Images/7c1fadf219949087d48a2a3c00ede469.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/7c1fadf219949087d48a2a3c00ede469.png)'
- en: GitHub Action — Publish release
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Action — 发布版本
- en: 'Once published click on release and then click on **‘Marketplace’**:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 发布后，点击版本，然后点击**‘Marketplace’**：
- en: '![Figure](../Images/c55d89bf90ac457d5e543bdfa39542d8.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/c55d89bf90ac457d5e543bdfa39542d8.png)'
- en: GitHub Action — Marketplace
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Action — 市场
- en: 'Click on **‘Use latest version’**:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**‘Use latest version’**：
- en: '![Figure](../Images/0a6f9a8a5bb232fa33c943d1a516deec.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/0a6f9a8a5bb232fa33c943d1a516deec.png)'
- en: GitHub Action — use latest version
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Action — 使用最新版本
- en: 'Save this information, this is the installation details of your software. This
    is what you will need to install this software on any public GitHub repository:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 保存这些信息，这些是你软件的安装细节。这是你在任何公共 GitHub 仓库上安装此软件所需的信息：
- en: '![Figure](../Images/f6f327c28a408260b35079d84b963883.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/f6f327c28a408260b35079d84b963883.png)'
- en: GitHub Action — installation
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Action — 安装
- en: ???? Step 5— Install software on GitHub repository
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 第 5 步 — 在 GitHub 仓库中安装软件
- en: To install and test the software we just created, we have created a new repository [**pycaret-automl-test**](https://github.com/pycaret/pycaret-automl-test)and
    uploaded a few sample datasets for classification and regression.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 为了安装和测试我们刚创建的软件，我们创建了一个新的仓库[**pycaret-automl-test**](https://github.com/pycaret/pycaret-automl-test)，并上传了一些分类和回归的样本数据集。
- en: 'To install the software that we published in the previous step, click on ‘**Actions**’:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装我们在上一步骤发布的软件，请点击‘**Actions**’：
- en: '![Figure](../Images/ee2dfb44c190d0792c0e27de72637ad9.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/ee2dfb44c190d0792c0e27de72637ad9.png)'
- en: '[https://github.com/pycaret/pycaret-automl-test/tree/master](https://github.com/pycaret/pycaret-automl-test/tree/master)![Figure](../Images/f0196468e435234efec1bbab703eea17.png)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/pycaret/pycaret-automl-test/tree/master](https://github.com/pycaret/pycaret-automl-test/tree/master)
    ![图](../Images/f0196468e435234efec1bbab703eea17.png)'
- en: Get started with GitHub Actions
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 开始使用 GitHub Actions
- en: Click on ‘**set up a workflow yourself**’ and copy this script into the editor
    and click on **‘Start commit’**.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 点击‘**set up a workflow yourself**’，将此脚本复制到编辑器中，然后点击**‘Start commit’**。
- en: This is an instruction file for GitHub to execute. First action starts from
    line 9\. Line 9 to 15 is an action to install and execute the software we previously
    developed. Line 11 is where we have referenced the name of the software (see the
    last part of step 4 above). Line 13 to 15 is action to define environment variables
    such as the name of the dataset (csv file must be uploaded on the repository),
    name of the target variable, and usecase type. Line 16 onwards is another action
    from [this repository](https://github.com/actions/upload-artifact) to upload three
    files model.pkl, experiment logs as csv file, and system logs as a .log file.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个供 GitHub 执行的指令文件。第一个动作从第 9 行开始。第 9 行到 15 行是安装和执行我们之前开发的软件的操作。第 11 行是我们引用软件名称的地方（参见上述第
    4 步的最后部分）。第 13 行到 15 行是定义环境变量的操作，如数据集的名称（csv 文件必须上传到仓库）、目标变量的名称和用例类型。从第 16 行开始是另一个来自 [this
    repository](https://github.com/actions/upload-artifact) 的操作，用于上传三个文件 model.pkl、实验日志（csv
    文件）和系统日志（.log 文件）。
- en: 'Once you start commit, click on **‘actions’**:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦开始提交，请点击 **‘actions’**：
- en: '![Figure](../Images/3beebc77410d21d43509c9b502a0e733.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/3beebc77410d21d43509c9b502a0e733.png)'
- en: GitHub Action — Workflows
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Action — 工作流
- en: This is where you can monitor the logs of your build as its building and once
    the workflow is completed, you can collect your files from this location as well.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您可以在构建时监控日志的地方，一旦工作流完成，您也可以从此位置收集您的文件。
- en: '![Figure](../Images/800d6a90d25a0ee03bd0ce1008e8d662.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/800d6a90d25a0ee03bd0ce1008e8d662.png)'
- en: GitHub Action — Workflow build logs![Figure](../Images/c75ea889f28bef8b11a40acbd8f87d14.png)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Action — 工作流构建日志![图示](../Images/c75ea889f28bef8b11a40acbd8f87d14.png)
- en: GitHub Action — Run Details
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Action — 运行详情
- en: You can download the files and unzip it on your device.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以下载文件并在您的设备上解压。
- en: '**File: model**'
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**文件：model**'
- en: This is a .pkl file for the final model along with the entire transformation
    pipeline. You can use this file to generate predictions on new dataset using predict_model
    function. To learn more about it, [click here](https://www.pycaret.org/predict-model).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个包含最终模型及整个转换管道的 .pkl 文件。您可以使用此文件通过 predict_model 函数在新数据集上生成预测。要了解更多信息，请 [点击这里](https://www.pycaret.org/predict-model)。
- en: 'File: experiment-logs'
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文件：experiment-logs
- en: This is a .csv file that has all the details you will ever need for your model.
    It contains all the models that were trained in app.py script, their performance
    metrics, hyperparameters and other important meta data.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个 .csv 文件，其中包含您模型所需的所有详细信息。它包含在 app.py 脚本中训练的所有模型、它们的性能指标、超参数和其他重要的元数据。
- en: '![Figure](../Images/9f17497ecf00625a43f33aba23845e7f.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/9f17497ecf00625a43f33aba23845e7f.png)'
- en: experiment log file
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 实验日志文件
- en: 'File: system-logs'
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文件：system-logs
- en: This is a system logs file that PyCaret has generated. This can be used for
    auditing the process. It contains important meta deta information and is very
    useful for troubleshooting errors in your software.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 PyCaret 生成的系统日志文件。它可用于审计过程。它包含重要的元数据，并且对故障排除软件错误非常有用。
- en: '![Figure](../Images/3c2500358ce61e6ba505a2737c0deae1.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/3c2500358ce61e6ba505a2737c0deae1.png)'
- en: System logs file generated by PyCaret
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 由 PyCaret 生成的系统日志文件
- en: '**Disclosure**'
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**披露**'
- en: GitHub Actions enables you to create custom software development lifecycle workflows
    directly in your GitHub repository. Each Account comes with included compute and
    storage quantities for use with Actions, depending on your Account plan, which
    can be found in the [Actions documentation](https://docs.github.com/en/github/automating-your-workflow-with-github-actions/about-github-actions#about-github-actions).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Actions 使您能够直接在您的 GitHub 仓库中创建自定义软件开发生命周期工作流。每个帐户都包含用于 Actions 的计算和存储配额，具体取决于您的帐户计划，可以在 [Actions
    文档](https://docs.github.com/en/github/automating-your-workflow-with-github-actions/about-github-actions#about-github-actions) 中找到。
- en: 'Actions and any elements of the Action service may not be used in violation
    of the Agreement, the [Acceptable Use Policy](https://docs.github.com/en/github/site-policy/github-acceptable-use-policies),
    or the GitHub Actions [service limitations](https://docs.github.com/en/github/automating-your-workflow-with-github-actions/about-github-actions#usage-limits).
    Additionally, Actions should not be used for:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 操作及任何 Action 服务的元素不得违反协议、[可接受使用政策](https://docs.github.com/en/github/site-policy/github-acceptable-use-policies)
    或 GitHub Actions [服务限制](https://docs.github.com/en/github/automating-your-workflow-with-github-actions/about-github-actions#usage-limits)。此外，不应将
    Actions 用于：
- en: cryptomining;
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密货币挖矿；
- en: serverless computing;
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无服务器计算；
- en: using our servers to disrupt, or to gain or to attempt to gain unauthorized
    access to, any service, device, data, account or network (other than those authorized
    by the [GitHub Bug Bounty program](https://bounty.github.com/))
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用我们的服务器干扰或获取、或尝试获取任何服务、设备、数据、账户或网络（除了由[GitHub 漏洞赏金计划](https://bounty.github.com/)授权的）
- en: the provision of a stand-alone or integrated application or service offering
    Actions or any elements of Actions for commercial purposes; or,
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供单独或集成的应用程序或服务，提供 Actions 或任何 Actions 元素用于商业目的；或，
- en: any other activity unrelated to the production, testing, deployment, or publication
    of the software project associated with the repository where GitHub Actions are
    used.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何与关联的存储库中的软件项目的生产、测试、部署或发布无关的活动。
- en: In order to prevent violations of these limitations and abuse of GitHub Actions,
    GitHub may monitor your use of GitHub Actions. Misuse of GitHub Actions may result
    in termination of jobs, or restrictions in your ability to use GitHub Actions.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止这些限制的违反和对 GitHub Actions 的滥用，GitHub 可能会监控你对 GitHub Actions 的使用。滥用 GitHub
    Actions 可能会导致作业终止，或限制你使用 GitHub Actions 的能力。
- en: '**Repositories used in this tutorial:**'
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**本教程中使用的存储库：**'
- en: '[**pycaret/pycaret-git-actions**](https://github.com/pycaret/pycaret-git-actions)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '[**pycaret/pycaret-git-actions**](https://github.com/pycaret/pycaret-git-actions)'
- en: '[**pycaret/pycaret-automl-test**](https://github.com/pycaret/pycaret-automl-test)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[**pycaret/pycaret-automl-test**](https://github.com/pycaret/pycaret-automl-test)'
- en: There is no limit to what you can achieve using this light-weight workflow automation
    library in Python. If you find this useful, please do not forget to give us ⭐️
    on our github repo.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个轻量级的 Python 工作流自动化库，你可以实现无限的可能。如果你觉得有用，请不要忘记在我们的 GitHub 仓库上给我们 ⭐️。
- en: To hear more about PyCaret follow us on [LinkedIn](https://www.linkedin.com/company/pycaret/) and [Youtube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于 PyCaret 的信息，请关注我们的[LinkedIn](https://www.linkedin.com/company/pycaret/)和[YouTube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g)。
- en: If you would like to learn more about PyCaret 2.0, read this [announcement](https://towardsdatascience.com/announcing-pycaret-2-0-39c11014540e).
    If you have used PyCaret before, you might be interested in [release notes](https://github.com/pycaret/pycaret/releases/tag/2.0) for
    current release.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于 PyCaret 2.0 的信息，请阅读这个[公告](https://towardsdatascience.com/announcing-pycaret-2-0-39c11014540e)。如果你之前使用过
    PyCaret，你可能会对当前版本的[发布说明](https://github.com/pycaret/pycaret/releases/tag/2.0)感兴趣。
- en: 'You may also be interested it:'
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你也许会对以下内容感兴趣：
- en: '[Build your own AutoML in Power BI using PyCaret 2.0](https://towardsdatascience.com/build-your-own-automl-in-power-bi-using-pycaret-8291b64181d)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 2.0 在 Power BI 中构建自己的 AutoML](https://towardsdatascience.com/build-your-own-automl-in-power-bi-using-pycaret-8291b64181d)'
- en: '[Deploy Machine Learning Pipeline on Azure using Docker](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-cloud-using-docker-container-bec64458dc01)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 Docker 在 Azure 上部署机器学习管道](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-cloud-using-docker-container-bec64458dc01)'
- en: '[Deploy Machine Learning Pipeline on Google Kubernetes Engine](https://towardsdatascience.com/deploy-machine-learning-model-on-google-kubernetes-engine-94daac85108b)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 Google Kubernetes Engine 上部署机器学习管道](https://towardsdatascience.com/deploy-machine-learning-model-on-google-kubernetes-engine-94daac85108b)'
- en: '[Deploy Machine Learning Pipeline on AWS Fargate](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-aws-fargate-eb6e1c50507)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 AWS Fargate 上部署机器学习管道](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-aws-fargate-eb6e1c50507)'
- en: '[Build and deploy your first machine learning web app](https://towardsdatascience.com/build-and-deploy-your-first-machine-learning-web-app-e020db344a99)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[构建和部署你的第一个机器学习 Web 应用](https://towardsdatascience.com/build-and-deploy-your-first-machine-learning-web-app-e020db344a99)'
- en: '[Deploy PyCaret and Streamlit app using AWS Fargate serverless](https://towardsdatascience.com/deploy-pycaret-and-streamlit-app-using-aws-fargate-serverless-infrastructure-8b7d7c0584c2)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 AWS Fargate 无服务器部署 PyCaret 和 Streamlit 应用](https://towardsdatascience.com/deploy-pycaret-and-streamlit-app-using-aws-fargate-serverless-infrastructure-8b7d7c0584c2)'
- en: '[Build and deploy machine learning web app using PyCaret and Streamlit](https://towardsdatascience.com/build-and-deploy-machine-learning-web-app-using-pycaret-and-streamlit-28883a569104)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 和 Streamlit 构建和部署机器学习 Web 应用](https://towardsdatascience.com/build-and-deploy-machine-learning-web-app-using-pycaret-and-streamlit-28883a569104)'
- en: '[Deploy Machine Learning App built using Streamlit and PyCaret on GKE](https://towardsdatascience.com/deploy-machine-learning-app-built-using-streamlit-and-pycaret-on-google-kubernetes-engine-fd7e393d99cb)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 GKE 上部署使用 Streamlit 和 PyCaret 构建的机器学习应用](https://towardsdatascience.com/deploy-machine-learning-app-built-using-streamlit-and-pycaret-on-google-kubernetes-engine-fd7e393d99cb)'
- en: Important Links
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重要链接
- en: '[Blog](https://medium.com/@moez_62905)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '[博客](https://medium.com/@moez_62905)'
- en: '[Release Notes for PyCaret 2.0](https://github.com/pycaret/pycaret/releases/tag/2.0)'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '[PyCaret 2.0 版本说明](https://github.com/pycaret/pycaret/releases/tag/2.0)'
- en: '[User Guide / Documentation](https://www.pycaret.org/guide)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '[用户指南 / 文档](https://www.pycaret.org/guide)'
- en: '[Github](https://www.github.com/pycaret/pycaret)'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[Github](https://www.github.com/pycaret/pycaret)'
- en: '[Stackoverflow](https://stackoverflow.com/questions/tagged/pycaret)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[Stackoverflow](https://stackoverflow.com/questions/tagged/pycaret)'
- en: '[Install PyCaret](https://www.pycaret.org/install)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[安装 PyCaret](https://www.pycaret.org/install)'
- en: '[Notebook Tutorials](https://www.pycaret.org/tutorial)'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '[笔记本教程](https://www.pycaret.org/tutorial)'
- en: '[Contribute in PyCaret](https://www.pycaret.org/contribute)'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 PyCaret 中贡献](https://www.pycaret.org/contribute)'
- en: Want to learn about a specific module?
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 想要了解特定模块？
- en: Click on the links below to see the documentation and working examples.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 点击下面的链接查看文档和工作示例。
- en: '[Classification](https://www.pycaret.org/classification)'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '[分类](https://www.pycaret.org/classification)'
- en: '[Regression](https://www.pycaret.org/regression)'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '[回归](https://www.pycaret.org/regression)'
- en: '[Clustering](https://www.pycaret.org/clustering)'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[聚类](https://www.pycaret.org/clustering)'
- en: '[Anomaly Detection](https://www.pycaret.org/anomaly-detection)'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '[异常检测](https://www.pycaret.org/anomaly-detection)'
- en: '[Natural Language Processing](https://www.pycaret.org/nlp)'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '[自然语言处理](https://www.pycaret.org/nlp)'
- en: '[Association Rule Mining](https://www.pycaret.org/association-rules)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '[关联规则挖掘](https://www.pycaret.org/association-rules)'
- en: '**Bio: [Moez Ali](https://www.linkedin.com/in/profile-moez/)** is a Data Scientist,
    and is Founder & Author of PyCaret.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介: [Moez Ali](https://www.linkedin.com/in/profile-moez/)** 是一位数据科学家，同时也是
    PyCaret 的创始人和作者。'
- en: '[Original](https://towardsdatascience.com/github-is-the-best-automl-you-will-ever-need-5331f671f105).
    Reposted with permission.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/github-is-the-best-automl-you-will-ever-need-5331f671f105)。已获许可转载。'
- en: '**Related:**'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关:**'
- en: '[Announcing PyCaret 2.0](/2020/08/announcing-pycaret-2.html)'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[宣布 PyCaret 2.0](/2020/08/announcing-pycaret-2.html)'
- en: '[5 Things You Don’t Know About PyCaret](/2020/07/5-things-pycaret.html)'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[你不知道的5件关于 PyCaret 的事](/2020/07/5-things-pycaret.html)'
- en: '[Deploy a Machine Learning Pipeline to the Cloud Using a Docker Container](/2020/06/deploy-machine-learning-pipeline-cloud-docker.html)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将机器学习管道部署到使用 Docker 容器的云端](/2020/06/deploy-machine-learning-pipeline-cloud-docker.html)'
- en: '* * *'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织IT'
- en: '* * *'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Everything You’ve Ever Wanted to Know About Machine Learning](https://www.kdnuggets.com/2022/09/everything-youve-ever-wanted-to-know-about-machine-learning.html)'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[关于机器学习你想知道的一切](https://www.kdnuggets.com/2022/09/everything-youve-ever-wanted-to-know-about-machine-learning.html)'
- en: '[KDnuggets News, September 14: Free Python for Data Science Course •…](https://www.kdnuggets.com/2022/n36.html)'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻，9月14日：免费数据科学Python课程 •…](https://www.kdnuggets.com/2022/n36.html)'
- en: '[The Top AutoML Frameworks You Should Consider in 2023](https://www.kdnuggets.com/2023/05/best-automl-frameworks-2023.html)'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2023年你应该考虑的顶级AutoML框架](https://www.kdnuggets.com/2023/05/best-automl-frameworks-2023.html)'
- en: '[How to Grow as a Data Scientist in an Ever-Changing World](https://www.kdnuggets.com/2022/01/grow-data-scientist-everchanging-world.html)'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何在不断变化的世界中成长为数据科学家](https://www.kdnuggets.com/2022/01/grow-data-scientist-everchanging-world.html)'
- en: '[IMPACT: The Data Observability Summit is back November 8th and the…](https://www.kdnuggets.com/2023/10/monte-carlo-impact-the-data-observability-summit-is-back)'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[IMPACT: 数据可观察性峰会将于11月8日重磅回归…](https://www.kdnuggets.com/2023/10/monte-carlo-impact-the-data-observability-summit-is-back)'
- en: '[No Brainer AutoML with AutoXGB](https://www.kdnuggets.com/2022/02/no-brainer-automl-autoxgb.html)'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[无需脑力的AutoML与AutoXGB](https://www.kdnuggets.com/2022/02/no-brainer-automl-autoxgb.html)'
