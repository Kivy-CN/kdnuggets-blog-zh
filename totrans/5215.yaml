- en: The Last SQL Guide for Data Analysis You’ll Ever Need
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你所需的最后一本 SQL 数据分析指南
- en: 原文：[https://www.kdnuggets.com/2019/10/last-sql-guide-data-analysis-ever-need.html](https://www.kdnuggets.com/2019/10/last-sql-guide-data-analysis-ever-need.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/10/last-sql-guide-data-analysis-ever-need.html](https://www.kdnuggets.com/2019/10/last-sql-guide-data-analysis-ever-need.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Muhsin Warfa](https://www.linkedin.com/in/muhsinwarfa/), Systems Developer/Technical
    Writer**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Muhsin Warfa](https://www.linkedin.com/in/muhsinwarfa/)，系统开发员/技术写作人**'
- en: '![Figure](../Images/487f5a9c2b02e6c40b505f658dda8f7e.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/487f5a9c2b02e6c40b505f658dda8f7e.png)'
- en: Photo by [Tobias Fischer](https://unsplash.com/@tofi?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/database?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Tobias Fischer](https://unsplash.com/@tofi?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    提供，来自 [Unsplash](https://unsplash.com/s/photos/database?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: '* * *'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三名课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业轨道'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织进行 IT 工作'
- en: '* * *'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: By 2020, it’s estimated that 1.7 MB of data will be created every second for
    every person on earth. Absurd! Data is going to be the new oil of our digital
    era. The growth of data creates a need to make meaning out of it. This has spawned
    many professions which manage and analyze data to make smarter business decisions.
    Many of these professions require you to be proficient in managing data in databases.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 到 2020 年，预计每秒将为地球上的每个人创造 1.7 MB 的数据。真是荒谬！数据将成为我们数字时代的新石油。数据的增长带来了从中提取意义的需求。这催生了许多职业，这些职业管理和分析数据以做出更明智的商业决策。许多这些职业要求你熟练管理数据库中的数据。
- en: Introduction
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 介绍
- en: A common way to manage data is with a relational database management system.
    A relational database stores data in a tabular form consisting of rows and columns.
    These databases usually consist of both data and metadata. Data is the information
    stored in the tables while metadata is the data that describes the data’s structure
    or data types within the database.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 管理数据的一种常见方式是使用关系型数据库管理系统。关系型数据库以表格形式存储数据，由行和列组成。这些数据库通常包括数据和元数据。数据是存储在表中的信息，而元数据是描述数据库中数据结构或数据类型的数据。
- en: To be able to communicate with these databases directly, we use SQL, which is
    an abbreviation for Structured Query Language. SQL is used to perform tasks such
    as creating, reading, updating, and deleting tables in a database.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能直接与这些数据库沟通，我们使用 SQL，它是结构化查询语言（Structured Query Language）的缩写。SQL 用于执行如创建、读取、更新和删除数据库中的表等任务。
- en: SQL is a declarative and domain-specific language mostly used by business analysts,
    software engineers, data analysts, and many other professions that make use of
    data. You don’t need to be a programmer or know programming languages such as
    Python to master SQL. SQL’s syntax is similar to English. With a little bit of
    memorization of simple syntax, you’re ready to work comfortably with database
    systems.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: SQL 是一种声明式且特定领域的语言，主要由商业分析师、软件工程师、数据分析师以及许多其他利用数据的职业使用。你不需要成为程序员或了解如 Python
    等编程语言才能掌握 SQL。SQL 的语法类似于英语。只需记住一些简单的语法，你就能舒适地使用数据库系统。
- en: “Declarative programming is where you say what you want without having to say
    how to do it. With procedural programming, you have to specify exact steps to
    get the result.” — Stack Overflow
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “声明式编程是你说出你想要的结果，而无需说明如何做到这一点。与过程式编程相比，你必须指定获得结果的确切步骤。” — Stack Overflow
- en: My objective in this article is to get you comfortable with SQL and to cover
    SQL concepts individually while simultaneously coming up with queries to handle
    the database.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这篇文章中的目标是让你熟悉SQL，并逐一介绍SQL概念，同时提出处理数据库的查询。
- en: Database Setup
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据库设置
- en: In this tutorial, we won’t use an RDBMS (relational database management system),
    but rather use a test database to write our own queries. We’ll edit the test database
    using W3school’s SQL editor found [here](https://www.w3schools.com/sql/trysql.asp?filename=trysql_select_all).
    It requires no installation so we can just focus on writing queries.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们不会使用关系数据库管理系统（RDBMS），而是使用测试数据库来编写我们自己的查询。我们将使用W3school的SQL编辑器编辑测试数据库，链接见[这里](https://www.w3schools.com/sql/trysql.asp?filename=trysql_select_all)。它无需安装，因此我们可以专注于编写查询。
- en: '**Cheatsheet**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**备忘单**'
- en: Since SQL is a declarative language, it’ll help immensely if we memorize the
    SQL statements. Having a reference guide nearby at all times will help quickly
    grasp the keywords used in querying the tables. [Here](https://docs.google.com/spreadsheets/d/1_HkCVTOpkaDPzg4dmFLJRYQhODKiVBRdX7F3GUI6O3s/edit?usp=sharing) is
    a spreadsheet of keywords that I created for reference. Remember, half the battle
    of leashing this SQL beast is memorizing/knowing the keywords.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 由于SQL是一种声明性语言，记住SQL语句将大有帮助。随时保持一份参考指南，将有助于快速掌握查询表格时使用的关键字。[这里](https://docs.google.com/spreadsheets/d/1_HkCVTOpkaDPzg4dmFLJRYQhODKiVBRdX7F3GUI6O3s/edit?usp=sharing)是我创建的关键字电子表格，供参考。记住，掌握这只SQL猛兽的一半战斗就是记住/了解关键字。
- en: '**Data Definition Language (DDL)**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据定义语言（DDL）**'
- en: 'Most of our queries will involve some form of *action* to be performed on a
    table. Actions fall into four categories: creating, inserting, updating and deleting
    tables.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的大多数查询将涉及对表格执行某种形式的*操作*。操作分为四类：创建、插入、更新和删除表格。
- en: '**Creating a table**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**创建表格**'
- en: 'When we want to create tables in a database, we use the `CREATE TABLE`statement.
    Type the following code into the editor:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们想在数据库中创建表格时，使用`CREATE TABLE`语句。将以下代码输入编辑器：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This creates a table named `countries` that has four columns. The minimum that
    is required to create a table in SQL is to state the column name, the data types,
    and length. You can, of course, have more characteristics such as `Not Null` meaning
    an empty value won't be entered in the table, but these are optional attributes.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个名为`countries`的表格，其中包含四列。创建SQL表格的最低要求是指定列名、数据类型和长度。当然，你还可以拥有更多特性，如`Not
    Null`，意味着表格中不会输入空值，但这些是可选属性。
- en: Working with Tables
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 与表格一起工作
- en: '**Insert a table**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**插入表格**'
- en: 'After creating a table we can insert rows by using the `INSERT INTO`method
    statement. Type in the following code:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 创建表格后，我们可以使用`INSERT INTO`方法语句插入行。输入以下代码：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This statement adds `Somali` as a new country into the `countries` table. It
    is a good practice to specify the column names and values when inserting rows
    into the table.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 该语句将`Somali`作为新国家添加到`countries`表格中。在插入行时，指定列名和值是一个好习惯。
- en: '**Read a table**'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**读取表格**'
- en: When we want to look up the data that we stored in the database, we use the `Select` statement.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们想查找存储在数据库中的数据时，使用`Select`语句。
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This statement returns a table that displays the row we just inserted with our
    insert statement. The `*` wildcard means “show me all the rows in the table.”
    If you want your table to only display the `Population` column we remove the asterisk
    and replace it with its column name.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 该语句返回一个表格，显示我们刚刚使用插入语句插入的行。`*`通配符表示“显示表格中的所有行”。如果你只想显示`Population`列，可以去掉星号，替换为其列名。
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Update a table**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**更新表格**'
- en: If we want to modify existing records in a table we use the `UPDATE` statement
    to do so.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想修改表格中的现有记录，可以使用`UPDATE`语句来做到这一点。
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This statement updates the`country_name` column in the row with the `country_id` of `1` to `Kenya`.
    We have to specify which country ID, because we only want to change that row.
    If we remove the `WHERE` statement, SQL will assume that we want to update all
    the rows in the table.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 该语句将`country_id`为`1`的行中的`country_name`列更新为`Kenya`。我们必须指定国家ID，因为我们只想更改那一行。如果我们去掉`WHERE`语句，SQL会认为我们想更新表格中的所有行。
- en: '**Delete records in a table**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**删除表格中的记录**'
- en: If we want to delete all rows in a table, we would then use a `DELETE FROM` statement.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想删除表格中的所有行，则使用`DELETE FROM`语句。
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If you want to delete the table instead of all records, we use the `DROP TABLE` statement.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想删除表格而不是所有记录，可以使用`DROP TABLE`语句。
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Note:** This removes the whole table from the database and can result in
    loss of data!'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 这会从数据库中删除整个表格，可能导致数据丢失！'
- en: Filters
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 过滤器
- en: If we’re only interested in part of the data in the table we can filter the
    table. We have multiple statements that allow us to filter our tables. Filters
    basically select rows that match certain criteria and return the results back
    as a filtered data set. Filtering tables does not mutate the original table.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们只对表格中的部分数据感兴趣，我们可以筛选表格。我们有多个语句可以用来筛选表格。过滤器基本上选择符合某些标准的行，并将结果作为过滤后的数据集返回。筛选表格不会更改原始表格。
- en: '**WHERE**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**WHERE**'
- en: The `WHERE` clause is used to filter records. In our editor we have a table
    called `Customers`. If we want to filter customers that are from country `“USA”` we
    use the `WHERE` statement.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`WHERE` 子句用于筛选记录。在我们的编辑器中有一个名为 `Customers` 的表。如果我们想筛选来自 `“USA”` 的客户，我们使用 `WHERE`
    语句。'
- en: '[PRE7]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**AND, OR, and NOT**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**AND, OR 和 NOT**'
- en: In our previous example, we had only one condition which was “where country
    is USA.” We can also combine multiple conditions using `AND`, `OR`, and `NOT`.
    For example, if you want customers from the USA or Brazil, you use the `OR` statement.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们之前的例子中，只有一个条件，即“国家是美国”。我们还可以使用 `AND`、`OR` 和 `NOT` 组合多个条件。例如，如果你想要来自美国或巴西的客户，你可以使用
    `OR` 语句。
- en: '[PRE8]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**ORDER BY**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**ORDER BY**'
- en: Most of the time when we filter the table, the data set we get back is unsorted.
    We can sort this filtered unsorted data set using an `ORDER BY` statement.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数时候，当我们筛选表格时，返回的数据集是未排序的。我们可以使用 `ORDER BY` 语句对这个筛选后的未排序数据集进行排序。
- en: '[PRE9]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This will order the filtered results alphabetically . If we want to sort it
    descending, we replace `ASC` with `DESC`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这将按字母顺序对筛选结果进行排序。如果我们想要降序排序，可以将 `ASC` 替换为 `DESC`。
- en: '**BETWEEN**'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**BETWEEN**'
- en: Sometimes we would like to select rows whose values satisfy a specific range.
    We use the `BETWEEN` statement to select and choose the range.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们希望选择值满足特定范围的行。我们使用 `BETWEEN` 语句来选择并定义范围。
- en: '[PRE10]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The statement above filters products whose price falls between 10 and 20.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 上述语句筛选了价格在 10 到 20 之间的产品。
- en: '**Note:** In a `BETWEEN` operation, the lower bound and upper bound are both
    inclusive in nature.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 在 `BETWEEN` 操作中，下限和上限都是包含在内的。'
- en: '**LIKE**'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**LIKE**'
- en: Sometimes we want to filter the table with a specific pattern in mind. To do
    so we use the `LIKE` statement.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们想根据特定模式筛选表格。为此，我们使用 `LIKE` 语句。
- en: '[PRE11]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The SQL statement above filters the table to show only customers whose name
    begin with the letter A. If you bring the percentage sign forward it would filter
    customers whose name ends with the letter A.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 上述 SQL 语句筛选了表格，只显示名字以字母 A 开头的客户。如果你将百分号向前移动，它会筛选名字以字母 A 结尾的客户。
- en: '**GROUP BY**'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**GROUP BY**'
- en: '`GROUP BY` groups the filtered result set into groups. Think of it as a summary
    group for each column data set.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`GROUP BY` 将筛选后的结果集分组。可以将其视为每列数据集的汇总组。'
- en: '[PRE12]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This statement counts the number of customers from each country, then groups
    it into countries. `GROUP BY` is mostly used with aggregate functions which we’ll
    talk about in detail later in the article.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 该语句统计了每个国家的客户数量，然后按国家分组。`GROUP BY` 通常与聚合函数一起使用，后者我们将在文章的后面详细讨论。
- en: '**HAVING**'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**HAVING**'
- en: '`HAVING` was introduced because the `WHERE` statement doesn’t work with aggregate
    functions; it only deals with direct values in the database.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`HAVING` 的引入是因为 `WHERE` 语句不能与聚合函数一起使用，它只处理数据库中的直接值。'
- en: '[PRE13]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This statement does the same thing as the last example. The only difference
    is that we only include countries that have more than three customers.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这个语句与上一个例子做的事情一样。唯一的区别是我们只包括客户数量超过三人的国家。
- en: Joins
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 连接
- en: Imagine you’d like to know which customer ordered what products. If a database
    follows a proper database normalization technique, then products, customers, and
    orders would be in separate tables. If we want to see which customer ordered what
    products, we would then have to look at the customer ID inside the order table,
    then go to the customer table and see the products purchases, then use the product
    ID to look up the product table. As you can see, this is a huge headache if were
    to repeat it multiple times. In order to do this more easily, SQL has a statement
    called `JOIN`**.**This clause is used to combine two or more rows of tables based
    on a shared related column.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下你想知道哪个客户订购了哪些产品。如果数据库遵循正确的数据库规范化技术，那么产品、客户和订单将被存储在不同的表中。如果我们想查看哪个客户订购了哪些产品，我们需要在订单表中查找客户
    ID，然后去客户表查看产品购买情况，再使用产品 ID 查找产品表。正如你所看到的，如果需要重复多次，这将是一个巨大的麻烦。为了更轻松地完成这个操作，SQL
    提供了一个名为 `JOIN` 的语句。这个子句用于基于共享的相关列将两个或更多的表行合并。
- en: '![](../Images/02d6e47454a5298a90e09de2b21b7a3c.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/02d6e47454a5298a90e09de2b21b7a3c.png)'
- en: '**INNER JOIN**'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**内连接**'
- en: '`INNER JOIN`, commonly known as just “`JOIN`,**”** is used to merge related
    tables at a shared column into a single table.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '`INNER JOIN`，通常简称为 "`JOIN`"，用于在共享列上将相关表合并成一个表。'
- en: '[PRE14]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The statement above returns the column’s order ID and customer names. We join
    the table orders (left) and customers (right), but only rows that have matching
    customer IDs. Re-read this sentence while looking at the inner join Venn diagram
    and hopefully this will be easier to grasp.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 上述语句返回列的订单 ID 和客户姓名。我们将订单表（左）和客户表（右）连接，但仅包括那些具有匹配客户 ID 的行。在查看内连接的维恩图时重新阅读这句话，希望这样更容易理解。
- en: '**LEFT JOIN**'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**左连接**'
- en: '[PRE15]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The `LEFT JOIN` statement, we join the left table (customer) and right table
    (order) returns all rows from the left table and matching records from the right
    table.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`LEFT JOIN` 语句用于将左表（客户表）和右表（订单表）连接，返回左表中的所有行以及右表中匹配的记录。'
- en: '**RIGHT JOIN**'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**右连接**'
- en: '[PRE16]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '`RIGHT JOIN` returns all rows from the right table and matched records from
    the left table. This returns all employees and any order they might have placed.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '`RIGHT JOIN` 返回右表中的所有行以及左表中匹配的记录。这将返回所有员工及他们可能下的任何订单。'
- en: '**OUTER JOIN**'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**外连接**'
- en: '[PRE17]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Also known as `FULL OUTER JOIN` and is used to combine all rows from one or
    more tables. No rows will be left out, all will be included in the joined tables.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 也被称为 `FULL OUTER JOIN`，用于将一个或多个表中的所有行合并。没有行会被遗漏，所有行都将包含在连接后的表中。
- en: SQL Aggregate Functions
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SQL 聚合函数
- en: A function is a set of procedures that takes an input and spits out an output.
    A SQL function is basically a set of SQL statements that takes an input, performs
    SQL actions on the input, then gives back the results as an output.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 函数是一组接受输入并输出结果的过程。SQL 函数基本上是一组 SQL 语句，它接受输入，对输入执行 SQL 操作，然后将结果作为输出返回。
- en: There are two types of functions in SQL:* set functions* and *value functions*.
    Any function that manipulates rows of data in a table and returns a single value
    is called a set function. Programmers usually call them aggregate functions because
    they take rows in the table and return an aggregation of information.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: SQL 中有两种类型的函数：*集合函数* 和 *值函数*。任何操作表中数据行并返回单个值的函数称为集合函数。程序员通常称它们为聚合函数，因为它们将表中的行汇总成一个信息聚合。
- en: '**MIN**'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**最小值**'
- en: '[PRE18]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This SQL function returns the least expensive price of all the products in the
    Products table.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 SQL 函数返回产品表中所有产品的最低价格。
- en: '**MAX**'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**最大值**'
- en: '[PRE19]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This SQL function returns the most expensive price of all the products in the
    Products table.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 SQL 函数返回产品表中所有产品的最高价格。
- en: '**AVG**'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**平均值**'
- en: '[PRE20]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: This SQL function returns the average price of all the products in the Products
    table.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 SQL 函数返回产品表中所有产品的平均价格。
- en: '**COUNT**'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**计数**'
- en: '[PRE21]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: This returns the number of products in the Products table.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回产品表中产品的数量。
- en: SUM
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总和
- en: '[PRE22]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: This returns the sum of all the orders in the Order Details table.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回订单详情表中所有订单的总和。
- en: Indexes
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 索引
- en: So far, all the queries that we’ve looked at are basic queries. Practically
    speaking, the queries that we execute in our day to day life usually consist of
    a combination of multiple SQL statements or functions. When operations are complex,
    this will lower the execution time of the queries.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们所看过的查询都是基本查询。实际上，我们在日常生活中执行的查询通常由多个 SQL 语句或函数的组合构成。当操作复杂时，这将减少查询的执行时间。
- en: Luckily, SQL has something called *indexing* which allows for faster lookup
    time. An index is a data structure that has a pointer to the data in a table.
    Without an index, the searching data in a table would be *linear*meaning it would
    go through one row after the other. Indexing is well suited for tabular data.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，SQL 有一种叫做 *索引* 的功能，可以加快查找速度。索引是一种数据结构，它指向表中的数据。如果没有索引，搜索表中的数据将是 *线性的*，意味着会逐行扫描。索引非常适合表格数据。
- en: '**Creating an index**'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**创建索引**'
- en: '[PRE23]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: This will create an index to look up data from the column quickly. It is to
    be noted that indexes are not stored in the table and are invisible to the naked
    eye. We most often use indexes when we have a lot of data retrieval on tables.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个索引以便快速查找列中的数据。需要注意的是，索引不存储在表中，对肉眼不可见。我们通常在有大量数据检索时使用索引。
- en: Database Transactions
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据库事务
- en: '*Transactions* are a collection of of SQL statements that must be executed
    for a successful operation. Transactions are all or nothing kinds of operations.
    If all but one operation fails, we consider that transaction to have failed.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '*事务* 是一系列必须执行的 SQL 语句，以确保操作成功。事务是“全有或全无”的操作。如果所有操作中只有一个失败，我们认为整个事务失败了。'
- en: A common example of the use of transactions is transferring money from one account
    to another in a bank. In order for a transfer to be successful money must be removed
    from account A and added to account B. Otherwise, we would roll back the transaction
    to start fresh. When the transaction is complete we say that the transaction is *committed.* This
    ensures the database maintains data integrity and consistency.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 事务的一个常见示例是将资金从一个账户转到另一个账户。为了使转账成功，必须从账户 A 中扣除资金并添加到账户 B 中。否则，我们将回滚事务以重新开始。当事务完成时，我们称之为
    *提交*。这确保了数据库维护数据的完整性和一致性。
- en: If you want to learn about database transactions in-depth, I suggest you take
    a look at [this](https://www.youtube.com/watch?v=is03uRYFgqc) excellent video
    explanation of database transactions.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想深入了解数据库事务，我建议你查看 [this](https://www.youtube.com/watch?v=is03uRYFgqc) 这段关于数据库事务的优秀视频讲解。
- en: Database Triggers
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据库触发器
- en: Not all SQL queries are individual and isolated. Sometimes we would like to
    perform an action on table A when a different event happens to another table B.
    This is where we get to use a *database trigger***.**
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有 SQL 查询都是单独的和孤立的。有时我们希望在另一表 B 上发生不同事件时，对表 A 执行某个操作。这就是我们使用 *数据库触发器* 的地方。
- en: A database trigger is a bunch of SQL statements that are run when a specific
    action occurs within a database. Triggers are defined to run when changes are
    made to a table’s data, mostly before or after actions such as `DELETE`, `UPDATE`,
    and `CREATE`. The most common use case of database triggers is to validate input
    data.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库触发器是一组在数据库内发生特定操作时执行的 SQL 语句。触发器被定义为在对表数据进行更改时运行，主要是在 `DELETE`、`UPDATE` 和
    `CREATE` 等操作之前或之后。数据库触发器的最常见用例是验证输入数据。
- en: Tips
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: All SQL reserved words are uppercase. Everything else (tables, columns, etc.)
    is lowercase.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有 SQL 保留字均为大写。其他所有内容（表、列等）均为小写。
- en: Divide your queries into multiple lines instead of one long statement in a single
    line.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将查询分成多行，而不是在单行中编写一个长语句。
- en: You can’t add a column at a specific position in a table, so be cautious when
    designing the tables.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你不能在表中添加特定位置的列，所以在设计表时要小心。
- en: Be aware when using `AS` alias statements; the columns are not being renamed
    in the table. The aliases only appear in the dataset result.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `AS` 别名语句时请注意；列名并没有在表中被重命名。别名仅在数据集结果中出现。
- en: 'SQL evaluates these clauses in the order: `FROM`, `WHERE`, `GROUP BY`, `HAVING`,
    and finally, `SELECT`. Therefore, each clause receives the filtered results of
    the previous filter. It would look like this:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQL 按以下顺序评估这些子句：`FROM`、`WHERE`、`GROUP BY`、`HAVING`，最后是 `SELECT`。因此，每个子句都接收前一个筛选器的过滤结果。它的样子是这样的：
- en: '[PRE24]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Conclusion
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论
- en: You can generate powerful queries from endless permutations of the SQL statements
    we saw in this article. Remember, the best way to cement the concepts and get
    better at SQL is by practicing and solving SQL problems. Some of the examples
    above were inspired by [W3School ](https://www.w3schools.com/). You can find more
    interactive exercises in websites like [hackerrank](http://hackerrank.com/) and [LeetCode](https://leetcode.com/) which
    have engaging UI to help you study longer.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从我们在本文中看到的SQL语句的无尽排列中生成强大的查询。记住，巩固概念并提高SQL水平的最佳方式是通过练习和解决SQL问题。上面的部分示例灵感来源于[W3School](https://www.w3schools.com/)。你可以在像[hackerrank](http://hackerrank.com/)和[LeetCode](https://leetcode.com/)这样的互动网站上找到更多练习，它们有吸引人的用户界面，帮助你更长时间地学习。
- en: '**The more you practice the better you’ll be, the harder you train the great
    in you they’ll see.*** — Alcurtis Turner*'
  id: totrans-134
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**你练习得越多，你会变得越好，你训练越严格，他们就会看到你更大的潜力。*** — Alcurtis Turner*'
- en: Wishing you peace and prosperity!
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 祝愿你平安和繁荣！
- en: '**Bio: [Muhsin Warfa](https://www.linkedin.com/in/muhsinwarfa/)** builds and
    designs full stack web software applications for your organizational needs. As
    a Software product developer, he has worked on multiple projects ranging from
    commercial apps to student in-course apps having worked on all the life cycles
    of development from conceptualization and ideas to testing and deployment of apps.
    If you like this article, feel free to [reach out and stay connected on LinkedIn](https://www.linkedin.com/in/muhsinwarfa/?locale=de_DE)
    and tune in for more articles/posts.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：[穆欣·沃尔法](https://www.linkedin.com/in/muhsinwarfa/)** 为您的组织需求构建和设计全栈网络软件应用程序。作为软件产品开发者，他参与了多个项目，从商业应用到学生课程应用，涵盖了从概念化和构思到测试和部署的所有开发生命周期。如果你喜欢这篇文章，请随时[在LinkedIn上联系和保持联系](https://www.linkedin.com/in/muhsinwarfa/?locale=de_DE)，并关注更多文章/帖子。'
- en: '[Original](https://medium.com/better-programming/the-last-sql-guide-for-data-analysis-youll-ever-need-17ae10fa4a6f).
    Reposted with permission.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://medium.com/better-programming/the-last-sql-guide-for-data-analysis-youll-ever-need-17ae10fa4a6f)。已获许可转载。'
- en: '**Related:**'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Top Handy SQL Features for Data Scientists](/2019/08/top-handy-sql-feature-data-scientist.html)'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家的顶级实用SQL功能](/2019/08/top-handy-sql-feature-data-scientist.html)'
- en: '[7 Steps to Mastering SQL for Data Science — 2019 Edition](/2019/05/7-steps-mastering-sql-data-science-2019-edition.html)'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2019版掌握数据科学SQL的7个步骤](/2019/05/7-steps-mastering-sql-data-science-2019-edition.html)'
- en: '[Is SQL needed to be a data scientist?](/2019/07/sql-needed-data-scientist.html)'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家需要SQL吗？](/2019/07/sql-needed-data-scientist.html)'
- en: More On This Topic
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[成为优秀数据科学家所需的5项关键技能](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个初学者数据科学家应该掌握的6种预测模型](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
- en: '[The Best ETL Tools in 2021](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2021年最佳ETL工具](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个数据科学家都应该了解的三个R库（即使你使用Python）](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[停止学习数据科学以寻找目标，并找到目标去…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
- en: '[Building a solid data team](https://www.kdnuggets.com/2021/12/build-solid-data-team.html)'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[建立一个稳固的数据团队](https://www.kdnuggets.com/2021/12/build-solid-data-team.html)'
