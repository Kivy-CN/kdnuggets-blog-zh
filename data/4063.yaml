- en: 'Beyond Numpy and Pandas: Unlocking the Potential of Lesser-Known Python Libraries'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 超越 Numpy 和 Pandas：解锁鲜为人知的 Python 库的潜力
- en: 原文：[https://www.kdnuggets.com/2023/08/beyond-numpy-pandas-unlocking-potential-lesserknown-python-libraries.html](https://www.kdnuggets.com/2023/08/beyond-numpy-pandas-unlocking-potential-lesserknown-python-libraries.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2023/08/beyond-numpy-pandas-unlocking-potential-lesserknown-python-libraries.html](https://www.kdnuggets.com/2023/08/beyond-numpy-pandas-unlocking-potential-lesserknown-python-libraries.html)
- en: '![Beyond Numpy and Pandas: Unlocking the Potential of Lesser-Known Python Libraries](../Images/8924a62a76a8da5ab3c63d2d62fc1a70.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![超越 Numpy 和 Pandas：解锁鲜为人知的 Python 库的潜力](../Images/8924a62a76a8da5ab3c63d2d62fc1a70.png)'
- en: Image by [OrMaVaredo](https://pixabay.com/it/users/ormavaredo-14515736/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=5826755) on [Pixabay](https://pixabay.com/it//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=5826755)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [OrMaVaredo](https://pixabay.com/it/users/ormavaredo-14515736/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=5826755) 提供，发布在 [Pixabay](https://pixabay.com/it//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=5826755)
- en: Python is one of the most used programming languages in the world and provides
    developers with a wide range of libraries.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Python 是世界上使用最广泛的编程语言之一，为开发者提供了广泛的库。
- en: Anyway, when it comes to data manipulation and scientific computation, we generally
    think of libraries such as `Numpy`, `Pandas`, or `SciPy`.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，当谈到数据处理和科学计算时，我们通常会想到像 `Numpy`、`Pandas` 或 `SciPy` 这样的库。
- en: In this article, we introduce 3 Python libraries you may be interested in.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们介绍了三种你可能感兴趣的 Python 库。
- en: 1\. Dask
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. Dask
- en: Introducing Dask
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍 Dask
- en: Dask is a flexible parallel computing library that enables distributed computing
    and parallelism for large-scale data processing.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Dask 是一个灵活的并行计算库，支持大规模数据处理的分布式计算和并行处理。
- en: 'So, why should we use Dask? As they say on [their website](https://www.dask.org/):'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们为什么应该使用 Dask 呢？正如他们在 [他们的网站](https://www.dask.org/)上所说的：
- en: Python has grown to become the dominant language both in data analytics and
    general programming. This growth has been fueled by computational libraries like
    NumPy, pandas, and scikit-learn. However, these packages weren’t designed to scale
    beyond a single machine. Dask was developed to natively scale these packages and
    the surrounding ecosystem to multi-core machines and distributed clusters when
    datasets exceed memory.
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Python 已经成长为数据分析和通用编程中的主导语言。这种增长得益于像 NumPy、pandas 和 scikit-learn 这样的计算库。然而，这些包并未设计用于超越单一机器的规模。Dask
    的开发目的是将这些包及其相关生态系统本地扩展到多核机器和分布式集群，以处理超出内存的数据集。
- en: 'So, one of the common uses of Dask, [as they say](https://docs.dask.org/en/latest/dataframe.html),
    is:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，Dask 的一个常见用途是 [他们说的](https://docs.dask.org/en/latest/dataframe.html)：
- en: 'Dask DataFrame is used in situations where pandas is commonly needed, usually
    when pandas fails due to data size or computation speed:'
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Dask DataFrame 用于 pandas 通常需要的情况，通常是当 pandas 因数据大小或计算速度而失败时：
- en: '- Manipulating large datasets, even when those datasets don’t fit in memory'
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '- 操作大型数据集，即使这些数据集无法全部加载到内存中'
- en: '- Accelerating long computations by using many cores'
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '- 通过使用多个核心加速长时间计算'
- en: '- Distributed computing on large datasets with standard pandas operations like
    groupby, join, and time series computations'
  id: totrans-16
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '- 对大型数据集进行分布式计算，使用标准的 pandas 操作，如 groupby、join 和时间序列计算'
- en: 'So, Dask is a good choice when we need to deal with huge Pandas data frames.
    This is because Dask:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，当我们需要处理巨大的 Pandas 数据框时，Dask 是一个不错的选择。这是因为 Dask：
- en: Allows users to manipulate 100GB+ datasets on a laptop or 1TB+ datasets on a
    workstation
  id: totrans-18
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 允许用户在笔记本电脑上操作 100GB 以上的数据集，或在工作站上操作 1TB 以上的数据集
- en: Which is a pretty impressive result.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这确实是一个相当令人印象深刻的结果。
- en: 'What happens under the hood, is that:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在幕后发生的情况是：
- en: Dask DataFrames coordinate many pandas DataFrames/Series arranged along the
    index. A Dask DataFrame is partitioned *row-wise*, grouping rows by index value
    for efficiency. These pandas objects may live on disk or on other machines.
  id: totrans-21
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Dask DataFrame 协调了许多按索引排列的 pandas DataFrame/Series。Dask DataFrame 按 *行* 进行分区，通过索引值对行进行分组以提高效率。这些
    pandas 对象可能存储在磁盘上或其他机器上。
- en: 'So, we have something like that:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们有了这样的结果：
- en: '![Beyond Numpy and Pandas: Unlocking the Potential of Lesser-Known Python Libraries](../Images/bde0c15d84502738b390a1f47612f471.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![超越 Numpy 和 Pandas：解锁鲜为人知的 Python 库的潜力](../Images/bde0c15d84502738b390a1f47612f471.png)'
- en: The difference between a Dask and a Pandas data frame. Image by Author, freely
    inspired by one on the Dask website already quoted.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Dask 和 Pandas 数据框之间的区别。图像由作者提供，自 Dask 网站上引用的图像自由改编。
- en: Some features of Dask in action
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Dask 一些实际功能
- en: 'First of all, we need to install Dask. We can do it via `pip` or `conda` like
    so:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要安装 Dask。可以通过 `pip` 或 `conda` 来安装：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**FEATURE ONE: OPENING A CSV FILE**'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**特性一：打开 CSV 文件**'
- en: 'The first feature we can show of Dask is how we can open a CSV. We can do it
    like so:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以展示 Dask 的第一个特性：如何打开一个 CSV 文件。我们可以这样做：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'So, as we can see in the code, the way we use Dask is very similar to Pandas.
    In particular:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，正如代码所示，我们使用 Dask 的方式与 Pandas 非常相似。特别是：
- en: We use the method `read_csv()` exactly as in Pandas
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们使用 `read_csv()` 方法，完全与 Pandas 一样。
- en: We intercept a column exactly as in Pandas. In fact, if we had a Pandas data
    frame called `df` we’d intercept a column this way: `df['column_name']`.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们像在 Pandas 中一样截取一列。实际上，如果我们有一个名为 `df` 的 Pandas 数据框，我们可以这样截取一列：`df['column_name']`。
- en: We apply the `mean()` method to the intercepted column similar to Pandas, but
    here we also need to add the method `compute()`.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们对截取的列应用 `mean()` 方法，类似于 Pandas，但这里我们还需要添加 `compute()` 方法。
- en: Also, even if the methodology of opening a CSV file it’s the same as in Pandas,
    under the hood Dask is effortlessly processing a large dataset that exceeds the
    memory capacity of a single machine.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，即使打开 CSV 文件的方法与 Pandas 相同，在底层 Dask 也在轻松处理超出单台机器内存容量的大型数据集。
- en: This means that we can’t see any actual difference, except the fact that a large
    data frame can’t be opened in Pandas, but in Dask we can.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们看不到任何实际的区别，除了一个大型数据框不能在 Pandas 中打开，而在 Dask 中可以。
- en: '**FEATURE TWO: SCALING MACHINE LEARNING WORKFLOWS**'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**特性二：扩展机器学习工作流**'
- en: We can use Dask to also create a classification dataset with a huge number of
    samples. We can then split it into the train and the test sets, fit the train
    set with an ML model, and calculate predictions for the test set.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 Dask 创建一个具有大量样本的分类数据集。然后，我们可以将其拆分为训练集和测试集，用 ML 模型拟合训练集，并计算测试集的预测结果。
- en: 'We can do it like so:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以这样做：
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This example stresses the ability of Dask to handle huge datasets even in the
    case of a Machine Learning problem, by distributing computations across multiple
    cores.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子强调了 Dask 即使在机器学习问题中也能处理巨大数据集的能力，通过将计算分配到多个核心上。
- en: In particular, we can create a “Dask dataset” for a classification case with
    the method `dask_datasets.make_classification()`, and we can specify the number
    of samples and chunks (even, very huge!).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是，我们可以使用 `dask_datasets.make_classification()` 方法为分类案例创建一个 “Dask 数据集”，并可以指定样本数量和块数（甚至非常大！）。
- en: Similarly as before, the predictions are obtained with the method `compute()`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前相似，预测结果通过 `compute()` 方法获得。
- en: '[PRE3]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**FEATURE THREE: EFFICIENT IMAGE PROCESSING**'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**特性三：高效的图像处理**'
- en: The power of parallel processing that Dask utilizes can also be applied to images.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Dask 利用的并行处理能力也可以应用于图像。
- en: 'In particular, we could open multiple images, resize them, and save them resized.
    We can do it like so:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是，我们可以打开多个图像，调整大小，然后保存调整大小后的图像。我们可以这样做：
- en: '[PRE4]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'So, here’s the process:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，过程如下：
- en: We open all the “.jpg” images in the current folder (or in a folder that you
    can specify) with the method `dask_image.imread.imread("image*.jpg")`.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用方法 `dask_image.imread.imread("image*.jpg")` 打开当前文件夹（或你可以指定的文件夹）中的所有 “.jpg”
    图像。
- en: We resize them all at 300x300 using a list comprehension in the method `da.stack()`.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用方法 `da.stack()` 将所有图像调整为 300x300，使用列表推导式。
- en: We compute the result with the method `compute()`, as we did before.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用 `compute()` 方法计算结果，正如之前所做的那样。
- en: We save all the resized images with the for cycle.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用 `for` 循环保存所有调整大小的图像。
- en: 2\. SymPy
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2. SymPy
- en: Introducing Sympy
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍 Sympy
- en: If you need to make mathematical calculations and computations and want to stick
    to Python, you can try Sympy.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要进行数学计算和运算，并且希望坚持使用 Python，你可以尝试 Sympy。
- en: 'Indeed: why use other tools and software, when we can use our beloved Python?'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 的确：既然我们可以使用我们钟爱的 Python，为什么还要使用其他工具和软件呢？
- en: 'As per what they write [on their website](https://www.sympy.org/en/index.html),
    Sympy is:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 根据他们在 [网站](https://www.sympy.org/en/index.html) 上写的内容，Sympy 是：
- en: A Python library for symbolic mathematics. It aims to become a full-featured
    computer algebra system (CAS) while keeping the code as simple as possible in
    order to be comprehensible and easily extensible. SymPy is written entirely in
    Python.
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个用于符号数学的 Python 库。它旨在成为一个功能齐全的计算机代数系统（CAS），同时保持代码尽可能简单，以便易于理解和扩展。SymPy 完全用
    Python 编写。
- en: 'But why use SymPy? They suggest:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 但是为什么使用 SymPy？他们建议：
- en: SymPy is…
  id: totrans-61
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: SymPy 是…
- en: ''
  id: totrans-62
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**- Free:** Licensed under BSD, SymPy is free both as in speech and as in beer.'
  id: totrans-63
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**- 免费：** 根据 BSD 许可证，SymPy 既是言语上的自由，也是酒精上的自由。'
- en: ''
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**- Python-based:** SymPy is written entirely in Python and uses Python for
    its language.'
  id: totrans-65
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**- 基于 Python：** SymPy 完全用 Python 编写，并使用 Python 作为语言。'
- en: ''
  id: totrans-66
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**- Lightweight:** SymPy only depends on mpmath, a pure Python library for
    arbitrary floating point arithmetic, making it easy to use.'
  id: totrans-67
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**- 轻量级：** SymPy 仅依赖于 mpmath，一个纯 Python 库用于任意浮点算术，使其易于使用。'
- en: ''
  id: totrans-68
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**- A library:** Beyond use as an interactive tool, SymPy can be embedded in
    other applications and extended with custom functions.'
  id: totrans-69
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**- 一个库：** 除了作为交互工具使用，SymPy 还可以嵌入到其他应用程序中，并通过自定义函数进行扩展。'
- en: So, it basically has all the characteristics that can be loved by Python addicts!
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，它基本上拥有所有 Python 爱好者喜爱的特性！
- en: Now, let’s see some of its features.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看它的一些特性。
- en: Some features of SymPy in action
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SymPy 的一些功能演示
- en: 'First of all, we need to install it:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要安装它：
- en: '[PRE5]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**FEATURE ONE: SOLVING AN ALGEBRAIC EQUATION**'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**功能一：解代数方程**'
- en: 'If we need to solve an algebraic equation, we can use SymPy like so:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们需要解代数方程，可以这样使用 SymPy：
- en: '[PRE7]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'So, that’s the process:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这就是过程：
- en: We define the symbols of the equation with the method `symbols()`.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们用方法 `symbols()` 定义方程的符号。
- en: We write the algebraic equation with the method `Eq`.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们用方法 `Eq` 编写代数方程。
- en: We solve the equation with the method `solve()`.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们用方法 `solve()` 解方程。
- en: When I was at the University I used different tools to solve these kinds of
    problems, and I have to say that SymPy, as we can see, is very readable and user-friendly.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 当我在大学时，我使用了不同的工具来解决这些问题，我必须说 SymPy，如我们所见，是非常易读和用户友好的。
- en: 'But, indeed: it’s a Python library, so how could that be any different?'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，确实：这是一个 Python 库，那么它会有什么不同呢？
- en: '**FEATURE TWO: CALCULATING DERIVATIVES**'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**功能二：计算导数**'
- en: 'Calculating derivatives is another task we may mathematically need, for a lot
    of reasons when analyzing data. Often, we may need calculations for any reason,
    and SympY really simplifies this process. In fact, we can do it like so:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 计算导数是我们在数据分析中可能需要的另一项任务。通常，我们可能因为各种原因需要进行计算，SymPy 确实简化了这个过程。实际上，我们可以这样做：
- en: '[PRE8]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'So, as we can see, the process is very simple and self-explainable:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，这个过程非常简单且自解释：
- en: We define the symbol of the function we’re deriving with `symbols()`.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们用 `symbols()` 定义我们导数的函数符号。
- en: We define the function.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们定义函数。
- en: We calculate the derivative with `diff()` specifying the function and the symbol
    we’re calculating the derivative (this is an absolute derivative, but we could
    perform even partial derivatives in the case of functions that have `x` and `y` variables).
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们用 `diff()` 计算导数，指定函数和我们计算导数的符号（这是一个绝对导数，但在有 `x` 和 `y` 变量的函数的情况下，我们还可以进行偏导数）。
- en: And if we test it, we’ll see that the result arrives in a matter of 2 or 3 seconds.
    So, it’s also pretty fast.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们进行测试，我们会看到结果在 2 到 3 秒内到达。因此，它也相当快。
- en: '**FEATURE THREE: CALCULATING INTEGRATIONS**'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**功能三：计算积分**'
- en: 'Of course, if SymPy can calculate derivatives, it can also calculate integrations.
    Let’s do it:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，如果 SymPy 能够计算导数，它也能计算积分。让我们来做：
- en: '[PRE9]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: So, here we use the method `integrate()`, specifying the function to integrate
    and the variable of integration.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们使用方法 `integrate()`，指定要积分的函数和积分变量。
- en: Couldn’t it be easier?!
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 难道这不更简单吗？！
- en: 3\. Xarray
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. Xarray
- en: Introducing Xarray
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍 Xarray
- en: Xarray is a Python library that extends the features and functionalities of
    NumPy, giving us the possibility to work with labeled arrays and datasets.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Xarray 是一个扩展 NumPy 功能的 Python 库，使我们能够处理带标签的数组和数据集。
- en: 'As they say [on their website](https://docs.xarray.dev/en/stable/), in fact:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 正如他们在 [他们的网站上](https://docs.xarray.dev/en/stable/) 说的：
- en: Xarray makes working with labeled multi-dimensional arrays in Python simple,
    efficient, and fun!
  id: totrans-102
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Xarray 使得在 Python 中处理带标签的多维数组变得简单、高效和有趣！
- en: 'And [also](https://docs.xarray.dev/en/stable/getting-started-guide/why-xarray.html):'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[同样](https://docs.xarray.dev/en/stable/getting-started-guide/why-xarray.html)：'
- en: Xarray introduces labels in the form of dimensions, coordinates and attributes
    on top of raw NumPy-like multidimensional arrays, which allows for a more intuitive,
    more concise, and less error-prone developer experience.
  id: totrans-104
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Xarray在原始类似NumPy的多维数组之上引入了维度、坐标和属性的标签，这使得开发者的体验更加直观、简洁且不易出错。
- en: In other words, it extends the functionality of NumPy arrays by adding labels
    or coordinates to the array dimensions. These labels provide metadata and enable
    more advanced analysis and manipulation of multi-dimensional data.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，它通过在数组维度上添加标签或坐标来扩展NumPy数组的功能。这些标签提供了元数据，并使多维数据的更高级分析和操作成为可能。
- en: For example, in NumPy, arrays are accessed using integer-based indexing.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在NumPy中，数组是通过基于整数的索引来访问的。
- en: In Xarray, instead, each dimension can have a label associated with it, making
    it easier to understand and manipulate the data based on meaningful names.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在Xarray中，每个维度都可以有一个关联的标签，使得根据有意义的名称来理解和操作数据变得更加容易。
- en: For example, instead of accessing data with `arr[0, 1, 2]`, we can use `arr.sel(x=0,
    y=1, z=2)` in Xarray, where `x`, `y`, and `z` are dimension labels.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，与其用`arr[0, 1, 2]`访问数据，我们可以在Xarray中使用`arr.sel(x=0, y=1, z=2)`，其中`x`、`y`和`z`是维度标签。
- en: This makes the code much more readable!
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得代码更易读！
- en: So, let’s see some features of Xarray.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们看看Xarray的一些功能。
- en: Some features of Xarray in action
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Xarray的一些功能演示
- en: 'As usual, to install it:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，安装方法如下：
- en: '[PRE10]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '**FEATURE ONE: WORKING WITH LABELED COORDINATES**'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**特性一：使用标记坐标**'
- en: 'Suppose we want to create some data related to temperature and we want to label
    these with coordinates like latitude and longitude. We can do it like so:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想创建一些与温度相关的数据，并希望用纬度和经度等坐标标记这些数据。我们可以这样做：
- en: '[PRE11]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'And if we print them we get:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们打印它们，会得到：
- en: '[PRE12]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'So, let’s see the process step-by-step:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们一步步看一下这个过程：
- en: We’ve created the temperature values as a NumPy array.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已将温度值创建为NumPy数组。
- en: We’ve defined the latitudes and longitueas values as NumPy arrays.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将纬度和经度值定义为NumPy数组。
- en: We’ve stored all the data in an Xarray array with the method `DataArray()`.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用`DataArray()`方法将所有数据存储在Xarray数组中。
- en: We’ve selected a subset of the latitudes and longitudes with the method `sel()` that
    selects the values we want for our subset.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用`sel()`方法选择了一部分纬度和经度，这个方法可以选择我们想要的子集值。
- en: The result is also easily readable, so labeling is really helpful in a lot of
    cases.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 结果也很容易读取，因此标记在很多情况下确实很有帮助。
- en: '**FEATURE TWO: HANDLING MISSING DATA**'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**特性二：处理缺失数据**'
- en: 'Suppose we’re collecting data related to temperatures during the year. We want
    to know if we have some null values in our array. Here''s how we can do so:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们正在收集与全年温度相关的数据。我们想知道我们的数组中是否有一些空值。以下是检查的方法：
- en: '[PRE13]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: And so we obtain that we have 10 null values.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们得出有10个空值。
- en: Also, if we take a look closely at the code, we can see that we can apply Pandas’
    methods to an Xarray like `isnull.sum()`, as in this case, that counts the total
    number of missing values.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，如果我们仔细观察代码，我们可以看到，我们可以将Pandas的方法应用于Xarray，如`isnull.sum()`，它统计了缺失值的总数。
- en: '**FEATURE ONE: HANDLING AND ANALYZING MULTI-DIMENSIONAL DATA**'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '**特性一：处理和分析多维数据**'
- en: The temptation to handle and analyze multi-dimensional data is high when we
    have the possibility to label our arrays. So, why not try it?
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们有可能标记数组时，处理和分析多维数据的诱惑很大。那么，为什么不尝试一下呢？
- en: For example, suppose we’re still collecting data related to temperatures at
    certain latitudes and longitudes.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设我们仍在收集与特定纬度和经度相关的温度数据。
- en: 'We may want to calculate the mean, the max, and the median temperatures. We
    can do it like so:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能想计算温度的均值、最大值和中位数。我们可以这样做：
- en: '[PRE14]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: And we obtained what we wanted, also in a clearly readable way.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也以清晰可读的方式得到了我们想要的结果。
- en: And again, as before, to calculate the max, min, and mean values of temperatures
    we’ve used Pandas’ functions applied to an array.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 再次如前所述，为了计算温度的最大值、最小值和均值，我们使用了应用于数组的Pandas函数。
- en: Conclusions
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this article, we’ve shown three libraries for scientific calculation and
    computation.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们展示了三个用于科学计算和运算的库。
- en: While SymPy can be the substitute for other tools and software, giving us the
    possibility to use Python code to compute mathematical calculations, Dask and
    Xarray extend the functionalities of other libraries, helping us in situations
    where we may have difficulties with other most known Python libraries for data
    analysis and manipulation.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然SymPy可以替代其他工具和软件，使我们能够使用Python代码进行数学计算，但Dask和Xarray扩展了其他库的功能，帮助我们在遇到其他最著名的Python数据分析和处理库存在困难的情况下提供帮助。
- en: '**[Federico Trotta](https://www.linkedin.com/in/federico-trotta/)** has loved
    writing since he was a young boy in school, writing detective stories as class
    exams. Thanks to his curiosity, he discovered programming and AI. Having a burning
    passion for writing, he couldn''t avoid starting to write about these topics,
    so he decided to change his career to become a Technical Writer. His purpose is
    to educate people on Python programming, Machine Learning, and Data Science, through
    writing. Find more about him at [federicotrotta.com](https://federicotrotta.com/).'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '**[费德里科·特罗塔](https://www.linkedin.com/in/federico-trotta/)** 从小就热爱写作，在学校时就写侦探故事作为班级考试的一部分。由于他的好奇心，他发现了编程和AI。由于对写作的强烈热情，他无法避免开始写作这些话题，因此决定转行成为一名技术作家。他的目标是通过写作来教育人们有关Python编程、机器学习和数据科学的知识。了解更多关于他的内容，请访问
    [federicotrotta.com](https://federicotrotta.com/)。'
- en: '[Original](https://towardsdatascience.com/beyond-numpy-and-pandas-unlocking-the-potential-of-lesser-known-python-libraries-86d2bdc4d230).
    Reposted with permission.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/beyond-numpy-and-pandas-unlocking-the-potential-of-lesser-known-python-libraries-86d2bdc4d230)。经授权转载。'
- en: '* * *'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业道路。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持组织的IT需求'
- en: '* * *'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Unlocking Data Insights: Key Pandas Functions for Effective Analysis](https://www.kdnuggets.com/unlocking-data-insights-key-pandas-functions-for-effective-analysis)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[解锁数据洞察：有效分析的关键Pandas函数](https://www.kdnuggets.com/unlocking-data-insights-key-pandas-functions-for-effective-analysis)'
- en: '[Unlock Your Potential with This FREE DevOps Crash Course](https://www.kdnuggets.com/2023/03/corise-unlock-potential-with-this-free-devops-crash-course.html)'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通过这门免费的DevOps速成课程释放你的潜力](https://www.kdnuggets.com/2023/03/corise-unlock-potential-with-this-free-devops-crash-course.html)'
- en: '[Unveiling the Potential of CTGAN: Harnessing Generative AI for…](https://www.kdnuggets.com/2023/04/unveiling-potential-ctgan-harnessing-generative-ai-synthetic-data.html)'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[揭示CTGAN的潜力：利用生成型AI进行…](https://www.kdnuggets.com/2023/04/unveiling-potential-ctgan-harnessing-generative-ai-synthetic-data.html)'
- en: '[Does ChatGPT Have The Potential To Become A New Chess Super Grandmaster?](https://www.kdnuggets.com/does-chatgpt-have-the-potential-to-become-a-new-chess-super-grandmaster)'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ChatGPT是否有潜力成为新的国际象棋超级大满贯？](https://www.kdnuggets.com/does-chatgpt-have-the-potential-to-become-a-new-chess-super-grandmaster)'
- en: '[Exploring the Potential of Transfer Learning in Small Data Scenarios](https://www.kdnuggets.com/exploring-the-potential-of-transfer-learning-in-small-data-scenarios)'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[探索小数据场景中迁移学习的潜力](https://www.kdnuggets.com/exploring-the-potential-of-transfer-learning-in-small-data-scenarios)'
- en: '[Tapping into the Potential of Data Products in 2023](https://www.kdnuggets.com/2023/01/tapping-potential-data-products-2023.html)'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[挖掘2023年数据产品的潜力](https://www.kdnuggets.com/2023/01/tapping-potential-data-products-2023.html)'
