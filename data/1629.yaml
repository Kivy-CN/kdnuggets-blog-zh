- en: 'Cookiecutter Data Science: How to Organize Your Data Science Project'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Cookiecutter数据科学：如何组织你的数据科学项目
- en: 原文：[https://www.kdnuggets.com/2018/07/cookiecutter-data-science-organize-data-project.html](https://www.kdnuggets.com/2018/07/cookiecutter-data-science-organize-data-project.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2018/07/cookiecutter-data-science-organize-data-project.html](https://www.kdnuggets.com/2018/07/cookiecutter-data-science-organize-data-project.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](#comments)'
- en: '**By [DrivenData](https://www.drivendata.org/)**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [DrivenData](https://www.drivendata.org/) 提供**'
- en: '![Image](../Images/cd61bf44f3394ed05156d00b1e97ee5e.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/cd61bf44f3394ed05156d00b1e97ee5e.png)'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - 支持你的组织进行IT工作'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Why use this project structure?
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么使用这个项目结构？
- en: We're not talking about bikeshedding the indentation aesthetics or pedantic
    formatting standards — ultimately, data science code quality is about correctness
    and reproducibility.
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们不是在讨论缩进美学或挑剔的格式标准——最终，数据科学代码的质量关乎正确性和可重复性。
- en: When we think about data analysis, we often think just about the resulting reports,
    insights, or visualizations. While these end products are generally the main event,
    it's easy to focus on making the products *look nice* and ignore the *quality
    of the code that generates them*. Because these end products are created programmatically, **code
    quality is still important**! And we're not talking about bikeshedding the indentation
    aesthetics or pedantic formatting standards — ultimately, data science code quality
    is about correctness and reproducibility.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们考虑数据分析时，我们常常只是想到最终的报告、见解或可视化。虽然这些最终产品通常是主要事件，但很容易将注意力集中在使产品*看起来不错*上，而忽视了*生成它们的代码质量*。因为这些最终产品是程序生成的，**代码质量仍然很重要**！我们不是在讨论缩进美学或挑剔的格式标准——最终，数据科学代码的质量关乎正确性和可重复性。
- en: It's no secret that good analyses are often the result of very scattershot and
    serendipitous explorations. Tentative experiments and rapidly testing approaches
    that might not work out are all part of the process for getting to the good stuff,
    and there is no magic bullet to turn data exploration into a simple, linear progression.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 好的分析往往是非常零散和偶然探索的结果，这已不是秘密。尝试性实验和快速测试可能不会奏效的方法都是达到有效成果的过程的一部分，没有任何神奇的解决方案能将数据探索转变为简单的线性进程。
- en: 'That being said, once started it is not a process that lends itself to thinking
    carefully about the structure of your code or project layout, so it''s best to
    start with a clean, logical structure and stick to it throughout. We think it''s
    a pretty big win all around to use a fairly standardized setup like this one.
    Here''s why:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，一旦开始，这个过程并不适合仔细考虑代码或项目布局的结构，因此最好从一个干净、逻辑清晰的结构开始，并在整个过程中坚持使用。我们认为，使用像这样的标准化设置是一个相当大的胜利。原因如下：
- en: Other people will thank you
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他人会感谢你
- en: Nobody sits around before creating a new Rails project to figure out where they
    want to put their views; they just run `rails new` to get a standard project skeleton
    like everybody else.
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 没有人在创建新的Rails项目之前考虑要把视图放在哪里；他们只是运行`rails new`以获得像其他人一样的标准项目骨架。
- en: A well-defined, standard project structure means that a newcomer can begin to
    understand an analysis without digging in to extensive documentation. It also
    means that they don't necessarily have to read 100% of the code before knowing
    where to look for very specific things.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一个明确定义的标准项目结构意味着新来者可以开始理解分析而不需要深入阅读大量文档。这也意味着他们不一定要阅读100%的代码就能知道要在哪里寻找非常具体的内容。
- en: 'Well organized code tends to be self-documenting in that the organization itself
    provides context for your code without much overhead. People will thank you for
    this because they can:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 组织良好的代码往往具有自我文档化的特点，因为组织本身提供了上下文而无需太多额外说明。人们会感谢你，因为他们可以：
- en: Collaborate more easily with you on this analysis
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更容易地与你协作分析
- en: Learn from your analysis about the process and the domain
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从你的分析中学习过程和领域
- en: Feel confident in the conclusions at which the analysis arrives
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对分析得出的结论充满信心
- en: A good example of this can be found in any of the major web development frameworks
    like Django or Ruby on Rails. Nobody sits around before creating a new Rails project
    to figure out where they want to put their views; they just run `rails new` to
    get a standard project skeleton like everybody else. Because that default project
    structure is *logical* and *reasonably standard across most projects*, it is much
    easier for somebody who has never seen a particular project to figure out where
    they would find the various moving parts.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这一点可以在任何主要的 web 开发框架中找到，比如 Django 或 Ruby on Rails。没有人会在创建新 Rails 项目之前考虑要将视图放在哪里；他们只需运行
    `rails new` 以获得一个标准的项目骨架。因为这个默认项目结构是 *逻辑的* 和 *在大多数项目中相对标准的*，所以对从未见过某个特定项目的人来说，更容易弄清楚在哪里可以找到各种移动部件。
- en: Another great example is the [Filesystem Hierarchy Standard](https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard) for
    Unix-like systems. The `/etc` directory has a very specific purpose, as does the `/tmp` folder,
    and everybody (more or less) agrees to honor that social contract. That means
    a Red Hat user and an Ubuntu user both know roughly where to look for certain
    types of files, even when using each other's system — or any other standards-compliant
    system for that matter!
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个很好的例子是 [文件系统层次结构标准](https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard)
    对于类似Unix的系统。`/etc` 目录有一个非常具体的目的，`/tmp` 文件夹也是如此，而且大家（或多或少）都同意遵守这一社会契约。这意味着 Red
    Hat 用户和 Ubuntu 用户都大致知道在哪里查找某些类型的文件，即使是在使用对方的系统——或者任何符合标准的系统！
- en: Ideally, that's how it should be when a colleague opens up your data science
    project.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，当同事打开你的数据科学项目时，应该是这样的。
- en: You will thank you
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你会感谢你自己
- en: 'Ever tried to reproduce an analysis that you did a few months ago or even a
    few years ago? You may have written the code, but it''s now impossible to decipher
    whether you should use `make_figures.py.old`, `make_figures_working.py` or `new_make_figures01.py` to
    get things done. Here are some questions we''ve learned to ask with a sense of
    existential dread:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 是否曾尝试重现几个月前甚至几年前做的分析？你可能已经写了代码，但现在已经无法解读是否应使用 `make_figures.py.old`、`make_figures_working.py`
    还是 `new_make_figures01.py` 来完成工作。以下是我们在感到存在主义恐惧时学会提出的一些问题：
- en: Are we supposed to go in and join the column X to the data before we get started
    or did that come from one of the notebooks?
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们是否应该在开始之前将列X与数据连接起来，还是这些来自于某个笔记本？
- en: 'Come to think of it, which notebook do we have to run first before running
    the plotting code: was it "process data" or "clean data"?'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 想一想，我们在运行绘图代码之前需要先运行哪个笔记本：是“处理数据”还是“清理数据”？
- en: Where did the shapefiles get downloaded from for the geographic plots?
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 地理绘图的形状文件从哪里下载的？
- en: '*Et cetera, times infinity.*'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*等等，乘以无穷大。*'
- en: These types of questions are painful and are symptoms of a disorganized project.
    A good project structure encourages practices that make it easier to come back
    to old work, for example separation of concerns, abstracting analysis as a [DAG](https://en.wikipedia.org/wiki/Directed_acyclic_graph),
    and engineering best practices like version control.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这些问题令人痛苦，是项目杂乱的症状。一个好的项目结构鼓励一些实践，这些实践使得回到旧的工作更容易，例如关注点分离，将分析抽象为一个 [DAG](https://en.wikipedia.org/wiki/Directed_acyclic_graph)，以及像版本控制这样的工程最佳实践。
- en: Nothing here is binding
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 这里没有任何强制性
- en: '"A foolish consistency is the hobgoblin of little minds" — Ralph Waldo Emerson
    (and [PEP 8!](https://www.python.org/dev/peps/pep-0008/#a-foolish-consistency-is-the-hobgoblin-of-little-minds))'
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “愚蠢的一致性是小心眼的精灵”——拉尔夫·瓦尔多·爱默生（以及 [PEP 8!](https://www.python.org/dev/peps/pep-0008/#a-foolish-consistency-is-the-hobgoblin-of-little-minds)）
- en: Disagree with a couple of the default folder names? Working on a project that's
    a little nonstandard and doesn't exactly fit with the current structure? Prefer
    to use a different package than one of the (few) defaults?
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 对默认文件夹名称有异议？正在处理一个不完全符合当前结构的项目？是否希望使用不同于（少数）默认的包？
- en: '**Go for it!** This is a lightweight structure, and is intended to be a good *starting
    point* for many projects. Or, as PEP 8 put it:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**去做吧！** 这是一个轻量级的结构，旨在成为许多项目的良好 *起点*。或者，正如 PEP 8 所说：'
- en: Consistency within a project is more important. Consistency within one module
    or function is the most important. ... However, know when to be inconsistent --
    sometimes style guide recommendations just aren't applicable. When in doubt, use
    your best judgment. Look at other examples and decide what looks best. And don't
    hesitate to ask!
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 项目内部的一致性更为重要。在一个模块或函数内部的一致性是最重要的……然而，要知道何时可以不一致——有时候样式指南的建议并不适用。当有疑问时，运用你最好的判断力。查看其他示例并决定什么看起来最好。不要犹豫，随时询问！
- en: Getting started
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开始使用
- en: With this in mind, we've created a data science cookiecutter template for projects
    in Python. Your analysis doesn't have to be in Python, but the template does provide
    some Python boilerplate that you'd want to remove (in the `src` folder for example,
    and the Sphinx documentation skeleton in `docs`).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这一点，我们为 Python 项目的数据科学创建了一个 cookiecutter 模板。你的分析不一定要用 Python，但该模板提供了一些你可能需要删除的
    Python 样板代码（例如在`src`文件夹中，以及在`docs`中的 Sphinx 文档骨架）。
- en: Requirements
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 要求
- en: Python 2.7 or 3.5
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 2.7 或 3.5
- en: '[cookiecutter Python package](http://cookiecutter.readthedocs.org/en/latest/installation.html) >=
    1.4.0: `pip install cookiecutter`'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[cookiecutter Python 包](http://cookiecutter.readthedocs.org/en/latest/installation.html)
    >= 1.4.0: `pip install cookiecutter`'
- en: Starting a new project
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启动新项目
- en: Starting a new project is as easy as running this command at the command line.
    No need to create a directory first, the cookiecutter will do it for you.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 启动一个新项目只需在命令行中运行此命令即可。无需先创建目录，cookiecutter 会为你完成这项工作。
- en: '[PRE0]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Example
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: Directory structure
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 目录结构
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Opinions
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 意见
- en: There are some opinions implicit in the project structure that have grown out
    of our experience with what works and what doesn't when collaborating on data
    science projects. Some of the opinions are about workflows, and some of the opinions
    are about tools that make life easier. Here are some of the beliefs which this
    project is built on—if you've got thoughts, please [contribute or share them](https://drivendata.github.io/cookiecutter-data-science/#contributing).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 项目结构中隐含了一些观点，这些观点源于我们与数据科学项目合作时的经验，了解什么有效、什么无效。一些观点涉及工作流程，另一些观点涉及使生活更轻松的工具。以下是这个项目所基于的一些信念——如果你有想法，请
    [贡献或分享它们](https://drivendata.github.io/cookiecutter-data-science/#contributing)。
- en: Data is immutable
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据是不可变的
- en: Don't ever edit your raw data, especially not manually, and especially not in
    Excel. Don't overwrite your raw data. Don't save multiple versions of the raw
    data. Treat the data (and its format) as immutable. The code you write should
    move the raw data through a pipeline to your final analysis. You shouldn't have
    to run all of the steps every time you want to make a new figure (see [Analysis
    is a DAG](https://drivendata.github.io/cookiecutter-data-science/#analysis-is-a-dag)),
    but anyone should be able to reproduce the final products with only the code in `src` and
    the data in `data/raw`.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 切勿编辑你的原始数据，尤其是手动编辑，更不要在 Excel 中编辑。不要覆盖你的原始数据。不要保存多个版本的原始数据。将数据（及其格式）视为不可变的。你编写的代码应该将原始数据通过一个流程传递到你的最终分析中。你不应该每次想制作新图时都运行所有步骤（参见
    [分析是一个有向无环图（DAG）](https://drivendata.github.io/cookiecutter-data-science/#analysis-is-a-dag)），但任何人都应该能够仅用`src`中的代码和`data/raw`中的数据重现最终产品。
- en: Also, if data is immutable, it doesn't need source control in the same way that
    code does. Therefore, ***by default, the data folder is included in the `.gitignore`
    file.*** If you have a small amount of data that rarely changes, you may want
    to include the data in the repository. Github currently warns if files are over
    50MB and rejects files over 100MB. Some other options for storing/syncing large
    data include [AWS S3](https://aws.amazon.com/s3/) with a syncing tool (e.g., [`s3cmd`](http://s3tools.org/s3cmd)), [Git
    Large File Storage](https://git-lfs.github.com/), [Git Annex](https://git-annex.branchable.com/),
    and [dat](http://dat-data.com/). Currently by default, we ask for an S3 bucket
    and use [AWS CLI](http://docs.aws.amazon.com/cli/latest/reference/s3/index.html) to
    sync data in the `data` folder with the server.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果数据是不可变的，它不需要像代码那样的源代码管理。因此，***默认情况下，数据文件夹包含在`.gitignore`文件中。*** 如果你有少量数据且不常更改，你可能想将数据包含在存储库中。Github
    目前会警告文件超过 50MB，并拒绝超过 100MB 的文件。存储/同步大数据的其他选项包括[AWS S3](https://aws.amazon.com/s3/)和同步工具（例如，[`s3cmd`](http://s3tools.org/s3cmd)），[Git
    Large File Storage](https://git-lfs.github.com/)，[Git Annex](https://git-annex.branchable.com/)和[dat](http://dat-data.com/)。当前默认情况下，我们要求使用S3桶，并使用[AWS
    CLI](http://docs.aws.amazon.com/cli/latest/reference/s3/index.html)将`data`文件夹中的数据与服务器同步。
- en: Notebooks are for exploration and communication
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 笔记本用于探索和沟通
- en: Notebook packages like the [Jupyter notebook](http://jupyter.org/), [Beaker
    notebook](http://beakernotebook.com/), [Zeppelin](http://zeppelin-project.org/),
    and other literate programming tools are very effective for exploratory data analysis.
    However, these tools can be less effective for reproducing an analysis. When we
    use notebooks in our work, we often subdivide the `notebooks` folder. For example, `notebooks/exploratory` contains
    initial explorations, whereas `notebooks/reports` is more polished work that can
    be exported as html to the `reports` directory.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 像[Jupyter notebook](http://jupyter.org/)、[Beaker notebook](http://beakernotebook.com/)、[Zeppelin](http://zeppelin-project.org/)以及其他文献编程工具的笔记本包在探索性数据分析中非常有效。然而，这些工具在重现分析方面可能效果较差。当我们在工作中使用笔记本时，我们通常会细分`notebooks`文件夹。例如，`notebooks/exploratory`包含初步探索，而`notebooks/reports`则是更精细的工作，可以导出为html到`reports`目录。
- en: 'Since notebooks are challenging objects for source control (e.g., diffs of
    the `json` are often not human-readable and merging is near impossible), we recommended
    not collaborating directly with others on Jupyter notebooks. There are two steps
    we recommend for using notebooks effectively:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 由于笔记本对源代码管理（例如，`json`的差异通常不可读，合并几乎不可能）具有挑战性，我们建议不要直接与他人协作Jupyter笔记本。我们推荐使用笔记本的两个步骤：
- en: Follow a naming convention that shows the owner and the order the analysis was
    done in. We use the format `<step>-<ghuser>-<description>.ipynb` (e.g., `0.3-bull-visualize-distributions.ipynb`).
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 遵循一个显示所有者和分析顺序的命名约定。我们使用`<step>-<ghuser>-<description>.ipynb`格式（例如，`0.3-bull-visualize-distributions.ipynb`）。
- en: Refactor the good parts. Don't write code to do the same task in multiple notebooks.
    If it's a data preprocessing task, put it in the pipeline at `src/data/make_dataset.py` and
    load data from `data/interim`. If it's useful utility code, refactor it to `src`.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重构好的部分。不要在多个笔记本中编写完成相同任务的代码。如果这是一个数据预处理任务，请将其放在`src/data/make_dataset.py`的管道中，并从`data/interim`加载数据。如果是有用的实用代码，请重构到`src`中。
- en: 'Now by default we turn the project into a Python package (see the `setup.py` file).
    You can import your code and use it in notebooks with a cell like the following:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在默认将项目转换为Python包（请参阅`setup.py`文件）。你可以导入你的代码，并使用如下单元格在笔记本中使用它：
- en: '[PRE2]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Analysis is a DAG
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分析是一个DAG
- en: Often in an analysis you have long-running steps that preprocess data or train
    models. If these steps have been run already (and you have stored the output somewhere
    like the `data/interim` directory), you don't want to wait to rerun them every
    time. We prefer [`make`](https://www.gnu.org/software/make/) for managing steps
    that depend on each other, especially the long-running ones. Make is a common
    tool on Unix-based platforms (and [is available for Windows](https://drivendata.github.io/cookiecutter-data-science/)).
    Following the [`make` documentation](https://www.gnu.org/software/make/), [Makefile
    conventions](https://www.gnu.org/prep/standards/html_node/Makefile-Conventions.html#Makefile-Conventions),
    and [portability guide](http://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/html_node/Portable-Make.html#Portable-Make) will
    help ensure your Makefiles work effectively across systems. Here are [some](http://zmjones.com/make/) [examples](https://blog.kaggle.com/2012/10/15/make-for-data-scientists/) to [get
    started](https://web.archive.org/web/20150206054212/http://www.bioinformaticszen.com/post/decomplected-workflows-makefiles/).
    A number of data folks use `make` as their tool of choice, including [Mike Bostock](https://bost.ocks.org/mike/make/).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在分析中，经常会有长时间运行的步骤用于预处理数据或训练模型。如果这些步骤已经运行过（并且你已经将输出存储在`data/interim`目录等位置），你不希望每次都要等待重新运行。我们更喜欢[`make`](https://www.gnu.org/software/make/)来管理相互依赖的步骤，特别是长时间运行的步骤。Make是Unix平台上的常用工具（并且[在Windows上可用](https://drivendata.github.io/cookiecutter-data-science/)）。遵循[`make`文档](https://www.gnu.org/software/make/)、[Makefile约定](https://www.gnu.org/prep/standards/html_node/Makefile-Conventions.html#Makefile-Conventions)和[可移植性指南](http://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/html_node/Portable-Make.html#Portable-Make)将有助于确保你的Makefiles在各系统上有效。这里有[一些](http://zmjones.com/make/)
    [示例](https://blog.kaggle.com/2012/10/15/make-for-data-scientists/)以[开始](https://web.archive.org/web/20150206054212/http://www.bioinformaticszen.com/post/decomplected-workflows-makefiles/)。包括[Mike
    Bostock](https://bost.ocks.org/mike/make/)在内的许多数据人员将`make`作为首选工具。
- en: There are other tools for managing DAGs that are written in Python instead of
    a DSL (e.g., [Paver](http://paver.github.io/paver/#), [Luigi](http://luigi.readthedocs.org/en/stable/index.html), [Airflow](https://pythonhosted.org/airflow/cli.html), [Snakemake](https://bitbucket.org/snakemake/snakemake/wiki/Home), [Ruffus](http://www.ruffus.org.uk/),
    or [Joblib](https://pythonhosted.org/joblib/memory.html)). Feel free to use these
    if they are more appropriate for your analysis.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他管理DAG的工具，它们用Python而不是DSL编写（例如，[Paver](http://paver.github.io/paver/#)、[Luigi](http://luigi.readthedocs.org/en/stable/index.html)、[Airflow](https://pythonhosted.org/airflow/cli.html)、[Snakemake](https://bitbucket.org/snakemake/snakemake/wiki/Home)、[Ruffus](http://www.ruffus.org.uk/)或[Joblib](https://pythonhosted.org/joblib/memory.html)）。如果这些工具更适合你的分析，可以随意使用它们。
- en: Build from the environment up
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从环境开始构建。
- en: The first step in reproducing an analysis is always reproducing the computational
    environment it was run in. You need the same tools, the same libraries, and the
    same versions to make everything play nicely together.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 重现分析的第一步始终是重现运行时的计算环境。你需要相同的工具、相同的库和相同的版本以确保一切正常配合。
- en: 'One effective approach to this is use [virtualenv](https://virtualenv.pypa.io/en/latest/) (we
    recommend [virtualenvwrapper](https://virtualenvwrapper.readthedocs.org/en/latest/) for
    managing virtualenvs). By listing all of your requirements in the repository (we
    include a `requirements.txt` file) you can easily track the packages needed to
    recreate the analysis. Here is a good workflow:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 一种有效的方法是使用[virtualenv](https://virtualenv.pypa.io/en/latest/)（我们推荐[virtualenvwrapper](https://virtualenvwrapper.readthedocs.org/en/latest/)来管理virtualenvs）。通过在存储库中列出所有需求（我们包括一个`requirements.txt`文件），你可以轻松跟踪重现分析所需的包。这里是一个好的工作流程：
- en: Run `mkvirtualenv` when creating a new project
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建新项目时运行`mkvirtualenv`。
- en: '`pip install` the packages that your analysis needs'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`pip install`你分析所需的包。'
- en: Run `pip freeze > requirements.txt` to pin the exact package versions used to
    recreate the analysis
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`pip freeze > requirements.txt`以固定用于重现分析的确切包版本。
- en: If you find you need to install another package, run `pip freeze > requirements.txt` again
    and commit the changes to version control.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你发现需要安装另一个包，再次运行`pip freeze > requirements.txt`并提交更改到版本控制中。
- en: If you have more complex requirements for recreating your environment, consider
    a virtual machine based approach such as [Docker](https://www.docker.com/) or [Vagrant](https://www.vagrantup.com/).
    Both of these tools use text-based formats (Dockerfile and Vagrantfile respectively)
    you can easily add to source control to describe how to create a virtual machine
    with the requirements you need.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对重建环境有更复杂的要求，可以考虑基于虚拟机的方法，例如[Docker](https://www.docker.com/)或[Vagrant](https://www.vagrantup.com/)。这两种工具都使用基于文本的格式（Dockerfile
    和 Vagrantfile），你可以轻松地将其添加到源代码控制中，以描述如何创建具有所需要求的虚拟机。
- en: Keep secrets and configuration out of version control
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 保持机密和配置不被纳入版本控制
- en: 'You *really* don''t want to leak your AWS secret key or Postgres username and
    password on Github. Enough said — see the [Twelve Factor App](http://12factor.net/config) principles
    on this point. Here''s one way to do this:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 你*真的*不希望在 Github 上泄露你的 AWS 密钥或 Postgres 用户名和密码。无需多言——请参阅[Twelve Factor App](http://12factor.net/config)的原则。以下是一种方法：
- en: '**Store your secrets and config variables in a special file**'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**将你的机密和配置变量存储在一个特殊文件中**'
- en: 'Create a `.env` file in the project root folder. Thanks to the `.gitignore`,
    this file should never get committed into the version control repository. Here''s
    an example:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在项目根文件夹中创建一个`.env`文件。由于`.gitignore`的存在，该文件不应被提交到版本控制库中。以下是一个示例：
- en: '[PRE3]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Use a package to load these variables automatically.**'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用一个包自动加载这些变量。**'
- en: 'If you look at the stub script in `src/data/make_dataset.py`, it uses a package
    called [python-dotenv](https://github.com/theskumar/python-dotenv) to load up
    all the entries in this file as environment variables so they are accessible with `os.environ.get`.
    Here''s an example snippet adapted from the `python-dotenv` documentation:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果查看`src/data/make_dataset.py`中的占位符脚本，它使用了一个名为[python-dotenv](https://github.com/theskumar/python-dotenv)的包，将此文件中的所有条目加载为环境变量，以便可以通过`os.environ.get`访问。以下是从`python-dotenv`文档中改编的示例代码片段：
- en: '[PRE4]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**AWS CLI configuration**'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**AWS CLI 配置**'
- en: 'When using Amazon S3 to store data, a simple method of managing AWS access
    is to set your access keys to environment variables. However, managing mutiple
    sets of keys on a single machine (e.g. when working on multiple projects) it is
    best to use a [credentials file](https://docs.aws.amazon.com/cli/latest/userguide/cli-config-files.html),
    typically located in `~/.aws/credentials`. A typical file might look like:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Amazon S3 存储数据时，管理 AWS 访问的一种简单方法是将访问密钥设置为环境变量。然而，在单台机器上管理多个密钥集（例如，当同时处理多个项目时），最好使用一个[凭证文件](https://docs.aws.amazon.com/cli/latest/userguide/cli-config-files.html)，通常位于`~/.aws/credentials`。一个典型的文件可能如下所示：
- en: '[PRE5]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You can add the profile name when initialising a project; assuming no applicable
    environment variables are set, the profile credentials will be used be default.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化项目时可以添加配置文件名称；如果没有设置适用的环境变量，默认会使用配置文件凭证。
- en: Be conservative in changing the default folder structure
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在更改默认文件夹结构时应保持保守。
- en: To keep this structure broadly applicable for many different kinds of projects,
    we think the best approach is to be liberal in changing the folders around for *your* project,
    but be conservative in changing the default structure for *all* projects.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使这种结构对各种不同类型的项目都适用，我们认为最佳方法是对*你的*项目在调整文件夹时采取宽松态度，但对*所有*项目的默认结构保持保守。
- en: We've created a folder-layout label specifically for issues proposing to add,
    subtract, rename, or move folders around. More generally, we've also created a needs-discussion label
    for issues that should have some careful discussion and broad support before being
    implemented.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了一个`folder-layout`标签，专门用于提出添加、删除、重命名或移动文件夹的问题。更一般地，我们还创建了一个`needs-discussion`标签，针对那些在实施之前需要仔细讨论和广泛支持的问题。
- en: Contributing
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 贡献
- en: The Cookiecutter Data Science project is opinionated, but not afraid to be wrong.
    Best practices change, tools evolve, and lessons are learned. **The goal of this
    project is to make it easier to start, structure, and share an analysis.** [Pull
    requests](https://github.com/drivendata/cookiecutter-data-science/pulls) and [filing
    issues](https://github.com/drivendata/cookiecutter-data-science/issues) is encouraged.
    We'd love to hear what works for you, and what doesn't.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Cookiecutter Data Science 项目有自己的观点，但不怕出错。最佳实践会变化，工具会发展，经验也会积累。**该项目的目标是使启动、结构化和共享分析变得更容易。**
    [拉取请求](https://github.com/drivendata/cookiecutter-data-science/pulls)和[提交问题](https://github.com/drivendata/cookiecutter-data-science/issues)是被鼓励的。我们希望了解哪些方法对你有效，哪些无效。
- en: If you use the Cookiecutter Data Science project, link back to this page or [give
    us a holler](https://twitter.com/drivendataorg) and [let us know](mailto:info@drivendata.org)!
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用 Cookiecutter 数据科学项目，请链接回此页面或 [给我们发消息](https://twitter.com/drivendataorg) 并 [告知我们](mailto:info@drivendata.org)!
- en: Links to related projects and references
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关项目和参考文献的链接
- en: Project structure and reproducibility is talked about more in the R research
    community. Here are some projects and blog posts if you're working in R that may
    help you out.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: R 研究社区中讨论得更多的是项目结构和可重复性。如果你在使用 R，这里有一些项目和博客帖子可能对你有所帮助。
- en: '[Project Template](http://projecttemplate.net/index.html) - An R data analysis
    template'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[项目模板](http://projecttemplate.net/index.html) - 一个 R 数据分析模板'
- en: '"[Designing projects](http://nicercode.github.io/blog/2013-04-05-projects/)"
    on Nice R Code'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"[设计项目](http://nicercode.github.io/blog/2013-04-05-projects/)" 在 Nice R Code
    上'
- en: '"[My research workflow](http://www.carlboettiger.info/2012/05/06/research-workflow.html)"
    on Carlboettifer.info'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"[我的研究工作流程](http://www.carlboettiger.info/2012/05/06/research-workflow.html)"
    在 Carlboettifer.info 上'
- en: '"[A Quick Guide to Organizing Computational Biology Projects](http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1000424)"
    in PLOS Computational Biology'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"[组织计算生物学项目的快速指南](http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1000424)"
    在 PLOS 计算生物学上'
- en: Finally, a huge thanks to the [Cookiecutter](https://cookiecutter.readthedocs.org/en/latest/) project
    ([github](https://github.com/audreyr/cookiecutter)), which is helping us all spend
    less time thinking about and writing boilerplate and more time getting things
    done.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，非常感谢 [Cookiecutter](https://cookiecutter.readthedocs.org/en/latest/) 项目（[github](https://github.com/audreyr/cookiecutter)），它帮助我们减少了思考和编写模板的时间，更多时间用于完成任务。
- en: '**Bio: [DrivenData](https://www.drivendata.org/)** is a mission-driven data
    science firm that brings the powerful capabilities of data science, machine learning,
    and artificial intelligence to organizations tackling the world’s biggest challenges.
    DrivenData Labs (drivendata.co) helps mission-driven organizations harness data
    to work smarter, offer more impactful services, and use machine intelligence to
    its fullest potential. DrivenData also runs online machine learning competitions
    (drivendata.org) where a passionate, global community of data scientists build
    algorithms for social impact.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介： [DrivenData](https://www.drivendata.org/)** 是一家使命驱动的数据科学公司，致力于将数据科学、机器学习和人工智能的强大能力带给应对全球重大挑战的组织。DrivenData
    Labs (drivendata.co) 帮助使命驱动的组织利用数据更智能地工作，提供更有影响力的服务，并充分发挥机器智能的潜力。DrivenData 还举办在线机器学习竞赛
    (drivendata.org)，全球充满激情的数据科学家社区为社会影响构建算法。'
- en: '[Original](https://drivendata.github.io/cookiecutter-data-science/). Reposted
    with permission.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[原始](https://drivendata.github.io/cookiecutter-data-science/)。经许可转载。'
- en: '**Related:**'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Data Structures Related to Machine Learning Algorithms](/2018/01/data-structures-related-machine-learning-algorithms.html)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[与机器学习算法相关的数据结构](/2018/01/data-structures-related-machine-learning-algorithms.html)'
- en: '[Python Regular Expressions Cheat Sheet](/2018/04/python-regular-expressions-cheat-sheet.html)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 正则表达式备忘单](/2018/04/python-regular-expressions-cheat-sheet.html)'
- en: '[Introduction to Functional Programming in Python](/2018/02/introduction-functional-programming-python.html)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 中的函数式编程介绍](/2018/02/introduction-functional-programming-python.html)'
- en: More On This Topic
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[成为优秀数据科学家所需的 5 种关键技能](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个初学者数据科学家都应掌握的 6 种预测模型](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
- en: '[The Best ETL Tools in 2021](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2021 年最佳 ETL 工具](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[停止学习数据科学以寻找目的，并寻找目的去……](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习数据科学统计的顶级资源](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
- en: '[Building a solid data team](https://www.kdnuggets.com/2021/12/build-solid-data-team.html)'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[建立一个强大的数据团队](https://www.kdnuggets.com/2021/12/build-solid-data-team.html)'
