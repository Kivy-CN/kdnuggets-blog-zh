["```py\n\ncat_table <- dplyr::tbl(\n  con,\n  dbplyr::in_schema(\"CAT_SCHEMA\", \"CAT_TABLE\")\n)\n```", "```py\nget_chart <- function(date = Sys.Date(), positions = c(1:10), type = \"hot-100\") {     # get url from input and read html\n  input <- paste0(\"https://www.billboard.com/charts/\", type, \"/\", date)     chart_page <- xml2::read_html(input)       # scrape data\n  chart <- chart_page %>%\n    rvest::html_nodes('body') %>%\n    xml2::xml_find_all(\"//div[contains(@class, 'chart-list-item  ')]\")        rank <- chart %>%\n    xml2::xml_attr('data-rank')      artist <- chart %>%\n    xml2::xml_attr('data-artist')      title <- chart %>%\n    xml2::xml_attr('data-title')     # create dataframe, remove nas and return result\n  chart_df <- data.frame(rank, artist, title)\n  chart_df <- chart_df %>%\n    dplyr::filter(!is.na(rank), rank %in% positions)   chart_df\n}\n```", "```py\ndogdata %>%\n  tidyr::complete(SEX, BREED, fill = list(COUNT = 0)) \n```", "```py\nDT::datatable(\n  head(iris),\n  caption = 'Table 1: This is a simple caption for the table.'\n)\n```", "```py\n---\ntitle: \"My doc\"\nauthor: \"Me\"\ndate: June 3, 2019\noutput:\n  prettydoc::html_pretty:\n    theme: architect\n    highlight: github\n---\n```"]