- en: How To Debug Running Docker Containers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何调试运行中的 Docker 容器
- en: 原文：[https://www.kdnuggets.com/how-to-debug-running-docker-containers](https://www.kdnuggets.com/how-to-debug-running-docker-containers)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/how-to-debug-running-docker-containers](https://www.kdnuggets.com/how-to-debug-running-docker-containers)
- en: '![How To Debug Running Docker Containers](../Images/90166179230c4d4f907116b80914e6fd.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![如何调试运行中的 Docker 容器](../Images/90166179230c4d4f907116b80914e6fd.png)'
- en: Image by Editor | Midjourney & Canva
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由编辑 | Midjourney & Canva
- en: Containers can sometimes behave unexpectedly due to configuration issues, application
    bugs, or resource constraints. In this tutorial, we'll go over the different methods
    to debug running containers by taking the example of a Postgres container.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 容器有时由于配置问题、应用程序错误或资源限制而表现得异常。在本教程中，我们将通过以 Postgres 容器为例，讲解不同的调试方法。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织进行 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Prerequisites
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 先决条件
- en: 'To follow along to this tutorial:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本教程：
- en: You should have Docker installed in your development environment. [Get Docker](https://docs.docker.com/get-docker/)
    if you haven’t already.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该在你的开发环境中安装 Docker。如果还没有，[获取 Docker](https://docs.docker.com/get-docker/)。
- en: You should be comfortable with how Docker works and basic commands to pull images,
    start, stop, and manage containers.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该对 Docker 的工作原理和基本命令（如拉取镜像、启动、停止以及管理容器）感到熟悉。
- en: Pull and Start a PostgreSQL Container
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 拉取并启动一个 PostgreSQL 容器
- en: 'First, let''s pull the latest PostgreSQL image from DockerHub and start a container.
    Here, we pull postgres:16 using the `docker pull` command:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们从 DockerHub 拉取最新的 PostgreSQL 镜像并启动一个容器。这里，我们使用 `docker pull` 命令拉取 postgres:16：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once the pull is complete, you can start the postgres container with the following
    docker run command. Note that the `POSTGRES_PASSWORD` is the required environment
    variable you need to start the container:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦拉取完成，你可以使用以下 docker run 命令来启动 postgres 容器。请注意，`POSTGRES_PASSWORD` 是启动容器所需的环境变量：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This command starts a new container named `my_postgres` with PostgreSQL running
    inside it. You can verify it by running the `docker ps` command:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令启动一个名为 `my_postgres` 的新容器，容器内运行 PostgreSQL。你可以通过运行 `docker ps` 命令来验证：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Which outputs:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果：
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 1\. Inspect the Container
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 检查容器
- en: 'You can use the `docker inspect` command to retrieve detailed information about
    a container. This can be useful for checking the container''s configuration, network
    settings, and state:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 `docker inspect` 命令来获取容器的详细信息。这对于检查容器的配置、网络设置和状态非常有用：
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This command outputs a JSON object with all the details about the container.
    You can use tools like [jq](https://jqlang.github.io/jq/) to parse and extract
    specific information of interest from this output.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令输出一个包含容器所有详细信息的 JSON 对象。你可以使用像 [jq](https://jqlang.github.io/jq/) 这样的工具来解析和提取这个输出中的特定信息。
- en: '![docker-inspect](../Images/0c6609a7af6cc59f37ca7961ce4f3047.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![docker-inspect](../Images/0c6609a7af6cc59f37ca7961ce4f3047.png)'
- en: Truncated output of docker inspect my_postgres
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: docker inspect my_postgres 的截断输出
- en: 2\. View Container Logs
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 查看容器日志
- en: The `docker logs` command fetches the logs from a running container. This is
    useful for troubleshooting issues related to the application running inside the
    container.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`docker logs` 命令可以获取正在运行的容器的日志。这对于排查与容器内应用程序相关的问题非常有用。'
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![docker-logs](../Images/5dbf5ed3e0b8d65903dc203449de77a4.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![docker-logs](../Images/5dbf5ed3e0b8d65903dc203449de77a4.png)'
- en: Truncated output of docker logs my_postgres
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: docker logs my_postgres 的截断输出
- en: 3\. Execute Commands Inside the Container
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 在容器内执行命令
- en: Sometimes it’s helpful to get into the container and run a bunch of diagnostic
    commands. You can do this with the `docker exec` command that allows you to run
    commands inside a running container. This is useful for inspecting the container's
    filesystem, checking environment variables, or the like.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 有时进入容器并运行一堆诊断命令是有帮助的。你可以使用 `docker exec` 命令在运行中的容器内执行命令。这对于检查容器的文件系统、环境变量等非常有用。
- en: 'Here’s how you can start an interactive shell session inside the running container:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是如何在运行中的容器内启动交互式 shell 会话：
- en: '[PRE6]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This command opens an interactive bash shell inside the `my_postgres` container.
    So you can run commands from within the container.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令在 `my_postgres` 容器内打开一个交互式 bash shell。这样你可以在容器内运行命令。
- en: 4\. Check Running Processes
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 检查运行中的进程
- en: 'The `docker top` command shows the running processes inside a container. This
    can help you identify if any processes are consuming more resources than expected
    or if there are any unexpected processes running:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`docker top` 命令显示容器内运行的进程。这有助于识别是否有进程消耗的资源超过预期或是否有任何意外进程正在运行：'
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 5\. Attach to the Container
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. 附加到容器
- en: 'The `docker attach` command allows you to attach your terminal to a running
    container''s main process. This can be useful for debugging interactive processes:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '`docker attach` 命令允许你将终端附加到运行中的容器的主进程。这对于调试交互式进程很有用：'
- en: '[PRE9]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Note that attaching to a container is different from `docker exec` as it connects
    you to the container's main process and streams its standard output and standard
    error to your terminal.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，附加到容器与 `docker exec` 不同，因为它连接到容器的主进程并将其标准输出和标准错误流传输到你的终端。
- en: 6\. View Resource Usage
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6\. 查看资源使用情况
- en: 'With the `docker stats` command, you can get real-time statistics on container
    resource usage including CPU, memory, and network. Which is helpful if you want
    to analyze performance issues:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `docker stats` 命令，你可以获取容器资源使用的实时统计数据，包括 CPU、内存和网络。这对于分析性能问题非常有帮助：
- en: '[PRE10]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Here''s a sample output:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个示例输出：
- en: '[PRE11]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Debugging Docker containers involves inspecting container config, viewing logs,
    executing commands inside the container, and monitoring resource usage. With these
    techniques, you can effectively troubleshoot and resolve issues with your containerized
    applications. Happy debugging!
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 调试 Docker 容器涉及检查容器配置、查看日志、在容器内执行命令以及监控资源使用情况。运用这些技术，你可以有效地排查和解决容器化应用中的问题。祝你调试愉快！
- en: Additional Resources
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 额外资源
- en: 'Check out the following resources if you’d like to explore further:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想进一步探索，请查看以下资源：
- en: '[How to Fix and Debug Docker Containers Like a Superhero](https://www.docker.com/blog/how-to-fix-and-debug-docker-containers-like-a-superhero/)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何像超级英雄一样修复和调试 Docker 容器](https://www.docker.com/blog/how-to-fix-and-debug-docker-containers-like-a-superhero/)'
- en: '[View container logs | Docker Docs](https://docs.docker.com/config/containers/logging/)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[查看容器日志 | Docker 文档](https://docs.docker.com/config/containers/logging/)'
- en: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)****
    is a developer and technical writer from India. She likes working at the intersection
    of math, programming, data science, and content creation. Her areas of interest
    and expertise include DevOps, data science, and natural language processing. She
    enjoys reading, writing, coding, and coffee! Currently, she''s working on learning
    and sharing her knowledge with the developer community by authoring tutorials,
    how-to guides, opinion pieces, and more. Bala also creates engaging resource overviews
    and coding tutorials.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)****
    是一位来自印度的开发者和技术作家。她喜欢在数学、编程、数据科学和内容创作的交汇点上工作。她的兴趣和专长领域包括 DevOps、数据科学和自然语言处理。她喜欢阅读、写作、编程和喝咖啡！目前，她正在通过编写教程、操作指南、观点文章等方式学习和分享她的知识，服务开发者社区。Bala
    还创建了引人入胜的资源概述和编码教程。'
- en: More On This Topic
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[High Availability SQL Server Docker Containers in Kubernetes](https://www.kdnuggets.com/2022/04/high-availability-sql-server-docker-containers-kubernetes.html)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Kubernetes 中的高可用 SQL Server Docker 容器](https://www.kdnuggets.com/2022/04/high-availability-sql-server-docker-containers-kubernetes.html)'
- en: '[How to Get Up and Running with SQL - A List of Free Learning Resources](https://www.kdnuggets.com/2022/10/get-running-sql-list-free-learning-resources.html)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何开始使用 SQL - 免费学习资源列表](https://www.kdnuggets.com/2022/10/get-running-sql-list-free-learning-resources.html)'
- en: '[7 Steps to Running a Small Language Model on a Local CPU](https://www.kdnuggets.com/7-steps-to-running-a-small-language-model-on-a-local-cpu)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在本地 CPU 上运行小型语言模型的 7 个步骤](https://www.kdnuggets.com/7-steps-to-running-a-small-language-model-on-a-local-cpu)'
- en: '[Running Mixtral 8x7b On Google Colab For Free](https://www.kdnuggets.com/running-mixtral-8x7b-on-google-colab-for-free)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Google Colab 上免费运行 Mixtral 8x7b](https://www.kdnuggets.com/running-mixtral-8x7b-on-google-colab-for-free)'
- en: '[Ollama Tutorial: Running LLMs Locally Made Super Simple](https://www.kdnuggets.com/ollama-tutorial-running-llms-locally-made-super-simple)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Ollama 教程：本地运行 LLM 变得超级简单](https://www.kdnuggets.com/ollama-tutorial-running-llms-locally-made-super-simple)'
- en: '[Running Redis on Google Colab](https://www.kdnuggets.com/2022/01/running-redis-google-colab.html)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Google Colab 上运行 Redis](https://www.kdnuggets.com/2022/01/running-redis-google-colab.html)'
