- en: 10 Underrated Python Skills
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/10/10-underrated-python-skills.html](https://www.kdnuggets.com/2020/10/10-underrated-python-skills.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)![Figure](../Images/ba293eb99023d78b02241f8edbd8dc5d.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Photo by [Jermaine Ulinwa](https://www.pexels.com/@roseleon?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels) from [Pexels](https://www.pexels.com/photo/photo-of-woman-leaning-on-wooden-fence-3321584/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels)
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: In a 2012 article, “[The Sexiest Job of the 21st Century](https://hbr.org/2012/10/data-scientist-the-sexiest-job-of-the-21st-century),” *Harvard
    Business Review* portrayed a vision of [data science teams](https://medium.com/atlas-research/data-science-team-eae84b1af65d) effortlessly
    creating actionable information from data.
  prefs: []
  type: TYPE_NORMAL
- en: While it’s not quite *Baywatch*, data science is a dynamic field with great
    potential to produce valuable insights from an organization’s top strategic asset
    — the competitive advantage offered by a great data infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: To help with your data science work, here are** ten undervalued Python skills**.
    Mastering these capabilities will — dare I say it — make you an even sexier data
    scientist. Our team balances beauty and brains, all while pushing the limits,
    saving people in danger, and doing heroic acts. So let’s get started.
  prefs: []
  type: TYPE_NORMAL
- en: '#10 — Setting up a virtual environment'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A virtual environment sets up an isolated workspace for your Python project.
    Whether you’re working solo or with collaborators, having a virtual environment
    is helpful for the following reasons:'
  prefs: []
  type: TYPE_NORMAL
- en: Avoiding package conflicts
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Providing clear line of sight on where packages are being installed
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ensuring consistency in package version utilized by the project
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The use of a virtual environment allows you (and your teammates) to have different
    dependencies for different projects. Within the virtual environment, you can test
    install packages without polluting the system install.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/b3c5e42fdd2745052866edb39f1db8f3.png)'
  prefs: []
  type: TYPE_IMG
- en: “I kinda like it in here. It’s private.” — Jamie Hyneman of *Mythbusters*. Photo
    by [NASA](https://unsplash.com/@nasa?utm_source=medium&utm_medium=referral) on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral).
  prefs: []
  type: TYPE_NORMAL
- en: Deploying the [venv module](https://docs.python.org/3/library/venv.html) is
    seriously helpful for avoiding issues down the line, so don’t skip this step when
    getting started with your project.
  prefs: []
  type: TYPE_NORMAL
- en: '[*Read more*](https://avilpage.com/2020/02/reduce-python-package-footprint.html)*:
    save space — and avoid installing the same version of multiple packages in different
    places — by setting up a virtual environment that contains the most commonly used
    packages for scientific computing. Then share that common environment as a .pth
    file across project-specific environments.*'
  prefs: []
  type: TYPE_NORMAL
- en: '#9 — Commenting according to PEP8 standards'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Write good comments for improved confidence and collaborative abilities. In
    Python, that means following the [PEP8](https://www.python.org/dev/peps/pep-0008/#comments) style
    guide.
  prefs: []
  type: TYPE_NORMAL
- en: 'Comments should be declarative, like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**NOT** `# fixes issue`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s an example with a [docstring](https://www.python.org/dev/peps/pep-0257/),
    a special type of comment that is used to explain the purpose of a function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Docstrings are particularly useful because your IDE will recognize this string
    literal as the definition associated with a class. In Jupyter Notebook, you can
    view a function’s docstring by putting your cursor at the end of the function
    and simultaneously hitting Shift and Tab.
  prefs: []
  type: TYPE_NORMAL
- en: '#8 — Finding good utility code'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You’ve heard the expression “standing on the shoulders of giants.” Python is
    an exceedingly well-resourced language. You can speed up your data science discoveries
    by recognizing you don’t have to go it alone — you can and should reuse the utility
    code of the programmers who’ve come before you.
  prefs: []
  type: TYPE_NORMAL
- en: One great source for utility code is the blog of [Chris Albon](https://chrisalbon.com/),
    creator of the [Machine Learning flashcards](https://machinelearningflashcards.com/) that
    decorate the walls of my home office / bedroom. The landing page of his site offers
    navigation to hundreds of code snippets to accelerate your workflow in Python.
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, Chris shows us how to [apply a function](https://chrisalbon.com/python/data_wrangling/pandas_apply_function_by_group/) (such
    a pandas’ rolling mean — .rolling()) to a dataframe, by group:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This code outputs a dataframe that contains a rolling average of every two rows,
    restarting for each group in the first part of the .groupby() statement.
  prefs: []
  type: TYPE_NORMAL
- en: '#7 — Using pandas-profiling for automated EDA'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Use the [panda-profiling toolkit](https://pandas-profiling.github.io/pandas-profiling/docs/master/rtd/) to
    automate much of your exploratory data analysis. EDA is the crucial phase zero
    of any data science project. It typically involves basic statistical analytics
    and looking at how features correlate with each other.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/bd116b9e8b1cb1526e8dc790ff4e27fc.png)'
  prefs: []
  type: TYPE_IMG
- en: '[pandas-profiling](https://pandas-profiling.github.io/pandas-profiling/docs/master/rtd/) to
    the rescue. Photo by [NeONBRAND](https://unsplash.com/@neonbrand?utm_source=medium&utm_medium=referral) on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)'
  prefs: []
  type: TYPE_NORMAL
- en: 'This article walks you through a standard ‘manual’ data exploration approach
    and compares it to the automatic report created by the pandas-profiling library:'
  prefs: []
  type: TYPE_NORMAL
- en: '[**A better EDA with Pandas-profiling**](https://towardsdatascience.com/a-better-eda-with-pandas-profiling-e842a00e1136)'
  prefs: []
  type: TYPE_NORMAL
- en: Exploratory Data Analysis is Dead, Long Live to Pandas-profiling! A Perfect
    Overview of your Data with Fewer Efforts.
  prefs: []
  type: TYPE_NORMAL
- en: '#6 — Improving target analysis with qcut'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this excellent video about improving your machine learning workflow, [Rebecca
    Bilbro](https://rebeccabilbro.github.io/) offers the sage advice to check out
    your target column before doing feature analysis.
  prefs: []
  type: TYPE_NORMAL
- en: '[Begin with the end in mind ](https://amzn.to/3jVSt31)— this way you set up
    a solid understanding of the target variable before jumping into your effort to
    predict or classify it. Taking this approach helps you identify potentially thorny
    problems (e.g. [class imbalance](https://towardsdatascience.com/how-to-handle-smote-data-in-imbalanced-classification-problems-cf4b86e8c6a1))
    up front.'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you’re dealing with a continuous variable, it may be useful to bin your
    values. Working with 5 bins offers the opportunity to leverage the pareto principle.
    To create quintiles, simply use panda’s q-cut function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Each bin will contain 20% of your dataset. Comparing the top quintile of your
    target variable against the bottom quintile often yields interesting results.
    This technique serves as a good starting point to determining what might be anomalous
    about the top (or bottom) performers within your target variable.
  prefs: []
  type: TYPE_NORMAL
- en: 'For further learning, also check out Rebecca’s appearance on [Women Who Code
    DC](https://medium.com/u/d6aacbc643bf?source=post_page-----dfdff5741fdf--------------------------------)’s
    Career Series, interviewed by yours truly:'
  prefs: []
  type: TYPE_NORMAL
- en: '#5 — Adding visualizations to feature analysis'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Visualizations aren’t just for business intelligence dashboards. Throwing in
    some helpful charts and graphs will reduce speed to insight as you investigate
    a new dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/858e48f6026a85e3197de99e0630665d.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Seaborn example gallery](https://seaborn.pydata.org/examples/index.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many possible approaches to using data viz to advance your analytical
    capabilities. Some resources to explore:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Seaborn example gallery](https://seaborn.pydata.org/examples/index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bokeh notebook examples](https://docs.bokeh.org/en/latest/docs/gallery.html#notebook-examples)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Yellowbrick gallery](https://www.scikit-yb.org/en/latest/gallery.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Streamlet for data exploration](https://towardsdatascience.com/the-most-useful-ml-tools-2020-e41b54061c58) (thanks [Ian
    Xiao](https://medium.com/u/a0eb4622a0ca?source=post_page-----dfdff5741fdf--------------------------------) for
    this tip!)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Tableau getting started guide](https://towardsdatascience.com/new-data-science-f4eeee38d8f6)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#4 — Measuring and optimizing runtime'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Data scientists have somewhat of a reputation for being tinkerers. But as the
    field is [increasingly drawing nearer to software engineering](https://towardsdatascience.com/must-read-data-science-papers-487cce9a2020),
    the demand for concise, highly performant code has increased. The performance
    of a program should be assessed in terms of time, space, and disk use — keys to
    scalable performance.
  prefs: []
  type: TYPE_NORMAL
- en: Python offers some [profiling utilities](https://docs.python.org/3/library/profile.html) to
    showcase where your code is spending time. To support the monitoring of a function’s
    runtime, Python offers the [timeit](https://docs.python.org/3/library/timeit.html) function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Some quick wins when it comes to improving your code while working with pandas:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Use pandas the way it’s meant to be used: do not loop through dataframe rows
    — use the [apply](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html) method
    instead'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Leverage [NumPy](https://numpy.org/) arrays for more even efficient coding
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '#3— Simplifying time series analysis'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Working with time series can be daunting. My bootcamp instructor showed up to
    class with a haunted look on the day he prepared to lecture on this topic.
  prefs: []
  type: TYPE_NORMAL
- en: Fortunately, the [dtw-python package](https://pypi.org/project/dtw-python/) provides
    an intuitive way to compare time series. In short, Dynamic Time Warping calculates
    the distance between two arrays or time series of different length.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/f4202b263fce926a090125ce560d0299.png)'
  prefs: []
  type: TYPE_IMG
- en: Aligning two time series via [The dtw Package](https://www.jstatsoft.org/article/view/v031i07)
  prefs: []
  type: TYPE_NORMAL
- en: First, DTW stretches and/or compresses series of potentially different lengths
    to make them resemble each other as much as possible. To borrow an example from
    speech recognition, employing this technique would help an algorithm recognize
    that “now” and “nowwwwwwww” are the same word, whether spoken by a snappily impatient
    adult or a tempestuous toddler. After the transform, the package computes the
    distance between individual aligned elements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Learn more:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Download the paper here](https://www.jstatsoft.org/article/view/v031i07) (originally
    implemented in R, but still relevant to Python)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Read up on use cases here](https://scholar.google.it/scholar?oi=bibs&hl=it&cites=5151555337428350289)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Play around with DTW Python yourself using Google Colab [here](https://colab.research.google.com/drive/1-fbhBlKRrEG8jkqoBAWOAzWaOarDQcDp?usp=sharing) & [here](https://colab.research.google.com/github/nipunbatra/blog/blob/master/_notebooks/2014-05-01-dtw.ipynb).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#2 — Setting up ML Flow for experiment tracking'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[ML Flow](https://mlflow.org/docs/latest/index.html) enables the tracking of
    parameters, code versions, metrics, and output files. The MlflowClient function
    creates and manages experiments, pipeline runs, and model versions. Log artifacts
    (e.g. datasets), metrics, and hyperparameters with `mlflow.log_artifact`, `.log_metric()` and `.log_param()`.'
  prefs: []
  type: TYPE_NORMAL
- en: You can easily view all metadata and results across experiments in a local host
    browser with the `mlflow ui`command.
  prefs: []
  type: TYPE_NORMAL
- en: 'Also, check out this complete guide to the data science workflow:'
  prefs: []
  type: TYPE_NORMAL
- en: '[**Comprehensive Guide to Model Selection**](https://medium.com/atlas-research/model-selection-d190fb8bbdda)'
  prefs: []
  type: TYPE_NORMAL
- en: A systematic approach to picking the right algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: '#1 — Understanding the __main__ function'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Using `if __name__ == '__main__'` provides the flexibility to write code that
    can be executed from the command line or imported as a package into an interactive
    environment. This conditional statement controls how the program will execute
    given the context.
  prefs: []
  type: TYPE_NORMAL
- en: You should expect that a user running your code as an executable has different
    goals than a user importing your code as a package. The `if __name__ == ‘__main__'` statement
    provides control flow based on the environment in which your code is being executed.
  prefs: []
  type: TYPE_NORMAL
- en: '`__name__` is a special variable in the module’s global namespace'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It has a `repr()` method that is set by Python
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The value of `repr(__name__)` depends on the execution context
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: From the command line, `repr(__name__)` evaluates to ‘__main__’ — therefore
    any code in the if block will run
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Imported as a package, `repr(__name__)` evaluates to the name of the import
    — therefore code in the if block will *not* run
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why is this helpful? Well, someone running your code from the command line will
    have the intention of executing functions right away. This may not be true of
    someone importing your package as utility code into a Jupyter Notebook.
  prefs: []
  type: TYPE_NORMAL
- en: In `if __name__ == ‘__main__'` you should create a function called `main()` that
    contains the code you want to run. Across programming languages, the main function
    provides an entry point for execution. In Python, we name this function `main()` only
    by convention — unlike lower level languages, Python does not ascribe any special
    significance to the main function. By using the standard terminology however,
    we let other programmers know that this function represents the starting point
    of the code that accomplishes the primary task of the script.
  prefs: []
  type: TYPE_NORMAL
- en: Rather than including blocks of task-accomplishing code within `main()`, the
    main function should call other functions stored within the module. Effective
    modularization allows the user to reuse aspects of the code as they wish.
  prefs: []
  type: TYPE_NORMAL
- en: The extent to which you modularize is up to you — more functions means more
    flexibility and easier reuse, but may make your package more difficult for a human
    to read and interpret as they traverse logical breaks between functions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Bonus: knowing when not to use Python'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As a full-time Python programmer, sometimes I wonder if I’m overly dependent
    on this tool for scientific computing. Python is a delightful language. It’s straightforward
    and low maintenance, and its dynamic structure is well suited to the exploratory
    nature of data science pursuits.
  prefs: []
  type: TYPE_NORMAL
- en: 'Still, Python is definitely not the best tool to approach every aspect of the
    broadly defined machine learning workflow. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: SQL is essential for ETL processes that move data into a [data warehouse](https://towardsdatascience.com/data-warehouse-68ec63eecf78) where
    it’s queryable by [data analysts and data scientists](https://towardsdatascience.com/data-analyst-vs-data-scientist-2534fc1057c3)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Java](https://towardsdatascience.com/java-for-data-science-f64631fdda12) could
    be helpful for building out pipeline components like data ingest and cleaning
    tools (e.g. using [Apache PDFBox](https://pdfbox.apache.org/) to parse text from
    a PDF document)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julia is taking off as a blazing fast alternative to Python for data science
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scala is often used for big data and model serving
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this panel discussion hosted by [The TWIML AI Podcast](https://medium.com/u/ca095fd8e66c?source=post_page-----dfdff5741fdf--------------------------------),
    experts explore the data science applications of their chosen programming language.
  prefs: []
  type: TYPE_NORMAL
- en: It’s somewhat bizarre to hear a [JavaScript dev](https://burakkanber.com/blog/machine-learning-in-other-languages-introduction/) talk
    about the potential to use this typically web-development-centric language for
    machine learning. But hey, it’s gutsy and creative — and it has the potential
    to democratize data science by [breaking down the barriers](https://towardsdatascience.com/must-read-data-science-papers-487cce9a2020) between
    machine learning and traditional software development.
  prefs: []
  type: TYPE_NORMAL
- en: 'For now, JavaScript has a numbers advantage: 68% of developers use JavaScript,
    compared to 44% who use Python, according to the [2020 Stack Overflow Developer
    Survey](https://insights.stackoverflow.com/survey/2020). Only 1% use Julia, but
    that’s predicted to change rapidly. Could more ML developers means more competition,
    more insights, even more arXiv papers? All the more reason to sharpen your Python
    skills.'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In this article, we covered 10 potentially overlooked Python skills for data
    scientists. These tips included:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Creating virtual environments for your projects (#10)](https://towardsdatascience.com/10-underrated-python-skills-dfdff5741fdf#eeab)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Commenting according to the Python style guide (#9)](https://towardsdatascience.com/10-underrated-python-skills-dfdff5741fdf#bd0a)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Finding utility code instead of reinventing the wheel (#8)](https://towardsdatascience.com/10-underrated-python-skills-dfdff5741fdf#aa14)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Improving your EDA](https://towardsdatascience.com/10-underrated-python-skills-dfdff5741fdf#1f2a), [target
    analysis](https://towardsdatascience.com/10-underrated-python-skills-dfdff5741fdf#fb33),
    and [feature analysis](https://towardsdatascience.com/10-underrated-python-skills-dfdff5741fdf#c257) (#7,
    6, 5)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Writing more performant code based on runtime optimization (#4)](https://towardsdatascience.com/10-underrated-python-skills-dfdff5741fdf#0e56)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using dynamic time warping for time series analysis (#3)](https://towardsdatascience.com/10-underrated-python-skills-dfdff5741fdf#2f9e)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Tracking experimentation with ML Flow (#2)](https://towardsdatascience.com/10-underrated-python-skills-dfdff5741fdf#8022)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Incorporating a main function to add flexibility to packages (#1)](https://towardsdatascience.com/10-underrated-python-skills-dfdff5741fdf#73b1)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I hope this write up has given you something new to learn as you advance your
    data science practice.
  prefs: []
  type: TYPE_NORMAL
- en: '[via GIPHY](https://giphy.com/gifs/baywatch-90s-nostalgia-dARiojBIBC9zJVEMQV)'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you enjoyed this article**, follow me on [Medium](https://medium.com/@nicolejaneway), [LinkedIn](http://www.linkedin.com/in/nicole-janeway-bills), [YouTube](https://www.youtube.com/channel/UCO6JE24WY82TKabcGI8mA0Q?view_as=subscriber),
    and [Twitter](https://twitter.com/Nicole_Janeway) for more ideas to improve your
    data science skills. Sign up to get notified when “[**Resources to Supercharge
    your Data Science in the Last Months of 2020**](https://page.co/ahje9p)” comes
    out.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Disclaimer**: any hyperlinks to books in this article are affiliate links.
    Thanks in advance for your support of my Medium writing.'
  prefs: []
  type: TYPE_NORMAL
- en: '**What Pythons skills do you think are underrated? **Let me know in the comments.'
  prefs: []
  type: TYPE_NORMAL
- en: Projects to advance your Python skills
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[**Named Entity Recognition for Clinical Text**](https://medium.com/atlas-research/ner-for-clinical-text-7c73caddd180)'
  prefs: []
  type: TYPE_NORMAL
- en: Use pandas to reformat the 2011 i2b2 dataset into CoNLL format for natural language
    processing (NLP).
  prefs: []
  type: TYPE_NORMAL
- en: '[**12-Hour ML Challenge**](https://towardsdatascience.com/build-full-stack-ml-12-hours-50c310fedd51)'
  prefs: []
  type: TYPE_NORMAL
- en: How to build & deploy an ML app with Streamlit and DevOps tools
  prefs: []
  type: TYPE_NORMAL
- en: '[**Walkthrough: Mapping GIS Data in Python**](https://towardsdatascience.com/walkthrough-mapping-gis-data-in-python-92c77cd2b87a)'
  prefs: []
  type: TYPE_NORMAL
- en: Improve your understanding of geospatial information through GeoPandas DataFrames
    and Google Colab
  prefs: []
  type: TYPE_NORMAL
- en: '[**Getting Started with Spotify’s API & Spotipy**](https://medium.com/@maxtingle/getting-started-with-spotifys-api-spotipy-197c3dc6353b)'
  prefs: []
  type: TYPE_NORMAL
- en: A data scientist’s quick start guide to navigating Spotify’s Web API and accessing
    data using the Spotipy Python…
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Nicole Janeway Bills](https://www.linkedin.com/in/nicole-janeway-bills/)** is
    Data Scientist with experience in commercial and federal consulting. She helps
    organizations leverage their top asset: a simple and robust Data Strategy. [**Sign
    up for more of her writing**](https://page.co/ahje9p).'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/10-underrated-python-skills-dfdff5741fdf).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[fastcore: An Underrated Python Library](/2020/10/fastcore-underrated-python-library.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data Science Minimum: 10 Essential Skills You Need to Know to Start Doing
    Data Science](/2020/10/data-science-minimum-10-essential-skills.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How I Levelled Up My Data Science Skills In 8 Months](/2020/10/level-up-data-science-skills-8-months.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Novice to Ninja: Why Your Python Skills Matter in Data Science](https://www.kdnuggets.com/novice-to-ninja-why-your-python-skills-matter-in-data-science)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Here Are the AI Tools I Use Along With My Skills to Make $10,000…](https://www.kdnuggets.com/2023/07/ai-tools-along-skills-make-10000-monthly-bs.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data Science Minimum: 10 Essential Skills You Need to Know to Start…](https://www.kdnuggets.com/2020/10/data-science-minimum-10-essential-skills.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[9 Skills You Need to Become a Data Engineer](https://www.kdnuggets.com/2021/03/9-skills-become-data-engineer.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Why Humbling Yourself Will Improve Your Data Science Skills](https://www.kdnuggets.com/2022/01/humbling-improve-data-science-skills.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
