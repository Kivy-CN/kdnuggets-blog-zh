["```py\n\n$ pip install folium\n\n```", "```py\n\n$ conda install -c conda-forge folium\n\n```", "```py\n1\\. Adolescent fertility rate (births per 1,000 women)\n2\\. CO2 emissions (metric tons per capita)\n3\\. Merchandise exports by the reporting economy\n4\\. Time required to build a warehouse (days)\n5\\. Total tax rate (% of commercial profits)\n6\\. Life expectancy at birth, female (years)\n\n```", "```py\n\nimport folium\nimport pandas as pd\n\ncountry_geo = 'world-countries.json'\n\ndata = pd.read_csv('Indicators.csv')\ndata.shape\n\ndata.head()\n\n```", "```py\n\n# select Life expectancy for females for all countries in 2013\nhist_indicator =  'Life expectancy at birth'\nhist_year = 2013\n\nmask1 = data['IndicatorName'].str.contains(hist_indicator) \nmask2 = data['Year'].isin([hist_year])\n\n# apply our mask\nstage = data[mask1 & mask2]\nstage.head()\n\n#Creating a data frame with just the country codes and the values we want plotted.\ndata_to_plot = stage[['CountryCode','Value']]\ndata_to_plot.head()\n\n# labelling the legend\nhist_indicator = stage.iloc[0]['IndicatorName']\n\n```", "```py\n\n# Setup a folium map at a high-level zoom\nmap = folium.Map(location=[100, 0], zoom_start=1.5)\n\n# choropleth maps bind Pandas Data Frames and json geometries.\n#This allows us to quickly visualize data combinations\nmap.choropleth(geo_data=country_geo, data=plot_data,\n             columns=['CountryCode', 'Value'],\n             key_on='feature.id',\n             fill_color='YlGnBu', fill_opacity=0.7, line_opacity=0.2,\n             legend_name=hist_indicator)\n\n```", "```py\nmap.save('plot_data.html')\n# Import the Folium interactive html file\n\nfrom IPython.display import HTML\nHTML('<iframe src=plot_data.html width=700 height=450></iframe>')\n```"]