- en: 'Machine Learning Wars: Amazon vs Google vs BigML vs PredicSis'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器学习战争：亚马逊 vs 谷歌 vs BigML vs PredicSis
- en: 原文：[https://www.kdnuggets.com/2015/05/machine-learning-wars-amazon-google-bigml-predicsis.html](https://www.kdnuggets.com/2015/05/machine-learning-wars-amazon-google-bigml-predicsis.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2015/05/machine-learning-wars-amazon-google-bigml-predicsis.html](https://www.kdnuggets.com/2015/05/machine-learning-wars-amazon-google-bigml-predicsis.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](/2015/05/machine-learning-wars-amazon-google-bigml-predicsis.html/2#comments)**By
    [Louis Dorard](http://www.louisdorard.com/#home)**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](/2015/05/machine-learning-wars-amazon-google-bigml-predicsis.html/2#comments)**作者
    [Louis Dorard](http://www.louisdorard.com/#home)**'
- en: '***UPDATE** - NEW BIGML RESULTS: As pointed out by Francisco Martin, if you
    just change the objective field (SeriousDlqin2yrs) to be numeric instead of categorical,
    BigML''s accuracy for a [single model](https://bigml.com/shared/model/joejTuzK2F33nUZBI9WxF7o8vtZ)
    goes to 0.853 (whereas it was initially reported as 0.790 - the accuracy in the
    table above and the Kaggle rank below have been updated to reflect that).*'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '***更新** - 新的 BigML 结果：正如 Francisco Martin 指出的，如果你只是将目标字段（SeriousDlqin2yrs）从分类字段改为数值字段，BigML
    的 [单模型](https://bigml.com/shared/model/joejTuzK2F33nUZBI9WxF7o8vtZ) 的准确度将提高到 0.853（而最初报告为
    0.790 - 上表中的准确度和下方的 Kaggle 排名已更新以反映这一点）。*'
- en: '[Amazon ML](http://aws.amazon.com/machine-learning/) (Machine Learning) made
    a lot of noise [when it came out](http://www.infoq.com/news/2015/04/aws-launches-machine-learning)
    last month. Shortly afterwards, someone posted a link to [Google Prediction API](https://cloud.google.com/prediction/)
    on HackerNews and it quickly became one of the most popular posts. Google’s product
    is quite similar to Amazon’s but it’s actually much older since it was introduced
    in 2011\. Anyway, this gave me the idea of comparing the performance of Amazon’s
    new ML API with that of Google. For that, I used the [Kaggle “give me some credit”
    challenge](https://www.kaggle.com/c/GiveMeSomeCredit). But I didn’t stop there:
    I also included startups who provide competing APIs in this comparison — namely,
    [PredicSis](http://launch.predicsis.com/) and [BigML](https://bigml.com/). In
    this wave of new ML services, the giant tech companies are getting all the headlines,
    but bigger companies do not necessarily have better products.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[Amazon ML](http://aws.amazon.com/machine-learning/)（机器学习）上个月发布时引起了很大的关注。之后不久，有人将
    [Google Prediction API](https://cloud.google.com/prediction/) 的链接发布到 HackerNews
    上，它很快成为最受欢迎的帖子之一。谷歌的产品与亚马逊的非常相似，但实际上更早，因为它是在 2011 年推出的。无论如何，这让我想到将亚马逊的新 ML API
    的性能与谷歌的进行比较。为此，我使用了 [Kaggle “给我一些信用”挑战](https://www.kaggle.com/c/GiveMeSomeCredit)。但我并没有止步于此：我还将提供竞争
    API 的初创公司包括在这个比较中——即 [PredicSis](http://launch.predicsis.com/) 和 [BigML](https://bigml.com/)。在这波新的机器学习服务中，科技巨头们占据了所有头条，但更大的公司并不一定有更好的产品。'
- en: '![machine-learning-amazon-bigml-google-predicsis](../Images/b07d1daf97a82862594d92fdcaa3cd0a.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![机器学习-亚马逊-bigml-google-predicsis](../Images/b07d1daf97a82862594d92fdcaa3cd0a.png)'
- en: 'Here is a tweet-size summary:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个推文大小的总结：
- en: '**Amazon Machine Learning most accurate'
  id: totrans-7
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**亚马逊机器学习最准确'
- en: BigML fastest
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: BigML 最快
- en: PredicSis best trade-off
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: PredicSis 最佳折衷
- en: Google (Prediction API) last**
  id: totrans-10
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Google (Prediction API) 最后**
- en: '**Methodology**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**方法论**'
- en: '![Loan](../Images/b015d07921ea0d4067c84f58867004ae.png) The ML problem in the
    Kaggle credit challenge is a binary classification one: you’re given a dataset
    of input-output pairs where each input corresponds to an individual who has applied
    for a credit and the output says whether he later defaulted or not. The idea is
    to use ML to predict whether a new individual applying for a credit will default.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '![贷款](../Images/b015d07921ea0d4067c84f58867004ae.png) Kaggle 信贷挑战中的机器学习问题是一个二分类问题：你会获得一个输入-输出对的数据集，其中每个输入对应一个申请信用的个人，输出则表示他是否后来违约。这个想法是使用机器学习来预测一个新申请信用的个人是否会违约。'
- en: 'ML has two phases: train and predict. The “train” phase consists in using a
    set of input-output examples to create a model that maps inputs to outputs. The
    “predict” phase consists in using the model on new inputs to get predictions of
    the associated outputs. Amazon ML, Google Prediction API, PredicSis and BigML
    all have similar API methods for each phase:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习分为两个阶段：训练和预测。训练阶段是使用一组输入-输出示例来创建一个将输入映射到输出的模型。预测阶段则是使用模型对新的输入进行预测以获取相关输出。Amazon
    ML、Google Prediction API、PredicSis 和 BigML 都在每个阶段有类似的 API 方法：
- en: One method that takes in a dataset (in csv format for instance), and that returns
    the id of a model trained on this dataset
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种方法接受一个数据集（例如 CSV 格式），并返回一个在该数据集上训练出的模型 ID。
- en: One method that takes a model id and an input, and that returns a prediction.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种方法接受一个模型 ID 和一个输入，并返回一个预测结果。
- en: '![Data = data-lazy-src=](../Images/e8a57f4972516a1d3218894eabc89576.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![数据 = data-lazy-src=](../Images/e8a57f4972516a1d3218894eabc89576.png)'
