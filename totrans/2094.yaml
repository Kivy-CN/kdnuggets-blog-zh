- en: 'How to Implement Agentic RAG Using LangChain: Part 1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 LangChain 实现 Agentic RAG：第 1 部分
- en: 原文：[https://www.kdnuggets.com/how-to-implement-agentic-rag-using-langchain-part-1](https://www.kdnuggets.com/how-to-implement-agentic-rag-using-langchain-part-1)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/how-to-implement-agentic-rag-using-langchain-part-1](https://www.kdnuggets.com/how-to-implement-agentic-rag-using-langchain-part-1)
- en: '![How to implement Agentic RAG using LangChain: Part 1](../Images/e2d0c5a73735e83077af919100bfd1f6.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![如何使用 LangChain 实现 Agentic RAG：第 1 部分](../Images/e2d0c5a73735e83077af919100bfd1f6.png)'
- en: Imagine trying to bake a cake without a recipe. You might remember bits and
    pieces, but chances are you'll miss something crucial. This is similar to how
    traditional Large Language Models (LLMs) function, they're brilliant but sometimes
    lack specific, up-to-date information.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下在没有食谱的情况下尝试烤蛋糕。你可能会记住一些细节，但很可能会遗漏一些关键的东西。这类似于传统的大型语言模型（LLMs）的功能，它们很出色，但有时缺乏特定的、最新的信息。
- en: '* * *'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速入门网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升您的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持您的组织 IT'
- en: '* * *'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: The [Naive RAG](https://arxiv.org/pdf/2312.10997) paradigm represents the earliest
    methodology, which gained prominence shortly after ChatGPT became widely adopted.
    This approach follows a traditional process that includes indexing, retrieval,
    and generation, often referred to as a "Retrieve-Read" framework.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[Naive RAG](https://arxiv.org/pdf/2312.10997) 范式代表了最早的方法论，在 ChatGPT 广泛采用后不久就获得了关注。这种方法遵循传统流程，包括索引、检索和生成，通常被称为“检索-阅读”框架。'
- en: 'The image below illustrates a Naive RAG pipeline:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了一个 Naive RAG 流程：
- en: '![How to implement Agentic RAG using LangChain: Part 1](../Images/85e880ddfb32d0637a7ec670163c3eff.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![如何使用 LangChain 实现 Agentic RAG：第 1 部分](../Images/85e880ddfb32d0637a7ec670163c3eff.png)'
- en: This image shows the Naive RAG pipeline from query to the retrieval and the
    response | Image by author
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 该图显示了从查询到检索和响应的 Naive RAG 流程 | 作者提供的图片
- en: Implementing Agentic RAG using LangChain takes this a step further. Unlike the
    naive RAG approach, Agentic RAG introduces the concept of an 'agent' that can
    actively interact with the retrieval system to improve the quality of the generated
    output.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 LangChain 实现 Agentic RAG 将这一过程提升到了一个新的层次。与简单的 RAG 方法不同，Agentic RAG 引入了“代理”的概念，这些代理可以主动与检索系统互动，以提高生成输出的质量。
- en: To begin, let's first define what Agentic RAG is.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们定义一下 Agentic RAG 是什么。
- en: What is Agentic RAG?
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是 Agentic RAG？
- en: Agentic RAG (Agent-Based Retrieval-Augmented Generation) is an innovative approach
    to answering questions across multiple documents. Unlike traditional methods that
    rely solely on large language models, Agentic RAG utilizes intelligent agents
    that can plan, reason, and learn over time.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Agentic RAG（基于代理的检索增强生成）是一种创新的方法，用于跨多个文档回答问题。与仅依赖大型语言模型的传统方法不同，Agentic RAG利用智能代理，这些代理能够规划、推理和随时间学习。
- en: These agents are responsible for comparing documents, summarizing specific documents,
    and evaluating summaries. This provides a more flexible and dynamic framework
    for question answering, as the agents collaborate to accomplish complex tasks.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这些代理负责比较文档、总结特定文档和评估总结。这为问题回答提供了更灵活和动态的框架，因为这些代理协作完成复杂的任务。
- en: 'The key components of Agentic RAG are:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Agentic RAG 的关键组成部分包括：
- en: '**Document Agents**: Responsible for question answering and summarization within
    their designated documents.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Document Agents**：负责在指定文档内进行问题回答和总结。'
- en: '**Meta-Agent**: The top-level agent that oversees the document agents and coordinates
    their efforts.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Meta-Agent**：负责监督文档代理并协调他们的工作。'
- en: This hierarchical structure allows Agentic RAG to leverage the strengths of
    both individual document agents and the meta-agent, resulting in enhanced capabilities
    in tasks requiring strategic planning and nuanced decision-making.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这种层次结构允许代理RAG利用单个文档代理和元代理的优势，从而在需要战略规划和细致决策的任务中增强能力。
- en: '![How to implement Agentic RAG using LangChain: Part 1](../Images/d1c612d347978fab83ce95a3e13b7318.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![如何使用LangChain实现代理RAG：第1部分](../Images/d1c612d347978fab83ce95a3e13b7318.png)'
- en: 'This image illustrates the different layers of agents from the top-level agent
    down to the subordinate document agents | source: [LlamaIndex](https://www.llamaindex.ai/blog/agentic-rag-with-llamaindex-2721b8a49ff6)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 该图示例了从顶级代理到下属文档代理的不同层次 | 来源：[LlamaIndex](https://www.llamaindex.ai/blog/agentic-rag-with-llamaindex-2721b8a49ff6)
- en: Benefits of Using Agentic RAG
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用代理RAG的好处
- en: 'Using an agent-based implementation in Retrieval-Augmented Generation (RAG)
    offers several benefits which include task specialization, parallel processing,
    scalability, flexibility, and fault tolerance. This is explained in detail below:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在检索增强生成（RAG）中使用基于代理的实现提供了多种好处，包括任务专业化、并行处理、可扩展性、灵活性和容错性。详细说明如下：
- en: '**Task specialization**: Agent-based RAG allows for task specialization among
    different agents. Each agent can focus on a specific aspect of the task, such
    as document retrieval, summarization, or question answering. This specialization
    enhances efficiency and accuracy by ensuring that each agent is well-suited to
    its designated role.'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**任务专业化**：基于代理的RAG允许不同代理之间的任务专业化。每个代理可以专注于任务的特定方面，如文档检索、总结或问题回答。这种专业化通过确保每个代理都适合其指定角色，从而提高了效率和准确性。'
- en: '**Parallel processing**: Agents in an agent-based RAG system can work in parallel,
    processing different aspects of the task simultaneously. This parallel processing
    capability leads to faster response times and improved overall performance, especially
    when dealing with large datasets or complex tasks.'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**并行处理**：基于代理的RAG系统中的代理可以并行工作，同时处理任务的不同方面。这种并行处理能力导致响应时间更快，整体性能更佳，特别是在处理大型数据集或复杂任务时。'
- en: '**Scalability**: The architectures of Agent-based RAG are inherently scalable.
    New agents can be added to the system as needed, allowing it to handle increasing
    workloads or accommodate additional functionalities without significant changes
    to the overall architecture. This scalability ensures that the system can grow
    and adapt to changing requirements over time.'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**可扩展性**：基于代理的RAG架构具有固有的可扩展性。可以根据需要将新代理添加到系统中，使其能够处理增加的工作负载或适应额外的功能，而无需对整体架构进行重大更改。这种可扩展性确保系统可以随时间增长并适应变化的需求。'
- en: '**Flexibility**: These systems offer flexibility in task allocation and resource
    management. Agents can be dynamically assigned to tasks based on workload, priority,
    or specific requirements, allowing for efficient resource utilization and adaptability
    to varying workloads or user demands.'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**灵活性**：这些系统在任务分配和资源管理方面提供了灵活性。代理可以根据工作负荷、优先级或具体要求动态分配任务，从而实现高效的资源利用，并适应不同的工作负荷或用户需求。'
- en: '**Fault tolerance**: Agent-based RAG architectures are inherently fault-tolerant.
    If one agent fails or becomes unavailable, other agents can continue to perform
    their tasks independently, reducing the risk of system downtime or data loss.
    This fault tolerance improves the reliability and robustness of the system, ensuring
    uninterrupted service even in the face of failures or disruptions.'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**容错性**：基于代理的RAG架构具有固有的容错性。如果一个代理失败或不可用，其他代理可以继续独立执行其任务，从而降低系统停机或数据丢失的风险。这种容错性提高了系统的可靠性和健壮性，确保在面对故障或中断时服务不中断。'
- en: Now that we have learned what it is, in the next part, we will implement agentic
    RAG.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了它是什么，在下一部分中，我们将实施代理RAG。
- en: '[](https://www.linkedin.com/in/olumide-shittu)****[Shittu Olumide](https://www.linkedin.com/in/olumide-shittu/)****
    is a software engineer and technical writer passionate about leveraging cutting-edge
    technologies to craft compelling narratives, with a keen eye for detail and a
    knack for simplifying complex concepts. You can also find Shittu on [Twitter](https://twitter.com/Shittu_Olumide_).'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://www.linkedin.com/in/olumide-shittu)****[Shittu Olumide](https://www.linkedin.com/in/olumide-shittu/)****
    是一位软件工程师和技术作家，热衷于利用前沿技术来撰写引人入胜的叙事，对细节有敏锐的观察力，并擅长简化复杂概念。你还可以在[Twitter](https://twitter.com/Shittu_Olumide_)上找到Shittu。'
- en: More On This Topic
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[How to Make Large Language Models Play Nice with Your Software…](https://www.kdnuggets.com/how-to-make-large-language-models-play-nice-with-your-software-using-langchain)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何让大型语言模型与您的软件良好协作…](https://www.kdnuggets.com/how-to-make-large-language-models-play-nice-with-your-software-using-langchain)'
- en: '[With Data Privacy learn to implement technical privacy solutions…](https://www.kdnuggets.com/2022/04/manning-data-privacy-learn-implement-technical-privacy-solutions-tools-scale.html)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在数据隐私方面学习如何实施技术隐私解决方案…](https://www.kdnuggets.com/2022/04/manning-data-privacy-learn-implement-technical-privacy-solutions-tools-scale.html)'
- en: '[Learn how to design, measure and implement trustworthy A/B tests…](https://www.kdnuggets.com/2023/01/sphere-design-measure-implement-trustworthy-ab-tests-ronny-kohavi.html)'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习如何设计、测量和实施可信的 A/B 测试…](https://www.kdnuggets.com/2023/01/sphere-design-measure-implement-trustworthy-ab-tests-ronny-kohavi.html)'
- en: '[How to Implement a Federated Learning Project with Healthcare Data](https://www.kdnuggets.com/2023/02/implement-federated-learning-project-healthcare-data.html)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何用医疗数据实现联邦学习项目](https://www.kdnuggets.com/2023/02/implement-federated-learning-project-healthcare-data.html)'
- en: '[A Simple to Implement End-to-End Project with HuggingFace](https://www.kdnuggets.com/a-simple-to-implement-end-to-end-project-with-huggingface)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 HuggingFace 实现的简单端到端项目](https://www.kdnuggets.com/a-simple-to-implement-end-to-end-project-with-huggingface)'
- en: '[6 Problems of LLMs That LangChain is Trying to Assess](https://www.kdnuggets.com/6-problems-of-llms-that-langchain-is-trying-to-assess)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[LangChain 正在评估的 6 个 LLM 问题](https://www.kdnuggets.com/6-problems-of-llms-that-langchain-is-trying-to-assess)'
