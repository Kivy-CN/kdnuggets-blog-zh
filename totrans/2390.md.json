["```py\nimport pandas as pd\nimport sklearn\n\npip install category_encoders\n\nimport category_encoders as ce\n```", "```py\ndata = pd.DataFrame({ 'gender' : ['Male', 'Female', 'Male', 'Female', 'Female'],\n                       'class' : ['A','B','C','D','A'],\n                        'city' : ['Delhi','Gurugram','Delhi','Delhi','Gurugram'] })\ndata.head()\n```", "```py\nce_OHE = ce.OneHotEncoder(cols=['gender','city'])\n\ndata1 = ce_OHE.fit_transform(data)\ndata1.head()\n```", "```py\nce_be = ce.BinaryEncoder(cols=['class']);\n\n# transform the data\ndata_binary = ce_be.fit_transform(data[\"class\"]);\ndata_binary\n```", "```py\npd.get_dummies(data,columns=[\"gender\",\"city\"])\n```", "```py\npd.get_dummies(data,prefix=[\"gen\",\"city\"],columns=[\"gender\",\"city\"])\n```", "```py\ns = (data.dtypes == 'object')\ncols = list(s[s].index)\n\nfrom sklearn.preprocessing import OneHotEncoder\n\nohe = OneHotEncoder(handle_unknown='ignore',sparse=False)\n```", "```py\ndata_gender = pd.DataFrame(ohe.fit_transform(data[[\"gender\"]]))\n\ndata_gender\n```", "```py\ndata_city = pd.DataFrame(ohe.fit_transform(data[[\"city\"]]))\n\ndata_city\n```", "```py\ndata_class = pd.DataFrame(ohe.fit_transform(data[[\"class\"]]))\n\ndata_class\n```", "```py\ndata_cols = pd.DataFrame(ohe.fit_transform(data[cols]))\n\ndata_cols\n```", "```py\nfrom sklearn.preprocessing import LabelEncoder\n\nle = LabelEncoder()\nLabel encoder takes no arguments\nle_class = le.fit_transform(data[[\"class\"]])\n```", "```py\ndata_class\n```", "```py\ntemp = {'temperature' :['very cold', 'cold', 'warm', 'hot', 'very hot']}\ndf=pd.DataFrame(temp,columns=[\"temperature\"])\ntemp_dict = {'very cold': 1,'cold': 2,'warm': 3,'hot': 4,\"very hot\":5}\ndf\n```", "```py\ndf[\"temp_ordinal\"] = df.temperature.map(temp_dict)\ndf\n```", "```py\ndata_freq = pd.DataFrame({'class' : ['A','B','C','D','A',\"B\",\"E\",\"E\",\"D\",\"C\",\"C\",\"C\",\"E\",\"A\",\"A\"]})\n```", "```py\nfe = data_freq.groupby(\"class\").size()\n```", "```py\nfe_ = fe/len(data_freq)\n```", "```py\ndata_freq[\"data_fe\"] = data_freq[\"class\"].map(fe_).round(2)\ndata_freq\n```"]