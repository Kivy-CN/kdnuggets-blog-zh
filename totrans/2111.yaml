- en: Semantic Search with Vector Databases
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/semantic-search-with-vector-databases](https://www.kdnuggets.com/semantic-search-with-vector-databases)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Semantic Search with Vector Databases](../Images/0d380decc923ed3d6b78479336b53c8b.png)'
  prefs: []
  type: TYPE_IMG
- en: Image generated with [Ideogram.ai](http://ideogram.ai)
  prefs: []
  type: TYPE_NORMAL
- en: I am sure that most of us have used search engines.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: There is even a phrase such as “Just Google it.” The phrase means you should
    search for the answer using Google's search engine. That’s how universal Google
    can now be identified as a search engine.
  prefs: []
  type: TYPE_NORMAL
- en: Why search engine is so valuable? Search engines allow users to easily acquire
    information on the internet using limited query input and organize that information
    based on relevance and quality. In turn, search enables accessibility to massive
    knowledge that was previously inaccessible.
  prefs: []
  type: TYPE_NORMAL
- en: Traditionally, the search engine approach to finding information is based on
    lexical matches or word matching. It works well, but sometimes, the result could
    be more accurate because the user intention differs from the input text.
  prefs: []
  type: TYPE_NORMAL
- en: For example, the input “Red Dress Shot in the Dark” can have a double meaning,
    especially with the word “Shot.” The more probable meaning is that the Red Dress
    picture is taken in the dark, but traditional search engines would not understand
    it. That’s why Semantic Search is emerging.
  prefs: []
  type: TYPE_NORMAL
- en: Semantic search could be defined as a search engine that considers the meaning
    of words and sentences. The semantic search output would be information that matches
    the query meaning, which contrasts with a traditional search that matches the
    query with words.
  prefs: []
  type: TYPE_NORMAL
- en: In the NLP (Natural Language Processing) field, vector databases have significantly
    improved semantic search capabilities by utilizing the storage, indexing, and
    retrieval of high-dimensional vectors representing text's meaning. So, semantic
    search and vector databases were closely related fields.
  prefs: []
  type: TYPE_NORMAL
- en: This article will discuss semantic search and how to use a Vector Database.
    With that in mind, let’s get into it.
  prefs: []
  type: TYPE_NORMAL
- en: How Semantic Search works
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let’s discuss Semantic Search in the context of Vector Databases.
  prefs: []
  type: TYPE_NORMAL
- en: Semantic search ideas are based on the meanings of the text, but how could we
    capture that information? A computer can’t have a feeling or knowledge like humans
    do, which means the word “meanings” needs to refer to something else. In the semantic
    search, the word “meaning” would become a representation of knowledge that is
    suitable for meaningful retrieval.
  prefs: []
  type: TYPE_NORMAL
- en: The meaning representation comes as Embedding, the text transformation process
    into a Vector with numerical information. For example, we can transform the sentence
    “I want to learn about Semantic Search” using the OpenAI Embedding model.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: How is this numerical vector able to capture the meanings, then? Let’s take
    a step back. The result you see above is the embedding result of the sentence.
    The embedding output would be different if you replaced even just one word in
    the above sentence. Even a single word would have a different embedding output
    as well.
  prefs: []
  type: TYPE_NORMAL
- en: If we look at the whole picture, embeddings for a single word versus a complete
    sentence will differ significantly because sentence embeddings account for relationships
    between words and the sentence's overall meaning, which is not captured in the
    individual word embeddings. It means each word, sentence, and text is unique in
    its embedding result. This is how embedding could capture meaning instead of lexical
    matching.
  prefs: []
  type: TYPE_NORMAL
- en: So, how does semantic search work with vectors? A semantic search aims to embed
    your corpus into a vector space. This allows each data point to provide information
    (text, sentence, documents, etc.) and become a coordinate point. The query input
    is processed into a vector via embedding into the same vector space during search
    time. We would find the closest embedding from our corpus to the query input using
    vector similarity measures such as Cosine similarities. To understand better,
    you can see the image below.
  prefs: []
  type: TYPE_NORMAL
- en: '![Semantic Search with Vector Databases](../Images/e2a936a4331997d952b0f9f1b182fa0b.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Each document embedding coordinate is placed in the vector space, and the query
    embedding is placed in the vector space. The closest document to the query would
    be selected as it theoretically has the closest semantic meaning to the input.
  prefs: []
  type: TYPE_NORMAL
- en: However, maintaining the vector space that contains all the coordinates would
    be a massive task, especially with a larger corpus. The Vector database is preferable
    for storing the vector instead of having the whole vector space as it allows better
    vector calculation and can maintain efficiency as the data grows.
  prefs: []
  type: TYPE_NORMAL
- en: The high-level process of Semantic Search with Vector Databases can be seen
    in the image below.
  prefs: []
  type: TYPE_NORMAL
- en: '![Semantic Search with Vector Databases](../Images/0bb964f620744ef930c6de098053c620.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will perform a semantic search with a Python example.
  prefs: []
  type: TYPE_NORMAL
- en: Python Implementation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this article, we will use an open-source Vector Database [Weaviate](https://weaviate.io/).
    For tutorial purposes, we also use Weaviate Cloud Service (WCS) to store our vector.
  prefs: []
  type: TYPE_NORMAL
- en: First, we need to install the Weavieate Python Package.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Then, please register for their free cluster via [Weaviate Console](https://console.weaviate.cloud/signin)
    and secure both the Cluster URL and the API Key.
  prefs: []
  type: TYPE_NORMAL
- en: As for the dataset example, we would use the [Legal Text data](https://www.kaggle.com/datasets/amohankumar/legal-text-classification-dataset)
    from Kaggle. To make things easier, we would also only use the top 100 rows of
    data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![Semantic Search with Vector Databases](../Images/9f1726241c297e30476e590591e70cfc.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Next, we would store all the data in the Vector Databases on Weaviate Cloud
    Service. To do that, we need to set the connection to the database.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The next thing we need to do is connect to the Weaviate Cloud Service and create
    a class (like Table in SQL) to store all the text data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: In the code above, we create a LegalCases class that uses the OpenAI Embedding
    model. In the background, whatever text object we would store in the LegalCases
    class would go through the OpenAI Embedding model and be stored as the embedding
    vector.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s try to store the Legal text data in a vector database. To do that, you
    can use the following code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: You should see in the Weaviate Cluster that your Legal text is already stored
    there.
  prefs: []
  type: TYPE_NORMAL
- en: With the Vector Database ready, let’s try the Semantic Search. Weaviate API
    makes it easier, as shown in the code below. In the example below, we will try
    to find the cases that happen in Australia.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The result is shown below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: As you can see, we have two different results. In the first case, the word “Australia”
    was directly mentioned in the document so it is easier to find. However, the second
    result did not have any word “Australia” anywhere. However, Semantic Search can
    find it because there are words related to the word “Australia” such as “NSWSC”
    which stands for New South Wales Supreme Court, or the word “Currabubula” which
    is the village in Australia.
  prefs: []
  type: TYPE_NORMAL
- en: Traditional lexical matching might miss the second record, but the semantic
    search is much more accurate as it takes into account the document meanings.
  prefs: []
  type: TYPE_NORMAL
- en: That’s all the simple Semantic Search with Vector Database implementation.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Search engines have dominated information acquisition on the internet although
    the traditional method with lexical match contains a flaw, which is that it fails
    to capture user intent. This limitation gives rise to the Semantic Search, a search
    engine method that can interpret the meaning of document queries. Enhanced with
    vector databases, semantic search capability is even more efficient.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we have explored how Semantic Search works and hands-on Python
    implementation with Open-Source Weaviate Vector Databases. I hope it helps!
  prefs: []
  type: TYPE_NORMAL
- en: '**[](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**[Cornellius Yudha
    Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**** is a data science
    assistant manager and data writer. While working full-time at Allianz Indonesia,
    he loves to share Python and data tips via social media and writing media. Cornellius
    writes on a variety of AI and machine learning topics.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Python Vector Databases and Vector Indexes: Architecting LLM Apps](https://www.kdnuggets.com/2023/08/python-vector-databases-vector-indexes-architecting-llm-apps.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How Semantic Vector Search Transforms Customer Support Interactions](https://www.kdnuggets.com/how-semantic-vector-search-transforms-customer-support-interactions)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[An Honest Comparison of Open Source Vector Databases](https://www.kdnuggets.com/an-honest-comparison-of-open-source-vector-databases)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Vector Databases in AI and LLM Use Cases](https://www.kdnuggets.com/vector-databases-in-ai-and-llm-use-cases)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What are Vector Databases and Why Are They Important for LLMs?](https://www.kdnuggets.com/2023/06/vector-databases-important-llms.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Comprehensive Guide to Pinecone Vector Databases](https://www.kdnuggets.com/a-comprehensive-guide-to-pinecone-vector-databases)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
