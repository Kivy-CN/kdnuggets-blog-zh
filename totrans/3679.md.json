["```py\nimport pandas as pd\nimport numpy as np\nimport string\n\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.naive_bayes import ComplementNB\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\n\ndf = pd.read_excel(\"ITSM_data.xlsx\")\ndf.info() \n```", "```py\n <class>RangeIndex: 118 entries, 0 to 117\nData columns (total 7 columns):\n #   Column                 Non-Null Count  Dtype         \n---  ------                 --------------  -----         \n 0   ID_request             118 non-null    int64         \n 1   Text                   117 non-null    object        \n 2   Category               115 non-null    object        \n 3   Solution               115 non-null    object        \n 4   Date_request_recieved  118 non-null    datetime64[ns]\n 5   Date_request_solved    118 non-null    datetime64[ns]\n 6   ID_agent               118 non-null    int64         \ndtypes: datetime64[ns](2), int64(2), object(3)\nmemory usage: 6.6+ KB</class> \n```", "```py\nfor text, category in zip(df.Text.sample(3, random_state=2), df.Category.sample(3, random_state=2)):\n    print(\"TEXT:\")\n    print(text)\n    print(\"CATEGORY:\")\n    print(category)\n    print(\"-\"*100) \n```", "```py\nTEXT:\nI just want to talk to an agent, there are too many problems on my pc to be explained in one ticket. Please call me when you see this, whoever you are. (talk to agent)\nCATEGORY:\nAsana\n----------------------------------------------------------------------------------------------------\nTEXT:\nAsana funktionierte nicht mehr, nachdem ich meinen Laptop neu gestartet hatte. Bitte helfen Sie.\nCATEGORY:\nHelp Needed\n----------------------------------------------------------------------------------------------------\nTEXT:\nMy mail stopped to work after I updated Windows.\nCATEGORY:\nOutlook\n---------------------------------------------------------------------------------------------------- \n```", "```py\ndf.Category.value_counts(normalize=True, dropna=False).mul(100).round(1).astype(str) + \"%\"\n```", "```py\nOutlook             19.1%\nDiscord             13.9%\nCRM                 12.2%\nInternet Browser    10.4%\nMail                 9.6%\nKeyboard             9.6%\nAsana                8.7%\nMouse                8.7%\nHelp Needed          7.8%\nName: Category, dtype: object \n```", "```py\nimportant_columns = [\"Text\", \"Category\"]\nfor cat in important_columns:   \n   df.drop(df[df[cat].isna()].index, inplace=True)\ndf.reset_index(inplace=True, drop=True) \n```", "```py\nmeta = df[df.Category == \"Help Needed\"]\n\nfor text in meta.Text.sample(5, random_state=2):\n    print(text)\n    print(\"-\"*100) \n```", "```py\nDiscord emojis aren't available to me, I would like to have this option enabled like other team members have.\n---------------------------------------------------------------------------\nBitte reparieren Sie mein Hubspot CRM. Seit gestern funktioniert es nicht mehr\n---------------------------------------------------------------------------\nMy headphones aren't working. I would like to order new.\n---------------------------------------------------------------------------\n\nBundled problems with Office since restart:\n\nMessages not sent\n\nOutlook does not connect, mails do not arrive\n\nError 0x8004deb0 appears when Connection attempt, see attachment\n\nThe company account is affected: AB123\n\nAccess via Office.com seems to be possible.\n\n---------------------------------------------------------------------------\nAsana funktionierte nicht mehr, nachdem ich meinen Laptop neu gestartet hatte. Bitte helfen Sie.\n--------------------------------------------------------------------------- \n```", "```py\nwords_categories = np.unique([word.strip().lower() for word in df.Category])  # list of categories\n\ndef keywords(row): \n    list_w = []\n    for word in row.translate(str.maketrans(\"\", \"\", string.punctuation)).lower().split():\n        if word in words_categories:\n            list_w.append(word)\n    return list_w\n\ndf[\"Keywords\"] = df.Text.apply(keywords)    \n\n# since our output is in the list, this function will give us better looking final output. \ndef clean_row(row):\n    row = str(row)\n    row = row.replace(\"[\", \"\")\n    row = row.replace(\"]\", \"\")\n    row = row.replace(\"'\", \"\")\n    row = string.capwords(row)\n    return row\n\ndf[\"Keywords\"] = df.Keywords.apply(clean_row) \n```", "```py\ndf.head(2)\n```", "```py\ncl_list = []\n\nfor category, keywords in zip(df.Category, df.Keywords):\n    if category.lower() == keywords.lower() and keywords != \"\":\n        cl_list.append(\"easy_classification\")\n    elif category.lower() in keywords.lower():  # to deal with multiple keywords in the ticket\n        cl_list.append(\"probably_easy_classification\")\n    elif category.lower() != keywords.lower() and keywords != \"\":\n        cl_list.append(\"potential_problem\")\n    else:      \n        cl_list.append(\"neutral\")\n\ndf[\"Ease_classification\"] = cl_list\ndf.Ease_classification.value_counts(normalize=True, dropna=False).mul(100).round(1).astype(str) + \"%\" \n```", "```py\nneutral                         45.6%\neasy_classification             37.7%\npotential_problem                9.6%\nprobably_easy_classification     7.0%\nName: Ease_classification, dtype: object \n```", "```py\npp = df[df.Ease_classification == \"potential_problem\"]\n\nfor text, category in zip(pp.Text.sample(5, random_state=2), pp.Category.sample(3, random_state=2)):\n    print(\"TEXT:\")\n    print(text)\n    print(\"CATEGORY:\")\n    print(category)\n    print(\"-\"*100) \n```", "```py\nTEXT:\n\noutlook issue , I did an update Windows and I have no more outlook on my notebook ? Please help !\n\n Outlook\nCATEGORY:\nMail\n--------------------------------------------------------------------\n\nTEXT:\nPlease relase blocked attachements from the mail I got from name.surname@company.com. These are data needed for social media marketing campaing.\nCATEGORY:\nOutlook\n--------------------------------------------------------------------\nTEXT:\nAsana funktionierte nicht mehr, nachdem ich meinen Laptop neu gestartet hatte. Bitte helfen Sie.\nCATEGORY:\nHelp Needed\n-------------------------------------------------------------------- \n```", "```py\nmail_categories_to_merge = [\"Outlook\", \"Mail\"]\n\nsum_mail_cluster = 0\nfor x in mail_categories_to_merge:\n    sum_mail_cluster += len(df[df[\"Category\"] == x]) \n\nprint(\"Number of categories to be merged into new cluster: \", len(mail_categories_to_merge))\nprint(\"Expected number of tickets in the new cluster: \", sum_mail_cluster)\n\ndef rename_to_mail_cluster(category):\n    if category in mail_categories_to_merge:\n        category = \"Mail_CLUSTER\"\n    else:\n        category = category\n    return category\n\ndf[\"Category\"] = df[\"Category\"].apply(rename_to_mail_cluster)\n\ndf.Category.value_counts() \n```", "```py\nNumber of categories to be merged into new cluster:  2\nExpected number of tickets in the new cluster:  33\nMail_CLUSTER        33\nDiscord             15\nCRM                 14\nInternet Browser    12\nKeyboard            11\nAsana               10\nMouse               10\nHelp Needed          9\nName: Category, dtype: int64 \n```", "```py\ndf.loc[(df[\"Category\"] == \"Help Needed\") & ([set(x).intersection(words_categories) for x in df[\"Text\"].str.lower().str.replace(\"[^\\w\\s]\", \"\", regex=True).str.split()]), \"Category\"] = \"Change\"\n\ndef cat_name_change(cat, keywords):\n    if cat == \"Change\":\n        cat = keywords\n    else:\n        cat = cat\n    return cat\n\ndf[\"Category\"] = df.apply(lambda x: cat_name_change(x.Category, x.Keywords), axis=1)\ndf[\"Category\"] = df[\"Category\"].replace({\"Crm\":\"CRM\"})\n\ndf.Category.value_counts(dropna=False) \n```", "```py\nMail_CLUSTER        33\nDiscord             16\nCRM                 15\nInternet Browser    12\nAsana               11\nKeyboard            11\nMouse               10\nHelp Needed          6\nName: Category, dtype: int64 \n```", "```py\nmodel = make_pipeline(TfidfVectorizer(), ComplementNB())\n\n# old df\ndf_o = pd.read_excel(\"ITSM_data.xlsx\")\n\nimportant_categories = [\"Text\", \"Category\"]\nfor cat in important_categories:    \n    df_o.drop(df_o[df_o[cat].isna()].index, inplace=True)\n\ndf_o.name = \"dataset just without missing\"\ndf.name = \"dataset after deeper cleaning\"\n\nfor dataframe in [df_o, df]:\n    # Split dataset into training set and test set\n    X_train, X_test, y_train, y_test = train_test_split(dataframe.Text, dataframe.Category, test_size=0.2, random_state=1) \n\n    # Training the model with train data\n    model.fit(X_train, y_train)\n\n    # Predict the response for test dataset\n    y_pred = model.predict(X_test)\n\n    print(f\"Accuracy of  Complement Naive Bayes classifier model on {dataframe.name} is: {round(metrics.accuracy_score(y_test, y_pred),2)}\") \n```", "```py\nAccuracy of  Complement Naive Bayes classifier model on dataset just without missing is: 0.48\nAccuracy of  Complement Naive Bayes classifier model on dataset after deeper cleaning is: 0.65 \n```"]