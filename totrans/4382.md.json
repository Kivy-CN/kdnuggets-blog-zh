["```py\n!pip install -Uqq fastbook\nimport fastbook\nfastbook.setup_book()\n```", "```py\nfrom fastbook import *\nfrom fastai.vision.widgets import *\n```", "```py\nkey = os.environ.get('AZURE_SEARCH_KEY', '<YOUR_KEY>')\n```", "```py\nhelp(fastbook)\n```", "```py\nresults = search_images_bing(key, 'german shepherd dogs')\nimages = results.attrgot('content_url')\nlen(images)\n```", "```py\ndog_types = ['german shepherd', 'black', 'labrador']\npath = Path('dogs')\n```", "```py\nif not path.exists():\n    path.mkdir()\n    for t in dog_types:\n        dest = (path/t)\n        print(dest)\n        dest.mkdir(exist_ok=True)\n        results = search_images_bing(key, '{} dog'.format(t))\n        download_images(dest, urls=results.attrgot('content_url'))\n```", "```py\nfiles = get_image_files(path)\nfiles\n```", "```py\ncorrupt = verify_images(files)\ncorrupt##output: (#0) []\n```", "```py\ncorrupt.map(Path.unlink);\n```", "```py\ndogs = DataBlock(\n        blocks=(ImageBlock, CategoryBlock),\n        get_items=get_image_files,\n        splitter=RandomSplitter(valid_pct=0.2, seed=41),\n        get_y=parent_label,\n        item_tfms=Resize(128)\n        )\n```", "```py\ndls = dogs.dataloaders(path)\n```", "```py\ndls.valid.show_batch()\n```", "```py\n##adding item transformationsdogs = dogs.new(\n                item_tfms=RandomResizedCrop(224, min_scale=0.5), \n                batch_tfms=aug_transforms(mult=2)\n               )\ndls = dogs.dataloaders(path)\ndls.train.show_batch(max_n=8, nrows=2, unique=True)\n```", "```py\nmodel = cnn_learner(dls, resnet18, metrics=error_rate)\nmodel.fine_tune(4)\n```", "```py\ninterp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()\n```", "```py\ninterp.plot_top_losses(6, nrows=3)\n```", "```py\nfor idx,cat in cleaner.change():\n    shutil.move(str(cleaner.fns[idx]), str(path/cat).split('.')[0] +\"_fixed.jpg\")\n```", "```py\nmodel.export()\npath = Path()\npath.ls(file_exts='.pkl')\n```", "```py\nmodel_inf = load_learner(path/'export.pkl')\n```", "```py\nmodel_inf.predict('dogs/labrador/00000000.jpg')\n```", "```py\nmodel_inf.dls.vocab\n```"]