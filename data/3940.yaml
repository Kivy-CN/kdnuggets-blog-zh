- en: 'Moving from R to Python: The Libraries You Need to Know'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从R迁移到Python：你需要了解的库
- en: 原文：[https://www.kdnuggets.com/2017/02/moving-r-python-libraries.html](https://www.kdnuggets.com/2017/02/moving-r-python-libraries.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2017/02/moving-r-python-libraries.html](https://www.kdnuggets.com/2017/02/moving-r-python-libraries.html)
- en: This post originally appeared on the [Yhat blog](http://blog.yhat.com/). [**Yhat**](https://www.yhat.com/)
    is a Brooklyn based company whose goal is to make data science applicable for
    developers, data scientists, and businesses alike. Yhat provides a software platform
    for deploying and managing predictive algorithms as REST APIs, while eliminating
    the painful engineering obstacles associated with production environments like
    testing, versioning, scaling and security.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本文最初发表于[Yhat博客](http://blog.yhat.com/)。[**Yhat**](https://www.yhat.com/)是一家总部位于布鲁克林的公司，目标是使数据科学对开发者、数据科学家和企业都适用。Yhat提供了一个用于部署和管理预测算法的REST
    API的软件平台，同时消除了与生产环境相关的痛点工程障碍，如测试、版本控制、扩展和安全性。
- en: '* * *'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Why the switch?
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么要转换？
- en: One of my favorite parts of machine learning in Python is that it got the benefit
    of observing the R community and then emulating the best parts of it. I'm a big
    believer that a language is only as helpful as its libraries. So in this post
    I'm going to go over some critical packages that I use almost every time I work
    in R, and their counterpart(s) in Python.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢Python中机器学习的一部分原因是它观察了R社区，然后模仿了它的最佳部分。我坚信，一个语言的实用性与它的库息息相关。因此，在这篇文章中，我将介绍一些我在使用R时几乎每次都会用到的关键包，以及它们在Python中的对应包。
- en: '![R and Python](../Images/f572776fbe1859abeac7883ec931b77d.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![R和Python](../Images/f572776fbe1859abeac7883ec931b77d.png)'
- en: glm, knn, randomForest, e1071 -> scikit-learn
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: glm, knn, randomForest, e1071 -> scikit-learn
- en: One thing that is a blessing and a curse in R is that the machine learning algorithms
    are *generally* segmented by package. Meaning instead of having a single (or set)
    of ML libraries that each implement some common algorithms, each algorithm gets
    its own package. It's sort of nice because you can find very esoteric, cutting
    edge implementations of algorithms, but it can be a pain for day-to-day use where
    you might be switching between algorithms. This pain is something that Python's
    [`scikit-learn`](https://github.com/scikit-learn/scikit-learn) solves really well.
    [`scikit-learn`](https://github.com/scikit-learn/scikit-learn) provides a common
    set of ML algorithms all under the same API. It makes switching between LogisticRegression
    and GradientBoostingMachines a one-liner.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在R中，一个既是祝福又是诅咒的事情是，机器学习算法*通常*按包进行分割。这意味着不是有一组（或多个）实现一些常见算法的ML库，而是每个算法都有自己的包。这有点好，因为你可以找到非常冷门的、前沿的算法实现，但对于日常使用，可能需要在算法之间切换时会很麻烦。这种痛点是Python的[`scikit-learn`](https://github.com/scikit-learn/scikit-learn)很好地解决了。[`scikit-learn`](https://github.com/scikit-learn/scikit-learn)提供了一组统一的ML算法，全部在同一个API下。它使得在LogisticRegression和GradientBoostingMachines之间切换变得一行代码搞定。
- en: reshape/reshape2, plyr/dplyr -> pandas
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: reshape/reshape2, plyr/dplyr -> pandas
- en: This was actually the subject of one of [our first posts](http://blog.yhat.com/posts/R-and-pandas-and-what-ive-learned-about-each.html).
    [`pandas`](https://github.com/pydata/pandas) took the best parts of data munging
    in R and turned it into a Python package. This includes its own implementation
    of a data frame along with ways to modify and restructure it. Basically it took
    the best parts of [`reshape`](https://github.com/hadley/reshape)/[`reshape2`](https://github.com/hadley/reshape)
    and [`plyr`](https://github.com/hadley/plyr)/[`dplyr`](https://github.com/hadley/dplyr)
    and Pythonified it!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这实际上是我们[第一篇文章](http://blog.yhat.com/posts/R-and-pandas-and-what-ive-learned-about-each.html)的主题。[`pandas`](https://github.com/pydata/pandas)取了R中数据处理的精华，并将其转化为Python包。这包括它自己实现的数据框以及修改和重构数据框的方法。基本上，它吸收了[`reshape`](https://github.com/hadley/reshape)/[`reshape2`](https://github.com/hadley/reshape)和[`plyr`](https://github.com/hadley/plyr)/[`dplyr`](https://github.com/hadley/dplyr)的精华，并用Python实现了它们！
- en: ggplot2 -> ggplot + seaborn + bokeh
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ggplot2 -> ggplot + seaborn + bokeh
- en: One thing that R still does better than Python is plotting. Hands down, R is
    better in just about every *facet*. Even so, Python plotting has matured though
    it's a fractured community. If you like the ggplot-style syntax, then look no
    further than [Yhat's own `ggplot`](https://github.com/yhat/ggplot). If you're
    after super statistical and technical plots then reach for [`seaborn`](https://github.com/mwaskom/seaborn).
    And if you're in the market for some super slick, great looking interactive plots
    then try out [`bokeh`](https://github.com/bokeh/bokeh).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: R 在绘图方面仍然优于 Python。毫无疑问，R 在几乎所有 *方面* 都表现更好。尽管如此，Python 的绘图功能也有所成熟，尽管社区较为分散。如果你喜欢
    ggplot 风格的语法，可以看看 [Yhat 自家的 `ggplot`](https://github.com/yhat/ggplot)。如果你需要超强的统计和技术图表，可以选择
    [`seaborn`](https://github.com/mwaskom/seaborn)。如果你在寻找一些超级炫酷、外观出色的交互式图表，那就试试 [`bokeh`](https://github.com/bokeh/bokeh)。
- en: stringr -> nothing
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: stringr -> 无
- en: 'String manipulation in "base R" is nearly as unintuitive as it is silly. Any
    time I''m working with strings in R I do 2 things (in order):'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在“基础 R”中，字符串操作几乎同样让人觉得不直观且愚蠢。每当我在 R 中处理字符串时，我会做两件事（按顺序）：
- en: briefly nod in appreciation to New Zealand for producing Hadley Wickham
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单地感谢新西兰培养了 Hadley Wickham
- en: import [`stringr`](https://github.com/hadley/stringr)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入 [`stringr`](https://github.com/hadley/stringr)
- en: '![stringr](../Images/502d9a7c007ce20bccf5bdabf0e1cba8.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![stringr](../Images/502d9a7c007ce20bccf5bdabf0e1cba8.png)'
- en: Much obliged, New Zealand
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 非常感谢，新西兰
- en: '[`stringr`](https://github.com/hadley/stringr) is an absolute lifesaver. It''s
    well written, performant (at least I think so), and easy to install (don''t overlook
    this last item. if people can''t install your software, there''s no sense in making
    it).'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[`stringr`](https://github.com/hadley/stringr) 是一个绝对的救星。它编写得很好，性能优越（至少我这么认为），安装也很容易（不要忽视这一点。如果人们无法安装你的软件，那做它就没有意义）。'
- en: Ok so [`stringr`](https://github.com/hadley/stringr) appreciation monologue
    complete. So the good news for you is that Python is so great for string manipulation,
    you don't really need a string library! It has a fantastic built-in regular expressions
    library, `re`, and a built-in string meta-libarary appropriately called `string`.
    So lucky for you, Python comes with all string-related batteries included!
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，关于 [`stringr`](https://github.com/hadley/stringr) 的赞美独白已经完成。对你来说，好消息是 Python
    在字符串操作方面表现出色，你实际上不需要一个字符串库！它有一个出色的内置正则表达式库 `re` 和一个适当称为 `string` 的内置字符串元库。所以，幸运的是，Python
    提供了所有字符串相关的功能！
- en: RStudio -> Rodeo
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: RStudio -> Rodeo
- en: To many users, [`RStudio`](https://www.rstudio.com/products/rstudio/download/)
    is synonymous with R. And why not? It's a great IDE for data analysis in R. Historically
    speaking, there haven't been a lot of comparable options for Python. Of course
    this is no longer the case. We released the very first version of Rodeo just over
    a year ago and released the 2.0 for Windows, OSX, and Linux about a month ago.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 对许多用户来说，[`RStudio`](https://www.rstudio.com/products/rstudio/download/) 就是 R
    的代名词。为什么不呢？它是 R 数据分析的一个绝佳 IDE。从历史上看，Python 没有很多类似的选择。当然，这种情况现在已经改变了。我们在一年多前发布了
    Rodeo 的第一个版本，并在一个月前发布了适用于 Windows、OSX 和 Linux 的 2.0 版本。
- en: '"Ever since we''ve used RStudio, we''ve been looking for an IDE like it for
    Python. We went through IDEs such as Sublime Text and Spyder, none of which suited
    our likings. We searched and found Rodeo and couldn''t have been more pleased
    with the IDE." -Stephen Hsu, University of California, Berkeley'
  id: totrans-23
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “自从我们使用 RStudio 以来，我们一直在寻找一个类似的 Python IDE。我们尝试了 Sublime Text 和 Spyder 等 IDE，但都不符合我们的喜好。我们搜索后发现了
    Rodeo，对这个 IDE 非常满意。” - 斯蒂芬·徐，加州大学伯克利分校
- en: '[**Download Rodeo!**](https://www.yhat.com/products/rodeo/)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[**下载 Rodeo！**](https://www.yhat.com/products/rodeo/)'
- en: Knitr -> Jupyter
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Knitr -> Jupyter
- en: '[`Knitr`](https://github.com/yihui/knitr) is a great way to create reproducible
    and highly visual analysis using R. It''s been a staple in RStudio for a while
    now. In the Python world, the most analagous package is [`Jupyter`](https://github.com/jupyter).
    Jupyter notebooks provide an interactive environment for programming in Python
    (and other languages) that focuses on reproducibility and visualization--it even
    has a plugin for R!'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Knitr`](https://github.com/yihui/knitr) 是创建可重复和高度可视化分析的绝佳方式，使用 R 已经成为 RStudio
    的一个标志性工具。在 Python 世界中，最类似的包是 [`Jupyter`](https://github.com/jupyter)。Jupyter 笔记本提供了一个用于编程的交互式环境，关注于可重复性和可视化——它甚至有一个
    R 插件！'
- en: sqldf -> pandasql
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: sqldf -> pandasql
- en: '[`sqldf`](https://github.com/ggrothendieck/sqldf) is a great way for SQL users
    to comfortably manipulate data in R. I myself used it when I first started learning
    R. Way back when, Yhat actually built a similar package for Python called [`pandasql`](https://github.com/yhat/pandasql).
    Same concept: write SQL queries against your data frames, get data frames back!
    Fast-forward 3 years and `pandasql` has over 256 stars on GitHub :). Not bad for
    a library with only 358 lines of code!'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sqldf`](https://github.com/ggrothendieck/sqldf) 是 SQL 用户在 R 中舒适操作数据的绝佳方式。我自己在刚开始学习
    R 时使用过它。早些时候，Yhat 实际上为 Python 构建了一个类似的包，叫做 [`pandasql`](https://github.com/yhat/pandasql)。相同的概念：对数据框写
    SQL 查询，获取数据框！快进三年，`pandasql` 在 GitHub 上已有超过 256 个星标 :)。对于一个只有 358 行代码的库来说，表现不错！'
- en: '[Original](http://blog.yhat.com/posts/moving-from-r-to-python.html). Reposted
    with permission.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](http://blog.yhat.com/posts/moving-from-r-to-python.html)。已获授权转载。'
- en: '**Related**:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关**：'
- en: '[Eight Things an R user Will Find Frustrating When Trying to Learn Python](/2016/11/r-user-frustrating-learning-python.html)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[R 用户在学习 Python 时会遇到的八个挫折](/2016/11/r-user-frustrating-learning-python.html)'
- en: '[R vs Python for Data Science: The Winner is...](/2015/05/r-vs-python-data-science.html)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[R 与 Python 在数据科学中的比较：谁是赢家...](/2015/05/r-vs-python-data-science.html)'
- en: '[R vs Python: head to head data analysis](/2015/10/r-vs-python-data-analysis.html)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[R 与 Python：逐一数据分析](/2015/10/r-vs-python-data-analysis.html)'
- en: '* * *'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 加速你的网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT 工作'
- en: '* * *'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[KDnuggets News, April 13: Python Libraries Data Scientists Should…](https://www.kdnuggets.com/2022/n15.html)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻，4月13日：数据科学家应该了解的 Python 库…](https://www.kdnuggets.com/2022/n15.html)'
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个数据科学家都应该了解的三个 R 库（即使你使用 Python）](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
- en: '[Python Libraries Data Scientists Should Know in 2022](https://www.kdnuggets.com/2022/04/python-libraries-data-scientists-know-2022.html)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家在2022年应该知道的 Python 库](https://www.kdnuggets.com/2022/04/python-libraries-data-scientists-know-2022.html)'
- en: '[Level 50 Data Scientist: Python Libraries to Know](https://www.kdnuggets.com/level-50-data-scientist-python-libraries-to-know)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[50级数据科学家：需要知道的 Python 库](https://www.kdnuggets.com/level-50-data-scientist-python-libraries-to-know)'
- en: '[7 Python Libraries Every Data Engineer Should Know](https://www.kdnuggets.com/7-python-libraries-every-data-engineer-should-know)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个数据工程师都应该了解的 7 个 Python 库](https://www.kdnuggets.com/7-python-libraries-every-data-engineer-should-know)'
- en: '[10 Python Libraries Every Data Scientist Should Know](https://www.kdnuggets.com/10-python-libraries-every-data-scientist-should-know)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个数据科学家都应该知道的 10 个 Python 库](https://www.kdnuggets.com/10-python-libraries-every-data-scientist-should-know)'
