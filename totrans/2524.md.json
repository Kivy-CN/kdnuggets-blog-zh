["```py\nimport autosklearn.classification\nimport sklearn.model_selection\nimport sklearn.datasets\nimport sklearn.metrics\n\nif __name__ == \"__main__\":\n    X, y = sklearn.datasets.load_digits(return_X_y=True)\n    X_train, X_test, y_train, y_test = \\\n            sklearn.model_selection.train_test_split(X, y, random_state=1)\n    automl = autosklearn.classification.AutoSklearnClassifier()\n    automl.fit(X_train, y_train)\n    y_hat = automl.predict(X_test)\n    print(\"Accuracy score\", sklearn.metrics.accuracy_score(y_test, y_hat))\n```", "```py\nfrom tpot import TPOTClassifier\nfrom sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nimport numpy as np\n\niris = load_iris()\nX_train, X_test, y_train, y_test = train_test_split(iris.data.astype(np.float64),\n    iris.target.astype(np.float64), train_size=0.75, test_size=0.25, random_state=42)\n\ntpot = TPOTClassifier(generations=5, population_size=50, verbosity=2, random_state=42)\ntpot.fit(X_train, y_train)\nprint(tpot.score(X_test, y_test))\ntpot.export('tpot_iris_pipeline.py') \n```", "```py\nimport numpy as np\nimport tensorflow as tf\nfrom tensorflow.keras.datasets import mnist\nimport autokeras as ak\n\n# Data loading\n(x_train, y_train), (x_test, y_test) = mnist.load_data()\n\n# Initialize the image classifier.\nclf = ak.ImageClassifier(overwrite=True, max_trials=1)\n# Feed the image classifier with training data.\nclf.fit(x_train, y_train, epochs=10)\n\n# Predict with the best model.\npredicted_y = clf.predict(x_test)\nprint(predicted_y)\n\n# Evaluate the best model with testing data.\nprint(clf.evaluate(x_test, y_test))\n```"]