- en: Time Series Forecasting with PyCaret Regression Module
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 PyCaret 回归模块进行时间序列预测
- en: 原文：[https://www.kdnuggets.com/2021/04/time-series-forecasting-pycaret-regression-module.html](https://www.kdnuggets.com/2021/04/time-series-forecasting-pycaret-regression-module.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/04/time-series-forecasting-pycaret-regression-module.html](https://www.kdnuggets.com/2021/04/time-series-forecasting-pycaret-regression-module.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Moez Ali](https://www.linkedin.com/in/profile-moez/), Founder & Author
    of PyCaret**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者 [Moez Ali](https://www.linkedin.com/in/profile-moez/)，PyCaret 的创始人和作者**'
- en: '![](../Images/a6cdf841abae5640ac801eefa26bb36f.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a6cdf841abae5640ac801eefa26bb36f.png)'
- en: Photo by [Lukas Blazek](https://unsplash.com/@goumbik?utm_source=medium&utm_medium=referral) on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Lukas Blazek](https://unsplash.com/@goumbik?utm_source=medium&utm_medium=referral) 提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: PyCaret
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PyCaret
- en: PyCaret is an open-source, low-code machine learning library and end-to-end
    model management tool built-in Python for automating machine learning workflows.
    It is incredibly popular for its ease of use, simplicity, and ability to build
    and deploy end-to-end ML prototypes quickly and efficiently.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 是一个开源的、低代码的机器学习库以及用于端到端模型管理的工具，构建于 Python 之上，用于自动化机器学习工作流。它因易于使用、简洁明了而广受欢迎，能够快速高效地构建和部署端到端的
    ML 原型。
- en: PyCaret is an alternate low-code library that can be used to replace hundreds
    of lines of code with few lines only. This makes the experiment cycle exponentially
    fast and efficient.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 是一个可替代的低代码库，可以用几行代码替换数百行代码。这使得实验周期变得极其快速和高效。
- en: PyCaret is **simple and** **easy to use**. All the operations performed in PyCaret
    are sequentially stored in a **Pipeline** that is fully automated for **deployment. **Whether
    it's imputing missing values, one-hot-encoding, transforming categorical data,
    feature engineering, or even hyperparameter tuning, PyCaret automates all of it.
    To learn more about PyCaret, watch this 1-minute video.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret **简单且** **易于使用**。在 PyCaret 中执行的所有操作都按顺序存储在一个**管道（Pipeline）**中，该管道完全自动化以进行**部署**。无论是填补缺失值、进行独热编码、转换分类数据、特征工程，还是超参数调优，PyCaret
    都会自动完成所有这些操作。要了解更多关于 PyCaret 的信息，请观看这个 1 分钟的视频。
- en: PyCaret — An open-source, low-code machine learning library in Python
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret — 一个开源的、低代码的 Python 机器学习库
- en: 'This tutorial assumes that you have some prior knowledge and experience with
    PyCaret. If you haven’t used it before, no problem — you can get a quick headstart
    through these tutorials:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程假设你对 PyCaret 有一定的基础知识和经验。如果你之前没有使用过它，也没关系——你可以通过这些教程快速入门：
- en: '[PyCaret 2.2 is here — what’s new](https://towardsdatascience.com/pycaret-2-2-is-here-whats-new-ad7612ca63b)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyCaret 2.2 来了——有什么新变化](https://towardsdatascience.com/pycaret-2-2-is-here-whats-new-ad7612ca63b)'
- en: '[Announcing PyCaret 2.0](https://towardsdatascience.com/announcing-pycaret-2-0-39c11014540e)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[宣布 PyCaret 2.0](https://towardsdatascience.com/announcing-pycaret-2-0-39c11014540e)'
- en: '[Five things you don’t know about PyCaret](https://towardsdatascience.com/5-things-you-dont-know-about-pycaret-528db0436eec)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[关于 PyCaret 的五个你不知道的事情](https://towardsdatascience.com/5-things-you-dont-know-about-pycaret-528db0436eec)'
- en: Installing PyCaret
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装 PyCaret
- en: Installing PyCaret is very easy and takes only a few minutes. We strongly recommend
    using a virtual environment to avoid potential conflicts with other libraries.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 PyCaret 非常简单，只需几分钟时间。我们强烈建议使用虚拟环境，以避免与其他库发生潜在冲突。
- en: PyCaret’s default installation is a slim version of pycaret which only installs
    hard dependencies that are [listed here](https://github.com/pycaret/pycaret/blob/master/requirements.txt).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 的默认安装是一个精简版本，仅安装了[在此列出的](https://github.com/pycaret/pycaret/blob/master/requirements.txt)硬性依赖。
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When you install the full version of pycaret, all the optional dependencies
    as [listed here](https://github.com/pycaret/pycaret/blob/master/requirements-optional.txt) are
    also installed.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当你安装完整版本的 pycaret 时，所有的可选依赖项也会被安装，详见[这里](https://github.com/pycaret/pycaret/blob/master/requirements-optional.txt)。
- en: ???? PyCaret Regression Module
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? PyCaret 回归模块
- en: PyCaret **Regression Module** is a supervised machine learning module used for
    estimating the relationships between a **dependent variable** (often called the
    ‘outcome variable’, or ‘target’) and one or more **independent variables** (often
    called ‘features’, or ‘predictors’).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret **回归模块** 是一个监督学习模块，用于估计**因变量**（通常称为“结果变量”或“目标”）与一个或多个**自变量**（通常称为“特征”或“预测因子”）之间的关系。
- en: The objective of regression is to predict continuous values such as sales amount,
    quantity, temperature, number of customers, etc. All modules in PyCaret provide
    many [pre-processing](https://www.pycaret.org/preprocessing) features to prepare
    the data for modeling through the [setup ](https://www.pycaret.org/setup)function.
    It has over 25 ready-to-use algorithms and [several plots](https://www.pycaret.org/plot-model) to
    analyze the performance of trained models.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 回归的目标是预测连续值，例如销售金额、数量、温度、客户数量等。PyCaret 中的所有模块都提供了许多[预处理](https://www.pycaret.org/preprocessing)功能，通过[setup](https://www.pycaret.org/setup)函数准备数据以进行建模。它拥有超过
    25 种现成的算法和[多种图表](https://www.pycaret.org/plot-model)来分析训练模型的性能。
- en: ???? Time Series with PyCaret Regression Module
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 使用 PyCaret 回归模块的时间序列
- en: 'Time series forecasting can broadly be categorized into the following categories:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列预测大致可以分为以下几类：
- en: '**Classical / Statistical Models** — Moving Averages, Exponential smoothing,
    ARIMA, SARIMA, TBATS'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**经典/统计模型**——移动平均、指数平滑、ARIMA、SARIMA、TBATS'
- en: '**Machine Learning **— Linear Regression, XGBoost, Random Forest, or any ML
    model with reduction methods'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**机器学习**——线性回归、XGBoost、随机森林或任何带有降维方法的 ML 模型'
- en: '**Deep Learning **— RNN, LSTM'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**深度学习**——RNN、LSTM'
- en: This tutorial is focused on the second category i.e. *Machine Learning*.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程专注于第二类，即*机器学习*。
- en: PyCaret’s Regression module default settings are not ideal for time series data
    because it involves few data preparatory steps that are not valid for ordered
    data (*data with a sequence such as time series data*).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 的回归模块默认设置不适合时间序列数据，因为它涉及一些不适用于有序数据（*具有序列的数据，例如时间序列数据*）的数据准备步骤。
- en: For example, the split of the dataset into train and test set is done randomly
    with shuffling. This wouldn’t make sense for time series data as you don’t want
    the recent dates to be included in the training set whereas historical dates are
    part of the test set.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，数据集的训练集和测试集的拆分是随机的并进行洗牌。对于时间序列数据来说，这没有意义，因为你不希望最近的日期包含在训练集中，而历史日期则是测试集的一部分。
- en: Time-series data also requires a different kind of cross-validation since it
    needs to respect the order of dates. PyCaret regression module by default uses
    k-fold random cross-validation when evaluating models. The default cross-validation
    setting is not suitable for time-series data.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列数据还需要不同种类的交叉验证，因为它需要尊重日期的顺序。PyCaret 回归模块在评估模型时默认使用 k 折随机交叉验证。默认的交叉验证设置不适合时间序列数据。
- en: The following section in this tutorial will demonstrate how you can change default
    settings in PyCaret Regression Module easily to make it work for time series data.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程的以下部分将演示如何轻松更改 PyCaret 回归模块中的默认设置，使其适用于时间序列数据。
- en: ???? Dataset
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 数据集
- en: For the purpose of this tutorial, I have used the US airline passengers dataset.
    You can download the dataset from [Kaggle](https://www.kaggle.com/chirag19/air-passengers).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 出于本教程的目的，我使用了美国航空乘客数据集。你可以从[Kaggle](https://www.kaggle.com/chirag19/air-passengers)下载该数据集。
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/bff8971948d09ca06d2bb13f82d49f0a.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bff8971948d09ca06d2bb13f82d49f0a.png)'
- en: Sample rows
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 样本行
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/500c1623248cc70c070c429bf959d673.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/500c1623248cc70c070c429bf959d673.png)'
- en: US Airline Passenger Dataset Time Series Plot with Moving Average = 12
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 美国航空乘客数据集时间序列图，移动平均 = 12
- en: Since algorithms cannot directly deal with dates, let’s extract some simple
    features from dates such as month and year, and drop the original date column.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 由于算法不能直接处理日期，我们来从日期中提取一些简单的特征，例如月份和年份，并删除原始日期列。
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/626a01d41c208d90c7927c7aa9fba070.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/626a01d41c208d90c7927c7aa9fba070.png)'
- en: Sample rows after extracting features
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 提取特征后的样本行
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: I have manually split the dataset before initializing the `setup` . An alternate
    would be to pass the entire dataset to PyCaret and let it handle the split, in
    which case you will have to pass `data_split_shuffle = False` in the `setup` function
    to avoid shuffling the dataset before the split.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我在初始化`setup`之前手动拆分了数据集。另一种方法是将整个数据集传递给 PyCaret，并让其处理拆分，在这种情况下，你需要在`setup`函数中传递`data_split_shuffle
    = False`以避免在拆分之前打乱数据集。
- en: ???? **Initialize Setup**
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? **初始化设置**
- en: Now it’s time to initialize the `setup` function, where we will explicitly pass
    the training data, test data, and cross-validation strategy using the `fold_strategy` parameter.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是初始化`setup`函数的时候了，我们将显式地传递训练数据、测试数据以及使用`fold_strategy`参数的交叉验证策略。
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: ???? **Train and Evaluate all Models**
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? **训练和评估所有模型**
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/136857b2f9293dd6a7fba035c903266e.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/136857b2f9293dd6a7fba035c903266e.png)'
- en: Results from compare_models
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: compare_models 的结果
- en: 'The best model based on cross-validated MAE is **Least Angle Regression **(MAE:
    22.3). Let’s check the score on the test set.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '基于交叉验证 MAE 的最佳模型是 **最小角回归** (MAE: 22.3)。让我们查看测试集上的得分。'
- en: '[PRE7]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/dafd830ef21a6dc14c1c98221ba18d03.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dafd830ef21a6dc14c1c98221ba18d03.png)'
- en: Results from predict_model(best) function
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: predict_model(best) 函数的结果
- en: MAE on the test set is 12% higher than the cross-validated MAE. Not so good,
    but we will work with it. Let’s plot the actual and predicted lines to visualize
    the fit.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 测试集上的 MAE 比交叉验证的 MAE 高 12%。虽然不太理想，但我们会继续使用。让我们绘制实际值和预测值的曲线来可视化拟合效果。
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/e8ad08b37882bfa2695d5ae59b04070c.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e8ad08b37882bfa2695d5ae59b04070c.png)'
- en: Actual and Predicted US airline passengers (1949–1960)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 实际和预测的美国航空乘客数据（1949–1960）
- en: The grey backdrop towards the end is the test period (i.e. 1960). Now let’s
    finalize the model i.e. train the best model i.e. *Least Angle Regression* on
    the entire dataset (this time, including the test set).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 末尾的灰色背景是测试期（即 1960 年）。现在让我们最终确定模型，即在整个数据集（这次包括测试集）上训练最佳模型，即 *最小角回归*。
- en: '[PRE9]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: ???? Create a future scoring dataset
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 创建一个未来评分数据集
- en: Now that we have trained our model on the entire dataset (1949 to 1960), let’s
    predict five years out in the future through 1964\. To use our final model to
    generate future predictions, we first need to create a dataset consisting of the
    Month, Year, Series column on the future dates.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经在整个数据集（1949 到 1960 年）上训练了模型，让我们预测未来五年的数据，直到 1964 年。为了使用我们的最终模型生成未来预测，我们首先需要创建一个包含未来日期的月份、年份、系列列的数据集。
- en: '[PRE10]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/800ac186d10003a1706f0c7524d37c30.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/800ac186d10003a1706f0c7524d37c30.png)'
- en: Sample rows from future_df
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: future_df 的样本行
- en: Now, let’s use the `future_df` to score and generate predictions.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用 `future_df` 进行评分并生成预测。
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](../Images/63b6571d92576786419df63d7b29506e.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/63b6571d92576786419df63d7b29506e.png)'
- en: Sample rows from predictions_future
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: predictions_future 的样本行
- en: Let’s plot it.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们绘制它。
- en: '[PRE12]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](../Images/fde746a874f0f85f086fb18718ce69d3.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fde746a874f0f85f086fb18718ce69d3.png)'
- en: Actual (1949–1960) and Predicted (1961–1964) US airline passengers
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 实际（1949–1960）和预测（1961–1964）美国航空乘客数据
- en: Wasn’t that easy?
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是很简单吗？
- en: There is no limit to what you can achieve using this lightweight workflow automation
    library in Python. If you find this useful, please do not forget to give us ⭐️
    on our GitHub repository.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个轻量级工作流自动化库在 Python 中没有限制。如果你觉得这有用，请不要忘记在我们的 GitHub 仓库上给我们 ⭐️。
- en: To hear more about PyCaret follow us on [LinkedIn](https://www.linkedin.com/company/pycaret/) and [Youtube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 想了解更多关于 PyCaret 的信息，请关注我们的 [LinkedIn](https://www.linkedin.com/company/pycaret/)
    和 [Youtube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g)。
- en: Join us on our slack channel. Invite link [here](https://join.slack.com/t/pycaret/shared_invite/zt-p7aaexnl-EqdTfZ9U~mF0CwNcltffHg).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 加入我们的 Slack 频道。邀请链接 [在这里](https://join.slack.com/t/pycaret/shared_invite/zt-p7aaexnl-EqdTfZ9U~mF0CwNcltffHg)。
- en: 'You may also be interested in:'
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你可能还会对以下内容感兴趣：
- en: '[Build your own AutoML in Power BI using PyCaret 2.0](https://towardsdatascience.com/build-your-own-automl-in-power-bi-using-pycaret-8291b64181d)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 Power BI 中使用 PyCaret 2.0 构建自己的 AutoML](https://towardsdatascience.com/build-your-own-automl-in-power-bi-using-pycaret-8291b64181d)'
- en: '[Deploy Machine Learning Pipeline on Azure using Docker](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-cloud-using-docker-container-bec64458dc01)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 Docker 在 Azure 上部署机器学习管道](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-cloud-using-docker-container-bec64458dc01)'
- en: '[Deploy Machine Learning Pipeline on Google Kubernetes Engine](https://towardsdatascience.com/deploy-machine-learning-model-on-google-kubernetes-engine-94daac85108b)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 Google Kubernetes Engine 上部署机器学习管道](https://towardsdatascience.com/deploy-machine-learning-model-on-google-kubernetes-engine-94daac85108b)'
- en: '[Deploy Machine Learning Pipeline on AWS Fargate](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-aws-fargate-eb6e1c50507)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 AWS Fargate 上部署机器学习管道](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-aws-fargate-eb6e1c50507)'
- en: '[Build and deploy your first machine learning web app](https://towardsdatascience.com/build-and-deploy-your-first-machine-learning-web-app-e020db344a99)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[构建并部署你的第一个机器学习网页应用](https://towardsdatascience.com/build-and-deploy-your-first-machine-learning-web-app-e020db344a99)'
- en: '[Deploy PyCaret and Streamlit app using AWS Fargate serverless](https://towardsdatascience.com/deploy-pycaret-and-streamlit-app-using-aws-fargate-serverless-infrastructure-8b7d7c0584c2)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 AWS Fargate 无服务器技术部署 PyCaret 和 Streamlit 应用](https://towardsdatascience.com/deploy-pycaret-and-streamlit-app-using-aws-fargate-serverless-infrastructure-8b7d7c0584c2)'
- en: '[Build and deploy machine learning web app using PyCaret and Streamlit](https://towardsdatascience.com/build-and-deploy-machine-learning-web-app-using-pycaret-and-streamlit-28883a569104)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 和 Streamlit 构建和部署机器学习 Web 应用](https://towardsdatascience.com/build-and-deploy-machine-learning-web-app-using-pycaret-and-streamlit-28883a569104)'
- en: '[Deploy Machine Learning App built using Streamlit and PyCaret on GKE](https://towardsdatascience.com/deploy-machine-learning-app-built-using-streamlit-and-pycaret-on-google-kubernetes-engine-fd7e393d99cb)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 GKE 上部署使用 Streamlit 和 PyCaret 构建的机器学习应用](https://towardsdatascience.com/deploy-machine-learning-app-built-using-streamlit-and-pycaret-on-google-kubernetes-engine-fd7e393d99cb)'
- en: Important Links
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重要链接
- en: '[Documentation](https://pycaret.readthedocs.io/en/latest/installation.html)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '[文档](https://pycaret.readthedocs.io/en/latest/installation.html)'
- en: '[Blog](https://medium.com/@moez_62905)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '[博客](https://medium.com/@moez_62905)'
- en: '[GitHub](https://www.github.com/pycaret/pycaret)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[GitHub](https://www.github.com/pycaret/pycaret)'
- en: '[StackOverflow](https://stackoverflow.com/questions/tagged/pycaret)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[StackOverflow](https://stackoverflow.com/questions/tagged/pycaret)'
- en: '[Install PyCaret](https://pycaret.readthedocs.io/en/latest/installation.html)
    [Notebook Tutorials](https://pycaret.readthedocs.io/en/latest/tutorials.html)
    [Contribute in PyCaret](https://pycaret.readthedocs.io/en/latest/contribute.html)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '[安装 PyCaret](https://pycaret.readthedocs.io/en/latest/installation.html) [笔记本教程](https://pycaret.readthedocs.io/en/latest/tutorials.html)
    [贡献 PyCaret](https://pycaret.readthedocs.io/en/latest/contribute.html)'
- en: Want to learn about a specific module?
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 想了解某个特定模块？
- en: Click on the links below to see the documentation and working examples.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 点击以下链接查看文档和实际示例。
- en: '[Classification](https://pycaret.readthedocs.io/en/latest/api/classification.html)
    [Regression](https://pycaret.readthedocs.io/en/latest/api/regression.html)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[分类](https://pycaret.readthedocs.io/en/latest/api/classification.html) [回归](https://pycaret.readthedocs.io/en/latest/api/regression.html)'
- en: '[Clustering](https://pycaret.readthedocs.io/en/latest/api/clustering.html)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[聚类](https://pycaret.readthedocs.io/en/latest/api/clustering.html)'
- en: '[Anomaly Detection](https://pycaret.readthedocs.io/en/latest/api/anomaly.html)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[异常检测](https://pycaret.readthedocs.io/en/latest/api/anomaly.html)'
- en: '[Natural Language Processing](https://pycaret.readthedocs.io/en/latest/api/nlp.html)
    [Association Rule Mining](https://pycaret.readthedocs.io/en/latest/api/arules.html)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[自然语言处理](https://pycaret.readthedocs.io/en/latest/api/nlp.html) [关联规则挖掘](https://pycaret.readthedocs.io/en/latest/api/arules.html)'
- en: '**Bio: [Moez Ali](https://www.linkedin.com/in/profile-moez/)** is a Data Scientist,
    and is Founder & Author of PyCaret.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：[Moez Ali](https://www.linkedin.com/in/profile-moez/)** 是数据科学家，PyCaret
    的创始人和作者。'
- en: '[Original](https://towardsdatascience.com/time-series-forecasting-with-pycaret-regression-module-237b703a0c63).
    Reposted with permission.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[原始文档](https://towardsdatascience.com/time-series-forecasting-with-pycaret-regression-module-237b703a0c63)。经授权转载。'
- en: '**Related:**'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关链接：**'
- en: '[Deploy a Machine Learning Pipeline to the Cloud Using a Docker Container](/2020/06/deploy-machine-learning-pipeline-cloud-docker.html)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Docker 容器将机器学习管道部署到云端](/2020/06/deploy-machine-learning-pipeline-cloud-docker.html)'
- en: '[Automated Anomaly Detection Using PyCaret](/2021/04/automated-anomaly-detection-pycaret.html)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 进行自动化异常检测](/2021/04/automated-anomaly-detection-pycaret.html)'
- en: '[GitHub is the Best AutoML You Will Ever Need](/2020/08/github-best-automl-ever-need.html)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GitHub 是你所需的最佳 AutoML 工具](/2020/08/github-best-automl-ever-need.html)'
- en: '* * *'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三推荐课程
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你组织的 IT 需求'
- en: '* * *'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Time Series Forecasting with Ploomber, Arima, Python, and Slurm](https://www.kdnuggets.com/2022/03/time-series-forecasting-ploomber-arima-python-slurm.html)'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Ploomber、Arima、Python 和 Slurm 进行时间序列预测](https://www.kdnuggets.com/2022/03/time-series-forecasting-ploomber-arima-python-slurm.html)'
- en: '[Time Series Forecasting with statsmodels and Prophet](https://www.kdnuggets.com/2023/03/time-series-forecasting-statsmodels-prophet.html)'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 statsmodels 和 Prophet 进行时间序列预测](https://www.kdnuggets.com/2023/03/time-series-forecasting-statsmodels-prophet.html)'
- en: '[Leveraging XGBoost for Time-Series Forecasting](https://www.kdnuggets.com/2023/08/leveraging-xgboost-timeseries-forecasting.html)'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[利用 XGBoost 进行时间序列预测](https://www.kdnuggets.com/2023/08/leveraging-xgboost-timeseries-forecasting.html)'
- en: '[Say Goodbye to Print(): Use Logging Module for Effective Debugging](https://www.kdnuggets.com/say-goodbye-to-print-use-logging-module-for-effective-debugging)'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[告别 Print()：使用 Logging 模块进行有效调试](https://www.kdnuggets.com/say-goodbye-to-print-use-logging-module-for-effective-debugging)'
- en: '[How to Handle Missing Data with Scikit-learn''s Imputer Module](https://www.kdnuggets.com/how-to-handle-missing-data-with-scikit-learns-imputer-module)'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何使用 Scikit-learn 的 Imputer 模块处理缺失数据](https://www.kdnuggets.com/how-to-handle-missing-data-with-scikit-learns-imputer-module)'
- en: '[Introduction to Binary Classification with PyCaret](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyCaret 二分类简介](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
