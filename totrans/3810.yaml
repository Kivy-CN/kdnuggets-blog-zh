- en: Linear Programming 101 for Data Scientists
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 线性规划 101 数据科学家
- en: 原文：[https://www.kdnuggets.com/2023/02/linear-programming-101-data-scientists.html](https://www.kdnuggets.com/2023/02/linear-programming-101-data-scientists.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2023/02/linear-programming-101-data-scientists.html](https://www.kdnuggets.com/2023/02/linear-programming-101-data-scientists.html)
- en: '![Linear Programming 101 for Data Scientists](../Images/128d77e88c32676c3cafced469d59321.png)![Linear
    Programming 101 for Data Scientists](../Images/4aa7a71c42a8963ddb4e3e3af33a25d6.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![线性规划 101 数据科学家](../Images/128d77e88c32676c3cafced469d59321.png)![线性规划 101
    数据科学家](../Images/4aa7a71c42a8963ddb4e3e3af33a25d6.png)'
- en: Images from [Wikipedia](https://en.wikipedia.org/wiki/Linear_programming)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自[维基百科](https://en.wikipedia.org/wiki/Linear_programming)
- en: 1\. Origins of Linear Programming
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 线性规划的起源
- en: For those more familiar with the subject, you probably know that the origins
    of linear programming began roughly around the mid-1950s, and a mathematician
    by the name of [George Dantzig](https://en.wikipedia.org/wiki/George_Dantzig)
    was involved. If that was your guess, you’d be right for the most part, but we
    all know that attributing credit for many (if not all) scientific and mathematical
    discoveries is not that simple — there is often more than one individual that
    contributed to the development of an area of research, and that is certainly the
    case for linear programming. Initial progress was made in parallel by two mathematicians
    working independently in the mid-1900s, and credit was therefore certainly due
    to more than one person.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些对这一主题较为熟悉的人，你们可能知道线性规划的起源大致是在1950年代中期，一位名叫[乔治·丹茨格](https://en.wikipedia.org/wiki/George_Dantzig)的数学家参与了其中。如果这是你的猜测，你大致是对的，但我们都知道，归功于许多（如果不是全部）科学和数学发现的过程并非那么简单——通常有多个个体为一个研究领域的发展做出贡献，线性规划就是这种情况。初步进展由两位独立工作的数学家在20世纪中期同时取得，因此确实有多个贡献者。
- en: Without getting into the history too much, let’s try to get a rough sense of
    the timeline of key advances in linear programming. The first idea for linear
    programming branched out of [Leonid Kantorovich](https://en.wikipedia.org/wiki/Leonid_Kantorovich)’s
    intent to reduce costs for his own army while increasing those of his enemy army.
    His efforts took place during World War 2 in 1939 but was neglected by the USSR
    at the time. Meanwhile, [T.C. Koopmans](https://en.wikipedia.org/wiki/Tjalling_Koopmans)
    had a similar idea as Kantorovich but was working on it independently and it was
    tailored to his own economic applications. A few years later, in 1941, Frank Lauren
    Hitchcock began working on similar ideas which, again, were tailored to his own
    transportation problems, but he developed a solution similar to what is now famously
    known as the simplex method. To cut it short, all three men were on the right
    track, but by the time the discovery merited a Nobel Prize in Economics, Hitchcock
    had died, and so [Kantorovich and Koopmans took the credit](https://www.nobelprize.org/prizes/economic-sciences/1975/summary/).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在不深入历史的情况下，我们先对线性规划的关键进展时间线有一个大致的了解。线性规划的最初概念源于[列昂尼德·坎托罗维奇](https://en.wikipedia.org/wiki/Leonid_Kantorovich)试图降低自己军队的成本同时增加敌军的成本。他的努力发生在1939年的第二次世界大战期间，但当时被苏联忽视。与此同时，[T.C.
    库普曼斯](https://en.wikipedia.org/wiki/Tjalling_Koopmans)有一个类似的想法，但他独立工作，且针对他自己的经济应用。几年后，1941年，弗兰克·劳伦·希区柯克开始研究类似的想法，这些想法同样针对他自己的运输问题，但他发展出了类似于现在著名的单纯形法的解决方案。简而言之，这三个人都在正确的轨道上，但当发现获得诺贝尔经济学奖时，希区柯克已经去世，因此[坎托罗维奇和库普曼斯获得了荣誉](https://www.nobelprize.org/prizes/economic-sciences/1975/summary/)。
- en: Between 1946 and 1947, George B. Dantzig developed an algorithm for the Simplex
    Method that *efficiently* tackled linear programming problems in *most cases*
    — this was an incredible achievement. Shortly thereafter, Dantzig introduced the
    theory of duality in linear programming to John Von Neumann, who had been developing
    a theory of games, and was astonished to find that Dantzig had made progress in
    an unsolved problem in linear programming. This was very exciting. (Good Will
    Hunting, anyone? Dantzig’s achievement was actually the inspiration for the storyline
    in that movie!).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在1946年至1947年间，乔治·B·丹茨格开发了一种单纯形法算法，这种算法*高效*地解决了*大多数情况下*的线性规划问题——这是一项令人惊叹的成就。随后，丹茨格向约翰·冯·诺依曼介绍了线性规划中的对偶理论，冯·诺依曼当时正在发展博弈论，并惊讶地发现丹茨格在未解决的线性规划问题上取得了进展。这非常令人兴奋。（《心灵捕手》，有人看过吗？丹茨格的成就实际上是该电影情节的灵感来源！）
- en: '![Linear Programming 101 for Data Scientists](../Images/4193e41f74bc64abcf6e051891008f69.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![数据科学家的线性规划101](../Images/4193e41f74bc64abcf6e051891008f69.png)'
- en: '[Good Will Hunting](https://en.wikipedia.org/wiki/Good_Will_Hunting) ([Source](https://tenor.com/en-GB/view/figure-it-out-gif-14765862))'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[心灵捕手](https://en.wikipedia.org/wiki/Good_Will_Hunting) ([来源](https://tenor.com/en-GB/view/figure-it-out-gif-14765862))'
- en: Those areas are now well-studied and used heavily in important real-life applications.
    Post-WW2, Dantzig’s work has been applied to daily planning applications in many
    industries, and mathematicians soon made progress in making linear programming
    solvable in polynomial time. That was some background on its origins (and you
    can read all about it [here](https://apps.dtic.mil/sti/pdfs/ADA112060.pdf), for
    example), but for now, let us briefly get into more recent advances.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些领域现在已经得到充分研究，并在重要的实际应用中被广泛使用。二战后，丹兹格的工作被应用于许多行业的日常规划应用中，数学家们很快在将线性规划问题的求解时间缩短为多项式时间方面取得了进展。这些是关于其起源的一些背景（例如，你可以[在这里](https://apps.dtic.mil/sti/pdfs/ADA112060.pdf)阅读详细信息），但现在，让我们简要了解一下最近的进展。
- en: 2\. Recent Advances in Linear Programming
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 线性规划的最新进展
- en: More recently, research in linear programming has focused on developing algorithms
    that improve computational complexity. [This paper](https://arxiv.org/abs/2004.07470),
    for instance, discusses faster dynamic matrix inverses for faster LPs. (However,
    it is computer science-heavy, and we do not need to get into it). Overall, [there
    is a lot of research](https://arxiv.org/list/math.OC/recent) going into mathematical
    optimization today as a whole, whether it’s to speed up computations, reduce inefficiencies,
    or introduce new applications in machine learning.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，线性规划的研究集中在开发能够改善计算复杂性的算法上。例如，[这篇论文](https://arxiv.org/abs/2004.07470)讨论了用于加速LP的快速动态矩阵求逆。（不过，它内容偏向计算机科学，我们无需深入了解）。总体而言，[今天有大量的研究](https://arxiv.org/list/math.OC/recent)集中在数学优化领域，无论是为了加速计算、减少低效，还是引入新的机器学习应用。
- en: 3\. Software for Applied Linear Programming
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 应用线性规划的软件
- en: There are countless software packages to support applied linear programming
    in the industry. You have IBM’s [CPLEX](https://en.wikipedia.org/wiki/CPLEX),
    [GUROBI](https://www.gurobi.com/) proprietary optimization software, open-source
    Python packages (such [SciPy](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.linprog.html#scipy.optimize.linprog),
    [Pyomo](http://www.pyomo.org/), [PuLP](https://coin-or.github.io/pulp/), [GEKKO](https://gekko.readthedocs.io/en/latest/)),
    and probably much more. An interesting fact is that all these packages use what
    we call an [Algebraic Modeling Language (AML)](https://en.wikipedia.org/wiki/Algebraic_modeling_language),
    a critical paradigm that was developed in the late 1970s. All these packages are
    great at what they do for different reasons and there are many blog posts you
    can read for a good comparison between each of them — check out [this post](https://medium.com/opex-analytics/optimization-modeling-in-python-pulp-gurobi-and-cplex-83a62129807a),
    for example.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 目前有无数的软件包支持行业中的应用线性规划。你可以使用IBM的[CPLEX](https://en.wikipedia.org/wiki/CPLEX)、[GUROBI](https://www.gurobi.com/)
    专有优化软件，开源Python包（如[SciPy](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.linprog.html#scipy.optimize.linprog)、[Pyomo](http://www.pyomo.org/)、[PuLP](https://coin-or.github.io/pulp/)、[GEKKO](https://gekko.readthedocs.io/en/latest/)），还有可能更多。一个有趣的事实是，所有这些包都使用了我们称之为[代数建模语言（AML）](https://en.wikipedia.org/wiki/Algebraic_modeling_language)的关键范式，这一范式在1970年代末期开发出来。所有这些包都在各自的领域表现出色，有许多博客文章可以阅读，以获得它们之间的良好比较——例如，可以查看[这篇文章](https://medium.com/opex-analytics/optimization-modeling-in-python-pulp-gurobi-and-cplex-83a62129807a)。
- en: 4\. Topics in Linear Programming
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 线性规划中的主题
- en: We won’t get into the details, but let’s talk about what you should know as
    a user of linear programming theory and methodology. The theory of linear programming
    is beautiful on its own but is even more so when you can draw the connections
    between linear programming and linear algebra. Whether you’ve picked up a [textbook](https://www.sciencedirect.com/book/9780124179103/elementary-linear-programming-with-applications),
    took an [online introductory course](https://www.udemy.com/course/linear-programming-for-machine-learning/?utm_source=adwords&utm_medium=udemyads&utm_campaign=Webindex_Catchall_la.EN_cc.CA&utm_term=_._ag_119831896715_._ad_533102824920_._kw__._de_c_._dm__._pl__._ti_dsa-392284169515_._li_9000737_._pd__._&matchtype=&gclid=EAIaIQobChMI_p2at7m2_AIVOxXUAR0dMQM1EAAYAiAAEgL6jvD_BwE),
    or [learned this formally in school](https://www.youtube.com/playlist?list=PLDndWhwv4Ujo10_a2T4R4Uqng1nduvfu1),
    there’s no doubt that you’ll arrive at the same conclusion that linear programming
    is a special case of linear algebra, and probably one of the most important and
    relevant extensions of elementary linear algebra.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会详细讨论，但让我们谈谈作为线性规划理论和方法的用户你应该知道的东西。线性规划的理论本身很美，但当你能够将线性规划与线性代数联系起来时，它会更美。无论你是读了一本[教科书](https://www.sciencedirect.com/book/9780124179103/elementary-linear-programming-with-applications)，还是参加了一个[在线入门课程](https://www.udemy.com/course/linear-programming-for-machine-learning/?utm_source=adwords&utm_medium=udemyads&utm_campaign=Webindex_Catchall_la.EN_cc.CA&utm_term=_._ag_119831896715_._ad_533102824920_._kw__._de_c_._dm__._pl__._ti_dsa-392284169515_._li_9000737_._pd__._&matchtype=&gclid=EAIaIQobChMI_p2at7m2_AIVOxXUAR0dMQM1EAAYAiAAEgL6jvD_BwE)，还是在学校[正式学习了这门课程](https://www.youtube.com/playlist?list=PLDndWhwv4Ujo10_a2T4R4Uqng1nduvfu1)，毫无疑问，你会得出线性规划是线性代数的一个特例，并且可能是基础线性代数最重要和相关的扩展之一的结论。
- en: 'No matter what route you’ve chosen to take to learn linear programming, you’ve
    likely encountered the following (or similar) sequence of topics:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你选择了哪种学习线性规划的途径，你可能都遇到了以下（或类似的）主题：
- en: Components of a linear program
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线性程序的组成部分
- en: Forms of linear programs
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线性程序的形式
- en: Common linear programming problems
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常见的线性规划问题
- en: Duality theory and sensitivity analysis
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对偶理论和敏感性分析
- en: Specialized types of linear programs
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 专门类型的线性程序
- en: Applied linear programming
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用线性规划
- en: (Does that sound right? If I’ve missed anything, please leave a comment below.)
    If that’s the case and you’d say you’re familiar with all these topics, then I
    think you should stop reading here and call it a day (and congratulate yourself
    because you’ve just been treated to a short history of linear programming!). However,
    if at least one of the above topics sounds new to you, then I would say you should
    continue reading this article as I think it’ll be worth your time.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: （这听起来对吗？如果我遗漏了什么，请在下面留言。）如果是这样，并且你认为自己对所有这些话题都很熟悉，那么我建议你可以在这里停下，结束这篇文章（并祝贺自己，因为你刚刚了解了线性规划的简短历史！）。然而，如果以上话题中至少有一个对你来说是新的，那么我认为你应该继续阅读这篇文章，因为我觉得这将值得你的时间。
- en: 5\. Common Linear Programming Problems
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5. 常见线性规划问题
- en: For the sake of keeping things short and consumable, we’re going to skip the
    first two topics in the sequence, but [here is a good resource](https://towardsdatascience.com/elements-of-a-linear-programming-problem-lpp-325075688c18)
    where you can learn more about the components of a linear program and forms of
    linear programs. Similarly, we’ll omit discussion of duality theory and sensitivity
    analysis but some great resources are [here](https://towardsdatascience.com/the-sensitivity-analysis-a-powerful-yet-underused-tool-for-data-scientists-e553fa695976)
    and [here](https://machinelearninggeek.com/sensitivity-analysis-in-python/).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简洁和易于消化，我们将跳过序列中的前两个主题，但[这里是一个好资源](https://towardsdatascience.com/elements-of-a-linear-programming-problem-lpp-325075688c18)，你可以在这里了解线性程序的组成部分和线性程序的形式。同样，我们将省略对偶理论和敏感性分析的讨论，但一些很好的资源在[这里](https://towardsdatascience.com/the-sensitivity-analysis-a-powerful-yet-underused-tool-for-data-scientists-e553fa695976)和[这里](https://machinelearninggeek.com/sensitivity-analysis-in-python/)。
- en: 'Now, if you’re attempting to apply linear programming principles to solve a
    problem, there are likely various other classes of models that you have considered
    for your problem, and you’ve (hopefully reasonably) arrived at the conclusion
    that a linear programming model would solve your problem. If so, it may be the
    case that you’ve also thought about some classical problems that use linear programming:
    [The blending problem](https://machinelearninggeek.com/solving-blending-problem-in-python-using-gurobi/),
    [The assignment problem](https://machinelearninggeek.com/solving-assignment-problem-using-linear-programming-in-python/),
    [The transportation problem](https://machinelearninggeek.com/solving-transportation-problem-using-linear-programming-in-python/),
    [The traveling salesman problem](https://medium.com/analytics-vidhya/model-and-solution-of-the-traveling-salesman-problem-with-python-and-pyomo-db45f2631e8c),
    and so many more.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你正在尝试应用线性规划原理来解决一个问题，你可能已经考虑了各种其他模型，并且（希望合理地）得出结论认为线性规划模型能够解决你的问题。如果是这样，可能你也考虑过一些经典的使用线性规划的问题：[混合问题](https://machinelearninggeek.com/solving-blending-problem-in-python-using-gurobi/)，[分配问题](https://machinelearninggeek.com/solving-assignment-problem-using-linear-programming-in-python/)，[运输问题](https://machinelearninggeek.com/solving-transportation-problem-using-linear-programming-in-python/)，[旅行商问题](https://medium.com/analytics-vidhya/model-and-solution-of-the-traveling-salesman-problem-with-python-and-pyomo-db45f2631e8c)，还有许多其他问题。
- en: 'If your problem sounds roughly like any one of these problems, then we already
    know how to solve your problem and you’re good to go. If not, you’ll want to think
    deeper about your problem and figure out a way to cleverly translate it into a
    linear programming problem. Consider some questions like:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的问题大致类似于这些问题中的任何一个，那么我们已经知道如何解决你的问题，你可以继续进行。如果不是，你需要更深入地思考你的问题，并找出一种巧妙的方法将其转化为线性规划问题。考虑一些类似的问题：
- en: Do you *need* a LP to solve this problem, or is there a chance that this could
    be a trivial problem?
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你*需要*一个线性规划来解决这个问题吗，还是这个问题可能是一个简单的问题？
- en: What is your main objective?
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的主要目标是什么？
- en: Do you only have one objective or are there many?
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你只有一个目标，还是有多个目标？
- en: Is it a maximization problem or a minimization problem?
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是一个最大化问题还是一个最小化问题？
- en: What are all the possible constraints you can think of?
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你能想到的所有可能的约束条件是什么？
- en: Are your decision variables all non-negative, or do you need some special kind
    of specification?
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的决策变量都是非负的吗，还是需要一些特殊的规格？
- en: '6\. Applied Linear Programming in Python: Case Study using Toronto-based Shelter
    Data'
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6\. Python 中的应用线性规划：基于多伦多收容所数据的案例研究
- en: I’ve done tons of explaining for now, so instead of talking some more, I’ll
    just show you what a “non-standard” applied linear programming problem might look
    like, in code. If you remember, we said there are many open-source Python packages
    available which use the AML paradigm. PuLP is one of them, so we’ll use PuLP for
    now.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经做了大量的解释，所以与其再多说些，不如直接展示一个“非标准”的应用线性规划问题，代码如下。如果你还记得，我们提到过有许多开源的 Python 包使用
    AML 范式。PuLP 就是其中之一，所以我们这次使用 PuLP。
- en: This is a semi-hypothetical example with 12 real-life homeless shelters based
    in the City of Toronto — real-life addresses, real-life buildings, fake number
    of rooms/beds available (i.e., supply/capacity), fake number of new requests for
    beds (i.e., demand), fake ‘cluster’ a shelter belongs to. Grim topic, I know.
    The data was acquired from the city’s [Open Data Catalogue](https://open.toronto.ca/dataset/daily-shelter-overnight-service-occupancy-capacity/).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个半假设性的例子，涉及 12 个真实存在的无家可归者收容所，位于多伦多市——真实的地址、真实的建筑物、虚假的房间/床位数量（即供应/容量）、虚假的新床位请求数量（即需求）、虚假的‘集群’收容所所属。话题有些沉重，我知道。这些数据来源于该市的[开放数据目录](https://open.toronto.ca/dataset/daily-shelter-overnight-service-occupancy-capacity/)。
- en: Code by Author
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 作者编写的代码
- en: Suppose we’re looking at any random day’s snapshot of supply and demand for
    beds at homeless shelters in Toronto. The selection of homeless shelters we’re
    looking at is strategically made so that we’re looking at clusters dispersed across
    the city — some shelters are close to others, while some are far from the reach
    of others. Keep this in mind as this is relevant to the optimization problem we’ll
    be specifying. Note that demand is at the cluster level and not the shelter level.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们在查看多伦多的无家可归者避难所的任意一天的床位供应和需求快照。我们选择的无家可归者避难所是战略性地分布在整个城市的——有些避难所彼此较近，而有些则相隔较远。请记住，这一点对于我们将要指定的优化问题是相关的。请注意，需求是按集群级别而不是避难所级别计算的。
- en: Furthermore, there are costs (both monetary and temporal) associated with each
    additional bed made available in a shelter, and costs vary — sometimes by shelter,
    and sometimes by cluster. We’ll define a cluster as a group of shelters that are
    relatively close to each other — a rough “map” visual of locations relative to
    each other below.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，每增加一个床位，无论是在避难所还是在集群中，都会产生（货币和时间）成本，这些成本有所不同——有时按避难所计算，有时按集群计算。我们将集群定义为相对接近的避难所组——下方是位置相对彼此的粗略“地图”示意图。
- en: '![XXXXX](../Images/c0cab7d88a5bc5fa383e6dfba9b8d1a1.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![XXXXX](../Images/c0cab7d88a5bc5fa383e6dfba9b8d1a1.png)'
- en: In addition to monetary cost, let’s say there’s also a time cost associated
    with opening each additional bed — also sometimes by the shelter, and sometimes
    by cluster. The reasoning for this time cost is that there might be demand for
    a bed within the neighborhood/cluster, but the request has been made at a full-capacity
    location and the service user needs to be relocated.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 除了货币成本之外，假设开设每个额外床位也会有时间成本——有时按避难所计算，有时按集群计算。这些时间成本的原因是，可能在邻近/集群内对床位有需求，但请求是在满员的位置提出的，需要重新安置服务用户。
- en: We’ll set this up as a [multi-objective optimization problem](https://www.supplychaindataanalytics.com/multi-objective-linear-optimization-with-pulp-in-python/)
    so our specification (in code) will need to be able to accommodate that. First,
    we minimize monetary cost, and then we minimize time costs. The coefficients in
    the second objective function correspond to the relative time increase within
    a specific shelter group (i.e., time cost for moving new users from Shelter X
    to shelter Y). Note that optimization problem specification is not unique and
    there may be more than one specification that leads to the same results.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把这个设置为一个 [多目标优化问题](https://www.supplychaindataanalytics.com/multi-objective-linear-optimization-with-pulp-in-python/)，因此我们的规范（代码中）需要能够适应这个问题。首先，我们最小化货币成本，然后最小化时间成本。第二个目标函数中的系数对应于特定避难所组内的相对时间增加（即，将新用户从避难所X转移到避难所Y的时间成本）。请注意，优化问题的规范不是唯一的，可能有多个规范导致相同的结果。
- en: 'Here’s all the code as one long script. The model specification code could
    be condensed/simplified but we’ll keep it like this so you can see all the details
    more clearly. We comment out the initial objective function since we’ve added
    it as a monetary cost constraint in step #5.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这是所有代码的一个长脚本。模型规范代码可以压缩/简化，但我们保持这种形式，以便你能更清楚地看到所有细节。我们注释掉了初始目标函数，因为我们在第5步中将其作为货币成本约束添加了。
- en: Code by Author
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 作者代码
- en: 'If you’ve run this code locally, you’d see the output as follows:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在本地运行了这段代码，你会看到如下输出：
- en: '[PRE0]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Your first question might be: Isn’t this a trivial problem? And if not, how
    come? This is an important question, and it’s one that might justify not specifying
    a linear programming problem at all! However, in this case, it is a non-trivial
    problem and we do need a LP specification, think about why.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会问：这不是一个微不足道的问题吗？如果不是，那是为什么？这是一个重要的问题，这可能证明不需要指定线性规划问题！然而，在这种情况下，这是一个非平凡的问题，我们确实需要线性规划规范，考虑一下原因。
- en: '**Hint:** First, we minimize monetary costs, and then we minimize time costs.
    Can you think of a way to solve this problem by hand?'
  id: totrans-49
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**提示：** 首先，我们最小化货币成本，然后最小化时间成本。你能想到用手动方式解决这个问题的方法吗？'
- en: References
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] B. Kolman and R.E. Beck, [Elementary Linear Programming with Applications](https://www.sciencedirect.com/book/9780124179103/elementary-linear-programming-with-applications)
    (1995), ScienceDirect'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] B. Kolman 和 R.E. Beck, [《基础线性规划及应用》](https://www.sciencedirect.com/book/9780124179103/elementary-linear-programming-with-applications)
    (1995), ScienceDirect'
- en: '[2] G.B. Dantzig, [Reminiscences About The Origins of Linear Programming](https://apps.dtic.mil/sti/pdfs/ADA112060.pdf)
    (1982), Department of Operations Research — Stanford University'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] G.B. 丹齐格，[线性规划起源的回忆](https://apps.dtic.mil/sti/pdfs/ADA112060.pdf)（1982年），运筹学系
    — 斯坦福大学'
- en: '[3] R. Fourer, D.M. Gay, B.W. Kenighan, [A Modeling Language for Mathematical
    Programming](https://vanderbei.princeton.edu/307/textbook/AMPLbook.pdf) (1990)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] R. 福尔尔，D.M. 盖伊，B.W. 肯尼汉，[数学编程建模语言](https://vanderbei.princeton.edu/307/textbook/AMPLbook.pdf)（1990年）'
- en: '**[Mariam Walaa](https://www.linkedin.com/in/mariamwalaa/)** is a math major
    with over 3 years of experience as a data scientist in engineering, retail and
    academia working on a variety of problems ranging from natural language processing
    and recommendation systems to linear programming and optimization.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**[玛丽亚姆·瓦拉](https://www.linkedin.com/in/mariamwalaa/)** 是一名数学专业背景的数据科学家，拥有超过3年的工程、零售和学术领域的数据科学经验，涉及自然语言处理、推荐系统、线性规划和优化等多种问题。'
- en: '* * *'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业的捷径'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织IT'
- en: '* * *'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[KDnuggets™ News 22:n04, Jan 26: The High Paying Side Hustles…](https://www.kdnuggets.com/2022/n04.html)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets™ 新闻 22:n04, 1月26日: 高薪副业…](https://www.kdnuggets.com/2022/n04.html)'
- en: '[DataLang: A New Programming Language for Data Scientists... Created…](https://www.kdnuggets.com/2023/04/datalang-new-programming-language-data-scientists-chatgpt.html)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[DataLang: 为数据科学家创建的新编程语言…](https://www.kdnuggets.com/2023/04/datalang-new-programming-language-data-scientists-chatgpt.html)'
- en: '[LangChain 101: Build Your Own GPT-Powered Applications](https://www.kdnuggets.com/2023/04/langchain-101-build-gptpowered-applications.html)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[LangChain 101: 构建你自己的GPT驱动应用](https://www.kdnuggets.com/2023/04/langchain-101-build-gptpowered-applications.html)'
- en: '[Prompt Engineering 101: Mastering Effective LLM Communication](https://www.kdnuggets.com/prompt-engineering-101-mastering-effective-llm-communication)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[提示工程 101: 精通有效的LLM沟通](https://www.kdnuggets.com/prompt-engineering-101-mastering-effective-llm-communication)'
- en: '[KDnuggets™ News 22:n06, Feb 9: Data Science Programming…](https://www.kdnuggets.com/2022/n06.html)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets™ 新闻 22:n06, 2月9日: 数据科学编程…](https://www.kdnuggets.com/2022/n06.html)'
- en: '[Data Science Programming Languages and When To Use Them](https://www.kdnuggets.com/2022/02/data-science-programming-languages.html)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学编程语言及其使用时机](https://www.kdnuggets.com/2022/02/data-science-programming-languages.html)'
