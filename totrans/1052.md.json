["```py\nurl = 'https://archive.org/download/stackexchange/arduino.stackexchange.com.7z'\nurllib.request.urlretrieve(url, product['zipped'])\nPath(product['extracted']).mkdir(exist_ok=True)\nArchive(product['zipped']).extractall(product['extracted'])\n\n```", "```py\ndef get_client(env):\n  path = env.path.products_root / 'data.db'\n  # create parent folders if they don't exist, otherwise sqlalchemy fails\n  if not path.parent.exists():\n      path.parent.mkdir(exist_ok=True, parents=True)\n  return SQLAlchemyClient(f'sqlite:///{path}')\n\n```", "```py\n - source: \"{{path.products_root}}/data/Users.csv\"\n   name: upload-users\n   class: SQLUpload\n   product: [users, table]\n   upstream: convert2csv\n   to_sql_kwargs:\n     if_exists: replace\n\n```", "```py\n- source: sql/upvotes-by-location.sql\n  name: upvotes-by-location\n  product: [upvotes_by_location, table]\n  upstream: upload-users\n\n```", "```py\nDROP TABLE IF EXISTS {{product}};\nCREATE TABLE {{product}} AS\nSELECT Location, AVG(upvotes) AS mean_upvotes\nFROM {{upstream['upload-users']}}\nGROUP BY Location\nHAVING AVG(upvotes) > 1\n\n```"]