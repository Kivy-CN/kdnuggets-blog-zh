- en: How to Improve Machine Learning Performance? Lessons from Andrew Ng
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2017/12/improve-machine-learning-performance-lessons-andrew-ng.html](https://www.kdnuggets.com/2017/12/improve-machine-learning-performance-lessons-andrew-ng.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](/2017/12/4-common-data-fallacies.html/2#comments)'
  prefs: []
  type: TYPE_IMG
- en: You have worked for weeks on building your machine learning system and the performance
    is not something you are satisfied with. You think of multiple ways to improve
    your algorithm’s performance, viz, collect more data, add more hidden units, add
    more layers, change the network architecture, change the basic algorithm etc.
    But which one of these will give the best improvement on your system? You can
    either try them all, invest a lot of time and find out what works for you. OR!
    You can use the following tips from Ng’s experience.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4a283f62230263be6380d1ad30594bc4.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Orthogonalisation**'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: One of the challenges with building machine learning systems is that there are
    so many things you could try, so many things you could change. Including, for
    example, so many hyperparameters you could tune. The art of knowing what parameter
    to tune to get what effect, is called **orthogonalisation.**
  prefs: []
  type: TYPE_NORMAL
- en: In supervised learning, one needs to perform well on the following four tasks
    and for each of them, there should be a set of knobs which can be tuned for that
    task to perform well.
  prefs: []
  type: TYPE_NORMAL
- en: Fit training set well
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fit dev set well
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fit test set well
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Perform well in real world
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Suppose, your algo isn’t doing well on training set, you want one knob, or maybe
    one specific set of knobs that you can use, to make sure you can tune your algorithm
    to make it fit well on the training set. The knobs you use to tune this are, may
    be train a bigger network or switch to a better optimization algorithm, like the
    [Adam optimization algorithm](https://arxiv.org/pdf/1412.6980), and so on. In
    contrast, if your algorithm is not doing well on the dev set, then you have a
    set of knobs around regularization that you can use to try to make it satisfy
    the second criteria. Thus, knowing your tuning knobs well will help improve your
    system quicker.
  prefs: []
  type: TYPE_NORMAL
- en: '**Single Number Evaluation Metric**'
  prefs: []
  type: TYPE_NORMAL
- en: Have a single real number metric for your project as an evaluation metric so
    that you know if tuning a knob is helping your algorithm or not. While testing
    multiple scenarios, this metric can help you choose the most efficient algorithm
    quickly. Sometimes, you might need two metrics to evaluate your algorithm, say
    precision and recall. But with two evaluation metrics, it gets difficult to mark
    which algorithm is performing better.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8b3b088dfed800f646bc7889f420d950.png)'
  prefs: []
  type: TYPE_IMG
- en: Hence, rather than using two numbers, precision and recall, to pick a classifier,
    you just have to find a new evaluation metric that combines precision and recall.
    In the machine learning literature, the standard way to combine precision and
    recall is something called an [F1 score](https://en.wikipedia.org/wiki/F1_score).
    You will rarely ever have to devise a new performance measure yourself as you
    can generally find one in ML literature based on the requirements of your system.
  prefs: []
  type: TYPE_NORMAL
- en: '**Satisfying and Optimizing Metric**'
  prefs: []
  type: TYPE_NORMAL
- en: There might be cases where you don’t have just 1 (or 2) but n metrics that you
    care about for your system. Suppose you are asked to create a classifier with
    maximum accuracy, with minimum time and space complexity. You build the following
    4 classifiers, which one do you deliver?
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1e72a8a51c9a15d4d07865b64b288807.png)'
  prefs: []
  type: TYPE_IMG
- en: In such cases, choose one metric as optimizing and (n-1) metrics as satisficing.
    Here, maximize Test Accuracy (optimizing), have Runtime less than 10sec and Memory
    requirement less than 10MB (satisfying a threshold). By doing all these, you are
    setting a goal for your team so that they know what needs to be achieved.
  prefs: []
  type: TYPE_NORMAL
- en: '*Everyone in the Machine Learning universe knows about Andrew Ng, and if they
    know him, they also know about his Deep Learning Specialization* [*course*](https://www.coursera.org/specializations/deep-learning)*on
    Coursera. If you want to break into AI, this Specialization will help you do so.
    One of the courses in this specialization talks about Structuring Machine Learning
    Projects, where you understand how to diagnose errors in a machine learning system
    and prioritize most promising directions for reducing those errors. This article
    is based off of* [*this*](https://www.coursera.org/learn/machine-learning-projects/home/welcome)
    *course in the specialization.*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Train/Dev/Test Distributions**'
  prefs: []
  type: TYPE_NORMAL
- en: Always make sure that your development and test sets come from the same distribution
    and it must be taken randomly from all the data. For example, you are building
    a cat classifier and you have data from US, UK, South America, India, China, and
    Australia. It will be incorrect to use data from first three regions as dev set
    and from last three regions as test set. Shuffle all this data and randomly select
    both the sets.
  prefs: []
  type: TYPE_NORMAL
- en: '*Choose a dev/test set to reflect data you expect to get in the future and
    consider important to do well on.*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Change dev/test set and evaluation metrics**'
  prefs: []
  type: TYPE_NORMAL
- en: If half way through your project you realise you chose wrong dev set or wrong
    metric to measure your performance, change them. After all, the success of your
    machine learning depends on -
  prefs: []
  type: TYPE_NORMAL
- en: Knowing what to aim at (Choosing correct dev set and evaluation metric)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Aiming it well (Performing well on these metric)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If doing well on your metric + dev/test set does not correspond to doing well
    on your application, it is time to change them. You have not set your aim well.
  prefs: []
  type: TYPE_NORMAL
- en: '**Conclusion**'
  prefs: []
  type: TYPE_NORMAL
- en: Understand the application of your machine learning algorithm, collect data
    accordingly and split train/dev/test sets randomly. Come up with a single optimizing
    evaluation metric and tune your knobs to improve on this metric.
  prefs: []
  type: TYPE_NORMAL
- en: I hope this post helped you learn how to build a successful machine learning
    project. There will be more posts following this one to talk about human level
    performance, avoidable bias, error analysis, data mismatch, multi-tasking etc.
  prefs: []
  type: TYPE_NORMAL
- en: If you have any questions/suggestions, feel free to reach out with your comments,
    connect with me on [LinkedIn](https://www.linkedin.com/in/kritikajalan/), or [Twitter](https://twitter.com/Kritika_Jalan)
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/how-to-improve-my-ml-algorithm-lessons-from-andrew-ngs-experience-i-551ca1a32634).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related**'
  prefs: []
  type: TYPE_NORMAL
- en: '[**Data Science, Machine Learning: Main Developments in 2017 and Key Trends
    in 2018**](https://www.kdnuggets.com/2017/12/data-science-machine-learning-main-developments-trends.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Top Data Science and Machine Learning Methods Used in 2017**](https://www.kdnuggets.com/2017/12/top-data-science-machine-learning-methods.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Deep Learning Specialization by Andrew Ng  –  21 Lessons Learned**](https://www.kdnuggets.com/2017/11/ng-deep-learning-specialization-21-lessons.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[7 Ways to Improve Your Machine Learning Models](https://www.kdnuggets.com/7-ways-to-improve-your-machine-learning-models)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Ten Key Lessons of Implementing Recommendation Systems in Business](https://www.kdnuggets.com/2022/07/ten-key-lessons-implementing-recommendation-systems-business.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Lessons from a Senior Data Scientist](https://www.kdnuggets.com/2022/09/lessons-senior-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News, September 28: Free Algorithms in Python Course •…](https://www.kdnuggets.com/2022/n38.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[4 Career Lessons That Helped Me Navigate the Difficult Job Market](https://www.kdnuggets.com/2023/05/4-lessons-made-difference-navigating-current-job-market.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Sky''s the Limit: Learn how JetBlue uses Monte Carlo and Snowflake…](https://www.kdnuggets.com/2022/12/monte-carlo-jetblue-snowflake-build-trust-improve-model-accuracy.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
