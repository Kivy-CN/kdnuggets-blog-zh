- en: Why You Should Start Using .npy Files More Often
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么你应该更频繁地使用 .npy 文件
- en: 原文：[https://www.kdnuggets.com/2018/04/start-using-npy-files-more-often.html](https://www.kdnuggets.com/2018/04/start-using-npy-files-more-often.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2018/04/start-using-npy-files-more-often.html](https://www.kdnuggets.com/2018/04/start-using-npy-files-more-often.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](#comments)'
- en: '![Header image](../Images/3d3475ba8989fc5051c17ec4d1fa447f.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![Header image](../Images/3d3475ba8989fc5051c17ec4d1fa447f.png)'
- en: '**Introduction**'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**介绍**'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业轨道。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的IT需求'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Numpy, short for [Numerical Python](http://numpy.org/), is the fundamental package
    required for high performance scientific computing and data analysis in Python
    ecosystem. It is the foundation on which nearly all of the higher-level tools
    such as [Pandas](https://pandas.pydata.org/) and [scikit-learn](http://scikit-learn.org/) are
    built. [TensorFlow](https://www.tensorflow.org/) uses NumPy arrays as the fundamental
    building block on top of which they built their Tensor objects and graphflow for
    deep learning tasks (which makes heavy use of linear algebra operations on a long
    list/vector/matrix of numbers).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Numpy，简称为[数值Python](http://numpy.org/)，是Python生态系统中进行高性能科学计算和数据分析所需的基础包。几乎所有的高级工具如[Pandas](https://pandas.pydata.org/)和[scikit-learn](http://scikit-learn.org/)都是建立在它的基础上的。[TensorFlow](https://www.tensorflow.org/)使用Numpy数组作为基本构建块，在其基础上构建了Tensor对象和用于深度学习任务的graphflow（这对长列表/向量/矩阵的线性代数运算的使用非常频繁）。
- en: Many articles have been written demonstrating the advantage of Numpy array over
    plain vanilla Python lists. You will often come across this assertion in the data
    science, machine learning, and Python community that Numpy is much faster due
    to its vectorized implementation and due to the fact that many of its core routines
    are written in C (based on [CPython framework](https://en.wikipedia.org/wiki/CPython)).
    And it is indeed true ([this article is a beautiful demonstration](http://notes-on-cython.readthedocs.io/en/latest/std_dev.html) of
    various options that one can work with Numpy, even writing bare-bone C routines
    with Numpy APIs). Numpy arrays are densely packed arrays of homogeneous type.
    Python lists, by contrast, are arrays of pointers to objects, even when all of
    them are of the same type. You get the benefits of [locality of reference](https://en.wikipedia.org/wiki/Locality_of_reference).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 许多文章已经展示了Numpy数组相比于普通Python列表的优势。你经常会在数据科学、机器学习和Python社区中看到这样的说法：由于Numpy的矢量化实现以及许多核心例程是用C编写的（基于[CPython框架](https://en.wikipedia.org/wiki/CPython)），Numpy的速度要快得多。这确实是事实（[这篇文章美丽地展示了](http://notes-on-cython.readthedocs.io/en/latest/std_dev.html)使用Numpy的各种选项，甚至可以使用Numpy
    APIs编写基础的C例程）。Numpy数组是密集打包的同质类型数组。相比之下，Python列表是指向对象的指针数组，即使所有元素都属于同一类型。你可以享受到[引用局部性](https://en.wikipedia.org/wiki/Locality_of_reference)的好处。
- en: '[***In one of my highly cited articles on Towards Data Science platform***](https://towardsdatascience.com/why-you-should-forget-for-loop-for-data-science-code-and-embrace-vectorization-696632622d5f),
    I demonstrated the advantage of using Numpy vectorized operations over traditional
    programming constructs like *for-loop*.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[***在我在Towards Data Science平台上高度引用的文章之一***](https://towardsdatascience.com/why-you-should-forget-for-loop-for-data-science-code-and-embrace-vectorization-696632622d5f)，我展示了使用Numpy矢量化操作相对于传统编程构造如*for-loop*的优势。'
- en: However, what is less appreciated is the fact, when it comes to repeated reading
    of the same data from a local (or networked) disk storage, **Numpy offers another
    gem called .npy file format**. This file format makes** incredibly fast reading
    speed enhancement** over reading from plain text or CSV files.
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 然而，较少被认可的是，涉及从本地（或网络）磁盘存储中重复读取相同数据时，**Numpy 提供了另一个称为 .npy 文件格式的宝藏**。这种文件格式**大幅提高了读取速度**，相较于从纯文本或
    CSV 文件读取。
- en: The catch is — of course you have to read the data in traditional manner for
    the first time and create a in-memory NumPy `ndarray` object. But if you use the
    same CSV file for repeated reading of the same numerical data set, it makes perfect
    sense to store the `ndarray` in a `npy` file instead of reading it over and over
    from the original CSV.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是——当然，你第一次必须以传统方式读取数据并创建一个内存中的 NumPy `ndarray` 对象。但是，如果你使用相同的 CSV 文件重复读取相同的数值数据集，那么将
    `ndarray` 存储在 `npy` 文件中而不是从原始 CSV 文件中重复读取将是很有意义的。
- en: '**What is this .NPY file?**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**什么是 .NPY 文件？**'
- en: It is a standard binary file format for persisting a single arbitrary NumPy
    array on disk. The format stores all of the shape and data type information necessary
    to reconstruct the array correctly even on another machine with a different architecture.
    The format is designed to be as simple as possible while achieving its limited
    goals. The implementation is intended to be pure Python and distributed as part
    of the main numpy package.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个标准的二进制文件格式，用于在磁盘上持久化单个任意 NumPy 数组。该格式存储了所有形状和数据类型信息，即使在具有不同架构的另一台机器上也能正确重建数组。该格式设计尽可能简单，同时实现其有限的目标。实现意图是纯
    Python，并作为主 numpy 包的一部分进行分发。
- en: 'The format MUST be able to:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 格式必须能够：
- en: Represent all NumPy arrays including nested record arrays and object arrays.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表示所有 NumPy 数组，包括嵌套的记录数组和对象数组。
- en: Represent the data in its native binary form.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以原生二进制形式表示数据。
- en: Be contained in a single file.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 被包含在一个文件中。
- en: Store all of the necessary information to reconstruct the array including shape
    and data type on a machine of a different architecture. Both little-endian and
    big-endian arrays must be supported and a file with little-endian numbers will
    yield a little-endian array on any machine reading the file. The types must be
    described in terms of their actual sizes. For example, if a machine with a 64-bit
    C “long int” writes out an array with “long ints”, a reading machine with 32-bit
    C “long ints” will yield an array with 64-bit integers.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储所有必要的信息以重建数组，包括形状和数据类型，以便在不同架构的机器上使用。必须支持小端和大端数组，文件中的小端数字在任何读取该文件的机器上都会生成小端数组。类型必须以其实际大小来描述。例如，如果一台具有
    64 位 C “long int”的机器写出一个包含“long int”的数组，则读取该数组的 32 位 C “long int”机器将生成一个 64 位整数的数组。
- en: Be reverse engineered. Datasets often live longer than the programs that created
    them. A competent developer should be able to create a solution in his preferred
    programming language to read most NPY files that he has been given without much
    documentation.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可逆向工程。数据集通常比创建它们的程序存活得更久。一个有能力的开发者应该能够在其首选编程语言中创建一个解决方案，以读取他获得的大多数 NPY 文件，而无需过多的文档。
- en: Allow memory-mapping of the data.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许内存映射数据。
- en: '**Demo using simple code**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用简单代码的演示**'
- en: As always, you can download the [boiler plate code Notebook](https://github.com/tirthajyoti/PythonMachineLearning/blob/master/Pandas%20and%20Numpy/Numpy_Reading.ipynb) from
    my [Github repository](https://github.com/tirthajyoti/PythonMachineLearning).
    Here I am showing the basic code snippet.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一如既往，你可以从我的 [boiler plate code Notebook](https://github.com/tirthajyoti/PythonMachineLearning/blob/master/Pandas%20and%20Numpy/Numpy_Reading.ipynb)
    下载，链接在我的 [Github repository](https://github.com/tirthajyoti/PythonMachineLearning)。这里我展示了基本的代码片段。
- en: First, the usual method of reading the CSV file in a list and converting that
    to an ndarray.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，通常的方法是将 CSV 文件读取为列表，并将其转换为 ndarray。
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: So this was the first time read, which you have to do anyway. *But if you are
    likely to use the same dataset many more times*, then, after your data science
    process is finished, don’t forget to save the ndarray object in **.npy** **format**.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这是第一次读取，你无论如何都必须这样做。*但如果你可能会多次使用相同的数据集*，那么，在你的数据科学过程完成后，别忘了将 ndarray 对象保存为**.npy**
    **格式**。
- en: '`**np.save(''fnumpy.npy'', array_lst)**`'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`**np.save(''fnumpy.npy'', array_lst)**`'
- en: Because if you do so, the next time, reading from the disk will be blazing fast!
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 因为这样做的话，下次从磁盘读取将会非常迅速！
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: It does not matter if you want to load the data in some other shape,
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想以其他形状加载数据，这无关紧要。
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: It turns out that at least in this particular case, the file size on disk is
    also smaller for the .npy format.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9af6aef9fe0c1305cdeb03a5ee5f6e39.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
- en: '**Summary**'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we demonstrate the utility of using native NumPy file format .npy
    over CSV for reading large numerical data set. It may be an useful trick if the
    same CSV data file needs to be read many times.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: Read more [details about this file format here](https://docs.scipy.org/doc/numpy/neps/npy-format.html).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: If you have any questions or ideas to share, please contact the author at [**tirthajyoti[AT]gmail.com**](mailto:tirthajyoti@gmail.com).
    Also you can check author’s [**GitHub repositories**](https://github.com/tirthajyoti?tab=repositories) for
    other fun code snippets in Python, R, or MATLAB and machine learning resources.
    If you are, like me, passionate about machine learning/data science, please feel
    free to [add me on LinkedIn](https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/) or [follow
    me on Twitter.](https://twitter.com/tirthajyotiS)
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Tirthajyoti Sarkar](https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/)**
    is a semiconductor technologist, machine learning/data science zealot, Ph.D. in
    EE, blogger and writer.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/why-you-should-start-using-npy-file-more-often-df2a13cc0161).
    Reposted with permission.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: '[Why You Should Forget ‘for-loop’ for Data Science Code and Embrace Vectorization](/2017/11/forget-for-loop-data-science-code-vectorization.html)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Working With Numpy Matrices: A Handy First Reference](/2017/03/working-numpy-matrices.html)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Started with Python for Data Analysis](/2017/07/getting-started-python-data-analysis.html)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Top 4 tricks for competing on Kaggle and why you should start](https://www.kdnuggets.com/2022/05/packt-top-4-tricks-competing-kaggle-start.html)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Why You Need To Learn More Than One Programming Language!](https://www.kdnuggets.com/2022/06/need-learn-one-programming-language.html)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[More Performance Evaluation Metrics for Classification Problems You…](https://www.kdnuggets.com/2020/04/performance-evaluation-metrics-classification.html)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Why are More Developers Using Python for Their Machine Learning Projects?](https://www.kdnuggets.com/2022/01/developers-python-machine-learning-projects.html)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data Science Minimum: 10 Essential Skills You Need to Know to Start…](https://www.kdnuggets.com/2020/10/data-science-minimum-10-essential-skills.html)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Start Using Natural Language Processing With PyTorch](https://www.kdnuggets.com/2022/04/start-natural-language-processing-pytorch.html)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
