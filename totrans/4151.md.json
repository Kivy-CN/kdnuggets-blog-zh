["```py\nimport pandas as pd\n\ndata = pd.read_csv(\"Social_Network_Ads.csv\")\ntype(data)\n\n>>> pandas.core.frame.DataFrame\n```", "```py\ndata.head()\n```", "```py\npd.read_excel('filename')\npd.read_sql(query,connection_object)\npd.read_json(json_string)\npd.read_html(url)\npd.DataFrame(dict)\n```", "```py\ndata.to_csv(\"new_wine_data.csv\",index=False)\n```", "```py\ndata.to_excel(filename)\ndata.to_sql(table_name, connection_object)\ndata.to_json(filename)\ndata.to_html(filename)\n```", "```py\ndata.info()\n RangeIndex: 400 entries, 0 to 399\nData columns (total 3 columns):\n #   Column           Non-Null Count  Dtype\n---  ------           --------------  -----\n 0   Age              400 non-null    int64\n 1   EstimatedSalary  400 non-null    int64\n 2   Purchased        400 non-null    int64\ndtypes: int64(3)\nmemory usage: 9.5 KB\n```", "```py\ndata.shape\n>>> (400, 3)\ndata.index\n>>> RangeIndex(start=0, stop=400, step=1)\ndata.columns\n>>> Index(['Age', 'EstimatedSalary', 'Purchased'], dtype='object')\n```", "```py\ndata.describe()\n\nAge  EstimatedSalary   Purchased\ncount  400.000000       400.000000  400.000000\nmean    37.655000     69742.500000    0.357500\nstd     10.482877     34096.960282    0.479864\nmin     18.000000     15000.000000    0.000000\n25%     29.750000     43000.000000    0.000000\n50%     37.000000     70000.000000    0.000000\n75%     46.000000     88000.000000    1.000000\nmax     60.000000    150000.000000    1.000000\n```", "```py\ndata.isnull().sum()\nAge                0\nEstimatedSalary    0\nPurchased          0\ndtype: int64\n```", "```py\ndata.corr()\n                     Age  EstimatedSalary  Purchased\nAge              1.000000         0.155238   0.622454\nEstimatedSalary  0.155238         1.000000   0.362083\nPurchased        0.622454         0.362083   1.000000\n```", "```py\ndata[\"Age\"]\n0      19\n1      35\n2      26\n3      27\n4      19\n       ..\n395    46\n396    51\n397    50\n398    36\n399    49\nName: Age, Length: 400, dtype: int64\n\ndata.Purchased.head()\n0    0\n1    0\n2    0\n3    0\n4    0\nName: Purchased, dtype: int64\n```", "```py\ndata.iloc[0,1]\n19000\n\ndata.loc[0,\"Purchased\"]\n0\n```", "```py\ndata.Purchased.value_counts()\n0    257\n1    143\nName: Purchased, dtype: int64\n```", "```py\nprint(data[data['Purchased']==1].head())\n   Age  EstimatedSalary  Purchased\n7    32           150000          1\n16   47            25000          1\n17   45            26000          1\n18   46            28000          1\n19   48            29000          1\n```", "```py\nprint(data[(data['Purchased']==1) & (data['Age']>=35)])\n\n    Age  EstimatedSalary  Purchased\n16    47            25000          1\n17    45            26000          1\n18    46            28000          1\n19    48            29000          1\n20    45            22000          1\n..   ...              ...        ...\n393   60            42000          1\n395   46            41000          1\n396   51            23000          1\n397   50            20000          1\n399   49            36000          1\n\n[129 rows x 3 columns]\n```", "```py\ndata.sort_values('Purchased', ascending=False).head()\n```", "```py\ndata.sort_index()\n```", "```py\ndata = data.rename(columns= {'EstimatedSalary' : 'Salary'})\ndata.head()\n```", "```py\ndata.drop(columns='Salary').head()\n```", "```py\ndata.drop(1)\n```", "```py\ndata.dtypes\nAge              int64\nSalary           int64\nPurchased        int64\ndtype: object\n```", "```py\ndata['Purchased'] = data['Purchased'].astype('bool')\n```", "```py\ndata.dtypes\nAge          int64\nSalary       int64\nPurchased     bool\ndtype: object\n```", "```py\ndef double(x):   #create a function\n    return x*2\n\ndata['double_Salary'] = data['Salary'].apply(double)\nprint(data.head())\n```", "```py\n   Age  Salary  Purchased  double_Salary\n0   19   19000      False          38000\n1   35   20000      False          40000\n2   26   43000      False          86000\n3   27   57000      False         114000\n4   19   76000      False         152000\n```", "```py\ndata['Salary'].apply(lambda x: x*2).head()\n```", "```py\ndata.plot( kind='box');\n```", "```py\ndata.plot(x=\"Age\",y = \"Salary\", kind='density');\n```"]