["```py\n$ sudo pip install pulp            *# PuLP*\n$ sudo apt-get install glpk-utils  *# GLPK*\n$ sudo apt-get install coinor-cbc  *# CoinOR*\n\n```", "```py\nfrom pulp import *\n\n```", "```py\nprob = LpProblem(\"Simple Diet Problem\",LpMinimize)\n\n```", "```py\n# Read the first few rows dataset in a Pandas DataFrame\n# Read only the nutrition info not the bounds/constraints\ndf = pd.read_excel(\"diet - medium.xls\",nrows=17)\n\n# Create a list of the food items\nfood_items = list(df['Foods'])\n\n# Create a dictinary of costs for all food items\ncosts = dict(zip(food_items,df['Price/Serving']))\n\n# Create a dictionary of calories for all food items\ncalories = dict(zip(food_items,df['Calories']))\n\n# Create a dictionary of total fat for all food items\nfat = dict(zip(food_items,df['Total_Fat (g)']))\n\n# Create a dictionary of carbohydrates for all food items\ncarbs = dict(zip(food_items,df['Carbohydrates (g)']))\n\n```", "```py\nfood_vars = LpVariable.dicts(\"Food\",food_items,lowBound=0,cat='Continuous')\n\n```", "```py\nprob += lpSum([costs[i]*food_vars[i] for i in food_items])\n\n```", "```py\nprob += lpSum([calories[f] * food_vars[f] for f in food_items]) >= 800.0\nprob += lpSum([calories[f] * food_vars[f] for f in food_items]) <= 1300.0\n\n```", "```py\n# Fat\nprob += lpSum([fat[f] * food_vars[f] for f in food_items]) >= 20.0, \"FatMinimum\"\nprob += lpSum([fat[f] * food_vars[f] for f in food_items]) = 130.0, \"CarbsMinimum\"\nprob += lpSum([carbs[f] * food_vars[f] for f in food_items]) = 60.0, \"FiberMinimum\"\nprob += lpSum([fiber[f] * food_vars[f] for f in food_items]) = 100.0, \"ProteinMinimum\"\nprob += lpSum([protein[f] * food_vars[f] for f in food_items]) <= 150.0, \"ProteinMaximum\"\n\n```"]