- en: SQL in Pandas with Pandasql
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/sql-in-pandas-with-pandasql](https://www.kdnuggets.com/sql-in-pandas-with-pandasql)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/b2929d05329add91763391541819c4a1.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: If you can add *only one skill*—and inarguably the most important—to your data
    science toolbox, it is **SQL**. In the Python data analysis ecosystem, however,
    [pandas](https://pandas.pydata.org/) is a powerful and popular library.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: But, if you are new to pandas, learning your way around pandas functions—for
    grouping, aggregation, joins, and more—can be overwhelming. It would be much easier
    to query your dataframes with SQL instead. The [pandasql](https://pypi.org/project/pandasql/)
    library lets you do just that!
  prefs: []
  type: TYPE_NORMAL
- en: So let’s learn how to use the pandasql library to run SQL queries on a pandas
    dataframe on  a sample dataset.
  prefs: []
  type: TYPE_NORMAL
- en: First Steps with Pandasql
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we go any further, let’s set up our working environment.
  prefs: []
  type: TYPE_NORMAL
- en: Installing pandasql
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you’re using Google Colab, you can install pandasql using `pip` and code
    along:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: If you’re using Python on your local machine, ensure that you have [pandas](https://pandas.pydata.org/)
    and [Seaborn](http://seaborn.pydata.org/) installed in a dedicated virtual environment
    for this project. You can use the built-in [venv](https://docs.python.org/3/library/venv.html)
    package to create and manage virtual environments.
  prefs: []
  type: TYPE_NORMAL
- en: I’m running Python 3.11 on Ubuntu LTS 22.04\. So the following instructions
    are for Ubuntu (should also work on a Mac). If you’re on a Windows machine, follow
    [these instructions to create and activate virtual environments](https://docs.python.org/3/library/venv.html#how-venvs-work).
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a virtual environment (v1 here), run the following command in your
    project directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Then activate the virtual environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Now install pandas, seaborn, and pandasql:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Note**: If you don’t already have `pip` installed, you can update the system
    packages and install it by running: `apt install python3-pip`.'
  prefs: []
  type: TYPE_NORMAL
- en: The `sqldf` Function
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To run SQL queries on a pandas dataframe, you can import and use `sqldf` with
    the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Here,
  prefs: []
  type: TYPE_NORMAL
- en: '`query` represents the SQL query that you want to execute on the pandas dataframe.
    It should be a string containing a valid SQL query.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`globals()` specifies the global namespace where the dataframe(s) used in the
    query are defined.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Querying a Pandas DataFrame with Pandasql
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let’s start by importing the required packages and the `sqldf`  function from
    pandasql:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Because we’ll run several queries on the dataframe, we can define a function
    so we can call it by passing in the query as the argument:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: For all the examples that follow, we’ll run the `run_query` function (that uses
    `sqldf()` under the hood) to execute the SQL query on the `tips_df` dataframe.
    We’ll then print out the returned result.
  prefs: []
  type: TYPE_NORMAL
- en: Loading the Dataset
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For this tutorial, we’ll use the "tips" dataset built into the [Seaborn](http://seaborn.pydata.org/)
    library. The "tips" dataset contains information about restaurant tips, including
    the total bill, tip amount, gender of the payer, day of the week, and more.
  prefs: []
  type: TYPE_NORMAL
- en: 'Lload the “tip” dataset into the dataframe `tips_df`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Example 1 – Selecting Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here’s our first query—a simple SELECT statement:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'As seen, this query selects *all* the columns from the `tips_df` dataframe,
    and limits the output to the first 10 rows using the `LIMIT` keyword. It is equivalent
    to performing `tips_df.head(10)` in pandas:'
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/83461cdf96b27b8217aec44229d417c1.png)'
  prefs: []
  type: TYPE_IMG
- en: Output of query_1
  prefs: []
  type: TYPE_NORMAL
- en: Example 2 – Filtering Based on a Condition
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Next, let’s write a query to filter the results based on conditions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: This query filters the `tips_df` dataframe based on the condition specified
    in the WHERE clause. It selects all columns from the `tips_df` dataframe where
    the ‘total_bill’ is greater than 30 *and* the ‘tip’ amount is greater than 5.
  prefs: []
  type: TYPE_NORMAL
- en: 'Running `query_2` gives the following result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/ed66703cde7b3584ac91f8fde7524b13.png)'
  prefs: []
  type: TYPE_IMG
- en: Output of query_2
  prefs: []
  type: TYPE_NORMAL
- en: Example 3 – Grouping and Aggregation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s run the following query to get the average bill amount grouped by the
    day:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Here’s the output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/0b541becf82c4045f870608c94eecaf8.png)'
  prefs: []
  type: TYPE_IMG
- en: Output of query_3
  prefs: []
  type: TYPE_NORMAL
- en: We see that the average bill amount on weekends is marginally higher.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s take another example for grouping and aggregations. Consider the following
    query:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'The query `query_4` groups the data in the `tips_df` dataframe by the ‘day’
    column and calculates the following aggregate functions for each group:'
  prefs: []
  type: TYPE_NORMAL
- en: '`num_transactions`: the count of transactions,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`avg_bill`: the average of the ‘total_bill’ column, and'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`max_tip`: the maximum value of the ‘tip’ column.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'As seen, we get the above quantities grouped by the day:'
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/8a5ef46053ceeea7451808be5e806ba6.png)'
  prefs: []
  type: TYPE_IMG
- en: Output of query_4
  prefs: []
  type: TYPE_NORMAL
- en: Example 4 – Subqueries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s add an example query that uses a subquery:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Here,
  prefs: []
  type: TYPE_NORMAL
- en: The inner subquery calculates the average value of the ‘total_bill’ column from
    the `tips_df` dataframe.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The outer query then selects all columns from the `tips_df` dataframe where
    the ‘total_bill’ is greater than the calculated average value.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Running `query_5` gives the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/7dde12833115494848fb9ef98f12ca4c.png)'
  prefs: []
  type: TYPE_IMG
- en: Output of query_5
  prefs: []
  type: TYPE_NORMAL
- en: Example 5 – Joining Two DataFrames
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We only have one dataframe. To perform a simple join, let’s create another
    dataframe like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: The `other_data` dataframe associates each day with a special event.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s now perform a LEFT JOIN between the `tips_df` and the `other_data` dataframes
    on the common ‘day’ column:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Here’s the result of the join operation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/17dd45a6768b2554d90eb0d677e376ad.png)'
  prefs: []
  type: TYPE_IMG
- en: Output of query_6
  prefs: []
  type: TYPE_NORMAL
- en: Wrap-Up and Next Steps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this tutorial, we went over how to run SQL queries on pandas dataframes using
    pandasql. Though pandasql makes querying dataframes with SQL super simple, there
    are some limitations.
  prefs: []
  type: TYPE_NORMAL
- en: The key limitation is that pandasql can be several orders slower than native
    pandas. So what should you do? Well, if you need to perform data analysis with
    pandas, you can use pandasql to query dataframes when you are *learning* pandas—and
    ramping up quickly. You can then switch to pandas or another library like [Polars](https://www.pola.rs/)
    once you’re comfortable with pandas.
  prefs: []
  type: TYPE_NORMAL
- en: To take the first steps in this direction, try writing and running the pandas
    equivalents of the SQL queries that we’ve run so far. All the code examples used
    in this tutorial are [on GitHub](https://github.com/balapriyac/python-data-analysis/tree/main/pandasql-tutorial).
    Keep coding!
  prefs: []
  type: TYPE_NORMAL
- en: '**[Bala Priya C](https://www.linkedin.com/in/bala-priya/)** is a developer
    and technical writer from India. She likes working at the intersection of math,
    programming, data science, and content creation. Her areas of interest and expertise
    include DevOps, data science, and natural language processing. She enjoys reading,
    writing, coding, and coffee! Currently, she''s working on learning and sharing
    her knowledge with the developer community by authoring tutorials, how-to guides,
    opinion pieces, and more.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Query Your Pandas DataFrames with SQL](https://www.kdnuggets.com/2021/10/query-pandas-dataframes-sql.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using SQL with Python: SQLAlchemy and Pandas](https://www.kdnuggets.com/using-sql-with-python-sqlalchemy-and-pandas)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Select Rows and Columns in Pandas Using [ ], .loc, iloc, .at…](https://www.kdnuggets.com/2019/06/select-rows-columns-pandas.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Pandas for Data Science](https://www.kdnuggets.com/2020/06/introduction-pandas-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Easiest Way to Make Beautiful Interactive Visualizations With Pandas](https://www.kdnuggets.com/2021/12/easiest-way-make-beautiful-interactive-visualizations-pandas.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introductory Pandas Tutorial](https://www.kdnuggets.com/2022/03/introductory-pandas-tutorial.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
