["```py\nfrom sklearn.datasets import load_iris\n\niris = load_iris()\nX, y = iris.data, iris.target\n\nprint(f\"Dataset labels: {iris.target}\")\n```", "```py\nDataset labels:\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]\n```", "```py\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    train_size=0.67, \n                                                    random_state=42)\n\nprint(f\"Train labels:\\n{y_train}\")\nprint(f\"Test labels:\\n{y_test}\")\n```", "```py\nTrain labels:\n[1 2 1 0 2 1 0 0 0 1 2 0 0 0 1 0 1 2 0 1 2 0 2 2 1 1 2 1 0 1 2 0 0 1 1 0 2\n 0 0 1 1 2 1 2 2 1 0 0 2 2 0 0 0 1 2 0 2 2 0 1 1 2 1 2 0 2 1 2 1 1 1 0 1 1\n 0 1 2 2 0 1 2 2 0 2 0 1 2 2 1 2 1 1 2 2 0 1 2 0 1 2]\nTest labels:\n[1 0 2 1 1 0 1 2 1 1 2 0 0 0 0 1 2 1 1 2 0 2 0 2 2 2 2 2 0 0 0 0 1 0 0 2 1\n 0 0 0 2 1 1 0 0 1 2 2 1 2]\n```", "```py\nimport numpy as np\n\nprint(f\"Numbers of train instances by class: {np.bincount(y_train)}\")\nprint(f\"Numbers of test instances by class: {np.bincount(y_test)}\")\n```", "```py\nNumbers of train instances by class: [31 35 34]\nNumbers of test instances by class: [19 15 16]\n```", "```py\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    train_size=0.67, \n                                                    random_state=42,\n                                                    stratify=y)\n\nprint(f\"Train labels:\\n{y_train}\")\nprint(f\"Test labels:\\n{y_test}\")\n```", "```py\nTrain labels:\n[2 0 2 1 0 0 0 2 0 0 1 0 1 1 2 2 0 0 2 0 2 0 0 2 0 1 2 1 0 1 0 2 1 2 1 0 2\n 0 2 0 1 1 0 2 1 1 0 2 1 2 0 1 0 2 1 1 1 1 1 1 2 1 2 2 0 2 1 1 2 0 2 2 2 0\n 2 0 0 2 2 2 0 1 2 2 0 1 1 1 1 1 0 2 1 2 0 0 1 0 1 0]\nTest labels:\n[2 1 0 1 2 1 1 0 1 1 0 0 0 0 0 2 2 1 2 1 2 1 0 2 0 2 2 0 0 2 2 2 0 1 0 0 2\n 1 1 1 1 1 0 0 2 1 2 2 1 2]\n```", "```py\nprint(f\"Numbers of train instances by class: {np.bincount(y_train)}\")\nprint(f\"Numbers of test instances by class: {np.bincount(y_test)}\")\n```", "```py\nNumbers of train instances by class: [34 33 33]\nNumbers of test instances by class: [16 17 17]\n```", "```py\nfrom sklearn.datasets import load_digits\n\ndigits = load_digits()\nX, y = digits.data, digits.target\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    train_size=0.7, \n                                                    random_state=42,\n                                                    stratify=y)\n\nprint(f\"Numbers of train instances by class: {np.bincount(y_train)}\")\nprint(f\"Numbers of test instances by class: {np.bincount(y_test)}\")\n\n```", "```py\nNumbers of train instances by class: [124 127 124 128 127 127 127 125 122 126]\nNumbers of test instances by class: [54 55 53 55 54 55 54 54 52 54]\n```", "```py\nX_test, X_val, y_test, y_val = train_test_split(X_test, y_test, \n                                                    train_size=0.5, \n                                                    random_state=42,\n                                                    stratify=y_test)\n\nprint(f\"Numbers of test instances by class: {np.bincount(y_test)}\")\nprint(f\"Numbers of validation instances by class: {np.bincount(y_val)}\")\n\n```", "```py\nNumbers of test instances by class: [27 27 27 27 27 28 27 27 26 27]\nNumbers of validation instances by class: [27 28 26 28 27 27 27 27 26 27]\n```"]