- en: 5 Python Best Practices for Data Science
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5 个 Python 数据科学最佳实践
- en: 原文：[https://www.kdnuggets.com/5-python-best-practices-for-data-science](https://www.kdnuggets.com/5-python-best-practices-for-data-science)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/5-python-best-practices-for-data-science](https://www.kdnuggets.com/5-python-best-practices-for-data-science)
- en: '![python-ds](../Images/56d49a7b443b03f2fd445ce4015a4194.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![python-ds](../Images/56d49a7b443b03f2fd445ce4015a4194.png)'
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Strong Python and SQL skills are both integral to many data professionals. As
    a data professional, you’re probably comfortable with Python programming—so much
    that writing Python code feels pretty natural. But are you following the best
    practices when working on data science projects with Python?
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 扎实的 Python 和 SQL 技能对许多数据专业人员都至关重要。作为数据专业人员，你可能对 Python 编程非常熟悉——以至于编写 Python
    代码感觉相当自然。但在进行数据科学项目时，你是否遵循了最佳实践呢？
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织进行 IT 管理'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'Though it''s easy to learn Python and build data science applications with
    it, it''s, perhaps, easier to write code that is hard to maintain. To help you
    write better code, this tutorial explores some Python coding best practices which
    help with dependency management and maintainability such as:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管学习 Python 并用它构建数据科学应用很简单，但写出难以维护的代码可能更容易。为了帮助你编写更好的代码，本教程探讨了一些 Python 编码最佳实践，这些实践有助于依赖管理和维护性，例如：
- en: Setting up dedicated virtual environments when working on data science projects
    locally
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在本地进行数据科学项目时，设置专用的虚拟环境
- en: Improving maintainability using type hints
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过类型提示提高可维护性
- en: Modeling and validating data using Pydantic
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Pydantic 进行数据建模和验证
- en: Profiling code
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码分析
- en: Using vectorized operations when possible
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽可能使用矢量化操作
- en: So let’s get coding!
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 所以让我们开始编码吧！
- en: 1\. Use Virtual Environments for Each Project
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 为每个项目使用虚拟环境
- en: Virtual environments ensure project dependencies are isolated, preventing conflicts
    between different projects. In data science, where projects often involve different
    sets of libraries and versions, Virtual environments are particularly useful for
    maintaining reproducibility and managing dependencies effectively.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟环境确保项目依赖被隔离，防止不同项目之间的冲突。在数据科学中，项目通常涉及不同的库和版本集合，虚拟环境对于维护可重复性和有效管理依赖特别有用。
- en: Additionally, virtual environments also make it easier for collaborators to
    set up the same project environment without worrying about conflicting dependencies.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，虚拟环境还使合作者能够更轻松地设置相同的项目环境，而无需担心依赖冲突。
- en: You can use tools like Poetry to create and manage virtual environments. There
    are many benefits to using Poetry but if all you need is to create virtual environments
    for your projects, you can also use the [built-in venv module](https://docs.python.org/3/library/venv.html).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用像 Poetry 这样的工具来创建和管理虚拟环境。使用 Poetry 有很多好处，但如果你只需要为你的项目创建虚拟环境，你也可以使用 [内置的
    venv 模块](https://docs.python.org/3/library/venv.html)。
- en: 'If you are on a Linux machine (or a Mac), you can create and activate virtual
    environments like so:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Linux 机器（或 Mac），你可以这样创建和激活虚拟环境：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you’re a Windows user, you can [check the docs](https://docs.python.org/3/library/venv.html)
    on how to activate the virtual environment. Using virtual environments for each
    project is, therefore, helpful to keep dependencies isolated and consistent.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是 Windows 用户，你可以 [查看文档](https://docs.python.org/3/library/venv.html) 了解如何激活虚拟环境。因此，为每个项目使用虚拟环境有助于保持依赖的隔离和一致性。
- en: 2\. Add Type Hints for Maintainability
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 添加类型提示以提高可维护性
- en: Because Python is a dynamically typed language, you don't have to specify in
    the data type for the variables that you create. However, you can add type hints—indicating
    the expected data type—to make your code more maintainable.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Python是动态类型语言，你不需要为你创建的变量指定数据类型。然而，你可以添加类型提示——指明期望的数据类型——以使你的代码更易维护。
- en: 'Let’s take an example of a function that calculates the mean of a numerical
    feature in a dataset with appropriate type annotations:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以一个计算数据集中数值特征均值的函数为例，并进行适当的类型注释：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Here, the type hints let the user know that the `calcuate_mean` function takes
    in a list of floating point numbers and returns a floating-point value.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，类型提示让用户知道`calcuate_mean`函数接受一个浮点数列表并返回一个浮点值。
- en: Remember Python does not enforce types at runtime. But you can use mypy or the
    like to raise errors for invalid types.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，Python 在运行时不会强制类型。但你可以使用 mypy 或类似工具来对无效类型引发错误。
- en: 3\. Model Your Data with Pydantic
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 使用 Pydantic 建模你的数据
- en: Previously we talked about adding type hints to make code more maintainable.
    This works fine for Python functions. But when working with data from external
    sources, it's often helpful to model the data by defining classes and fields with
    expected data type.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 之前我们讨论了添加类型提示以使代码更易维护。这对于Python函数非常有效。但是在处理来自外部来源的数据时，通常通过定义具有预期数据类型的类和字段来建模数据会更有帮助。
- en: 'You can use built-in dataclasses in Python, but you don’t get data validation
    support out of the box. With Pydantic, you can model your data and also use its
    built-in data validation capabilities. To use Pydantic, you can install it along
    with the email validator using pip:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 Python 内置的数据类，但没有开箱即用的数据验证支持。使用 Pydantic，你可以建模你的数据，还可以利用其内置的数据验证功能。要使用
    Pydantic，你可以通过 pip 安装它及其邮件验证器：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here’s an example of modeling customer data with Pydantic. You can create a
    model class that inherits from `BaseModel` and define the various fields and attributes:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个使用 Pydantic 建模客户数据的示例。你可以创建一个继承自`BaseModel`的模型类，并定义各种字段和属性：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You can take this further by adding validation to check if the fields all have
    valid values. If you need a tutorial on using Pydantic—defining models and validating
    data—read [Pydantic Tutorial: Data Validation in Python Made Simple](https://www.kdnuggets.com/pydantic-tutorial-data-validation-in-python-made-simple).'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过添加验证来进一步检查字段是否都具有有效值。如果你需要关于使用 Pydantic——定义模型和验证数据的教程——请阅读 [Pydantic 教程：Python
    数据验证简化](https://www.kdnuggets.com/pydantic-tutorial-data-validation-in-python-made-simple)。
- en: 4\. Profile Code to Identify Performance Bottlenecks
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 进行代码性能分析以识别性能瓶颈
- en: Profiling code is helpful if you’re looking to optimize your application for
    performance. In data science projects, you can profile memory usage and execution
    times depending on the context.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 性能分析对于优化应用程序性能是非常有帮助的。在数据科学项目中，你可以根据具体情况分析内存使用和执行时间。
- en: 'Suppose you''re working on a machine learning project where preprocessing a
    large dataset is a crucial step before training your model. Let''s profile a function
    that applies common preprocessing steps such as standardization:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你正在进行一个机器学习项目，其中预处理大数据集是训练模型之前的关键步骤。让我们对一个应用常见预处理步骤（如标准化）的函数进行性能分析：
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'When you run the script, you should see a similar output:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行脚本时，你应该会看到类似的输出：
- en: '![profiling-output](../Images/994c219538d44ae7c12dcae4d799c8dd.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![profiling-output](../Images/994c219538d44ae7c12dcae4d799c8dd.png)'
- en: 'In this example, we''re profiling the `preprocess_data()` function, which preprocesses
    sample data. Profiling, in general, helps identify any potential bottlenecks—guiding
    optimizations to improve performance. Here are tutorials on profiling in Python
    which you may find helpful:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们正在对`preprocess_data()`函数进行性能分析，该函数用于预处理样本数据。性能分析通常有助于识别潜在的瓶颈——指导优化以提高性能。以下是一些关于Python性能分析的教程，你可能会觉得有用：
- en: '[Profiling Python Code Using timeit and cProfile](https://www.kdnuggets.com/profiling-python-code-using-timeit-and-cprofile)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 timeit 和 cProfile 进行 Python 代码性能分析](https://www.kdnuggets.com/profiling-python-code-using-timeit-and-cprofile)'
- en: '[Introduction to Memory Profiling in Python](https://www.kdnuggets.com/introduction-to-memory-profiling-in-python)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python内存性能分析介绍](https://www.kdnuggets.com/introduction-to-memory-profiling-in-python)'
- en: 5\. Use NumPy’s Vectorized Operations
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. 使用 NumPy 的向量化操作
- en: For any data processing task, you can always write a Python implementation from
    scratch. But you may not want to do it when working with large arrays of numbers.
    For most common operations—which can be formulated as operations on vectors—that
    you need to perform, you can use NumPy to perform them more efficiently.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何数据处理任务，你总是可以从头编写 Python 实现。但是，当处理大量数字数组时，你可能不想这样做。对于大多数常见操作——这些操作可以表述为对向量的操作——你可以使用
    NumPy 更高效地执行它们。
- en: 'Let’s take the following example of element-wise multiplication:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以以下逐元素相乘的例子为例：
- en: '[PRE5]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Here are the Python-only and NumPy implementations:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是 Python 仅实现和 NumPy 实现：
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Let’s use the `timeit` function from the `timeit` module to measure the execution
    times for the above implementations:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用`timeit`模块中的`timeit`函数来测量上述实现的执行时间：
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We see that the NumPy implementation is ~100 times faster:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到 NumPy 实现的速度快了约 100 倍：
- en: '[PRE8]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Wrapping Up
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: In this tutorial, we have explored a few Python coding best practices for data
    science. I hope you found them helpful.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们探讨了几种数据科学的 Python 编码最佳实践。希望你觉得这些实践对你有帮助。
- en: If you are interested in learning Python for data science, check out [5 Free
    Courses Master Python for Data Science](https://www.kdnuggets.com/5-free-courses-to-master-python-for-data-science).
    Happy learning!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对学习用于数据科学的 Python 感兴趣，请查看[5个免费课程掌握 Python 数据科学](https://www.kdnuggets.com/5-free-courses-to-master-python-for-data-science)。祝学习愉快！
- en: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)****
    is a developer and technical writer from India. She likes working at the intersection
    of math, programming, data science, and content creation. Her areas of interest
    and expertise include DevOps, data science, and natural language processing. She
    enjoys reading, writing, coding, and coffee! Currently, she''s working on learning
    and sharing her knowledge with the developer community by authoring tutorials,
    how-to guides, opinion pieces, and more. Bala also creates engaging resource overviews
    and coding tutorials.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)**
    是一位来自印度的开发人员和技术作家。她喜欢在数学、编程、数据科学和内容创作的交汇点上工作。她的兴趣和专长领域包括 DevOps、数据科学和自然语言处理。她喜欢阅读、写作、编程和咖啡！目前，她正在通过编写教程、操作指南、评论文章等与开发者社区分享她的知识。Bala
    还制作了引人入胜的资源概述和编码教程。**'
- en: More On This Topic
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Integrating ChatGPT Into Data Science Workflows: Tips and Best Practices](https://www.kdnuggets.com/2023/05/integrating-chatgpt-data-science-workflows-tips-best-practices.html)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将 ChatGPT 集成到数据科学工作流程中：技巧和最佳实践](https://www.kdnuggets.com/2023/05/integrating-chatgpt-data-science-workflows-tips-best-practices.html)'
- en: '[5 Best Practices for Data Science Team Collaboration](https://www.kdnuggets.com/2023/06/5-best-practices-data-science-team-collaboration.html)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学团队协作的5个最佳实践](https://www.kdnuggets.com/2023/06/5-best-practices-data-science-team-collaboration.html)'
- en: '[11 Best Practices of Cloud and Data Migration to AWS Cloud](https://www.kdnuggets.com/2023/04/11-best-practices-cloud-data-migration-aws-cloud.html)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[迁移到 AWS 云的11个最佳实践](https://www.kdnuggets.com/2023/04/11-best-practices-cloud-data-migration-aws-cloud.html)'
- en: '[Data Visualization Best Practices & Resources for Effective Communication](https://www.kdnuggets.com/2023/04/data-visualization-best-practices-resources-effective-communication.html)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据可视化最佳实践与有效沟通的资源](https://www.kdnuggets.com/2023/04/data-visualization-best-practices-resources-effective-communication.html)'
- en: '[Data Warehousing and ETL Best Practices](https://www.kdnuggets.com/2023/02/data-warehousing-etl-best-practices.html)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据仓库和 ETL 的最佳实践](https://www.kdnuggets.com/2023/02/data-warehousing-etl-best-practices.html)'
- en: '[Best Practices for Building ETLs for ML](https://www.kdnuggets.com/best-practices-for-building-etls-for-ml)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[构建机器学习 ETL 的最佳实践](https://www.kdnuggets.com/best-practices-for-building-etls-for-ml)'
