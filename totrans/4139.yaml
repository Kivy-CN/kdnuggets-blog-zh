- en: Python String Processing Cheatsheet
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 字符串处理备忘单
- en: 原文：[https://www.kdnuggets.com/2020/01/python-string-processing-primer.html](https://www.kdnuggets.com/2020/01/python-string-processing-primer.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/01/python-string-processing-primer.html](https://www.kdnuggets.com/2020/01/python-string-processing-primer.html)
- en: String Processing in Python
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 中的字符串处理
- en: Natural language processing and text analytics are hot areas of research and
    application at the moment. These fields entail all sorts of specific skills and
    concepts requiring thorough understanding before moving into meaningful practice.
    Prior to getting to that point, however, basic string manipulation and processing
    is a must.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 自然语言处理和文本分析目前是研究和应用的热门领域。这些领域包含了各种具体的技能和概念，需要彻底理解后才能进行有意义的实践。然而，在达到这一点之前，基本的字符串操作和处理是必须的。
- en: '* * *'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业道路。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织在 IT 方面'
- en: '* * *'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: There are 2 distinct types of broad computational string processing skills that
    need to be broached, in my opinion. The first of these is [regular expressions](https://en.wikipedia.org/wiki/Regular_expression),
    a pattern-based approach to text matching. There are numerous great introductions
    to regular expressions one can search out, but visual learners may appreciate
    the [fast.ai Code-First Intro to Natural Language Processing course video](https://youtu.be/Q1zLqfnEXdw?list=PLtmWHNX-gukKocXQOkQjuVxglSDYWsSh9&t=630)
    on the topic.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为需要讨论两种广泛的计算字符串处理技能。第一种是 [正则表达式](https://en.wikipedia.org/wiki/Regular_expression)，一种基于模式的文本匹配方法。可以寻找许多关于正则表达式的优秀介绍，但视觉学习者可能会喜欢
    [fast.ai 的代码优先自然语言处理课程视频](https://youtu.be/Q1zLqfnEXdw?list=PLtmWHNX-gukKocXQOkQjuVxglSDYWsSh9&t=630)。
- en: The other distinct computational string processing skill is being able to leverage
    a given programming language's standard library for basic string manipulation.
    As such, this article is a short Python string processing primer.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种显著的计算字符串处理技能是能够利用给定编程语言的标准库进行基本字符串操作。因此，本文是一个简短的 Python 字符串处理入门。
- en: Note that meaningful text analytics go way beyond string processing, and the
    core of these more advanced techniques may not require you to manipulate text
    on your own very often. However, text data processing is an important and time-consuming
    part of a successful text analytics project, and these above-mentioned string
    processing skills will be invaluable here. Understanding the computational processing
    of text at a basic level is conceptually very important to understanding more
    advanced text analytics techniques as well.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，有意义的文本分析远远超出了字符串处理，这些更高级技术的核心可能不需要你经常手动操作文本。然而，文本数据处理是成功的文本分析项目中重要且耗时的部分，以上提到的字符串处理技能在这里将非常宝贵。基本水平上理解文本的计算处理对理解更高级的文本分析技术也是概念上非常重要的。
- en: Many of the following examples make use of the Python standard library [string
    module](https://docs.python.org/2/library/string.html), and so having it handy
    for reference is a good idea.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以下许多示例使用了 Python 标准库中的 [string 模块](https://docs.python.org/2/library/string.html)，因此手头有它作为参考是个好主意。
- en: This handy cheatsheet contains all of the code in [**this downloadable PDF**](https://www.kdnuggets.com/publications/sheets/Python-String-Processing-Cheatsheet-KDnuggets.pdf).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这个实用的备忘单包含了所有的代码在 [**这个可下载的 PDF 文件**](https://www.kdnuggets.com/publications/sheets/Python-String-Processing-Cheatsheet-KDnuggets.pdf)
    中。
- en: '[![Python String Processing Cheatsheet](../Images/1829cc006761b1f6e785213a4bd45a2e.png)](https://www.kdnuggets.com/publications/sheets/Python-String-Processing-Cheatsheet-KDnuggets.pdf)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Python 字符串处理备忘单](../Images/1829cc006761b1f6e785213a4bd45a2e.png)](https://www.kdnuggets.com/publications/sheets/Python-String-Processing-Cheatsheet-KDnuggets.pdf)'
- en: Stripping Whitepsace
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 去除空白
- en: '[Stripping whitespace](https://docs.python.org/3/library/stdtypes.html#str.lstrip)
    is an elementary string processing requirement. You can strip leading whitespace
    with the `lstrip()` method (left), trailing whitespace with `rstrip()` (right),
    and both leading and trailing with `strip()`.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[去除空白](https://docs.python.org/3/library/stdtypes.html#str.lstrip)是基本的字符串处理需求。你可以使用
    `lstrip()` 方法去除前导空白（左侧），使用 `rstrip()` 去除尾随空白（右侧），使用 `strip()` 去除前导和尾随空白。'
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Interested in stripping characters other than whitespace? The same methods are
    helpful, and are used by passing in the character(s) you want stripped.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 对于去除空白之外的字符感兴趣？相同的方法也很有用，通过传递你希望去除的字符（们）来使用它们。
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Don't forget to check out the string [`format()`](https://docs.python.org/3/library/stdtypes.html#str.format)
    documentation if necessary.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要，请不要忘记查看字符串[`format()`](https://docs.python.org/3/library/stdtypes.html#str.format)的文档。
- en: Splitting Strings
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 拆分字符串
- en: Splitting strings into lists of smaller substrings is often useful and easily
    accomplished in Python with the [`split()`](https://docs.python.org/3/library/stdtypes.html#str.split)
    method.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 将字符串拆分成更小的子字符串列表在 Python 中通常是有用的，可以通过[`split()`](https://docs.python.org/3/library/stdtypes.html#str.split)方法轻松完成。
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: By default, `split()` splits on whitespace, but other character(s) sequences
    can be passed in as well.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`split()` 以空白字符进行拆分，但也可以传递其他字符（们）序列。
- en: '[PRE6]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Joining List Elements Into a String
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将列表元素合并成一个字符串
- en: Need the opposite of the above operation? You can join list element strings
    into a single string in Python using the [`join()`](https://docs.python.org/3/library/stdtypes.html#str.join)
    method.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 需要以上操作的相反操作吗？你可以使用[`join()`](https://docs.python.org/3/library/stdtypes.html#str.join)方法将列表元素字符串连接成一个单一字符串。
- en: '[PRE8]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Ain't that the truth! And if you want to join list elements with something other
    than whitespace in between? This thing may be a little bit stranger, but also
    easily accomplished.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这倒是真的！如果你想用空白之外的内容连接列表元素呢？这个可能会有点奇怪，但也很容易实现。
- en: '[PRE10]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Reversing a String
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 反转字符串
- en: Python does not have a built-in string reverse method. However, given that strings
    can be [sliced](https://docs.python.org/3/reference/expressions.html?highlight=slice#slicings)
    like lists, reversing one can be done in the same succinct fashion that a list's
    elements can be reversed.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Python 并没有内置的字符串反转方法。然而，鉴于字符串可以像列表一样[切片](https://docs.python.org/3/reference/expressions.html?highlight=slice#slicings)，反转一个字符串可以以与反转列表元素相同的简洁方式完成。
- en: '[PRE12]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Converting Uppercase and Lowercase
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 转换大写和小写
- en: Converting between cases can be done with the [`upper()`](https://docs.python.org/3/library/stdtypes.html#str.upper),
    [`lower()`](https://docs.python.org/3/library/stdtypes.html#str.lower), and [`swapcase()`](https://docs.python.org/3/library/stdtypes.html#str.swapcase)
    methods.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 转换大小写可以通过[`upper()`](https://docs.python.org/3/library/stdtypes.html#str.upper)、[`lower()`](https://docs.python.org/3/library/stdtypes.html#str.lower)
    和 [`swapcase()`](https://docs.python.org/3/library/stdtypes.html#str.swapcase)
    方法完成。
- en: '[PRE14]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Checking for String Membership
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查字符串成员
- en: The easiest way to check for string membership in Python is using the `in` operator.
    The syntax is very natural language-like.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中检查字符串成员的最简单方法是使用 `in` 运算符。语法非常自然语言化。
- en: '[PRE16]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: If you are more interested in finding the location of a substring within a string
    (as opposed to simply checking whether or not the substring is contained), the
    find() string method can be more helpful.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你更感兴趣于在字符串中查找子字符串的位置（而不是仅仅检查子字符串是否包含在其中），`find()` 字符串方法可能会更有帮助。
- en: '[PRE18]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '`find()` returns the index of the first character of the first occurrence of
    the substring by default, and returns `-1` if the substring is not found. Check
    the documentation for available tweaks to this default behavior.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`find()` 返回子字符串第一次出现的第一个字符的索引，如果未找到子字符串，则返回 `-1`。查看文档以获取对默认行为的可用调整。
- en: Replacing Substrings
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 替换子字符串
- en: What if you want to *replace* substrings, instead of just find them? The Python
    [`replace()`](https://docs.python.org/3/library/stdtypes.html#str.replace) string
    method will take care of that.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要*替换*子字符串，而不仅仅是查找它们呢？Python 的 [`replace()`](https://docs.python.org/3/library/stdtypes.html#str.replace)
    字符串方法可以处理这个需求。
- en: '[PRE20]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: An optional count argument can specify the maximum number of successive replacements
    to make if the same substring occurs multiple times.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 一个可选的计数参数可以指定在相同子字符串出现多次时，进行的连续替换的最大次数。
- en: Combining the Output of Multiple Lists
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 合并多个列表的输出
- en: Have multiple lists of strings you want to combine together in some element-wise
    fashion? No problem with the [`zip()`](https://docs.python.org/3/library/functions.html#zip)
    function.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 有多个字符串列表想要按元素组合在一起？使用[`zip()`](https://docs.python.org/3/library/functions.html#zip)函数没有问题。
- en: '[PRE22]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Checking for Anagrams
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查变位词
- en: Want to check if a pair of strings are anagrams of one another? Algorithmically,
    all we need to do is count the occurrences of each letter for each string and
    check if these counts are equal. This is straightforward using the [`Counter`
    class of the `collections` module](https://docs.python.org/3/library/collections.html#collections.Counter).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 想要检查一对字符串是否是变位词吗？在算法上，我们只需统计每个字符串中每个字母的出现次数，并检查这些计数是否相等。使用[`Counter`类](https://docs.python.org/3/library/collections.html#collections.Counter)来完成这个任务非常简单。
- en: '[PRE24]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Checking for Palindromes
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查回文
- en: How about if you want to check whether a given word is a palindrome? Algorithmically,
    we need to create a reverse of the word and then use the `==` operator to check
    if these 2 strings (the original and the reverse) are equal.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想检查一个单词是否是回文怎么办？在算法上，我们需要创建该单词的反向，然后使用`==`运算符检查这两个字符串（原始字符串和反向字符串）是否相等。
- en: '[PRE26]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Make sure you download the [Python String Processing Cheatsheet here](https://www.kdnuggets.com/publications/sheets/Python-String-Processing-Cheatsheet-KDnuggets.pdf).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你下载了[Python字符串处理备忘单](https://www.kdnuggets.com/publications/sheets/Python-String-Processing-Cheatsheet-KDnuggets.pdf)。
- en: More On This Topic
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Python String Methods](https://www.kdnuggets.com/2022/12/python-string-methods.html)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python字符串方法](https://www.kdnuggets.com/2022/12/python-string-methods.html)'
- en: '[Python String Matching Without Complex RegEx Syntax](https://www.kdnuggets.com/2023/02/python-string-matching-without-complex-regex-syntax.html)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python字符串匹配无需复杂的正则表达式语法](https://www.kdnuggets.com/2023/02/python-string-matching-without-complex-regex-syntax.html)'
- en: '[Convert Bytes to String in Python: A Tutorial for Beginners](https://www.kdnuggets.com/convert-bytes-to-string-in-python-a-tutorial-for-beginners)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将字节转换为Python中的字符串：初学者教程](https://www.kdnuggets.com/convert-bytes-to-string-in-python-a-tutorial-for-beginners)'
- en: '[Data Preparation with SQL Cheatsheet](https://www.kdnuggets.com/2021/05/data-preparation-sql-cheat-sheet.html)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQL备忘单的数据准备](https://www.kdnuggets.com/2021/05/data-preparation-sql-cheat-sheet.html)'
- en: '[KDnuggets News, November 30: What is Chebychev''s Theorem and How…](https://www.kdnuggets.com/2022/n46.html)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets新闻，11月30日：什么是切比雪夫定理以及如何…](https://www.kdnuggets.com/2022/n46.html)'
- en: '[Data Preparation in R Cheatsheet](https://www.kdnuggets.com/2021/10/data-preparation-r-dplyr-cheat-sheet.html)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[R中的数据准备备忘单](https://www.kdnuggets.com/2021/10/data-preparation-r-dplyr-cheat-sheet.html)'
