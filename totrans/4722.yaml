- en: 7 Steps to Mastering Basic Machine Learning with Python — 2019 Edition
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/01/7-steps-mastering-basic-machine-learning-python.html](https://www.kdnuggets.com/2019/01/7-steps-mastering-basic-machine-learning-python.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: There is an awful lot of freely-available material out there for folks who are
    interested in a crash course in machine learning with Python.
  prefs: []
  type: TYPE_NORMAL
- en: Some time ago I wrote [7 Steps to Mastering Machine Learning With Python](/2015/11/seven-steps-machine-learning-python.html)
    and [7 More Steps to Mastering Machine Learning With Python](/2017/03/seven-more-steps-machine-learning-python.html),
    a pair of posts which attempted to aggregate and organize some of this available
    quality material into just such a crash course. However, these posts are getting
    stale, having been around for a few years at this point. With a new year upon
    us, I thought it would be a good time to revisit the concept and put together
    a new learning path for mastering machine learning with Python.
  prefs: []
  type: TYPE_NORMAL
- en: This time around, we will split the path up into 3 posts, one each for basic,
    intermediate and advanced topics. Let's make sure we view these terms in a relative
    sense, however, and not expect to be research-caliber machine learning engineers
    after getting through the (eventual) advanced post. The learning path is aimed
    at those with some understanding of programming, computer science concepts, and/or
    machine learning in an abstract sense, who are wanting to be able to use the implementations
    of machine learning algorithms of the prevalent Python libraries to build their
    own machine learning models.
  prefs: []
  type: TYPE_NORMAL
- en: '![Header image](../Images/7ff8c4550b1affe36b2d0d5ec1c43dbc.png)'
  prefs: []
  type: TYPE_IMG
- en: This first post will start from zero, and get readers to the point of having
    set up an environment, gained an understanding of Python, and tried out a variety
    of algorithms for different scenarios. We will leverage the existing tutorials,
    videos, and works of a variety of folks, so the thanks for anything included herein
    should be directed solely at them.
  prefs: []
  type: TYPE_NORMAL
- en: Instead of having a high number of resources for each topic step (say, *clustering*),
    I have tried to select a quality tutorial or two, along with an accessible video
    preliminarily describing the underlying theory, math, or intuition of the given
    topic.
  prefs: []
  type: TYPE_NORMAL
- en: Fear not if the steps seem mostly aimed at machine learning algorithms, as along
    the way you will also come across additional important concepts, such as data
    preprocessing, loss metrics, data visualization, and much more.
  prefs: []
  type: TYPE_NORMAL
- en: So grab a cup of your favorite beverage and settle in for the first of three
    in the series, and start mastering basic machine learning with Python in these
    7 steps.
  prefs: []
  type: TYPE_NORMAL
- en: Step 1\. Mastering Python Basics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I looked for some updated materials for this section, beyond those I pointed
    out in previous iterations, both for the sake of change and for the sake of keeping
    up with recent versions of Python.
  prefs: []
  type: TYPE_NORMAL
- en: '[**This GitHub repository**](https://github.com/jerry-git/learn-python3) by
    Jerry Pussinen, containing "Jupyter notebooks for teaching/learning Python 3,"
    seems to have a decent overview of Python, which those who have an understanding
    of programming, or who are motivated, could get through within a few hours. You
    will need Python 3.5+ installed, as well as Jupyter notebook.'
  prefs: []
  type: TYPE_NORMAL
- en: As you will be needing a number of Python's more popular scientific libraries
    as we progress, I recommend using the Anaconda distribution, [**which you can
    download here**](https://www.anaconda.com/download) (choose whichever Python 3.X
    version is the latest, **not** Python 2.X), instead of installing components separately.
    Just launch the installer, and when it's done you will have Python, Jupyter notebook,
    and everything else you will need moving forward.
  prefs: []
  type: TYPE_NORMAL
- en: Step 2\. Understanding the Python Scientific Computing Environment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: So, you have Python and the scientific computing stack installed and ready to
    go. But why?
  prefs: []
  type: TYPE_NORMAL
- en: Before going too much further, it's a good idea to understand what the scientific
    computing stack is, what its most prominent and important components are, and
    how they will be used in a machine learning environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'This article from Dataquest, aptly titled [**Jupyter Notebook for Beginners:
    A Tutorial**](https://www.dataquest.io/blog/jupyter-notebook-tutorial/), dives
    into why we are using Jupyter notebooks at all, and introduces some of the most
    important Python libraries you will encounter along this path, namely Pandas,
    Numpy, and Matplotlib.'
  prefs: []
  type: TYPE_NORMAL
- en: The tutorials does not cover Scikit-learn, one of the main engines of the actual
    machine learning process in the Python ecosystem, which contains implementations
    of dozens of algorithms for you to implement in your own projects. However, the
    introductory article [**An introduction to machine learning with Scikit-learn**](https://scikit-learn.org/stable/tutorial/basic/tutorial.html),
    directly from the maintainers of Scikit-learn will give you an overview of its
    basics in 5 minutes.
  prefs: []
  type: TYPE_NORMAL
- en: As an exercise left to the reader, I would suggest locating and becoming familiar
    the contents of the documentation for Pandas, Numpy, Matplotlib, and Scikit-learn,
    and would keep the links handy as references moving forward. At any rate, make
    sure you are comfortable with the basics of these 4 tools specifically, as they
    are well-used in basic Python machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: Step 3\. Classification
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Classification is one of the main methods of supervised learning, and the manner
    in which prediction is carried out as relates to data with class labels. Classification
    involves finding a model which describes data classes, which can then be used
    to classify instances of unknown data. The concept of training data versus testing
    data is of integral importance to classification. Popular classification algorithms
    for model building, and manners of presenting classifier models, include (but
    are not limited to) decision trees, logistic regression, support vector machines,
    and neural networks.
  prefs: []
  type: TYPE_NORMAL
- en: First, watch MIT professor John Guttag's lecture on classification.
  prefs: []
  type: TYPE_NORMAL
- en: Then have a look at the following tutorials, each of which covers an elementary
    machine learning classification algorithm (how exciting, your first machine learning
    algorithm!).
  prefs: []
  type: TYPE_NORMAL
- en: Susan Li provides a detailed overview of implementing the most basic classifier,
    logistic regression, in [**Building A Logistic Regression in Python, Step by Step**](https://towardsdatascience.com/building-a-logistic-regression-in-python-step-by-step-becd4d56c9c8).
  prefs: []
  type: TYPE_NORMAL
- en: Once you have completed Susan's tutorial, follow Russell Brown's concise **[Creating
    and Visualizing Decision Trees with Python](https://medium.com/@rnbrown/creating-and-visualizing-decision-trees-with-python-f8e8fa394176)**.
  prefs: []
  type: TYPE_NORMAL
- en: As a bonus, and since we are also learning how to use Jupyter notebooks at the
    same time, have a look at [**Interactive Visualization of Decision Trees with
    Jupyter Widgets**](https://towardsdatascience.com/interactive-visualization-of-decision-trees-with-jupyter-widgets-ca15dd312084)
    by Dafni Sidiropoulou Velidou to gain exposure to some of the benefits of using
    Jupyter notebooks for visualizing and tweaking your models.
  prefs: []
  type: TYPE_NORMAL
- en: Step 4\. Regression
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Regression is similar to classification, in that it is another dominant form
    of supervised learning and is useful for predictive analysis. They differ in that
    classification is used for predictions of data with distinct finite classes, while
    regression is used for predicting continuous numeric data. As a form of supervised
    learning, training/testing data is an important concept in regression as well.
  prefs: []
  type: TYPE_NORMAL
- en: First, watch CMU professor Tom Mitchell's lecture on regression.
  prefs: []
  type: TYPE_NORMAL
- en: Then have a look at, and follow along with, Adi Bronshtein's tutorial titled
    **[Simple and Multiple Linear Regression in Python](https://towardsdatascience.com/simple-and-multiple-linear-regression-in-python-c928425168f9)**.
  prefs: []
  type: TYPE_NORMAL
- en: Step 5\. Clustering
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Clustering is used for analyzing data which does not include pre-labeled classes.
    Data instances are grouped together using the concept of maximizing intraclass
    similarity and minimizing the similarity between differing classes. This translates
    to the clustering algorithm identifying and grouping instances which are very
    similar, as opposed to ungrouped instances which are much less-similar to one
    another. As clustering does not require the pre-labeling of classes, it is a form
    of unsupervised learning.
  prefs: []
  type: TYPE_NORMAL
- en: First, watch this lecture by MIT's John Guttag.
  prefs: []
  type: TYPE_NORMAL
- en: k-means clustering is perhaps the most well-known example of a clustering algorithm,
    but is not the only one. Different clustering schemes exist, including hierarchical
    clustering, fuzzy clustering, and density clustering, as do different takes on
    centroid-style clustering (the family to which k-means belongs). For more on this,
    read Jake Huneycutt's [**An Introduction to Clustering Algorithms in Python**](https://towardsdatascience.com/an-introduction-to-clustering-algorithms-in-python-123438574097).
    Then read Michael J. Garbade's [**Understanding K-means Clustering in Machine
    Learning**](https://towardsdatascience.com/understanding-k-means-clustering-in-machine-learning-6a6e67336aa1)
    and implement *k*-means for yourself.
  prefs: []
  type: TYPE_NORMAL
- en: Then take a look at Gabriel Pierobon's **[DBSCAN clustering for data shapes
    k-means can’t handle well (in Python)](https://towardsdatascience.com/dbscan-clustering-for-data-shapes-k-means-cant-handle-well-in-python-6be89af4e6ea)**
    to implement a density-based clustering model.
  prefs: []
  type: TYPE_NORMAL
- en: Step 6\. More Classification
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now that we have sampled around, let's switch gears back to classification and
    check out a more complex algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: Watch CMU's Maria Florina Balcan's discuss support vector machines (SVMs) in
    this lecture video.
  prefs: []
  type: TYPE_NORMAL
- en: Then read Aakash Tandel's **[Support Vector Machines — A Brief Overview](https://towardsdatascience.com/support-vector-machines-a-brief-overview-37e018ae310f)**,
    a high-level treatment of SVMs. Follow this up with **[Support Vector Machine
    vs Logistic Regression](https://towardsdatascience.com/support-vector-machine-vs-logistic-regression-94cc2975433f)**
    by Georgios Drakos.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, round out your SVM understanding by reading **[In-Depth: Support Vector
    Machines](https://jakevdp.github.io/PythonDataScienceHandbook/05.07-support-vector-machines.html)**
    by Jake VanderPlas, an excerpt from his highly recommended [Python Data Science
    Handbook](http://shop.oreilly.com/product/0636920034919.do).'
  prefs: []
  type: TYPE_NORMAL
- en: Step 7\. Ensemble Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Lastly, let's learn a bit about ensemble methods.
  prefs: []
  type: TYPE_NORMAL
- en: Start by watching this video lecture by Peter Bloem of Vrije University.
  prefs: []
  type: TYPE_NORMAL
- en: 'Then read these 2 mostly explanatory articles:'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Gradient Boosting from scratch](https://medium.com/mlreview/gradient-boosting-from-scratch-1e317ae4587d)**,
    by Prince Grover'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Random Forest Simple Explanation](https://medium.com/@williamkoehrsen/random-forest-simple-explanation-377895a60d2d)**,
    by Will Koehrsen'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, follow these tutorials to try your hand at ensemble methods.
  prefs: []
  type: TYPE_NORMAL
- en: '[**Introduction to Python Ensembles**](https://www.dataquest.io/blog/introduction-to-ensembles/),
    by Sebastian Flennerhag'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**CatBoost vs. Light GBM vs. XGBoost**](https://www.kdnuggets.com/2018/03/catboost-vs-light-gbm-vs-xgboost.html),
    by Alvira Swalin'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Using XGBoost in Python**](https://www.datacamp.com/community/tutorials/xgboost-in-python),
    by Manish Pathak'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hopefully you have benefited from these 7 steps to mastering basic machine learning
    with Python. Join us next time when we will move on to some more intermediate
    topics.
  prefs: []
  type: TYPE_NORMAL
- en: '**Related**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering Machine Learning With Python](/2015/11/seven-steps-machine-learning-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 More Steps to Mastering Machine Learning With Python](/2017/03/seven-more-steps-machine-learning-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering Data Preparation with Python](/2017/06/7-steps-mastering-data-preparation-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Best ETL Tools in 2021](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Why we will always need humans to train AI — sometimes in real-time](https://www.kdnuggets.com/2021/12/why-we-need-humans-training-ai.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Write Clean Python Code Using Pipes](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
