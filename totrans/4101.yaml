- en: The Zen of Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2022/12/zen-python.html](https://www.kdnuggets.com/2022/12/zen-python.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![The Zen of Python](../Images/f4703f3fb9cdc5aa81b6cb4e6a382686.png)'
  prefs: []
  type: TYPE_IMG
- en: Imag by Editor
  prefs: []
  type: TYPE_NORMAL
- en: Despite the relative simpleness of Python, writing good, readable, maintainable
    Python code is challenging. Luckily for all Python enthusiasts, Python comes with
    its own wisdom, or what's known for all Pythonistas as "The Zen of Python."
  prefs: []
  type: TYPE_NORMAL
- en: The Zen of Python is a nice, short poem presenting guidelines for writing high-quality
    Python code.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, in case you have never heard of it, you can read The Zen of Python by
    running this line of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Which will print out the poem of Python mastery.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Though the poem offers clear and straightforward guidelines for writing succinct
    Python code, let's talk about some free resources that guide you through the different
    verses of the poem with examples.
  prefs: []
  type: TYPE_NORMAL
- en: The first seven verses in the poem are all about style. Python is about simplicity,
    so if you want to learn how to write simple Python code with good style, look
    no further than the [Hitchhiker's Guide to Python.](https://docs.python-guide.org/writing/style/)
    It will give you the basics of how to style your code. Another tremendous and
    short article about optimizing your Python code is "[How to Simplify Your Python
    Code for Optimal Readability](https://nycdatascience.com/blog/student-works/how-to-simplify-your-python-code-for-optimal-readability/)"
    by [Zoe Zbar](https://nycdatascience.com/blog/author/zoe-zbarnycdatascience-com/)
    and [Alex Baransky](https://nycdatascience.com/blog/author/alex-baransky/) in
    NYC Data Science Academy. Another option is [The Real Python](https://realpython.com/)
    YouTube video about [Writing Pythonic Code - Idiomatic Python](https://www.youtube.com/watch?v=LtKl2JRASlM).
    This 9 mins video will guide you through writing good, idiomatic Python code.
  prefs: []
  type: TYPE_NORMAL
- en: 'The next verse is about handling errors and exceptions. The assert statement
    is your friend in catching errors and not allowing them to break your code. [Python
    Exception Handling: AssertionError](https://blog.airbrake.io/blog/python/python-assertionerror)
    article by Frances Banks in [AirBrake](https://www.airbrake.io/) covers how to
    use the assert statement optimally. [The exception Handling In Python](https://www.youtube.com/watch?v=NMTEjQ8-AJM)
    YouTube tutorial by [Edureka](https://www.youtube.com/@edurekaIN) offers a broader
    view of handling errors in Python.'
  prefs: []
  type: TYPE_NORMAL
- en: This brings us to the poem's end, going for the simple and clear way of solving
    a given problem. In programming and life, there are many ways of handling problems.
    Some are better and more straightforward than others. Finding the most optimal
    solution to a programming problem is a skill beyond Python mastery. [Geeksforgeeks](https://www.geeksforgeeks.org/)'s
    "[How To Approach A Coding Problem?](https://www.geeksforgeeks.org/how-to-approach-a-coding-problem/)"
    article about approaching and solving coding problems will help you build the
    intuition you need to address any problem effectively.
  prefs: []
  type: TYPE_NORMAL
- en: The Zen of Python is just a set of 19 guidelines for writing good code (not
    just in Python). Tim Peters originally wrote the poem in his Python mailing list
    in 1999\. Writing good Python code takes practice; the more code you write, the
    better your style will be. So, remember, try to follow the guidelines, and your
    code will be zen-full!
  prefs: []
  type: TYPE_NORMAL
- en: '**[Sara Metwalli](https://www.linkedin.com/in/sara-a-metwalli/)** is a Ph.D.
    candidate at Keio University researching ways to test and debug quantum circuits.
    I am an IBM research intern and Qiskit advocate helping build a more quantum future.
    I am also a writer on Medium, Built-in, She Can Code, and KDN writing articles
    about programming, data science, and tech topics. I am also a lead in the Woman
    Who Code Python international chapter, a train enthusiast, a traveler, and a photography
    lover.'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Step up your Python game with Fast Python for Data Science!](https://www.kdnuggets.com/2022/06/manning-step-python-game-fast-python-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Optimizing Python Code Performance: A Deep Dive into Python Profilers](https://www.kdnuggets.com/2023/02/optimizing-python-code-performance-deep-dive-python-profilers.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python Enum: How To Build Enumerations in Python](https://www.kdnuggets.com/python-enum-how-to-build-enumerations-in-python)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Simplifying Decision Tree Interpretability with Python & Scikit-learn](https://www.kdnuggets.com/2017/05/simplifying-decision-tree-interpretation-decision-rules-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Sparse Matrix Representation in Python](https://www.kdnuggets.com/2020/05/sparse-matrix-representation-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top 38 Python Libraries for Data Science, Data Visualization &…](https://www.kdnuggets.com/2020/11/top-python-libraries-data-science-data-visualization-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
