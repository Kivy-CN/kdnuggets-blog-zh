["```py\npip install pycaret\n```", "```py\npip install pycaret[full]\n```", "```py\nfrom pycaret.datasets import get_data\ndataset = get_data('mice')\n```", "```py\n**# check the shape of data**\ndataset.shape>>> (1080, 82)\n```", "```py\ndata = dataset.sample(frac=0.95, random_state=786)\ndata_unseen = dataset.drop(data.index)\n\ndata.reset_index(drop=True, inplace=True)\ndata_unseen.reset_index(drop=True, inplace=True)\n\nprint('Data for Modeling: ' + str(data.shape))\nprint('Unseen Data For Predictions: ' + str(data_unseen.shape))**>>> Data for Modeling: (1026, 82)\n>>> Unseen Data For Predictions: (54, 82)**\n```", "```py\nfrom pycaret.clustering import *\n\nexp_clu101 = setup(data, normalize = True, \n                   ignore_features = ['MouseID'],\n                   session_id = 123)\n```", "```py\nkmeans = create_model('kmeans')\n```", "```py\nprint(kmeans)**>>> OUTPUT** KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300,\n       n_clusters=4, n_init=10, n_jobs=-1, precompute_distances='deprecated',\n       random_state=123, tol=0.0001, verbose=0)\n```", "```py\nkmodes = create_model('kmodes', num_clusters = 6)\n```", "```py\nprint(kmodes)**>>> OUTPUT** KModes(cat_dissim=<function matching_dissim at 0x00000168B0B403A0>, init='Cao',\n       max_iter=100, n_clusters=6, n_init=1, n_jobs=-1, random_state=123,\n       verbose=0)\n```", "```py\nmodels()\n```", "```py\nkmean_results = assign_model(kmeans)\nkmean_results.head()\n```", "```py\nplot_model(kmeans)\n```", "```py\nplot_model(kmeans, plot = 'elbow')\n```", "```py\nplot_model(kmeans, plot = 'silhouette')\n```", "```py\nplot_model(kmeans, plot = 'distribution')\n```", "```py\nplot_model(kmeans, plot = 'distribution', feature = 'class')\n```", "```py\nplot_model(kmeans, plot = 'distribution', feature = 'CaNA_N')\n```", "```py\nunseen_predictions = predict_model(kmeans, data=data_unseen)\nunseen_predictions.head()\n```", "```py\nsave_model(kmeans,â€™Final KMeans Model 25Nov2020')\n```", "```py\nsaved_kmeans = load_model('Final KMeans Model 25Nov2020')\nnew_prediction = predict_model(saved_kmeans, data=data_unseen)\nnew_prediction.head()\n```"]