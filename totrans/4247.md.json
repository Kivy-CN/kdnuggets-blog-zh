["```py\n**# install pycaret** pip install pycaret\n```", "```py\n**# import libraries**\nimport pandas as pd\nimport numpy as np**# read csv data** data **=** pd.read_csv('[https://raw.githubusercontent.com/srees1988/predict-churn-py/main/customer_churn_data.csv'](https://raw.githubusercontent.com/srees1988/predict-churn-py/main/customer_churn_data.csv'))\n```", "```py\n**# check data types** data.dtypes\n```", "```py\n**# replace blanks with np.nan**\ndata['TotalCharges'] = data['TotalCharges'].replace(' ', np.nan)**# convert to float64**\ndata['TotalCharges'] = data['TotalCharges'].astype('float64')\n```", "```py\n**# check missing values** data.isnull().sum()\n```", "```py\n**# init setup**\nfrom pycaret.classification import *\ns = setup(data, target = 'Churn', ignore_features = ['customerID'])\n```", "```py\n**# compare all models**\nbest_model = compare_models(sort='AUC')\n```", "```py\n**# print best_model parameters**\nprint(best_model)\n```", "```py\n**# tune best model**\ntuned_best_model = tune_model(best_model)\n```", "```py\n**# AUC Plot**\nplot_model(tuned_best_model, plot = 'auc')\n```", "```py\n**# Feature Importance Plot**\nplot_model(tuned_gbc, plot = 'feature')\n```", "```py\n**# Confusion Matrix**\nplot_model(tuned_best_model, plot = 'confusion_matrix')\n```", "```py\n**# create a custom function** def calculate_profit(y, y_pred):\n    tp = np.where((y_pred==1) & (y==1), (5000-1000), 0)\n    fp = np.where((y_pred==1) & (y==0), -1000, 0)\n    return np.sum([tp,fp])**# add metric to PyCaret** add_metric('profit', 'Profit', calculate_profit)\n```", "```py\n**# compare all models**\nbest_model = compare_models(sort='Profit')\n```", "```py\n**# confusion matrix**\nplot_model(best_model, plot = 'confusion_matrix')\n```"]