["```py\npip install pandasql\n```", "```py\npython3 -m venv v1\n```", "```py\nsource v1/bin/activate\n```", "```py\npip3 install pandas seaborn pandasql\n```", "```py\nfrom pandasql import sqldf\nsqldf(query, globals())\n```", "```py\nimport pandas as pd\nimport seaborn as sns\nfrom pandasql import sqldf\n```", "```py\n# Define a reusable function for running SQL queries\nrun_query = lambda query: sqldf(query, globals())\n```", "```py\n# Load the \"tips\" dataset into a pandas dataframe\ntips_df = sns.load_dataset(\"tips\")\n```", "```py\n# Simple select query\nquery_1 = \"\"\"\nSELECT *\nFROM tips_df\nLIMIT 10;\n\"\"\"\nresult_1 = run_query(query_1)\nprint(result_1)\n```", "```py\n# filtering based on a condition\nquery_2 = \"\"\"\nSELECT *\nFROM tips_df\nWHERE total_bill > 30 AND tip > 5;\n\"\"\"\n\nresult_2 = run_query(query_2)\nprint(result_2)\n```", "```py\n# grouping and aggregation\nquery_3 = \"\"\"\nSELECT day, AVG(total_bill) as avg_bill\nFROM tips_df\nGROUP BY day;\n\"\"\"\n\nresult_3 = run_query(query_3)\nprint(result_3)\n```", "```py\nquery_4 = \"\"\"\nSELECT day, COUNT(*) as num_transactions, AVG(total_bill) as avg_bill, MAX(tip) as max_tip\nFROM tips_df\nGROUP BY day;\n\"\"\"\n\nresult_4 = run_query(query_4)\nprint(result_4)\n```", "```py\n# subqueries\nquery_5 = \"\"\"\nSELECT *\nFROM tips_df\nWHERE total_bill > (SELECT AVG(total_bill) FROM tips_df);\n\"\"\"\n\nresult_5 = run_query(query_5)\nprint(result_5)\n```", "```py\n# Create another DataFrame to join with tips_df\nother_data = pd.DataFrame({\n    'day': ['Thur','Fri', 'Sat', 'Sun'],\n    'special_event': ['Throwback Thursday', 'Feel Good Friday', 'Social Saturday','Fun Sunday', ]\n})\n```", "```py\nquery_6 = \"\"\"\nSELECT t.*, o.special_event\nFROM tips_df t\nLEFT JOIN other_data o ON t.day = o.day;\n\"\"\"\n\nresult_6 = run_query(query_6)\nprint(result_6)\n```"]