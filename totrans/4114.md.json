["```py\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2)\n```", "```py\ndf.isna().sum()\n```", "```py\nfrom sklearn.impute import SimpleImputer\n\nimputer = SimpleImputer(fill_value=np.nan, startegy='mean')\nX = imputer.fit_transform(df)\n```", "```py\nX = pd.DataFrame(X, columns=df.columns)\nprint(X)\n```", "```py\nX.isna().sum()\n```", "```py\ndropedDf = df.dropna()\n```", "```py\ndropedD.isna().sum()\n```", "```py\nfrom sklearn.preprocessing import LabelEncoder\n\nl1 = LabelEncoder()\nl1.fit(catDf['Country'])\ncatDf.Country = l1.transform(catDf.Country)\nprint(catDf)\n```", "```py\ncatDf['Country'] = l1.transform(catDf['Country'])\n```", "```py\ncatDf['Continent'] = ['Asia', 'North America', 'Asia']\n```", "```py\npd.get_dummies(data=catDf)\n```", "```py\ncatDf = pd.get_dummies(data=catDf)\n```", "```py\nfrom sklearn.preprocessing import OneHotEncoder\n\noh = OneHotEncoder()\ns1 = pd.DataFrame(oh.fit_transform(catDf.iloc[:, [0,3]]))\npd.concat([catDf, s1], axis=1)\n```", "```py\ncatDf = pd.concat([catDf, s1], axis=1)\n```", "```py\nz = (x.values - np.mean(x.values)) / np.std(x.values)\n```", "```py\ncatDf.var(ddof=0)\n\n```", "```py\nfrom sklearn.preprocessing import StandardScaler\n\nss = StandardScaler()\ncatDf.iloc[:,1:-1] = ss.fit_transform(catDf.iloc[:,1:-1])\nprint(catDf)\n```", "```py\ncatDf.var(ddof=0)\n```", "```py\nfrom sklearn.preprocessing import Normalizer\n\nnorm = Normalizer()\ncatDf.iloc[:,1:-1] = norm.fit_transform(catDf.iloc[:,1:-1])\ncatDf\n```"]