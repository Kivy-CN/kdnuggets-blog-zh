- en: Urban Sound Classification with Neural Networks in Tensorflow
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2016/09/urban-sound-classification-neural-networks-tensorflow.html](https://www.kdnuggets.com/2016/09/urban-sound-classification-neural-networks-tensorflow.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**By Aaqib Saeed, University of Twente**.'
  prefs: []
  type: TYPE_NORMAL
- en: We all got exposed to different sounds every day. Like, the sound of car horns,
    siren and music etc. How about teaching computer to classify such sounds automatically
    into categories!
  prefs: []
  type: TYPE_NORMAL
- en: In this blog post, we will learn techniques to classify urban sounds into categories
    using machine learning. Earlier blog posts covered classification problems where
    data can be easily expressed in vector form. For example, in the textual dataset,
    each word in the corpus becomes feature and tf-idf score becomes its value. Likewise,
    in [anomaly detection dataset](http://aqibsaeed.github.io/2016-08-10-logistic-regression-tf/)we
    saw two features “throughput” and “latency” that fed into a classifier. But when
    it comes to sound, feature extraction is not quite straightforward. Today, we
    will first see what features can be extracted from sound data and how easy it
    is to extract such features in Python using open source library called [Librosa](http://librosa.github.io).
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with this tutorial, please make sure you have following tools
    installed:'
  prefs: []
  type: TYPE_NORMAL
- en: Tensorflow
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Librosa
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numpy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matplotlib
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dataset
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We need a labelled dataset that we can feed into machine learning algorithm.
    Fortunately, some researchers published [urban sound dataset.](https://serv.cusp.nyu.edu/projects/urbansounddataset/)
    It contains 8,732 labelled sound clips (4 seconds each) from ten classes: *air
    conditioner, car horn, children playing, dog bark, drilling, engine idling, gunshot,
    jackhammer, siren, and street music.* The dataset by default is divided into 10-folds.
    To get the dataset please visit the following [link](https://serv.cusp.nyu.edu/projects/urbansounddataset/urbansound8k.html) and
    if you want to use this dataset in your research kindly don’t forget to acknowledge.
    In this dataset, the sound files are in *.wav* format but if you have files in
    another format such as *.mp3*, then it’s good to convert them into *.wav* format.
    It’s because *.mp3* is lossy music compression technique, check this [link](http://www.premiumbeat.com/blog/when-to-use-wav-files-when-to-use-mp3-files-what-is-the-difference-between-the-two-formats/) for
    more information. To keep things simple, we will use sound files from only one
    fold.'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s read some sound files and visualise to understand how different each sound
    clip is from other. Matplotlib’s *specgram* method performs all the required calculation
    and plotting of the spectrum. Likewise, Librosa provide handy method for wave
    and log power spectrogram plotting. By looking at the plots shown in Figure 1,
    2 and 3, we can see apparent differences between sound clips of different classes.
  prefs: []
  type: TYPE_NORMAL
- en: '![Sound Wave Plot](../Images/3daab059741ffd05668eb233443a168b.png)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1\. Waveplot.*'
  prefs: []
  type: TYPE_NORMAL
- en: '![Spectrogram](../Images/b4b540855252b4999b51723f864ee42a.png)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 2\. Spectrogram.*'
  prefs: []
  type: TYPE_NORMAL
- en: '![Sound Log Power Spectrogram](../Images/28733c619718007d1c2f766578afec0a.png)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 3\. Sound Log Power Spectrogram.*'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Image Classification with Convolutional Neural Networks (CNNs)](https://www.kdnuggets.com/2022/05/image-classification-convolutional-neural-networks-cnns.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Guide to Train an Image Classification Model Using Tensorflow](https://www.kdnuggets.com/2022/12/guide-train-image-classification-model-tensorflow.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Building and Training Your First Neural Network with TensorFlow and Keras](https://www.kdnuggets.com/2023/05/building-training-first-neural-network-tensorflow-keras.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[10 Simple Things to Try Before Neural Networks](https://www.kdnuggets.com/2021/12/10-simple-things-try-neural-networks.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Interpretable Neural Networks with PyTorch](https://www.kdnuggets.com/2022/01/interpretable-neural-networks-pytorch.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deep Neural Networks Don''t Lead Us Towards AGI](https://www.kdnuggets.com/2021/12/deep-neural-networks-not-toward-agi.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
