- en: Top Data Python Packages to Know in 2023
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/01/top-data-python-packages-know-2023.html](https://www.kdnuggets.com/2023/01/top-data-python-packages-know-2023.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Top Data Python Packages to Know in 2023](../Images/5c56afb622e46da52752f3a80a9fdc62.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from [Unsplash](https://unsplash.com/photos/95YRwf6CNw8) by [Clément Hélardot](https://unsplash.com/@clemhlrdt)
  prefs: []
  type: TYPE_NORMAL
- en: 2022 is an excellent year for any data person, especially those who use Python,
    as there are many exciting packages to improve our data capabilities. Various
    must-learn [Data Python packages in 2022](/2022/04/python-libraries-data-scientists-know-2022.html)
    have been outlined, and we might want something new to improve our stack in the
    new year.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Facing the year 2023, various Python packages will improve our data workflow
    in the new year. What are these packages? Let’s take a look at my recommendation.
  prefs: []
  type: TYPE_NORMAL
- en: From the data cleaning packages to machine learning implementation, these are
    the top data Python packages you want to know in 2023.
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Pyjanitor
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Pyjanitor](https://pyjanitor-devs.github.io/pyjanitor/) is an open-source
    Python package developed specifically for data cleaning routines via method chaining
    and was designed to improve Pandas API for data cleaning.'
  prefs: []
  type: TYPE_NORMAL
- en: We know many Pandas methods for data cleaning, such as dropna to remove all
    the missing values. With Pyjanitor, the data cleaning process with Pandas API
    would be heightened by introducing additional methods within the APIs. How is
    it work? Let’s try out the package with sample data.
  prefs: []
  type: TYPE_NORMAL
- en: 'We would use the [Titanic training data](https://www.kaggle.com/c/titanic/data?select=train.csv)
    from the Kaggle licenses under CC0: Public Domain for the sample. Let’s start
    by installing the Pyjanitor package.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Install**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Let’s look at our current dataset before we do any data cleaning with Pyjanitor.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Top Data Python Packages to Know in 2023](../Images/776cb93821d58d98923eebc4c2d986d1.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: With the Pyjanitor package, we can do various extension data cleaning and implement
    method chains in how Pandas API works. Let’s see how the package works with the
    code below.
  prefs: []
  type: TYPE_NORMAL
- en: '**Code Example**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Top Data Python Packages to Know in 2023](../Images/c6cd759e4b7d40664d8fe95e81d99cd6.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'By importing the Pyjanitor package, it would automatically be implemented within
    the Pandas DataFrame. In our code above, we have done the following things using
    Pyjanitor:'
  prefs: []
  type: TYPE_NORMAL
- en: Remove the ‘Cabin’ columns using the  remove_columns method,
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Categorical Encoding (One-Hot Encoding) processing to the ‘Embarked’ column
    using expand_column method,
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Convert all the variable header names to lowercase, and if there are spaces
    will be replaced with underscores using the clean_names method.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There are still so many functions in Pyjanitor we could use for data cleaning.
    Please refer to their [documentation](https://pyjanitor-devs.github.io/pyjanitor/api/functions/)
    for a complete API list.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Pingouin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Pingouin](https://pingouin-stats.org/) is a statistical analysis open-source
    Python package used for any common statistic activity for any data scientist.
    The package was designed for simplicity by providing a one-liner code but still
    providing various statistical tests to be used.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Install**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Having installed the package, let’s try to perform statistical analysis with
    Pingouin. For example, we would do a T-test and ANOVA test using the previous
    Titanic dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '**Code Example**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Top Data Python Packages to Know in 2023](../Images/4da797b7162a0d5a6d63ce89040e41f3.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: With a single line, Pingouin provide the statistical test result in the data
    frame object. There are many more functions to help our analysis, which we can
    explore in the Pingouin APIs [documentation](https://pingouin-stats.org/api.html).
  prefs: []
  type: TYPE_NORMAL
- en: 3\. PyCaret
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PyCaret](https://pycaret.gitbook.io/docs/) is an open-source Python package
    developed for automating the machine learning workflow. The package provides a
    low-code environment to hasten the model experiment by delivering an end-to-end
    machine-learning model tool.'
  prefs: []
  type: TYPE_NORMAL
- en: In typical data science work, many activities exist, such as cleaning our data,
    selecting a model, doing hyperparameter tuning, and evaluating the model. PyCaret
    intends to eliminate all the hassle by minimizing all the required codes into
    as few lines as possible. The package is a collection of several machine learning
    frameworks into one. Let’s try out PyCaret to know more.
  prefs: []
  type: TYPE_NORMAL
- en: '**Install**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Using the previous Titanic dataset; we would develop a model classifier to predict
    the “Survive” variable.
  prefs: []
  type: TYPE_NORMAL
- en: '**Code Example**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Top Data Python Packages to Know in 2023](../Images/c6f83df95aaee03ee400b29fc3a916ec.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: In the above code, we initiate the experiment using the setup function. By passing
    the data and the target, PyCaret would infer our data and develop a machine-learning
    model based on the given data. The actual output information is longer than the
    above image and is insightful to what happened in our modeling process.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look at the model result and infer the best model from the training data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Top Data Python Packages to Know in 2023](../Images/a90b4885d88d23a9f99d923cbfc6d497.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Top Data Python Packages to Know in 2023](../Images/0854c5dc4378a8f29730d09fee35a5d2.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: The PyCaret classifier experiment would test the training data into 14 different
    classifiers and give the best model. In our case, it is the RidgeClassifier.
  prefs: []
  type: TYPE_NORMAL
- en: There are still many experiments you could do with PyCaret. To explore more,
    please refer to their [documentation](https://pycaret.gitbook.io/docs/get-started/tutorials).
  prefs: []
  type: TYPE_NORMAL
- en: 4\. BentoML
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[BentoML](https://www.bentoml.com/) is an open-source Python package for quickly
    serving the model into production and with as few lines as possible. The package
    intended to focus on the productional machine learning model to be easily used
    by the user.'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s try out the BentoML package and learn how it works.
  prefs: []
  type: TYPE_NORMAL
- en: '**Install**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: For the BentoML example, we would use the code from the [package tutorial](https://colab.research.google.com/github/bentoml/BentoML/blob/main/examples/quickstart/iris_classifier.ipynb#scrollTo=83205567)
    with a little modification.
  prefs: []
  type: TYPE_NORMAL
- en: '**Code Example**'
  prefs: []
  type: TYPE_NORMAL
- en: We would train the model classifier using the iris dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: With BentoML, we could store our machine learning model in the local or cloud
    model store and retrieve it for production.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Then we could use the stored model in the BentoML environment using the runner
    instance.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Next; we could initiate the model service saved in the BentoML by running the
    following code to create a Python file and start the server.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: We start the server by running the code below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Top Data Python Packages to Know in 2023](../Images/ba85c3a64c900d27393e286501a6edc1.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: The output would show the current log of the development server and where we
    could access it. If we are satisfied with the development result, we could move
    on to production. I recommend you refer to the [documentation](https://docs.bentoml.org/en/latest/tutorial.html)
    for the production process.
  prefs: []
  type: TYPE_NORMAL
- en: 5\. Streamlit
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Streamlit](https://streamlit.io/) is an open-source Python package to create
    a custom web app for data scientists. The package provides insightful code to
    build and customize various data apps. Let’s try the package to learn how it works.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Install**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Streamlit web app is running by executing the Python script using the streamlit.
    That is why we need to prepare the script before running it using the streamlit
    command before running it. We can run the next sample using your favorite IDE
    or Jupyter Notebook, but I would show how we create the web app with Streamlit
    in our Jupyter Notebook.
  prefs: []
  type: TYPE_NORMAL
- en: '**Code Example**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: The above code would create a script called streamlit_example.py and create
    a web app similar to the output below if we run the Streamlit command.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '![Top Data Python Packages to Know in 2023](../Images/bd4950cf73e0c9e4107c12e04d15f449.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: The code is easy to learn and would take no time at all for you to create your
    web app with Streamlit. You could refer to the [documentation](https://docs.streamlit.io/)
    if you want to know more about what you could create with the Streamlit package.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Facing the year 2023, we should improve our data skillset better than in 2022\.
    What better way to add our data arsenal than by learning from amazing Python packages
    that would help enhance our data workflow. These top Python packages are
  prefs: []
  type: TYPE_NORMAL
- en: Pyjanitor
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Pingouin
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: PyCaret
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: BentoML
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Streamlit
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**[Cornellius Yudha Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**
    is a data science assistant manager and data writer. While working full-time at
    Allianz Indonesia, he loves to share Python and Data tips via social media and
    writing media.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[5 Python Packages For Geospatial Data Analysis](https://www.kdnuggets.com/2023/08/5-python-packages-geospatial-data-analysis.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[3 Julia Packages for Data Visualization](https://www.kdnuggets.com/2023/02/3-julia-packages-data-visualization.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top 19 Skills You Need to Know in 2023 to Be a Data Scientist](https://www.kdnuggets.com/2023/04/top-19-skills-need-know-2023-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data Analytics Tools You Need To Know in 2023](https://www.kdnuggets.com/2023/05/data-analytics-tools-need-know-2023.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[10 Amazing Machine Learning Visualizations You Should Know in 2023](https://www.kdnuggets.com/2022/11/10-amazing-machine-learning-visualizations-know-2023.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Machine Learning Skills Every Machine Learning Engineer Should…](https://www.kdnuggets.com/2023/03/5-machine-learning-skills-every-machine-learning-engineer-know-2023.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
