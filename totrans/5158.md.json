["```py\nSELECT id,\n\n      first_name,\n\n      last_name,\n\n      department_id,\n\n      max(salary)\n\nFROM ms_employee_salary\n\nGROUP BY id,\n\n        first_name,\n\n        last_name,\n\n        department_id\n\nORDER BY id ASC;\n```", "```py\nSELECT year\n\nFROM uber_advertising\n\nWHERE advertising_channel = 'celebrities' AND\n\ncustomers_acquired > 2000;\n```", "```py\nSELECT title AS project,\n\n      ROUND((budget/COUNT(emp_id)::float)::numeric, 0) budget_emp_ratio\n\nFROM ms_projects a\n\nINNER JOIN ms_emp_projects b ON a.id = b.project_id\n\nGROUP BY title,\n\n        budget\n\nORDER BY budget_emp_ratio DESC;\n```", "```py\nWITH cte_name AS (\n\nSELECT…cte_definition..\n\n) \nSELECT …\n\nFROM cte_name;\n```", "```py\nSELECT e.employee_title,\n\n      e.sex,\n\n      AVG(e.salary + b.ttl_bonus) AS avg_compensation\n\nFROM sf_employee e\n\nINNER JOIN\n\n (SELECT worker_ref_id,\n\n         SUM(bonus) AS ttl_bonus\n\n  FROM sf_bonus\n\n  GROUP BY worker_ref_id) b ON e.id = b.worker_ref_id\n\nGROUP BY employee_title,\n\n        Sex;\n```", "```py\nCASE\n\n WHEN condition\n\nTHEN result\n\n ELSE result\n\nEND AS case_stetement_alias;\n```", "```py\nSELECT CASE\n\n          WHEN c.ts_booking_at IS NOT NULL THEN 'books'\n\n          ELSE 'does not book'\n\n      END AS action,\n\n      AVG(n_searches) AS average_searches\n\nFROM airbnb_searches s\n\nLEFT JOIN airbnb_contacts c ON s.id_user = c.id_guest\n\nAND s.ds_checkin = c.ds_checkin\n\nGROUP BY 1;\n```", "```py\nSELECT department,\n\n      first_name,\n\n      salary,\n\n      AVG(salary) OVER (PARTITION BY department)\n\nFROM employee;\n```", "```py\nSELECT COUNT(*) AS n_claims\n\nFROM cvs_claims\n\nWHERE EXTRACT(MONTH\n\n             FROM date_submitted) = 12\n\n AND EXTRACT(YEAR\n\n             FROM date_submitted) = 2021\n\n AND date_accepted IS NULL\n\n AND date_rejected IS NULL;\n```"]