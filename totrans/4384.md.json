["```py\nfrom sklearn.utils.class_weight import compute_class_weight\nweights = compute_class_weight(‘balanced’, y.unique(), y)\narray([ 0.51722354, 15.01501502])\n```", "```py\nclass_weights = {\n 0:0.51722354,\n 1:15.01501502\n}lr = LogisticRegression(C=3.0, fit_intercept=True, warm_start = True, class_weight=class_weights)\n```", "```py\nlr = LogisticRegression(C=3.0, fit_intercept=True, warm_start = True, class_weight=’balanced’)\n```", "```py\nfrom imblearn.over_sampling import SMOTEsmote = SMOTE(0.8)X_resampled,y_resampled = smote.fit_resample(X.values,y.values)pd.Series(y_resampled).value_counts()0    9667\n1    7733 \ndtype: int64\n```", "```py\nmodel = LogisticRegression()model.fit(X_resampled,y_resampled)predictions = model.predict(X_test)\n```", "```py\nfrom imblearn.under_sampling import NearMissunderSample = NearMiss(0.3,random_state=1545)pd.Series(y_resampled).value_counts()0  1110 1  333 dtype: int64\n```"]