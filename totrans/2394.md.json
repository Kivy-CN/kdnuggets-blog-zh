["```py\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\n```", "```py\nsklearn.neighbors.KNeighborsClassifier\n```", "```py\nclass sklearn.neighbors.KNeighborsClassifier(n_neighbors=5, *, weights='uniform', algorithm='auto', leaf_size=30, p=2, metric='minkowski', metric_params=None, n_jobs=None)\n```", "```py\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\n```", "```py\n# url for Iris dataset\nurl = \"https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data\"\n\n# Assign column names to the dataset\nnames = ['sepal-length', 'sepal-width', 'petal-length', 'petal-width', 'Class']\n\n# Read in the dataset\ndf = pd.read_csv(url, names=names)\n```", "```py\nX = dataset.iloc[:, :-1].values\ny = dataset.iloc[:, 4].values\n```", "```py\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20)\n```", "```py\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(X_train)\n\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)\n```", "```py\nfrom sklearn.neighbors import KNeighborsClassifier\nclassifier = KNeighborsClassifier(n_neighbors=5)\nclassifier.fit(X_train, y_train)\n```", "```py\ny_pred = classifier.predict(X_test)\n```", "```py\nfrom sklearn.metrics import classification_report, confusion_matrix\nprint(confusion_matrix(y_test, y_pred))\nprint(classification_report(y_test, y_pred))\n```"]