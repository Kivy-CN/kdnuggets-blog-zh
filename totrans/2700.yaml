- en: Machine Learning Model Deployment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/09/machine-learning-model-deployment.html](https://www.kdnuggets.com/2020/09/machine-learning-model-deployment.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By Asha Ganesh, Data Scientist**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/a98e5be040f45f45831681a90d890ccf.png)'
  prefs: []
  type: TYPE_IMG
- en: ML models serverless deployment
  prefs: []
  type: TYPE_NORMAL
- en: What is serverless deployment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Serverless is the next step in Cloud Computing. This means that servers are
    simply hidden from the picture. In serverless computing, this separation of server
    and application is managed by using a platform. The responsibility of the platform
    or serverless provider is to manage all the needs and configurations for your
    application. These platforms manage the configuration of your server behind the
    scenes. This is how in serverless computing, one can simply focus on the application
    or code itself being built or deployed.
  prefs: []
  type: TYPE_NORMAL
- en: Machine Learning Model Deployment is not exactly the same as software development.
    In ML models a constant stream of new data is needed to keep models working well.
    Models need to adjust in the real world because of various reasons like adding
    new categories, new levels and many other reasons. Deploying models is just the
    beginning, as many times models need to retrain and check their performance. So,
    using serverless deployment can save time and effort and for retraining models
    every time, which is cool!
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/fdc150c4062ea588b13ea3ddd9c7bbac.png)'
  prefs: []
  type: TYPE_IMG
- en: ML Workflow
  prefs: []
  type: TYPE_NORMAL
- en: Models are performing worse in production than in development, and the solution
    needs to be sought in deployment. So, its easy to deploy ML models through serverless
    deployment.
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisites to understand serverless deployment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Basic understanding of cloud computing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Basic understanding of cloud functions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Machine Learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deployment Models for prediction
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We can deploy our ML model in 3 ways:'
  prefs: []
  type: TYPE_NORMAL
- en: web hosting frameworks like Flask and Django, etc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Server less compute AWS lambda, Google Cloud Functions,Azure Functions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cloud Platform specific frameworks like AWS Sagemaker, Google AI Platform, Azure
    Functions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure](../Images/350d1ed417640dcaaf99abfb6ffb2b33.png)'
  prefs: []
  type: TYPE_IMG
- en: Deploy Models in various ways
  prefs: []
  type: TYPE_NORMAL
- en: Server less deployment architecture overview
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Figure](../Images/abecd7cd1ce937dde00423c2c3d1a435.png)'
  prefs: []
  type: TYPE_IMG
- en: Image taken and modified from google cloud
  prefs: []
  type: TYPE_NORMAL
- en: Store models in Google Cloud Storage buckets then write Google Cloud Functions.
    Using Python for retrieving models from the bucket and by using HTTP JSON requests
    we can get predicted values for the given inputs with the help of Google Cloud
    Function.
  prefs: []
  type: TYPE_NORMAL
- en: '**Steps to start model deployment**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**1\. About Data, code and models**'
  prefs: []
  type: TYPE_NORMAL
- en: Taking the movie reviews dataset for sentiment analysis, see the solution [**here**](https://github.com/Asha-ai/ServerlessDeployment/blob/65037f323cd5d32e52d9bae90f271ed1a59a2f6d/ServerlessDeployment.ipynb)in
    my GitHub repository and [**data**](https://github.com/Asha-ai/ServerlessDeployment/tree/65037f323cd5d32e52d9bae90f271ed1a59a2f6d)**,
    models **alsoavailable in the same repository.
  prefs: []
  type: TYPE_NORMAL
- en: '**2\. Create storage bucket**'
  prefs: []
  type: TYPE_NORMAL
- en: 'By executing the “**ServerlessDeployment.ipynb**“ file you will get 3 ML models:
    DecisionClassifier, LinearSVC, and Logistic Regression.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the Browser in Storage option for creating new bucket as shown in
    the image:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/76e4743c8d274376c486e840f4f4189e.png)'
  prefs: []
  type: TYPE_IMG
- en: Create Storage bucket
  prefs: []
  type: TYPE_NORMAL
- en: '**3\. Create new function**'
  prefs: []
  type: TYPE_NORMAL
- en: Create a new bucket, then create a folder and upload the 3 models in that folder
    by creating 3 sub folders as shown.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here **models** is my main folder name and my sub folders are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**decision_tree_model**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**linear_svc_model**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**logistic_regression_model**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure](../Images/c709dbf5d678910b2c2e977283bd4d36.png)'
  prefs: []
  type: TYPE_IMG
- en: storing models in google storage in 3 folders
  prefs: []
  type: TYPE_NORMAL
- en: '**4\. Create function**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Then go to Google Cloud Functions and create a function, then select trigger
    type as HTTP and select language as Python (you can choose any language):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/15081fc33623e2e959f2beb6f6a43bd4.png)'
  prefs: []
  type: TYPE_IMG
- en: Create Cloud Function
  prefs: []
  type: TYPE_NORMAL
- en: '**5\. Write cloud function in the editor**'
  prefs: []
  type: TYPE_NORMAL
- en: Check the cloud function in my repository. Here I have imported the required
    libraries for calling models from Google Cloud Bucket and other libraries for
    HTTP request.
  prefs: []
  type: TYPE_NORMAL
- en: GET method used to test the URL response and POST method
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Delete default template and paste our code then **pickel** is used for deserializing
    our model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: google.cloud — access our cloud storage function.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If incoming request is **GET** we simply return “welcome to classifier”
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If incoming request is **POST **access the json data in the body request
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GET JSON instantiates the storage client object and accesses models from the
    bucket; here we have 3 classification models in the bucket
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If the user specifies “DecisionClassifier” we access the the model from the
    respective folder respectively with other models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If the user does not specify any model, the default model is Logistic Regression
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The blob variable contains a reference to the model.pkl file for the correct
    model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We download the .pkl file on to the local machine where this cloud function
    is running. Now every invocation might be running on a different VM and we only
    access the /temp folder on the VM, which is why we save our model.pkl file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: we deserialize the model by invoking pkl.load to access the prediction instances
    from the incoming request and call model.predict on the prediction data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the response that will send back from the serverless function is the original
    text that is the review that we want to classify and our pred class
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: after main.py write requirement.txt with required libraries and versions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure](../Images/07029e39e0807ffeee84322b2bbd15b5.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Google Cloud Function](https://github.com/Asha-ai/ServerlessDeployment/blob/master/cloud%20function)
    (Image is not clear but for understanding purpose mentioned here)'
  prefs: []
  type: TYPE_NORMAL
- en: '**6\. Deploy the model**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/db54075ef25758c5969104b92c809c1e.png)'
  prefs: []
  type: TYPE_IMG
- en: Green tick represent successful model deployment
  prefs: []
  type: TYPE_NORMAL
- en: '**7\. Test the model**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/42fdfbebd5f92ec22b3f65265303fd83.png)'
  prefs: []
  type: TYPE_IMG
- en: Give model name and review(s) for testing
  prefs: []
  type: TYPE_NORMAL
- en: Test the function with the other model.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/edbf62492abbc7b4ca6273aed7dcb54e.png)'
  prefs: []
  type: TYPE_IMG
- en: Will meet you with complete UI details with this model deployment.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code References:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: My GitHub Repository: [https://github.com/Asha-ai/ServerlessDeployment](https://github.com/Asha-ai/ServerlessDeployment)
  prefs: []
  type: TYPE_NORMAL
- en: Don’t hesitate to give more & more claps :)
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Asha Ganesh](https://medium.com/@ashaicy99)** is a data scientist.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://medium.com/@ashaicy99/machine-learning-model-deployment-748e0c2437b8).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Create and Deploy your First Flask App using Python and Heroku](/2020/09/flask-app-using-python-heroku.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Why would you put Scikit-learn in the browser?](/2020/07/why-put-scikit-learn-browser.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop training more models, start deploying them](/2020/06/stop-training-models-start-deploying.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[From Data Collection to Model Deployment: 6 Stages of a Data…](https://www.kdnuggets.com/2023/01/data-collection-model-deployment-6-stages-data-science-project.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top 7 Model Deployment and Serving Tools](https://www.kdnuggets.com/top-7-model-deployment-and-serving-tools)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Full End-to-End Deployment of a Machine Learning Algorithm into a…](https://www.kdnuggets.com/2021/12/deployment-machine-learning-algorithm-live-production-environment.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Back to Basics Week 4: Advanced Topics and Deployment](https://www.kdnuggets.com/back-to-basics-week-4-advanced-topics-and-deployment)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Segment Anything Model: Foundation Model for Image Segmentation](https://www.kdnuggets.com/2023/07/segment-anything-model-foundation-model-image-segmentation.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Significance of Data Quality in Making a Successful Machine…](https://www.kdnuggets.com/2022/03/significance-data-quality-making-successful-machine-learning-model.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
