- en: Building a Recommender System
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建推荐系统
- en: 原文：[https://www.kdnuggets.com/2019/04/building-recommender-system.html](https://www.kdnuggets.com/2019/04/building-recommender-system.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/04/building-recommender-system.html](https://www.kdnuggets.com/2019/04/building-recommender-system.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](#comments)'
- en: '**By Matthew Mahowald, [Open Data Group](https://www.opendatagroup.com/)**.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者：Matthew Mahowald， [开放数据组](https://www.opendatagroup.com/)**。'
- en: Recommender systems are one of the most prominent examples of machine learning
    in the wild today. They determine what shows up in your Facebook news feed, in
    what order products appear on Amazon, what videos are suggested in your Netflix
    queue, as well as countless other examples. But what are recommender systems,
    and how do they work? This post is the first in a series exploring some common
    techniques for building recommender systems as well as their implementation.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐系统是今天最突出的机器学习实例之一。它们决定了你的 Facebook 新闻源中出现的内容、产品在 Amazon 上的展示顺序、Netflix 队列中建议的视频，以及无数其他例子。但什么是推荐系统，它们是如何工作的？这篇文章是探索构建推荐系统的一些常见技术及其实现的系列文章中的第一篇。
- en: '![Data Engineering](../Images/efe8223e7c92f882a8d32fd9e5e37cb1.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![数据工程](../Images/efe8223e7c92f882a8d32fd9e5e37cb1.png)'
- en: What is a recommender system?
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 什么是推荐系统？
- en: 'A recommender system is an information filtering model that ranks or scores
    items for users. There are generally two types of ranking methods:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐系统是一种信息过滤模型，用于对用户的项目进行排名或评分。一般有两种排名方法：
- en: '**Content-based filtering**, in which recommended items are based on item-to-item
    similarity and the user’s explicit preferences; and'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于内容的过滤**，其中推荐项目基于项目之间的相似性和用户的显式偏好；以及'
- en: '**Collaborative filtering**, in which items are recommended to users based
    on the preferences of other users with similar transaction histories and characteristics.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**协同过滤**，其中向用户推荐的项目基于其他具有相似交易历史和特征的用户的偏好。'
- en: The information used in collaborative filtering can be explicit, where users
    provide ratings for each item, or implicit, where user preferences have to be
    extracted from user behavior (purchases, views, etc). The most successful recommender
    systems use hybrid approaches combining both filtering methods.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 协同过滤中使用的信息可以是显式的，即用户对每个项目提供评分，也可以是隐式的，即从用户行为（购买、浏览等）中提取用户偏好。最成功的推荐系统使用结合两种过滤方法的混合方法。
- en: The MovieLens Datasets
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MovieLens 数据集
- en: To make this discussion more concrete, let’s focus on building recommender systems
    using a specific example. [GroupLens](https://grouplens.org/), a research group
    at the University of Minnesota, has generously made available [the MovieLens dataset](https://grouplens.org/datasets/movielens/).
    This dataset consists of approximately 20 million user ratings applied to 27,000
    movies by 138,000 users. In addition, the movies include genre and date information.
    We’ll use this dataset to build
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使讨论更具实质性，让我们关注于使用一个具体的例子来构建推荐系统。[GroupLens](https://grouplens.org/) 是明尼苏达大学的一个研究小组，他们慷慨地提供了
    [MovieLens 数据集](https://grouplens.org/datasets/movielens/)。该数据集包含约 2000 万条用户评分，涉及
    27,000 部电影，由 138,000 名用户评分。此外，电影还包括类别和日期信息。我们将使用此数据集来构建
- en: Simple Content-based Filtering
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 简单的基于内容的过滤
- en: 'Let’s build a simple recommender system that uses content-based filtering (
    i.e. item similarity) to recommend movies for us to watch. First, load in the
    movie dataset from MovieLens and multihot-encode the genre fields:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们构建一个简单的推荐系统，该系统使用基于内容的过滤（即项目相似性）来推荐电影给我们观看。首先，从 MovieLens 加载电影数据集，并对类别字段进行多重热编码：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `genres` feature consists of one or more pipe (“|”) separated genres. The
    last line above adds a column for each possible genre and puts a 1 in that entry
    if the genre tag is present, or a 0 otherwise.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`genres` 特征由一个或多个管道符号（“|”）分隔的类别组成。上面的最后一行添加了每个可能类别的列，如果类别标签存在，则在该条目中放置 1，否则放置
    0。'
- en: 'Let’s generate some recommendations based on item similarity using these tags.
    A very common similarity measure for categorical data (such as tags) is *cosine
    similarity*. For any two items ![i](../Images/7e670de46a6672b7c7196f23e4711b0b.png
    "i") and ![j](../Images/4b5e5503442fdfa2029fcc9208d6ca1a.png "j"), the cosine
    similarity of ![i](../Images/7e670de46a6672b7c7196f23e4711b0b.png "i") and ![j](../Images/4b5e5503442fdfa2029fcc9208d6ca1a.png
    "j") is simply the cosine of the angle between ![i](../Images/7e670de46a6672b7c7196f23e4711b0b.png
    "i") and ![j](../Images/4b5e5503442fdfa2029fcc9208d6ca1a.png "j") where ![i](../Images/7e670de46a6672b7c7196f23e4711b0b.png
    "i") and ![j](../Images/4b5e5503442fdfa2029fcc9208d6ca1a.png "j") are interpreted
    as vectors in feature space. Recall that the cosine is obtained from the inner
    product of these vectors:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 基于这些标签，让我们生成一些基于项目相似性的推荐。对于类别数据（如标签），*余弦相似度*是一种非常常见的相似度度量。对于任何两个项目 ![i](../Images/7e670de46a6672b7c7196f23e4711b0b.png
    "i") 和 ![j](../Images/4b5e5503442fdfa2029fcc9208d6ca1a.png "j")， ![i](../Images/7e670de46a6672b7c7196f23e4711b0b.png
    "i") 和 ![j](../Images/4b5e5503442fdfa2029fcc9208d6ca1a.png "j") 的余弦相似度就是 ![i](../Images/7e670de46a6672b7c7196f23e4711b0b.png
    "i") 和 ![j](../Images/4b5e5503442fdfa2029fcc9208d6ca1a.png "j") 之间夹角的余弦值，其中 ![i](../Images/7e670de46a6672b7c7196f23e4711b0b.png
    "i") 和 ![j](../Images/4b5e5503442fdfa2029fcc9208d6ca1a.png "j") 被解释为特征空间中的向量。请记住，余弦值是从这些向量的内积中获得的：
- en: '![ \cos \theta = \frac{i \cdot j}{||i|| ||j||} ](../Images/3a502cd0acbdd797c1f8c8e41b7b7a9f.png
    " \cos \theta = \frac{i \cdot j}{||i|| ||j||} ")'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![ \cos \theta = \frac{i \cdot j}{||i|| ||j||} ](../Images/3a502cd0acbdd797c1f8c8e41b7b7a9f.png
    " \cos \theta = \frac{i \cdot j}{||i|| ||j||} ")'
- en: As a concrete example, consider the films $i := $ Toy Story (genre tags “Adventure”,
    “Animation”, “Children”, “Comedy”, and “Fantasy”) and $j := $ Jumanji (genre tags
    “Adventure”, “Children”, and “Fantasy”). The dot product ![i \cdot j](../Images/18c1f73139dbcc8f400317cc1558e470.png
    "i \cdot j") is 3 (the two films have three tags in common). ![||i|| = \sqrt{5}](../Images/f9e775e1a1102b4e3de42072875562fd.png
    "||i|| = \sqrt{5}") and ![||j|| = \sqrt{3}](../Images/c683224c2c69453efeae2284e2fe7f58.png
    "||j|| = \sqrt{3}"), so the cosine similarity between these two films is
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个具体的例子，考虑电影 $i := $ 《玩具总动员》（类型标签：“冒险”、“动画”、“儿童”、“喜剧”和“奇幻”）和 $j := $ 《勇敢的心》（类型标签：“冒险”、“儿童”和“奇幻”）。点积
    ![i \cdot j](../Images/18c1f73139dbcc8f400317cc1558e470.png "i \cdot j") 是 3（这两部电影有三个标签相同）。
    ![||i|| = \sqrt{5}](../Images/f9e775e1a1102b4e3de42072875562fd.png "||i|| = \sqrt{5}")
    和 ![||j|| = \sqrt{3}](../Images/c683224c2c69453efeae2284e2fe7f58.png "||j|| =
    \sqrt{3}"), 所以这两部电影之间的余弦相似度是
- en: '![ \cos \theta = \frac{3}{\sqrt{15}} \approx 0.775 ](../Images/86e2624d8c47a992e299576a1b6b9b64.png
    " \cos \theta = \frac{3}{\sqrt{15}} \approx 0.775 ")'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![ \cos \theta = \frac{3}{\sqrt{15}} \approx 0.775 ](../Images/86e2624d8c47a992e299576a1b6b9b64.png
    " \cos \theta = \frac{3}{\sqrt{15}} \approx 0.775 ")'
- en: 'We can compute the cosine similarity for all of the items in our dataset:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以计算数据集中所有项目的余弦相似度：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The very first film in the dataset is Toy Story. Let’s find out what the similar
    films to Toy Story are:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集中的第一部电影是《玩具总动员》。让我们找出与《玩具总动员》相似的电影：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '| MovieID | Genres |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 电影ID | 类型 |'
- en: '| --- | --- |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Toy Story (1995) | Adventure,Animation,Children,Comedy,Fantasy |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 《玩具总动员》（1995） | 冒险, 动画, 儿童, 喜剧, 奇幻 |'
- en: '| Turbo (2013) | Adventure,Animation,Children,Comedy,Fantasy |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 《极速蜗牛》（2013） | 冒险, 动画, 儿童, 喜剧, 奇幻 |'
- en: '| Monsters, Inc. (2001) | Adventure,Animation,Children,Comedy,Fantasy |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| 《怪兽电力公司》（2001） | 冒险, 动画, 儿童, 喜剧, 奇幻 |'
- en: '| Moana (2016) | Adventure,Animation,Children,Comedy,Fantasy |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| 《海洋奇缘》（2016） | 冒险, 动画, 儿童, 喜剧, 奇幻 |'
- en: '| Emperor’s New Groove, The (2000) | Adventure,Animation,Children,Comedy,Fantasy
    |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 《皇帝的新装》（2000） | 冒险, 动画, 儿童, 喜剧, 奇幻 |'
- en: The first five films all have exactly the same genre tags as Toy Story, and
    hence a cosine similarity of 1\. In fact, for the sample data used here, there
    are thirteen films with similarity 1; the most similar film without identical
    tags is 2006’s “The Ant Bully”, which has the additional genre tag “IMAX”.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 前五部电影的类型标签与《玩具总动员》完全相同，因此其余弦相似度为 1。事实上，对于这里使用的样本数据，共有十三部电影的相似度为 1；最相似的没有完全相同标签的电影是2006年的《蚂蚁大兵》，它有额外的类型标签“IMAX”。
- en: Simple Collaborative Filtering
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 简单协同过滤
- en: 'Collaborative filtering recommends items based on what similar users liked.
    Fortunately, in the MovieLens dataset, we have a wealth of user preference information
    in the form of movie ratings: each user assigns one or more films numeric ratings
    between 1 and 5 indicating how much they enjoyed the film. We can view the problem
    of recommending items to the user as a *prediction* task: given the user’s ratings
    of other films, what is their likely rating of the film in question?'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 协同过滤根据相似用户喜欢的内容来推荐物品。幸运的是，在 MovieLens 数据集中，我们拥有丰富的用户偏好信息，以电影评分的形式存在：每个用户给一个或多个电影打分，分数在
    1 到 5 之间，表示他们对电影的喜爱程度。我们可以将向用户推荐物品的问题视为一个 *预测* 任务：根据用户对其他电影的评分，预测他们对该电影的可能评分。
- en: 'One simple way to do this is to assign a similarity-weighted rating to each
    item using other users’ ratings:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 一种简单的方法是使用其他用户的评分为每个物品分配一个加权评分：
- en: '![ \hat{r}_{u,i} = \frac{\sum_{v\neq u} s(u,v) r_{v, i}}{\sum_{v \neq u} s(u,v)}
    ](../Images/5f6421befb7e1eb480685c5260bd8dd9.png " \hat{r}_{u,i} = \frac{\sum_{v\neq
    u} s(u,v) r_{v, i}}{\sum_{v \neq u} s(u,v)} ")'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![ \hat{r}_{u,i} = \frac{\sum_{v\neq u} s(u,v) r_{v, i}}{\sum_{v \neq u} s(u,v)}
    ](../Images/5f6421befb7e1eb480685c5260bd8dd9.png " \hat{r}_{u,i} = \frac{\sum_{v\neq
    u} s(u,v) r_{v, i}}{\sum_{v \neq u} s(u,v)} ")'
- en: where ![\hat{r}_{u,i}](../Images/bd523a20b848a5e6853139d33b96e37c.png "\hat{r}_{u,i}")
    is the predicted rating of item ![i](../Images/7e670de46a6672b7c7196f23e4711b0b.png
    "i") by user ![u](../Images/c1155b10039d460302206caf78e70b84.png "u"), ![s(u,v)](../Images/f6abcb8dc87947b544bb5ff5fba0b39e.png
    "s(u,v)") is a measurement of similarity between users ![u](../Images/c1155b10039d460302206caf78e70b84.png
    "u") and ![v](../Images/73161e4d85d5c3cc1fa03163b0a92a77.png "v"), and ![r](../Images/dc16d9309e95f2dd60bba8a2d99d78b4.png
    "r") is the known rating of item ![i](../Images/7e670de46a6672b7c7196f23e4711b0b.png
    "i") by user ![v](../Images/73161e4d85d5c3cc1fa03163b0a92a77.png "v").
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 ![\hat{r}_{u,i}](../Images/bd523a20b848a5e6853139d33b96e37c.png "\hat{r}_{u,i}")
    是用户 ![u](../Images/c1155b10039d460302206caf78e70b84.png "u") 对物品 ![i](../Images/7e670de46a6672b7c7196f23e4711b0b.png
    "i") 的预测评分，![s(u,v)](../Images/f6abcb8dc87947b544bb5ff5fba0b39e.png "s(u,v)")
    是用户 ![u](../Images/c1155b10039d460302206caf78e70b84.png "u") 和 ![v](../Images/73161e4d85d5c3cc1fa03163b0a92a77.png
    "v") 之间相似度的度量，![r](../Images/dc16d9309e95f2dd60bba8a2d99d78b4.png "r") 是用户 ![v](../Images/73161e4d85d5c3cc1fa03163b0a92a77.png
    "v") 对物品 ![i](../Images/7e670de46a6672b7c7196f23e4711b0b.png "i") 的已知评分。
- en: 'For our user similarity measurement, we’ll look at users’ ratings of movies.
    Users with similar ratings will be considered similar. To work with this rating
    data, an important first step is to normalize our ratings. We’ll do this in three
    steps: first, we’ll subtract the overall mean rating (across all films and users)
    so that our adjusted ratings are centered at 0\. Next, we’ll do the same thing
    for each film, to account for the mean ratings of a given film differing. Finally
    we’ll subtract off the mean rating for each user—this accounts for individual
    variations (e.g. one user giving consistently higher ratings than another).'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的用户相似度度量，我们将查看用户对电影的评分。评分相似的用户将被认为是相似的。处理这些评分数据的一个重要第一步是对我们的评分进行归一化。我们将分三步进行：首先，减去整体平均评分（跨所有电影和用户），使调整后的评分以
    0 为中心。接下来，我们对每部电影做同样的操作，以考虑给定电影的平均评分的差异。最后，我们减去每个用户的平均评分——这考虑了个人的变化（例如，一些用户的评分始终较高）。
- en: Mathematically, our adjusted rating ![\tilde{r}_{u,i}](../Images/52a9c49297042d77a17cce1bba397ac4.png
    "\tilde{r}_{u,i}") is
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在数学上，我们的调整评分 ![\tilde{r}_{u,i}](../Images/52a9c49297042d77a17cce1bba397ac4.png
    "\tilde{r}_{u,i}") 是
- en: '![ \tilde{r}_{u,i} := r_{u,i} - \bar{r} - \bar{r}_{i} - \bar{r}_{u} ](../Images/7e596563eff0b2daefe4be7079d610a7.png
    " \tilde{r}_{u,i} := r_{u,i} - \bar{r} - \bar{r}_{i} - \bar{r}_{u} ")'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![ \tilde{r}_{u,i} := r_{u,i} - \bar{r} - \bar{r}_{i} - \bar{r}_{u} ](../Images/7e596563eff0b2daefe4be7079d610a7.png
    " \tilde{r}_{u,i} := r_{u,i} - \bar{r} - \bar{r}_{i} - \bar{r}_{u} ")'
- en: where ![r_{u,i}](../Images/30a460c76c42202245eafbf4be93163d.png "r_{u,i}") is
    the base rating, ![\bar{r}](../Images/37a022e0abffb5ed0c15433d52b6d2ca.png "\bar{r}")
    is the overall mean rating, ![\bar{r},i](../Images/fa2dead136fcde4516fc578fb3ca28d5.png
    "\bar{r},i") is the mean rating for item ![i](../Images/7e670de46a6672b7c7196f23e4711b0b.png
    "i") (after subtracting the overall mean), and ![\bar{r},u](../Images/f7aa7e448aef9d73800f713f228bac10.png
    "\bar{r},u") is the mean rating for user ![u](../Images/c1155b10039d460302206caf78e70b84.png
    "u") (after adjusting for the overall mean rating and the item mean ratings).
    For convenience, I’ll refer to the adjusted rating ![\tilde{r}](../Images/15faa8d8c7bbf110f5cdc90f3df75b49.png
    "\tilde{r}") as the *preference* of user ![u](../Images/c1155b10039d460302206caf78e70b84.png
    "u") for item ![i](../Images/7e670de46a6672b7c7196f23e4711b0b.png "i").
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 ![r_{u,i}](../Images/30a460c76c42202245eafbf4be93163d.png "r_{u,i}") 是基础评分，![\bar{r}](../Images/37a022e0abffb5ed0c15433d52b6d2ca.png
    "\bar{r}") 是总体均值评分，![\bar{r},i](../Images/fa2dead136fcde4516fc578fb3ca28d5.png
    "\bar{r},i") 是项目 ![i](../Images/7e670de46a6672b7c7196f23e4711b0b.png "i") 的均值评分（在减去总体均值之后），而
    ![\bar{r},u](../Images/f7aa7e448aef9d73800f713f228bac10.png "\bar{r},u") 是用户 ![u](../Images/c1155b10039d460302206caf78e70b84.png
    "u") 的均值评分（在调整了总体均值评分和项目均值评分之后）。为了方便，我会将调整后的评分 ![\tilde{r}](../Images/15faa8d8c7bbf110f5cdc90f3df75b49.png
    "\tilde{r}") 称为用户 ![u](../Images/c1155b10039d460302206caf78e70b84.png "u") 对项目
    ![i](../Images/7e670de46a6672b7c7196f23e4711b0b.png "i") 的*偏好*。
- en: 'Let’s load in the ratings data and compute the adjusted ratings:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们加载评分数据并计算调整后的评分：
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'At this point we can easily establish a reasonable baseline estimate for a
    given user’s rating of films they haven’t seen:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们可以轻松地为某个用户对他们尚未观看的电影建立一个合理的基准估计：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We can compute the distance to a particular user (in this case, user 0) as
    follows:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按如下方式计算与特定用户（在此情况下为用户 0）的距离：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'It turns out that the nearest user is user 12 (with distance 0):'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 结果表明，最近的用户是用户 12（距离为 0）：
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We find two films that user 12 has seen that user 0 has not:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们找到了用户 12 已看过但用户 0 未看过的两部电影：
- en: '[PRE7]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Unfortunately, user 12 dislikes both of the films that user 0 hasn’t seen yet!
    We should continue our computation to account for all of the nearby users.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，用户 12 不喜欢用户 0 尚未观看的两部电影！我们应继续计算以考虑所有附近的用户。
- en: Concluding Remarks
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论
- en: 'The methods used in this post are *neighborhood-based*, and we’ve just seen
    above a potential pitfall when generating recommendations based on neighbors:
    neighbors may not actually recommend any items the user in question hasn’t already
    seen. Because of the need to compute pairwise distances, neighborhood-based methods
    also tend to scale poorly as the number of users increases.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 本文中使用的方法是*基于邻域*的，我们刚刚看到生成基于邻域的推荐时的一个潜在陷阱：邻域可能实际上不会推荐任何用户尚未看过的项目。由于需要计算成对距离，基于邻域的方法也往往在用户数量增加时表现不佳。
- en: In part 2 of this series, we’ll take a look at another approach for building
    recommender systems, this time using *latent factor* methods. Latent factor models
    avoid some of the pitfalls of the neighborhood-based methods described here—but
    as we’ll see, they come with some challenges of their own!
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在本系列的第 2 部分，我们将查看另一种构建推荐系统的方法，这次使用*潜在因子*方法。潜在因子模型避免了一些基于邻域的方法的陷阱，但正如我们将看到的，它们也有一些自身的挑战！
- en: '**Resources:**'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**资源：**'
- en: '[On-line and web-based: Analytics, Data Mining, Data Science, Machine Learning
    education](https://www.kdnuggets.com/education/online.html)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在线和基于网页的：分析、数据挖掘、数据科学、机器学习教育](https://www.kdnuggets.com/education/online.html)'
- en: '[Software for Analytics, Data Science, Data Mining, and Machine Learning](https://www.kdnuggets.com/software/index.html)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[分析、数据科学、数据挖掘和机器学习的软件](https://www.kdnuggets.com/software/index.html)'
- en: '**Related:**'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Preparing for the Unexpected](https://www.kdnuggets.com/2019/02/preparing-unexpected.html)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[为意外情况做准备](https://www.kdnuggets.com/2019/02/preparing-unexpected.html)'
- en: '[Word Embeddings in NLP and its Applications](https://www.kdnuggets.com/2019/02/word-embeddings-nlp-applications.html)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[NLP中的词嵌入及其应用](https://www.kdnuggets.com/2019/02/word-embeddings-nlp-applications.html)'
- en: '[State of the art in AI and Machine Learning – highlights of papers with code](https://www.kdnuggets.com/2019/02/paperswithcode-ai-machine-learning-highlights.html)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[人工智能和机器学习的最新进展 – 带代码的论文亮点](https://www.kdnuggets.com/2019/02/paperswithcode-ai-machine-learning-highlights.html)'
- en: '* * *'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业轨道'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持组织的 IT 工作'
- en: '* * *'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关话题
- en: '[Building a Recommender System for Amazon Products with Python](https://www.kdnuggets.com/2023/02/building-recommender-system-amazon-products-python.html)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 为 Amazon 产品构建推荐系统](https://www.kdnuggets.com/2023/02/building-recommender-system-amazon-products-python.html)'
- en: '[Building a Recommendation System with Hugging Face Transformers](https://www.kdnuggets.com/building-a-recommendation-system-with-hugging-face-transformers)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Hugging Face Transformers 构建推荐系统](https://www.kdnuggets.com/building-a-recommendation-system-with-hugging-face-transformers)'
- en: '[How a Level System can Help Forecast AI Costs](https://www.kdnuggets.com/2022/03/level-system-help-forecast-ai-costs.html)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[等级系统如何帮助预测 AI 成本](https://www.kdnuggets.com/2022/03/level-system-help-forecast-ai-costs.html)'
- en: '[Learning System Design: Top 5 Essential Reads](https://www.kdnuggets.com/learning-system-design-top-5-essential-reads)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习系统设计：前 5 本必读书籍](https://www.kdnuggets.com/learning-system-design-top-5-essential-reads)'
- en: '[Monitor Your File System With Python’s Watchdog](https://www.kdnuggets.com/monitor-your-file-system-with-pythons-watchdog)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 的 Watchdog 监控文件系统](https://www.kdnuggets.com/monitor-your-file-system-with-pythons-watchdog)'
- en: '[Learn Deep Learning by Building 15 Neural Network Projects in 2022](https://www.kdnuggets.com/2022/01/15-neural-network-projects-build-2022.html)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通过构建 15 个神经网络项目学习深度学习（2022 年）](https://www.kdnuggets.com/2022/01/15-neural-network-projects-build-2022.html)'
