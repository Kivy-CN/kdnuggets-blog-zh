- en: 'Customer Segmentation in Python: A Practical Approach'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://www.kdnuggets.com/customer-segmentation-in-python-a-practical-approach](https://www.kdnuggets.com/customer-segmentation-in-python-a-practical-approach)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Customer Segmentation in Python: A Practical Approach](../Images/030e6da7950544c232cbe08351c32b44.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
- en: Image by Author | Created Using Excalidraw and Flaticon
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Customer segmentation can help businesses tailor their marketing efforts and
    improve customer satisfaction. Here‚Äôs how.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Functionally, customer segmentation involves dividing a customer base into distinct
    *groups* or *segments*‚Äîbased on shared characteristics and behaviors. By understanding
    the needs and preferences of each segment, businesses can deliver more personalized
    and effective marketing campaigns, leading to increased customer retention and
    revenue.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: 'In this tutorial, we‚Äôll explore customer segmentation in Python by combining
    two fundamental techniques: **RFM (Recency, Frequency, Monetary) analysis** and
    **K-Means clustering**. RFM analysis provides a structured framework for evaluating
    customer behavior, while K-means clustering offers a data-driven approach to group
    customers into meaningful segments. We‚Äôll work with a real-world dataset from
    the retail industry: the [Online Retail dataset](https://archive.ics.uci.edu/dataset/352/online+retail)
    from UCI machine learning repository.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: From data preprocessing to cluster analysis and visualization, we‚Äôll code our
    way through each step. So let‚Äôs dive in!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: 'Our Approach: RFM Analysis and K-Means Clustering'
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let‚Äôs start by stating our goal: By applying RFM analysis and K-means clustering
    to this dataset, we‚Äôd like to gain insights into customer behavior and preferences.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 'RFM Analysis is a simple yet powerful method to quantify customer behavior.
    It evaluates customers based on three key dimensions:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '**Recency (R)**: How recently did a particular customer make a purchase?'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Frequency (F)**: How often do they make purchases?'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Monetary Value (M)**: How much money do they spend?'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We‚Äôll use the information in the dataset to compute the recency, frequency,
    and monetary values. Then, we‚Äôll map these values to the generally used RFM score
    scale of 1 - 5.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: If you‚Äôd like, you can explore and analyze further using these RFM scores. But
    we‚Äôll try to identify customer segments with similar RFM characteristics. And
    for this, we‚Äôll use K-Means clustering, an unsupervised machine learning algorithm
    that groups similar data points into clusters.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: So let‚Äôs start coding!
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: üîó [Link to Google Colab notebook](https://github.com/balapriyac/python-data-analysis/blob/main/customer-segmentation/Customer_Segmentation_in_Python.ipynb).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Step 1 ‚Äì Import Necessary Libraries and Modules
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, let‚Äôs import the necessary libraries and the specific modules as needed:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We need pandas and matplotlib for data exploration and visualization, and the
    `KMeans` class from scikit-learn‚Äôs cluster module to perform K-Means clustering.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: Step 2 ‚Äì Load the Dataset
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As mentioned, we‚Äôll use the Online Retail dataset. The dataset contains customer
    records: transactional information, including purchase dates, quantities, prices,
    and customer IDs.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: Let's read in the data that‚Äôs originally in an excel file from its URL into
    a pandas dataframe.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Alternatively, you can [download the dataset](https://archive.ics.uci.edu/static/public/352/online+retail.zip)
    and read the excel file into a pandas dataframe.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: Step 3 ‚Äì Explore and Clean the Dataset
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now let‚Äôs start exploring the dataset. Look at the first few rows of the dataset:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![Customer Segmentation in Python: A Practical Approach](../Images/1b012739c46d0bb3bbea881b94a68792.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
- en: Output of data.head()
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: 'Now call the `describe()` method on the dataframe to understand the numerical
    features better:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We see that the ‚ÄúCustomerID‚Äù column is currently a floating point value. When
    we clean the data, we‚Äôll cast it into an integer:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '![Customer Segmentation in Python: A Practical Approach](../Images/066ce9e79f212f2a620fbd8fab6eca9e.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
- en: Output of data.describe()
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: 'Also note that the dataset is quite noisy. The ‚ÄúQuantity‚Äù and ‚ÄúUnitPrice‚Äù columns
    contain negative values:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: '![Customer Segmentation in Python: A Practical Approach](../Images/2aa4d515986463219abe340683da9984.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
- en: Output of data.describe()
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: 'Let‚Äôs take a closer look at the columns and their data types:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We see that the dataset has over 541K records and the ‚ÄúDescription‚Äù and ‚ÄúCustomerID‚Äù
    columns contain missing values:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '![Customer Segmentation in Python: A Practical Approach](../Images/88f36c7be0119b5c6475eff9bdb604c3.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
- en: 'Let‚Äôs get the count of missing values in each column:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'As expected, the ‚ÄúCustomerID‚Äù and ‚ÄúDescription‚Äù columns contain missing values:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: '![Customer Segmentation in Python: A Practical Approach](../Images/019048ec21eefa3ceb37371015a29fc0.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
- en: 'For our analysis, we don‚Äôt need the product description contained in the ‚ÄúDescription‚Äù
    column. However, we need the ‚ÄúCustomerID‚Äù for the next steps in our analysis.
    So let‚Äôs drop the records with missing ‚ÄúCustomerID‚Äù:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Also recall that the values ‚ÄúQuantity‚Äù and ‚ÄúUnitPrice‚Äù columns should be strictly
    non-negative. But they contain negative values. So let''s also drop the records
    with negative values for¬† ‚ÄúQuantity‚Äù and ‚ÄúUnitPrice‚Äù:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Let‚Äôs also convert the ‚ÄúCustomerID‚Äù to an integer:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![Customer Segmentation in Python: A Practical Approach](../Images/7b849734cdca050b7c6349d8b347ec8f.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
- en: Step 4 ‚Äì Compute Recency, Frequency, and Monetary Value
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let‚Äôs start out by defining a reference date `snapshot_date` that‚Äôs a day later
    than the most recent date in the ‚ÄúInvoiceDate‚Äù column:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Next, create a ‚ÄúTotal‚Äù column that contains Quantity*UnitPrice for all the
    records:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'To calculate the Recency, Frequency, and MonetaryValue, we calculate the following‚Äî**grouped
    by CustomerID**:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: For **recency**, we‚Äôll calculate the difference between the most recent purchase
    date and a reference date (`snapshot_date`). This gives the **number of days since
    the customer's last purchase**. So *smaller values* indicate that a customer has
    made a purchase *more recently*. But when we talk about *recency scores*, we‚Äôd
    want customers who bought recently to have a higher recency score, yes? We‚Äôll
    handle this in the next step.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Because **frequency** measures how often a customer makes purchases, we‚Äôll calculate
    it as the total **number of unique invoices** or transactions made by each customer.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Monetary value** quantifies how much money a customer spends. So we‚Äôll find
    the average of the total monetary value across transactions.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Let‚Äôs rename the columns for readability:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![Customer Segmentation in Python: A Practical Approach](../Images/c5671b7ae07d5464322b95df07ad4a79.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
- en: Step 5 ‚Äì Map RFM Values onto a 1-5 Scale
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now let‚Äôs map the ‚ÄúRecency‚Äù, ‚ÄúFrequency‚Äù, and ‚ÄúMonetaryValue‚Äù columns to take
    on values in a scale of 1-5; one of {1,2,3,4,5}.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: 'We‚Äôll essentially assign the values to five different bins, and map each bin
    to a value. To help us fix the bin edges, let‚Äôs use the quantile values of the
    ‚ÄúRecency‚Äù, ‚ÄúFrequency‚Äù, and ‚ÄúMonetaryValue‚Äù columns:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![Customer Segmentation in Python: A Practical Approach](../Images/dd35049e987fde3395ccd9fc46b9b14d.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
- en: 'Here‚Äôs how we define the custom bin edges:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now that we‚Äôve defined the bin edges, let‚Äôs map the scores to corresponding
    labels between 1 and 5 (both inclusive):'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Notice that the R_Score, based on the bins, is 1 for recent purchases 5 for
    all purchases made over 250 days ago. But we‚Äôd like the most recent purchases
    to have an R_Score of 5 and purchases made over 250 days ago to have an R_Score
    of 1.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: 'To achieve the desired mapping, we do: `5 - rfm[''R_Score''].astype(int) +
    1`.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: 'Let‚Äôs look at the first few rows of the R_Score, F_Score, and M_Score columns:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![Customer Segmentation in Python: A Practical Approach](../Images/2406fb57788000d4e6ee2e0f654d436b.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
- en: If you‚Äôd like, you can use these R, F, and M scores to carry out an in-depth
    analysis. Or use clustering to identify segments with similar RFM characteristics.
    We‚Äôll choose the latter!
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Step 6 ‚Äì Perform K-Means Clustering
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: K-Means clustering is sensitive to the scale of features. Because the R, F,
    and M values are all on the same scale, we can proceed to perform clustering without
    further scaling the features.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: 'Let‚Äôs extract the R, F, and M scores to perform K-Means clustering:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Next, we need to find the *optimal* number of clusters. For this let‚Äôs run
    the K-Means algorithm for a range of K values and use the *elbow method* to pick
    the optimal K:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: We see that the curve elbows out at 4 clusters. So let‚Äôs divide the customer
    base into four segments.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: '![Customer Segmentation in Python: A Practical Approach](../Images/445ef9cef78341fb88e185bec085b99d.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
- en: 'We‚Äôve fixed K to 4\. So let‚Äôs run the K-Means algorithm to get the cluster
    assignments for all points in the dataset:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Step 7 ‚Äì Interpret the Clusters to Identify Customer Segments
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that we have the clusters, let‚Äôs try to characterize them based on the RFM
    scores.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The average R, F, and M scores for each cluster should already give you an idea
    of the characteristics.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![Customer Segmentation in Python: A Practical Approach](../Images/e3193fe4aa77709beb2a8180fde47753.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
- en: 'But let‚Äôs visualize the average R, F, and M scores for the clusters so it‚Äôs
    easy to interpret:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![Customer Segmentation in Python: A Practical Approach](../Images/8a77b0dbf09aaee9eb8455243a06fe3c.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
- en: 'Notice how the customers in each of the segments can be characterized based
    on the recency, frequency, and monetary values:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: '**Cluster 0**: Of all the four clusters, this cluster has the *highest* recency,
    frequency, and monetary values. Let‚Äôs call the customers in this cluster **champions
    (or power shoppers)**.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cluster 1**: This cluster is characterized by *moderate* recency, frequency,
    and monetary values. These customers still spend more and purchase more frequently
    than clusters 2 and 3\. Let‚Äôs call them **loyal customers**.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cluster 2**: Customers in this cluster tend to spend less. They don‚Äôt buy
    often, and haven‚Äôt made a purchase recently either. These are likely *inactive*
    or **at-risk customers**.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cluster 3**: This cluster is characterized by *high recency* and relatively
    lower frequency and moderate monetary values. So these are **recent customers**
    who can potentially become long-term customers.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here are some examples of how you can tailor marketing efforts‚Äîto target customers
    in each segment‚Äîto enhance customer engagement and retention:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '**For Champions/Power Shoppers**: Offer personalized special discounts, early
    access, and other premium perks to make them feel valued and appreciated.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**For Loyal Customers**: Appreciation campaigns, referral bonuses, and rewards
    for loyalty.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**For At-Risk Customers**: Re-engagement efforts that include running discounts
    or promotions to encourage buying.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**For Recent Customers**: Targeted campaigns educating them about the brand
    and discounts on subsequent purchases.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It‚Äôs also helpful to understand what percentage of customers are in the different
    segments. This will further help streamline marketing efforts and grow your business.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: 'Let‚Äôs visualize the distribution of the different clusters using a pie chart:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '![Customer Segmentation in Python: A Practical Approach](../Images/32d5956b8e13aa7df201cf8802848137.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
- en: Here we go! For this example, we have quite an even distribution of customers
    across segments. So we can invest time and effort in retaining existing customers,
    re-engaging with at-risk customers, and educating recent customers.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: Wrapping Up
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'And that‚Äôs a wrap! We went from over *154K customer records to 4 clusters in
    7 easy steps*. I hope you understand how customer segmentation allows you to make
    data-driven decisions that influence business growth and customer satisfaction
    by allowing for:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: '**Personalization**: Segmentation allows businesses to tailor their marketing
    messages, product recommendations, and promotions to each customer group''s specific
    needs and interests.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Improved Targeting**: By identifying *high-value* and *at-risk* customers,
    businesses can allocate resources more efficiently, focusing efforts where they
    are most likely to yield results.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Customer Retention**: Segmentation helps businesses create retention strategies
    by understanding what keeps customers engaged and satisfied.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As a next step, try applying this approach to another dataset, document your
    journey, and share with the community! But remember, effective customer segmentation
    and running targeted campaigns requires a good understanding of your customer
    base‚Äîand how the customer base evolves. So it requires periodic analysis to refine
    your strategies over time.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: Dataset Credits
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The [Online Retail Dataset](https://archive.ics.uci.edu/dataset/352/online+retail)
    is licensed under a [Creative Commons Attribution 4.0 International](https://creativecommons.org/licenses/by/4.0/legalcode)
    (CC BY 4.0) license:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: Online Retail. (2015). UCI Machine Learning Repository. https://doi.org/10.24432/C5BW33.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)****
    is a developer and technical writer from India. She likes working at the intersection
    of math, programming, data science, and content creation. Her areas of interest
    and expertise include DevOps, data science, and natural language processing. She
    enjoys reading, writing, coding, and coffee! Currently, she''s working on learning
    and sharing her knowledge with the developer community by authoring tutorials,
    how-to guides, opinion pieces, and more. Bala also creates engaging resource overviews
    and coding tutorials.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[A Practical Approach To Feature Engineering In Machine Learning](https://www.kdnuggets.com/2023/07/practical-approach-feature-engineering-machine-learning.html)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Free eBook: 10 Practical Python Programming Tricks](https://www.kdnuggets.com/2023/04/free-ebook-10-practical-python-programming-tricks.html)'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ÂÖçË¥πÁîµÂ≠ê‰π¶Ôºö10‰∏™ÂÆûÁî®ÁöÑPythonÁºñÁ®ãÊäÄÂ∑ß](https://www.kdnuggets.com/2023/04/free-ebook-10-practical-python-programming-tricks.html)'
- en: '[A Guide On How To Become A Data Scientist (Step By Step Approach)](https://www.kdnuggets.com/2021/05/guide-become-data-scientist.html)'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Â¶Ç‰ΩïÊàê‰∏∫Êï∞ÊçÆÁßëÂ≠¶ÂÆ∂ÁöÑÊåáÂçóÔºàÈÄêÊ≠•ÊñπÊ≥ïÔºâ](https://www.kdnuggets.com/2021/05/guide-become-data-scientist.html)'
- en: '[Support Vector Machines: An Intuitive Approach](https://www.kdnuggets.com/2022/08/support-vector-machines-intuitive-approach.html)'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ÊîØÊåÅÂêëÈáèÊú∫ÔºöÁõ¥ËßÇÁöÑÊñπÊ≥ï](https://www.kdnuggets.com/2022/08/support-vector-machines-intuitive-approach.html)'
- en: '[Data Science Project of Rotten Tomatoes Movie Rating Prediction:‚Ä¶](https://www.kdnuggets.com/2023/06/data-science-project-rotten-tomatoes-movie-rating-prediction-first-approach.html)'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Êï∞ÊçÆÁßëÂ≠¶È°πÁõÆÔºöÁÉÇÁï™ËåÑÁîµÂΩ±ËØÑÂàÜÈ¢ÑÊµãÔºö‚Ä¶](https://www.kdnuggets.com/2023/06/data-science-project-rotten-tomatoes-movie-rating-prediction-first-approach.html)'
- en: '[Data Science Project of Rotten Tomatoes Movie Rating Prediction:‚Ä¶](https://www.kdnuggets.com/2023/07/data-science-project-rotten-tomatoes-movie-rating-prediction-second-approach.html)'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Êï∞ÊçÆÁßëÂ≠¶È°πÁõÆÔºöÁÉÇÁï™ËåÑÁîµÂΩ±ËØÑÂàÜÈ¢ÑÊµãÔºö‚Ä¶](https://www.kdnuggets.com/2023/07/data-science-project-rotten-tomatoes-movie-rating-prediction-second-approach.html)'
