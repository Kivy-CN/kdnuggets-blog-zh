["```py\ndef __getitem__(self, index):\n\t# Your Implementation\n\tpass\n```", "```py\nmy_obj[index] \n```", "```py\nclass Student:\n    def __init__(self, names):\n        self.names=names\n\n    def __getitem__(self,index):\n        return self.names[index]\n\nsection_A= Student([\"David\", \"Elsa\", \"Qasim\"])\nprint(section_A[2])\n```", "```py\nQasim\n```", "```py\nclass MyList:\n    def __init__(self, items):\n        self.items = items\n\n    def __getitem__(self, index):\n        if isinstance(index, int):\n            return self.items[index]\n        elif isinstance(index, str):\n            return self.items.index(index)\n        else:\n            raise TypeError(\"Invalid Argument Type\")\n\nmy_list = MyList(['red', 'blue', 'green', 'black'])\n\n# Indexing with integer keys\nprint(my_list[0]) \nprint(my_list[2])  \n\n# Indexing with string keys\nprint(my_list['red'])  \nprint(my_list['green']) \n```", "```py\nred\ngreen\n0    \n2\n```"]