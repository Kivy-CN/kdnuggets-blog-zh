- en: 'Keras 3.0: Everything You Need To Know'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Keras 3.0：你需要知道的一切
- en: 原文：[https://www.kdnuggets.com/2023/07/keras-30-everything-need-know.html](https://www.kdnuggets.com/2023/07/keras-30-everything-need-know.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2023/07/keras-30-everything-need-know.html](https://www.kdnuggets.com/2023/07/keras-30-everything-need-know.html)
- en: '![Keras 3.0: Everything You Need To Know](../Images/7b824424c35c725d8c30d2656e25f025.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Keras 3.0：你需要知道的一切](../Images/7b824424c35c725d8c30d2656e25f025.png)'
- en: Image Created by Author with Playground AI
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 作者通过 Playground AI 创建的图像
- en: Before we dive into the details of this exciting development, let's explore
    a scenario to understand it better. Picture yourself as a Senior Data Scientist
    leading a sophisticated image classification project. Your TensorFlow-based model
    is performing remarkably well. However, as you add more functionalities, you notice
    that some team members prefer JAX for scalability, while others favor PyTorch
    for its user-friendly nature. As a team lead, how can you ensure seamless collaboration
    while maintaining the model's efficiency across various deep-learning frameworks?
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入了解这一令人兴奋的发展之前，让我们探讨一个场景以更好地理解它。设想你是一位资深数据科学家，负责一个复杂的图像分类项目。你的基于 TensorFlow
    的模型表现非常出色。然而，随着你添加更多功能，你发现有些团队成员倾向于使用 JAX 以实现可扩展性，而其他人则偏爱 PyTorch 因为它更易于使用。作为团队领导，你如何确保在维护模型在各种深度学习框架中的效率的同时，实现无缝协作？
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速迈向网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你组织的 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Recognizing this challenge, the Keras team introduces Keras Core—an innovative
    multi-backend implementation of the Keras API with support for TensorFlow, JAX,
    and PyTorch. This library will evolve into Keras 3.0 by Fall 2023\. But before
    we jump straight to Keras 3.0, let's first take a brief look at Keras' history.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 认识到这一挑战，Keras 团队推出了 Keras Core——一种创新的多后端实现 Keras API 的库，支持 TensorFlow、JAX 和
    PyTorch。该库将于 2023 年秋季发展成 Keras 3.0。 在我们直接进入 Keras 3.0 之前，先简要回顾一下 Keras 的历史。
- en: A Brief History of Keras and the Road to 3.0
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Keras 的简史与 3.0 之路
- en: In 2015, François Chollet introduced Keras, an open-source deep-learning library
    written in Python. This simple yet powerful API quickly gained popularity among
    researchers, students, and professionals by streamlining complex neural network
    building. Over time, Keras received significant enhancements, making it even more
    appealing to the deep-learning community. Eventually, Keras became an integral
    part of TensorFlow, Google's cutting-edge deep learning framework. Around the
    same time, Facebook's AI Research lab developed PyTorch, known for its intuitive
    and flexible model building. At the same time, JAX emerged as another powerful
    framework for high-performance machine learning research. As these frameworks
    gained momentum, developers started to experience the dilemma of choosing between
    the frameworks. This led to further fragmentation in the deep learning community.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 2015 年，François Chollet 推出了 Keras，一个用 Python 编写的开源深度学习库。这个简单而强大的 API 很快在研究人员、学生和专业人士中获得了广泛欢迎，因为它简化了复杂的神经网络构建。随着时间的推移，Keras
    得到了显著的增强，使其对深度学习社区更具吸引力。最终，Keras 成为 TensorFlow 的一个重要组成部分——Google 的前沿深度学习框架。与此同时，Facebook
    的 AI 研究实验室开发了 PyTorch，以其直观和灵活的模型构建而闻名。与此同时，JAX 作为另一个强大的高性能机器学习研究框架出现了。随着这些框架的蓬勃发展，开发者开始面临选择框架的困境。这导致了深度学习社区的进一步碎片化。
- en: Acknowledging the challenges faced posed by the fragmented frameworks, the developers
    of Keras decided to revolutionize the library once again, giving rise to Keras
    3.0.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 由于面临碎片化框架带来的挑战，Keras 的开发者决定再次彻底改造该库，诞生了 Keras 3.0。
- en: Salient Features of Keras 3.0
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Keras 3.0 的显著特点
- en: 'Keras 3.0 empowers you to collaborate with your team effectively. You can develop
    sophisticated models with a unified front end by combining the strengths of TensorFlow,
    JAX, and PyTorch. Here are some of the features due to which Keras 3.0 is an absolute
    game changer:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Keras 3.0使你能够与团队有效协作。你可以通过结合TensorFlow、JAX和PyTorch的优点来开发复杂的模型。以下是Keras 3.0被认为是绝对改变游戏规则的一些特性：
- en: 1\. Multi-Backend Support
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 多后端支持
- en: Keras 3.0 acts as a super-connector, enabling seamless use of TensorFlow, JAX,
    and PyTorch together. Developers have the freedom to mix and match the best tool
    for their specific tasks without changing the code.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Keras 3.0充当超级连接器，实现了TensorFlow、JAX和PyTorch的无缝使用。开发者可以自由地混合和匹配最适合特定任务的工具，而无需更改代码。
- en: 2\. Performance Optimization
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 性能优化
- en: Performance Optimization is the key feature of Keras 3.0\. By default, Keras
    3.0 leverages the XLA (Accelerated Linear Algebra) compilation. XLA Compilation
    optimizes your mathematical computations making them run much faster on hardware
    like GPUs and TPUs. It also allows you to dynamically select the best backend
    for your AI model ensuring optimal efficiency. Such performance optimization features
    are a big deal allowing you to train more models, experiment more, and get results
    much quicker.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 性能优化是Keras 3.0的关键特性。默认情况下，Keras 3.0利用XLA（加速线性代数）编译。XLA编译优化你的数学计算，使它们在GPU和TPU等硬件上运行得更快。它还允许你动态选择最佳的后端，以确保最佳效率。这些性能优化功能大大加快了训练速度，使你能够训练更多模型，进行更多实验，并更快地获得结果。
- en: 3\. Expanded Ecosystem Surface
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 扩展的生态系统表面
- en: Your Keras models can be used as the PyTorch Modules, TensorFlow SavedModels,
    or part of JAX's large-scale TPU training infrastructure. This means that you
    can take advantage of the strengths of each framework. So, with Keras 3.0’s expanded
    ecosystem you are not locked into a single ecosystem. It is just like a universal
    adapter that lets you connect your favorite device to any machine.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你的Keras模型可以作为PyTorch模块、TensorFlow SavedModels或JAX大规模TPU训练基础设施的一部分使用。这意味着你可以利用每个框架的优势。因此，凭借Keras
    3.0扩展的生态系统，你不会被锁定在单一的生态系统中。这就像一个通用适配器，让你可以将喜欢的设备连接到任何机器上。
- en: 4\. Cross-Framework Low-Level Language
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 跨框架底层语言
- en: The introduction of the **keras_core.ops** namespace is a groundbreaking feature
    that allows you to write custom operations once and use them across different
    deep-learning frameworks effortlessly. The **keras_core.ops** provide a set of
    tools and functions that resemble the popular NumPy API, which is a widely used
    library for numerical computations in Python. This level of cross-framework compatibility
    fosters code reusability and encourages collaboration.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**keras_core.ops**命名空间的引入是一个突破性特征，它允许你一次性编写自定义操作，并在不同的深度学习框架中轻松使用。**keras_core.ops**提供了一组工具和函数，类似于流行的NumPy
    API，NumPy是Python中广泛使用的数值计算库。这种跨框架的兼容性促进了代码的重用，并鼓励了协作。'
- en: 5\. Progressive Disclosure of Complexity
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. 复杂性的渐进揭示
- en: This design approach of Keras 3.0 sets it apart from other deep learning frameworks.
    Imagine that you are a beginner and you want to build a simple neural network
    using Keras 3.0\. It presents you with the most straightforward workflows at the
    start. Once you get comfortable with the basics, you can access all the advanced
    features and the low-level functionalities. It doesn’t restrict you to predefined
    workflows only. The beauty of this approach lies in its adaptability and is welcoming
    for both beginners and seasoned deep learning practitioners.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Keras 3.0的设计方法使其与其他深度学习框架不同。假设你是一个初学者，想使用Keras 3.0构建一个简单的神经网络。它在开始时为你提供了最简单的工作流程。一旦你熟悉了基础知识，你可以访问所有高级功能和底层功能。它不限制你只使用预定义的工作流程。这种方法的魅力在于其适应性，既欢迎初学者，也适合经验丰富的深度学习从业者。
- en: 6\. Stateless API for Layers, Models, Metrics, and Optimizers
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6\. 层、模型、指标和优化器的无状态API
- en: In the context of deep learning, state refers to the internal variables and
    parameters that change during the training process. However, JAX operates on the
    principle of statelessness meaning that the functions do not have mutable variables
    or internal states. Keras 3.0 embraces the statelessness of JAX via a **Stateless
    API**. It allows the essential component of deep learning i.e. layers, models,
    metrics and optimizers to be designed in a stateless manner. This unique compatibility
    makes Keras 3.0 an indispensable tool in modern AI development.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在深度学习的背景下，状态指的是在训练过程中变化的内部变量和参数。然而，JAX 的工作原理是无状态的，这意味着函数没有可变变量或内部状态。Keras 3.0
    通过**无状态 API**拥抱 JAX 的无状态性。它允许深度学习的核心组件，即层、模型、度量标准和优化器以无状态的方式进行设计。这种独特的兼容性使 Keras
    3.0 成为现代 AI 开发中不可或缺的工具。
- en: Getting Started with Keras 3.0
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用 Keras 3.0
- en: 'Keras Core is compatible with Linux and MacOS systems. Setting up Keras 3.0
    is a straightforward process. Here is the step-by-step guide for you to follow:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Keras Core 兼容 Linux 和 MacOS 系统。设置 Keras 3.0 是一个简单的过程。以下是逐步指南供你参考：
- en: 1\. Clone and Navigate to the Repository
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 克隆并导航到仓库
- en: Clone the repository into your local system using the following command
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令将仓库克隆到本地系统中
- en: '[PRE0]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Change your root directory to the clone keras-core using:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令将根目录更改为克隆的 keras-core：
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 2\. Install Dependencies
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 安装依赖项
- en: Open your interval and run the following command to install the required dependencies.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 打开你的终端并运行以下命令以安装所需的依赖项。
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 4\. Run the Installation Command
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 运行安装命令
- en: 'Run the following script to handle the installation process:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下脚本以处理安装过程：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 5\. Configure the Backend
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. 配置后端
- en: 'By default, Keras Core strictly requires TensorFlow as the backend framework
    but you can configure it using the following two ways:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Keras Core 严格要求 TensorFlow 作为后端框架，但你可以使用以下两种方法进行配置：
- en: '**Option 01:** You can set the KERAS_BACKEND environment variable to your preferred
    backend option.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**选项 01：** 你可以将 KERAS_BACKEND 环境变量设置为你首选的后端选项。'
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Option 02:** You can edit the local Keras configuration file located at ~/.keras/keras.json.
    Open the file in a text editor and change the "backend" option to your preferred
    backend.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**选项 02：** 你可以编辑位于 ~/.keras/keras.json 的本地 Keras 配置文件。在文本编辑器中打开文件，并将“backend”选项更改为你首选的后端。'
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 6\. Verify the Installation
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6\. 验证安装
- en: 'To ensure that Keras Core is correctly installed with your chosen backend,
    you can test it by importing the library. Open a Python interpreter or a Jupyter
    Notebook and run the following:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保 Keras Core 与你选择的后端正确安装，你可以通过导入库进行测试。打开 Python 解释器或 Jupyter Notebook 并运行以下命令：
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Ending Notes
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结束说明
- en: While Keras 3.0 has some limitations, such as its current TensorFlow dependency
    and limited tf.data support with other backends, the future potential of this
    framework is promising. Keras has released the beta version as of now and they
    encourage the developers to provide their valuable feedback. If you are interested
    to explore more about it, you can find the documentation of Keras Core (Keras
    3.0) [here](https://keras.io/api/). Don’t be afraid to try new ideas. Keras 3.0
    is a powerful tool and it's an exciting time to be part of the evolution.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Keras 3.0 有一些限制，比如当前的 TensorFlow 依赖和与其他后端的有限 tf.data 支持，但这个框架的未来潜力是值得期待的。Keras
    目前已发布了测试版，并鼓励开发者提供宝贵的反馈。如果你有兴趣了解更多信息，可以在[Keras Core (Keras 3.0) 文档](https://keras.io/api/)中找到相关资料。不要害怕尝试新想法。Keras
    3.0 是一款强大的工具，现在是参与进化的激动人心的时刻。
- en: '**[Kanwal Mehreen](https://www.linkedin.com/in/kanwal-mehreen1)** is an aspiring
    software developer with a keen interest in data science and applications of AI
    in medicine. Kanwal was selected as the Google Generation Scholar 2022 for the
    APAC region. Kanwal loves to share technical knowledge by writing articles on
    trending topics, and is passionate about improving the representation of women
    in tech industry.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Kanwal Mehreen](https://www.linkedin.com/in/kanwal-mehreen1)** 是一位有志的软件开发者，对数据科学和
    AI 在医学中的应用有浓厚的兴趣。Kanwal 被选为 2022 年 APAC 区域的 Google Generation Scholar。Kanwal 喜欢通过撰写有关趋势话题的文章来分享技术知识，并对改善女性在科技行业中的代表性感到热情。'
- en: More On This Topic
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[KDnuggets News, April 13: Python Libraries Data Scientists Should…](https://www.kdnuggets.com/2022/n15.html)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻，4 月 13 日：数据科学家应关注的 Python 库…](https://www.kdnuggets.com/2022/n15.html)'
- en: '[Naïve Bayes Algorithm: Everything You Need to Know](https://www.kdnuggets.com/2020/06/naive-bayes-algorithm-everything.html)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[朴素贝叶斯算法：你需要知道的一切](https://www.kdnuggets.com/2020/06/naive-bayes-algorithm-everything.html)'
- en: '[Everything You Need to Know About Tensors](https://www.kdnuggets.com/2022/05/everything-need-know-tensors.html)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[关于张量的所有信息](https://www.kdnuggets.com/2022/05/everything-need-know-tensors.html)'
- en: '[Everything You Need to Know About Data Lakehouses](https://www.kdnuggets.com/2022/09/everything-need-know-data-lakehouses.html)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[关于数据湖屋的所有信息](https://www.kdnuggets.com/2022/09/everything-need-know-data-lakehouses.html)'
- en: '[Everything You Need to Know About MLOps: A KDnuggets Tech Brief](https://www.kdnuggets.com/tech-brief-everything-you-need-to-know-about-mlops)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[关于MLOps的所有信息：KDnuggets技术简报](https://www.kdnuggets.com/tech-brief-everything-you-need-to-know-about-mlops)'
- en: '[ChatGPT: Everything You Need to Know](https://www.kdnuggets.com/2023/01/chatgpt-everything-need-know.html)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ChatGPT：你需要知道的一切](https://www.kdnuggets.com/2023/01/chatgpt-everything-need-know.html)'
