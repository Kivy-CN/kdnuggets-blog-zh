- en: Writing Your First Neural Net in Less Than 30 Lines of Code with Keras
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Keras 编写不到 30 行代码的第一个神经网络
- en: 原文：[https://www.kdnuggets.com/2019/10/writing-first-neural-net-less-30-lines-code-keras.html](https://www.kdnuggets.com/2019/10/writing-first-neural-net-less-30-lines-code-keras.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/10/writing-first-neural-net-less-30-lines-code-keras.html](https://www.kdnuggets.com/2019/10/writing-first-neural-net-less-30-lines-code-keras.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [David Gündisch](https://www.linkedin.com/in/david-gundisch/), Cloud Architect**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者 [David Gündisch](https://www.linkedin.com/in/david-gundisch/)，云架构师**'
- en: '![Figure](../Images/4c65340c70db0e311f666addd510dbfb.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/4c65340c70db0e311f666addd510dbfb.png)'
- en: '[https://unsplash.com/@tvick](https://unsplash.com/@tvick)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://unsplash.com/@tvick](https://unsplash.com/@tvick)'
- en: Reminiscing back to when I first started my journey into AI, I remember all
    too well how daunting some of the concepts seemed. Reading a simple explanation
    on what a Neural Network is can quickly lead to a scientific paper where every
    second sentence is a formula with symbols you’ve never even seen before. While
    these papers hold incredible insights and depth to help you build up your expertise,
    getting started with writing your first Neural Net is a lot easier than it sounds!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 回忆起我刚开始探索人工智能的旅程时，我记得有些概念看起来是多么令人畏惧。阅读关于神经网络是什么的简单解释，很快就会引导你进入一篇每第二句都是你从未见过的符号的科学论文。虽然这些论文包含了不可思议的见解和深度，帮助你建立专业知识，但编写第一个神经网络比听起来要简单得多！
- en: OK… but what even is a Neural Network???
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 好吧……但什么是神经网络呢???
- en: Good Question! Before we jump into writing our own Python implementation of
    a simple Neural Network or NN for short, we should probably unpack what they are,
    and why they are so exciting!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 好问题！在我们开始编写自己的简单神经网络（简称 NN）的 Python 实现之前，我们应该先了解它们是什么，以及它们为什么如此令人兴奋！
- en: '![](../Images/d103aaba7b4d5462965e523aef9e2e3b.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d103aaba7b4d5462965e523aef9e2e3b.png)'
- en: Dr. Robert Hecht-Nielsen, co-founder of HNC Software, puts it simply.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: HNC Software 联合创始人 Robert Hecht-Nielsen 博士简单地阐述了这一点。
- en: '*…a computing system made up of a number of simple, highly interconnected processing
    elements, which process information by their dynamic state response to external
    inputs. — *“Neural Network Primer: Part I” by Maureen Caudill, AI Expert, Feb.
    1989'
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*“…一个由若干简单的、高度互联的处理元素组成的计算系统，通过对外部输入的动态状态响应来处理信息。 — *《神经网络入门：第一部分》，Maureen
    Caudill，人工智能专家，1989年2月'
- en: In essence, a Neural Network is a set of mathematical expressions that are really
    good at recognizing patterns in information, or data. A NN accomplishes this through
    a kind of human emulated perception, but instead of seeing, say an image, like
    a human would, the NN expresses this information numerically contained within
    a Vector or Scalar (a Vector only containing one number).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 实质上，神经网络是一组数学表达式，它们非常擅长识别信息或数据中的模式。神经网络通过一种模拟人类感知的方式实现这一点，但与人类通过视觉识别图像不同，神经网络将这些信息以数值形式包含在向量或标量中（一个仅包含一个数字的向量）。
- en: It passes this information through layers where the output of one layer, acts
    as the input into the next. While traveling through these layers the input is
    modified by weight and bias and sent to the activation function to map the output.
    The learning then occurs via a Cost function, that compares the actual output
    and the desired output, which in turn helps the function alters and adjusts the
    weights and biases to minimize the cost via a process called backpropagation.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 神经网络将信息通过各层传递，其中一层的输出作为下一层的输入。在这些层中，输入通过权重和偏置进行修改，并送入激活函数以映射输出。然后，通过成本函数进行学习，该函数比较实际输出和期望输出，从而帮助函数通过反向传播过程调整权重和偏置，以最小化成本。
- en: I would highly encourage you to watch the below video for an in-depth and visual
    explanation.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我强烈建议你观看下面的视频，以获得深入且直观的解释。
- en: 3Blue1Brown’s video on Neural Networks
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 3Blue1Brown 关于神经网络的视频
- en: For our example NN implementation we are going to be using the MNIST data set.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例神经网络实现中，我们将使用 MNIST 数据集。
- en: '![Figure](../Images/e205dfefcfece63acf61fd6eb80ddc4a.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/e205dfefcfece63acf61fd6eb80ddc4a.png)'
- en: MNIST Sample Dataset
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: MNIST 示例数据集
- en: MNIST can be seen as the ‘Hello World’ dataset because it is able to demonstrate
    the capabilities of NNs quite succinctly. The dataset is made up of handwritten
    digits, which we will train our NN to recognize and classify.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: MNIST 可以被视为“Hello World”数据集，因为它能够简洁地展示神经网络的能力。该数据集由手写数字组成，我们将训练我们的神经网络来识别和分类这些数字。
- en: Enter the drago… I mean Keras
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 进入 Keras
- en: To facilitate our implementation we are going to be using the Keras framework.
    Keras is a high-level API written in Python which runs on-top of popular frameworks
    such as TensorFlow, Theano, etc. to provide the machine learning practitioner
    with a layer of abstraction to reduce the inherent complexity of writing NNs.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 为了便利实现，我们将使用 Keras 框架。Keras 是一个用 Python 编写的高级 API，运行在流行的框架如 TensorFlow、Theano
    等之上，提供了一个抽象层，以减少编写神经网络的固有复杂性。
- en: I would encourage you to delve into the Keras [documentation](https://keras.io/) to
    really become familiar with the API. Additionally, I would highly recommend the
    book *Deep Learning with Python* by Francois Chollet, which inspired this tutorial.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我鼓励你深入了解 Keras 的 [文档](https://keras.io/)，以真正熟悉 API。此外，我强烈推荐 Francois Chollet
    的 *Deep Learning with Python* 一书，这本书启发了本教程。
- en: Time to burn some GPUs
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 是时候烧掉一些 GPU 了。
- en: For this tutorial, we will be using Keras with the TensorFlow backend, so if
    you haven’t installed either of these, now is a good time to do so. You can accomplish
    this simply by running these commands in your terminal. When you move beyond simple
    introductory examples it is best to set up your [Anaconda ](https://docs.anaconda.com/anaconda/)environment
    and install the below with conda instead.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本教程，我们将使用带有 TensorFlow 后端的 Keras，因此如果你还没有安装这两个工具，现在是一个好时机。你可以通过在终端中运行这些命令来完成这一安装。当你超越简单的入门示例时，最好设置你的
    [Anaconda](https://docs.anaconda.com/anaconda/) 环境，并用 conda 安装下面的内容。
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now that you’ve installed everything standing between you and your first NN,
    go ahead and open your favorite IDE and let’s dive into importing our required
    Python modules!
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经安装了所有工具，打开你最喜欢的 IDE，让我们开始导入所需的 Python 模块吧！
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Keras has a number of datasets you can use to help you learn and luckily for
    us MNIST is one of them! Models and Layers are both modules which will help us
    build out our NN and to_categorical is used for our data encoding… but more on
    that later!
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Keras 有许多数据集可以帮助你学习，幸运的是，MNIST 是其中之一！模型和层都是帮助我们构建神经网络的模块，而 to_categorical 用于数据编码……但稍后会详细介绍！
- en: Now that we have our required modules imported we will want to split our dataset
    into train and test sets. This can be accomplished simply with the following line.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经导入了所需的模块，我们需要将数据集拆分为训练集和测试集。这可以通过以下几行代码简单完成。
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In this example, our NN learns by comparing its output against labeled data.
    You can think of this as us making the NN guess a large number of handwritten
    digits, and then comparing the guesses against the actual label. The result of
    this will then feed into how the model adjusts its weights and biases in order
    to minimize the overall cost.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们的神经网络通过将输出与标记数据进行比较来学习。你可以把它想象成让神经网络猜测大量手写数字，然后将猜测与实际标签进行比较。这一结果将决定模型如何调整其权重和偏差，以最小化总体成本。
- en: With our training and test data set-up, we are now ready to build our model.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置了训练和测试数据集之后，我们现在准备构建我们的模型。
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: I know… I know… it might seem like a lot, but let’s break it down together!
    We initialize a sequential model called network.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道……我知道……这可能看起来很多，但让我们一起拆解它！我们初始化一个名为 network 的顺序模型。
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: And we add our NN layers. For this example, we will be using dense layers. A
    dense layer simply means that each neuron receives input from all the neurons
    in the previous layer. [784] and [10] refer to the dimensionality of the output
    space, we can think of this as the number of inputs for the subsequent layers,
    and since we are trying to solve a classification problem with 10 possible categories
    (numbers 0 to 9) the final layer has a potential output of 10 units. The activation
    parameter refers to the activation function we want to use, in essence, an activation
    function calculates an output based on a given input. And finally, the input shape
    of [28 * 28] refers to the image’s pixel width and height.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们添加我们的神经网络层。在这个示例中，我们将使用密集层。密集层意味着每个神经元都从前一层的所有神经元接收输入。[784] 和 [10] 代表输出空间的维度，我们可以将其视为后续层的输入数量，由于我们正在尝试解决一个有
    10 个可能类别（数字 0 到 9）的分类问题，因此最终层有 10 个单元的潜在输出。激活参数指我们想使用的激活函数，本质上，激活函数基于给定的输入计算输出。最后，[28
    * 28] 的输入形状指的是图像的像素宽度和高度。
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Once our model is defined, and we have added our NN layers, we simply compile
    the model with our optimizer of choice, our loss function of choice, and the metrics
    we want to use to judge our model’s performance.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们的模型定义完毕，并且我们添加了神经网络层，我们只需使用选择的优化器、选择的损失函数和评估指标来编译模型。
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Congratulations!!! You’ve just built your first Neural Network!!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！！！你刚刚构建了第一个神经网络！！
- en: Now you still might have some questions, such as; What are relu and softmax?
    and Who the hell is adam? And those are all valid questions… An in-depth explanation
    of these falls slightly out of scope for our initial journey into NN but we will
    cover these in later posts.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可能还有一些问题，例如；什么是relu和softmax？还有，谁是adam？这些都是有效的问题……这些问题的深入解释稍微超出了我们最初进入神经网络的范围，但我们会在后续的文章中进行讲解。
- en: Before we can feed our data into our newly created model we will need to reshape
    our input into a format that the model can read. The original shape of our input
    was [60000, 28, 28] which essentially represents 60000 images with a pixel height
    and width of 28 x 28\. We can reshape our data and split it between train [60000]
    images and test [10000] images.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在将数据输入到新创建的模型之前，我们需要将输入数据重新调整为模型可以读取的格式。我们输入数据的原始形状是[60000, 28, 28]，这本质上表示60000张像素高度和宽度为28
    x 28的图像。我们可以重新调整数据形状，并将其分为训练用的[60000]张图像和测试用的[10000]张图像。
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In addition to reshaping our data, we will also need to encode it. For this
    example, we will use categorical encoding, which in essence turns a number of
    features in numerical representations.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 除了重新调整数据外，我们还需要对其进行编码。在这个示例中，我们将使用分类编码，本质上将多个特征转化为数值表示。
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: With our dataset split into a training and test set, with our model compiled
    and with our data reshaped and encoded, we are now ready to train our NN! To do
    this we will call the *fit *function and pass in our required parameters.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的数据集被分为训练集和测试集，模型已经编译，并且数据已经重新调整和编码，我们现在准备训练神经网络！为此，我们将调用*fit*函数，并传入所需的参数。
- en: '[PRE9]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We pass in our training images and their labels as well as epochs, which dictate
    the number of backward and forward propagations, and the batch_size, which indicates
    the number of training samples per backward/forward propagation.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们传入训练图像及其标签，以及epoch，这决定了前向传播和反向传播的次数，还有batch_size，这表示每次前向/反向传播的训练样本数量。
- en: We will also want to set our performance measuring parameters so we can identify
    how well our model is working.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要设置性能测量参数，以便识别模型的表现如何。
- en: '[PRE10]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: And voila!!! You have just written your own Neural Network, reshaped and encoded
    a dataset and fit your model to train! When you run the Python script for the
    first time Keras will download the MNIST dataset and begin training for 5 epochs!
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，瞧！！！你刚刚编写了自己的神经网络，重新调整和编码了数据集，并使模型进行训练！当你第一次运行Python脚本时，Keras将下载MNIST数据集并开始训练5个周期！
- en: '![Figure](../Images/887944752d7aef7096225a9f70ea6bb1.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/887944752d7aef7096225a9f70ea6bb1.png)'
- en: Training cycle with Test output
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 训练周期与测试输出
- en: You should get an accuracy of around 98 percent for your test accuracy, which
    means that the model has predicted the correct digit 98 percent of the time while
    running its tests, not bad for your first NN! In practice, you’ll want to look
    at both the testing and training results to get a good idea if your model is overfitted/underfitted.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 对于你的测试准确率，你应该得到大约98%的准确度，这意味着模型在测试时98%的情况下预测了正确的数字，对于你的第一个神经网络来说，这并不差！实际上，你还需要查看测试和训练结果，以便更好地判断你的模型是否过拟合/欠拟合。
- en: I’d encourage you to play around with the number of layers, the optimizer and
    loss function, as well as the epoch and batch_size to see what the impact of each
    would be to your model’s overall performance!
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我鼓励你尝试调整层数、优化器和损失函数，以及epoch和batch_size，以查看每个因素对模型整体性能的影响！
- en: You’ve just taken the difficult first step in your long and exciting learning
    journey! Feel free to reach out for any additional clarification or feedback!
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 你刚刚迈出了在漫长而激动人心的学习旅程中的困难第一步！如果需要任何额外的澄清或反馈，请随时联系！
- en: Thanks for reading — and stay curious! ????
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读——保持好奇！????
- en: '**Bio: David Gündisch** is a Cloud Architect. He is passionate about researching
    the applications of Artificial Intelligence within the fields of Philosophy, Psychology
    and Cyber Security.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**Bio: David Gündisch** 是一位云架构师。他对研究人工智能在哲学、心理学和网络安全领域的应用充满热情。'
- en: '[Original](https://towardsdatascience.com/writing-your-first-neural-net-in-less-than-30-lines-of-code-with-keras-18e160a35502).
    Reposted with permission.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/writing-your-first-neural-net-in-less-than-30-lines-of-code-with-keras-18e160a35502)。经许可转载。'
- en: '**Related:**'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关内容：**'
- en: '[Introduction to Artificial Neural Networks](/2019/10/introduction-artificial-neural-networks.html)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[人工神经网络简介](/2019/10/introduction-artificial-neural-networks.html)'
- en: '[A Gentle Introduction to PyTorch 1.2](/2019/09/gentle-introduction-pytorch-12.html)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[温和介绍PyTorch 1.2](/2019/09/gentle-introduction-pytorch-12.html)'
- en: '[TensorFlow vs PyTorch vs Keras for NLP](/2019/09/tensorflow-pytorch-keras-nlp.html)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TensorFlow与PyTorch与Keras在自然语言处理中的对比](/2019/09/tensorflow-pytorch-keras-nlp.html)'
- en: '* * *'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的IT需求'
- en: '* * *'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Multi-modal deep learning in less than 15 lines of code](https://www.kdnuggets.com/2023/01/predibase-multi-modal-deep-learning-less-15-lines-code.html)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[少于15行代码的多模态深度学习](https://www.kdnuggets.com/2023/01/predibase-multi-modal-deep-learning-less-15-lines-code.html)'
- en: '[Building and Training Your First Neural Network with TensorFlow and Keras](https://www.kdnuggets.com/2023/05/building-training-first-neural-network-tensorflow-keras.html)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用TensorFlow和Keras构建和训练你的第一个神经网络](https://www.kdnuggets.com/2023/05/building-training-first-neural-network-tensorflow-keras.html)'
- en: '[Machine Learning Algorithms Explained in Less Than 1 Minute Each](https://www.kdnuggets.com/2022/07/machine-learning-algorithms-explained-less-1-minute.html)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[一分钟内解释的机器学习算法](https://www.kdnuggets.com/2022/07/machine-learning-algorithms-explained-less-1-minute.html)'
- en: '[KDnuggets News, July 20: Machine Learning Algorithms Explained in…](https://www.kdnuggets.com/2022/n29.html)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets新闻，7月20日：机器学习算法解释…](https://www.kdnuggets.com/2022/n29.html)'
- en: '[Become a Business Intelligence Analyst in Less Than 6 Months](https://www.kdnuggets.com/become-a-business-intelligence-analyst-in-less-than-6-months)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在不到6个月的时间内成为商业智能分析师](https://www.kdnuggets.com/become-a-business-intelligence-analyst-in-less-than-6-months)'
- en: '[Mastering Python: 7 Strategies for Writing Clear, Organized, and…](https://www.kdnuggets.com/mastering-python-7-strategies-for-writing-clear-organized-and-efficient-code)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[掌握Python：编写清晰、组织良好的代码的7个策略](https://www.kdnuggets.com/mastering-python-7-strategies-for-writing-clear-organized-and-efficient-code)'
