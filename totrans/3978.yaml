- en: How to Perform Matrix Operations with NumPy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 NumPy 执行矩阵操作
- en: 原文：[https://www.kdnuggets.com/how-to-perform-matrix-operations-with-numpy](https://www.kdnuggets.com/how-to-perform-matrix-operations-with-numpy)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/how-to-perform-matrix-operations-with-numpy](https://www.kdnuggets.com/how-to-perform-matrix-operations-with-numpy)
- en: '![How to Perform Matrix Operations with NumPy](../Images/9bd1f47928182ebd9c497268f612cfd6.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![如何使用 NumPy 执行矩阵操作](../Images/9bd1f47928182ebd9c497268f612cfd6.png)'
- en: Photo by [Vlado Paunovic](https://unsplash.com/photos/black-and-white-checkered-illustration-iBG594vhR1k)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Vlado Paunovic](https://unsplash.com/photos/black-and-white-checkered-illustration-iBG594vhR1k)
    提供
- en: NumPy is a powerful Python library that contains a large collection of mathematical
    functions, and supports the creation of matrices and multi-dimensional arrays
    to which these mathematical functions can be applied.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 是一个强大的 Python 库，包含大量数学函数，并支持创建可以应用这些数学函数的矩阵和多维数组。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: In this short tutorial, you will learn how to perform several of the most basic
    matrix operations with NumPy.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个简短的教程中，你将学习如何使用 NumPy 执行几种最基本的矩阵操作。
- en: Matrices and Arrays in NumPy
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NumPy 中的矩阵和数组
- en: In NumPy, a matrix is defined as a specialised array that is strictly 2-dimensional,
    and which retains its 2-dimensionality following the application of mathematical
    operations. A matrix of this type can be implemented using the `np.matrix` class,
    however NumPy no longer recommends use of this class as it may be removed in the
    future. The alternative option that is recommended by NumPy is to use the N-dimensional
    array type, `ndarray`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在 NumPy 中，矩阵被定义为一种专门的数组，严格为二维，并且在应用数学操作后保持其二维性。此类型的矩阵可以使用 `np.matrix` 类实现，但
    NumPy 不再推荐使用此类，因为它可能在将来被移除。NumPy 推荐的替代选项是使用 N 维数组类型 `ndarray`。
- en: The key difference between an ndarray and a matrix in NumPy is that the former
    can be of any dimensionality, and its use is not restricted to 2-dimensional operations.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在 NumPy 中，ndarray 和矩阵的主要区别在于前者可以是任何维度的，并且其使用不局限于二维操作。
- en: Hence, in this tutorial we shall be focusing on implementing several basic matrix
    operations on 2-dimensional arrays, created using `np.ndarray`
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在本教程中，我们将重点实施对二维数组的几种基本矩阵操作，这些数组是使用 `np.ndarray` 创建的。
- en: Creating NumPy Arrays
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建 NumPy 数组
- en: 'Let’s first import the NumPy package and then proceed to create two, 2-dimensional
    arrays that are composed of two rows and three columns each. These arrays will
    be used in the ensuing examples of this tutorial:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 首先导入 NumPy 包，然后创建两个由两行三列组成的二维数组。这些数组将在本教程的后续示例中使用：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `shape` attribute lets us confirm the array’s dimensions:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`shape` 属性让我们确认数组的维度：'
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Output:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Basic Array Operations
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本数组操作
- en: NumPy provides its own functions to perform element-wise addition, subtraction,
    division and multiplication of arrays. In addition, Numpy also leverages Python’s
    arithmetic operators by extending their functionality to handle element-wise array
    operations.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 提供了自己的函数来执行数组的逐元素加法、减法、除法和乘法。此外，NumPy 还通过扩展 Python 的算术运算符的功能来处理逐元素数组操作。
- en: Let’s start with element-wise addition between the arrays `a1` and `a2` as an
    example.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以数组 `a1` 和 `a2` 之间的逐元素加法为例开始。
- en: 'Element-wise addition of two arrays can be achieved by making use of the `np.add`
    function or the overloaded `+` operator:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 `np.add` 函数或重载的 `+` 运算符，可以实现两个数组的逐元素加法：
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'By printing out the results, it may be confirmed that they both produce the
    same output:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 通过打印结果，可以确认它们都产生了相同的输出：
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Output:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'However, if we had to time them, we can notice a small difference:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果我们对它们进行计时，会发现一点小差异：
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Output:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Here it may be seen that the NumPy `np.add` function performs slightly slower
    than the `+` operator. This is mainly because the add function introduces type-checking
    to convert any *array_like* inputs (such as lists) into arrays before performing
    the addition operation. This, in turn, introduces an extra computational overhead
    over the `+` operator.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里可以看到，NumPy的`np.add`函数的性能略低于`+`运算符。这主要是因为add函数引入了类型检查，将任何*类似数组*的输入（如列表）转换为数组，然后再进行加法操作。这也就带来了额外的计算开销，相较于`+`运算符。
- en: However, such measure also makes the `np.add` function less prone to error.
    For instance, applying `np.add` to inputs of type `list` still works (e.g. `np.add([1,
    1], [2, 2])`), whereas applying the `+` operator results in list concatenation.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这种措施也使得`np.add`函数更不容易出错。例如，将`np.add`应用于`list`类型的输入仍然有效（例如`np.add([1, 1],
    [2, 2])`），而使用`+`运算符则会导致列表连接。
- en: Similarly for element-wise subtraction (using `np.subtract` or `-`), division
    (using `np.divide` or `/`) and multiplication (using `np.multiply` or `*`), the
    NumPy functions perform type-checking, introducing a small computational overhead.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，对于逐元素减法（使用`np.subtract`或`-`），除法（使用`np.divide`或`/`）和乘法（使用`np.multiply`或`*`），NumPy函数会进行类型检查，引入少量计算开销。
- en: Several other operations that may come in handy include transposing and multiplying
    arrays.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 其他几个可能有用的操作包括转置和乘法数组。
- en: 'Matrix transposition results in an orthogonal rotation of the matrix, and can
    be achieved using the `np.transpose` function (which includes type-checking) or
    the `.T` attribute:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵转置会导致矩阵的正交旋转，可以使用`np.transpose`函数（它包含类型检查）或`.T`属性来实现：
- en: '[PRE8]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Matrix multiplication can be performed using the `np.dot` function or the `@`
    operator (the latter implements the `np.matmul` function from Python 3.5 onwards):'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵乘法可以使用`np.dot`函数或`@`运算符（后者从Python 3.5开始实现了`np.matmul`函数）：
- en: '[PRE9]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: When working with 2-dimensional arrays, `np.dot` and `np.matmul` perform identically
    and both include type-checking.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理二维数组时，`np.dot`和`np.matmul`的表现是一样的，并且都包含类型检查。
- en: Additional Resources
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 额外资源
- en: '[NumPy Array Objects](https://numpy.org/doc/stable/reference/arrays.html)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[NumPy数组对象](https://numpy.org/doc/stable/reference/arrays.html)'
- en: '[A Gentle Introduction to NumPy Arrays in Python](https://machinelearningmastery.com/gentle-introduction-n-dimensional-arrays-python-numpy/)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python中NumPy数组的温和介绍](https://machinelearningmastery.com/gentle-introduction-n-dimensional-arrays-python-numpy/)'
- en: '**[Stefania Cristina](https://www.linkedin.com/in/stefania-cristina-b3b7aa57)**,
    PhD, is a Senior Lecturer with the Department of Systems and Control Engineering
    at the University of Malta. Her research interests lie within the domains of computer
    vision and machine learning.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Stefania Cristina](https://www.linkedin.com/in/stefania-cristina-b3b7aa57)**，博士，是马耳他大学系统与控制工程系的高级讲师。她的研究兴趣集中在计算机视觉和机器学习领域。'
- en: More On This Topic
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[How to Perform Memory-Efficient Operations on Large Datasets with Pandas](https://www.kdnuggets.com/how-to-perform-memory-efficient-operations-on-large-datasets-with-pandas)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何在大数据集上进行内存高效的操作](https://www.kdnuggets.com/how-to-perform-memory-efficient-operations-on-large-datasets-with-pandas)'
- en: '[Vector and Matrix Norms with NumPy Linalg Norm](https://www.kdnuggets.com/2023/05/vector-matrix-norms-numpy-linalg-norm.html)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[NumPy Linalg Norm中的向量和矩阵范数](https://www.kdnuggets.com/2023/05/vector-matrix-norms-numpy-linalg-norm.html)'
- en: '[Elevate Math Efficiency: Navigating Numpy Array Operations](https://www.kdnuggets.com/elevate-math-efficiency-navigating-numpy-array-operations)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[提升数学效率：驾驭NumPy数组操作](https://www.kdnuggets.com/elevate-math-efficiency-navigating-numpy-array-operations)'
- en: '[Using NumPy to Perform Date and Time Calculations](https://www.kdnuggets.com/using-numpy-to-perform-date-and-time-calculations)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用NumPy进行日期和时间计算](https://www.kdnuggets.com/using-numpy-to-perform-date-and-time-calculations)'
- en: '[Sparse Matrix Representation in Python](https://www.kdnuggets.com/2020/05/sparse-matrix-representation-python.html)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python中的稀疏矩阵表示](https://www.kdnuggets.com/2020/05/sparse-matrix-representation-python.html)'
- en: '[Idiot''s Guide to Precision, Recall, and Confusion Matrix](https://www.kdnuggets.com/2020/01/guide-precision-recall-confusion-matrix.html)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[傻瓜指南：精准率、召回率和混淆矩阵](https://www.kdnuggets.com/2020/01/guide-precision-recall-confusion-matrix.html)'
