- en: 'LangChain 101: Build Your Own GPT-Powered Applications'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'LangChain 101: 构建你自己的 GPT 驱动应用程序'
- en: 原文：[https://www.kdnuggets.com/2023/04/langchain-101-build-gptpowered-applications.html](https://www.kdnuggets.com/2023/04/langchain-101-build-gptpowered-applications.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2023/04/langchain-101-build-gptpowered-applications.html](https://www.kdnuggets.com/2023/04/langchain-101-build-gptpowered-applications.html)
- en: '![LangChain 101: Build Your Own GPT-Powered Applications](../Images/0711fa973721b2a2cd780e3a29c65d3f.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![LangChain 101: 构建你自己的 GPT 驱动应用程序](../Images/0711fa973721b2a2cd780e3a29c65d3f.png)'
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: The success of ChatGPT and GPT-4 have shown how large language models trained
    with reinforcement can result in scalable and powerful NLP applications.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT 和 GPT-4 的成功展示了经过强化训练的大型语言模型如何产生可扩展且强大的 NLP 应用程序。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速通道进入网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: However, the usefulness of the response depends on the prompt, which led to
    users exploring the prompt engineering space. In addition, most real-world NLP
    use cases need more sophistication than a single ChatGPT session. And here’s where
    a library like LangChain can help!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，响应的有用性依赖于提示，这导致用户探索提示工程领域。此外，大多数实际的 NLP 用例需要比单次 ChatGPT 会话更复杂的解决方案。而这正是像
    LangChain 这样的库可以提供帮助的地方！
- en: '[LangChain](https://langchain.readthedocs.io/en/latest/) is a Python library
    that helps you leverage large language models to build custom NLP applications.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[LangChain](https://langchain.readthedocs.io/en/latest/) 是一个 Python 库，帮助你利用大型语言模型构建自定义的
    NLP 应用程序。'
- en: In this guide, we’ll explore what LangChain is and what you can build with it.
    We’ll also get our feet wet by building a simple question-answering app with LangChain.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本指南中，我们将探讨 LangChain 是什么以及你可以用它构建什么。我们还将通过构建一个简单的问答应用程序来入门 LangChain。
- en: Let's get started!
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: What is LangChain?
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: LangChain 是什么？
- en: LangChain, created by [Harrison Chase](https://github.com/hwchase17), is a Python
    library that provides out-of-the-box support to build NLP applications using LLMs.
    You can connect to various data and computation sources, and build applications
    that perform NLP tasks on domain-specific data sources, private repositories,
    and much more.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: LangChain 由 [Harrison Chase](https://github.com/hwchase17) 创建，是一个 Python 库，提供开箱即用的支持，用于使用
    LLM 构建 NLP 应用程序。你可以连接各种数据和计算源，构建在特定领域数据源、私人库等上执行 NLP 任务的应用程序。
- en: As of writing this article (in March 2023), the LangChain GitHub repository
    has over 14,000 stars with more than 270 contributors from across the world.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 截至本文撰写时（2023 年 3 月），LangChain GitHub 仓库已有超过 14,000 个星标，来自世界各地的 270 多位贡献者。
- en: '![LangChain 101: Build Your Own GPT-Powered Applications](../Images/7ae145ae9ae3adccf20b6b3c17f8ef45.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![LangChain 101: 构建你自己的 GPT 驱动应用程序](../Images/7ae145ae9ae3adccf20b6b3c17f8ef45.png)'
- en: LangChain Github Star History | Generated on [star-history.com](https://star-history.com/)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: LangChain Github 星标历史 | 生成于 [star-history.com](https://star-history.com/)
- en: 'Interesting applications you can build using LangChain include (but are not
    limited to):'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 LangChain 可以构建的有趣应用程序包括（但不限于）：
- en: Chatbots
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聊天机器人
- en: Summarization and Question answering over specific domains
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 针对特定领域的总结和问答
- en: Apps that query databases to fetch info and then process them
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询数据库以获取信息然后处理的应用程序
- en: Agents that solve specific like math and reasoning puzzles
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决特定问题的代理，例如数学和推理难题
- en: An Overview of LangChain Modules
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: LangChain 模块概览
- en: 'Next let''s take a look at some of the modules in LangChain:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来让我们看看 LangChain 的一些模块：
- en: '![LangChain 101: Build Your Own GPT-Powered Applications](../Images/ae81ebf095966cabeafb4fcf86a501c8.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![LangChain 101: 构建你自己的 GPT 驱动应用程序](../Images/ae81ebf095966cabeafb4fcf86a501c8.png)'
- en: Image by Author
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: LLM
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: LLM
- en: LLM is the fundamental component of LangChain. It is essentially a wrapper around
    a large language model that helps use the functionality and capability of a specific
    large language model.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: LLM 是 LangChain 的基本组件。它本质上是一个围绕大型语言模型的封装器，帮助使用特定大型语言模型的功能和能力。
- en: Chains
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 链条
- en: As mentioned, LLM is the fundamental unit in LangChain. However, as the name
    LangChain suggests, you can chain together LLM calls depending on specific tasks.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，LLM 是 LangChain 中的基本单元。然而，正如 LangChain 这个名字所暗示的，你可以根据特定任务将 LLM 调用链接在一起。
- en: For example, you may need to get data from a specific URL, summarize the returned
    text, and answer questions using the generated summary.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可能需要从特定的 URL 获取数据，汇总返回的文本，并使用生成的摘要回答问题。
- en: The chain can also be simple. You may need to read in user input which is then
    used to construct the prompt. Which can then be used to generate a response.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 链条也可以很简单。你可能需要读取用户输入，然后用这些输入构造提示。提示可以用于生成响应。
- en: '![LangChain 101: Build Your Own GPT-Powered Applications](../Images/adb321acdc73f888f9fe26e852a544d3.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![LangChain 101: 构建你自己的 GPT 驱动应用程序](../Images/adb321acdc73f888f9fe26e852a544d3.png)'
- en: Image by Author
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Prompts
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提示
- en: Prompts are at the core of any NLP application. Even in a ChatGPT session, the
    answer is only as helpful as the prompt. To that end, LangChain provides prompt
    templates that you can use to format inputs and a lot of other utilities.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 提示是任何 NLP 应用程序的核心。即使在 ChatGPT 会话中，答案也只是与提示相关的。为此，LangChain 提供了可以用于格式化输入的提示模板以及许多其他实用工具。
- en: Document Loaders and Utils
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文档加载器和工具
- en: LangChain’s **Document Loaders** and **Utils** modules facilitate connecting
    to sources of data and computation, respectively.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: LangChain 的 **文档加载器** 和 **工具** 模块分别有助于连接数据源和计算。
- en: Suppose you have a large corpus of text on economics that you'd like to build
    an NLP app over. Your corpus may be a mix of text files, PDF documents, HTML web
    pages, images, and more. Currently, document loaders leverage the Python library
    [Unstructured](https://pypi.org/project/unstructured/) to convert these raw data
    sources into text that can be processed.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你有一大批关于经济学的文本，你希望在此基础上构建一个 NLP 应用程序。你的文本库可能是文本文件、PDF 文档、HTML 网页、图像等的混合。目前，文档加载器利用
    Python 库 [Unstructured](https://pypi.org/project/unstructured/) 将这些原始数据源转换为可以处理的文本。
- en: The utils module provides Bash and Python interpreter sessions amongst others.
    These are suitable for applications where it’ll help to interact directly with
    the underlying system. Or when we need code snippets to compute a specific mathematical
    quantity or solve a problem instead of computing answers once.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 工具模块提供了 Bash 和 Python 解释器会话等。这些适用于需要直接与底层系统交互的应用程序，或当我们需要代码片段来计算特定的数学量或解决问题时，而不是一次性计算答案。
- en: Agents
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代理
- en: We mentioned that “chains” can help chain together a sequence of LLM calls.
    In some tasks, however, the sequence of calls is often not deterministic. And
    the next step will likely be dependent on the user input and the response in the
    previous steps.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们提到过，“链条”可以帮助将一系列 LLM 调用连接在一起。然而，在某些任务中，这些调用的顺序往往不是确定的。下一步可能依赖于用户输入和前一步的响应。
- en: For such applications, the LangChain library provides “**Agents**” that can
    take actions based on inputs along the way instead of a hardcoded deterministic
    sequence.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这类应用程序，LangChain 库提供了可以根据输入在过程中采取行动的“**代理**”，而不是一个硬编码的确定性序列。
- en: In addition to the above, LangChain also offers integration with vector databases
    and has memory capabilities for maintaining state between LLM calls, and much
    more.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 除了上述功能，LangChain 还提供了与向量数据库的集成，并具备在 LLM 调用之间维护状态的内存功能，以及更多功能。
- en: Building a Question-Answering App with LangChain
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 LangChain 构建问答应用程序
- en: 'Now that we’ve gained an understanding of LangChain, let’s build a question-answering
    app using LangChain in five easy steps:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经对 LangChain 有了了解，让我们按照五个简单的步骤使用 LangChain 构建一个问答应用程序：
- en: Step 1 – Setting Up the Development Environment
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第一步 – 设置开发环境
- en: Before we get coding, let’s set up the development environment. I assume you
    already have Python installed in your working environment.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始编码之前，让我们设置开发环境。我假设你已经在工作环境中安装了 Python。
- en: 'You can now install the LangChain library using pip:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以使用 pip 安装 LangChain 库：
- en: '[PRE0]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'As we’ll be using OpenAI’s language models, we need to install the OpenAI SDK
    as well:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们将使用 OpenAI 的语言模型，我们还需要安装 OpenAI SDK：
- en: '[PRE1]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Step 2 – Setting the OPENAI_API_KEY as an Environment Variable
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第二步 – 将 OPENAI_API_KEY 设置为环境变量
- en: Next, sign into your OpenAI account. Navigate to account settings > **View API
    Keys**. Generate a secret key and copy it.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，登录你的OpenAI账户。导航到账户设置 > **查看API密钥**。生成一个密钥并复制它。
- en: 'In your Python script, use the **os** module and tap into the dictionary of
    environment variables, `os.environ`. Set the "OPENAI_API_KEY" to your to the secret
    API key that you just copied:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的Python脚本中，使用**os**模块并访问环境变量字典`os.environ`。将“OPENAI_API_KEY”设置为你刚刚复制的秘密API密钥：
- en: '[PRE2]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Step 3 – Simple LLM Call Using LangChain
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 3 – 使用LangChain进行简单的LLM调用
- en: Now that we’ve installed the required libraries, let's see how to make a simple
    LLM call using LangChain.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经安装了所需的库，让我们看看如何使用LangChain进行一个简单的LLM调用。
- en: 'To do so, let’s import the OpenAI wrapper. In this example, we’ll use the text-davinci-003
    model:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，让我们导入OpenAI包装器。在这个示例中，我们将使用text-davinci-003模型：
- en: '[PRE3]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '“**text-davinci-003**: Can do any language task with better quality, longer
    output, and consistent instruction-following than the curie, babbage, or ada models.
    Also supports [inserting](https://platform.openai.com/docs/guides/completion/inserting-text)
    completions within text.” – [OpenAI Docs](https://platform.openai.com/docs/models/gpt-3-5)'
  id: totrans-63
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '“**text-davinci-003**: 相比于curie、babbage或ada模型，可以更好地完成任何语言任务，提供更长的输出和一致的指令跟随。还支持在文本中[插入](https://platform.openai.com/docs/guides/completion/inserting-text)补全。”
    – [OpenAI文档](https://platform.openai.com/docs/models/gpt-3-5)'
- en: 'Let''s define a question string and generate a response:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们定义一个问题字符串并生成一个响应：
- en: '[PRE4]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Step 4 – Creating a Prompt Template
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 4 – 创建一个提示模板
- en: 'Let''s ask another question on the top resources to learn a new programming
    language, say, Golang:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们问另一个问题，关于学习一种新的编程语言，比如Golang：
- en: '[PRE6]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: While this works fine for starters, it quickly becomes repetitive when we’re
    trying to curate a list of resources to learn a list of programming languages
    and tech stacks.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这对初学者来说效果不错，但当我们试图整理一份学习编程语言和技术栈的资源列表时，它很快变得重复。
- en: Here’s where prompt templates come in handy. You can create a template that
    can be formatted using one or more input variables.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是提示模板的用武之地。你可以创建一个可以使用一个或多个输入变量格式化的模板。
- en: 'We can create a simple template to get the top k resources to learn any tech
    stack. Here, we use the `k` and `this`  as `input_variables`:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以创建一个简单的模板，以获取学习任何技术栈的前k个资源。在这里，我们使用`k`和`this`作为`input_variables`：
- en: '[PRE8]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Step 5 – Running Our First LLM Chain
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 5 – 运行我们的第一个LLM链
- en: We now have an LLM and a prompt template that we can reuse across multiple LLM
    calls.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在有了一个LLM和一个可以在多个LLM调用中重用的提示模板。
- en: '[PRE9]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Let’s go ahead and create an LLMChain:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续创建一个LLMChain：
- en: '[PRE10]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You can now pass in the inputs as a dictionary and run the LLM chain as shown:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以将输入作为字典传入，并按如下所示运行LLM链：
- en: '[PRE11]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Summing Up
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: And that’s a wrap! You know how to use LangChain to build a simple Q&A app.
    I hope you’ve gained a cursory understanding of LangChain’s capabilities. As a
    next step, try exploring LangChain to build more interesting applications. Happy
    coding!
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！你知道如何使用LangChain构建一个简单的问答应用程序。我希望你对LangChain的功能有了初步的了解。作为下一步，尝试探索LangChain来构建更有趣的应用程序。编程愉快！
- en: References and Further Learning
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料及进一步学习
- en: '[LangChain Documentation](https://langchain.readthedocs.io/en/latest/)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[LangChain文档](https://langchain.readthedocs.io/en/latest/)'
- en: '[LangChain Quickstart Guide](https://langchain.readthedocs.io/en/latest/modules/prompts/getting_started.html)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[LangChain快速入门指南](https://langchain.readthedocs.io/en/latest/modules/prompts/getting_started.html)'
- en: '[LangChain Demo + Q&A with Harrison Chase](https://www.youtube.com/watch?v=zaYTXQFR0_s)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[LangChain演示 + 与Harrison Chase的问答](https://www.youtube.com/watch?v=zaYTXQFR0_s)'
- en: Chase, H. (2022). LangChain [Computer software]. https://github.com/hwchase17/langchain
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chase, H. (2022). LangChain [计算机软件]. https://github.com/hwchase17/langchain
- en: '**[Bala Priya C](https://www.linkedin.com/in/bala-priya/)** is a technical
    writer who enjoys creating long-form content. Her areas of interest include math,
    programming, and data science. She shares her learning with the developer community
    by authoring tutorials, how-to guides, and more.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Bala Priya C](https://www.linkedin.com/in/bala-priya/)** 是一位技术作家，喜欢创建长篇内容。她的兴趣领域包括数学、编程和数据科学。她通过撰写教程、操作指南等向开发者社区分享她的学习成果。'
- en: More On This Topic
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Build Your Own PandasAI with LlamaIndex](https://www.kdnuggets.com/build-your-own-pandasai-with-llamaindex)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用LlamaIndex构建自己的PandasAI](https://www.kdnuggets.com/build-your-own-pandasai-with-llamaindex)'
- en: '[LangChain + Streamlit + Llama: Bringing Conversational AI to Your…](https://www.kdnuggets.com/2023/08/langchain-streamlit-llama-bringing-conversational-ai-local-machine.html)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[LangChain + Streamlit + Llama：将对话式 AI 带到你的本地机器上](https://www.kdnuggets.com/2023/08/langchain-streamlit-llama-bringing-conversational-ai-local-machine.html)'
- en: '[How to Make Large Language Models Play Nice with Your Software…](https://www.kdnuggets.com/how-to-make-large-language-models-play-nice-with-your-software-using-langchain)'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何让大型语言模型与你的软件和谐共处……](https://www.kdnuggets.com/how-to-make-large-language-models-play-nice-with-your-software-using-langchain)'
- en: '[KDnuggets News March 9, 2022: Build a Machine Learning Web App in 5…](https://www.kdnuggets.com/2022/n10.html)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻 2022年3月9日：在5分钟内构建机器学习网页应用……](https://www.kdnuggets.com/2022/n10.html)'
- en: '[Make Your Own GPTs with ChatGPT''s GPTs!](https://www.kdnuggets.com/make-your-own-gpts-with-chatgpts-gpts)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 ChatGPT 的 GPTs 自制属于自己的 GPTs！](https://www.kdnuggets.com/make-your-own-gpts-with-chatgpts-gpts)'
- en: '[LangChain Cheat Sheet](https://www.kdnuggets.com/2023/08/langchain-cheat-sheet.html)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[LangChain 备忘单](https://www.kdnuggets.com/2023/08/langchain-cheat-sheet.html)'
