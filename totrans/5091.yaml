- en: 'Algorithmia Tested: Human vs Automated Tag Generation'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2015/04/algorithmia-tested-automated-tag-generation.html/2](https://www.kdnuggets.com/2015/04/algorithmia-tested-automated-tag-generation.html/2)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Conclusions – Tagging**'
  prefs: []
  type: TYPE_NORMAL
- en: The results are interesting. For the tags, it seems much of the categorization
    done when writing articles is automatically extracted by Algorithmia. For example,
    most articles in the [news](/news/index.html) category on KDnuggets are given
    the **news** tag. Also, the automatically generated tags are sometimes very specific
    to the article. For example, the tag “treenet” was generated for these articles
    in [May](/2014/05/video-series-data-mining-for-statisticians.html) and [January](/2014/01/data-mining-for-beginners-boot-camp-salford-video-series.html)
    2014, five months apart. I’d expect a human editor wouldn’t make these connections,
    and this shows one of the big benefits you can reap from machine-generated tags.
  prefs: []
  type: TYPE_NORMAL
- en: 'Table 1: Top Tags by Frequency'
  prefs: []
  type: TYPE_NORMAL
- en: '| Rank | Hand Generated | Machine Generated |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | Big Data (2.0%) | Data (5.2%) |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | Machine Learning (1.8%) | Analytics (2.4%) |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | Hadoop (1.4%) | Data Analytics (1.9%) |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | Data Science (1.4%) | Big (1.7%) |'
  prefs: []
  type: TYPE_TB
- en: '| 5 | Deep Learning (1.2%) | News (1.6%) |'
  prefs: []
  type: TYPE_TB
- en: '| 6 | Interview (1.0%) | Big Data (1.5%) |'
  prefs: []
  type: TYPE_TB
- en: '| 7 | R (1.0%) | Data News (1.3%) |'
  prefs: []
  type: TYPE_TB
- en: '| 8 | Data Mining (0.9%) | Mining (1.2%) |'
  prefs: []
  type: TYPE_TB
- en: '| 9 | Data Science (0.9%) | Science (1.2%) |'
  prefs: []
  type: TYPE_TB
- en: '| 10 | Analytics (0.8%) | Data Mining (1.2%) |'
  prefs: []
  type: TYPE_TB
- en: The table above paints a picture that the machine generated and hand tags do
    diverge to some degree. Many of the top tags are similar like **data science**,
    **data mining** and **big data**.
  prefs: []
  type: TYPE_NORMAL
- en: But the itemset-generated tags tend to be distributed more heavily towards the
    more common tags.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '"Data" alone accounts for 5.2% of those tags. This makes the some of the machine-generated
    tags somewhat less useful. But this also goes along in the same vein as having
    common tags used as high-level classifications of posts. Note that "KDnuggets"
    was an extremely common tag in the machine tags, but was removed because of the
    redundancy of tagging posts from KDnuggets with the name of the site.'
  prefs: []
  type: TYPE_NORMAL
- en: One weakness of the automatic tag generation is that irrelevant tags that aren’t
    in most lists of stop words aren’t caught. The most obvious examples are the link
    shorteners `buff.ly` and `shrd.by` which are common in top twitter posts. On top
    of this, every permutation of **big, data, science, mining, analytics**, and **social**,
    can show up, which is again partially attributable to data cleaning. To make the
    automatic tags more palatable, a more site-specific list of stop words would be
    required.
  prefs: []
  type: TYPE_NORMAL
- en: With this in mind, I think the optimal workflow would involve some degree of
    human tagging augmented by machine tagging after the fact. Perhaps rerunning the
    tagging algorithm offline every month on the whole corpus to draw connections
    between articles that may not come to mind immediately to a human tagger when
    publishing.
  prefs: []
  type: TYPE_NORMAL
- en: '**Conclusions – Algorithmia**'
  prefs: []
  type: TYPE_NORMAL
- en: The more interesting results to talk about are the experience using Algorithmia.
    The overall experience was very pleasant. Having experience writing in a language
    Algorithmia supports (Python, Java, or JavaScript) is really the only prerequisite
    to using it. This is a good thing, because it shows that they set up the service
    to work well with the existing ecosystems, which is integral in making sure you’re
    productive as quickly as possible.
  prefs: []
  type: TYPE_NORMAL
- en: The online editors work how you’d expect for the language, with the Python editor
    being quick and offering good autocomplete. Accessing the API created around your
    algorithm is really easy, and it’s nice that a lot of the sample generation is
    done for you. There is one part of this process that wasn’t entirely clear – turning
    and algorithm from private to public – but this was easy to figure out after trying
    to publish a new minor revision and seeing the option.
  prefs: []
  type: TYPE_NORMAL
- en: It will be interesting to watch this platform develop. I could imagine research
    papers publishing an online version of their algorithm as a sort of demo. This
    would be great to see and would impress me as a reader. I could also see companies
    using Algorithmia to offload some work to the cloud. For example, if an algorithm
    needed to be run intermittently (so as to not necessitate its own hardware), but
    might need to be called on-demand, Algorithmia would be a good option. Working
    with Algorithmia has been a pleasure and I’d definitely recommend it to friends.
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Algorithmia – How Marketplaces are Fostering Innovation?](/2015/04/algorithmia-marketplace-innovation.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets Review of Analytics Marketplaces: The Next Big Thing for Big Data](/2013/11/kdnuggets-review-analytics-marketplaces-next-big-thing-for-big-data.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Poll: Machine Learning APIs](/2015/04/poll-machine-learning-apis.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Retrieval Augmented Generation: Where Information Retrieval Meets…](https://www.kdnuggets.com/retrieval-augmented-generation-where-information-retrieval-meets-text-generation)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bark: The Ultimate Audio Generation Model](https://www.kdnuggets.com/2023/05/bark-ultimate-audio-generation-model.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Future of AI: Exploring the Next Generation of Generative Models](https://www.kdnuggets.com/2023/05/future-ai-exploring-next-generation-generative-models.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Unveiling Midjourney 5.2: A Leap Forward in AI Image Generation](https://www.kdnuggets.com/2023/06/unveiling-midjourney-52-leap-forward.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Text-2-Video Generation: Step-by-Step Guide](https://www.kdnuggets.com/2023/08/text2video-generation-stepbystep-guide.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How Retrieval Augment Generation Makes LLMs Smarter](https://www.kdnuggets.com/how-retrieval-augment-generation-makes-llms-smarter)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
