["```py\n!pip install -U spacy-nightly --pre\n```", "```py\n!pip install -U pip setuptools wheel\n!python -m spacy project clone tutorials/rel_component\n```", "```py\n!python -m spacy download en_core_web_trf\n!pip install -U spacy transformers\n```", "```py\ntrain_file: \"data/relations_training.spacy\"dev_file: \"data/relations_dev.spacy\"test_file: \"data/relations_test.spacy\"\n```", "```py\n[components.transformer.model]@architectures = \"spacy-transformers.TransformerModel.v1\"name = \"roberta-base\" # Transformer model from huggingfacetokenizer_config = {\"use_fast\": true}\n```", "```py\n[components.relation_extractor.model.create_instance_tensor.get_instances]@misc = \"rel_instance_generator.v1\"max_length = 20\n```", "```py\n!spacy project run train_gpu # command to train train transformers\n!spacy project run evaluate # command to evaluate on test dataset\n```", "```py\n!spacy project run train_cpu # command to train train tok2vec\n!spacy project run evaluate\n```", "```py\n# Transformer model\n\"performance\":{\"rel_micro_p\":0.8476190476,\"rel_micro_r\":0.9468085106,\"rel_micro_f\":0.8944723618,}\n# Tok2vec model\n  \"performance\":{\"rel_micro_p\":0.8604651163,\"rel_micro_r\":0.7872340426,\"rel_micro_f\":0.8222222222,}\n```", "```py\nimport spacynlp = spacy.load(\"NER Model Repo/model-best\")Text=['''2+ years of non-internship professional software development experience\nProgramming experience with at least one modern language such as Java, C++, or C# including object-oriented design.1+ years of experience contributing to the architecture and design (architecture, design patterns, reliability and scaling) of new and current systems.Bachelor / MS Degree in Computer Science. Preferably a PhD in data science.8+ years of professional experience in software development. 2+ years of experience in project management.Experience in mentoring junior software engineers to improve their skills, and make them more effective, product software engineers.Experience in data structures, algorithm design, complexity analysis, object-oriented design.3+ years experience in at least one modern programming language such as Java, Scala, Python, C++, C#Experience in professional software engineering practices & best practices for the full software development life cycle, including coding standards, code reviews, source control management, build processes, testing, and operationsExperience in communicating with users, other technical teams, and management to collect requirements, describe software product features, and technical designs.Experience with building complex software systems that have been successfully delivered to customersProven ability to take a project from scoping requirements through actual launch of the project, with experience in the subsequent operation of the system in production''']for doc in nlp.pipe(text, disable=[\"tagger\"]):   print(f\"spans: {[(e.start, e.text, e.label_) for e in doc.ents]}\")\n```", "```py\nspans: [(0, '2+ years', 'EXPERIENCE'), (7, 'professional software development', 'SKILLS'), (12, 'Programming', 'SKILLS'), (22, 'Java', 'SKILLS'), (24, 'C++', 'SKILLS'), (27, 'C#', 'SKILLS'), (30, 'object-oriented design', 'SKILLS'), (36, '1+ years', 'EXPERIENCE'), (41, 'contributing to the', 'SKILLS'), (46, 'design', 'SKILLS'), (48, 'architecture', 'SKILLS'), (50, 'design patterns', 'SKILLS'), (55, 'scaling', 'SKILLS'), (60, 'current systems', 'SKILLS'), (64, 'Bachelor', 'DIPLOMA'), (68, 'Computer Science', 'DIPLOMA_MAJOR'), (75, '8+ years', 'EXPERIENCE'), (82, 'software development', 'SKILLS'), (88, 'mentoring junior software engineers', 'SKILLS'), (103, 'product software engineers', 'SKILLS'), (110, 'data structures', 'SKILLS'), (113, 'algorithm design', 'SKILLS'), (116, 'complexity analysis', 'SKILLS'), (119, 'object-oriented design', 'SKILLS'), (135, 'Java', 'SKILLS'), (137, 'Scala', 'SKILLS'), (139, 'Python', 'SKILLS'), (141, 'C++', 'SKILLS'), (143, 'C#', 'SKILLS'), (148, 'professional software engineering', 'SKILLS'), (151, 'practices', 'SKILLS'), (153, 'best practices', 'SKILLS'), (158, 'software development', 'SKILLS'), (164, 'coding', 'SKILLS'), (167, 'code reviews', 'SKILLS'), (170, 'source control management', 'SKILLS'), (174, 'build processes', 'SKILLS'), (177, 'testing', 'SKILLS'), (180, 'operations', 'SKILLS'), (184, 'communicating', 'SKILLS'), (193, 'management', 'SKILLS'), (199, 'software product', 'SKILLS'), (204, 'technical designs', 'SKILLS'), (210, 'building complex software systems', 'SKILLS'), (229, 'scoping requirements', 'SKILLS')]\n```", "```py\nimport randomimport typerfrom pathlib import Pathimport spacyfrom spacy.tokens import DocBin, Docfrom spacy.training.example import Examplefrom rel_pipe import make_relation_extractor, score_relationsfrom rel_model import create_relation_model, create_classification_layer, create_instances, create_tensors# We load the relation extraction (REL) modelnlp2 = spacy.load(\"training/model-best\")# We take the entities generated from the NER pipeline and input them to the REL pipelinefor name, proc in nlp2.pipeline:\n          doc = proc(doc)# Here, we split the paragraph into sentences and apply the relation extraction for each pair of entities found in each sentence.for value, rel_dict in doc._.rel.items():\n        for sent in doc.sents:\n          for e in sent.ents:\n            for b in sent.ents:\n              if e.start == value[0] and b.start == value[1]:\n                if rel_dict['EXPERIENCE_IN'] >=0.9 :\n                  print(f\" entities: {e.text, b.text} --> predicted relation: {rel_dict}\")\n```", "```py\n\"entities\":(\"2+ years\", \"professional software development\"\") --> **predicted relation**\":\n{\"DEGREE_IN\":1.2778723e-07,\"EXPERIENCE_IN\":0.9694631}\"entities\":\"(\"\"1+ years\", \"contributing to the\"\") -->\n**predicted relation**\":\n{\"DEGREE_IN\":1.4581254e-07,\"EXPERIENCE_IN\":0.9205434}\"entities\":\"(\"\"1+ years\",\"design\"\") --> \n**predicted relation**\":\n{\"DEGREE_IN\":1.8895419e-07,\"EXPERIENCE_IN\":0.94121873}\"entities\":\"(\"\"1+ years\",\"architecture\"\") --> \n**predicted relation**\":\n{\"DEGREE_IN\":1.9635708e-07,\"EXPERIENCE_IN\":0.9399484}\"entities\":\"(\"\"1+ years\",\"design patterns\"\") --> \n**predicted relation**\":\n{\"DEGREE_IN\":1.9823732e-07,\"EXPERIENCE_IN\":0.9423302}\"entities\":\"(\"\"1+ years\", \"scaling\"\") --> \n**predicted relation**\":\n{\"DEGREE_IN\":1.892173e-07,\"EXPERIENCE_IN\":0.96628445}entities: ('2+ years', 'project management') --> \n**predicted relation**:\n{'DEGREE_IN': 5.175297e-07, 'EXPERIENCE_IN': 0.9911635}\"entities\":\"(\"\"8+ years\",\"software development\"\") -->\n**predicted relation**\":\n{\"DEGREE_IN\":4.914319e-08,\"EXPERIENCE_IN\":0.994812}\"entities\":\"(\"\"3+ years\",\"Java\"\") -->\n**predicted relation**\":\n{\"DEGREE_IN\":9.288566e-08,\"EXPERIENCE_IN\":0.99975795}\"entities\":\"(\"\"3+ years\",\"Scala\"\") --> \n**predicted relation**\":\n{\"DEGREE_IN\":2.8477e-07,\"EXPERIENCE_IN\":0.99982494}\"entities\":\"(\"\"3+ years\",\"Python\"\") -->\n**predicted relation**\":\n{\"DEGREE_IN\":3.3149718e-07,\"EXPERIENCE_IN\":0.9998517}\"entities\":\"(\"\"3+ years\",\"C++\"\") -->\n**predicted relation**\":\n{\"DEGREE_IN\":2.2569053e-07,\"EXPERIENCE_IN\":0.99986637}\n```", "```py\nentities: ('Bachelor / MS', 'Computer Science') -->\npredicted relation: \n{'DEGREE_IN': 0.9943974, 'EXPERIENCE_IN':1.8361954e-09} entities: ('PhD', 'data science') --> predicted relation: {'DEGREE_IN': 0.98883855, 'EXPERIENCE_IN': 5.2092592e-09}\n```"]