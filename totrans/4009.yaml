- en: Essential Python Libraries for Data Manipulation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/essential-python-libraries-for-data-manipulation](https://www.kdnuggets.com/essential-python-libraries-for-data-manipulation)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Essential Python Libraries for Data Manipulation](../Images/37619aa5d2761f55fe8f02df479e67c2.png)'
  prefs: []
  type: TYPE_IMG
- en: Image generated with Midjourney
  prefs: []
  type: TYPE_NORMAL
- en: As a data professional, it’s essential to understand how to process your data.
    In the modern era, it means using programming language to quickly manipulate our
    data set to achieve our expected results.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Python is the most popular programming language data professionals use, and
    many libraries are helpful for data manipulation. From a simple vector to parallelization,
    each use case has a library that could help.
  prefs: []
  type: TYPE_NORMAL
- en: So, what are these Python libraries that are essential for Data Manipulation?
    Let’s get into it.
  prefs: []
  type: TYPE_NORMAL
- en: 1.NumPy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first library we would discuss is [NumPy](https://numpy.org/). NumPy is
    an open-source library for scientific computing activity. It was developed in
    2005 and has been used in many data science cases.
  prefs: []
  type: TYPE_NORMAL
- en: NumPy is a popular library, providing many valuable features in scientific computing
    activities such as array objects, vector operations, and mathematical functions.
    Also, many data science use cases rely on a complex table and matrices calculation,
    so NumPy allows users to simplify the calculation process.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s try NumPy with Python. Many data science platforms, such as Anaconda,
    have Numpy installed by default. But you can always install them via Pip.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: After the installation, we would create a simple array and perform array operations.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Output: `[5 7 9]`'
  prefs: []
  type: TYPE_NORMAL
- en: We can also perform basic statistics calculations with NumPy.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The data mean:4.0, median:4.0, and standard deviation: 2.0'
  prefs: []
  type: TYPE_NORMAL
- en: It’s also possible to perform linear algebra operations such as matrix calculation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs: []
  type: TYPE_NORMAL
- en: '`[[19 22] [43 50]]`'
  prefs: []
  type: TYPE_NORMAL
- en: There are so many benefits you can do using NumPy. From handling data to complex
    calculations, it’s no wonder many libraries have NumPy as their base.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Pandas
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Pandas](https://pandas.pydata.org/) is the most popular data manipulation
    Python library for data professionals. I am sure that many of the data science
    learning classes would use Pandas as their basis for any subsequent process.'
  prefs: []
  type: TYPE_NORMAL
- en: Pandas are famous because they have intuitive APIs yet are versatile, so many
    data manipulation problems can easily solved using the Pandas library. Pandas
    allows the user to perform data operations and analyze data from various input
    formats such as CSV, Excel, SQL databases, or JSON.
  prefs: []
  type: TYPE_NORMAL
- en: Pandas are built on top of NumPy, so NumPy object properties still apply to
    any Pandas object.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s try on the library. Like NumPy, it’s usually available by default if you
    are using a Data Science platform such as Anaconda. However, you can follow the
    [Pandas Installation guide](https://pandas.pydata.org/getting_started.html) if
    you are unsure.
  prefs: []
  type: TYPE_NORMAL
- en: You can try to initiate the dataset from the NumPy object and get a DataFrame
    object (Table-like) that shows the top five rows of data with the following code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![Essential Python Libraries for Data Manipulation](../Images/fc9dc7e8fce7521d26257539c6ab30d6.png)'
  prefs: []
  type: TYPE_IMG
- en: Then you can try several data manipulation activities, such as data selection.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: It’s possible to do the Data calculation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Performing data cleaning with Pandas is also easy.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: There is so much to do with Pandas for Data Manipulation. Check out [Bala Priya
    article on using Pandas for Data Manipulation](https://www.kdnuggets.com/7-steps-to-mastering-data-wrangling-with-pandas-and-python)
    to learn further.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Polars
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Polars](https://pola.rs/) is a relatively new data manipulation Python library
    designed for the swift analysis of large datasets. Polars boast 30x performance
    gains compared to Pandas in several benchmark tests.'
  prefs: []
  type: TYPE_NORMAL
- en: Polars is built on top of the Apache Arrow, so it’s efficient for memory management
    of the large dataset and allows for parallel processing. It also optimize their
    data manipulation performance using lazy execution that delays and computational
    until it’s necessary.
  prefs: []
  type: TYPE_NORMAL
- en: For the Polars installation, you can use the following code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Like Pandas, you can initiate the Polars DataFrame with the following code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![Essential Python Libraries for Data Manipulation](../Images/0bba46e4983f28e2657c76d8e1d3530a.png)'
  prefs: []
  type: TYPE_IMG
- en: However, there are differences in how we use Polars to manipulate data. For
    example, here is how we select data with Polars.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: The API is considerably more complex than Pandas, but it’s helpful if you require
    fast execution for large datasets. On the other hand, you would not get the benefit
    if the data size is small.
  prefs: []
  type: TYPE_NORMAL
- en: To know the details, you can refer to [Josep Ferrer's article on how different
    Polars is are compared to Pandas](https://www.kdnuggets.com/pandas-vs-polars-a-comparative-analysis-of-python-dataframe-libraries).
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Vaex
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Vaex](https://vaex.io/) is similar to Polars as the library is developed specifically
    for considerable dataset data manipulation. However, there are differences in
    the way they process the dataset. For example, Vaex utilize memory-mapping techniques,
    while Polars focus on a multi-threaded approach.'
  prefs: []
  type: TYPE_NORMAL
- en: Vaex is optimally suitable for datasets that are way bigger than what Polars
    intended to use. While Polars is also for extensive dataset manipulation processing,
    the library is ideally on datasets that still fit into memory size. At the same
    time, Vaex would be great to use on datasets that exceed the memory.
  prefs: []
  type: TYPE_NORMAL
- en: For the Vaex installation, it’s better to refer to their [documentation](https://vaex.io/docs/installing.html),
    as it could break your system if it’s not done correctly.
  prefs: []
  type: TYPE_NORMAL
- en: 5\. CuPy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[CuPy](https://github.com/cupy/cupy) is an open-source library that enables
    GPU-accelerated computing in Python. It is CuPy that was designed for the NumPy
    and SciPy replacement if you need to run the calculation within NVIDIA CUDA or
    AMD ROCm platforms.'
  prefs: []
  type: TYPE_NORMAL
- en: This makes CuPy great for applications that require intense numerical computation
    and need to use GPU acceleration. CuPy could utilize the parallel architecture
    of GPU and is beneficial for large-scale computations.
  prefs: []
  type: TYPE_NORMAL
- en: To install CuPy, refer to their GitHub repository, as many available versions
    might or might not suit the platforms you use. For example, below is for the CUDA
    platform.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: The APIs are similar to NumPy, so you can use CuPy instantly if you are already
    familiar with NumPy. For example, the code example for CuPy calculation is below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: CuPy is the end of an essential Python library if you are continuously working
    with high-scale computational data.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: All the Python libraries we have explored are essential in certain use cases.
    NumPy and Pandas might be the basics, but libraries like Polars, Vaex, and CuPy
    would be beneficial in specific environments.
  prefs: []
  type: TYPE_NORMAL
- en: If you have any other library you deem essential, please share them in the comments!
  prefs: []
  type: TYPE_NORMAL
- en: '**[](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**[Cornellius Yudha
    Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**** is a data science
    assistant manager and data writer. While working full-time at Allianz Indonesia,
    he loves to share Python and data tips via social media and writing media. Cornellius
    writes on a variety of AI and machine learning topics.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[8 Best Python Image Manipulation Tools](https://www.kdnuggets.com/2022/11/8-best-python-image-manipulation-tools.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[10 Pandas One Liners for Data Access, Manipulation, and Management](https://www.kdnuggets.com/2023/01/pandas-one-liners-data-access-manipulation-management.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top 38 Python Libraries for Data Science, Data Visualization &…](https://www.kdnuggets.com/2020/11/top-python-libraries-data-science-data-visualization-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python Libraries Data Scientists Should Know in 2022](https://www.kdnuggets.com/2022/04/python-libraries-data-scientists-know-2022.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Python Libraries for Data Cleaning](https://www.kdnuggets.com/2023/03/introduction-python-libraries-data-cleaning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Level 50 Data Scientist: Python Libraries to Know](https://www.kdnuggets.com/level-50-data-scientist-python-libraries-to-know)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
