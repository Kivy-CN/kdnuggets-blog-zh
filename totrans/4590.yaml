- en: An Easy Introduction to Machine Learning Recommender Systems
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/09/machine-learning-recommender-systems.html](https://www.kdnuggets.com/2019/09/machine-learning-recommender-systems.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f1251bac1ee184b2f4af978545ceb7e2.png)'
  prefs: []
  type: TYPE_IMG
- en: How does YouTube know what videos you’ll watch? How does Google always seem
    to know what news you’ll read? They use a [Machine Learning](https://en.wikipedia.org/wiki/Machine_learning)
    technique called [*Recommender Systems*](https://en.wikipedia.org/wiki/Recommender_system).
  prefs: []
  type: TYPE_NORMAL
- en: 'Practically, recommender systems encompass a class of techniques and algorithms
    which are able to suggest “relevant” items to users. Ideally, the suggested items
    are as relevant to the user as possible, so that the user can engage with those
    items: YouTube videos, news articles, online products, and so on.'
  prefs: []
  type: TYPE_NORMAL
- en: Items are ranked according to their relevancy, and the most relevant ones are
    shown to the user. The relevancy is something that the recommender system must
    determine and is mainly based on historical data. If you’ve recently watched YouTube
    videos about elephants, then YouTube is going to start showing you a lot of elephant
    videos with similar titles and themes!
  prefs: []
  type: TYPE_NORMAL
- en: 'Recommender systems are generally divided into two main categories: collaborative
    filtering and content-based systems.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/32b65731739133f542ef8ec8e22ceda5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1: A tree of the different types of Recommender Systems.'
  prefs: []
  type: TYPE_NORMAL
- en: Collaborative Filtering Systems
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Collaborative filtering](https://en.wikipedia.org/wiki/Collaborative_filtering) methods
    for recommender systems are methods that are solely based on the past interactions
    between users and the target items. Thus, the input to a collaborative filtering
    system will be all historical data of user interactions with target items. This
    data is typically stored in a matrix where the rows are the users, and the columns
    are the items.'
  prefs: []
  type: TYPE_NORMAL
- en: The core idea behind such systems is that the historical data of the users should
    be enough to make a prediction. I.e we don’t need anything more than that historical
    data, no extra push from the user, no presently trending information, etc.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/53d50abbb2536681f18d2fbdf4297ffc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2: Illustration of how collaborative filtering works for predicting
    a user’s rating of 4 things: an image, a book, a video, and a video game. Based
    on the users'' historical data, the likes and dislikes of each item, the system
    tries to predict how the user would rate a new item which they haven’t rated yet.
    The predictions themselves are based the past ratings of other users, whose ratings
    and therefore supposed preferences, are similar to the active user. In this case,
    the system made the prediction/recommendation that the active user won’t like
    the video. [Source](https://en.wikipedia.org/wiki/Collaborative_filtering) by [Moshanin](https://commons.wikimedia.org/w/index.php?title=User:Moshanin&action=edit&redlink=1)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Beyond this, collaborative filtering methods are further divided into two sub-groups:
    memory-based and model-based methods.'
  prefs: []
  type: TYPE_NORMAL
- en: Memory-based methods are the most simplistic as they use no model whatsoever.
    They assume that predictions can be made on pure “memory” of past data and usually
    just employ a simple distance-measurement approach, like nearest neighbour.
  prefs: []
  type: TYPE_NORMAL
- en: Model-based approaches, on the other hand, always assume some kind of underlying
    model and basically try to make sure that whatever predictions come out will fit
    the model well.
  prefs: []
  type: TYPE_NORMAL
- en: As an example, let’s say we have a matrix of users-to-preferred lunch item where
    all of the users are Americans who love cheeseburgers (they are phenomenal). A
    memory-based method will only look at what the user has eaten over the past month,
    without considering that mini-fact of them being cheeseburger loving Americans.
    A model-based method, on the other hand, will ensure that the predictions always
    lean a bit more towards being a cheeseburger, since the underlying model assumption
    is that most people in the dataset should love cheeseburgers!
  prefs: []
  type: TYPE_NORMAL
- en: '**The Code**'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can easily create a collaborative filtering recommender system using [Graph
    Lab](https://turi.com/)! We’ll take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Load up the data with pandas
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Convert the pandas dataframes to graph lab SFrames
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Train the model
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make recommendations
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Content-based Systems
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In contrast to collaborative filtering, content-based approaches will use additional
    information about the user and / or items to make predictions.
  prefs: []
  type: TYPE_NORMAL
- en: For example, in the gif we saw above, a content-based system might consider
    the age, sex, occupation, and other personal user factors when making the predictions.
    It’s much easier to predict that the person wouldn’t like the video if we knew
    it was about skateboarding, but the user’s age is 87!
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7a5a78a3c94dd8282b8511c5ec59bd9e.png)'
  prefs: []
  type: TYPE_IMG
- en: That’s why when you sign up for many online websites and services, they ask
    you to (optionally) give your date of birth, gender, and ethnicity! It’s just
    more data for their system to make better predictions.
  prefs: []
  type: TYPE_NORMAL
- en: Thus, content-based methods are more similar to classical machine learning,
    in the sense that we will build features based on user and item data and use that
    to help us make predictions. Our system input is then the **features** of the
    user and the **features** of the item. Our system output is the prediction of
    whether or not the user would like or dislike the item.
  prefs: []
  type: TYPE_NORMAL
- en: '**The Code**'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can easily create a collaborative filtering recommender system using [Graph
    Lab](https://turi.com/)! We’ll take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Load up the data with pandas
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Convert the pandas dataframes to graph lab SFrames
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Train the model
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make recommendations
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Like to learn?**'
  prefs: []
  type: TYPE_NORMAL
- en: Follow me on [twitter](https://twitter.com/GeorgeSeif94) where I post all about
    the latest and greatest AI, Technology, and Science! Connect with me on [LinkedIn](https://www.linkedin.com/in/georgeseif/) too!
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Building a Recommender System](https://www.kdnuggets.com/2019/04/building-recommender-system.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Recommender Engine - Under The Hood](https://www.kdnuggets.com/2018/02/recommender-engine.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Recommendation System Algorithms: An Overview](https://www.kdnuggets.com/2017/08/recommendation-system-algorithms-overview.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Building a Recommender System for Amazon Products with Python](https://www.kdnuggets.com/2023/02/building-recommender-system-amazon-products-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[An Easy Guide to Choose the Right Machine Learning Algorithm](https://www.kdnuggets.com/2020/05/guide-choose-right-machine-learning-algorithm.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Design effective & reliable machine learning systems!](https://www.kdnuggets.com/2023/05/manning-design-effective-reliable-machine-learning-systems.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[TensorFlow for Computer Vision - Transfer Learning Made Easy](https://www.kdnuggets.com/2022/01/tensorflow-computer-vision-transfer-learning-made-easy.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Easy Guide To Data Preprocessing In Python](https://www.kdnuggets.com/2020/07/easy-guide-data-preprocessing-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[OpenAI API for Beginners: Your Easy-to-Follow Starter Guide](https://www.kdnuggets.com/openai-api-for-beginners-your-easy-to-follow-starter-guide)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
