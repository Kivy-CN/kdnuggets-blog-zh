["```py\nimport pandas as pd\n\ndf_mall = pd.read_csv(\"Mall_Customers.csv\",index_col=\"CustomerID\")\ndf_mall.head(3)\n```", "```py\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.figure(1 , figsize = (10 , 5) )\nsns.scatterplot(\n    data=df_mall,\n    x=\"Spending Score (1-100)\",\n    y=\"Annual Income (k$)\",\n    hue=\"Gender\",\n    size=\"Age\",\n    palette=\"Set2\"\n);\n```", "```py\nfrom sklearn import preprocessing\n\nX = df_mall.drop([\"Gender\",\"Age\"],axis=1)\nX_norm = preprocessing.normalize(X) \n```", "```py\nimport numpy as np\nfrom sklearn.cluster import KMeans\n\ndef elbow_plot(data,clusters):\n    inertia = []\n    for n in range(1, clusters):\n        algorithm = KMeans(\n            n_clusters=n,\n            init=\"k-means++\",\n            random_state=125,\n        )\n        algorithm.fit(data)\n        inertia.append(algorithm.inertia_)\n    # Plot\n    plt.plot(np.arange(1 , clusters) , inertia , 'o')\n    plt.plot(np.arange(1 , clusters) , inertia , '-' , alpha = 0.5)\n    plt.xlabel('Number of Clusters') , plt.ylabel('Inertia')\n    plt.show();\n\nelbow_plot(X_norm,10)\n```", "```py\nalgorithm = KMeans(n_clusters=3, init=\"k-means++\", random_state=125)\nalgorithm.fit(X_norm)\nlabels = algorithm.labels_\n```", "```py\nsns.scatterplot(data = X, x = 'Spending Score (1-100)', y = 'Annual Income (k$)', hue = labels, palette=\"Set2\");\n```", "```py\nX = df_mall.drop([\"Gender\",\"Annual Income (k$)\"],axis=1)\n\nX_norm = preprocessing.normalize(X) \n```", "```py\nelbow_plot(X_norm,10)\n```", "```py\nalgorithm = KMeans(n_clusters=3, init=\"k-means++\", random_state=125)\nalgorithm.fit(X_norm)\nlabels = algorithm.labels_\n```", "```py\nsns.scatterplot(data = X, x = 'Age', y = 'Spending Score (1-100)', hue = labels, palette=\"Set2\");\n```", "```py\nsns.boxplot(x = labels, y = X['Spending Score (1-100)']);\n```"]