- en: 'Essential Math for Data Science: Introduction to Matrices and the Matrix Product'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据科学的基础数学：矩阵及矩阵乘积简介
- en: 原文：[https://www.kdnuggets.com/2021/02/essential-math-data-science-matrices-matrix-product.html](https://www.kdnuggets.com/2021/02/essential-math-data-science-matrices-matrix-product.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/02/essential-math-data-science-matrices-matrix-product.html](https://www.kdnuggets.com/2021/02/essential-math-data-science-matrices-matrix-product.html)
- en: '[comments](#comments)[![Image](../Images/e6b504358bea8f63e781d7dbce4b4afc.png)](https://www.essentialmathfordatascience.com/?utm_source=kdnuggets&utm_medium=blog&utm_campaign=kdnuggets_scalars_vectors)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)[![图片](../Images/e6b504358bea8f63e781d7dbce4b4afc.png)](https://www.essentialmathfordatascience.com/?utm_source=kdnuggets&utm_medium=blog&utm_campaign=kdnuggets_scalars_vectors)'
- en: Matrices and Tensors
  id: totrans-3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 矩阵和张量
- en: As you saw in [Essential Math for Data Science](https://bit.ly/3mpb4F2), vectors
    are a useful way to store and manipulate data. You can represent them geometrically
    as arrows, or as arrays of numbers (the coordinates of their ending points). However,
    it can be helpful to create more complicated data structures – and that is where
    matrices need to be introduced.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在 [数据科学的基础数学](https://bit.ly/3mpb4F2) 中看到的，向量是存储和操作数据的有用方式。你可以将它们几何地表示为箭头，或作为数字数组（其结束点的坐标）。然而，创建更复杂的数据结构可能会很有帮助——这就是需要引入矩阵的地方。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织在IT方面'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Introduction
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 介绍
- en: 'As vectors, *matrices* are data structures allowing you to organize numbers.
    They are square or rectangular arrays containing values organized in two dimensions:
    as rows and columns. You can think of them as a spreadsheet. Usually, you’ll see
    the term *matrix* in the context of math and *two-dimensional array* in the context
    of Numpy.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 作为向量，*矩阵* 是允许你组织数字的数据结构。它们是包含值的方阵或矩阵，这些值按两维组织：行和列。你可以把它们看作是一个电子表格。通常，你会在数学领域看到术语*矩阵*，而在Numpy中则会看到*二维数组*。
- en: '**Dimensions**'
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**维度**'
- en: ''
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'In the context of matrices, the term *dimension* is different from dimensions
    of the geometric representation of vectors (the dimensions of the space). When
    we say that a matrix is a two-dimensional array, it means that there are two *directions* in
    the array: the rows and the columns.'
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在矩阵的上下文中，*维度* 这个术语与向量几何表示的维度（空间的维度）不同。当我们说矩阵是一个二维数组时，这意味着数组中有两个 *方向*：行和列。
- en: Matrix Notation
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 矩阵表示法
- en: 'Here, I’ll denote matrices with bold typeface and upper-case letters, like *A*:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我将用粗体字母和大写字母表示矩阵，例如 *A*：
- en: '![Equation](../Images/1e3859de92c28c620fd3fed24f7d6930.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![方程](../Images/1e3859de92c28c620fd3fed24f7d6930.png)'
- en: The matrix ***A*** has two rows and two columns but you can imagine matrices
    with any shape. More generally, if the matrix has *m* rows and *n* columns and
    contains real values, you can characterize it with the following notation: ![Equation](../Images/112c6ef1621e38c3cf294b5a45aa93fa.png)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵 ***A*** 有两行两列，但你可以想象任何形状的矩阵。更一般地，如果矩阵有 *m* 行和 *n* 列并包含实值，你可以用以下表示法来描述它：![方程](../Images/112c6ef1621e38c3cf294b5a45aa93fa.png)
- en: You can refer to matrix entries with the name of the matrix with no bold font
    (because the entries are scalars) followed by the index for the row and the index
    for the column separated by a comma in subscript. For instance, ***A[1,2]*** denotes
    the entry in the first row and the second column.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过矩阵的名称引用矩阵条目，名称中不使用粗体（因为条目是标量），后跟行索引和列索引，索引之间用逗号分隔并位于下标中。例如，***A[1,2]***
    表示第一行第二列的条目。
- en: By convention, the first index is for the row and the second for the column.
    For instance, the entry 2 in the matrix ***A*** above is located in the second
    row and the first column of the matrix ***A***, so it is denoted as ***A[2,1]*** (as
    shown in [Essential Math for Data Science](https://bit.ly/3mpb4F2), one-based
    indexing is generally used in mathematical notation).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 按惯例，第一个索引用于行，第二个用于列。例如，矩阵***A***中位置2的条目位于矩阵***A***的第二行和第一列，因此表示为***A[2,1]***（如[数据科学的基础数学](https://bit.ly/3mpb4F2)中所示，数学符号中通常使用基于一的索引）。
- en: 'You can write the matrix components as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以按照如下方式写出矩阵的组件：
- en: '![Equation](../Images/41fe351b69e7443e4a2e970d96146437.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![方程式](../Images/41fe351b69e7443e4a2e970d96146437.png)'
- en: Shapes
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 形状
- en: '![Figure](../Images/38a06d30eb7c3028aa971109720af4b3.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/38a06d30eb7c3028aa971109720af4b3.png)'
- en: '*Figure 1: Matrices are two-dimensional arrays. The number of rows is usually
    denoted as mm and the number of columns as nn.*'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '*图1：矩阵是二维数组。行数通常表示为 mm，而列数表示为 nn。*'
- en: The *shape* of an array gives you the number of components in each dimension,
    as illustrated in Figure 1\. Since this matrix is two-dimensional (rows and columns),
    you need two values to describe the shape (the number of rows and the number of
    columns in this order).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的*形状*告诉你每个维度的组件数量，如图1所示。由于这个矩阵是二维的（行和列），你需要两个值来描述形状（依次是行数和列数）。
- en: 'Let’s start by creating a 2D Numpy array with the method `np.array()`:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从使用方法`np.array()`创建一个二维 Numpy 数组开始：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note that we use arrays in arrays (`[[]]`) to create the 2D array. This differs
    from creating a 1D array by the number of square brackets that you use.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们使用数组中的数组 (`[[]]`) 来创建二维数组。这与创建一维数组的方括号数量不同。
- en: 'Like with vectors, it is possible to access the shape property of Numpy arrays:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 与向量一样，你也可以访问 Numpy 数组的形状属性：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can see that the shape contains two numbers: they correspond to the number
    of rows and column respectively.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到形状包含两个数字：它们分别对应于行数和列数。
- en: Indexing
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 索引
- en: 'To get a matrix entry, you need two indexes: one to refer to the row index
    and one to refer to the column index.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取矩阵的一个条目，你需要两个索引：一个用于行索引，一个用于列索引。
- en: 'Using Numpy, the indexing process is the same to that of vectors. You just
    need to specify two indexes. Let’s take again the following matrix ***A***:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Numpy，索引过程与向量相同。你只需要指定两个索引。让我们再次以矩阵***A***为例：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'It is possible to get a specific entry with the following syntax:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用以下语法获取特定条目：
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '`A[1, 2]` returns the component with the row index one and the column index
    two (with a zero-based indexing).'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`A[1, 2]` 返回具有行索引一和列索引二的组件（使用基于零的索引）。'
- en: 'To get a complete column, it is possible to use a colon:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取完整的列，可以使用冒号：
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This returns the first column (index zero) because the colon says that we want
    the components from the first to the last rows. Similarly, to get a specific row,
    you can do:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这会返回第一列（索引零），因为冒号表示我们想要从第一行到最后一行的组件。类似地，要获取特定的行，你可以这样做：
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Being able to manipulate matrices containing data is an essential skill for
    data scientists. Checking the shape of your data is important to be sure that
    it is organized the way you want. It is also important to know the data shape
    you’ll need to use libraries like Sklearn or Tensorflow.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 能够操作包含数据的矩阵是数据科学家的一项基本技能。检查数据的形状很重要，以确保它是按照你想要的方式组织的。了解你需要的数据显示形状对于使用像 Sklearn
    或 Tensorflow 这样的库也很重要。
- en: '**Default indexing**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**默认索引**'
- en: Note that if you specify a single index from a 2D array, Numpy considers that
    it is for the first dimension (the rows) and all the values of the other dimension
    (the columns) are used. For instance
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果你从二维数组中指定一个单一的索引，Numpy 认为这是针对第一维（行）的，而其他维度（列）的所有值都会被使用。例如：
- en: '[PRE10]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'which is similar to:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这类似于：
- en: '[PRE12]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '**Vectors and Matrices**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**向量和矩阵**'
- en: 'With Numpy, if the array is a vector (1D Numpy array), the shape is a single
    number:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Numpy，如果数组是向量（一维 Numpy 数组），则形状是一个单一的数字：
- en: '[PRE14]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'You can see that *v* is a vector. If it is a matrix, the shape has two numbers
    (the number of value in the rows and in the columns respectively). For instance:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到*v*是一个向量。如果它是一个矩阵，形状有两个数字（分别是行数和列数）。例如：
- en: '[PRE16]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'You can see that the matrix has a single row: the first number of the shape
    is 1\. Once again, using two square brackets, `[[` and `]]`, allows you to create
    a two-dimensional array (a matrix).'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到矩阵只有一行：形状的第一个数字是1。再次使用两个方括号`[[`和`]]`，可以创建一个二维数组（矩阵）。
- en: Matrix Product
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 矩阵乘积
- en: You learn about the dot product in [Essential Math for Data Science](https://bit.ly/3mpb4F2).
    The equivalent operation for matrices is called the *matrix product*, or *matrix
    multiplication*. It takes two matrices and returns another matrix. This is a core
    operation in linear algebra.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[数据科学基础数学](https://bit.ly/3mpb4F2)中学习点积。矩阵的等效操作称为*矩阵乘积*，或*矩阵乘法*。它接收两个矩阵并返回另一个矩阵。这是线性代数中的核心操作。
- en: Matrices with Vectors
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 矩阵与向量
- en: The simpler case of matrix product is between a matrix and a vector (that you
    can consider as a matrix product with one of them having a single column).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵乘积的更简单情况是矩阵与向量之间的乘积（你可以将其视为一个具有单列的矩阵乘积）。
- en: '![Figure](../Images/1d9a37c4eec3a9c22944e02b7d36fb5d.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/1d9a37c4eec3a9c22944e02b7d36fb5d.png)'
- en: '*Figure 2: Steps of the product between a matrix and a vector.*'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '*图2：矩阵与向量之间乘积的步骤。*'
- en: 'Figure 2 illustrates the steps of the product between a matrix and a vector.
    Let’s consider the first row of the matrix. You do the dot product between the
    vector (the values 3 and 4 in red) and the row you’re considering (the values
    1 and 2 in blue). You multiply the values by pairs: the first value in the row
    with the first in the column vector (*1⋅3*), and the second in the row with the
    second in the vector (*2⋅4*). It gives you the first component of the resulting
    matrix (*1⋅3+2⋅4=11*).'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图2展示了矩阵与向量之间乘积的步骤。考虑矩阵的第一行。你将点积应用于向量（红色的值3和4）和你考虑的行（蓝色的值1和2）。你按对相乘：行中的第一个值与列向量中的第一个值（*1⋅3*），行中的第二个值与向量中的第二个值（*2⋅4*）。它给出了结果矩阵的第一个分量（*1⋅3+2⋅4=11*）。
- en: You can see that the matrix-vector product relates to the dot product. It is
    like splitting the matrix AA in three rows and applying the dot product (as in [Essential
    Math for Data Science](https://bit.ly/3mpb4F2)).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到矩阵-向量乘积与点积相关。这就像将矩阵AA分成三行并应用点积（如在[数据科学基础数学](https://bit.ly/3mpb4F2)中）。
- en: Let’s see how it works with Numpy.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何使用Numpy来实现。
- en: '[PRE18]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Note that we used the `reshape()` function to reshape the vector into a 2 by
    1 matrix (the `-1` tells Numpy to guess the remaining number). Without it, you
    would end with a one-dimensional array instead of a two-dimensional array here
    (a matrix with a single column).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们使用了`reshape()`函数将向量重塑为2乘1的矩阵（`-1`让Numpy猜测剩余的数字）。如果不这样做，你将得到一维数组而不是二维数组（具有单列的矩阵）。
- en: '**Weighting of the Matrix’s Columns**'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**矩阵列的加权**'
- en: There is another way to think about the matrix product. You can consider that
    the vector contains values that weight each column of the matrix. It clearly shows
    that the length of the vector needs to be equal to the number of columns of the
    matrix on which the vector is applied.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 还有另一种思考矩阵乘积的方法。你可以认为向量包含对矩阵每一列的加权值。这清楚地表明，向量的长度需要等于应用向量的矩阵的列数。
- en: '![Figure](../Images/2f5351efa1f863fda83cb2261bcc47cb.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/2f5351efa1f863fda83cb2261bcc47cb.png)'
- en: '*Figure 3: The vectors values are weighting the columns of the matrix.*'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '*图3：向量的值对矩阵的列进行加权。*'
- en: Figure 3 might help to visualize this concept. You can consider the vector values
    (3 and 4) as weights applied to the columns of the matrix. The rules about scalar
    multiplication that you saw earlier lead to the same results as before.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图3可能有助于可视化这个概念。你可以将向量值（3和4）视为应用于矩阵列的权重。你之前看到的关于标量乘法的规则会得出与之前相同的结果。
- en: 'Using the last example, you can write the dot product between *A* and *v* as
    follows:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 使用最后一个例子，你可以将*A*和*v*之间的点积写作如下：
- en: '![Equation](../Images/64a2a6dec5c4de41ce3ffb16fad31515.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![方程](../Images/64a2a6dec5c4de41ce3ffb16fad31515.png)'
- en: '![Equation](../Images/5df6bfdc1bba891269dcc265ee217033.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![方程](../Images/5df6bfdc1bba891269dcc265ee217033.png)'
- en: This is important because, as you’ll see in more details in [Essential Math
    for Data Science](https://bit.ly/3mpb4F2), it shows that *Av* is a linear combination
    of the columns of *A* with the coefficients being the values from *v*.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这很重要，因为正如你在[数据科学基础数学](https://bit.ly/3mpb4F2)中会看到的，它表明*Av*是*A*的列的线性组合，系数是*v*中的值。
- en: '**Shapes**'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**形状**'
- en: In addition, you can see that the shapes of the matrix and the vector must match
    for the dot product to be possible.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你可以看到矩阵和向量的形状必须匹配，点积才可能进行。
- en: '![Figure](../Images/a92e6f94c2a80bd7fdedab0971aa957a.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/a92e6f94c2a80bd7fdedab0971aa957a.png)'
- en: '*Figure 4: Shapes needed for the dot product between a matrix and a vector.*'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4：矩阵与向量之间点积所需的形状。*'
- en: Figure 4 summarizes the shapes involved in the matrix-vector product and shows
    that the number of columns of the matrix must be equal to the number of rows of
    the vector.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4 总结了矩阵-向量乘积中涉及的形状，并显示矩阵的列数必须等于向量的行数。
- en: Matrices Product
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 矩阵乘积
- en: The *matrix product* is the equivalent of the dot product operation for two
    matrices. As you’ll see, it is similar to the matrix-vector product, but applied
    to each column of the second matrix.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '*矩阵乘积*是两个矩阵的点积操作的等效操作。正如你将看到的，它类似于矩阵-向量乘积，但应用于第二个矩阵的每一列。'
- en: '![Figure](../Images/a47ba608600705046e52abaecc6a54f0.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/a47ba608600705046e52abaecc6a54f0.png)'
- en: '*Figure 5: Matrix product.*'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5：矩阵乘积。*'
- en: Figure 5 shows you an example of matrix product. You can see that the resulting
    matrix has two columns, as the second matrix. The values of first column of the
    second matrix (3 and 4) weight the two columns and the result fills the first
    column of the resulting matrix. Similarly, the values of the second column of
    the second matrix (9 and 0) weight the two columns and the result fills the second
    column of the resulting matrix.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5 展示了矩阵乘积的一个例子。你可以看到结果矩阵有两列，与第二个矩阵一样。第二个矩阵第一列的值（3和4）加权这两列，结果填充了结果矩阵的第一列。类似地，第二个矩阵第二列的值（9和0）加权这两列，结果填充了结果矩阵的第二列。
- en: 'With Numpy, you can calculate the matrix product exactly as the dot product:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Numpy，你可以像计算点积一样精确地计算矩阵乘积：
- en: '[PRE20]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '**Shapes**'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**形状**'
- en: Like with the matrix-vector product and as illustrated in Figure 6, the number
    of columns of the first matrix must match the number of rows of the second matrix.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 就像矩阵-向量乘积一样，如图 6 所示，第一个矩阵的列数必须与第二个矩阵的行数匹配。
- en: '![Figure](../Images/53a3564daac9f13bc8cbefed22b8e52f.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/53a3564daac9f13bc8cbefed22b8e52f.png)'
- en: '*Figure 6: Shapes must match for the dot product between two matrices.*'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 6：矩阵点积要求形状匹配。*'
- en: The resulting matrix has as many rows as the first matrix and as many columns
    as the second matrix.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 结果矩阵的行数与第一个矩阵相同，列数与第二个矩阵相同。
- en: Let’s try it.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试一下。
- en: '[PRE22]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The matrices *A* and *B* have different shapes. Let’s calculate their dot product:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵*A*和*B*有不同的形状。让我们计算它们的点积：
- en: '[PRE24]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: You can see the result of *A⋅B* is a 3 by 3 matrix. This shape comes from the
    number of rows of *A* (3) and the number of columns of *B* (3).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到*A⋅B*的结果是一个3x3的矩阵。这个形状来自于*A*的行数（3）和*B*的列数（3）。
- en: '**Matrix Product to Calculate the Covariance Matrix**'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**计算协方差矩阵的矩阵乘积**'
- en: You can calculate the covariance matrix (more details about the covariance matrix
    in [Essential Math for Data Science](https://bit.ly/3mpb4F2)) of a dataset with
    the product between the matrix containing the variables and its transpose. Then,
    you divide by the number of observations (or this number minus one for the Bessel
    correction). You need to be sure that the variables are centered around zero beforehand
    (this can be done by subtracting the mean).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过计算包含变量的矩阵与其转置之间的乘积来得到数据集的协方差矩阵（有关协方差矩阵的更多细节请参见[数据科学基础数学](https://bit.ly/3mpb4F2)）。然后，你需要除以观察次数（或者除以这个数字减去1用于贝塞尔校正）。你需要确保变量在计算前已经围绕零进行中心化（可以通过减去均值来完成）。
- en: 'Let’s simulate the following variables *x*, *y* and *z*:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们模拟以下变量*x*、*y*和*z*：
- en: '[PRE26]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Using Numpy, the covariance matrix is:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Numpy，协方差矩阵为：
- en: '[PRE27]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Now, using the matrix product, you first need to stack the variables as columns
    of a matrix:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用矩阵乘积，你首先需要将变量堆叠为矩阵的列：
- en: '[PRE29]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'You can see that the variable `X` is a 100 by 3 matrix: the 100 rows correspond
    to the observations and the 3 columns to the features. Then, you center this matrix
    around zero:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到变量`X`是一个100x3的矩阵：100行对应观察次数，3列对应特征。然后，你需要将这个矩阵围绕零进行中心化：
- en: '[PRE31]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Finally, you calculate the covariance matrix:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你计算协方差矩阵：
- en: '[PRE32]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: You get a covariance matrix similar to the one from the function `np.cov()`.
    This is important to keep in mind that the dot product of a matrix with its transpose
    corresponds to the covariance matrix.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 你得到的协方差矩阵类似于函数`np.cov()`的结果。重要的是要记住，矩阵与其转置的点积对应于协方差矩阵。
- en: Transpose of a Matrix Product
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 矩阵乘积的转置
- en: 'The transpose of the dot product between two matrices is defined as follows:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 两个矩阵点积的转置定义如下：
- en: '![Equation](../Images/2aa29b7a5625a16da771e7d70883eb98.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![方程](../Images/2aa29b7a5625a16da771e7d70883eb98.png)'
- en: 'For instance, take the following matrices *A* and *B*:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，取以下矩阵 *A* 和 *B*：
- en: '[PRE34]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'You can check the result of ![Equation](../Images/83b1a0cdf30766ed77f5c2f846d1d054.png) and ![Equation](../Images/d6bdacd69456fc7dbd03d4b9b4fabb84.png):'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以检查 ![方程](../Images/83b1a0cdf30766ed77f5c2f846d1d054.png) 和 ![方程](../Images/d6bdacd69456fc7dbd03d4b9b4fabb84.png)的结果：
- en: '[PRE35]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: This can be surprising at first that the order of the two vectors or matrices
    in the parentheses must change for the equivalence to be satisfy. Let’s look at
    the details of the operation.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 起初，这可能令人惊讶，因为括号中两个向量或矩阵的顺序必须改变才能满足等价关系。让我们详细了解一下这个操作。
- en: '![Figure](../Images/f19e3a4ebad998abfa3e258d1619a770.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/f19e3a4ebad998abfa3e258d1619a770.png)'
- en: '*Figure 7: You must change the order of the vector and the matrix to obtain
    the transpose of the matrix product.*'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 7：你必须改变向量和矩阵的顺序才能获得矩阵乘积的转置。*'
- en: Figure 7 shows that the transpose of a matrix product is equal to the product
    of the transpose if you change the order of the vector and matrix.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7 显示了，如果改变向量和矩阵的顺序，矩阵乘积的转置等于转置的乘积。
- en: '**More than two Matrices or Vectors**'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '**超过两个矩阵或向量**'
- en: You can apply this property to more than two matrices or vectors. For instance,
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将这个性质应用于多个矩阵或向量。例如，
- en: '![Equation](../Images/31aefe885baae2573a91cb2ff2147dbe.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![方程](../Images/31aefe885baae2573a91cb2ff2147dbe.png)'
- en: Keep this property in a corner of your mind. It explains many “cosmetic rearrangements”
    that you can encounter when matrices and vectors are manipulated. Trying these
    manipulations with code is a great way to learn.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 记住这个性质，它解释了许多在处理矩阵和向量时可能遇到的“外观上的调整”。用代码尝试这些操作是一个很好的学习方式。
- en: To conclude, the matrix product is a key concept of linear algebra, and you
    will see in [Essential Math for Data Science](https://bit.ly/3mpb4F2) how it relates
    to space transformation.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，矩阵乘积是线性代数的关键概念，你将在 [数据科学中的基本数学](https://bit.ly/3mpb4F2) 中看到它如何与空间变换相关。
- en: '**Bio: [Hadrien Jean](https://hadrienj.github.io/)** is a machine learning
    scientist. He owns a Ph.D in cognitive science from the Ecole Normale Superieure,
    Paris, where he did research on auditory perception using behavioral and electrophysiological
    data. He previously worked in industry where he built deep learning pipelines
    for speech processing. At the corner of data science and environment, he works
    on projects about biodiversity assessement using deep learning applied to audio
    recordings. He also periodically creates content and teaches at Le Wagon (data
    science Bootcamp), and writes articles in his blog ([hadrienj.github.io](http://hadrienj.github.io)).'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '**个人简介：[Hadrien Jean](https://hadrienj.github.io/)** 是一位机器学习科学家。他拥有巴黎高等师范学院的认知科学博士学位，在那里他利用行为学和电生理数据研究听觉感知。他之前在工业界工作，建立了用于语音处理的深度学习管道。在数据科学和环境交汇处，他从事利用深度学习处理音频录音的生物多样性评估项目。他还定期在
    Le Wagon（数据科学训练营）创建内容和授课，并在他的博客（[hadrienj.github.io](http://hadrienj.github.io)）上撰写文章。'
- en: '[Original](https://hadrienj.github.io/posts/Essential-Math-for-Data-Science-Introduction_to_matrices_and_matrix_product/).
    Reposted with permission.'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://hadrienj.github.io/posts/Essential-Math-for-Data-Science-Introduction_to_matrices_and_matrix_product/)。经授权转载。'
- en: '**Related:**'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Essential Math for Data Science: Probability Density and Probability Mass
    Functions](/2020/12/essential-math-data-science-probability-density-probability-mass-functions.html)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学中的基本数学：概率密度和概率质量函数](/2020/12/essential-math-data-science-probability-density-probability-mass-functions.html)'
- en: '[Matrix Decomposition Decoded](/2020/12/matrix-decomposition-decoded.html)'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[矩阵分解解读](/2020/12/matrix-decomposition-decoded.html)'
- en: '[Essential Math for Data Science: Information Theory](/2021/01/essential-math-data-science-information-theory.html)'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学中的基本数学：信息理论](/2021/01/essential-math-data-science-information-theory.html)'
- en: More On This Topic
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[停止学习数据科学以寻找目的，并寻找目的……](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习数据科学统计学的顶级资源](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[成功数据科学家的 5 个特征](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每位数据科学家都应了解的三个 R 语言库（即使你使用 Python）](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[一个 90 亿美元的 AI 失败案例分析](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[是什么让 Python 成为初创企业理想的编程语言](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
