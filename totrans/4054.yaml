- en: Applying Descriptive and Inferential Statistics in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/applying-descriptive-and-inferential-statistics-in-python](https://www.kdnuggets.com/applying-descriptive-and-inferential-statistics-in-python)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Applying Descriptive and Inferential Statistics in Python](../Images/5dbbc5b3f35fc10a8fb9a3d0615f630e.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Mikael Blomkvist](https://www.pexels.com/photo/laptop-beside-a-ceramic-vase-6483626/)
  prefs: []
  type: TYPE_NORMAL
- en: Statistics is a field encompassing activities from collecting data and data
    analysis to data interpretation. It’s a study field to help the concerned party
    decide when facing uncertainty.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Two major branches in the statistics field are descriptive and Inferential.
    Descriptive statistics is a branch related to data summarization using various
    manners, such as summary statistics, visualization, and tables. While inferential
    statistics are more about population generalization based on the data sample.
  prefs: []
  type: TYPE_NORMAL
- en: This article will walk through a few important concepts in Descriptive and Inferential
    statistics with a Python example. Let’s get into it.
  prefs: []
  type: TYPE_NORMAL
- en: Descriptive Statistics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As I have mentioned before, descriptive statistics focus on data summarization.
    It’s the science of processing raw data into meaningful information. Descriptive
    statistics can be performed with graphs, tables, or summary statistics. However,
    summary statistics is the most popular way to do descriptive statistics, so we
    would focus on this.
  prefs: []
  type: TYPE_NORMAL
- en: For our example, we would use the following dataset example.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![Applying Descriptive and Inferential Statistics in Python](../Images/9464bb9ca7899f5df169326c2448bb5e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'With this data, we would explore descriptive statistics. In the summary statistics,
    there are two most used: **Measures of Central Tendency** and **Measures of Spread**.'
  prefs: []
  type: TYPE_NORMAL
- en: Measures of Central Tendency
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Central tendency is the center of the data distribution or the dataset. The
    measures of central tendency are the activity to acquire or describe the center
    distribution of our data. The measures of central tendency would give a singular
    value that defines the data's central position.
  prefs: []
  type: TYPE_NORMAL
- en: 'Within measures of Central Tendency, there are three popular measurements:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Mean
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Mean or average is a method to produce a singular value output representing
    our data's most common value. However, the mean is not necessarily the value observed
    in our data.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can calculate the mean by taking a sum of the existing values in our data
    and dividing it by the number of values. We can represent the mean with the following
    equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Applying Descriptive and Inferential Statistics in Python](../Images/16e5c9f80862d6c73e3aeb0f6219234f.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: In Python, we can calculate data mean with the following code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Using the pandas series attribute, we can obtain the data mean. We also round
    the data to make the data reading easier.
  prefs: []
  type: TYPE_NORMAL
- en: Mean has a disadvantage as a measure of central tendency because it is affected
    heavily by the outlier, which could skew the summary statistic and not best represent
    the actual situation. In skewed cases, we can use the median.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Median
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The median is the singular value positioned in the middle of the data if we
    sort them, representing the data's halfway point position (50%). As a measurement
    of central tendency, the median is preferable when the data is skewed because
    it could represent the data center, as the outlier or skewed values do not strongly
    influence it.
  prefs: []
  type: TYPE_NORMAL
- en: The median is calculated by arranging all the data values in ascending order
    and finding the middle value. The median is the middle value for an odd number
    of data values, but the median is the average of the two middle values for an
    even number of data values.
  prefs: []
  type: TYPE_NORMAL
- en: We can calculate the Median with Python using the following code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 3\. Mode
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Mode is the highest frequency or most occurring value within the data. The data
    can have a single mode (unimodal), multiple modes (multimodal), or no mode at
    all (if there are no repeating values).
  prefs: []
  type: TYPE_NORMAL
- en: Mode is usually used for categorical data but can be used in numerical data.
    For categorical data, though, it might only use the mode. This is because categorical
    data do not have any numerical values to calculate the mean and median.
  prefs: []
  type: TYPE_NORMAL
- en: We can calculate the data Mode with the following code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![Applying Descriptive and Inferential Statistics in Python](../Images/2e030621be8043d0ac6ee24bcf3e1674.png)'
  prefs: []
  type: TYPE_IMG
- en: The result is the series object with categorical type values. The ‘Sat’ value
    is the only one that comes out because it’s the data mode.
  prefs: []
  type: TYPE_NORMAL
- en: Measures of Spread
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The measures of spread (or variability, dispersion) is a measurement to describe
    data value spreads. The measurement provides information on how our data values
    vary within the dataset. It is often used with the measures of central tendency
    as they complement the overall data information.
  prefs: []
  type: TYPE_NORMAL
- en: The measures of the spread also help understand how well our measures of central
    tendency output. For example,  a higher data spread might indicate a significant
    deviation between the observed data, and the data mean might not best represent
    the data.
  prefs: []
  type: TYPE_NORMAL
- en: Here are various measures of spread to use.
  prefs: []
  type: TYPE_NORMAL
- en: Range
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The range is the difference between the data's largest (Max) and smallest value
    (Min). It’s the most direct measurement because the information only uses two
    aspects of the data.
  prefs: []
  type: TYPE_NORMAL
- en: The usage might be limited because it doesn’t tell much about the data distribution,
    but it might help our assumption if we have a certain threshold to use for our
    data. Let’s try to calculate the data range with Python.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 2\. Variance
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Variance is a measurement of spread that informs our data spreads based on the
    data mean. We calculate variance by squaring the differences of each value to
    the data mean and dividing it by the number of the data values. As we usually
    work with data samples and not populations, we subtract the number of the data
    values by one. The equation for sample variance is in the image below.
  prefs: []
  type: TYPE_NORMAL
- en: '![Applying Descriptive and Inferential Statistics in Python](../Images/bc37ed3dacbdccd76324ab7826e01d06.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Variance can be interpreted as a value indicating how far the data is spread
    to the mean and each other. Higher variance means a wider data spread. However,
    variance calculation is sensitive to the outlier because we squared the scores'
    deviations from the mean; it means we gave more weight to the outlier.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s try to calculate data variance with Python.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: The variance above might suggest a high variance in our data, but we might want
    to use the Standard Deviation to have an actual value for our data spread measurement.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Standard Deviation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Standard deviation is the most common way to measure the data spread, and it’s
    calculated by taking the variance's square root.
  prefs: []
  type: TYPE_NORMAL
- en: '![Applying Descriptive and Inferential Statistics in Python](../Images/8191d569da91522ccceefcb49eb123e6.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: The difference between variance and the standard deviation is in the information
    their value gave. Variance value only indicates how spread our values were from
    the mean, and the variance unit differs from the original value as we squared
    the original values. However, the standard deviation value is the same unit as
    the original data value, which means the standard deviation value can be used
    directly to measure our data's spread.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s try to calculate the Standard Deviation with the following code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: One of the most common applications of standard deviation is to estimate the
    data interval. We can estimate the data interval using the empirical rule or the
    68–95–99.7 rule. The empirical rule stated that 68% of data is estimated to fall
    within the data mean ± one STD, 95% of data is mean ± two STD, and 99.7% of data
    is within mean ± three STD. Outside of this interval, it could be assumed as an
    outlier.
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Interquartile Range
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Interquartile Range (IQR) is a measure of spread calculated using the differences
    between the first and third quartile data. The quartile itself is a value that
    divides the data into four different parts. To understand better, let’s take a
    look at the following image.
  prefs: []
  type: TYPE_NORMAL
- en: '![Applying Descriptive and Inferential Statistics in Python](../Images/6830b05555f5b89216b9e8214809ad88.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: The quartile is the value that divides the data rather than the result of the
    division. We can use the following code to find the quartile values and IQR.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Using the numpy percentile function, we can acquire the quartile. By subtracting
    the third quartile and the first quartile, we get the IQR.
  prefs: []
  type: TYPE_NORMAL
- en: IQR can be used to identify the data outlier by taking the IQR value and calculating
    the data upper/lower limit. The upper limit formula is the Q3 + 1.5 * IQR, while
    the lower limit is the Q1 - 1.5 * IQR. Any values passing this limit would be
    considered outliers.
  prefs: []
  type: TYPE_NORMAL
- en: To understand better, we can use the boxplot to understand the IQR outlier detection.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '![Applying Descriptive and Inferential Statistics in Python](../Images/bb38633068e958e7b69f528a1d449818.png)'
  prefs: []
  type: TYPE_IMG
- en: The image above shows the data boxplot and the data position. The black dot
    after the upper limit is what we consider an outlier.
  prefs: []
  type: TYPE_NORMAL
- en: Inferential Statistics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Inferential statistics is a branch that generalizes the population information
    based on the data sample it comes from. Inferential statistics is used because
    it is often impossible to get the whole data population, and we need to make inferential
    from the data sample. For example, we want to understand how Indonesia people’s
    opinions about AI. However, the study would take too long if we surveyed everyone
    in the Indonesian population. Hence, we use the sample data representing the population
    and make inferences about the Indonesian population's opinion about AI.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s explore various Inferential Statistics we could use.
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Standard Error
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The standard error is an inferential statistics measurement to estimate the
    true population parameter given the sample statistic. The standard error information
    is how the sample statistic would vary if we repeat the experiment with the data
    samples from the same population.
  prefs: []
  type: TYPE_NORMAL
- en: The standard error of the mean (SEM) is the most commonly used type of standard
    error as it tells how well the mean would represent the population given the sample
    data. To calculate SEM, we would use the following equation.
  prefs: []
  type: TYPE_NORMAL
- en: '![Applying Descriptive and Inferential Statistics in Python](../Images/5bbc2dcd7b37fc3347a18644aec0869c.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Standard error of Mean would use standard deviation for the calculation. The
    standard error of the data would be smaller the higher the number of the sample,
    where smaller SE means that our sample would be great to represent the data population.
  prefs: []
  type: TYPE_NORMAL
- en: To get the standard error of the mean, we can use the following code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: We often report SEM with the data mean where the true mean population would
    estimated to fall within the mean±SEM.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 2\. Confidence interval
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Confidence interval is also used to estimate the true population parameter,
    but it introduces the confidence level. The confidence level estimates the true
    population parameters range with a certain confidence percentage.
  prefs: []
  type: TYPE_NORMAL
- en: In statistics, confidence can be described as a probability. For example, a
    confidence interval with a 90% confidence level means that the true mean population
    estimate would be within the confidence interval's upper and lower values 90 out
    of 100 times. CI is calculated with the following formula.
  prefs: []
  type: TYPE_NORMAL
- en: '![Applying Descriptive and Inferential Statistics in Python](../Images/a101e44f61d4495ed9476af1067a9c47.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: The formula above has a familiar notation except Z. The Z notation is a z-score
    acquired by defining the confidence level (e.g., 95%) and using the [z-critical
    value table](https://stats.libretexts.org/Courses/Taft_College/PSYC_2200%3A_Elementary_Statistics_for_Behavioral_and_Social_Sciences_(Oja)/Unit_1%3A_Description/5%3A_Using_z/5.03%3A_Introduction_to_the_z_table/5.03.2%3A_Table_of_Critical_Values_of_z)
    to determine the z-score (1.96 for a confidence level of 95%). Additionally, if
    our sample is small or below 30, we are supposed to use the [t-distribution table](https://www.ttable.org/).
  prefs: []
  type: TYPE_NORMAL
- en: We can use the following code to get the CI with Python.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: The above result could be interpreted that our data true population mean falls
    between the range 2.82 to 3.17 with 95% confidence level.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Hypothesis Testing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Hypothesis testing is a method in inferential statistics to conclude from data
    samples about the population. The estimated population could be the population
    parameter or the probability.
  prefs: []
  type: TYPE_NORMAL
- en: In Hypothesis testing, we need to have an assumption called the null hypothesis
    (H0), and the alternative hypothesis (Ha). Null hypothesis and alternative hypothesis
    are always opposite of each other. The hypothesis testing procedure then would
    use the sample data to determine whether or not the null hypothesis can be rejected
    or we fail to reject it (which means we accept the alternative hypothesis).
  prefs: []
  type: TYPE_NORMAL
- en: When we perform a hypothesis testing method to see if the null hypothesis must
    be rejected, we need to determine the significance level. The level of significance
    is the type 1 error ( rejecting H0 when H0 is true) maximum probability that is
    allowed to happen in the test. Usually, the significance level is 0.05 or 0.01.
  prefs: []
  type: TYPE_NORMAL
- en: To draw a conclusion from the sample, hypothesis testing uses the P-value when
    assuming the null hypothesis is true to measure how likely the sample results
    are. When the P-value is smaller than the significance level, we reject the null
    hypothesis; otherwise, we can’t reject it.
  prefs: []
  type: TYPE_NORMAL
- en: Hypothesis testing is a method that can be performed in any population parameter
    and could be performed on multiple parameters as well. For example, the below
    code would perform a t-test on two different populations to see if this data is
    significantly different than the other.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: In the t-test, we compare the means between two groups (pairwise test). The
    null hypothesis for the t-test is that there are no differences between the two
    groups' mean, while the alternative hypothesis is that there are differences between
    the two groups' mean.
  prefs: []
  type: TYPE_NORMAL
- en: The t-test result shows that the tip between the Male and Female is not significantly
    different because the P-value is above 0.05 significance level. It means we failed
    to reject the null hypothesis and conclude that there are no differences between
    the two groups' means.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, the test above only simplifies the hypothesis testing example. There
    are many assumptions we need to know when we perform hypothesis testing, and there
    are many tests that we can do to fulfill our needs.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are two major branches of statistics field which we need to know: descriptive
    and Inferential statistics. Descriptive statistics is concerned with summarizing
    data, while inferential statistics tackle data generalization to make inferences
    about the population. In this article, we have discussed descriptive and inferential
    statistics while having examples with the Python code.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Cornellius Yudha Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**
    is a data science assistant manager and data writer. While working full-time at
    Allianz Indonesia, he loves to share Python and Data tips via social media and
    writing media.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Descriptive Statistics Key Terms, Explained](https://www.kdnuggets.com/2017/05/descriptive-statistics-key-terms-explained.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data Science, Statistics and Machine Learning Dictionary](https://www.kdnuggets.com/2022/05/data-science-statistics-machine-learning-dictionary.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Fundamentals Of Statistics For Data Scientists and Analysts](https://www.kdnuggets.com/2023/08/fundamentals-statistics-data-scientists-analysts.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Statistics in Data Science: Theory and Overview](https://www.kdnuggets.com/statistics-in-data-science-theory-and-overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Statistics and Probability for Data Science](https://www.kdnuggets.com/2022/06/statistics-probability-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News, July 6: 12 Essential Data Science VSCode…](https://www.kdnuggets.com/2022/n27.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
