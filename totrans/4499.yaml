- en: How To Painlessly Analyze Your Time Series
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何轻松分析你的时间序列
- en: 原文：[https://www.kdnuggets.com/2020/03/painlessly-analyze-time-series.html](https://www.kdnuggets.com/2020/03/painlessly-analyze-time-series.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/03/painlessly-analyze-time-series.html](https://www.kdnuggets.com/2020/03/painlessly-analyze-time-series.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Andrew Van Benschoten](https://www.linkedin.com/in/andrewhvbs/), Co-Founder
    Matrix Profile Foundation**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者 [Andrew Van Benschoten](https://www.linkedin.com/in/andrewhvbs/)，Matrix
    Profile Foundation 联合创始人**'
- en: We’re surrounded by time series data. From finance to IoT to marketing, many
    organizations produce thousands of these metrics and mine them to uncover business-critical
    insights. A Site Reliability Engineer might monitor hundreds of thousands of time
    series streams from a server farm, in the hopes of detecting anomalous events
    and preventing catastrophic failure. Alternatively, a brick and mortar retailer
    might care about identifying patterns of customer foot traffic and leveraging
    them to guide inventory decisions.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们周围充满了时间序列数据。从金融到物联网，再到营销，许多组织产生了数以千计的这些指标，并对其进行挖掘以揭示商业关键洞察。一个网站可靠性工程师可能会监控来自服务器农场的数十万条时间序列流，希望检测异常事件并防止灾难性故障。另一方面，一家实体零售商可能关心识别客户流量的模式，并利用这些模式来指导库存决策。
- en: Identifying anomalous events (or “discords”) and repeated patterns (“motifs”)
    are two fundamental time series tasks. But how does one get started? There are
    dozens of approaches to both questions, each with unique positives and drawbacks.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 识别异常事件（或称“discords”）和重复模式（“motifs”）是两个基本的时间序列任务。那么，如何开始呢？针对这两个问题有数十种方法，每种方法都有其独特的优点和缺陷。
- en: Furthermore, time series data is notoriously hard to analyze, and the explosive
    growth of the data science community has led to a need for more “black-box” automated
    solutions that can be leveraged by developers with a wide range of technical backgrounds.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，时间序列数据分析 notoriously 困难，而数据科学社区的爆炸性增长带来了对更多“黑箱”自动化解决方案的需求，这些解决方案可以被具有广泛技术背景的开发人员所利用。
- en: '![Figure](../Images/346db31b632fe4278a72c26744bdae53.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/346db31b632fe4278a72c26744bdae53.png)'
- en: 'How to analyze your time series in a single picture (Image Source: Matrix Profile
    Foundation)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如何用一张图分析你的时间序列（图片来源：Matrix Profile Foundation）
- en: 'We at the Matrix Profile Foundation believe there’s an easy answer. While it’s
    true that there’s no such thing as a free lunch, the Matrix Profile (a data structure
    & set of associated algorithms developed by the [Keogh research group](https://www.cs.ucr.edu/~eamonn/MatrixProfile.html)
    at UC-Riverside) is a powerful tool to help solve this dual problem of anomaly
    detection and motif discovery. Matrix Profile is robust, scalable, and largely
    parameter-free: we’ve seen it work for a wide range of metrics including website
    user data, order volume and other business-critical applications.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 Matrix Profile Foundation 相信，问题的答案其实很简单。虽然说没有免费的午餐，但 Matrix Profile（一个由
    [Keogh 研究组](https://www.cs.ucr.edu/~eamonn/MatrixProfile.html) 在 UC-Riverside
    开发的数据结构和相关算法集合）是一个强大的工具，可以帮助解决异常检测和模式发现这两个双重问题。Matrix Profile 具有稳健性、可扩展性，并且基本无需参数：我们已经看到它在包括网站用户数据、订单量和其他商业关键应用在内的广泛指标中发挥了作用。
- en: As we will detail below, the Matrix Profile Foundation has implemented the Matrix
    Profile across three of the most common data science languages (Python, R and
    Golang) as an easy-to-use API that’s relevant for time series novices and experts
    alike.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如下文所述，Matrix Profile Foundation 已经在三种最常见的数据科学语言（Python、R 和 Golang）中实现了 Matrix
    Profile，作为一个易于使用的 API，适合时间序列的新手和专家。
- en: So what is the Matrix Profile?
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 那么，Matrix Profile 是什么呢？
- en: 'The basics of Matrix Profile are simple: If I take a snippet of my data and
    slide it along the rest of the time series, how well does it overlap at each new
    position? More specifically, we can evaluate the Euclidean distance between a
    subsequence and every possible time series segment of the same length, building
    up what’s known as the snippet’s “Distance Profile.”'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Matrix Profile 的基本概念很简单：如果我拿一段数据并将其沿着时间序列滑动，那么它在每个新位置上的重叠程度如何？更具体地说，我们可以评估一个子序列与每个相同长度的时间序列段之间的欧几里得距离，从而构建所谓的片段“距离配置文件”。
- en: 'If the subsequence repeats itself in the data, there will be at least one perfect
    match and the minimum Euclidean distance will be zero (or close to zero in the
    presence of noise). In contrast, if the subsequence is highly unique (say it contains
    a significant outlier), matches will be poor and all overlap scores will be high.
    Note that the type of data is irrelevant: We’re only looking at general pattern
    conservation.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据中子序列重复，将至少有一个完美匹配，最小欧几里得距离将为零（或在噪声存在的情况下接近零）。相比之下，如果子序列非常独特（例如包含显著的异常值），匹配将很差，所有重叠分数都将很高。请注意，数据类型并不重要：我们只关心一般模式的保留。
- en: We then slide every possible snippet across the time series, building up a collection
    of Distance Profiles. By taking the minimum value for each time step across all
    distance profiles, we can build the final Matrix Profile. Notice that both ends
    of the Matrix Profile value spectrum are useful. High values indicate uncommon
    patterns or anomalous events; in contrast, low values highlight repeatable motifs
    and provide valuable insight into your time series of interest.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将每一个可能的片段滑过时间序列，建立起距离剖析的集合。通过取每个时间步长上所有距离剖析的最小值，我们可以建立最终的矩阵剖析。注意，矩阵剖析值谱的两个端点都是有用的。高值表示不常见的模式或异常事件；相反，低值突出可重复的模式，并为你的时间序列提供有价值的洞察。
- en: '![Figure](../Images/7913adf0d7c793e66eb67d40e2678cc1.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/7913adf0d7c793e66eb67d40e2678cc1.png)'
- en: 'Image Source: Matrix Profile Foundation'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：矩阵剖析基金会
- en: For those interested, [this post by one of our co-founders ](https://towardsdatascience.com/introduction-to-matrix-profiles-5568f3375d90)provides
    a more in-depth discussion of the Matrix Profile.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对于感兴趣的读者，[我们的一位联合创始人撰写的这篇文章](https://towardsdatascience.com/introduction-to-matrix-profiles-5568f3375d90)提供了对矩阵剖析的更深入讨论。
- en: 'Although the Matrix Profile can be a game-changer for time series analysis,
    leveraging it to produce insights is a multi-step computational process, where
    each step requires some level of domain experience. However, we believe that the
    most powerful breakthroughs in data science occur when the complex is made accessible.
    When it comes to the Matrix Profile, there are three facets to accessibility:
    “out-of-the-box” working implementations, gentle introductions to core concepts
    that can naturally lead into deeper exploration, and multi-language accessibility.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管矩阵剖析（Matrix Profile）在时间序列分析中可以成为改变游戏规则的工具，但利用它生成洞察力是一个多步骤的计算过程，每一步都需要一定的领域经验。然而，我们相信，数据科学中最强大的突破发生在复杂的事物变得易于接触时。关于矩阵剖析，易于接触有三个方面：“开箱即用”的实现，温和的核心概念介绍，能够自然引导深入探索，以及多语言的可访问性。
- en: Today, we’re proud to unveil the Matrix Profile API (MPA), a common codebase
    written in R, Python and Golang that achieves all three of these goals.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，我们很自豪地推出矩阵剖析 API（MPA），这是一个用 R、Python 和 Golang 编写的通用代码库，实现了所有这三个目标。
- en: 'MPA: how it works'
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MPA：它的工作原理
- en: Using the Matrix Profile consists of three steps.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 使用矩阵剖析包括三个步骤。
- en: 'First, you Compute the Matrix Profile itself. However, this is not the end:
    you need to Discover something by leveraging the Matrix Profile that you’ve created.
    Do you want to find repeated patterns? Or perhaps uncover anomalous events? Finally,
    it’s critical that you Visualize your findings, as time series analysis greatly
    benefits from some level of visual inspection.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要计算矩阵剖析本身。然而，这还不是终点：你需要利用你创建的矩阵剖析来发现一些东西。你是想寻找重复的模式？还是发现异常事件？最后，关键是你需要可视化你的发现，因为时间序列分析在一定程度上的可视化检查中获益匪浅。
- en: Normally, you’d need to read through pages of documentation (both academic and
    technical) to figure out how to execute each of these three steps. This may not
    be a challenge if you’re an expert with prior knowledge of the Matrix Profile,
    but we’ve seen that many users simply want to Analyze their data by breaking through
    the methodology to get to a basic starting point. Can the code simply leverage
    some reasonable defaults to produce a reasonable output?
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你需要阅读大量文档（包括学术和技术）来了解如何执行这三个步骤中的每一个。如果你是一个对矩阵剖析有先前知识的专家，这可能不是问题，但我们发现许多用户只是希望通过突破方法论来分析他们的数据，以获得一个基本的起点。代码是否可以简单地利用一些合理的默认值来生成合理的输出？
- en: 'To parallel this natural computational flow, MPA consists of three core components:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与这种自然的计算流程相并行，MPA 包含三个核心组件：
- en: Compute (computing the Matrix Profile)
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算（计算矩阵剖析）
- en: Discover (evaluate the MP for motifs, discords, etc)
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发现（评估MP以寻找模式、异异常等）
- en: Visualize (display results through basic plots)
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可视化（通过基本图表展示结果）
- en: As Matrix Profile is only a few years old, we anticipate continued development
    and plan to update this library accordingly; we gladly welcome both community
    feedback and development assistance! We also desire to educate the data science
    community about this technique through a growing collection of Jupyter Notebook
    tutorials. Open-source tools form the backbone of modern analytics, and we hope
    this implementation serves other users as effectively as it has served us.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Matrix Profile 仅有几年的历史，我们预期其会持续发展，并计划相应地更新该库；我们热忱欢迎社区反馈和开发协助！我们还希望通过不断增加的
    Jupyter Notebook 教程来教育数据科学社区这一技术。开源工具构成了现代分析的基础，我们希望这一实现能像对我们一样有效地服务于其他用户。
- en: These three capabilities are wrapped up into a high-level capability called
    Analyze. This is a user-friendly interface that enables people who know nothing
    about the inner workings of Matrix Profile to quickly leverage it for their own
    data. And as users gain more experience and intuition with MPA, they can easily
    dive deeper into any of the three core components to make further functional gains.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这三种功能被封装成一个称为 Analyze 的高级功能。这是一个用户友好的界面，使得不了解 Matrix Profile 内部工作的用户也能快速利用它来处理自己的数据。随着用户对
    MPA 的经验和直觉的增加，他们可以轻松深入了解这三个核心组件，以实现进一步的功能提升。
- en: 'MPA: a toy example'
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MPA：一个玩具示例
- en: 'As an example, we’ll use the [Python flavor of MPA ](https://github.com/matrix-profile-foundation/matrixprofile)to
    analyze the synthetic time series shown below:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 作为示例，我们将使用 [MPA 的 Python 版本](https://github.com/matrix-profile-foundation/matrixprofile)
    来分析下面显示的合成时间序列：
- en: '[PRE0] from matplotlib import pyplot as plt  import numpy as np  import matrixprofile
    as mp    %matplotlib inline    data = pd.read_csv(''rawdata.csv'')  vals = data.data.values    fig,ax
    = plt.subplots(figsize=(20,10))  ax.plot(np.arange(len(vals)),vals, label = ''Test
    Data'') [PRE1]` ![Figure](../Images/077d379d2c747a12f13d32d204985afa.png)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE0] from matplotlib import pyplot as plt  import numpy as np  import matrixprofile
    as mp    %matplotlib inline    data = pd.read_csv(''rawdata.csv'')  vals = data.data.values    fig,ax
    = plt.subplots(figsize=(20,10))  ax.plot(np.arange(len(vals)),vals, label = ''测试数据'')
    [PRE1]` ![图像](../Images/077d379d2c747a12f13d32d204985afa.png)'
- en: 'Image Source: Matrix Profile Foundation'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：Matrix Profile Foundation
- en: 'Visual inspection reveals that there are both patterns and discords present.
    However, one immediate problem is that your choice of subsequence length will
    change both the number and location of your motifs! Are there only two sinusoidal
    motifs present between indices 0–500, or is each cycle an instance of the pattern?
    Let’s see how MPA handles this challenge:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 视觉检查显示存在模式和不一致。然而，一个直接的问题是你选择的子序列长度将改变模式的数量和位置！在索引 0–500 之间只有两个正弦模式，还是每个周期都是该模式的一个实例？让我们看看
    MPA 如何处理这个挑战：
- en: '[PRE2] profile, figures = mp.analyze(vals) [PRE3]` ![Figure](../Images/346db31b632fe4278a72c26744bdae53.png)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE2] profile, figures = mp.analyze(vals) [PRE3]` ![图像](../Images/346db31b632fe4278a72c26744bdae53.png)'
- en: 'Image Source: Matrix Profile Foundation'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：Matrix Profile Foundation
- en: Because we haven’t specified any information regarding our subsequence length,
    `analyze` begins by leveraging a powerful calculation known as the pan-matrix
    profile (or PMP) to generate insights that will help us evaluate different subsequence
    lengths. We’ll discuss the details of PMP in a later post (or you can read the
    associated paper), but in a nutshell, it is a global calculation of all possible
    subsequence lengths condensed into a single visual summary. The X-axis is the
    index of the matrix profile, and the Y-axis is the corresponding subsequence length.
    The darker the shade, the lower the Euclidean distance at that point. We can use
    the “peaks” of the triangles to find the 6 “big” motifs visually present in the
    synthetic time series.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们没有指定任何关于子序列长度的信息，`analyze` 通过利用一种称为全矩阵配置文件（或 PMP）的强大计算来生成帮助我们评估不同子序列长度的见解。我们将在后续文章中讨论
    PMP 的细节（或者你可以阅读相关论文），但简而言之，它是将所有可能的子序列长度的全局计算浓缩成一个单一的视觉摘要。X 轴是矩阵配置文件的索引，Y 轴是对应的子序列长度。阴影越深，那个点的欧几里得距离越小。我们可以使用三角形的“峰值”来直观地找到合成时间序列中存在的
    6 个“大”模式。
- en: The PMP is all well and good, but we promised a simple way of understanding
    your time series. To facilitate this, `analyze` will combine PMP with an under
    the hood algorithm to choose sensible motifs and discords from across all possible
    window sizes. The additional graphs created by `analyze` show the top three motifs
    and top three discords, along with the corresponding window size and position
    within the Matrix Profile (and, by extension, your time series).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: PMP 本身很不错，但我们承诺提供一种简单的方式来理解你的时间序列。为此，`analyze` 将结合 PMP 和底层算法，从所有可能的窗口大小中选择合适的模式和异常值。`analyze`
    创建的附加图表展示了前三个模式和前三个异常值，以及对应的窗口大小和在 Matrix Profile 中的位置（并且，扩展到你的时间序列）。
- en: '![Figure](../Images/86955e87759c0cd37366f19d7341a02d.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/86955e87759c0cd37366f19d7341a02d.png)'
- en: 'Image Source: Matrix Profile Foundation![Figure](../Images/2ba3b61bb0ac6e537d74e9707b8dfcf3.png)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：Matrix Profile Foundation![图示](../Images/2ba3b61bb0ac6e537d74e9707b8dfcf3.png)
- en: 'Image Source: Matrix Profile Foundation![Figure](../Images/de8f7a67b135280283a5af0c6e092540.png)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：Matrix Profile Foundation![图示](../Images/de8f7a67b135280283a5af0c6e092540.png)
- en: 'Image Source: Matrix Profile Foundation![Figure](../Images/9d8450c40c54daf033e1bceaa20777e1.png)'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：Matrix Profile Foundation![图示](../Images/9d8450c40c54daf033e1bceaa20777e1.png)
- en: 'Image Source: Matrix Profile Foundation![Figure](../Images/45342715c29e4ab33523f1584281561a.png)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：Matrix Profile Foundation![图示](../Images/45342715c29e4ab33523f1584281561a.png)
- en: 'Image Source: Matrix Profile Foundation'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：Matrix Profile Foundation
- en: Not surprisingly, this is a lot of information coming out of the default setting.
    Our goal is that this core function call can serve as a jumping-off point for
    many of your future analyses. For example, the PMP indicates that there is a conserved
    motif of length ~175 within our time series. Try calling `analyze` on that subsequence
    length and see what happens!
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 不出所料，默认设置下的信息量很大。我们的目标是让这个核心功能调用能够作为你未来许多分析的起点。例如，PMP 表明我们的时间序列中存在一个长度约为 175
    的保守模式。尝试对该子序列长度调用 `analyze`，看看会发生什么！
- en: '[PRE4] profile, figures = mp.analyze(vals,windows=175) [PRE5]`'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE4] profile, figures = mp.analyze(vals,windows=175) [PRE5]`'
- en: Wrapping Up
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结
- en: We hope that MPA enables you to more painlessly analyze your time series! For
    further information, visit our [website](https://matrixprofile.org/), [GitHub
    repos ](https://github.com/matrix-profile-foundation), or follow us on [Twitter](https://twitter.com/matrixprofile).
    Please star our GitHub repos if you find the code useful! MPF also operates a
    Discord channel where you can engage with fellow users of the Matrix Profile and
    ask questions. Happy time series hunting!
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望 MPA 能使你更轻松地分析时间序列！欲了解更多信息，请访问我们的 [网站](https://matrixprofile.org/)、[GitHub
    仓库](https://github.com/matrix-profile-foundation) 或关注我们的 [Twitter](https://twitter.com/matrixprofile)。如果你发现代码有用，请给我们的
    GitHub 仓库加星！MPF 还运营一个 Discord 频道，你可以在这里与其他 Matrix Profile 用户互动并提问。祝你在时间序列分析中好运！
- en: '**Acknowledgements**'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**致谢**'
- en: Thank you to Tyler Marrs, Frankie Cancino, Francisco Bischoff, Austin Ouyang
    and Jack Green for reviewing this article and assisting in its creation. And above
    all, thank you to Eamonn Keogh, Abdullah Mueen and their numerous graduate students
    for creating the Matrix Profile and continuing to drive its development.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢 Tyler Marrs、Frankie Cancino、Francisco Bischoff、Austin Ouyang 和 Jack Green
    对本文的审阅及创作协助。最重要的是，感谢 Eamonn Keogh、Abdullah Mueen 及他们众多的研究生，感谢他们创建了 Matrix Profile
    并持续推动其发展。
- en: '**Supplemental**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**补充信息**'
- en: Matrix Profile research papers can be found on Eamonn Keogh’s UCR web page: [https://www.cs.ucr.edu/~eamonn/MatrixProfile.html](https://www.cs.ucr.edu/~eamonn/MatrixProfile.html)
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Matrix Profile 研究论文可以在 Eamonn Keogh 的 UCR 页面找到：[https://www.cs.ucr.edu/~eamonn/MatrixProfile.html](https://www.cs.ucr.edu/~eamonn/MatrixProfile.html)
- en: The Python implementation of Matrix Profile algorithms can be found here: [https://github.com/matrix-profile-foundation/matrixprofile](https://github.com/matrix-profile-foundation/matrixprofile)
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Matrix Profile 算法的 Python 实现可以在这里找到：[https://github.com/matrix-profile-foundation/matrixprofile](https://github.com/matrix-profile-foundation/matrixprofile)
- en: The R implementation of Matrix Profile algorithms can be found here: [https://github.com/matrix-profile-foundation/tsmp](https://github.com/matrix-profile-foundation/tsmp)
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Matrix Profile 算法的 R 实现可以在这里找到：[https://github.com/matrix-profile-foundation/tsmp](https://github.com/matrix-profile-foundation/tsmp)
- en: The Golang implementation of Matrix Profile algorithms can be found here: [https://github.com/matrix-profile-foundation/go-matrixprofile](https://github.com/matrix-profile-foundation/go-matrixprofile)
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Matrix Profile 算法的 Golang 实现可以在这里找到：[https://github.com/matrix-profile-foundation/go-matrixprofile](https://github.com/matrix-profile-foundation/go-matrixprofile)
- en: '**Bio: [Andrew Van Benschoten](https://www.linkedin.com/in/andrewhvbs/)** is
    a data science leader with a proven record of leveraging complex information to
    produce valuable insights. Experienced with both personnel and project management
    and effective at communicating results to interdisciplinary stakeholders.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**简历：[Andrew Van Benschoten](https://www.linkedin.com/in/andrewhvbs/)** 是一位数据科学领袖，拥有利用复杂信息生成有价值洞察的良好记录。擅长人员和项目管理，并且能够有效地向跨学科的利益相关者传达结果。'
- en: '[Original](https://matrixprofile.org/posts/how-to-painlessly-analyze-your-time-series/).
    Reposted with permission.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://matrixprofile.org/posts/how-to-painlessly-analyze-your-time-series/)。经许可转载。'
- en: '**Related:**'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Time Series Classification Synthetic vs Real Financial Time Series](/2020/03/time-series-classification-synthetic-real-financial-time-series.html)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[时间序列分类：合成与真实金融时间序列](/2020/03/time-series-classification-synthetic-real-financial-time-series.html)'
- en: '[Introduction to Geographical Time Series Prediction with Crime Data in R,
    SQL, and Tableau](/2020/02/introduction-geographical-time-series-crime-r-sql-tableau.html)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[利用 R、SQL 和 Tableau 进行地理时间序列预测介绍](/2020/02/introduction-geographical-time-series-crime-r-sql-tableau.html)'
- en: '[Forecasting Stories: Is it seasonality or not?](/2020/03/forecasting-stories-seasonality.html)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[预测故事：这是季节性还是其他？](/2020/03/forecasting-stories-seasonality.html)'
- en: '* * *'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升您的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持您的组织的 IT。'
- en: '* * *'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Drag, Drop, Analyze: The Rise of No-Code Data Science](https://www.kdnuggets.com/drag-drop-analyze-the-rise-of-nocode-data-science)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[拖拽、放置、分析：无代码数据科学的崛起](https://www.kdnuggets.com/drag-drop-analyze-the-rise-of-nocode-data-science)'
- en: '[Market Data and News: A Time Series Analysis](https://www.kdnuggets.com/2022/06/market-data-news-time-series-analysis.html)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[市场数据和新闻：时间序列分析](https://www.kdnuggets.com/2022/06/market-data-news-time-series-analysis.html)'
- en: '[A Faster Way to Prepare Time-Series Data with the AI & Analytics Engine](https://www.kdnuggets.com/2021/12/piexchange-faster-way-prepare-timeseries-data-ai-analytics-engine.html)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 AI 和分析引擎更快准备时间序列数据](https://www.kdnuggets.com/2021/12/piexchange-faster-way-prepare-timeseries-data-ai-analytics-engine.html)'
- en: '[Building a Tractable, Feature Engineering Pipeline for Multivariate…](https://www.kdnuggets.com/2022/03/building-tractable-feature-engineering-pipeline-multivariate-time-series.html)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[为多变量时间序列构建一个可处理的特征工程管道…](https://www.kdnuggets.com/2022/03/building-tractable-feature-engineering-pipeline-multivariate-time-series.html)'
- en: '[Time Series Forecasting with Ploomber, Arima, Python, and Slurm](https://www.kdnuggets.com/2022/03/time-series-forecasting-ploomber-arima-python-slurm.html)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Ploomber、Arima、Python 和 Slurm 进行时间序列预测](https://www.kdnuggets.com/2022/03/time-series-forecasting-ploomber-arima-python-slurm.html)'
- en: '[Generate Synthetic Time-series Data with Open-source Tools](https://www.kdnuggets.com/2022/06/generate-synthetic-timeseries-data-opensource-tools.html)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用开源工具生成合成时间序列数据](https://www.kdnuggets.com/2022/06/generate-synthetic-timeseries-data-opensource-tools.html)'
