["```py\nTime_lapse_2 AS\n\n    SELECT cust_id,\n\n           Visit_month,\n\n           lag(visit_month, 1) over (partition BY cust_id ORDER BY cust_id, visit_month)\n\n     FROM visit_log\n\nTime_diff_calculated_2 AS\n\n    SELECT cust_id,\n\n           visit_month,\n\n           lag,\n\n           visit_month — lag AS time_diff\n\n     FROM time_lapse_2\n\nCusts_categorized AS\n\n    SELECT cust_id,\n\n           visit_month,\n\n           CASE\n\n                    WHEN time_diff=1 THEN ‘retained’,\n\n                    WHEN time_diff>1 THEN ‘returning’,\n\n                    WHEN time_diff IS NULL THEN ‘new’\n\n           END AS cust_type\n\nFROM time_diff_calculated_2\n```", "```py\nSELECT visit_month,\n\n       cust_type,\n\n       Count(cust_id)\n\nFROM custs_categorized\n\nGROUP BY 1,\n\n         2\n```", "```py\nfirst_visit AS\n\n    SELECT cust_id,\n\n           min(visit_month) AS first_month\n\n    FROM visit_log\n\n    GROUP BY 1\n```", "```py\nNew_users AS\n\n    SELECT first_month,\n\n           count(DISTINCT cust_id) AS new_users\n\n    FROM first_visit\n\n    GROUP BY 1\n```", "```py\nSELECT *\n\nFROM visit_log\n\n     LEFT JOIN visit_log AS visit_tracker\n\n            ON visit_log.cust_id = visit_tracker.cust_id\n\n               AND visit_log.visit_month < visit_tracker.visit_month\n```", "```py\nSELECT first_month,\n\n       new_users,\n\n       retention_month,\n\n       retained,\n\n       retention_percent\n\nFROM (\n\n           SELECT first_month,\n\n                  new_users,\n\n                  Count(DISTINCT visit_tracker.cust_id) AS retained count(DISTINCT visit)tracker.cust_id)/new_users AS retention_percent\n\nFROM      first_visit\n\nLEFT JOIN visit_log AS visit_tracker\n\nON        visit_log.visit_month < visit_tracker.visit_month\n\nLEFT JOIN new_users\n\nON        new_users.first_month=first_visit.first_month\n\nGROUP BY 1,\n\n         2)\n```"]