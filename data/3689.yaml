- en: Introducing the Testing Library for Natural Language Processing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍自然语言处理的测试库
- en: 原文：[https://www.kdnuggets.com/2023/04/introducing-testing-library-natural-language-processing.html](https://www.kdnuggets.com/2023/04/introducing-testing-library-natural-language-processing.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2023/04/introducing-testing-library-natural-language-processing.html](https://www.kdnuggets.com/2023/04/introducing-testing-library-natural-language-processing.html)
- en: '![Introducing the Testing Library for Natural Language Processing](../Images/188421fbd7c89a669b42e54d9e1c10e6.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![介绍自然语言处理的测试库](../Images/188421fbd7c89a669b42e54d9e1c10e6.png)'
- en: 'Responsible AI: Goals versus Reality'
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 负责任的AI：目标与现实
- en: '* * *'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三名课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你所在组织的IT'
- en: '* * *'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: While there is a lot of talk about the need to train AI models that are safe,
    robust, and equitable - few tools have been made available to data scientists
    to meet these goals. As a result, the front line of Natural Language Processing
    (NLP) models in production systems reflects a sorry state of affairs.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有很多关于训练安全、稳健和公平的AI模型的讨论——但很少有工具提供给数据科学家以实现这些目标。因此，生产系统中的自然语言处理（NLP）模型的前线反映了一个令人遗憾的现状。
- en: Current NLP systems fail often and miserably. [[Ribeiro 2020](https://arxiv.org/abs/2005.04118)]
    showed how sentiment analysis services of the top three cloud providers fail 9-16%
    of the time when replacing neutral words, 7-20% of the time when changing neutral
    named entities, 36-42% of the time on temporal tests, and almost 100% of the time
    on some negation tests. [[Song & Raghunathan 2020](https://arxiv.org/abs/2004.00053)]
    showed data leakage of 50-70% of personal information into popular word & sentence
    embeddings. [[Parrish et. al. 2021](https://arxiv.org/abs/2110.08193)] showed
    how biases around race, gender, physical appearance, disability, and religion
    are ingrained in state-of-the-art question answering models – sometimes changing
    the likely answer more than 80% of the time. [[van Aken et. al. 2022](https://arxiv.org/abs/2111.15512)]
    showed how adding any mention of ethnicity to a patient note reduces their predicted
    risk of mortality – with the most accurate model producing the largest error.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 目前的自然语言处理系统经常失败且失败得非常惨烈。[[Ribeiro 2020](https://arxiv.org/abs/2005.04118)] 显示了在替换中性词时，顶级三大云服务提供商的情感分析服务失败率为9-16%，在更改中性命名实体时为7-20%，在时间测试中为36-42%，在一些否定测试中几乎为100%。[[Song
    & Raghunathan 2020](https://arxiv.org/abs/2004.00053)] 显示了50-70%的个人信息泄露到流行的词汇和句子嵌入中。[[Parrish
    et. al. 2021](https://arxiv.org/abs/2110.08193)] 显示了种族、性别、外貌、残疾和宗教的偏见如何根深蒂固地存在于最先进的问答模型中——有时会使可能的答案发生超过80%的变化。[[van
    Aken et. al. 2022](https://arxiv.org/abs/2111.15512)] 显示了在病人记录中添加任何关于族裔的提及都会降低其预测的死亡风险——最准确的模型产生了最大的误差。
- en: In short, these systems just don’t work. We would never accept a calculator
    that only adds correctly some of the numbers, or a microwave which randomly alters
    its strength based on the kind of food you put in or the time of day. A well-engineered
    production system should work reliably on common inputs. It should also be safe
    & robust when handling uncommon ones. Software engineering includes three fundamental
    principles to help us get there.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，这些系统就是不管用。我们绝不会接受一个只在某些数字上正确加法的计算器，或一个根据你放入的食物类型或时间随机改变强度的微波炉。一个经过良好工程设计的生产系统应该能在常见输入上可靠地工作。它在处理不常见输入时也应该是安全和稳健的。软件工程包括三个基本原则，以帮助我们实现这些目标。
- en: Applying Software Engineering Fundamentals
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用软件工程基础
- en: 'First, **test your software**. The only surprising thing about why NLP models
    fail today is the banality of the answer: because no one tested them. The papers
    cited above were novel because they were among the first. If you want to deliver
    software systems that work, you need to define what that means, and test that
    it does, before deploying it to production. You should also do that whenever you
    change the software, since NLP models regress too [[Xie et. al. 2021](https://arxiv.org/abs/2105.03048)].'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，**测试你的软件**。关于为什么 NLP 模型今天会失败，唯一令人惊讶的事是答案的平凡性：因为没有人测试它们。上述论文之所以新颖，是因为它们是其中的首批。如果你想交付有效的软件系统，你需要定义什么是有效，并在部署到生产环境之前测试它是否有效。每次更改软件时也应如此，因为
    NLP 模型也会出现回退问题 [[Xie et. al. 2021](https://arxiv.org/abs/2105.03048)]。
- en: Second, **don’t reuse academic models as production-ready ones**. One wonderful
    aspect of scientific progress in NLP is that most academics make their models
    publicly available and easily reusable. This makes research faster and enables
    benchmarks like [SuperGLUE](https://super.gluebenchmark.com/), [LM-Harness](https://github.com/EleutherAI/lm-evaluation-harness),
    and [BIG-bench](https://github.com/google/BIG-bench). However, tools that are
    designed to reproduce research results are not a good fit for use in production.
    Reproducibility requires that models stay the same – instead of keeping them current
    or more robust over time. A common example is [BioBERT](https://arxiv.org/abs/1901.08746),
    perhaps the most widely used biomedical embeddings model, which was published
    in early 2019 and hence considers COVID-19 an out-of-vocabulary word.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，**不要将学术模型作为生产就绪模型重复使用**。NLP 科学进步的一个美妙方面是，大多数学者将他们的模型公开并易于重用。这加速了研究，并启用了像
    [SuperGLUE](https://super.gluebenchmark.com/)、[LM-Harness](https://github.com/EleutherAI/lm-evaluation-harness)
    和 [BIG-bench](https://github.com/google/BIG-bench) 这样的基准。然而，旨在复制研究结果的工具并不适合用于生产。可重复性要求模型保持不变——而不是保持其最新或随时间变得更稳健。一个常见的例子是
    [BioBERT](https://arxiv.org/abs/1901.08746)，也许是最广泛使用的生物医学嵌入模型，发布于2019年初，因此将 COVID-19
    视为一个词汇表外的词。
- en: 'Third, **test beyond accuracy**. Since the business requirements for your NLP
    system include robustness, reliability, fairness, toxicity, efficiency, lack of
    bias, lack of data leakage, and safety – then your test suites need to reflect
    that. [Holistic Evaluation of Language Models](https://arxiv.org/abs/2211.09110)
    [Liang et. al 2022] is a comprehensive review of definitions and metrics for these
    terms in different contexts and a well-worth read. But you will need to write
    your own tests: for example, what does inclusiveness actually mean for your application?'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 其三，**测试超越准确性**。由于你的 NLP 系统的业务需求包括稳健性、可靠性、公平性、毒性、效率、无偏见、无数据泄露和安全性——因此你的测试套件需要反映这些要求。[语言模型的整体评估](https://arxiv.org/abs/2211.09110)
    [Liang et. al 2022] 是对这些术语在不同上下文中的定义和度量的全面回顾，非常值得一读。但你需要编写自己的测试：例如，对于你的应用程序来说，包容性实际意味着什么？
- en: Good tests need to be specific, isolated, and easy to maintain. They also need
    to be versioned & executable, so that you can make them part of an automated build
    or MLOps workflow. The nlptest library is a simple framework that makes this simpler.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 良好的测试需要具体、独立且易于维护。它们还需要有版本控制和可执行性，以便将其纳入自动构建或 MLOps 工作流。nlptest 库是一个简单的框架，可以简化这一过程。
- en: Introducing the nlptest Library
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 nlptest 库
- en: '[The nlptest library](https://www.nlptest.org) is designed around five principles.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[nlptest 库](https://www.nlptest.org) 是围绕五个原则设计的。'
- en: '**Open Source**. This is a community project under the Apache 2.0 license.
    It’s free to use forever with no caveats, including for commercial use. There’s
    an active development team behind it, and you’re welcome to contribute or fork
    the code if you’d like to.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**开源**。这是一个基于 Apache 2.0 许可证的社区项目。它可以永久免费使用，包括商业用途，没有任何限制。背后有一个活跃的开发团队，你可以参与贡献或分叉代码。'
- en: '**Lightweight**. The library runs on your laptop – no need for a cluster, a
    high-memory server, or a GPU. It requires only pip install nlptest to install
    and can run offline (i.e., in a VPN or a high-compliance enterprise environment).
    Then, generating and running tests can be done in as little as three lines of
    code:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**轻量级**。这个库可以在你的笔记本电脑上运行——不需要集群、高内存服务器或 GPU。只需运行 `pip install nlptest` 就能安装，并且可以离线运行（即在
    VPN 或高合规企业环境中）。然后，生成和运行测试可以在三行代码内完成：'
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This code imports the library, creates a new test harness for the named entity
    recognition (NER) task for the specified model from John Snow Labs’ NLP models
    hub, automatically generates test cases (based on the default configuration),
    runs those tests, and prints out a report.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码导入库，为指定模型从 John Snow Labs 的 NLP 模型中心创建一个新的命名实体识别（NER）任务的测试工具，自动生成测试用例（基于默认配置），运行这些测试，并打印出报告。
- en: The tests themselves are stored in a pandas data frame – making them easy to
    edit, filter, import, or export. The entire test harness can be saved and loaded,
    so to run a regression test of a previously configured test suite, just call h.load(“filename”).run().
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 测试本身存储在 pandas 数据框中，这使得它们易于编辑、过滤、导入或导出。整个测试工具可以被保存和加载，因此要运行之前配置的测试套件的回归测试，只需调用
    `h.load("filename").run()`。
- en: '**Cross Library**. There is out-of-the-box support for [transformers](https://huggingface.co/docs/transformers/index),
    [Spark NLP](https://nlp.johnsnowlabs.com/), and [spacy](https://spacy.io/). It
    is easy to extend the framework to support additional libraries. There is no reason
    for us as an AI community to build the test generation & execution engines more
    than once. Both pre-trained and custom NLP pipelines from any of these libraries
    can be tested:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**跨库**。库支持 [transformers](https://huggingface.co/docs/transformers/index)、[Spark
    NLP](https://nlp.johnsnowlabs.com/) 和 [spacy](https://spacy.io/)。扩展框架以支持额外的库非常容易。作为
    AI 社区，我们没有必要重复构建测试生成和执行引擎。这些库中的任何预训练或自定义 NLP 流水线都可以进行测试：'
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Extensible**. Since there are hundreds of potential types of tests and metrics
    to support, additional NLP tasks of interest, and custom needs for many projects,
    much thought has been put into making it easy to implement and reuse new types
    of tests.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**可扩展**。由于有数百种潜在的测试类型和度量需要支持，许多项目对 NLP 任务的额外兴趣，以及自定义需求，已经付出了大量的思考，以便于实现和重用新的测试类型。'
- en: For example, one of the built-in test types for bias for US English replaces
    first & last names with names that are common for White, Black, Asian, or Hispanic
    people. But what if your application is intended for India or Brazil? What about
    testing for bias based on age or disability? What if you come up with a different
    metric for when a test should pass?
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，对于美国英语的内置偏见测试类型之一，将名字替换为白人、黑人、亚洲人或西班牙裔常见的名字。但是，如果你的应用程序面向印度或巴西呢？那基于年龄或残疾的偏见测试呢？如果你想到了一种不同的测试通过标准怎么办？
- en: The nlptest library is a framework which enables you to easily write and then
    mix & match test types. The TestFactory class defines a standard API for different
    tests to be configured, generated, and executed. We’ve worked hard to make it
    as easy as possible for you to contribute or customize the library to your needs.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: nlptest 库是一个框架，它使你能够轻松编写并组合不同类型的测试。TestFactory 类定义了一个标准 API，用于配置、生成和执行不同的测试。我们已经尽力让你能够轻松地贡献或定制这个库以满足你的需求。
- en: '**Test Models and Data**. When a model is not ready for production, the issues
    are often in the dataset used to train or evaluate it – not in the modeling architecture.
    One common issue is mislabeled training examples, shown to be pervasive in widely
    used datasets [[Northcutt et. al. 2021](https://arxiv.org/abs/2103.14749)]. Another
    issue is reprentation bias: a common challenge to finding how well a model performs
    across ethnic lines is that there aren’t enough test labels to even calculate
    a usable metric. It is then apt to have the library fail a test and tell you that
    you need to change the training & test sets to represent other groups, fix likely
    mistakes, or train for edge cases.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**测试模型和数据**。当模型还没有准备好进行生产时，问题通常出在用于训练或评估模型的数据集上——而不是模型架构本身。一个常见的问题是标记错误的训练示例，这在广泛使用的数据集中被证明是普遍存在的
    [[Northcutt et. al. 2021](https://arxiv.org/abs/2103.14749)]。另一个问题是表示偏差：一个常见的挑战是，找出模型在不同种族之间的表现如何，因为没有足够的测试标签来计算一个可用的度量。因此，库可能会使测试失败，并告诉你需要更改训练和测试集以代表其他群体，修复可能的错误，或训练边缘情况。'
- en: 'Therefore, a test scenario is defined by a task, a model, and a dataset, i.e.:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，测试场景由一个任务、一个模型和一个数据集定义，即：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Beyond enabling the library to provide a comprehensive testing strategy for
    both models & data, this setup also enables you to use generated tests to augment
    your training and test datasets, which can greatly shorten the time needed to
    fix models and make them production ready.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 除了使库能够为模型和数据提供全面的测试策略外，这种设置还使你能够使用生成的测试来增强你的训练和测试数据集，这可以大大缩短修复模型并使其准备生产的时间。
- en: 'The next sections describe the three tasks that the nlptest library helps you
    automate: Generating tests, running tests, and augmenting data.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的章节描述了`nlptest`库帮助你自动化的三个任务：生成测试、运行测试和数据增强。
- en: '![Introducing the Testing Library for Natural Language Processing](../Images/7175b5a48b30cb3e144b9855339cc4f8.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![介绍自然语言处理测试库](../Images/7175b5a48b30cb3e144b9855339cc4f8.png)'
- en: 1\. Automatically Generate Tests
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 自动生成测试
- en: One giant difference between nlptest and the testing libraries of yore is that
    tests can now be  automatically generated – to an extent. Each TestFactory can
    define multiple test types and for each one implements a test case generator and
    test case runner.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`nlptest`与过去的测试库之间的一个巨大区别是，现在可以在一定程度上自动生成测试。每个TestFactory可以定义多种测试类型，并为每种类型实现测试用例生成器和测试用例运行器。'
- en: 'Generated tests are returned as a table with ‘test case’ and ‘expected result’
    columns that depend on that specific test. These two columns are intended to be
    human readable, to enable a business analyst to manually review, edit, add or
    remove tests cases when needed. For example, here are some of the test cases generated
    for an NER task by the RobustnessTestFactory for the text “I live in Berlin.”:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的测试作为一个表格返回，包含“测试用例”和“预期结果”列，这些列取决于特定的测试。这两列旨在可读，以便业务分析师可以在需要时手动审查、编辑、添加或删除测试用例。例如，以下是由RobustnessTestFactory为文本“I
    live in Berlin.”生成的一些NER任务测试用例：
- en: '| **Test type** | **Test case** | **Expected result** |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| **测试类型** | **测试用例** | **预期结果** |'
- en: '| remove_punctuation | I live in Berlin | Berlin: Location |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| remove_punctuation | 我住在柏林 | 柏林：地点 |'
- en: '| lowercase | i live in berlin. | berlin: Location |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| lowercase | i live in berlin. | berlin: Location |'
- en: '| add_typos | I liive in Berlin. | Berlin: Location |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| add_typos | I liive in Berlin. | 柏林：地点 |'
- en: '| add_context | I live in Berlin. #citylife | Berlin: Location |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| add_context | 我住在柏林。 #citylife | 柏林：地点 |'
- en: 'Here are test cases generated for a text classification task by the BiasTestFactory
    using US ethnicity-based name replacement when starting from the text “John Smith
    is responsible”:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是由BiasTestFactory生成的文本分类任务的测试用例，使用基于美国种族的姓名替换，从文本“John Smith is responsible”开始：
- en: '| **Test type** | **Test case** | **Expected result** |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| **测试类型** | **测试用例** | **预期结果** |'
- en: '| replace_to_asian_name | Wang Li is responsible | positive_sentiment |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| replace_to_asian_name | Wang Li is responsible | 积极情感 |'
- en: '| replace_to_black_name | Darnell Johnson is responsible | negative_sentiment
    |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| replace_to_black_name | Darnell Johnson is responsible | 负面情感 |'
- en: '| replace_to_native_american_name | Dakota Begay is responsible | neutral_sentiment
    |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| replace_to_native_american_name | Dakota Begay is responsible | 中性情感 |'
- en: '| replace_to_hispanic_name | Juan Moreno is responsible | negative_sentiment
    |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| replace_to_hispanic_name | Juan Moreno is responsible | 负面情感 |'
- en: 'Here are test cases generated by the FairnessTestFactory and RepresentationTestFactory
    classes. Representation could for example require that the test dataset contains
    at least 30 patients of male, female, and unspecified gender each. Fairness tests
    could require that the F1 score of the tested model is at least 0.85 when tested
    on slices of data with people of each of these gender categories:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是由FairnessTestFactory和RepresentationTestFactory类生成的测试用例。表示测试可能需要测试数据集中包含至少30名男性、女性和未指定性别的患者。公平性测试可能要求在对这些性别类别中的数据切片进行测试时，测试模型的F1得分至少为0.85：
- en: '| **Test type** | **Test case** | **Expected result** |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| **测试类型** | **测试用例** | **预期结果** |'
- en: '| min_gender_representation | Male | 30 |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| min_gender_representation | 男性 | 30 |'
- en: '| min_gender_representation | Female | 30 |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| min_gender_representation | 女性 | 30 |'
- en: '| min_gender_representation | Unknown | 30 |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| min_gender_representation | 未知 | 30 |'
- en: '| min_gender_f1_score | Male | 0.85 |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| min_gender_f1_score | 男性 | 0.85 |'
- en: '| min_gender_f1_score | Female | 0.85 |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| min_gender_f1_score | 女性 | 0.85 |'
- en: '| min_gender_f1_score | Unknown | 0.85 |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| min_gender_f1_score | 未知 | 0.85 |'
- en: 'Important things to note about test cases:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 关于测试用例需要注意的重要事项：
- en: The meaning of “test case” and “expected result” depends on the test type, but
    should be human-readable in each case. This is so that after you call h.generate()
    you can manually review the list of generated test cases, and decide on which
    ones to keep or edit.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “测试用例”和“预期结果”的含义取决于测试类型，但在每种情况下都应该是人类可读的。这是为了在你调用`h.generate()`后，可以手动审查生成的测试用例列表，并决定保留或编辑哪些用例。
- en: Since the table of tests is a pandas data frame, you can also edit it right
    within your notebook (with Qgrid) or export it as a CSV and have a business analyst
    edit it in Excel.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于测试表格是一个pandas数据框，你也可以在笔记本内直接编辑（使用Qgrid），或将其导出为CSV文件，并让业务分析师在Excel中编辑。
- en: While automation does 80% of the work, you usually will need to manually check
    the tests. For example, if you are testing a fake news detector, then a replace_to_lower_income_country
    test editing “Paris is the Capital of France” to “Paris is the Capital of Sudan”
    will understandably yield a mismatch between the expected prediction and the actual
    prediction.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虽然自动化完成了 80% 的工作，你通常仍需手动检查测试。例如，如果你在测试一个假新闻检测器，那么将“巴黎是法国的首都”替换为“巴黎是苏丹的首都”的 replace_to_lower_income_country
    测试将不可避免地导致预期预测和实际预测之间的不匹配。
- en: You will also have to validate that your tests capture the business requirements
    of your solution. For example, the FairnessTestFactory example above does not
    test non-binary or other gender identities, and does not require that accuracy
    is near-equal across genders. It does, however, make those decisions explicit,
    human readable, and easy to change.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你还需要验证你的测试是否捕捉了你解决方案的业务需求。例如，上述的 FairnessTestFactory 示例没有测试非二元或其他性别身份，也没有要求性别之间的准确性几乎相等。然而，它确实使这些决策明确、易读，并且易于更改。
- en: Some test types will generate just one test case, while others can generate
    hundreds. This is configurable – each TestFactory defines a set of parameters.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些测试类型将只生成一个测试用例，而其他类型可能生成数百个。这是可配置的——每个 TestFactory 定义了一组参数。
- en: TestFactory classes are usually specific to a task, language, locale, and domain.
    That is by design since it allows for writing simpler & more modular test factories.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TestFactory 类通常特定于任务、语言、地区和领域。这是有意为之，因为这允许编写更简单且更模块化的测试工厂。
- en: 2\. Running Tests
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 运行测试
- en: 'After you’ve generated test cases and edited them to your heart’s content,
    here’s how you use them:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在生成测试用例并随心所欲地编辑后，以下是如何使用它们的方法：
- en: Call h.run() to run all the tests. For each test case in the harness’s table,
    the relevant TestFactory will be called to run the test and return a pass/fail
    flag along with an explanatory message.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用`h.run()`以运行所有测试。对于测试框架表中的每个测试用例，相关的 TestFactory 将被调用以运行测试，并返回一个通过/失败标志以及一个解释性消息。
- en: Call h.report() after calling h.run(). This will group the pass ratio by test
    type, print a table summarizing the results, and return a flag stating whether
    the model passed the test suite.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用`h.report()`在调用`h.run()`之后。这将按测试类型分组通过比例，打印一个总结结果的表格，并返回一个标志，说明模型是否通过了测试套件。
- en: Call h.save() to save the test harness, including the tests table, as a set
    of files. This enables you to later load and run the exact same test suite, for
    example when performing a regression test.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用`h.save()`将测试框架（包括测试表）保存为一组文件。这使你能够在以后加载并运行完全相同的测试套件，例如在进行回归测试时。
- en: 'Here is an example of a report generated for a Named Entity Recognition (NER)
    model, applying tests from five test factories:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个为命名实体识别（NER）模型生成的报告示例，应用了来自五个测试工厂的测试：
- en: '| **Category** | **Test type** | **Fail count** | **Pass count** | **Pass rate**
    | **Minimum pass rate** | **Pass?** |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| **类别** | **测试类型** | **失败次数** | **通过次数** | **通过率** | **最低通过率** | **是否通过？**
    |'
- en: '| robustness | remove_punctuation | 45 | 252 | 85% | 75% | TRUE |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| robustness | remove_punctuation | 45 | 252 | 85% | 75% | TRUE |'
- en: '| bias | replace_to_asian_name | 110 | 169 | 65% | 80% | FALSE |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| bias | replace_to_asian_name | 110 | 169 | 65% | 80% | FALSE |'
- en: '| representation | min_gender_representation | 0 | 3 | 100% | 100% | TRUE |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| representation | min_gender_representation | 0 | 3 | 100% | 100% | TRUE |'
- en: '| fairness | min_gender_f1_score | 1 | 2 | 67% | 100% | FALSE |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| fairness | min_gender_f1_score | 1 | 2 | 67% | 100% | FALSE |'
- en: '| accuracy | min_macro_f1_score | 0 | 1 | 100% | 100% | TRUE |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| accuracy | min_macro_f1_score | 0 | 1 | 100% | 100% | TRUE |'
- en: 'While some of what nlptest does is calculate metrics – what is the model’s
    F1 score? Bias score? Robustness score? – everything is framed as a test with
    a binary result: pass or fail. As good testing should, this requires you to be
    explicit about your application does and doesn’t do. It then enables you to deploy
    models faster and with confidence. It also enables you to share the list of tests
    to a regulator – who can read it, or run it themselves to reproduce your results.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 nlptest 做的部分工作是计算指标——模型的 F1 分数是多少？偏差分数是多少？鲁棒性分数是多少？——但一切都被框定为一个二元结果的测试：通过或失败。正如好的测试应该做的那样，这要求你明确你的应用程序所做的和未做的事情。然后，它使你能够更快且更有信心地部署模型。它还使你能够将测试列表共享给监管者——他们可以阅读它，或自行运行以重现你的结果。
- en: 3\. Data Augmentation
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 数据增强
- en: When you find that your model lacks in robustness or bias, one common way to
    improve it is to add new training data that specifically targets these gaps. For
    example, if your original dataset mostly includes clean text (like wikipedia text
    – no typos, slang, or grammatical errors), or lacks representation of Muslim or
    Hindi names – then adding such examples to the training dataset should help the
    model learn to better handle them.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 当你发现模型在鲁棒性或偏差方面存在不足时，改进的一种常见方法是添加专门针对这些不足的新训练数据。例如，如果你的原始数据集主要包含干净的文本（如维基百科文本——没有错别字、俚语或语法错误），或者缺乏穆斯林或印地语名字的代表性——那么将这些示例添加到训练数据集中应该能帮助模型更好地处理这些情况。
- en: 'Fortunately, we already have a method to automatically generate such examples
    in some cases – the same one we use to generate tests. Here is the workflow for
    data augmentation:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，我们已经在某些情况下有一种方法可以自动生成这些示例——这与我们用于生成测试的方法相同。以下是数据增强的工作流程：
- en: After you’ve generated and run the tests, call h.augment() to automatically
    generate augmented training data based on the results from your tests. Note that
    this has to be a freshly generated dataset – the test suite cannot be used to
    retrain the model, because then the next version of the model could not be tested
    again against it. Testing a model on data it was trained on is an example of data
    leakage, which would result in artificially inflated test scores.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在生成并运行测试后，调用 h.augment() 以根据测试结果自动生成增强训练数据。请注意，这必须是新生成的数据集——测试套件不能用于重新训练模型，因为下一个版本的模型将无法再次对其进行测试。在模型训练数据上进行测试是数据泄露的一个例子，这会导致测试分数被人为地抬高。
- en: The freshly generated augmented dataset is available as a pandas dataframe,
    which you can review, edit if needed, and then use to retrain or fine-tune your
    original model.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新生成的增强数据集以 pandas dataframe 形式提供，你可以查看、编辑（如果需要），然后用它来重新训练或微调你的原始模型。
- en: You can then re-evaluate the newly trained model on the same test suite it failed
    on before, by creating a new test harness and calling h.load()followed by h.run()
    and h.report().
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，你可以在之前失败的相同测试套件上重新评估新训练的模型，通过创建新的测试工具，并调用 h.load()，接着是 h.run() 和 h.report()。
- en: This iterative process empowers NLP data scientists to continuously enhance
    their models while adhering to the rules dictated by their own moral codes, corporate
    policies, and regulatory bodies.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这个迭代过程使 NLP 数据科学家能够不断提升他们的模型，同时遵守他们自己道德规范、公司政策和监管机构规定的规则。
- en: Getting Started
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 入门
- en: The nlptest library is live and freely available to you right now. Start with
    pip install nlptest or visit [nlptest.org](http://www.nlptest.org) to read the
    docs and getting started examples.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: nlptest 库现在已上线并免费提供给你。可以通过 pip install nlptest 开始使用，或访问 [nlptest.org](http://www.nlptest.org)
    阅读文档和入门示例。
- en: nlptest is also an early stage open-source community project which you are welcome
    to join. John Snow Labs has a full development team allocated to the project and
    is committed to improving the library for years, as we do with other open-source
    libraries. Expect frequent releases with new test types, tasks, languages, and
    platforms to be added regularly. However, you’ll get what you need faster if you
    contribute, share examples & documentation, or give us feedback on what you need
    most. Visit [nlptest on GitHub](https://github.com/johnSnowLabs/nlptest) to join
    the conversation.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: nlptest 也是一个早期的开源社区项目，欢迎你加入。John Snow Labs 已为该项目配备了完整的开发团队，并致力于多年改进该库，就像我们对待其他开源库一样。预计将会有频繁的更新，定期添加新的测试类型、任务、语言和平台。然而，如果你参与贡献、分享示例和文档，或者向我们反馈你最需要的内容，你将更快地获得所需的东西。访问
    [nlptest on GitHub](https://github.com/johnSnowLabs/nlptest) 参与讨论。
- en: We look forward to working together to make safe, reliable, and responsible
    NLP an everyday reality.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我们期待共同努力，使安全、可靠和负责任的 NLP 成为日常现实。
- en: More On This Topic
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[N-gram Language Modeling in Natural Language Processing](https://www.kdnuggets.com/2022/06/ngram-language-modeling-natural-language-processing.html)'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[自然语言处理中的 N-gram 语言建模](https://www.kdnuggets.com/2022/06/ngram-language-modeling-natural-language-processing.html)'
- en: '[Introducing OpenLLM: Open Source Library for LLMs](https://www.kdnuggets.com/2023/07/introducing-openllm-open-source-library-llms.html)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[介绍 OpenLLM：用于 LLM 的开源库](https://www.kdnuggets.com/2023/07/introducing-openllm-open-source-library-llms.html)'
- en: '[Natural Language Processing Key Terms, Explained](https://www.kdnuggets.com/2017/02/natural-language-processing-key-terms-explained.html)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[自然语言处理关键术语解释](https://www.kdnuggets.com/2017/02/natural-language-processing-key-terms-explained.html)'
- en: '[Data Representation for Natural Language Processing Tasks](https://www.kdnuggets.com/2018/11/data-representation-natural-language-processing.html)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[自然语言处理任务的数据表示](https://www.kdnuggets.com/2018/11/data-representation-natural-language-processing.html)'
- en: '[Transfer Learning for Image Recognition and Natural Language Processing](https://www.kdnuggets.com/2022/01/transfer-learning-image-recognition-natural-language-processing.html)'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用于图像识别和自然语言处理的迁移学习](https://www.kdnuggets.com/2022/01/transfer-learning-image-recognition-natural-language-processing.html)'
- en: '[How to Start Using Natural Language Processing With PyTorch](https://www.kdnuggets.com/2022/04/start-natural-language-processing-pytorch.html)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何开始使用PyTorch进行自然语言处理](https://www.kdnuggets.com/2022/04/start-natural-language-processing-pytorch.html)'
