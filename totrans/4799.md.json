["```py\nimport mxnet as mx\nfrom mxnet import autograd as ag\nfrom mxnet import nd\n\n```", "```py\n# Create CPU array\na = nd.ones((3, 2))\nprint(a)\n\n```", "```py\n\n[[1\\. 1.]\n [1\\. 1.]\n [1\\. 1.]]\n<NDArray 3x2 @cpu(0)>\n```", "```py\n# Test if GPU is recognized\ndef gpu_device(gpu_number=0):\n    try:\n        _ = mx.nd.array([1, 2, 3], ctx=mx.gpu(gpu_number))\n    except mx.MXNetError:\n        return None\n    return mx.gpu(gpu_number)\n\ngpu_device()\n\n```", "```py\ngpu(0)\n```", "```py\n# Create GPU array\nb = nd.zeros((2, 2), ctx=mx.gpu(0))\nprint(b)\n\n```", "```py\n[[0\\. 0.]\n [0\\. 0.]]\n<NDArray 2 x 2 @gpu(0)>\n```", "```py\n# Transpose\nT = c.T\nprint(T)\n\n```", "```py\n[[1\\. 2\\. 3.]\n [4\\. 5\\. 6.]]\n<NDArray 2x3 @cpu(0)>\n```", "```py\n# Reshape\nr = T.reshape(3,2)\nprint(r)\n\n```", "```py\n\n[[1\\. 2.]\n [3\\. 4.]\n [5\\. 6.]]\n<NDArray 3x2 @cpu(0)>\n```", "```py\n# ndarray info\nprint('ndarray shape:', r.shape)\nprint('Number of dimensions:', r.ndim)\nprint('ndarray type:', r.dtype)\n\n```", "```py\nndarray shape: (3, 2)\nNumber of dimensions: 2\nndarray type: <class 'numpy.float32'>\n```", "```py\nimport numpy as np\n\n# To numpy ndarray\nn = c.asnumpy()\nprint(n)\nprint(type(n))\n\n```", "```py\n[[1\\. 4.]\n [2\\. 5.]\n [3\\. 6.]]\n<class 'numpy.ndarray'>\n```", "```py\n# From numpy ndarray\na = np.array([[1, 10], [2, 20], [3, 30]])\nb = nd.array(a)\nprint(b)\nprint(type(b))\n\n```", "```py\n[[ 1\\. 10.]\n [ 2\\. 20.]\n [ 3\\. 30.]]\n <class 'mxnet.ndarray.ndarray.NDArray'>\n```", "```py\n# Compute dot product\nt1 = nd.random.normal(-1, 1, shape=(3, 2))\nt2 = nd.random.normal(-1, 1, shape=(2, 3))\nt3 = nd.dot(t1, t2)\nprint(t3)\n\n```", "```py\n[[1.8671514 2.0258508 1.1915313]\n [9.009048  8.481084  6.7323728]\n [5.0241795 4.346245  4.0459785]]\n<NDArray 3x3 @cpu(0)>\n```", "```py\n\ny = 5*x**4 + 3*x**3 + 7*x**2 + 9*x - 5\n```", "```py\nx = nd.array([2])\nx.attach_grad()\n\nwith ag.record():\n  y = 5*x**4 + 3*x**3 + 7*x**2 + 9*x - 5\n\ny.backward()\nx.grad\n\n```", "```py\n\ntensor([ 233.])\n```"]