["```py\n**# install slim version (default)** pip install pycaret**# install the full version**\npip install pycaret[full]\n```", "```py\n**# read csv file** import pandas as pd\ndata = pd.read_csv('AirPassengers.csv')\ndata['Date'] = pd.to_datetime(data['Date'])\ndata.head()\n```", "```py\n**# create 12 month moving average** data['MA12'] = data['Passengers'].rolling(12).mean()**# plot the data and MA** import plotly.express as px\nfig = px.line(data, x=\"Date\", y=[\"Passengers\", \"MA12\"], template = 'plotly_dark')\nfig.show()\n```", "```py\n**# extract month and year from dates**\nmonth = [i.month for i in data['Date']]\nyear = [i.year for i in data['Date']]**# create a sequence of numbers** data['Series'] = np.arange(1,len(data)+1)**# drop unnecessary columns and re-arrange** data.drop(['Date', 'MA12'], axis=1, inplace=True)\ndata = data[['Series', 'Year', 'Month', 'Passengers']] **# check the head of the dataset**\ndata.head()\n```", "```py\n**# split data into train-test set** train = data[data['Year'] < 1960]\ntest = data[data['Year'] >= 1960]**# check shape** train.shape, test.shape\n>>> ((132, 4), (12, 4))\n```", "```py\n**# import the regression module**\nfrom pycaret.regression import ***# initialize setup**\ns = setup(data = train, test_data = test, target = 'Passengers', fold_strategy = 'timeseries', numeric_features = ['Year', 'Series'], fold = 3, transform_target = True, session_id = 123)\n```", "```py\nbest = compare_models(sort = 'MAE')\n```", "```py\nprediction_holdout = predict_model(best);\n```", "```py\n**# generate predictions on the original dataset**\npredictions = predict_model(best, data=data)**# add a date column in the dataset**\npredictions['Date'] = pd.date_range(start='1949-01-01', end = '1960-12-01', freq = 'MS')**# line plot**\nfig = px.line(predictions, x='Date', y=[\"Passengers\", \"Label\"], template = 'plotly_dark')**# add a vertical rectange for test-set separation**\nfig.add_vrect(x0=\"1960-01-01\", x1=\"1960-12-01\", fillcolor=\"grey\", opacity=0.25, line_width=0)fig.show()\n```", "```py\nfinal_best = finalize_model(best)\n```", "```py\nfuture_dates = pd.date_range(start = '1961-01-01', end = '1965-01-01', freq = 'MS')future_df = pd.DataFrame()future_df['Month'] = [i.month for i in future_dates]\nfuture_df['Year'] = [i.year for i in future_dates]    \nfuture_df['Series'] = np.arange(145,(145+len(future_dates)))future_df.head()\n```", "```py\npredictions_future = predict_model(final_best, data=future_df)\npredictions_future.head()\n```", "```py\nconcat_df = pd.concat([data,predictions_future], axis=0)\nconcat_df_i = pd.date_range(start='1949-01-01', end = '1965-01-01', freq = 'MS')\nconcat_df.set_index(concat_df_i, inplace=True)fig = px.line(concat_df, x=concat_df.index, y=[\"Passengers\", \"Label\"], template = 'plotly_dark')\nfig.show()\n```"]