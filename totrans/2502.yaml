- en: AI Infinite Training & Maintaining Loop
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2021/11/ai-infinite-training-maintaining-loop.html](https://www.kdnuggets.com/2021/11/ai-infinite-training-maintaining-loop.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Roey Mechrez, Ph.D.](https://roimehrez.github.io/), CTO and co-founder
    of BeyondMinds**.'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you’ve ever tried to launch an AI solution for your business, you’ll probably
    be familiar with the following scenario: you’ve been working on collecting data
    to train your AI model on, spending weeks cleaning it, augmenting it, and enhancing
    it. You then explored several open-source models and architectures which could
    fit the problem that your AI solution tries to tackle. Next, you’ve probably used
    several tools to accelerate the development process and create a pipeline that
    will help wrap the solution, tune the parameters, and compare hundreds of training
    alternatives. Classic data science lab work, right? Searching for the perfect
    model – and developing a state-of-the-art solution that addresses the problem
    that AI can help solve.'
  prefs: []
  type: TYPE_NORMAL
- en: 'If all goes well, the training goes smoothly, and your model achieves a 95%
    accuracy rate on the test dataset. It takes some more software magic and working
    on weekends to tie all the loose ends together, but you finally get to the finish
    line: launching your model in production – meeting the aggressive Q3 deadline.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Fast forward three months. Winter came. The model is not working well. The
    people on the business side that interact with your model are unhappy. The results
    they’re getting from your AI don’t make sense. One cold morning you’re getting
    an email from someone in the upper ranks with an unmistakable subject line: “your
    AI is not working."'
  prefs: []
  type: TYPE_NORMAL
- en: That is not an anecdote. In fact, it’s a painful reality for many companies, especially when
    it comes to mission-critical or operational sensitive applications, such as defect
    detection, claim automation, fraud detection, customer onboarding, KYC, AML, predictive
    maintenance, or credit scoring.
  prefs: []
  type: TYPE_NORMAL
- en: Training your AI model with real-world data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: While many factors and components can lead to the failure of an AI solution
    in production, the root problem lies deep in the basic design of this process.
    The somber reality is that the vast majority of AI models that work seamlessly
    in the controlled lab environment – fail when facing a real-world environment,
    in which data tends to be noisy, dynamic, and unlabeled. The most effective way
    to deal with this disparity is to have your AI model face production data as soon
    as possible, even while it’s still in the lab training phase.
  prefs: []
  type: TYPE_NORMAL
- en: The key here is to keep improving and fine-tuning the model while it’s already
    in production. This type of design will enable the model to progress gradually,
    gaining incremental improvements as it receives real-time feedback from users.
    Sounds pretty straightforward, right? Instead of first building an AI model then
    productizing it – keep a continuous build-productize-re-build loop. Unfortunately,
    creating this continuous design cycle is extremely complex. It involves research,
    orchestration, and a deep combination of software and research.
  prefs: []
  type: TYPE_NORMAL
- en: 'This loop should start with data labeling, followed by training, evaluation, and
    deployment. Once deployed in production, the loop progresses into the critical
    steps of monitoring and feedback collection from human users. At this point, the
    loop completes a full circle. It now can start over again, using the data that
    it gained throughout the previous steps to keep improving in the re-training step. As
    illustrated by this infinity-shaped loop, production deployment is no longer the
    finish line but the starting point for adding stability and sustainability to
    the model:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/40b62a2bb1543668f9c5d2b2587d6b43.png)'
  prefs: []
  type: TYPE_IMG
- en: '*The Train & Maintain AI Infinity Loop*'
  prefs: []
  type: TYPE_NORMAL
- en: Avoiding maintenance pitfalls
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the product development lifecycle, system maintenance is oftentimes overlooked
    – with potentially catastrophic implications on the future of the system at hand.
    In many cases, maintenance can be a serious barrier to scaling up the system within
    the organization, preventing it from reaching widespread usage and impact.
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to machine learning and AI, maintenance is a huge burden that
    can cause TCO to spiral out of control, risking the profitability of the entire
    use case. In recent years, AI technology has matured and become more accessible,
    tempting enterprises across industries to try and harvest value from AI solutions.
    However, the somber reality is that about 90% of enterprises fail to reach ROI-positive
    AI projects. Maintenance of AI solutions, and particularly the maintenance barriers
    in scaling up a given AI solution, plays a big part in this failure rate. This
    is just another reason why companies that consider delving into the AI domain
    should embrace the learn and maintain loop as a fundamental building block for
    any system they launch.
  prefs: []
  type: TYPE_NORMAL
- en: 'Lesson learned: evergreen AI is possible'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let’s go back to where we started off: the model you were patiently training
    in the lab and reached results you were happy with. What’s the main lesson learned
    from crashing and burning in production? The answer: aim for designing a system
    that identifies when data is changing (drifting away from the original data set
    that used to train the data in the first place), collecting ongoing feedback from
    human users, and retraining and deploying new and better models.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Here are some tough questions you should ask yourself before spending the
    first dollar on AI: **'
  prefs: []
  type: TYPE_NORMAL
- en: Will I be able to detect when the data changes?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Will I be able to detect when the model could be wrong?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How will I collect feedback from users?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Are proper defense mechanisms used to protect my model from the noise that can
    throw it off?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What’s the process of retraining the model with new data, replacing the old,
    depredated model?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How will I split the data between samples that forgo automatic processing and
    samples that require human inspection?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In other words, productizing AI is an infrastructure orchestration problem.
    In planning your solution design, you should use continuous monitoring, retraining,
    and feedback to ensure stability and sustainability. Succeeding in doing so will
    help your company deliver the desired value from AI.
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Machine Learning Model Development and Model Operations: Principles and Practices](https://www.kdnuggets.com/2021/10/machine-learning-model-development-operations-principles-practice.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[When to Retrain an Machine Learning Model? Run these 5 checks to decide on
    the schedule](https://www.kdnuggets.com/2021/07/retrain-machine-learning-model-5-checks-decide-schedule.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[MLOps is an Engineering Discipline: A Beginner’s Overview](https://www.kdnuggets.com/2021/07/mlops-engineering-discipline.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Exploring Infinite Iterators in Python''s itertools](https://www.kdnuggets.com/exploring-infinite-iterators-in-python-itertools)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Streaming-LLM: LLMs for Infinite-Length Inputs](https://www.kdnuggets.com/introduction-to-streaming-llm-llms-for-infinite-length-inputs)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Speed Up XGBoost Model Training](https://www.kdnuggets.com/2021/12/speed-xgboost-model-training.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How To Use Synthetic Data To Overcome Data Shortages For Machine…](https://www.kdnuggets.com/2022/03/synthetic-data-overcome-data-shortages-machine-learning-model-training.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Online Training and Workshops with Nvidia](https://www.kdnuggets.com/2022/07/online-training-workshops-nvidia.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Difference Between Training and Testing Data in Machine Learning](https://www.kdnuggets.com/2022/08/difference-training-testing-data-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
