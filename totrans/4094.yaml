- en: ChatGPT as a Python Programming Assistant
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/01/chatgpt-python-programming-assistant.html](https://www.kdnuggets.com/2023/01/chatgpt-python-programming-assistant.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![ChatGPT as a Python Programming Assistant](../Images/32321145a60260b7a97d82cf9a9ef925.png)'
  prefs: []
  type: TYPE_IMG
- en: Original image by [Sigmund](https://unsplash.com/de/@sigmund?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/photos/Im_cQ6hQo10?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    | Edits by author
  prefs: []
  type: TYPE_NORMAL
- en: ChatGPT from OpenAI is... you already know. You've read enough about it, and
    introductions are no longer needed. If you happen to **not** know what ChatGPT
    is, [have a look at this](https://www.kdnuggets.com/2023/01/chatgpt-everything-need-know.html)
    first, and then come on back to continue.
  prefs: []
  type: TYPE_NORMAL
- en: Conversations with ChatGPT can be [entertaining](https://www.kdnuggets.com/2022/12/kdnuggets-chatgpt-conversation.html),
    even [enlightening](https://www.kdnuggets.com/2023/01/20-questions-detect-fake-data-scientists-chatgpt-1.html).
    But let's have a look at how helpful it can actually be.
  prefs: []
  type: TYPE_NORMAL
- en: Let's see what ChatGPT can do when it comes to writing some code from specifications
    that we provide. We will start simple and build from there.
  prefs: []
  type: TYPE_NORMAL
- en: Simple Data Processing Script
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I figured that a good place to start was a data processing script of some sort.
    Since I intend to have ChatGPT write some machine learning scripts afterwards
    using a variety of Python libraries, this seemed like a reasonable place to start.
  prefs: []
  type: TYPE_NORMAL
- en: The Goal
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First, I wanted to make some attempts at loading a dataset; ensuring all dataset
    values are numeric values, or converting them to be such; checking for missing
    values; and splitting the dataset into train and test sets.
  prefs: []
  type: TYPE_NORMAL
- en: The Prompt
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Write a Python script that does the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '- loads a dataset from csv on disk to Pandas DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: '- ensures that dataset is entirely numeric; converts string values to numeric
    and tracks this conversion in a dictionary to reference later'
  prefs: []
  type: TYPE_NORMAL
- en: '- checks for missing values in the DataFrame and imputes missing values for
    any record that has one missing value; entirely drops a record that has more than
    one missing value'
  prefs: []
  type: TYPE_NORMAL
- en: '- splits the dataset into test and training sets*'
  prefs: []
  type: TYPE_NORMAL
- en: The Response
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Note: the script loads the dataset from csv file name "dataset.csv" and splits
    the dataframe into test and training sets with 80/20 ratio. If you want to use
    different file name or ratio, change the path/ratio accordingly.'
  prefs: []
  type: TYPE_NORMAL
- en: The Analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: ChatGPT produced a useful script. It decided on a dataset name, as well as a
    train/test split percentage, and noted both of these points and how to change
    them if desired. Overall, mission accomplished.
  prefs: []
  type: TYPE_NORMAL
- en: Refactoring Our Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Goal
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that we have a script that does something, let's refactor it a little. A
    cornerstone of good coding is the use of functions to logically organize you code,
    facilitate reuse, and ensure you don't repeat yourself.
  prefs: []
  type: TYPE_NORMAL
- en: The Prompt
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Rewrite the above script to use a series of functions that make sense*'
  prefs: []
  type: TYPE_NORMAL
- en: The Response
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Here, I have used three functions:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. load_and_convert_data(file_path) loads the csv dataset and convert the string
    values to numeric.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. handle_missing_values(df) handles the missing values in the dataset.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. split_data(df, test_size) splits the dataset into test and training sets.
  prefs: []
  type: TYPE_NORMAL
- en: The main script uses these functions in order to load, convert and clean the
    dataset, then split it into test and train sets.
  prefs: []
  type: TYPE_NORMAL
- en: The path of the dataset and the test ratio are inputs for these functions.
  prefs: []
  type: TYPE_NORMAL
- en: The Analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you look at the first script output by ChatGPT, you can probably see some
    rather obvious lines you would draw as far as what functionality would be separated
    into functions. I certainly did. ChatGPT did exactly what I expected it to do,
    in this regard. Again, a competent script has been generated.
  prefs: []
  type: TYPE_NORMAL
- en: Extending Our Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Goal
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: OK, our script looks a little better now that it's using some functions for
    organization. Next, let's extend the script slightly in order to make it so that
    the user can specify a few parameters while running the script.
  prefs: []
  type: TYPE_NORMAL
- en: The Prompt
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Rewrite the above program to solicit the following from the command line in
    the form of arguments, and use them in the program:'
  prefs: []
  type: TYPE_NORMAL
- en: '- the path/name of the dataset csv file'
  prefs: []
  type: TYPE_NORMAL
- en: '- the train/test split size'
  prefs: []
  type: TYPE_NORMAL
- en: '- the threshold for the number of missing values per record to drop after which
    to drop entire record, instead of imputing the missing values*'
  prefs: []
  type: TYPE_NORMAL
- en: The Response
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'In this version, I have used the argparse module to take the inputs of file
    path, test/train split size, and threshold for the number of missing values per
    record as command-line arguments. The user will have to run the script with the
    correct arguments, for example:'
  prefs: []
  type: TYPE_NORMAL
- en: '`python script.py dataset.csv 0.2 1`'
  prefs: []
  type: TYPE_NORMAL
- en: This will run the script using the "dataset.csv" file, a test_size of 0.2 and
    a threshold of 1 for the missing values.
  prefs: []
  type: TYPE_NORMAL
- en: The main script uses these arguments in the functions to load, convert and clean
    the dataset, then split it into test and train sets.
  prefs: []
  type: TYPE_NORMAL
- en: It's also worth mentioning that, when running script, the script should be run
    from command line, rather than running it from an IDE.
  prefs: []
  type: TYPE_NORMAL
- en: The Analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Honestly, not much analysis is needed here, given that ChatGPT explained what
    it did quite well. I'll actually note something here that I had previously not,
    and give ChatGPT a pat on the back for its commenting, which is expressive and
    concise.
  prefs: []
  type: TYPE_NORMAL
- en: Converting Our Code to a Streamlit App
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Goal
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now let's say we wanted to make this code "production" ready (humor me). Let's
    get ChatGPT to wrap these functions in a Streamlit app.
  prefs: []
  type: TYPE_NORMAL
- en: The Prompt
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Rewrite the above program as a Streamlit app, allowing for the user to provide
    the same arguments as in the command line args above*'
  prefs: []
  type: TYPE_NORMAL
- en: The Response
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This version is a Streamlit app that allows the user to provide the same arguments
    as command-line arguments. It uses the Streamlit library to create an interactive
    web app that allows the user to input the file path, test/train split size, and
    threshold for the number of missing values per record. The user can then click
    the "Process Data" button to run the script and preprocess the data. It uses the
    same functions as the previous version of the script to load, convert, and clean
    the dataset, then split it into test and train sets.
  prefs: []
  type: TYPE_NORMAL
- en: To run the script, you need to have Streamlit installed, you can run the command
    pip install streamlit in your terminal. Once installed, run the script with the
    command `streamlit run script.py`.
  prefs: []
  type: TYPE_NORMAL
- en: The Analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It did what it was supposed to do. ChatGPT took our functioning... functions
    and built a simple Streamlit web app with them.
  prefs: []
  type: TYPE_NORMAL
- en: '![Screenshot of the Streamlit web app created with the script generated by
    ChatGPT](../Images/b12cad776e2a9ee2653691692c80c9cb.png)'
  prefs: []
  type: TYPE_IMG
- en: The Streamlit web app created with the script generated by ChatGPT
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ChatGPT did a perfectly competent job of creating, refactoring, extending, and
    adding a wrapper around a simple data preprocessing Python script we wanted it
    to write for us, from the specifications that we provided. While it wasn't the
    most complex of programs by a long shot, it was a step in the direction of having
    ChatGPT be genuinely useful by acting as a programming assistant. The results
    hit the mark at each step.
  prefs: []
  type: TYPE_NORMAL
- en: Next time, we will build a less trivial program with some increased complexity
    and additional requirements. I'm excited to see how well ChatGPT performs under
    pressure. Hopefully you are too.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Matthew Mayo](https://www.linkedin.com/in/mattmayo13/)** ([**@mattmayo13**](https://twitter.com/mattmayo13))
    is a Data Scientist and the Editor-in-Chief of KDnuggets, the seminal online Data
    Science and Machine Learning resource. His interests lie in natural language processing,
    algorithm design and optimization, unsupervised learning, neural networks, and
    automated approaches to machine learning. Matthew holds a Master''s degree in
    computer science and a graduate diploma in data mining. He can be reached at editor1
    at kdnuggets[dot]com.'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Forget ChatGPT, This New AI Assistant Is Leagues Ahead and Will…](https://www.kdnuggets.com/2023/08/forget-chatgpt-new-ai-assistant-leagues-ahead-change-way-work-forever.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Meet MetaGPT: The ChatGPT-Powered AI Assistant That Turns Text Into…](https://www.kdnuggets.com/meet-metagpt-the-chatgptpowered-ai-assistant-that-turns-text-into-web-apps)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[DataLang: A New Programming Language for Data Scientists... Created…](https://www.kdnuggets.com/2023/04/datalang-new-programming-language-data-scientists-chatgpt.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How ChatGPT is Changing the Face of Programming](https://www.kdnuggets.com/how-chatgpt-is-changing-the-face-of-programming)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python: The programming language of machine learning](https://www.kdnuggets.com/2022/06/mlm-python-programming-language-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
