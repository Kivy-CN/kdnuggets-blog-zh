- en: 'Introduction to __getitem__: A Magic Method in Python'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`__getitem__` 介绍：Python 中的魔法方法'
- en: 原文：[https://www.kdnuggets.com/2023/03/introduction-getitem-magic-method-python.html](https://www.kdnuggets.com/2023/03/introduction-getitem-magic-method-python.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2023/03/introduction-getitem-magic-method-python.html](https://www.kdnuggets.com/2023/03/introduction-getitem-magic-method-python.html)
- en: '![Introduction to __getitem__: A Magic Method in Python](../Images/852caad5f1c3f9d13c5cf8ca82fa7203.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Introduction to __getitem__: A Magic Method in Python](../Images/852caad5f1c3f9d13c5cf8ca82fa7203.png)'
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 作者图片
- en: Introduction
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Python is a magical language with many concepts that even advanced users may
    not be familiar with. Dunder or Magical methods is one of them. Magic methods
    are special methods that are surrounded by double underscores. They are not called
    explicitly unlike the ordinary methods in python. One such magic method is the
    `__getitem__` method, enabling the Python objects to behave like sequences or
    containers e.g lists, dictionaries, and tuples. It takes the index or slice and
    retrieves its associated value from the collection. It is invoked automatically
    whenever we use the `indexer [ ]` operator to access the elements within your
    object.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Python 是一种神奇的语言，包含许多即使是高级用户也可能不熟悉的概念。双下划线方法或魔法方法就是其中之一。魔法方法是由双下划线包围的特殊方法。它们不像普通的
    Python 方法那样被显式调用。一个这样的魔法方法是 `__getitem__` 方法，它使 Python 对象能够像序列或容器（例如列表、字典和元组）一样进行操作。它接受索引或切片，并从集合中检索其关联的值。当我们使用
    `indexer [ ]` 运算符访问对象中的元素时，它会被自动调用。
- en: Think of this method as a magic wand that grants you the power to extract the
    required information just by writing a few lines of code. Interesting right? This
    method is also used widely in data analysis and machine learning. So, let's dive
    deeper into the `__getitem__` method and discover its power and flexibility.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 将这个方法想象成一根魔法棒，它可以让你通过写几行代码就提取所需的信息。有趣吧？这个方法在数据分析和机器学习中也被广泛使用。因此，让我们深入探讨 `__getitem__`
    方法，发现它的力量和灵活性。
- en: Benefits of Using __getitem__ Method
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 `__getitem__` 方法的好处
- en: 'I want you to understand that your duty as a Python programmer is more than
    just writing functional code. Your code should be efficient, readable, and maintainable.
    Using `__getitem__` will help you achieve these goals. Here are some other benefits
    of using this magic method:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你明白，作为一个 Python 程序员，你的职责不仅仅是编写功能代码。你的代码应该是高效的、可读的和可维护的。使用 `__getitem__` 将帮助你实现这些目标。以下是使用这个魔法方法的一些其他好处：
- en: Reduces memory usage by allowing you to extract only the essential information
    instead of loading the complete data structure into the memory
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过允许你提取仅必要的信息而不是将完整数据结构加载到内存中来减少内存使用
- en: Provides greater flexibility in how the data is handled and manipulated
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供了更大的灵活性来处理和操作数据
- en: Allows you to iterate over the collection without looping over the data
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许你在不循环遍历数据的情况下迭代集合
- en: Enhances the functionality by allowing you to write advanced indexing that may
    not be possible with the built-in types
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过允许你编写内置类型可能无法实现的高级索引来增强功能
- en: Simplifies the code as it uses the familiar notation
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简化代码，因为它使用了熟悉的表示法
- en: Implementing __getitem__ Method
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现 `__getitem__` 方法
- en: 'The syntax for the `__getitem__` method is as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`__getitem__` 方法的语法如下：'
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'It defines the behavior of the function and takes the index that you are trying
    to access in its parameter. We can use this method like this:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 它定义了函数的行为，并将你尝试访问的索引作为参数。我们可以这样使用这个方法：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This translates to the statement `my_obj.__getitem__(index)` under the hood.
    Now you might think that how is it different from the built-in `indexer []` operator?
    Wherever you use this notation, python automatically calls the `__getitem__` method
    for you and is the shorthand for accessing elements. But if you want to change
    the behavior of indexing for custom objects, you need to explicitly call the `__getitem__`
    method.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这在底层转换为语句 `my_obj.__getitem__(index)`。现在你可能会想，这与内置的 `indexer []` 运算符有什么不同？无论你在哪里使用这种表示法，Python
    都会自动调用 `__getitem__` 方法，并且是访问元素的简写。但是如果你想改变自定义对象的索引行为，你需要显式调用 `__getitem__` 方法。
- en: 'Example #01'
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '示例 #01'
- en: Let us start with an easy example first. We will create a Student class that
    will have the list of all the students and we can access them by index and consider
    that the index represents their unique student ID.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 首先让我们从一个简单的例子开始。我们将创建一个 Student 类，该类将包含所有学生的列表，我们可以通过索引访问这些学生，并且索引表示他们的唯一学生
    ID。
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Output:**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now we will move over to an advanced example where we will change the indexing
    behavior using the `__getitem__` method. Suppose that I have a list of string
    elements and I want to retrieve the element whenever I enter its index position
    and I can also get the index position if I enter the string itself.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将转到一个高级示例，我们将使用 `__getitem__` 方法来改变索引行为。假设我有一个字符串元素的列表，我希望在输入其索引位置时能检索到元素，并且如果我输入字符串本身，也能获取到索引位置。
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Output:**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Conclusion
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: This method is extremely useful for the quick lookup of the instance attributes.
    Considering the flexibility and versatility of this method, I would say this is
    one of the most underutilized magic methods of Python. I hope you enjoyed reading
    this article and do let me know in the comment section if you are interested to
    know about the other magic methods in Python.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方法对于快速查找实例属性非常有用。考虑到这个方法的灵活性和多功能性，我会说这是 Python 中最少被利用的魔法方法之一。我希望你喜欢阅读这篇文章，如果你有兴趣了解
    Python 中其他魔法方法，请在评论区告诉我。
- en: '**[Kanwal Mehreen](https://www.linkedin.com/in/kanwal-mehreen1)** is an aspiring
    software developer with a keen interest in data science and applications of AI
    in medicine. Kanwal was selected as the Google Generation Scholar 2022 for the
    APAC region. Kanwal loves to share technical knowledge by writing articles on
    trending topics, and is passionate about improving the representation of women
    in tech industry.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Kanwal Mehreen](https://www.linkedin.com/in/kanwal-mehreen1)** 是一名有志的软件开发者，对数据科学及
    AI 在医学中的应用充满兴趣。Kanwal 被选为 2022 年 APAC 区域的 Google Generation Scholar。Kanwal 喜欢通过撰写关于热门话题的文章来分享技术知识，并且热衷于提高女性在科技行业的代表性。'
- en: More On This Topic
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Using the apply() Method with Pandas Dataframes](https://www.kdnuggets.com/2022/07/apply-method-pandas-dataframes.html)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 apply() 方法处理 Pandas 数据框](https://www.kdnuggets.com/2022/07/apply-method-pandas-dataframes.html)'
- en: '[Python f-Strings Magic: 5 Game-Changing Tricks Every Coder Needs to Know](https://www.kdnuggets.com/python-fstrings-magic-5-gamechanging-tricks-every-coder-needs-to-know)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python f-Strings 魔法：每个编码员需要知道的 5 个改变游戏规则的技巧](https://www.kdnuggets.com/python-fstrings-magic-5-gamechanging-tricks-every-coder-needs-to-know)'
- en: '[11 Python Magic Methods Every Programmer Should Know](https://www.kdnuggets.com/11-python-magic-methods-every-programmer-should-know)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个程序员应该知道的 11 个 Python 魔法方法](https://www.kdnuggets.com/11-python-magic-methods-every-programmer-should-know)'
- en: '[Understanding Python''s Iteration and Membership: A Guide to…](https://www.kdnuggets.com/understanding-pythons-iteration-and-membership-a-guide-to-__contains__-and-__iter__-magic-methods)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[理解 Python 的迭代与成员：__contains__ 和 __iter__ 魔法方法指南](https://www.kdnuggets.com/understanding-pythons-iteration-and-membership-a-guide-to-__contains__-and-__iter__-magic-methods)'
- en: '[Unveiling Neural Magic: A Dive into Activation Functions](https://www.kdnuggets.com/unveiling-neural-magic-a-dive-into-activation-functions)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[揭开神经魔法：深入探讨激活函数](https://www.kdnuggets.com/unveiling-neural-magic-a-dive-into-activation-functions)'
- en: '[Diving into the Pool: Unraveling the Magic of CNN Pooling Layers](https://www.kdnuggets.com/diving-into-the-pool-unraveling-the-magic-of-cnn-pooling-layers)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[跳进池塘：解开 CNN 池化层的魔法](https://www.kdnuggets.com/diving-into-the-pool-unraveling-the-magic-of-cnn-pooling-layers)'
