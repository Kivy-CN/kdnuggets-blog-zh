["```py\nSELECT columns\nFROM table1\nJOIN table2\nON table1.column = table2.column;\n```", "```py\nSELECT columns\nFROM table1\nCROSS JOIN table2;\n```", "```py\nSELECT columns\nFROM table1, table2;\n```", "```py\nSELECT columns\nFROM table1 t1\nJOIN table1 t2\nON t1.column = t2.column;\n```", "```py\nSELECT title AS project,\n       ROUND((budget/COUNT(emp_id)::FLOAT)::NUMERIC, 0) AS budget_emp_ratio\nFROM ms_projects a\nJOIN ms_emp_projects b \nON a.id = b.project_id\nGROUP BY title, budget\nORDER BY budget_emp_ratio DESC;\n```", "```py\nSELECT c.city,\n       COUNT(DISTINCT o.id) AS orders_per_city,\n       COUNT(DISTINCT c.id) AS customers_per_city,\n       SUM(o.total_order_cost) AS orders_cost_per_city\nFROM customers c\nLEFT JOIN orders o ON c.id = o.cust_id\nGROUP BY c.city\nHAVING COUNT(o.id) >=5;\n```", "```py\nSELECT c.city,\n       COUNT(DISTINCT o.id) AS orders_per_city,\n       COUNT(DISTINCT c.id) AS customers_per_city,\n       SUM(o.total_order_cost) AS orders_cost_per_city\nFROM orders o\nRIGHT JOIN customers c ON o.cust_id = c.id \nGROUP BY c.city\nHAVING COUNT(o.id) >=5;\n```", "```py\nSELECT company_name,\n       product_name AS brand_2020\nFROM car_launches\nWHERE YEAR = 2020;\n```", "```py\nSELECT company_name,\n       product_name AS brand_2019\nFROM car_launches\nWHERE YEAR = 2019;\n```", "```py\nSELECT *\nFROM\n  (SELECT company_name,\n          product_name AS brand_2020\n   FROM car_launches\n   WHERE YEAR = 2020) a\nFULL OUTER JOIN\n  (SELECT company_name,\n          product_name AS brand_2019\n   FROM car_launches\n   WHERE YEAR = 2019) b \nON a.company_name = b.company_name;\n```", "```py\nSELECT a.company_name,\n       (COUNT(DISTINCT a.brand_2020)-COUNT(DISTINCT b.brand_2019)) AS net_products\nFROM\n  (SELECT company_name,\n          product_name AS brand_2020\n   FROM car_launches\n   WHERE YEAR = 2020) a\nFULL OUTER JOIN\n  (SELECT company_name,\n          product_name AS brand_2019\n   FROM car_launches\n   WHERE YEAR = 2019) b \nON a.company_name = b.company_name\nGROUP BY a.company_name\nORDER BY company_name;\n```", "```py\nSELECT dn1.number AS number1,\n       dn2.number AS number2,\n       CASE\n           WHEN dn1.number > dn2.number THEN dn1.number\n           ELSE dn2.number\n       END AS max_number\nFROM deloitte_numbers AS dn1\nCROSS JOIN deloitte_numbers AS dn2;\n```"]