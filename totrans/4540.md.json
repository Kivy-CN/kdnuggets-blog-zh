["```py\n*# Define a dictionary code* \nwebstersDict = {'person': 'a human being',\n                'marathon': 'a running race that is about 26 miles',\n                'resist': 'to remain strong against the force',\n                'run': 'to move with haste; act quickly'}\n```", "```py\n*# Define a dictionary*\ngenderDict = {0: 'male',\n              1: 'female'}\n```", "```py\n# Failure to define a dictionary\nwebstersDict = {(1, 2.0): 'tuples can be keys',\n                1: 'ints can be keys',\n                'run': 'strings can be keys', \n                ['sock', 1, 2.0]: 'lists can NOT be keys'}\n```", "```py\n*# Get value of the 'marathon' key*\nwebstersDict['marathon']\n```", "```py\n*# Try to get value for key that does not exist*\nwebstersDict['nonexistentKey']\n```", "```py\n*# add one new key value pair to a dictionary*\nwebstersDict['shoe'] = 'an external covering for the human foot'\n```", "```py\n# Remove the key 'resist' from the dictionary\ndel webstersDict['resist']\n```", "```py\n*# Using update method to add two key value pairs at once*\nwebstersDict.update({'ran': 'past tense of run',\n                     'shoes': 'plural of shoe'})\n```", "```py\n*# Define a dictionary*\nstoryCount = {'is': 100,\n              'the': 90,\n              'Michael': 12,\n              'runs': 5}\n```", "```py\n# Since the key 'Michael' exists, it will return the value 12\nstoryCount.get('Michael')\n```", "```py\n*# Make default value for key that doesn't exist 0.*\nstoryCount.get('chicken', 0)\n```", "```py\nstoryCount.pop('the')\n```", "```py\nstoryCount.keys()\n```", "```py\nstoryCount.values()\n```", "```py\nwebstersDict.items()\n```", "```py\nfor key in storyCount:\n   print(key)\n```", "```py\nfor key in storyCount.keys():\n   print(key)\n```", "```py\nfor key, value in webstersDict.items():\n    print(key, value)\n```"]