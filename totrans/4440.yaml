- en: How to Handle Dimensions in NumPy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/07/numpy-handle-dimensions.html](https://www.kdnuggets.com/2020/07/numpy-handle-dimensions.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Figure](../Images/630d520ae43ec63ecb94940c09f0b1ee.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Image by Garik Barseghyan from **[**Pixabay**](https://pixabay.com/illustrations/fractal-abstract-background-physics-1352598/)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '**np.newaxis**'
  prefs: []
  type: TYPE_NORMAL
- en: It is used to increase the dimension of the existing array. It uses the slicing
    operator to recreate the array.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The dimension is temporarily added at the position of np.newaxis in the array.
    ‘None’ can also be used in place of np.newaxis.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**np.reshape:**'
  prefs: []
  type: TYPE_NORMAL
- en: It is used to reshape the array to the desired layout.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**np.expand_dims:**'
  prefs: []
  type: TYPE_NORMAL
- en: It expands the shape of an array by inserting a new axis at the axis position
    in the expanded array shape
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let’s see some primary applications where above NumPy dimension handling operations
    come in handy:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Application 1**: **Rank 1 array to row/column vector conversion**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Here, we have created an array of 4 elements with shape (4,) which is called
    a **Rank 1 array**.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: However, Rank 1 arrays often lead to ambiguous results as they do not behave
    as row/column vectors consistently. As shown above, if we take transpose of x1,
    its shape remains the same.
  prefs: []
  type: TYPE_NORMAL
- en: 'Hence, it’s always recommended to explicitly specify the dimensions of an array.
    This can be achieved by all 3 techniques explained above:'
  prefs: []
  type: TYPE_NORMAL
- en: 'using np.newaxis:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: using np.reshape
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: using np.expand_dims
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Application 2**: **Increasing the dimension**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Lets create another array x2 with shape (2,4,28) and check how we can expand
    the dimensions of x2 from 3D to 5D
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/dce53809e3b9fa8707c283dd74be3d55.png)'
  prefs: []
  type: TYPE_IMG
- en: Key thing to note from above is np.reshape lets you split the dimension as well.
  prefs: []
  type: TYPE_NORMAL
- en: '**Application 3: Broadcasting**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'As per [NumPy documentation](https://numpy.org/doc/stable/user/basics.broadcasting.html#:~:text=The%20term%20broadcasting%20describes%20how,that%20they%20have%20compatible%20shapes.):'
  prefs: []
  type: TYPE_NORMAL
- en: '*broadcasting describes how numpy treats arrays with different shapes during
    arithmetic operations.*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'For example when we add the following 2 arrays, it shows ''ValueError'' due
    to shape mismatch:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/95564eee381c3b6dc91399f714caff3f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let’s see how np.newaxis increases the dimension of one of the arrays below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/a45db121f93285c2a6972adf91bbbb11.png)'
  prefs: []
  type: TYPE_IMG
- en: As we primarily need to adjust the dimension of the array for proper broadcasting
    operation, the np.reshape and np.expand_dims ways of increasing the dimension
    work equally well (as shown in the previous example).
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading !!!
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter notebook with full code is placed [here](https://github.com/vidhi-am/numpy-dimension/blob/master/dimension%20handling-checkpoint.ipynb).
  prefs: []
  type: TYPE_NORMAL
- en: '**References:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://stackoverflow.com/questions/46334014/np-reshapex-1-1-vs-x-np-newaxis?noredirect=1&lq=1](https://stackoverflow.com/questions/46334014/np-reshapex-1-1-vs-x-np-newaxis?noredirect=1&lq=1)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://stackoverflow.com/questions/28385666/numpy-use-reshape-or-newaxis-to-add-dimensions](https://stackoverflow.com/questions/28385666/numpy-use-reshape-or-newaxis-to-add-dimensions)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Vidhi Chugh](https://vidhi-chugh.medium.com/)** is an award-winning AI/ML
    innovation leader and an AI Ethicist. She works at the intersection of data science,
    product, and research to deliver business value and insights. She is an advocate
    for data-centric science and a leading expert in data governance with a vision
    to build trustworthy AI solutions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://medium.com/analytics-vidhya/numpy-ways-to-handle-dimensions-939752c75d89).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Data Quality Dimensions: Assuring Your Data Quality with Great Expectations](https://www.kdnuggets.com/2023/03/data-quality-dimensions-assuring-data-quality-great-expectations.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Masked Arrays in NumPy to Handle Missing Data](https://www.kdnuggets.com/masked-arrays-in-numpy-to-handle-missing-data)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Techniques to Handle Imbalanced Data](https://www.kdnuggets.com/2017/06/7-techniques-handle-imbalanced-data.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News, August 31: The Complete Data Science Study Roadmap…](https://www.kdnuggets.com/2022/n35.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Handle Missing Data with Scikit-learn''s Imputer Module](https://www.kdnuggets.com/how-to-handle-missing-data-with-scikit-learns-imputer-module)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Handle Outliers in Dataset with Pandas](https://www.kdnuggets.com/how-to-handle-outliers-in-dataset-with-pandas)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
