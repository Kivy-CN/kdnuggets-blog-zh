- en: Introduction to Python Libraries for Data Cleaning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/03/introduction-python-libraries-data-cleaning.html](https://www.kdnuggets.com/2023/03/introduction-python-libraries-data-cleaning.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Introduction to Python Libraries for Data Cleaning](../Images/b08bbf2a4ef0aff10901872523a2f997.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by [pch.vecto](https://www.freepik.com/free-vector/male-female-cleaning-staff-with-mops-vacuum-cleaner_18733883.htm#query=cleaning&position=6&from_view=search&track=sph)
    on [Freepik](https://www.freepik.com/)
  prefs: []
  type: TYPE_NORMAL
- en: Data cleaning is a must-do activity for any data expert because we need our
    data to be error-free, consistent, and usable for analysis. Without this step,
    the analysis result might suffer. However, data cleaning often takes a long time
    and could be repetitive. Moreover, sometimes we miss an error that we need to
    realize.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: That is why we can rely on the Python packages designed for data cleaning. These
    packages were designed to improve our data cleaning experience and shorten data
    cleaning processing time. What are these packages? Let’s find out.
  prefs: []
  type: TYPE_NORMAL
- en: PyJanitor
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Pandas provide many data-cleaning functions, such as fillna and dropna, but
    they could still be enhanced. [PyJanitor](https://pyjanitor-devs.github.io/pyjanitor/)
    is a Python package that provides data-cleaning APIs within the Pandas API without
    replacing them. The package provides various methods including, but not limited
    to, the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Cleaning Column Names,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identifying Duplicate Values,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data Factorization,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data Encoding,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And many more. However, what is special about the PyJanitor is that the APIs
    can be executed via the chain method. Let’s test them with the example data. For
    this example, I would use the [Titanic Training data from Kaggle](https://www.kaggle.com/competitions/titanic/data?select=train.csv).
  prefs: []
  type: TYPE_NORMAL
- en: For starters, let’s install the PyJanitor package.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Then we would load the Titanic dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![Introduction to Python Libraries for Data Cleaning](../Images/4b10ee097c6fc0674e46ea43568f037a.png)'
  prefs: []
  type: TYPE_IMG
- en: We would use the above dataset for our example. Let’s try the PyJanitor package
    to clean our data with some sample functions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![Introduction to Python Libraries for Data Cleaning](../Images/666c96e2c22edfb43c2b1e342f918b0e.png)'
  prefs: []
  type: TYPE_IMG
- en: We transform our initial data frame with a chaining method. So, what happens
    with the code above? Let me break it down.
  prefs: []
  type: TYPE_NORMAL
- en: First, we transform the ‘Sex’ column into a numerical with factorize function,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With the also function, we print the shape after factorization,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next, we bin the age into groups using the bin_numeric function,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Same with the also function,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lastly, we clean the column’s name by converting them to lowercase, then replaces
    all spaces with underscores using clean_names
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All the above can be done with single chaining methods that directly done in
    our Pandas data frame. You can still do much more with the PyJanitor package,
    so I suggest you review their [documentation](https://pyjanitor-devs.github.io/pyjanitor/api/functions/).
  prefs: []
  type: TYPE_NORMAL
- en: Feature-engine
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Feature-Engine](https://feature-engine.trainindata.com/en/latest/index.html#)
    is a Python package designed for feature engineering and selection that preserves
    the scikit-learn APIs method, such as fit and transform. The package was designed
    to provide a data transformer embedded in the machine learning pipeline.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The package provides various data-cleaning transformers, including but not
    limited to:'
  prefs: []
  type: TYPE_NORMAL
- en: Data Imputation,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical Encoding,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Outlier Removal,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Variable Selection,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And many more functions. Let’s try the package by installing them first.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The Feature-Engine usage is easy; you only need to import them and train the
    transformer, similar to scikit-learn API. For example, I use an Imputer to fill
    the Age column missing data with the Median.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The code above would fill our age column in the data frame with the median.
    There are so many transformers you could experiment on. Try to find the one that
    suits your data pipeline on the [documentation](https://feature-engine.trainindata.com/en/latest/api_doc/index.html).
  prefs: []
  type: TYPE_NORMAL
- en: Cleanlab
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Cleanlab](https://docs.cleanlab.ai/stable/index.html) is an open-source Python
    package to clean any issues with the machine learning dataset label. It’s designed
    to make any machine learning training with noisy labels more robust and provide
    a reliable output. Any model with probabilistic output can be trained alongside
    Cleanlab packages.'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s try out the package with a code example. First, we need to install the
    Cleanlab.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: As Cleanlab works to clean the label issues, let’s try to prepare the dataset
    for machine learning training.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: After the dataset is ready, we would try to fit the dataset with a classifier
    model. Let’s look at the prediction metrics without cleaning the label.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![Introduction to Python Libraries for Data Cleaning](../Images/7bf04581efebbf927892b0e0bf95648e.png)'
  prefs: []
  type: TYPE_IMG
- en: It’s a good result, but let’s see if we can improve the result after we clean
    the label. Let’s try to do that with the following code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![Introduction to Python Libraries for Data Cleaning](../Images/ee0b64fa1f1008e4126bb628ca252e7d.png)'
  prefs: []
  type: TYPE_IMG
- en: We can see from the above result that some labels have issues because of misprediction.
    By cleaning the label, let’s see how the model metrics result.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![Introduction to Python Libraries for Data Cleaning](../Images/35acbf003114568e4f676c996f4c0538.png)'
  prefs: []
  type: TYPE_IMG
- en: We can see there is an improvement in the results compared to our previous model
    without label cleaning. You could still do many things with Cleanlab; I suggest
    you visit the [documentation](https://docs.cleanlab.ai/stable/index.html) to learn
    further.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Data cleaning is a must-step for any data analysis process. Still, it often
    takes a lot of time to clean everything properly. Luckily, there are Python packages
    developed to help us clean the data properly. In this article, I present three
    packages to help clean the data: PyJanitor, Feature-Engine, and Cleanlab.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Cornellius Yudha Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**
    is a data science assistant manager and data writer. While working full-time at
    Allianz Indonesia, he loves to share Python and Data tips via social media and
    writing media.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Introduction to Deep Learning Libraries: PyTorch and Lightning AI](https://www.kdnuggets.com/introduction-to-deep-learning-libraries-pytorch-and-lightning-ai)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top 38 Python Libraries for Data Science, Data Visualization &…](https://www.kdnuggets.com/2020/11/top-python-libraries-data-science-data-visualization-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python Libraries Data Scientists Should Know in 2022](https://www.kdnuggets.com/2022/04/python-libraries-data-scientists-know-2022.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Level 50 Data Scientist: Python Libraries to Know](https://www.kdnuggets.com/level-50-data-scientist-python-libraries-to-know)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Python Libraries Every Data Engineer Should Know](https://www.kdnuggets.com/7-python-libraries-every-data-engineer-should-know)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Essential Python Libraries for Data Manipulation](https://www.kdnuggets.com/essential-python-libraries-for-data-manipulation)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
