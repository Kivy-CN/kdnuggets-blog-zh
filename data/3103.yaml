- en: 'IoT on AWS: Machine Learning Models and Dashboards from Sensor Data'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS 上的 IoT：来自传感器数据的机器学习模型和仪表板
- en: 原文：[https://www.kdnuggets.com/2018/06/zimbres-iot-aws-machine-learning-dashboard.html](https://www.kdnuggets.com/2018/06/zimbres-iot-aws-machine-learning-dashboard.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2018/06/zimbres-iot-aws-machine-learning-dashboard.html](https://www.kdnuggets.com/2018/06/zimbres-iot-aws-machine-learning-dashboard.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](#comments)'
- en: '**By [Rubens Zimbres](https://www.linkedin.com/in/rubens-zimbres), Data Scientist**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Rubens Zimbres](https://www.linkedin.com/in/rubens-zimbres), 数据科学家**'
- en: Google Colab has open source projects that help Data Scientists everywhere.
    Inspired in this mindset, I developed my first IoT project using my notebook as
    an IoT device and AWS IoT as infrastructure.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Google Colab 具有帮助数据科学家在全球范围内进行工作的开源项目。受到这种思维方式的启发，我使用我的笔记本作为 IoT 设备，AWS IoT
    作为基础设施，开发了我的第一个 IoT 项目。
- en: 'So, I had a "simple" idea: collect CPU Temperature from my Notebook running
    on Ubuntu, send to Amazon AWS IoT, save data, make it available for Machine Learning
    models and dashboards.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我有一个“简单”的想法：从运行 Ubuntu 的笔记本电脑中收集 CPU 温度，发送到 Amazon AWS IoT，保存数据，使其可用于机器学习模型和仪表板。
- en: 'However, the operationalization of this idea is quite complex: first, develop
    a Python notebook that runs Ubuntu command line internally (''sensors''), collecting
    CPU temperature and is able to connect to AWS IoT via proper security protocols
    using MQTT. Without using a MQTT broker like Mosquitto.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这个想法的实施相当复杂：首先，开发一个 Python 笔记本，内部运行 Ubuntu 命令行（‘sensors’），收集 CPU 温度，并能够通过合适的安全协议使用
    MQTT 连接到 AWS IoT。无需使用像 Mosquitto 这样的 MQTT 代理。
- en: It is necessary to create a Thing at AWS IoT, get the Certificates, create and
    attach the Policy and create a SQL Rule to send data (JSON) to Cloud Watch and
    Dynamo DB. Then, create a Data Pipeline from Dynamo DB to S3, so that the data
    become available for a Machine Learning model and also to AWS Quick Sight dashboard.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 需要在 AWS IoT 创建一个 Thing，获取证书，创建并附加策略，并创建一个 SQL 规则，将数据（JSON）发送到 Cloud Watch 和
    Dynamo DB。然后，从 Dynamo DB 到 S3 创建一个数据管道，使数据可用于机器学习模型以及 AWS Quick Sight 仪表板。
- en: 'Let''s get started by installing ''sensors'' in Ubuntu 16.04 and ''AWSIoTPythonSDK''
    library in Anaconda 3:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从在 Ubuntu 16.04 中安装‘sensors’和在 Anaconda 3 中安装‘AWSIoTPythonSDK’库开始：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Let’s see what the ‘sensors’ command look like:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们来看看‘sensors’命令的样子：
- en: '![Image](../Images/82c2d2ab18a91a704f8880a9f54eb20a.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/82c2d2ab18a91a704f8880a9f54eb20a.png)'
- en: 'Now, install AWSIoTPythonSDK library:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，安装 AWSIoTPythonSDK 库：
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Let''s start with the Python notebook: the following function was developed
    to collect CPU Temperature with a delay of 5 seconds:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Python 笔记本开始：以下函数用于在延迟 5 秒后收集 CPU 温度：
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, we run the notebook from Linux command line:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们从 Linux 命令行运行笔记本：
- en: '![Image](../Images/ce5145e73ef340db7ae016a891cad001.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/ce5145e73ef340db7ae016a891cad001.png)'
- en: 'Good. Now this code is inserted in basicPubSub.py notebook from AWSIoTPythonSDK
    library like this:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 好的。现在这段代码被插入到 AWSIoTPythonSDK 库中的 basicPubSub.py 笔记本中，如下所示：
- en: '[PRE3]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Cool. We have a Python notebook that will connect to AWS IoT Core via MQTT protocol.
    Now we set up the shadow (JSON file) at AWS IoT, that is similar to the 'device
    twin' from Microsoft. Note that as I had only one device, I didn’t insert a device
    ID in the JSON file.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 很棒。我们有一个 Python 笔记本，它将通过 MQTT 协议连接到 AWS IoT Core。现在我们在 AWS IoT 上设置影子（JSON 文件），这类似于
    Microsoft 的‘device twin’。注意，由于我只有一个设备，所以我没有在 JSON 文件中插入设备 ID。
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now we get the certificates .pem, .key files and rootCA.pem for a safe connection.
    We type CTRL+ALT+T at Ubuntu and enter the command line and publish to a topic
    ''-t'':'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们获得了证书.pem、.key 文件和 rootCA.pem 以确保安全连接。我们在 Ubuntu 中按 CTRL+ALT+T 打开命令行，输入命令并发布到一个主题
    '-t'：
- en: '[PRE5]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We will receive the feedback from AWS IoT connection in the Linux shell, and
    check in AWS IoT monitoring tool (after 1 minute) if connections were successful:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 Linux shell 中收到来自 AWS IoT 连接的反馈，并在 AWS IoT 监控工具中检查（1 分钟后）连接是否成功：
- en: '![Image](../Images/7177fd039e2ed87c2d4478dafa3ad5dc.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/7177fd039e2ed87c2d4478dafa3ad5dc.png)'
- en: 'It is also possible to see if the messages are being published (orange area)
    and also the protocol used for the connection (on the left):'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以查看消息是否正在发布（橙色区域），以及用于连接的协议（左侧）：
- en: '![Image](../Images/941499f684dd7b4e951657720d97ea6d.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/941499f684dd7b4e951657720d97ea6d.png)'
- en: 'Also, we see that the ''shadow'' is also being updated (center):'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，我们可以看到‘shadow’也在更新中（中间）：
- en: '![Image](../Images/e7e43d00421e4d3e1b8c499d87714f1f.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/e7e43d00421e4d3e1b8c499d87714f1f.png)'
- en: 'Now we create a SQL rule to send data to Cloud Watch and also to Dynamo DB,
    creating IAM roles, policies and permissions:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们创建一个 SQL 规则，将数据发送到 Cloud Watch 和 Dynamo DB，并创建 IAM 角色、策略和权限：
- en: '![Image](../Images/9a101f2e1a378e2363376ae28f716fcf.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/9a101f2e1a378e2363376ae28f716fcf.png)'
- en: '![Image](../Images/734310ed2148a0933de572fb7b9f54ca.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/734310ed2148a0933de572fb7b9f54ca.png)'
- en: Data is then saved in DynamoDB, as a JSON file. Instead of timestamp, you can
    use MessageID as the Primary Key.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 数据随后保存到 DynamoDB，作为 JSON 文件。你可以使用 MessageID 作为主键，而不是时间戳。
- en: '![Image](../Images/0cb9407ab4ec653e86db220e76b56ca7.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/0cb9407ab4ec653e86db220e76b56ca7.png)'
- en: 'Now we can visualize Cloud dynamics and data transfer in CloudWatch:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以在 CloudWatch 中可视化云动态和数据传输：
- en: '![Image](../Images/664b5f745138cd0395f21246a0fd3b3d.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/664b5f745138cd0395f21246a0fd3b3d.png)'
- en: 'Then we create a Data Pipeline from DynamoDB to S3 to be used by QuickSight:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们创建一个从 DynamoDB 到 S3 的数据管道，以便 QuickSight 使用：
- en: '![Image](../Images/1be476996e3aa4cbd73c77d76c4d4989.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/1be476996e3aa4cbd73c77d76c4d4989.png)'
- en: 'It is also needed to create a JSON file and set up IAM permissions so that
    Quick Sight can read from S3 bucket:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 还需要创建一个 JSON 文件并设置 IAM 权限，以便 QuickSight 可以从 S3 存储桶中读取：
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now we have our static plot of CPU Temperature in Quick Sight.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们在 QuickSight 中有了静态的 CPU 温度图。
- en: '![Image](../Images/fc12a46fa8ff728d3c2d49b569c3edd2.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/fc12a46fa8ff728d3c2d49b569c3edd2.png)'
- en: Also, S3 data (.JSON file) is now available for Machine Learning models, like
    anomaly detection, prediction and classification, making possible to create a
    pipeline with Sage Maker and Deep Learning libraries = FUN.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，S3 数据（.JSON 文件）现在可用于机器学习模型，如异常检测、预测和分类，使得可以使用 Sage Maker 和深度学习库创建管道 = 有趣。
- en: This was a very nice way to get in touch with Amazon AWS services, like EC2,
    IoT, Cloud Watch, DynamoDB, S3, Quick Sight and Lambda. It's definitely not easy
    to set up everything and their dependencies, but this part of the project costed
    less than 1 USD. And generated a lot of fun !
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种很好的方式来接触 Amazon AWS 服务，如 EC2、IoT、Cloud Watch、DynamoDB、S3、Quick Sight 和 Lambda。设置所有这些服务及其依赖关系确实不容易，但这个部分的项目成本不到
    1 美元。而且非常有趣！
- en: 'This is the flowchart of the first part of the project at AWS:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这是项目第一部分在 AWS 上的流程图：
- en: '![Image](../Images/a747d00790333e65eed9bad2f560cb0a.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/a747d00790333e65eed9bad2f560cb0a.png)'
- en: Project Part 2 – Near Real-Time Dashboard
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 项目第二部分 – 接近实时仪表盘
- en: Now let's develop a second solution, using Streaming Data from AWS IoT that
    is sent to Kinesis / Firehose and then to AWS ElasticSearch, and finally to Kibana,
    a near real-time dashboard. You can opt to clean and extract data with Lambda
    (or not) using AWS IoT as input and AWS Batch as output to connect with Kinesis.
    Anyway, Kibana is able to interpret your JSON file.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们开发第二个解决方案，使用从 AWS IoT 发送到 Kinesis / Firehose 的流数据，然后到 AWS ElasticSearch，最后到
    Kibana，形成一个接近实时的仪表盘。你可以选择使用 Lambda 清理和提取数据（也可以不使用），将 AWS IoT 作为输入，AWS Batch 作为输出连接到
    Kinesis。无论如何，Kibana 能够解析你的 JSON 文件。
- en: '![Image](../Images/dd47965d3e2952596fe435604fde331d.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/dd47965d3e2952596fe435604fde331d.png)'
- en: 'First we must set up another rule for AWS IoT send telemetry to Kinesis Firehose
    stream delivery:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们必须为 AWS IoT 设置另一条规则，以将遥测数据发送到 Kinesis Firehose 流：
- en: '![Image](../Images/06b92365ebdbe5924ad2c04c0296fd43.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/06b92365ebdbe5924ad2c04c0296fd43.png)'
- en: Then create an Elastic Search domain
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然后创建一个 Elastic Search 域
- en: '![Image](../Images/7cd6885fb708b7f253dc0ef2da6aa256.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/7cd6885fb708b7f253dc0ef2da6aa256.png)'
- en: 'Setting up the access to a specific IP:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 设置对特定 IP 的访问：
- en: '[PRE7]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Then we create the Stream and Stream delivery with Kinesis Firehose.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们使用 Kinesis Firehose 创建流和流传输。
- en: '![Image](../Images/c275d7f80044f2f0ab3c9ee10ed3e2d3.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/c275d7f80044f2f0ab3c9ee10ed3e2d3.png)'
- en: '![Image](../Images/07ec9b798b92160182af451163f1a582.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/07ec9b798b92160182af451163f1a582.png)'
- en: 'Finally, we connect AWS Elasticsearch with Kibana, adjusting at Kibana’s ''Dev
    Tools'':'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将 AWS Elasticsearch 与 Kibana 连接，在 Kibana 的“Dev Tools”中进行调整：
- en: '[PRE8]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note that Elasticsearch will provide a Kibana endopint. Finally, we have our
    Near Real-Time Dashboard of CPU Temperature. It’s important to notice that we
    are almost in a real-time environment. The issue here is that Kibana updates the
    graphic each 5 seconds (or 15 if you want) but Elasticsearch has a minimum latency
    of 60 seconds.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 注意 Elasticsearch 将提供一个 Kibana 端点。最后，我们有了我们的接近实时的 CPU 温度仪表盘。值得注意的是，我们几乎处于实时环境。问题在于
    Kibana 每 5 秒（或 15 秒，如果你愿意）更新一次图形，但 Elasticsearch 的最小延迟为 60 秒。
- en: 'We can now visualize our fancy dashboard:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以可视化我们的炫酷仪表盘：
- en: '![Image](../Images/0afd4b1e7d4fe0761d02d5c25ebe7440.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/0afd4b1e7d4fe0761d02d5c25ebe7440.png)'
- en: 'More info and files at my GitHub - Repo 2018 (CPU Temperature – IoT Project):
     [https://github.com/RubensZimbres/Repo-2018](https://github.com/RubensZimbres/Repo-2018)'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息和文件请访问我的GitHub - 仓库2018（CPU温度 – IoT项目）： [https://github.com/RubensZimbres/Repo-2018](https://github.com/RubensZimbres/Repo-2018)
- en: '**Bio: [Rubens Zimbres](https://www.linkedin.com/in/rubens-zimbres)** is a
    Data Scientist, PhD in Business Administration with emphasis in Artificial Intelligence
    and Cellular Automata. Currently works in Telecommunications area, developing
    Machine Learning, Deep Learning models and IoT solutions for the financial sector
    and agriculture.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**简历： [鲁本斯·津布雷斯](https://www.linkedin.com/in/rubens-zimbres)** 是一名数据科学家，拥有人工智能和细胞自动机方向的商业管理博士学位。目前在电信领域工作，为金融行业和农业开发机器学习、深度学习模型及IoT解决方案。'
- en: '**Related:**'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[GANs in TensorFlow from the Command Line: Creating Your First GitHub Project](/2018/05/zimbres-first-github-project-gans.html)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通过命令行在TensorFlow中使用GANs：创建你的第一个GitHub项目](/2018/05/zimbres-first-github-project-gans.html)'
- en: '[Putting the “Science” Back in Data Science](/2017/09/science-data-science.html)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将“科学”带回数据科学](/2017/09/science-data-science.html)'
- en: '[Machine Learning Applied to Big Data, Explained](/2017/07/machine-learning-big-data-explained.html)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[应用于大数据的机器学习，详解](/2017/07/machine-learning-big-data-explained.html)'
- en: '* * *'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速开启网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你所在组织的IT需求'
- en: '* * *'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Prepare Your Data for Effective Tableau & Power BI Dashboards](https://www.kdnuggets.com/2022/06/prepare-data-effective-tableau-power-bi-dashboards.html)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[为有效的Tableau和Power BI仪表板准备数据](https://www.kdnuggets.com/2022/06/prepare-data-effective-tableau-power-bi-dashboards.html)'
- en: '[11 Best Practices of Cloud and Data Migration to AWS Cloud](https://www.kdnuggets.com/2023/04/11-best-practices-cloud-data-migration-aws-cloud.html)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[迁移到AWS云的11个最佳实践](https://www.kdnuggets.com/2023/04/11-best-practices-cloud-data-migration-aws-cloud.html)'
- en: '[Setup and use JupyterHub (TLJH) on AWS EC2](https://www.kdnuggets.com/2023/01/setup-jupyterhub-tljh-aws-ec2.html)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在AWS EC2上设置和使用JupyterHub (TLJH)](https://www.kdnuggets.com/2023/01/setup-jupyterhub-tljh-aws-ec2.html)'
- en: '[Using Datawig, an AWS Deep Learning Library for Missing Value Imputation](https://www.kdnuggets.com/2021/12/datawig-aws-deep-learning-library-missing-value-imputation.html)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用Datawig，一个用于缺失值填补的AWS深度学习库](https://www.kdnuggets.com/2021/12/datawig-aws-deep-learning-library-missing-value-imputation.html)'
- en: '[The AIoT Revolution: How AI and IoT Are Transforming Our World](https://www.kdnuggets.com/2022/07/aiot-revolution-ai-iot-transforming-world.html)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[AIoT革命：AI和IoT如何改变我们的世界](https://www.kdnuggets.com/2022/07/aiot-revolution-ai-iot-transforming-world.html)'
- en: '[KDnuggets News, July 27: The AIoT Revolution: How AI and IoT Are…](https://www.kdnuggets.com/2022/n30.html)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets新闻，7月27日：AIoT革命：AI和IoT如何…](https://www.kdnuggets.com/2022/n30.html)'
