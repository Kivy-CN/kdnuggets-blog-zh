- en: All About Collections in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于 Python 中的集合
- en: 原文：[https://www.kdnuggets.com/2022/09/collections-python.html](https://www.kdnuggets.com/2022/09/collections-python.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2022/09/collections-python.html](https://www.kdnuggets.com/2022/09/collections-python.html)
- en: '![All About Collections in Python](../Images/df4540364b3e0ee7daf7a1b76def32d0.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![关于 Python 中的集合](../Images/df4540364b3e0ee7daf7a1b76def32d0.png)'
- en: Image by Editor
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由编辑提供
- en: Python possesses a module named **collections** which has different types of
    containers. A container is a python object which consists different objects and
    implements a way to retrieve those objects and iterate over them.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Python 拥有一个名为 **collections** 的模块，其中包含不同类型的容器。容器是一个 Python 对象，它包含不同的对象，并实现了一种检索这些对象和对它们进行迭代的方法。
- en: In this tutorial, we would be exploring different types of containers implemented
    by the **collections** module.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将深入探讨由 **collections** 模块实现的不同类型的容器。
- en: Counters
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Counters
- en: OrderedDict
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OrderedDict
- en: DefaultDict
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DefaultDict
- en: ChainMap
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ChainMap
- en: NamedTuple
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NamedTuple
- en: DeQue
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DeQue
- en: Counters
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Counters
- en: Counters are dict subclass which is used to keep the count of the elements present
    in an iterable in an unordered dictionary where the key represents the element
    and value represents the count of the element in the iterable
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Counter 是 dict 的子类，用于在无序字典中保持可迭代对象中元素的计数，其中键表示元素，值表示该元素在可迭代对象中的计数
- en: In order to initialize a counter object, we use the counter () function which
    can be called in the following ways
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为了初始化一个计数器对象，我们使用 counter() 函数，它可以以以下方式调用
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**1) Using sequence of items**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**1) 使用项的序列**'
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output:**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**2) Using Dictionary**'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**2) 使用字典**'
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Output:**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**3) Using keyword arguments**'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**3) 使用关键字参数**'
- en: '[PRE5]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Output:**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE6]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: OrderedDict
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OrderedDict
- en: An orderedDict are dict subclass but not like dictionary, they remember the
    order in which the keys are inserted
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: OrderedDict 是 dict 的子类，但不同于普通字典，它们记住键插入的顺序
- en: '[PRE7]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**Output:**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE8]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**1) When inserting new items in an existing ordered dictionary the new item
    is attached at the end of the dictionary hence maintaining the order of dictionary**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**1) 当在现有有序字典中插入新项目时，新项目会附加在字典的末尾，从而保持字典的顺序**'
- en: '[PRE9]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Output:**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE10]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '**2) When deleting an item from an existing ordered dictionary and inserting
    the same item again then that particular item is inserted at the end of the dictionary **'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**2) 当从现有有序字典中删除一个项目并重新插入相同的项目时，该特定项目会被插入到字典的末尾**'
- en: '[PRE11]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '**Output:**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE12]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '**Output:**'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE14]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '**3) When reassigning or updating the value of an existing key – value pair
    in an OrderedDict object, the position of the key is maintained but the key gets
    a new value**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**3) 当重新分配或更新 OrderedDict 对象中现有键值对的值时，键的位置保持不变，但键的值会更新**'
- en: '[PRE15]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '**Output:**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE16]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: DefaultDict
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DefaultDict
- en: A DefaultDict is a dict subclass which provides default values for a key which
    never exists hence never raising a keyError
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: DefaultDict 是 dict 的子类，为从未存在的键提供默认值，从而避免抛出 keyError
- en: '[PRE17]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '**1) Using list as a defaultdict**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**1) 使用 list 作为 defaultdict**'
- en: '[PRE18]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '**Output:**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE19]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '**2) Using int as a defaultdict**'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**2) 使用 int 作为 defaultdict**'
- en: '[PRE20]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '**Output:**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE21]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: ChainMap
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ChainMap
- en: ChainMap are used to combine more than one dictionaries into a single unit hence
    returning a list of dictionaries
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: ChainMap 用于将多个字典合并成一个单元，因此返回字典列表
- en: '[PRE22]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '**Output:**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE23]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '**1) Accessing Values using key name**'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**1) 使用键名访问值**'
- en: '[PRE24]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '**Output:**'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE25]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '**2) Accessing Values **'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**2) 访问值**'
- en: '[PRE26]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '**Output:**'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE27]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '**3) Accessing Keys**'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**3) 访问键**'
- en: '[PRE28]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '**Output:**'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE29]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '**4) Inserting new dictionary**'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**4) 插入新字典**'
- en: A new dictionary is inserted at the beginning of the ChainMap by using the new_child()
    method
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 new_child() 方法，新字典被插入到 ChainMap 的开头
- en: '[PRE30]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '**Output:**'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE31]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: NamedTuple
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NamedTuple
- en: A NamedTuple is a tuple object having names for every position
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: NamedTuple 是一个具有每个位置名称的元组对象
- en: '[PRE32]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '**1) Declaring the namedtuple**'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**1) 声明 namedtuple**'
- en: '[PRE33]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '**2) Inserting values to the namedtuple**'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**2) 向 namedtuple 中插入值**'
- en: '[PRE34]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '**Output:**'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE35]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '**3) Accessing the value using index**'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**3) 使用索引访问值**'
- en: '[PRE36]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '**Output:**'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE37]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '**4) Accessing the value using name**'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**4) 使用名称访问值**'
- en: '[PRE38]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '**Output:**'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE39]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Deque
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Deque
- en: A deque is a list for implementing append and pop operations on both sides of
    the container
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: deque 是一个列表，用于在容器的两侧实现 append 和 pop 操作
- en: '[PRE40]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '**1) Declaring deque**'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**1) 声明 deque**'
- en: '[PRE41]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '**Output:**'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE42]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '**2) Using append to insert element at the right which is the end of deque**'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**2) 使用 append 在 deque 的右侧插入元素，即 deque 的末尾**'
- en: '[PRE43]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '**Output:**'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE44]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '**3) Using append to insert element at the left which is the beginning of deque**'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**3) 使用 append 在 deque 的左侧插入元素，即 deque 的开始位置**'
- en: '[PRE45]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '**Output:**'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE46]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '**4) Using pop to delete element from the right which is the end of deque**'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '**Output:**'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '**5) Using popleft to delete element from the left which is the beginning of
    deque**'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '**Output:**'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '**[Priya Sengar](https://www.linkedin.com/in/priya-sengar/)** (**Medium**,
    **Github**) is a Data Scientist with Old Dominion University. Priya is passionate
    about solving problems in data and converting them into solutions.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[What''s With All the Layoffs in Tech?](https://www.kdnuggets.com/2023/02/layoffs-tech.html)'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Super Bard: The AI That Can Do It All and Better](https://www.kdnuggets.com/2023/05/super-bard-ai-better.html)'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[If You Want to Master Generative AI, Ignore All (But Two) Tools](https://www.kdnuggets.com/if-you-want-to-master-generative-ai-ignore-all-but-two-tools)'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Popular Google Certification for All Areas in the Tech Industry](https://www.kdnuggets.com/popular-google-certification-for-all-areas-in-the-tech-industry)'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Textbooks Are All You Need: A Revolutionary Approach to AI Training](https://www.kdnuggets.com/2023/07/textbooks-all-you-need-revolutionary-approach-ai-training.html)'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Skills All Marketing Analytics and Data Science Pros Need Today](https://www.kdnuggets.com/2023/08/mads-5-skills-marketing-analytics-data-science-pros-need-today.html)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
