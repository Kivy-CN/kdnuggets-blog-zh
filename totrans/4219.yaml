- en: 6 Cool Python Libraries That I Came Across Recently
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我最近发现的6个酷炫的Python库
- en: 原文：[https://www.kdnuggets.com/2021/09/6-cool-python-libraries-recently.html](https://www.kdnuggets.com/2021/09/6-cool-python-libraries-recently.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/09/6-cool-python-libraries-recently.html](https://www.kdnuggets.com/2021/09/6-cool-python-libraries-recently.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Dhilip Subramanian](https://medium.com/@sdhilip), Data Scientist and
    AI Enthusiast**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者 [Dhilip Subramanian](https://medium.com/@sdhilip)，数据科学家和AI爱好者**'
- en: '![Image](../Images/6ad8a106a0ec5f6b286bdefd412cffd6.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/6ad8a106a0ec5f6b286bdefd412cffd6.png)'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业的快车道。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你在IT方面的组织'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Python is an integral part of machine learning and libraries make our life simpler.
    Recently, I came across 6 awesome libraries while working on my ML projects. They
    helped me save a lot of time and I am going to discuss about them in this blog.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Python是机器学习的核心组成部分，库使我们的生活更简单。最近，我在进行ML项目时发现了6个很棒的库。它们帮助我节省了大量时间，我将在这篇博客中讨论它们。
- en: 1. clean-text
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1. clean-text
- en: 'A truly incredible library, clean-text should be your go-to when you need to
    handle scraping or social media data. The coolest thing about it is that it doesn’t
    require any long fancy code or regular expressions to clean our data. Let’s see
    some examples:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一个真正不可思议的库，clean-text应该是你处理抓取或社交媒体数据时的首选。最酷的地方在于，它不需要任何长的复杂代码或正则表达式来清理我们的数据。让我们看看一些示例：
- en: '**Installation**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**安装**'
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Example**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例**'
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '![](../Images/ebefdb8e66b61b222d258ee32dc8e389.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ebefdb8e66b61b222d258ee32dc8e389.png)'
- en: From the above, we can see it’s having Unicode in the word Zurich (the letter
    ‘u’ has been encoded), ASCII characters (in Al\u017eupine.), currency symbol in
    rupee, HTML link, punctuations.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 从上面可以看到，它包含了“Zurich”中的Unicode（字母‘u’已编码）、ASCII字符（在Al\u017eupine.）、货币符号（卢比）、HTML链接和标点符号。
- en: You just have to mention the required ASCII, Unicode, URLs, numbers, currency
    and punctuation in the clean function. Or, they can be replaced with replace parameters
    in the above function. For instance, I changed the rupee symbol into Rupees.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你只需要在clean函数中提及所需的ASCII、Unicode、URLs、数字、货币和标点符号。或者，它们可以在上述函数中用replace参数替换。例如，我将卢比符号更改为Rupees。
- en: There’s absolutely no need to use regular expressions or long codes. Very handy
    library especially if you want to clean the texts from scraping or social media
    data. Based on your requirement, you can also pass the arguments individually
    rather than combining them all.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 完全没有必要使用正则表达式或长代码。这个库非常方便，尤其是当你需要清理抓取或社交媒体数据的文本时。根据你的需求，你也可以单独传递参数，而不是将它们全部组合在一起。
- en: For more details, please check this [GitHub repository](https://github.com/jfilter/clean-text).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多详细信息，请查看这个[GitHub仓库](https://github.com/jfilter/clean-text)。
- en: 2\. drawdata
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. drawdata
- en: Drawdata is yet another cool python library finding of mine. How many times
    have you come across a situation where you need to explain the ML concepts to
    the team? It must happen often because data science is all about teamwork. This
    library helps you to draw a dataset in the Jupyter notebook.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Drawdata是我发现的另一个酷炫的Python库。你有多少次遇到需要向团队解释ML概念的情况？这肯定很常见，因为数据科学完全是团队合作的事。这个库可以帮助你在Jupyter
    Notebook中绘制数据集。
- en: Personally, I really enjoyed using this library when I explained ML concepts
    to my team. Kudos to the developers who created this library!
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 个人来说，当我向我的团队解释ML概念时，我非常喜欢使用这个库。对创建这个库的开发者致以敬意！
- en: Drawdata is only for the classification problem with four classes.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Drawdata仅适用于具有四个类别的分类问题。
- en: '**Installation**'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**安装**'
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Example**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例**'
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Output**'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '![](../Images/1df5aa80c014f829a732e10e6f7d10ad.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1df5aa80c014f829a732e10e6f7d10ad.png)'
- en: Image by the author
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: The above drawing windows will open after executing the draw_Scatter(). Clearly,
    there are four classes namely A, B, C, and D. You can click on any class and draw
    the points you want. Each class represents the different colors in the drawing.
    You also have an option to download the data as a csv or json file. Also, the
    data can be copied to you clipboard and read from the below code
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 执行 draw_Scatter() 后，上述绘图窗口将打开。显然，有四个类别，即 A、B、C 和 D。你可以点击任何类别并绘制你想要的点。每个类别在绘图中代表不同的颜色。你还可以选择将数据下载为
    CSV 或 JSON 文件。此外，数据可以复制到剪贴板，并从以下代码中读取。
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: One of the limitations of this library is that it gives only two data points
    with four classes. But otherwise, it is definitely worth it. For more details,
    please check this [GitHub link](https://github.com/koaning/drawdata).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这个库的一个局限性是它只提供两个数据点和四个类别。但除此之外，它绝对值得尝试。有关更多细节，请查看这个[GitHub 链接](https://github.com/koaning/drawdata)。
- en: 3\. Autoviz
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. Autoviz
- en: I won’t ever forget the time I spent doing exploratory data analysis using matplotlib.
    There are many simple visualization libraries. However, I found out recently about
    Autoviz which automatically visualizes any dataset with a single line of code.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我永远不会忘记我使用 matplotlib 进行探索性数据分析的时光。有很多简单的可视化库。然而，我最近发现了 Autoviz，它可以用一行代码自动可视化任何数据集。
- en: '**Installation**'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**安装**'
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Example**'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例**'
- en: I used the IRIS dataset for this example.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这个示例中使用了 IRIS 数据集。
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The above parameters are default one. For more information, please check [here](https://pypi.org/project/autoviz/https://pypi.org/project/autoviz/).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 上述参数是默认的。有关更多信息，请查看[这里](https://pypi.org/project/autoviz/https://pypi.org/project/autoviz/)。
- en: '**Output**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '![](../Images/e3a0101664fea9105c03c5c8e7071896.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e3a0101664fea9105c03c5c8e7071896.png)'
- en: Image by the author
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: We can see all the visuals and complete our EDA with a single line of code.
    There are many auto visualization libraries but I really enjoyed familiarizing
    myself with this one in particular.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过一行代码查看所有的可视化并完成我们的 EDA。虽然有很多自动可视化库，但我真的很喜欢这个。
- en: 4\. Mito
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. Mito
- en: Everyone likes Excel, right? It is one of the easiest ways of exploring a dataset
    in a first instance. I came across Mito a few months ago, but tried it only recently
    and I absolutely loved it!
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 大家都喜欢 Excel，对吧？这是初步探索数据集最简单的方法之一。我几个月前遇到了 Mito，但直到最近才尝试，它真的让我爱不释手！
- en: It is a Jupyter-lab extension python library with GUI support which adds spreadsheet
    functionality. You can load your csv data and edit the dataset as a spreadsheet,
    and it automatically generates Pandas code. Very cool.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个带有图形用户界面的 Jupyter-lab 扩展 Python 库，添加了电子表格功能。你可以加载你的 CSV 数据，并将数据集作为电子表格进行编辑，它会自动生成
    Pandas 代码。非常酷。
- en: Mito genuinely deserves an entire blog post. However, I won’t go into much detail
    today. Here’s a simple task demonstration for you instead. For more details, please
    check [here](https://trymito.io/).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Mito 确实值得写一整篇博客。然而，今天我不会详细介绍。相反，我会给你一个简单的任务演示。有关更多详细信息，请查看[这里](https://trymito.io/)。
- en: '**Installation**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**安装**'
- en: '[PRE7]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: For more information on installation, please check [here](https://docs.trymito.io/getting-started/installing-mito).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 有关安装的更多信息，请查看[这里](https://docs.trymito.io/getting-started/installing-mito)。
- en: '[PRE8]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: After executing the above code, mitosheet will open in the jupyter lab. I’m
    using the IRIS dataset. Firstly, I created two new columns. One is average Sepal
    length and the other is sum Sepal width. Secondly, I changed the column name for
    average Sepal length. Finally, I created a histogram for the average Sepal length
    column.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 执行上述代码后，mitosheet 将在 jupyter lab 中打开。我使用的是 IRIS 数据集。首先，我创建了两列新数据。一列是平均萼片长度，另一列是总萼片宽度。其次，我更改了平均萼片长度的列名。最后，我为平均萼片长度列创建了一个直方图。
- en: The code is automatically generated after the above mentioned steps are followed.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 按照上述步骤操作后，代码会自动生成。
- en: '**Output**'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '![](../Images/fe424946548073a9edb746ca6654cd98.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fe424946548073a9edb746ca6654cd98.png)'
- en: Image by the author
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: 'Below code was generated for the above steps:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码是为上述步骤生成的：
- en: '[PRE9]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 5\. Gramformer
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. Gramformer
- en: Yet another impressive library, Gramformer is based on generative models which
    help us correct the grammar in the sentences. This library has three models which
    have a *detector, a highlighter, and a corrector*. The detector identifies if
    the text has incorrect grammar. The highlighter marks the faulty parts of speech
    and the corrector fixes the errors. Gramformer is a completely open source and
    is in its early stages. But it isn’t suitable for long paragraphs as it works
    only at a sentence level and has been trained for 64 length sentences.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个令人印象深刻的库，Gramformer 基于生成模型，帮助我们纠正句子的语法。这个库有三个模型，分别是*检测器、高亮器和纠正器*。检测器识别文本是否有不正确的语法。高亮器标记出有问题的词性，而纠正器则修复错误。Gramformer
    完全开源，并处于早期阶段，但它不适合处理长段落，因为它只在句子级别工作，并且已经训练了 64 长度的句子。
- en: Currently, the corrector and highlighter model works. Let’s see some examples.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，纠正器和高亮器模型正在工作。我们来看一些示例。
- en: '**Installation**'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**安装**'
- en: '[PRE10]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '**Instantiate Gramformer**'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**实例化 Gramformer**'
- en: '[PRE11]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](../Images/56008268f4c4ff6e2edb99e1b3c99f06.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/56008268f4c4ff6e2edb99e1b3c99f06.png)'
- en: '**Example**'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例**'
- en: '[PRE12]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '**Output**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '![](../Images/3060be6c6cbf4aeeaa85e4ec15b2c1ad.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3060be6c6cbf4aeeaa85e4ec15b2c1ad.png)'
- en: Image by the author
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: From the above output, we can see it corrects grammar and even spelling mistakes.
    A really amazing library and functions very well too. I have not tried highlighter
    here, you can try and check this GitHub documentation for more[ details](https://github.com/PrithivirajDamodaran/Gramformer).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 从以上输出中，我们可以看到它纠正了语法甚至拼写错误。这是一个非常了不起的库，功能也很好。我还没有尝试高亮器，你可以尝试一下，并查看 [GitHub 文档](https://github.com/PrithivirajDamodaran/Gramformer)以了解更多*细节*。
- en: 6\. Styleformer
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6\. Styleformer
- en: My positive experience with Gramformer encouraged me to look for more unique
    libraries. That is how I found Styleformer, another highly appealing Python library.
    Both Gramformer and Styleformer were created by Prithiviraj Damodaran and both
    are based on generative models. Kudos to the creator for open sourcing it.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我对 Gramformer 的积极体验促使我寻找更多独特的库。这就是我发现 Styleformer 的原因，它是另一个极具吸引力的 Python 库。Gramformer
    和 Styleformer 都由 Prithiviraj Damodaran 创建，并且都基于生成模型。向创作者致以敬意，感谢开源。
- en: Styleformer helps convert casual to formal sentences, formal to casual sentences,
    active to passive, and passive to active sentences.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Styleformer 帮助将休闲句子转换为正式句子，将正式句子转换为休闲句子，将主动句转换为被动句，将被动句转换为主动句。
- en: Let’s see some examples
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 来看看一些示例
- en: '**Installation**'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**安装**'
- en: '[PRE13]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '**Instantiate Styleformer**'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**实例化 Styleformer**'
- en: '[PRE14]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '**Examples**'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例**'
- en: '[PRE15]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![](../Images/6c88c8eba994152d82f6ce53ad74667e.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6c88c8eba994152d82f6ce53ad74667e.png)'
- en: '[PRE16]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![](../Images/1c5303fc21075a83c42987c39f5d0163.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1c5303fc21075a83c42987c39f5d0163.png)'
- en: '[PRE17]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![](../Images/a32241558085e6baf66af2f03a047c01.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a32241558085e6baf66af2f03a047c01.png)'
- en: '[PRE18]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![](../Images/c896b10bea33758ba328bd4f7de456f1.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c896b10bea33758ba328bd4f7de456f1.png)'
- en: See the above output, it converts accurately. I used this library for converting
    casual to formal, especially for social media posts in one of my analyses. For
    more details, kindly check [GitHub](https://github.com/PrithivirajDamodaran/Styleformer).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 查看上述输出，它的转换非常准确。我在一次分析中使用了这个库，将休闲语言转换为正式语言，特别是用于社交媒体帖子。有关更多详细信息，请查看 [GitHub](https://github.com/PrithivirajDamodaran/Styleformer)。
- en: You might be familiar with some of the previously mentioned libraries but ones
    like Gramformer and Styleformer are recent players. They are extremely underrated
    and most certainly deserve to be known because they saved a lot of my time and
    I heavily used them for my NLP projects.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能对一些之前提到的库比较熟悉，但像 Gramformer 和 Styleformer 这样的库则是新兴的玩家。它们被极度低估，毫无疑问值得被了解，因为它们节省了我大量时间，并且我在
    NLP 项目中大量使用了它们。
- en: Thanks for reading. If you have anything to add, please feel free to leave a
    comment!
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读。如果你有任何补充意见，请随时留下评论！
- en: You might also like my previous article [*Five Cool Python Libraries for Data
    Science*](https://pub.towardsai.net/five-cool-python-libraries-for-data-science-7f1fce402b90)
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还喜欢我之前的文章 [*五个酷炫的 Python 数据科学库*](https://pub.towardsai.net/five-cool-python-libraries-for-data-science-7f1fce402b90)
- en: '**Bio: [Dhilip Subramanian](https://medium.com/@sdhilip)** is a Mechanical
    Engineer and has completed his Master''s in Analytics. He has 9 years of experience
    with specialization in various domains related to data including IT, marketing,
    banking, power, and manufacturing. He is passionate about NLP and machine learning.
    He is a contributor to the [SAS community](https://communities.sas.com/t5/user/viewprofilepage/user-id/271305)
    and loves to write technical articles on various aspects of data science on the
    Medium platform.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**个人简介： [Dhilip Subramanian](https://medium.com/@sdhilip)** 是一名机械工程师，已获得分析硕士学位。他拥有9年的经验，专注于与数据相关的多个领域，包括IT、营销、银行、电力和制造业。他对自然语言处理和机器学习充满热情。他是[SAS社区](https://communities.sas.com/t5/user/viewprofilepage/user-id/271305)的贡献者，并喜欢在Medium平台上撰写有关数据科学的各种技术文章。'
- en: '[Original](https://towardsdatascience.com/6-cool-python-libraries-that-i-came-across-recently-72e05dadd295).
    Reposted with permission.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/6-cool-python-libraries-that-i-came-across-recently-72e05dadd295)。经许可转载。'
- en: '**Related:**'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关内容：**'
- en: '[Five Cool Python Libraries for Data Science](/2020/04/five-cool-python-libraries-data-science.html)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[五个有趣的Python库用于数据科学](/2020/04/five-cool-python-libraries-data-science.html)'
- en: '[Easy Speech-to-Text with Python](/2020/06/easy-speech-text-python.html)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python中的简单语音转文本](/2020/06/easy-speech-text-python.html)'
- en: '[Learning Data Science and Machine Learning: First Steps](/2021/08/learn-data-science-machine-learning.html)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习数据科学和机器学习：第一步](/2021/08/learn-data-science-machine-learning.html)'
- en: More On This Topic
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关阅读
- en: '[Top 38 Python Libraries for Data Science, Data Visualization &…](https://www.kdnuggets.com/2020/11/top-python-libraries-data-science-data-visualization-machine-learning.html)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学、数据可视化与…的38个顶级Python库](https://www.kdnuggets.com/2020/11/top-python-libraries-data-science-data-visualization-machine-learning.html)'
- en: '[Python Libraries Data Scientists Should Know in 2022](https://www.kdnuggets.com/2022/04/python-libraries-data-scientists-know-2022.html)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2022年数据科学家应该知道的Python库](https://www.kdnuggets.com/2022/04/python-libraries-data-scientists-know-2022.html)'
- en: '[Explainable AI: 10 Python Libraries for Demystifying Your Model''s Decisions](https://www.kdnuggets.com/2023/01/explainable-ai-10-python-libraries-demystifying-decisions.html)'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[可解释AI：揭示模型决策的10个Python库](https://www.kdnuggets.com/2023/01/explainable-ai-10-python-libraries-demystifying-decisions.html)'
- en: '[Introduction to Python Libraries for Data Cleaning](https://www.kdnuggets.com/2023/03/introduction-python-libraries-data-cleaning.html)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据清洗的Python库介绍](https://www.kdnuggets.com/2023/03/introduction-python-libraries-data-cleaning.html)'
- en: '[Beyond Numpy and Pandas: Unlocking the Potential of Lesser-Known…](https://www.kdnuggets.com/2023/08/beyond-numpy-pandas-unlocking-potential-lesserknown-python-libraries.html)'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[超越Numpy和Pandas：挖掘鲜为人知的…](https://www.kdnuggets.com/2023/08/beyond-numpy-pandas-unlocking-potential-lesserknown-python-libraries.html)'
- en: '[Level 50 Data Scientist: Python Libraries to Know](https://www.kdnuggets.com/level-50-data-scientist-python-libraries-to-know)'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[50级数据科学家：需要了解的Python库](https://www.kdnuggets.com/level-50-data-scientist-python-libraries-to-know)'
