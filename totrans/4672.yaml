- en: How to Automate Tasks on GitHub With Machine Learning for Fun and Profit
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何利用机器学习在 GitHub 上自动化任务，实现趣味和盈利
- en: 原文：[https://www.kdnuggets.com/2019/05/automate-tasks-github-machine-learning-fun-profit.html](https://www.kdnuggets.com/2019/05/automate-tasks-github-machine-learning-fun-profit.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/05/automate-tasks-github-machine-learning-fun-profit.html](https://www.kdnuggets.com/2019/05/automate-tasks-github-machine-learning-fun-profit.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](#comments)'
- en: '**By [Hamel Husain](https://twitter.com/HamelHusain), [Michal Jastrzębski](https://twitter.com/_inc0_) and [Jeremy
    Lewi](https://twitter.com/jeremylewi)**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Hamel Husain](https://twitter.com/HamelHusain)、[Michal Jastrzębski](https://twitter.com/_inc0_)
    和 [Jeremy Lewi](https://twitter.com/jeremylewi) 发表**'
- en: 'Teaser: Build a model that labels issues and launch it as a product!'
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 引言：构建一个标签问题的模型并将其作为产品发布！
- en: '![Figure](../Images/c02dc82f2b4a75b8573e5e5867ba5596.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/c02dc82f2b4a75b8573e5e5867ba5596.png)'
- en: '[Link](https://github.com/genuinetools/img/issues/224) to this issue. More
    examples can be viewed [here](https://mlbot.net/).![Figure](../Images/86411aa6eef5f6ee391cb84b4c9b8912.png)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[链接](https://github.com/genuinetools/img/issues/224)到此问题。更多示例可以在 [这里](https://mlbot.net/)
    查看。![图示](../Images/86411aa6eef5f6ee391cb84b4c9b8912.png)'
- en: '[Link](https://github.com/hamelsmu/Issue-Label-Bot-Examples/issues/114) to
    this issue. More examples can be viewed [here](https://mlbot.net/)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[链接](https://github.com/hamelsmu/Issue-Label-Bot-Examples/issues/114)到此问题。更多示例可以在
    [这里](https://mlbot.net/) 查看'
- en: '[**Install this app on your GitHub repositories from this page**](https://mlbot.net/)**.**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[**从此页面将此应用安装到您的 GitHub 仓库**](https://mlbot.net/)**。**'
- en: 'Motivation: The elusive, perfect machine learning problem'
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 动机：难以捉摸的完美机器学习问题
- en: '![Figure](../Images/ddbb3122a83f9b3d1b05787c51474c54.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/ddbb3122a83f9b3d1b05787c51474c54.png)'
- en: Finding the ideal machine learning problem can feel like searching for treasure
    or chasing dragons. [Image credit](https://polycount.com/discussion/179516/help-on-creating-a-wide-a-treasure-room-full-of-gold).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 寻找理想的机器学习问题可能像寻宝或追逐龙一样。 [图片来源](https://polycount.com/discussion/179516/help-on-creating-a-wide-a-treasure-room-full-of-gold)。
- en: 'Our friends and colleagues who are data scientists would describe the ideal
    predictive modeling project as a situation where:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的数据科学家朋友和同事会将理想的预测建模项目描述为一种情况：
- en: There is an **abundance of data**, which is already labeled or where labels
    can be inferred.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存在 **大量数据**，这些数据已经被标记，或者可以推断出标签。
- en: The data can be used to solve **real problems**.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据可以用来解决 **实际问题**。
- en: The problem relates to a **domain you are passionate about **or the problem
    you want to solve is your own and **you can be your first customer**.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题涉及到一个 **您感兴趣的领域**，或者您要解决的问题是您自己的 **您可以成为第一个客户**。
- en: There is** a platform** where your data product can reach a **massive audience, **with
    mechanisms to** gather feedback and improve**.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有 **一个平台**，您的数据产品可以接触到 **大量观众**，并且有 **收集反馈和改进** 的机制。
- en: You can create this with **minimal expense and time**, hopefully using languages
    and tools you are familiar with.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以以 **最小的开销和时间** 创建这些，最好是使用您熟悉的语言和工具。
- en: There is a way to **monetize your product** if it becomes successful.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果产品成功，有办法 **实现盈利**。
- en: The above list is aspirational and data scientists are lucky to encounter a
    problem that meets all of these (the authors feel lucky if we can find a problem
    that satisfies even half of these!).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 上述列表是理想的，数据科学家遇到符合所有这些条件的问题是幸运的（作者觉得即使能找到符合一半条件的问题也很幸运！）。
- en: 'Enter GH-Archive & GitHub Apps: Where Data Meets Opportunity'
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 进入 GH-Archive & GitHub 应用程序：数据与机会相遇的地方
- en: Today, we present a dataset, platform, and domain that we believe satisfies
    the criteria set forth above!
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，我们介绍一个我们认为符合上述标准的数据集、平台和领域！
- en: '**The dataset**:[**GH-Archive**](https://www.gharchive.org/).'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据集**：[**GH-Archive**](https://www.gharchive.org/)。'
- en: 'GH-Archive logs a tremendous amount of data from GitHub by ingesting most of [these
    events](https://developer.github.com/v3/activity/events/types/) from the [GitHub
    REST API](https://developer.github.com/v3/). These events are sent from GitHub
    to GH-Archive in JSON format, referred to as a [payload](https://developer.github.com/v3/activity/events/types/).
    Below is an example of a payload that is received when an issue is edited:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: GH-Archive 通过从 [这些事件](https://developer.github.com/v3/activity/events/types/)
    中摄取大部分数据，记录了 GitHub 上大量的数据，这些事件来自 [GitHub REST API](https://developer.github.com/v3/)。这些事件以
    JSON 格式从 GitHub 发送到 GH-Archive，称为 [负载](https://developer.github.com/v3/activity/events/types/)。下面是编辑问题时收到的负载示例：
- en: '![Figure](../Images/5fc8c49f45fd2380001639d8f81fd43b.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/5fc8c49f45fd2380001639d8f81fd43b.png)'
- en: A truncated version of [this example](https://developer.github.com/v3/activity/events/types/#webhook-payload-example-14).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[这个示例](https://developer.github.com/v3/activity/events/types/#webhook-payload-example-14)的一个截断版本。'
- en: As you can imagine, there is a large number of payloads given the number of
    event types and users on GitHub. Thankfully, [this data is stored in BigQuery](http://www.gharchive.org/#bigquery)which
    allows for fast retrieval through a SQL interface! It is very economical to acquire
    this data, as Google gives you $300 when you first sign up for an account, and
    if you already have one, the costs are very reasonable.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所想，由于 GitHub 上的事件类型和用户数量庞大，负载的数量也很大。幸运的是，[这些数据存储在 BigQuery](http://www.gharchive.org/#bigquery)中，允许通过
    SQL 接口快速检索！获取这些数据的成本非常经济，因为 Google 在你首次注册账户时会给你 $300，如果你已经有账户，成本也很合理。
- en: 'Since the data is in a JSON format, the syntax for un-nesting this data may
    be a bit unfamiliar. We can use the *JSON_EXTRACT* function to get the data we
    need. Below is a toy example of how you might extract data from issue payloads:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 由于数据是以 JSON 格式存在的，解析这些数据的语法可能有些不熟悉。我们可以使用*JSON_EXTRACT*函数来获取我们需要的数据。下面是一个从 issue
    负载中提取数据的简单示例：
- en: '![Figure](../Images/5261c65e969a696028ccd91c7a671061.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/5261c65e969a696028ccd91c7a671061.png)'
- en: Example query syntax you might use for GH-Archive data stored on BigQuery. Pay
    close attention to the syntax used.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会用到的用于 BigQuery 中 GH-Archive 数据的示例查询语法。请特别注意所使用的语法。
- en: A step-by-step explanation on how to extract GitHub issues from BigQuery can
    be found in the [appendix section of this article](https://towardsdatascience.com/how-to-create-data-products-that-are-magical-using-sequence-to-sequence-models-703f86a231f8),
    however, it is important to note that more than issue data is available — you
    can retrieve data for [almost anything](https://developer.github.com/v3/activity/events/types/#event-types--payloads) that
    happens on GitHub! You can even retrieve large corpus of [code from public repos
    in BigQuery](https://github.com/hamelsmu/code_search/blob/master/notebooks/1%20-%20Preprocess%20Data.ipynb).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 关于如何从 BigQuery 中提取 GitHub issues 的逐步解释可以在[本文的附录部分](https://towardsdatascience.com/how-to-create-data-products-that-are-magical-using-sequence-to-sequence-models-703f86a231f8)找到。然而，需要注意的是，除了
    issue 数据之外，还可以获取[几乎所有](https://developer.github.com/v3/activity/events/types/#event-types--payloads)在
    GitHub 上发生的数据！你甚至可以从 BigQuery 中检索大量的[公共仓库代码](https://github.com/hamelsmu/code_search/blob/master/notebooks/1%20-%20Preprocess%20Data.ipynb)。
- en: '**The platform**: [**GitHub Apps**](https://developer.github.com/apps/)** &
    The **[**GitHub Marketplace**](https://developer.github.com/marketplace/)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**平台**: [**GitHub 应用**](https://developer.github.com/apps/)** 和 **[**GitHub
    市场**](https://developer.github.com/marketplace/)**'
- en: The GitHub platform allows you to build apps that can perform many actions,
    such as [interacting with issues](https://developer.github.com/v3/issues/), [creating
    repositories](https://developer.github.com/v3/repos/) or [fixing code in pull
    requests](https://fixmie.com/). Since all that is required from your app is to
    receive [payloads](https://developer.github.com/v3/activity/events/types/) from
    GitHub and make calls to [the REST API](https://developer.github.com/v3/), you
    can write the app in any language of your choice, including python.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 平台允许你构建可以执行多种操作的应用程序，例如[与 issues 交互](https://developer.github.com/v3/issues/)，[创建仓库](https://developer.github.com/v3/repos/)或[在
    pull requests 中修复代码](https://fixmie.com/)。由于你的应用程序只需接收来自 GitHub 的[payloads](https://developer.github.com/v3/activity/events/types/)并调用[REST
    API](https://developer.github.com/v3/)，你可以使用任何你选择的语言来编写应用程序，包括 Python。
- en: Most importantly, the [GitHub marketplace](https://github.com/marketplace) gives
    you a way to [list your app](https://developer.github.com/marketplace/#apps) on
    a searchable platform and charge users a monthly subscription. This is a great
    way to monetize your ideas. You can even host [unverified free apps](https://developer.github.com/marketplace/#unverified-apps) as
    a way to collect feedback and iterate.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的是，[GitHub 市场](https://github.com/marketplace)为你提供了一种[在可搜索平台上列出你的应用](https://developer.github.com/marketplace/#apps)并向用户收取月费的方式。这是一个将你的创意货币化的好方法。你甚至可以托管[未经验证的免费应用](https://developer.github.com/marketplace/#unverified-apps)以收集反馈并进行迭代。
- en: Surprisingly, there are not many GitHub apps that use machine learning, despite
    the availability of these public datasets! Raising awareness of this is one of
    the motivations for this blog post.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 令人惊讶的是，尽管有这些公共数据集，但使用机器学习的 GitHub 应用并不多！提高对此的认识是本文的动机之一。
- en: 'An End-to-End Example: Automatically Label GitHub Issues With Machine Learning'
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一个端到端的示例：使用机器学习自动标记 GitHub Issues
- en: '![Figure](../Images/99cc6272c451a4752bd5b6b33af6c8ef.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/99cc6272c451a4752bd5b6b33af6c8ef.png)'
- en: Automatically labeling issues can help with organizing and finding information.
    Photo by [Susan Yin](https://unsplash.com/@syinq?utm_source=medium&utm_medium=referral)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 自动标记问题可以帮助组织和查找信息。照片由[Susan Yin](https://unsplash.com/@syinq?utm_source=medium&utm_medium=referral)提供
- en: In order to show you how to create your own apps, we will walk you through the
    process of creating a GitHub app that can automatically label issues. Note that
    all of the code for this app, including the model training steps are located in [this
    GitHub repository](https://github.com/hamelsmu/MLapp).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示如何创建你自己的应用，我们将带你完成创建一个可以自动标记问题的 GitHub 应用的过程。请注意，该应用的所有代码，包括模型训练步骤，都位于[这个
    GitHub 仓库](https://github.com/hamelsmu/MLapp)。
- en: '**Step 1: Register your app & complete pre-requisites.**'
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**步骤 1：注册你的应用并完成前置要求。**'
- en: First, you will need to set up your development environment. Complete steps
    1–4 of [this article](https://developer.github.com/apps/quickstart-guides/setting-up-your-development-environment/).
    You do not need to read the section on “The Ruby Programming Language”, or any
    steps beyond step 4\. Make sure you set up a Webhook secret even though that part
    is optional.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要设置你的开发环境。完成[这篇文章](https://developer.github.com/apps/quickstart-guides/setting-up-your-development-environment/)中的第
    1-4 步。你不需要阅读关于“Ruby 编程语言”的部分或超出第 4 步的内容。即使那部分是可选的，也要确保你设置了 Webhook 密钥。
- en: Note that there is a [difference between GitHub apps and Oauth apps](https://developer.github.com/apps/differences-between-apps/).
    For the purposes of this tutorial, we are interested in GitHub apps. You don’t
    need to worry about this too much, but the distinction is good to know in case
    you are going through the documentation.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，[GitHub 应用与 OAuth 应用之间的区别](https://developer.github.com/apps/differences-between-apps/)。对于本教程，我们关注的是
    GitHub 应用。你不需要过于担心这个问题，但了解这些区别是有帮助的，以防你在查阅文档时需要用到。
- en: '**Step 2: Get comfortable interacting with the GitHub API with python.**'
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**步骤 2：熟悉使用 Python 与 GitHub API 进行交互。**'
- en: Your app will need to interact with the GitHub API in order to perform actions
    on GitHub. It is useful to use a pre-built client in the programming language
    of your choice in order to make life easier. While the [official docs ](https://developer.github.com/apps/quickstart-guides/using-the-github-api-in-your-app/)on
    GitHub show you how to use a Ruby client, there are [third-party clients](https://developer.github.com/v3/libraries/) for
    many other languages, including Python. For the purposes of this tutorial, we
    will be using the [Github3.py library](https://github3.readthedocs.io/en/master/).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你的应用需要与 GitHub API 进行交互，以便在 GitHub 上执行操作。使用你选择的编程语言中的预构建客户端可以使工作更轻松。虽然[官方文档](https://developer.github.com/apps/quickstart-guides/using-the-github-api-in-your-app/)中展示了如何使用
    Ruby 客户端，但还有[第三方客户端](https://developer.github.com/v3/libraries/)支持许多其他语言，包括 Python。对于本教程，我们将使用[Github3.py
    库](https://github3.readthedocs.io/en/master/)。
- en: One of the most confusing aspects of interfacing with the GitHub API as an app
    is authentication. For the following instructions, use the curl commands, not
    the ruby examples in the documentation.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 与 GitHub API 作为应用进行接口交互的最混乱的方面之一是认证。在接下来的说明中，使用 curl 命令，而不是文档中的 Ruby 示例。
- en: First, you must [authenticate as an app](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) by
    signing a JSON Web Token (JWT). Once you have signed a JWT, you may use it to [authenticate
    as an app installation](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation).
    Upon authenticating as an app installation, you will receive an installation access
    token which you can use to interact with the REST API.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你必须通过签署一个 JSON Web Token (JWT)来[以应用身份进行认证](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)。一旦你签署了
    JWT，你可以用它来[以应用安装身份进行认证](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation)。在以应用安装身份认证后，你将收到一个安装访问令牌，你可以用它来与
    REST API 交互。
- en: Note that the authenticating as an app is done via a GET request, whereas authenticating
    as an app installation is done via a PUT request. Even though this is illustrated
    in the example CURL commands, it is a detail that we missed when getting started.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，以应用身份认证是通过 GET 请求完成的，而以应用安装身份认证是通过 PUT 请求完成的。尽管在示例 CURL 命令中说明了这一点，但这是我们在开始时遗漏的一个细节。
- en: Knowing the above authentication steps are useful even though you will be using
    the [Github3.py library](https://github3.readthedocs.io/en/master/), as there
    may be routes that are not supported that you may want to implement yourself using
    the [requests](http://docs.python-requests.org/en/master/) library. This was the
    case for us, so we ended up writing a thin wrapper around the Github3.py library
    called [**mlapp**](https://github.com/hamelsmu/MLapp/blob/master/flask_app/mlapp.py) to
    help us interact with issues, which is [defined here](https://github.com/hamelsmu/MLapp/blob/master/flask_app/mlapp.py).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管你将使用[Github3.py library](https://github3.readthedocs.io/en/master/)，但了解上述认证步骤仍然很有用，因为可能存在一些不受支持的路线，你可能希望使用[requests](http://docs.python-requests.org/en/master/)库自行实现。这就是我们的情况，所以我们最终编写了一个名为[**mlapp**](https://github.com/hamelsmu/MLapp/blob/master/flask_app/mlapp.py)的轻量级包装器，帮助我们与问题进行交互，该包装器的定义见[此处](https://github.com/hamelsmu/MLapp/blob/master/flask_app/mlapp.py)。
- en: Below is code that can be used to create an issue, make a comment, and apply
    a label. This code is also available in [this notebook](https://github.com/hamelsmu/MLapp/blob/master/notebooks/GitHub-api-example.ipynb).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是可以用来创建问题、发表评论和应用标签的代码。这段代码也可以在[这个笔记本](https://github.com/hamelsmu/MLapp/blob/master/notebooks/GitHub-api-example.ipynb)中找到。
- en: '![Figure](../Images/721ccf5149fd3ccda1f517bbdf206932.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/721ccf5149fd3ccda1f517bbdf206932.png)'
- en: The above code created [this issue on GitHub](https://github.com/hamelsmu/simple_flask_app/issues/1).
    This code is also available [in this notebook](https://github.com/hamelsmu/MLapp/blob/master/notebooks/GitHub-api-example.ipynb).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码创建了[这个 GitHub 问题](https://github.com/hamelsmu/simple_flask_app/issues/1)。这段代码也可以在[这个笔记本](https://github.com/hamelsmu/MLapp/blob/master/notebooks/GitHub-api-example.ipynb)中找到。
- en: You can see the issue created by this code [here](https://github.com/hamelsmu/simple_flask_app/issues/1).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[这里](https://github.com/hamelsmu/simple_flask_app/issues/1)查看由此代码创建的问题。
- en: 'Step 3: Acquire and prepare the data.'
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第3步：获取和准备数据。
- en: 'As mentioned previously, we can use [GH-Archive](https://www.gharchive.org/) hosted
    on [BigQuery](https://www.gharchive.org/#bigquery) to retrieve examples of issues.
    Additionally, we can also retrieve the labels that people manually apply for each
    issue. Below is the query we used to build a Pareto chart of all of these labels:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们可以使用[GH-Archive](https://www.gharchive.org/)托管在[BigQuery](https://www.gharchive.org/#bigquery)上的服务来检索问题示例。此外，我们还可以检索人们为每个问题手动应用的标签。以下是我们用来构建这些标签的帕累托图的查询：
- en: '![Figure](../Images/478edb5e20b05f3e38360d8349aae5b1.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/478edb5e20b05f3e38360d8349aae5b1.png)'
- en: '[Link](https://console.cloud.google.com/bigquery?sq=123474043329:b424d2bbd79844999b970a0bc8498efa) to
    this query. Data produced by this query is available in [this spreadsheet](https://docs.google.com/spreadsheets/d/1NPacnVsyZMBneeewvPGhCx512A1RPYf8ktDN_RpKeS4/edit?usp=sharing).![Figure](../Images/ae2363d37f5b076c23a8a29f5e174466.png)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[链接](https://console.cloud.google.com/bigquery?sq=123474043329:b424d2bbd79844999b970a0bc8498efa)到这个查询。该查询生成的数据可在[此电子表格](https://docs.google.com/spreadsheets/d/1NPacnVsyZMBneeewvPGhCx512A1RPYf8ktDN_RpKeS4/edit?usp=sharing)中获得。![图示](../Images/ae2363d37f5b076c23a8a29f5e174466.png)'
- en: Top issue labels from the public dataset. There is an extremely long tail (not
    shown here).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 来自公共数据集的主要问题标签。这里展示的只是极长尾部的一部分（未显示）。
- en: '[This spreadsheet](https://docs.google.com/spreadsheets/d/1NPacnVsyZMBneeewvPGhCx512A1RPYf8ktDN_RpKeS4/edit?usp=sharing) contains
    the data for the entire Pareto chart. There is a long tail of issue labels which
    are not mutually exclusive. For example, the *enhancement* and *feature* labels
    could be grouped together. Furthermore, the quality and meaning of labels may
    vary greatly by project. Despite these hurdles, we decided to simplify the problem
    and group as many labels as possible into three categories: *feature request*, *bug*,
    and *question *using heuristics we constructed after manually looking at the top
    ~ 200 labels. Additionally, we consulted with the maintainers of a large open
    source project, [Kubeflow](https://github.com/kubeflow), as our first customer
    to validate our intuitions.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[此电子表格](https://docs.google.com/spreadsheets/d/1NPacnVsyZMBneeewvPGhCx512A1RPYf8ktDN_RpKeS4/edit?usp=sharing)包含整个帕累托图的数据。存在一个长尾的问题标签，这些标签并非互斥。例如，*enhancement*和*feature*标签可以组合在一起。此外，标签的质量和含义可能因项目而异。尽管存在这些障碍，我们决定简化问题，并使用我们在手动查看前~200个标签后构建的启发式方法将尽可能多的标签归类为三个类别：*feature
    request*、*bug*和*question*。此外，我们还咨询了一个大型开源项目[Kubeflow](https://github.com/kubeflow)的维护者，作为我们的第一个客户来验证我们的直觉。'
- en: We experimented with creating a fourth category called *other *in order to have
    negative samples of items not in the first three categories, however, we discovered
    that the information was noisy as there were many bugs, feature requests, and
    questionsin this “other” category*. *Therefore, we limited the training set to
    issues that we could categorize as either a *feature request, bug *or* question *exclusively*.*
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们尝试创建一个名为*other*的第四类，以便有负样本，包含不在前三类中的项目。然而，我们发现这些“其他”类别的信息很混乱，因为其中有许多错误、功能请求和问题。因此，我们将训练集限制为我们可以归类为*功能请求*、*错误*或*问题*的问题。
- en: It should be noted that this arrangement of the training data is far from ideal,
    as we want our training data to resemble the distribution of real issues as closely
    as possible. However, our goal was to construct a minimal viable product with
    the least time and expense possible and iterate later, so we moved forward with
    this approach.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，这种训练数据的安排远非理想，因为我们希望训练数据尽可能地接近真实问题的分布。然而，我们的目标是构建一个最小可行产品，以最少的时间和费用进行迭代，因此我们采用了这种方法。
- en: 'Finally, we took special care to de-duplicate issues. To be conservative, we
    resolved the following types of duplicates (by arbitrarily choosing one issue
    in the duplicate set):'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们特别注意了去重问题。为了保守起见，我们解决了以下类型的重复（通过任意选择重复集合中的一个问题）：
- en: Issues with the same title in the same repo.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在同一仓库中具有相同标题的问题。
- en: Issues that have the same content in their body, regardless of the title. Removed
    further duplicates by only considering the first 75% of characters and alternatively
    last 75% of characters in an issue body.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 内容相同的问题，不论标题如何。通过仅考虑问题正文中前 75% 和后 75% 的字符来进一步去重。
- en: The SQL query used to categorize issues and deduplicate issues can be [viewed
    with this link](https://console.cloud.google.com/bigquery?sq=123474043329:01abf8866144486f932c756730ddaff1).
    You don’t have to run this query, as our friends from the [Kubeflow](https://www.kubeflow.org/) project
    have run this query and are hosting the resulting data as CSV files on Google
    Cloud Bucket, which you can retrieve by following the code [in this notebook](https://github.com/hamelsmu/MLapp/blob/master/notebooks/Issue_Labeling_Model.ipynb).
    An exploration of the raw data as well as a description of all the fields in the
    dataset is also located [in the notebook](https://github.com/hamelsmu/MLapp/blob/master/notebooks/Issue_Labeling_Model.ipynb).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 用于对问题进行分类和去重的 SQL 查询可以通过[这个链接](https://console.cloud.google.com/bigquery?sq=123474043329:01abf8866144486f932c756730ddaff1)查看。你无需运行这个查询，因为来自[Kubeflow](https://www.kubeflow.org/)项目的朋友们已经运行了这个查询，并将生成的数据作为
    CSV 文件托管在 Google Cloud Bucket 上，你可以通过遵循[这个笔记本中的代码](https://github.com/hamelsmu/MLapp/blob/master/notebooks/Issue_Labeling_Model.ipynb)来获取数据。对原始数据的探索以及数据集中所有字段的描述也位于[这个笔记本中](https://github.com/hamelsmu/MLapp/blob/master/notebooks/Issue_Labeling_Model.ipynb)。
- en: 'Step 4: Build & train the model.'
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第 4 步：构建和训练模型。
- en: Now that we have the data, the next step is to build and train the model. For
    this problem, we decided to borrow a text pre-processing pipeline that [we built
    for a similar problem](https://towardsdatascience.com/how-to-create-data-products-that-are-magical-using-sequence-to-sequence-models-703f86a231f8) and
    apply it here. This pre-processing pipeline cleans the raw text, tokenizes the
    data, builds a vocabulary, and pads the sequences of text to equal length, which
    are steps that are outlined in the [“Prepare and Clean Data” section](https://towardsdatascience.com/how-to-create-data-products-that-are-magical-using-sequence-to-sequence-models-703f86a231f8) of
    our prior blog post. The code that accomplishes this task for issue labeling is
    outlined in [this notebook](https://github.com/hamelsmu/MLapp/blob/master/notebooks/Issue_Labeling_Model.ipynb).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了数据，下一步是构建和训练模型。对于这个问题，我们决定借用一个[我们为类似问题构建的文本预处理管道](https://towardsdatascience.com/how-to-create-data-products-that-are-magical-using-sequence-to-sequence-models-703f86a231f8)并应用于此。这个预处理管道清理原始文本，标记数据，构建词汇表，并将文本序列填充到相等长度，这些步骤在我们先前博客文章的[“准备和清理数据”部分](https://towardsdatascience.com/how-to-create-data-products-that-are-magical-using-sequence-to-sequence-models-703f86a231f8)中有详细说明。完成问题标记的代码在[这个笔记本](https://github.com/hamelsmu/MLapp/blob/master/notebooks/Issue_Labeling_Model.ipynb)中概述。
- en: 'Our model takes two inputs: the issue title and body and classifies each issue
    as either a *bug*, *feature request* or *question*. Below is our model’s architecture
    defined with [tensorflow.Keras](https://www.tensorflow.org/guide/keras):'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的模型接受两个输入：问题标题和正文，并将每个问题分类为*错误*、*功能请求*或*问题*。下面是我们使用 [tensorflow.Keras](https://www.tensorflow.org/guide/keras)定义的模型架构：
- en: '![Figure](../Images/3d87488fc066fe2f3a17321d8e0b7a9e.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/3d87488fc066fe2f3a17321d8e0b7a9e.png)'
- en: Code available in [this notebook](https://github.com/hamelsmu/MLapp/blob/master/notebooks/Issue_Labeling_Model.ipynb).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 代码可在 [这个笔记本](https://github.com/hamelsmu/MLapp/blob/master/notebooks/Issue_Labeling_Model.ipynb)中找到。
- en: 'A couple of notes about this model:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 关于这个模型的几点说明：
- en: You do not have to use deep learning to solve this problem. We just used an
    existing pipeline we built for another closely related problem in order to quickly
    bootstrap ourselves.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决这个问题并不一定要使用深度学习。我们只是利用了为另一个密切相关的问题构建的现有管道，以便快速启动。
- en: The model architecture is embarrassingly simple. Our goal was to keep things
    as simple as possible to demonstrate that you can build a real data product using
    a simple approach. We did not spend much time tuning or experimenting with different
    architectures.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型架构非常简单。我们的目标是保持尽可能简单，以展示你可以使用简单的方法构建一个真实的数据产品。我们没有花很多时间调整或尝试不同的架构。
- en: We anticipate that there is plenty of room for improvements on this model by
    using more state of the art architectures or improving the dataset. We provide
    several hints in the *next steps* section of this blog post.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们预计通过使用更先进的架构或改进数据集，这个模型还有很大的提升空间。我们在*下一步*部分提供了几个提示。
- en: '**Evaluating the model**'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**评估模型**'
- en: Below is a confusion matrix showing our model’s accuracy on a test set of the
    three categories. The model really struggles to categorize questions but does
    a fairly decent job at distinguishing bugs from features.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个混淆矩阵，展示了我们模型在三个类别的测试集上的准确度。模型在分类问题时确实很挣扎，但在区分错误和功能方面表现相当不错。
- en: '![](../Images/34a540567ba7e27423be5fe3ebf847c4.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/34a540567ba7e27423be5fe3ebf847c4.png)'
- en: Note that since our test set is not representative of all issues (as we filtered
    the dataset to only those that we could categorize), the accuracy metrics above
    should be taken with a grain of salt. We somewhat mitigate this problem by gathering
    explicit feedback from our users, which allows us to re-train our model and debug
    problems very fast. We discuss the explicit feedback mechanism in a later section.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，由于我们的测试集不能代表所有问题（因为我们将数据集过滤到只有我们可以分类的问题），因此上述准确度指标应该谨慎对待。我们通过从用户那里收集明确的反馈来在一定程度上缓解这个问题，这使我们能够非常快速地重新训练模型并调试问题。我们将在后面的部分讨论明确的反馈机制。
- en: '**Making predictions**'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**做出预测**'
- en: Below are model predictions on toy examples. The full code is available [in
    this notebook](https://github.com/hamelsmu/MLapp/blob/master/notebooks/Issue_Labeling_Model.ipynb).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对玩具示例的模型预测。完整的代码可以在 [这个笔记本](https://github.com/hamelsmu/MLapp/blob/master/notebooks/Issue_Labeling_Model.ipynb)中找到。
- en: '![Figure](../Images/7ca095f3364391f7ece45cc0df8161a9.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/7ca095f3364391f7ece45cc0df8161a9.png)'
- en: '[Link](https://github.com/hamelsmu/MLapp/blob/master/notebooks/Issue_Labeling_Model.ipynb) to
    the notebook.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[链接](https://github.com/hamelsmu/MLapp/blob/master/notebooks/Issue_Labeling_Model.ipynb)到笔记本。'
- en: We wanted to choose reasonable thresholds so the model is not spamming people
    with too many incorrect predictions (this means that our app may not offer any
    predictions in some cases). We selected thresholds by testing our system on several
    repos and consulting with several maintainers on an acceptable [false positive
    rate](https://en.wikipedia.org/wiki/False_positive_rate).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望选择合理的阈值，以便模型不会向用户发送过多错误的预测（这意味着在某些情况下，我们的应用可能不会提供任何预测）。我们通过在多个仓库上测试系统并咨询多个维护者来选择阈值，以确定一个可接受的[假阳性率](https://en.wikipedia.org/wiki/False_positive_rate)。
- en: 'Step 5: Use Flask to respond to payloads.'
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第五步：使用 Flask 对负载进行响应。
- en: 'Now that you have a model that can make predictions, and a way to programmatically
    add comments and labels to issues (step 2), all that is left is gluing the pieces
    together. You can accomplish this with the following steps:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你有了一个可以进行预测的模型，以及一种以编程方式向问题添加评论和标签的方法（第二步），剩下的就是将这些部分粘合在一起。你可以通过以下步骤完成：
- en: Start a web server that listens to payloads from GitHub.com (you specified the
    endpoint that GitHub will send payloads to when you registered your app in step
    1).
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动一个 web 服务器，监听来自 GitHub.com 的负载（你在第 1 步中注册应用时指定了 GitHub 将发送负载的端点）。
- en: Verify the payload is coming from GitHub (illustrated by the verify_webhook
    function in [this script](https://github.com/hamelsmu/MLapp/blob/master/flask_app/app.py)).
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证有效负载是否来自 GitHub（在[这个脚本](https://github.com/hamelsmu/MLapp/blob/master/flask_app/app.py)中由
    verify_webhook 函数演示）。
- en: Respond to the payload if desired by using the GitHub API (which you learned
    in step 2).
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果需要，可以使用 GitHub API（你在第 2 步中学习的）来响应有效负载。
- en: Log appropriate data and feedback you receive to a database to facilitate model
    retraining.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记录适当的数据和反馈到数据库，以便于模型重新训练。
- en: 'A great way to accomplish this is to use a framework like [Flask](http://flask.pocoo.org/) and
    database interface like [SQLAlchemy](http://flask-sqlalchemy.pocoo.org/2.3/).
    If you are already familiar with flask, below is a truncated version of the code
    that applies predicted issue labels when notified by GitHub that an issue has
    been opened:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 一种很好的实现方式是使用像[Flask](http://flask.pocoo.org/)这样的框架和像[SQLAlchemy](http://flask-sqlalchemy.pocoo.org/2.3/)这样的数据库接口。如果你已经熟悉
    Flask，以下是一个简化版本的代码，它在 GitHub 通知打开问题时应用预测标签：
- en: '![Figure](../Images/c00858b34325953a72aa8044c5f0a436.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/c00858b34325953a72aa8044c5f0a436.png)'
- en: This code is also available [here](https://github.com/hamelsmu/MLapp/blob/master/flask_app/app.py).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码也可以在[这里](https://github.com/hamelsmu/MLapp/blob/master/flask_app/app.py)找到。
- en: Don’t worry if you are not familiar with Flask or SQLAchemy. You can learn everything
    you need to know about this subject from this wonderful [MOOC on Flask, HTML,
    CSS and Javascript](https://www.edx.org/course/cs50s-web-programming-with-python-and-javascript).
    This course is a really great investment of time if you are a data scientist,
    as this will allow you to build interfaces for your data products in a lightweight
    way. We took this course and were impressed with it.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你对 Flask 或 SQLAlchemy 不熟悉也不用担心。你可以从这个精彩的[关于 Flask、HTML、CSS 和 JavaScript 的
    MOOC](https://www.edx.org/course/cs50s-web-programming-with-python-and-javascript)中学习你需要了解的所有内容。如果你是数据科学家，这门课程真的非常值得投资时间，因为它可以让你以轻量级的方式为你的数据产品构建界面。我们参加了这门课程，对其印象深刻。
- en: We leave it as an exercise for the reader to go through the rest of the [flask
    code in our GitHub repository](https://github.com/hamelsmu/MLapp).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将剩下的[flask 代码](https://github.com/hamelsmu/MLapp)作为练习留给读者。
- en: Collecting explicit user feedback.
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 收集明确的用户反馈。
- en: '![Figure](../Images/a87519003233f2368ebd3a7d0ec25318.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/a87519003233f2368ebd3a7d0ec25318.png)'
- en: This screenshot was taken from [this issue.](https://github.com/genuinetools/img/issues/224)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这张截图取自[这个问题](https://github.com/genuinetools/img/issues/224)。
- en: As illustrated above, explicit feedback is requested by asking users to react
    with ???? or ???? to a prediction. We can store these reactions in a database
    which allows us to re-train and debug our models. This is is perhaps one of the
    most exciting and important aspects of launching a data product as a GitHub App!
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所示，通过要求用户用 ???? 或 ???? 对预测做出反应来请求明确反馈。我们可以将这些反应存储在数据库中，从而重新训练和调试我们的模型。这也许是将数据产品作为
    GitHub 应用程序推出的最激动人心和重要的方面之一！
- en: 'You can see more examples of predictions and user feedback on [our app’s homepage](https://mlbot.net/).
    For example, this is the page for the kubeflow/kubeflow repo:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[我们应用的主页](https://mlbot.net/)上看到更多预测和用户反馈的示例。例如，这是 kubeflow/kubeflow 仓库的页面：
- en: '![Figure](../Images/576402916a42df15439e68dbd32003b7.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/576402916a42df15439e68dbd32003b7.png)'
- en: '[Link](https://mlbot.net/data/kubeflow/kubeflow) to this page.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[链接](https://mlbot.net/data/kubeflow/kubeflow) 到此页面。'
- en: Please install our app, it’s free!
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 请安装我们的应用程序，它是免费的！
- en: If you enjoy what you have read thus far and want to support this project, please
    install this app on your public repositories (this app will not make predictions
    on private repos even if installed there), and give our bot feedback when it makes
    predictions ???? ????.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢到目前为止阅读的内容并希望支持这个项目，请在你的公开仓库上安装这个应用（即使在私人仓库中安装，也不会进行预测），并在我们的机器人进行预测时提供反馈
    ???? ????。
- en: '[**Here is the link to install our app**](https://github.com/apps/issue-label-bot).'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '[**这里是安装我们应用的链接**](https://github.com/apps/issue-label-bot)。'
- en: 'Conclusion: Tips for building your own machine learning powered apps'
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论：构建自己的机器学习驱动应用的技巧
- en: Don’t be afraid to **use public datasets**. You can do a lot more than just
    label issues (see the resources section for ideas).
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要害怕**使用公开数据集**。你可以做的不仅仅是标注问题（请参阅资源部分以获取想法）。
- en: '**Don’t be afraid to iterate fast, even if the solution is not perfect**. Building
    a model is sometimes the smallest component of a project and getting user feedback
    is very valuable so you do not waste time.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不要害怕快速迭代，即使解决方案不完美**。构建模型有时是项目中最小的组件，获取用户反馈是非常宝贵的，这样你就不会浪费时间。'
- en: '**Try to consult with at least one real customer or user **and have them guide
    and validate decisions.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**尽量咨询至少一个真实的客户或用户**，并让他们指导和验证决策。'
- en: '**Take advantage of opportunities to gather explicit user feedback**. This
    will allow you to improve your solution and your models quickly.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**利用机会收集明确的用户反馈**。这将使你能够快速改进你的解决方案和模型。'
- en: Part II & Next Steps
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第二部分 & 下一步
- en: One aspect we did not cover is how to serve your app at scale. When you are
    just starting out, you probably do not need to worry about this and can serve
    this on a single server with your favorite cloud provider. You can also use a
    service [like Heroku](https://devcenter.heroku.com/articles/container-registry-and-runtime),
    which is covered in the course on Flask linked in the resources section below.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们没有涵盖的一个方面是如何在大规模下服务你的应用。当你刚开始时，可能不需要担心这个问题，可以在你喜欢的云提供商的单台服务器上进行服务。你还可以使用 [像
    Heroku](https://devcenter.heroku.com/articles/container-registry-and-runtime)
    这样的服务，这在下方资源部分链接的 Flask 课程中有介绍。
- en: 'In Part II, we will cover the following:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二部分中，我们将涵盖以下内容：
- en: How to deploy your Flask app on Kubernetees so it can scale to many users.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在 Kubernetees 上部署你的 Flask 应用，以便它可以扩展到许多用户。
- en: Using [Argo pipelines](https://argoproj.github.io/) to manage the model training
    and serving pipeline.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 [Argo pipelines](https://argoproj.github.io/) 来管理模型训练和服务流程。
- en: 'We believe there are many opportunities to improve upon the approach we illustrated
    in this post. Some ideas we have in mind are:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们相信有很多机会可以改进我们在这篇文章中展示的方法。我们有以下一些想法：
- en: Constructing better labels and negative samples of items that do not belong
    in the label set.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建更好的标签和不属于标签集的负样本。
- en: Using the tools from [fastai](https://docs.fast.ai/) to explore state of the
    art architectures, such as [Multi-Head Attention](https://docs.fast.ai/text.models.html#MultiHeadAttention).
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 [fastai](https://docs.fast.ai/) 的工具来探索最先进的架构，例如 [Multi-Head Attention](https://docs.fast.ai/text.models.html#MultiHeadAttention)。
- en: Pre-training on a large corpus and fine tuning that on GitHub issues to enable
    a user to predict repo-specific labels instead of a small global set of labels.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在大型语料库上进行预训练，然后在 GitHub 问题上进行微调，以使用户能够预测特定于仓库的标签，而不是一个小的全局标签集。
- en: Using additional data such as information about the repository or the user opening
    the issue, perhaps learning an embedding for these entities.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用额外的数据，例如有关仓库或打开问题的用户的信息，也许学习这些实体的嵌入。
- en: Allow users to customize the label thresholds and the names of labels, as well
    as choose which labels to predict.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许用户自定义标签阈值和标签名称，以及选择要预测的标签。
- en: Resources
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 资源
- en: Our app’s [website](https://mlbot.net/).
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们应用的 [网站](https://mlbot.net/)。
- en: The [installation page](https://github.com/apps/issue-label-bot) of our app.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们应用的 [安装页面](https://github.com/apps/issue-label-bot)。
- en: '[The GitHub repository](https://github.com/hamelsmu/MLapp) with all of this
    code.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GitHub 仓库](https://github.com/hamelsmu/MLapp) 中包含了所有这些代码。'
- en: 'Need inspiration for other data products you can build using machine learning
    and public GitHub datasets? See these examples: (1) [GitHub issue summarization](https://towardsdatascience.com/how-to-create-data-products-that-are-magical-using-sequence-to-sequence-models-703f86a231f8) and
    (2) Natural language [semantic code search](https://towardsdatascience.com/semantic-code-search-3cd6d244a39c).'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要灵感来构建其他数据产品，使用机器学习和公共 GitHub 数据集？看看这些示例：(1) [GitHub 问题摘要](https://towardsdatascience.com/how-to-create-data-products-that-are-magical-using-sequence-to-sequence-models-703f86a231f8)
    和 (2) 自然语言 [语义代码搜索](https://towardsdatascience.com/semantic-code-search-3cd6d244a39c)。
- en: '[This public data](https://archive.org/details/stackexchange) provided by stack
    exchange could be useful for transfer learning. A cool machine learning project
    that recently leveraged this data is [stackroboflow.com](https://stackroboflow.com/about/index.html).'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Stack exchange 提供的公共数据](https://archive.org/details/stackexchange) 可能对迁移学习有用。最近利用这些数据的一个酷炫的机器学习项目是
    [stackroboflow.com](https://stackroboflow.com/about/index.html)。'
- en: '[Machine Learning on Source Code](https://ml4code.github.io/), a survey of
    the literature on applications of applying machine learning to code, by [Miltos
    Allamanis](https://miltos.allamanis.com/).'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[源代码上的机器学习](https://ml4code.github.io/)，是对将机器学习应用于代码的文献综述，由 [Miltos Allamanis](https://miltos.allamanis.com/)
    编写。'
- en: Excellent course on flask: [HarvardX CS50 Web](https://www.edx.org/course/cs50s-web-programming-with-python-and-javascript).
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优秀的 Flask 课程： [HarvardX CS50 Web](https://www.edx.org/course/cs50s-web-programming-with-python-and-javascript)。
- en: MOOCs by [fastai](https://www.fast.ai/) for [machine learning](http://course18.fast.ai/ml) and [deep
    learning](http://course.fast.ai/).
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[fastai](https://www.fast.ai/) 提供的 [机器学习](http://course18.fast.ai/ml) 和 [深度学习](http://course.fast.ai/) MOOCs。'
- en: The code in our repo and associated tutorial(s) assume familiarity with Docker. [This
    blog post](https://towardsdatascience.com/how-docker-can-help-you-become-a-more-effective-data-scientist-7fc048ef91d5) offers
    a gentle introduction to Docker for data scientists.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们的代码库和相关教程假设用户对 Docker 有一定了解。 [这篇博客](https://towardsdatascience.com/how-docker-can-help-you-become-a-more-effective-data-scientist-7fc048ef91d5) 为数据科学家提供了
    Docker 的简明介绍。
- en: The [Kubeflow project](https://www.kubeflow.org/) contains resources that we
    will use in part 2 of this blog post. Furthermore, the content of this blog post
    will be the subject of [this upcoming talk](https://conferences.oreilly.com/artificial-intelligence/ai-ny/public/schedule/detail/73422) on
    April 17, 2019.
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Kubeflow 项目](https://www.kubeflow.org/) 包含我们将在本博客文章第二部分中使用的资源。此外，本文内容将成为 [即将到来的讲座](https://conferences.oreilly.com/artificial-intelligence/ai-ny/public/schedule/detail/73422) 的主题，讲座定于2019年4月17日。'
- en: Get In Touch!
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 联系我们！
- en: 'We hope you enjoyed this blog post. Please feel free to get in touch with us:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望你喜欢这篇博客。请随时与我们联系：
- en: '[Hamel Husain](https://twitter.com/HamelHusain)'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Hamel Husain](https://twitter.com/HamelHusain)'
- en: '[Michal Jastrzębski](https://twitter.com/_inc0_)'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Michal Jastrzębski](https://twitter.com/_inc0_)'
- en: '[Jeremy Lewi](https://twitter.com/jeremylewi)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Jeremy Lewi](https://twitter.com/jeremylewi)'
- en: Disclaimer
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 免责声明
- en: Any ideas or opinions presented in this article are our own. Any ideas or techniques
    presented do not necessarily foreshadow future products of any company. The purpose
    of this blog is for educational purposes only.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 本文中提出的任何想法或观点均为我们个人观点。本文中的任何想法或技术不一定预示着任何公司的未来产品。此博客仅用于教育目的。
- en: '[Original](https://towardsdatascience.com/mlapp-419f90e8f007?sk=760e18a2d6e60999d7eb2887352a92a8).
    Reposted with permission.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '[原始内容](https://towardsdatascience.com/mlapp-419f90e8f007?sk=760e18a2d6e60999d7eb2887352a92a8)。经许可转载。'
- en: '**Related:**'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Synthetic Data Generation: A must-have skill for new data scientists](/2018/12/synthetic-data-generation-must-have-skill.html)'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[合成数据生成：新数据科学家的必备技能](/2018/12/synthetic-data-generation-must-have-skill.html)'
- en: '[Trending Deep Learning Github Repositories](/2019/02/trending-top-deep-learning-github-repositories.html)'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[趋势深度学习 Github 仓库](/2019/02/trending-top-deep-learning-github-repositories.html)'
- en: '[Comparing MobileNet Models in TensorFlow](/2019/03/comparing-mobilenet-models-tensorflow.html)'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 TensorFlow 中比较 MobileNet 模型](/2019/03/comparing-mobilenet-models-tensorflow.html)'
- en: '* * *'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三推荐课程
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业的捷径'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你组织的 IT'
- en: '* * *'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Progress Bars in Python with tqdm for Fun and Profit](https://www.kdnuggets.com/2022/09/progress-bars-python-tqdm-fun-profit.html)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 中的进度条与 tqdm 的乐趣与利润](https://www.kdnuggets.com/2022/09/progress-bars-python-tqdm-fun-profit.html)'
- en: '[5 Tasks To Automate With Python](https://www.kdnuggets.com/2021/06/5-tasks-automate-python.html)'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 Python 自动化的 5 个任务](https://www.kdnuggets.com/2021/06/5-tasks-automate-python.html)'
- en: '[Short and Fun Courses to Get You Up to Speed About Generative AI](https://www.kdnuggets.com/short-and-fun-courses-to-get-you-up-to-speed-about-generative-ai)'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[让你快速了解生成 AI 的短小有趣课程](https://www.kdnuggets.com/short-and-fun-courses-to-get-you-up-to-speed-about-generative-ai)'
- en: '[Beginner Friendly Python Projects That Are Fun!](https://www.kdnuggets.com/2022/10/beginner-friendly-python-projects-fun.html)'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[适合初学者的有趣 Python 项目！](https://www.kdnuggets.com/2022/10/beginner-friendly-python-projects-fun.html)'
- en: '[Automate Microsoft Excel and Word Using Python](https://www.kdnuggets.com/2021/08/automate-microsoft-excel-word-python.html)'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 自动化 Microsoft Excel 和 Word](https://www.kdnuggets.com/2021/08/automate-microsoft-excel-word-python.html)'
- en: '[Automate the Boring Stuff with GPT-4 and Python](https://www.kdnuggets.com/2023/03/automate-boring-stuff-chatgpt-python.html)'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 GPT-4 和 Python 自动化无聊的任务](https://www.kdnuggets.com/2023/03/automate-boring-stuff-chatgpt-python.html)'
