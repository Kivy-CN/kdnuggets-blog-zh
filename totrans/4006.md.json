["```py\nimport logging\n\n# Create a logger\nlogger = logging.getLogger(__name__)\n\n# Set logger level to DEBUG\nlogger.setLevel(logging.DEBUG)\n```", "```py\nformatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')\n```", "```py\nconsole_handler = logging.StreamHandler()\nconsole_handler.setLevel(logging.INFO)\nconsole_handler.setFormatter(formatter)\n\nfile_handler = logging.FileHandler('app.log')\nfile_handler.setLevel(logging.DEBUG)\nfile_handler.setFormatter(formatter)\n```", "```py\nlogger.addHandler(console_handler)\nlogger.addHandler(file_handler)\n```", "```py\nlogger.debug('This is a debug message')\nlogger.info('This is an info message')\nlogger.warning('This is a warning message')\nlogger.error('This is an error message')\nlogger.critical('This is a critical message')\n```", "```py\n2024-05-18 11:51:44,187 - INFO - This is an info message\n2024-05-18 11:51:44,187 - WARNING - This is a warning message\n2024-05-18 11:51:44,187 - ERROR - This is an error message\n2024-05-18 11:51:44,187 - CRITICAL - This is a critical message\n```", "```py\n2024-05-18 11:51:44,187 - DEBUG - This is a debug message\n2024-05-18 11:51:44,187 - INFO - This is an info message\n2024-05-18 11:51:44,187 - WARNING - This is a warning message\n2024-05-18 11:51:44,187 - ERROR - This is an error message\n2024-05-18 11:51:44,187 - CRITICAL - This is a critical message\n```", "```py\npython -m venv myenv\n\n# For Mac\nsource myenv/bin/activate\n\n#Install flask\npip install flask\n```", "```py\n#Making Imports\nfrom flask import Flask, request\nimport logging\nimport os\n\n# Initialize the Flask app\napp = Flask(__name__)\n\n# Configure logging\nif not os.path.exists('logs'):\n    os.makedirs('logs')\nlog_file = 'logs/app.log'\nlogging.basicConfig(filename=log_file, level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')\nlog = logging.getLogger(__name__)\n\n# Define route and handler\n@app.route('/login', methods=['POST'])\ndef login():\n    log.info('Received login request')\n    username = request.form['username']\n    password = request.form['password']\n    if username == 'admin' and password == 'password':\n        log.info('Login successful')\n        return 'Welcome, admin!'\n    else:\n        log.error('Invalid credentials')\n        return 'Invalid username or password', 401\n\nif __name__ == '__main__':\n    app.run(debug=True)\n```", "```py\n curl -X POST -d \"username=admin&password=password\" http://localhost:5000/login\n```", "```py\nWelcome, admin!\n```", "```py\ncurl -X POST -d \"username=admin&password=wrongpassword\" http://localhost:5000/login\n```", "```py\nInvalid username or password\n```", "```py\n2024-05-18 12:36:56,845 - INFO - Received login request\n2024-05-18 12:36:56,846 - INFO - Login successful\n2024-05-18 12:36:56,847 - INFO - 127.0.0.1 - - [18/May/2024 12:36:56] \"POST /login HTTP/1.1\" 200 -\n2024-05-18 12:37:00,960 - INFO - Received login request\n2024-05-18 12:37:00,960 - ERROR - Invalid credentials\n2024-05-18 12:37:00,960 - INFO - 127.0.0.1 - - [18/May/2024 12:37:00] \"POST /login HTTP/1.1\" 200 -\n```"]