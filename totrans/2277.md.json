["```py\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport h2o\nfrom h2o.automl import H2OAutoML\n```", "```py\n# Initialize H2O\nh2o.init()\n\n# Load the dataset\ndata = pd.read_csv(\"heart_disease.csv\")\n\n# Convert the Pandas data frame to H2OFrame\nhf = h2o.H2OFrame(data)\n```", "```py\n# Split the data into training and testing sets\ntrain, test, valid = hf.split_frame(ratios=[0.7, 0.15])\n\n# Specify the target variable and the type of problem\ny = \"target\"\nproblem_type = \"binary\"\n```", "```py\n# Run AutoML\naml = H2OAutoML(max_models=10, seed=1, balance_classes=True)\naml.train(y=y, training_frame=train, validation_frame=valid)\n\n# View the leaderboard\nlb = aml.leaderboard\nprint(lb)\n\n# Get the best model\nbest_model = aml.leader\n```", "```py\n# Make predictions on the test data\npreds = best_model.predict(test)\n\n# Convert the predictions to a Pandas dataframe\npreds_df = preds.as_data_frame()\n\n# Evaluate the model using accuracy, precision, recall, and F1-score\naccuracy = best_model.accuracy(test)\nprecision = best_model.precision(test)\nrecall = best_model.recall(test)\nf1 = best_model.f1(test)\n\nprint(\"Accuracy:\", accuracy)\nprint(\"Precision:\", precision)\nprint(\"Recall:\", recall)\nprint(\"F1-score:\", f1)\n```", "```py\n# Plot the ROC curve\nroc = best_model.roc()\nroc.plot()\nplt.show()\n\n# Plot the confusion matrix\ncm = best_model.confusion_matrix()\ncm.plot()\nplt.show()\n\n# Shutdown H2O\nh2o.shutdown()\n```"]