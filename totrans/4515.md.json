["```py\n# OAuth 2.0 Client ID \n# You will have to use your own as the one below is fake\n12A1BC# Client Secret\n# You will have to use your own as the one below is fake\n12345678901234567890123456789012\n```", "```py\n#reasoning for it here: \n#[https://stackoverflow.com/questions/1471994/what-is-setup-py](https://stackoverflow.com/questions/1471994/what-is-setup-py)\n# If you want to install it a different way, feel free to do so. python setup.py install\n```", "```py\n# This is a python file you need to have in the same directory as your code so you can import it\nimport gather_keys_oauth2 as Oauth2import fitbit\nimport pandas as pd \nimport datetime# You will need to put in your own CLIENT_ID and CLIENT_SECRET as the ones below are fake\nCLIENT_ID='12A1BC'\nCLIENT_SECRET='12345678901234567890123456789012'\n```", "```py\nserver=Oauth2.OAuth2Server(CLIENT_ID, CLIENT_SECRET)\nserver.browser_authorize()\nACCESS_TOKEN=str(server.fitbit.client.session.token['access_token'])\nREFRESH_TOKEN=str(server.fitbit.client.session.token['refresh_token'])\nauth2_client=fitbit.Fitbit(CLIENT_ID,CLIENT_SECRET,oauth2=True,access_token=ACCESS_TOKEN,refresh_token=REFRESH_TOKEN)\n```", "```py\n# This is the date of data that I want. \n# You will need to modify for the date you want\noneDate = pd.datetime(year = 2019, month = 10, day = 21)oneDayData = auth2_client.intraday_time_series('activities/heart', oneDate, detail_level='1sec')\n```", "```py\n# The first part gets a date in a string format of YYYY-MM-DD\nfilename = oneDayData['activities-heart'][0]['dateTime'] +'_intradata'# Export file to csv\ndf.to_csv(filename + '.csv', index = False)\ndf.to_excel(filename + '.xlsx', index = False)\n```", "```py\nfilename = 'all_intradata'\nfinal_df.to_csv(filename + '.csv', index = False)\n```", "```py\n# I want to get the hour of the day and time. The end goal of this section is to get a particular time on a particular day. \nhoursDelta = pd.to_datetime(final_df.loc[:, 'time']).dt.hour.apply(lambda x: datetime.timedelta(hours = x))minutesDelta = pd.to_datetime(final_df.loc[:, 'time']).dt.minutes.apply(lambda x: datetime.timedelta(minutes = x))secondsDelta = pd.to_datetime(final_df.loc[:, 'time']).dt.seconds.apply(lambda x: datetime.timedelta(seconds = x))# Getting the date to also have the time of the day\nfinal_df['date'] = final_df['date'] + hoursDelta + minutesDelta + secondsDelta\n```", "```py\nstartDate = pd.datetime(year = 2019, month = 12, day = 24)\nlastDate = pd.datetime(year = 2019, month = 12, day = 27)coupledays_df = final_df.loc[final_df.loc[:, 'date'].between(startDate, lastDate), :]\n```", "```py\nfig, ax = plt.subplots(figsize=(10, 7))# Taken from: [https://stackoverflow.com/questions/16266019/python-pandas-group-datetime-column-into-hour-and-minute-aggregations](https://stackoverflow.com/questions/16266019/python-pandas-group-datetime-column-into-hour-and-minute-aggregations)\ntimes = pd.to_datetime(coupledays_df['date'])\ncoupledays_df.groupby([times.dt.date,times.dt.hour]).value.mean().plot(ax = ax)ax.grid(True,\n    axis = 'both',\n    zorder = 0,\n    linestyle = ':',\n    color = 'k')\nax.tick_params(axis = 'both', rotation = 45, labelsize = 20)\nax.set_xlabel('Date, Hour', fontsize = 24)\nfig.tight_layout()\nfig.savefig('coupledaysavergedByMin.png', format = 'png', dpi = 300)\n```", "```py\n# startTime is first date of data that I want. \n# You will need to modify for the date you want your data to start\nstartTime = pd.datetime(year = 2019, month = 11, day = 21)\nendTime = pd.datetime.today().date() - datetime.timedelta(days=1)date_list = []\nresting_list = []allDates = pd.date_range(start=startTime, end = endTime)for oneDate in allDates:\n\n    oneDate = oneDate.date().strftime(\"%Y-%m-%d\")\n\n    oneDayData = auth2_client.intraday_time_series('activities/heart', base_date=oneDate, detail_level='1sec')\n\n    date_list.append(oneDate)\n\n    resting_list.append(oneDayData['activities-heart'][0]['value']['restingHeartRate'])# there is more matplotlib code on GitHub\nfig, ax = plt.subplots(figsize=(10, 7))ax.plot(date_list, resting_list)\n```", "```py\npip install CherryPy\n```"]