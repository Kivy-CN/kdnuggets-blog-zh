- en: 7 Steps to Mastering Deep Learning with Keras
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2017/10/seven-steps-deep-learning-keras.html](https://www.kdnuggets.com/2017/10/seven-steps-deep-learning-keras.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/f1165172bd8032b6f95708226c89cc9c.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
- en: There is no shortage of neural network frameworks, libraries, and APIs available
    to anyone interested in getting started with deep learning. So... **Why Keras?**
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: 'Keras is a high-level neural network API, helping lead the way to the commoditization
    of deep learning and artificial intelligence. It runs on top of a number of lower-level
    libraries, used as backends, including TensorFlow, Theano, CNTK, and [PlaidML](http://vertex.ai/blog/announcing-plaidml).
    Keras code is portable, meaning that you can implement a neural network in Keras
    using Theano as a backened and then specify the backend to subsequently run on
    TensorFlow, and no further changes would be required to your code. Data Scientist
    & Machine Learning Expert [Charles Martin](https://www.linkedin.com/in/charlesmartin14/)
    sums up [with this quote](https://www.linkedin.com/feed/update/urn:li:activity:6248837318694760448/)
    (in a response to the post):'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: We have had access to these algorithms for over 10 years. Not readily accessible,
    but accessible enough to a good hacker. To me, the most important advances have
    come with Google Keras, which has commoditized very powerful, modern, AI algos
    that previous were not only inaccessible bit [sic] thought to be unusable as well.
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Keras is an easy to use neural network library that promotes a simple and intuitive
    syntax. It is also geared toward neural network technology **consumers** as opposed
    to producers, at least to some degree. The line between these 2 groups is not
    exactly well-defined; what, exactly, constitutes the design and implementation
    of a machine learning algorithm versus modifying an already-prepared one? This
    is chicken versus egg stuff, and not really an appropriate discussion topic for
    here. However, I will make the assertion that, perhaps more than any other established,
    mainstream neural network library, Keras is ideally suited to the **practice of
    data science**. In fact, I would say that Keras is an essential tool in the toolbox
    of any data scientist working with neural networks.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: This tutorial is designed to get you up to speed with Keras as quickly as possible,
    allowing you to hit the ground running, not a particularly difficult task if you
    already have familiarity with neural networks. To that end, an understanding of
    neural networks is preferable -- though a very brief intro will be presented in
    the first step -- as is some experience with other machine learning frameworks.
    Beyond that, no experience specifically with Keras is required.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '[Step 1: Neural Networks Basics](https://www.kdnuggets.com/2017/10/neural-networks-step-1.html)'
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This post collects a number of neural network "getting started" resources.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 2: Keras Basics'
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: First, what exactly is Keras? Why not find out directly from the project's website?
    Read the entirety of this main page (it will only take a couple of minutes), paying
    particular attention to "30 Seconds to Keras," which should be enough to give
    you an idea of how simple Keras is to use.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: '[Keras: The Python Deep Learning library](https://keras.io/)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The release notes for the current major release version of Keras (at the time
    of writing) can be found here. Take the few minutes to read them:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: '[Introducing Keras 2](https://blog.keras.io/introducing-keras-2.html)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Karlijn Willems of DataCamp has created a handy Keras cheat sheet which I recommend
    you download and have handy. Even though some of it may not make sense yet, it
    soon will, and the reference will undoubtedly prove useful. I have a printed copy
    on my desk.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: '[Keras Cheat Sheet](https://www.datacamp.com/community/blog/keras-cheat-sheet#gs.0X64hsc),
    by Karlijn Willems'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lastly, and most importantly, familiarize yourself with the Keras documentation,
    which is top notch and explains all the things. Bookmark it.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '[Keras Documentation](https://keras.io/)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Step 3: An Overview of Keras'
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Valerio Maggio gave a great tutorial presentation at PyData London 2017, titled
    "Ten Steps to Keras." To get a fleshed out understanding of what Keras is, how
    it compares to other libraries, and how you can get things done with it, take
    the 90 minutes to watch the video. It is definitely worth it to gain a high level
    understanding of Keras, top to bottom.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: Then look at the following few pages of documentation to get an understanding
    of how Keras approaches model implementations.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '[About Keras models](https://keras.io/models/about-keras-models/)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting started with the Keras Sequential model](https://keras.io/getting-started/sequential-model-guide/)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting started with the Keras Functional API](https://keras.io/getting-started/functional-api-guide/)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you are still having questions as to why you would choose Keras over TensorFlow
    (you didn''t watch the video, did you?), read this:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '[TensorFlow or Keras? Which one should I learn?](https://medium.com/implodinggradients/tensorflow-or-keras-which-one-should-i-learn-5dd7fa3f9ca0),
    by Aakash Nain'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Make sure you have Keras installed](https://keras.io/#installation) before
    going any futher.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, for information on changing Keras backends, see this documentation
    page:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '[Keras backends](https://keras.io/backend/)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Step 4: Baby Steps with Keras'
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s do one of the first things that everyone does when they start using
    a new deep learning library: implement a simple logistic regression model.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: If you watched Valerio's video in the previous step then you may already have
    gotten what you need for this. If not, refer to his notebook from the talk. Ideally
    you read the whole thing for a great comparison of implementation code for TensorFlow,
    Theano, and Keras. If you are interested solely in the Keras code, however, skip
    down about halfway.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: '[Multi-layer Fully Connected Networks](https://github.com/leriomaggio/deep-learning-keras-tensorflow/blob/euroscipy2017/1%20Multi-layer%20Fully%20Connected%20Networks.ipynb),
    by Valerio Maggio'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The beauty of the Keras code, shown below (and taken directly from Maggio's
    notebook), to accomplish the task should be readily visible. Note that data pre-processing
    has already occurred at this point.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: Implementing logistic regression, as above, is one thing, but now let's try
    out something more worthy of being called a neural network, complete with a hidden
    layer.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: First, ensure that you have looked over the following Keras documentation pages,
    describing both the Sequenial model (already referenced above) and the Layers.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '[Getting started with the Keras Sequential model](https://keras.io/getting-started/sequential-model-guide/)'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[About Keras layers](https://keras.io/layers/about-keras-layers/)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Keras Core Layers](https://keras.io/layers/core/)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, follow along with this basic implementation of a neural network which learns
    something about tic-tac-toe game outcomes.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '[Keras Tutorial: Recognizing Tic-Tac-Toe Winners with Neural Networks](/2017/09/neural-networks-tic-tac-toe-keras.html),
    by Matthew Mayo'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Having completed these steps, you should be ready for implementing some more
    complex architectures.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 5: Implementing a Convolutional Neural Network'
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To implement a convolutional neural network (CNN) in Keras, start by reading
    the documentation on its convolutional layers:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '[Keras Convolutional Layers](https://keras.io/layers/convolutional/)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'After this, look at both of the following tutorials on CNNs in Keras. The first
    takes a slower approach, and covers much of what you should already know by now,
    while the second takes into account some additional topics such as avoiding overfitting.
    This isn''t necessarily an either/or approach; you may find valuable nuggets in
    both write-ups:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: '[Keras Tutorial: The Ultimate Beginner’s Guide to Deep Learning in Python](https://elitedatascience.com/keras-tutorial-deep-learning-in-python),
    by Elite Data Science'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Convolutional Neural Networks](https://sempwn.github.io/blog/2017/04/06/conv_net_intro),
    by Mike Irvine'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To learn more about convolution neural networks in general, try Brandon Rohrer''s
    video:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: Read the [accompanying blog post](https://www.kdnuggets.com/2016/08/brohrer-convolutional-neural-networks-explanation.html).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 6: Implementing a Recurrent Neural Network'
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To implement a recurrent neural network (RNN) in Keras, start by reading the
    documentation on its recurrent layers:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: '[Keras Recurrent Layers](https://keras.io/layers/recurrent/)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'After this, try out this tutorial by Chris Albon for implementing a Long Short-Term
    Memory (LSTM) network -- a dominant type of RNN -- for text classification:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '[LSTM Recurrent Neural Network](https://chrisalbon.com/deep_learning/keras/lstm_recurrent_neural_network/)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To learn more about recurrent neural networks in general, try Brandon Rohrer''s
    video:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: Read the [accompanying slides](https://docs.google.com/presentation/d/1hqYB3LRwg_-ntptHxH18W1ax9kBwkaZ1Pa_s3L7R-2Y/edit).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 7: What Next?'
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: At this point you should have a solid understanding of Keras, including why
    you would use it, the advantages it has over other libraries in certain situations,
    and using it to implement a variety of network architectures. You're an expert
    now, right?
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: 'Well, probably not. But hopefully you have mastered the basics. When you want
    to move beyond the basics, the next best stop is likely Keras'' official tutorials:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '[Keras Tutorials](https://blog.keras.io/category/tutorials.html)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: After this, check out the Keras examples directory, which includes vision models
    examples, text & sequences examples, generative models examples, and more.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '[Keras Examples Directory](https://github.com/fchollet/keras/tree/master/examples)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Also, how about challenging yourself to fine-tune some of the above models
    you implemented in the previous steps? Change the optimizer, add another layer,
    play with activation functions. Or use some of the Keras metrics to go back and
    judge the performance of your models. The Keras documentation is a great place
    to start:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '[Keras Metrics](https://keras.io/metrics/)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Keras FAQ: Frequently Asked Keras Questions](https://keras.io/getting-started/faq/)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Best of luck using Keras.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering Data Preparation with Python](/2017/06/7-steps-mastering-data-preparation-python.html)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering Machine Learning with Python](/2015/11/seven-steps-machine-learning-python.html)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 More Steps to Mastering Machine Learning with Python](/2017/03/seven-more-steps-machine-learning-python.html)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每位数据科学家都应该知道的三个 R 库（即使你使用 Python）](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
