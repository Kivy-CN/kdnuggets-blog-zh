- en: Make Pandas 3 Times Faster with PyPolars
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2021/05/pandas-faster-pypolars.html](https://www.kdnuggets.com/2021/05/pandas-faster-pypolars.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Satyam Kumar](https://www.linkedin.com/in/satkr/), Machine Learning Enthusiast
    & Programmer**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d7e6cfa674476abb5778d3a3291c484b.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Tim Gouw](https://unsplash.com/@punttim?utm_source=medium&utm_medium=referral) on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Pandas is one of the most important Python packages among data scientist’s to
    play around with the data. Pandas library is used mostly for data explorations
    and visualizations as it comes with tons of inbuilt functions. Pandas fail to
    handle large size datasets as it does not scale or distributes its process across
    all the cores of the CPU.
  prefs: []
  type: TYPE_NORMAL
- en: To speed up the computations, one can utilize all the cores of the CPU and speed
    up the workflow. There are various open-source libraries including Dask, Vaex,
    Modin, Pandarallel, PyPolars, etc that parallelize the computations across multiple
    cores of the CPU. In this article, we will discuss the implementation and usage
    of the PyPolars library and compare its performance with Pandas library.
  prefs: []
  type: TYPE_NORMAL
- en: Whats is PyPolars?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: PyPolars is an open-source Python data frame library similar to Pandas. PyPolars
    utilizes all the available cores of the CPU and hence performs the computations
    faster than Pandas. PyPolars has an API similar to that of Pandas. It is written
    in rust with Python wrappers.
  prefs: []
  type: TYPE_NORMAL
- en: Ideally, PyPolars is used when the data is too big for Pandas and too small
    for Spark
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: How PyPolars Works?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: PyPolars library has two APIs, one is Eager API and the other is Lazy API. Eager
    API is very similar to that of Pandas, and the results are produced just after
    the execution is completed similar to Pandas. Lazy API is very similar to Spark,
    where a map or plan is formed upon execution of a query. Then the execution is
    executed parallelly across all the cores of the CPU.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0230c45ae7afe40f0abe487235ee4ba1.png)'
  prefs: []
  type: TYPE_IMG
- en: (Image by Author), PyPolars API’s
  prefs: []
  type: TYPE_NORMAL
- en: PyPolars is basically as python binding to Polars library. The best part of
    the PyPolars library is its API similarity to Pandas, which makes it easier for
    the developers.
  prefs: []
  type: TYPE_NORMAL
- en: 'Installation:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'PyPolars can be installed from PyPl using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: and import the library using
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Benchmark Time Constraints:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For demonstrations, I have used a large size dataset (~6.4Gb) having 25 million
    instances.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/016819891b0567cb7b42212697294dd6.png)'
  prefs: []
  type: TYPE_IMG
- en: (Image by Author), Benchmark Time Number for Pandas and Py-Polars basic operations
  prefs: []
  type: TYPE_NORMAL
- en: For the above benchmark time numbers for some basic operations using Pandas
    and PyPolars library, we can observe that PyPolars is almost 2x to 3x faster than
    Pandas.
  prefs: []
  type: TYPE_NORMAL
- en: Now we know that PyPolars has an API very similar to that of Pandas, but still,
    it does not cover all the functions of Pandas. For example, we don’t have `**.describe()**`function
    in PyPolars, instead, we can use `**df_pypolars.to_pandas().describe()**`
  prefs: []
  type: TYPE_NORMAL
- en: 'Usage:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: (Code by Author)
  prefs: []
  type: TYPE_NORMAL
- en: 'Conclusion:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this article, we have covered a small introduction to the PyPolars library,
    including its implementation, usage, and comparing its benchmark time numbers
    with Pandas for some basic operations. Note that PyPolars works very similar to
    that of Pandas, and PyPolars is a memory-efficient library since the memory backed
    by it is immutable.
  prefs: []
  type: TYPE_NORMAL
- en: 'One can go through the [documentation](https://github.com/ritchie46/polars) to
    get a detailed understanding of the library. There are various other open-source
    libraries that can parallelize the Pandas operations and speed up the process.
    Read the [below-mentioned article](https://towardsdatascience.com/4-libraries-that-can-parallelize-the-existing-pandas-ecosystem-f46e5a257809) to
    know 4 such libraries:'
  prefs: []
  type: TYPE_NORMAL
- en: '[**4 Libraries that can parallelize the existing Pandas ecosystem**](http:// 
    towardsdatascience.com)'
  prefs: []
  type: TYPE_NORMAL
- en: Distribute Python workload by parallel processing using these frameworks
  prefs: []
  type: TYPE_NORMAL
- en: '**References:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[1] Polars Documentation and GitHub repository: [https://github.com/ritchie46/polars](https://github.com/ritchie46/polars)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Thank You for Reading**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Satyam Kumar](https://www.linkedin.com/in/satkr/)** is a Machine Learning
    Enthusiast & Programmer. Satyam [writes](https://satyam-kumar.medium.com/) about
    Data Science, and is a Top Writer in AI. He is seeking an challenging career with
    a organisation that provides an opportunity to capitalise on his technical skills
    and abilities.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/3x-times-faster-pandas-with-pypolars-7550e605805e).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Vaex: Pandas but 1000x faster](/2021/05/vaex-pandas-1000x-faster.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Speed Up Pandas with Modin](/2021/03/speed-up-pandas-modin.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Deal with Categorical Data for Machine Learning](/2021/05/deal-with-categorical-data-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[How To Optimize Dockerfile Instructions for Faster Build Times](https://www.kdnuggets.com/how-to-optimize-dockerfile-instructions-for-faster-build-times)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Easiest Way to Make Beautiful Interactive Visualizations With Pandas](https://www.kdnuggets.com/2021/12/easiest-way-make-beautiful-interactive-visualizations-pandas.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Learn Machine Learning 4X Faster by Participating in Competitions](https://www.kdnuggets.com/2022/01/learn-machine-learning-4x-faster-participating-competitions.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[oBERT: Compound Sparsification Delivers Faster Accurate Models for NLP](https://www.kdnuggets.com/2022/05/obert-compound-sparsification-delivers-faster-accurate-models-nlp.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Faster Way to Prepare Time-Series Data with the AI & Analytics Engine](https://www.kdnuggets.com/2021/12/piexchange-faster-way-prepare-timeseries-data-ai-analytics-engine.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Become Data-Driven Faster with DataCamp’s Analyst Takeover](https://www.kdnuggets.com/2022/10/datacamp-data-driven-faster-analyst-takeover.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
