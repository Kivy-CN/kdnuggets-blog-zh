["```py\n Increasing  Decreasing  Stable\nIncreasing    0.6         0.3     0.1\nDecreasing    0.4         0.4     0.2\nStable        0.5         0.3     0.2\n```", "```py\nimport numpy as np\n\n# Define the states of the Markov chain\nstates = [\"increasing\", \"decreasing\", \"stable\"]\n\n# Define the transition probabilities\ntransition_probs = np.array([[0.6, 0.3, 0.1], [0.4, 0.4, 0.2], [0.5, 0.3, 0.2]])\n\n# Set the initial state\ncurrent_state = \"increasing\"\n\n# Set the number of time steps to simulate\nnum_steps = 10\n\n# Simulate the Markov chain for the specified number of time steps\nfor i in range(num_steps):\n    # Get the probability of transitioning to each state\n    probs = transition_probs[states.index(current_state)]\n\n    # Sample a new state from the distribution\n    new_state = np.random.choice(states, p=probs)\n\n    # Update the current state\n    current_state = new_state\n\n    # Print the current state\n    print(f\"Step {i+1}: {current_state}\")\n```"]