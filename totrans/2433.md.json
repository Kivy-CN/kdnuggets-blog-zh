["```py\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\n```", "```py\nurl = \"https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data\"\n\n# Assign the column namesnames = ['sepal-length', 'sepal-width', 'petal-length', 'petal-width', 'Class']\n\n# Read the dataset in\ndataset = pd.read_csv(url, names=names)\ndataset\n```", "```py\nX = dataset.iloc[:, :-1].values\ny = dataset.iloc[:, 4].values\n```", "```py\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20)\n```", "```py\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(X_train)\n\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)\n```", "```py\nfrom sklearn.neighbors import KNeighborsClassifier\nclassifier = KNeighborsClassifier(n_neighbors=7)\nclassifier.fit(X_train, y_train)\n```", "```py\ny_pred = classifier.predict(X_test)\n```", "```py\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test, y_pred))\n```", "```py\nerror = []\n# Calculating the error rate for K-values between 1 and 30\nfor i in range(1, 30):\n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train, y_train)\n    pred_i = knn.predict(X_test)\n    error.append(np.mean(pred_i != y_test))\n```", "```py\nplt.figure(figsize=(12, 5))\nplt.plot(range(1, 30), error, color='red', marker='o',\n        markerfacecolor='yellow', markersize=10)\nplt.title('Error Rate K Value')\nplt.xlabel('K Value')\nplt.ylabel('Mean Error')\n```"]