["```py\n\n$ sudo apt-get install lm-sensors\n$ sudo service kmod start  \n\n```", "```py\n\n$ pip install AWSIoTPythonSDK\n\n```", "```py\n\nimport subprocess\nimport shlex\nimport time\n\ndef measure_temp():\n        temp = subprocess.Popen(shlex.split('sensors -u'),\n                                stdout=subprocess.PIPE,\n                                bufsize=10, universal_newlines=True)\n        return temp.communicate()\n\nwhile True:\n    string=measure_temp()[0]\n    print(string.split()[8])\n    time.sleep(5)\n```", "```py\n\nwhile True:\n    if args.mode == 'both' or args.mode == 'publish':\n        args.message=measure_temp()[0].split()[8]\n        mess={\"reported\": {\"light\": \"blue\",\n                                       \"Temperature\": measure_temp()[0].split()[8],\"timestamp\": time.time()\n                                     },\"timestamp\": 1526519248}\n        args.message=mess\n        print(measure_temp()[0].split()[8],(time.time()-start)/60,'min')\n        print(mess,'\\n')\n        message = {}\n        message['message'] = args.message\n        message['sequence'] = loopCount\n        messageJson = json.dumps(message)\n        myAWSIoTMQTTClient.publish(topic, messageJson, 1)\n        if args.mode == 'publish':\n            print('Published topic %s: %s\\n' % (topic, messageJson))\n        loopCount += 1\n    time.sleep(5)\n\n```", "```py\n\n{\n  \"desired\": {\n    \"light\": \"green\",\n    \"Temperature\": 55,\n    \"timestamp\": 1526323886\n  },\n  \"reported\": {\n    \"light\": \"blue\",\n    \"Temperature\": 55,\n    \"timestamp\": 1526323886\n  },\n  \"delta\": {\n    \"light\": \"green\"\n  }\n}\n\n```", "```py\n\n$ python basicPubSub_adapted.py -e 1212345.iot.us-east-1.amazonaws.com -r rootCA.pem -c 2212345-certificate.pem.crt -k 2212345-private.pem.key -id arn:aws:iot:us-east-1:11231112345:thing/CPUUbuntu -t 'Teste'\n```", "```py\n\n{\n    \"fileLocations\": [\n        {\n            \"URIs\": [\n                \"https://s3.amazonaws.com/your-bucket/2018-05-19-19-41-16/12345-c2712345-12345\"\n            ]\n        },\n        {\n            \"URIPrefixes\": [\n                \"https://s3.amazonaws.com/your-bucket/2018-05-19-19-41-16/12345-c2712345-12345\"\n            ]\n        }\n    ],\n    \"globalUploadSettings\": {\n        \"format\": \"JSON\",\n        \"delimiter\": \"\\n\",\"textqualifier\":\"'\"\n    }\n}\n\n```", "```py\n\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"AWS\": \"*\"\n      },\n      \"Action\": \"es:*\",\n      \"Resource\": \"arn:aws:es:us-east-1:12345:domain/domain/*\",\n      \"Condition\": {\n        \"IpAddress\": {\n          \"aws:SourceIp\": \"178.042.222.33\"\n        }\n      }\n    }\n  ]\n}\n```", "```py\n\nPUT /data\n{\n \"mappings\": {\n  \"doc\": {\n   \"properties\": {\n     \"light\":{\"type\":\"text\"},\n    \"Temperature\": {\"type\": \"integer\"},\n    \"timestamp\": {\"type\": \"integer\"}\n   }\n  }\n }\n}\n```"]