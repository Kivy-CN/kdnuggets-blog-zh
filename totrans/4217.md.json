["```py\npip install streamlit\n```", "```py\nstreamlit hello\n```", "```py\npip install pandas scikit-learn matplotlib seaborn streamlit\n```", "```py\n# Imports\n# -----------------------------------------------------------\nimport streamlit as st\nimport pandas as pd\n# -----------------------------------------------------------\n\n# Helper functions\n# -----------------------------------------------------------\n# Load data from external source\ndf = pd.read_csv(\n    \"https://raw.githubusercontent.com/ThuwarakeshM/PracticalML-KMeans-Election/master/voters_demo_sample.csv\"\n)\n# -----------------------------------------------------------\n\n# Sidebar\n# -----------------------------------------------------------\n\n# -----------------------------------------------------------\n\n# Main\n# -----------------------------------------------------------\n# Create a title for your app\nst.title(\"Interactive K-Means Clustering\")\n\n# A description\nst.write(\"Here is the dataset used in this analysis:\")\n\n# Display the dataframe\nst.write(df)\n# -----------------------------------------------------------\n```", "```py\nstreamlit run quickstart.py\n```", "```py\n# Display the dataframe\ndf_display = st.checkbox(\"Display Raw Data\", value=True)\n\nif df_display:\n    st.write(df)\n```", "```py\n# SIDEBAR\n# -----------------------------------------------------------\nsidebar = st.sidebar\ndf_display = sidebar.checkbox(\"Display Raw Data\", value=True)\n\nn_clusters = sidebar.slider(\n    \"Select Number of Clusters\",\n    min_value=2,\n    max_value=10,\n)\n# -----------------------------------------------------------\n```", "```py\n\n# Imports\n# -----------------------------------------------------------\n...\nfrom sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set_theme()\n# -----------------------------------------------------------\n\n# Helper functions\n# -----------------------------------------------------------\n...\ndef run_kmeans(df, n_clusters=2):\n    kmeans = KMeans(n_clusters, random_state=0).fit(df[[\"Age\", \"Income\"]])\n\n    fig, ax = plt.subplots(figsize=(16, 9))\n\n    #Create scatterplot\n    ax = sns.scatterplot(\n        ax=ax,\n        x=df.Age,\n        y=df.Income,\n        hue=kmeans.labels_,\n        palette=sns.color_palette(\"colorblind\", n_colors=n_clusters),\n        legend=None,\n    )\n\n    return fig\n# -----------------------------------------------------------\n\n# MAIN APP\n# -----------------------------------------------------------\n...\n# Show cluster scatter plot\nst.write(run_kmeans(df, n_clusters=n_clusters))\n# -----------------------------------------------------------\n```", "```py\n# Load data from external source\n@st.cache\ndef load_data():\n    df = pd.read_csv(\n        \"https://raw.githubusercontent.com/ThuwarakeshM/PracticalML-KMeans-Election/master/voters_demo_sample.csv\"\n    )\n    return df\n\ndf = load_data()\n```"]