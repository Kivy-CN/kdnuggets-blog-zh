- en: How Different are Conventional Programming and Machine Learning?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 传统编程和机器学习有多大不同？
- en: 原文：[https://www.kdnuggets.com/2018/12/different-conventional-programming-machine-learning.html](https://www.kdnuggets.com/2018/12/different-conventional-programming-machine-learning.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2018/12/different-conventional-programming-machine-learning.html](https://www.kdnuggets.com/2018/12/different-conventional-programming-machine-learning.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](#comments)'
- en: '**By Avneesh Sharma, Tech Product Management**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者：Avneesh Sharma，技术产品管理**'
- en: '![Header image](../Images/15028624695298db41beacf31e05677d.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![标题图片](../Images/15028624695298db41beacf31e05677d.png)'
- en: Engineering allowed us to push the limits of human capabilities. We used our
    understanding of nature and utilized that to serve our purposes. Be it a high
    performant mechanical machinery or an encoded silicon chip. Computers have been
    by far one of the most intricate utilization of nature's forces put to help humans
    in pushing their limits of capabilities i.e. many tasks which can be performed
    by computers can never be performed that quickly and efficiently by a human or
    a set of humans. As Steve Jobs would say, [computers are like a bicycle for our
    minds](https://www.youtube.com/watch?v=ob_GX50Za6c&feature=youtu.be&t=34).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 工程让我们突破了人类能力的极限。我们利用对自然的理解来服务于我们的目的。无论是高性能的机械设备还是编码的硅芯片，计算机迄今为止是自然力量最复杂的应用之一，帮助人类推动能力的极限，即计算机能够执行的许多任务，往往是人类或一组人无法如此迅速和高效完成的。正如史蒂夫·乔布斯所说，[计算机就像我们思想的自行车](https://www.youtube.com/watch?v=ob_GX50Za6c&feature=youtu.be&t=34)。
- en: I have been fascinated by computers from my childhood. I had my first interaction
    with computers back in 2001 when I wrote a program in BASIC to add two numbers.
    I was amazed that no matter how difficult the addition was, computer answered
    it instantly.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我从小就对计算机充满了好奇。我在2001年第一次接触计算机，当时我写了一个BASIC程序来加两个数字。我惊讶于无论加法有多么困难，计算机都能立即给出答案。
- en: When I heard about **Machine Learning** I couldn't contain the amazement. I
    was not able to get my mind around the fact, that unlike normal software programs
    - which I was accustomed to - I wouldn't even have to teach a computer the "how"
    in detail about all the future scenarios up front. There was a way that computers
    can themselves learn how to solve a problem. It was a giant leap for mankind.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 当我听到**机器学习**时，我无法抑制惊讶。我无法理解，跟我习惯的普通软件程序不同，我不需要事先详细教会计算机如何处理所有未来的场景。计算机可以自己学习如何解决问题。这对人类来说是一个巨大的飞跃。
- en: What is Machine Learning?
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 什么是机器学习？
- en: The term '[machine learning](https://en.wikipedia.org/wiki/Machine_learning#Overview)'
    isn't new. It was coined coined by Arthur Samuel in 1959\. It has borrowed understandings
    from different fields like Computer Science, Statistics, Linear Algebra, and Probability
    Theory and applied to solve practical problems. Machine learning enables the computers
    to learn from the historical data and formulate a solution which can be used to
    solve similar problems in future, without the explicit need of teaching computers
    all the combination of possible scenarios in the problem. And the practical application
    of machine learning is where it is not even feasible to articulate a definite
    mathematical solution to the problem.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 术语‘[机器学习](https://en.wikipedia.org/wiki/Machine_learning#Overview)’并不新鲜。它是由亚瑟·塞缪尔在1959年创造的。它借鉴了计算机科学、统计学、线性代数和概率论等不同领域的理解，并应用于解决实际问题。机器学习使计算机能够从历史数据中学习，制定出可以用于解决未来类似问题的解决方案，而不需要显式地教会计算机所有可能场景的组合。而机器学习的实际应用正是那些连明确的数学解决方案都难以阐明的问题。
- en: A real-world problem is a candidate for the application of machine learning
    if -
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个现实世界的问题符合以下条件，它就是机器学习应用的候选：
- en: Historical data exists in a huge amount
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 历史数据存在大量
- en: A pattern exists in the data
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据中存在模式
- en: Extremely hard to pin down a solution mathematically
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数学上极难确定一个解决方案
- en: How is it different from conventional programming?
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 它与传统编程有何不同？
- en: The approach of conventional programming is to feed the computer with a set
    of instructions for a defined set of scenarios. After that computer will utilize
    its computing capabilities to help human process the data faster and in an efficient
    fashion. Whereas in machine learning, a huge amount of data is thrown at the computer,
    which in turn processes all the data and comes up with something called trained
    model(solution). Then this model is used to solve the unseen problems of the real
    world.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 传统编程的方法是给计算机输入一组指令以处理特定场景。之后，计算机将利用其计算能力帮助人类更快、更高效地处理数据。而在机器学习中，大量数据被输入到计算机中，计算机处理这些数据并得到一个称为训练模型（解决方案）的东西。然后使用这个模型来解决现实世界中未见过的问题。
- en: Example
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: Let us take a toy problem to demonstrate the difference. The problem takes an
    input number and tries to divide by 3 and 5\. If the number is divisible by 3
    then it prints 'fizz', if it is divisible by 5 then it prints out 'buzz' and if
    it is divisible by both then it prints out 'fizzbuzz'. If it is not divisible
    by any of the 3 or 5 then print 'other'. It's called a [Fizzbuzz](https://en.wikipedia.org/wiki/Fizz_buzz) game.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以一个玩具问题来演示区别。这个问题接受一个输入数字，并尝试用3和5进行除法。如果数字能被3整除，则打印'fizz'；如果能被5整除，则打印'buzz'；如果能被两者整除，则打印'fizzbuzz'。如果不能被3或5整除，则打印'other'。这被称为[Fizzbuzz](https://en.wikipedia.org/wiki/Fizz_buzz)游戏。
- en: '**Conventional Programming**'
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**传统编程**'
- en: It is extremely easy in conventional programming to feed the computer with a
    set of instructions because we have only 4 scenarios to be verified and print
    the output based on that. The python code can be written as below but you can
    skip reading code if you are not into coding.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在传统编程中，给计算机输入指令非常简单，因为我们只有4种场景需要验证，并根据这些场景打印输出。Python代码可以如下编写，但如果你不喜欢编码，可以跳过阅读代码。
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Machine Learning**'
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**机器学习**'
- en: Supposed we already have a lot of numbers whose output is already known i.e
    whether it is 'fizz' or 'buzz' or 'fizzbuzz'. All we need to do is now, write
    a machine learning code and feed (train) the available data. Then verify whether
    we have successfully created a model by verifying with testing with an unseen
    data. If model provides the output using trained model without actually calculating
    the result then we have achieved the purpose.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们已经有很多数字，其输出结果已知，即它是'fizz'、'buzz'还是'fizzbuzz'。我们现在需要做的就是编写机器学习代码，并输入（训练）现有数据。然后通过用未见过的数据进行测试来验证我们是否成功创建了模型。如果模型能在不实际计算结果的情况下提供输出，那么我们就达到了目的。
- en: We will be using Google's [Tensorflow](https://www.tensorflow.org/) library
    for this purpose. Here are some code snippets from the implementation.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Google的[Tensorflow](https://www.tensorflow.org/)库来实现。以下是实现中的一些代码片段。
- en: Again, you can skip the code if you aren't into coding. The whole working code
    can be found [here](https://github.com/sharmaavneesh/MachineLearning/tree/master/fizzbuzz) in
    my Github account.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，如果你不喜欢编码，可以跳过代码。完整的工作代码可以在我的Github账户的[这里](https://github.com/sharmaavneesh/MachineLearning/tree/master/fizzbuzz)找到。
- en: '**a. Creating the model**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**a. 创建模型**'
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**b. Train the model**'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**b. 训练模型**'
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**c. Test the model**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**c. 测试模型**'
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**d. Result:**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**d. 结果：**'
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Conclusion
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论
- en: 'We repeatedly fed the same data 5000 times, after re-shuffling it every-time.
    And after each run, we measured whether how accurate out model has become by measuring
    the error rate in test data. As it can be seen that there is 98 percent accuracy
    for the model. I have plotted the graph of error after each iteration. The closer
    it gets to 1 better our model has become. Here is what it looks like:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们重复地输入相同的数据5000次，每次都重新打乱。每次运行后，我们通过测量测试数据的误差率来评估模型的准确性。如图所示，模型的准确率为98%。我绘制了每次迭代后的误差图。数值越接近1，模型表现越好。图表如下：
- en: '![](../Images/cadee22cf29994bce3ff797d5cda9e61.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cadee22cf29994bce3ff797d5cda9e61.png)'
- en: Final Words
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结束语
- en: As seen above, in this particular toy case - the conventional program will always
    give the correct output whereas machine learning might not reach 100% accuracy
    level.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所示，在这个特定的玩具案例中——传统程序将始终给出正确的输出，而机器学习可能无法达到100%的准确水平。
- en: Now imagine a scenario where you are running a company like Netflix which has
    millions of customers. Each customer has a unique set of preferences. For example,
    some person might love documentaries and comedy movies but he watches documentaries
    on Tuesdays and comedies on Sunday. While other person binge watches on Saturday
    nights and loves watching horror on Sunday and so on. You can imagine how complex
    it would be to document all the habits of each individual when there are so many
    variables which determine exact preferences. Because if you want to suggest each
    customer a movie which he/she is going to watch then you must know the exact preferences
    of that person.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在设想一个场景，你正在经营一家像Netflix这样的公司，拥有数百万客户。每个客户都有一组独特的偏好。例如，有些人可能喜欢纪录片和喜剧电影，但他在周二观看纪录片，在周日观看喜剧电影。而另一些人则在周六晚上狂看视频，喜欢在周日观看恐怖片等等。你可以想象，当有这么多变量决定确切的偏好时，记录每个人的习惯会多么复杂。因为如果你想向每个客户推荐他/她将要观看的电影，你必须了解该人的确切偏好。
- en: 'For conventional programming, this problem becomes increasingly difficult because:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 对于传统编程，这个问题变得越来越困难，因为：
- en: You don't know what all things determine the watching habits of a person.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你不知道决定一个人观看习惯的所有因素。
- en: Even if you know, then the solution will not scale to millions of user at a
    time because for each person you have to write a separate solution based on his/her
    habits.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 即使你知道了，解决方案也无法扩展到数百万用户，因为对于每个人，你都需要根据他/她的习惯编写一个单独的解决方案。
- en: 'This is where machine learning is implemented. Generally, machine learning
    will be trained on two premises in this case:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这里实现了机器学习。一般来说，在这种情况下，机器学习将基于两个前提进行训练：
- en: Based on your past data, which movies are most likely you are going to watch?
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据你的过去数据，你最有可能观看哪些电影？
- en: What are people like you watching these days?
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在人们像你一样在看什么？
- en: Do let me know your thoughts by commenting below.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 请通过下面的评论告诉我你的想法。
- en: 'PS: Full code used in the article can be found [here](https://github.com/sharmaavneesh/MachineLearning/tree/master/fizzbuzz).'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: PS：文章中使用的完整代码可以在 [这里](https://github.com/sharmaavneesh/MachineLearning/tree/master/fizzbuzz)
    找到。
- en: '**References**'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**参考资料**'
- en: https://www.amazon.com/Pattern-Recognition-Learning-Information-Statistics/dp/0387310738
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: https://www.amazon.com/Pattern-Recognition-Learning-Information-Statistics/dp/0387310738
- en: https://www.youtube.com/watch?v=mbyG85GZ0PI&index=1&list=PLD63A284B7615313A
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: https://www.youtube.com/watch?v=mbyG85GZ0PI&index=1&list=PLD63A284B7615313A
- en: '**Bio: [Avneesh Sharma](https://www.linkedin.com/in/avneesh-sharma/)** is a
    Masters in Management Information Systems candidate at University of Buffalo (2018-19).
    He has 8 years of experience in developing Software Products/Features ground up.
    He loves solving problems which have direct impact on business and make end users
    happy. He believes that creating a technology in general is a means to solve an
    existing real world pain point to make life easy.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介： [Avneesh Sharma](https://www.linkedin.com/in/avneesh-sharma/)** 是布法罗大学（2018-19）的管理信息系统硕士候选人。他拥有8年的软件产品/功能从头开发经验。他喜欢解决对业务有直接影响的问题，并使最终用户满意。他相信，创造技术通常是解决现实世界痛点的一种手段，以简化生活。'
- en: '[Original](https://www.linkedin.com/pulse/how-different-conventional-programming-machine-learning-sharma/).
    Reposted with permission.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://www.linkedin.com/pulse/how-different-conventional-programming-machine-learning-sharma/)。经许可转载。'
- en: '**Related:**'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关内容：**'
- en: '[Is Regression Analysis Really Machine Learning?](/2017/06/regression-analysis-really-machine-learning.html)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[回归分析真的算作机器学习吗？](/2017/06/regression-analysis-really-machine-learning.html)'
- en: '[Machine Learning vs Statistics](/2016/11/machine-learning-vs-statistics.html)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[机器学习与统计学]( /2016/11/machine-learning-vs-statistics.html)'
- en: '[Big Data, Bible Codes, and Bonferroni](/2016/07/big-data-bible-codes-bonferroni.html)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[大数据、圣经密码和邦费罗尼]( /2016/07/big-data-bible-codes-bonferroni.html)'
- en: '* * *'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织在 IT 领域'
- en: '* * *'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[How is Data Mining Different from Machine Learning?](https://www.kdnuggets.com/2022/06/data-mining-different-machine-learning.html)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据挖掘与机器学习的不同之处是什么？](https://www.kdnuggets.com/2022/06/data-mining-different-machine-learning.html)'
- en: '[Automated Machine Learning with Python: A Comparison of Different…](https://www.kdnuggets.com/2023/03/automated-machine-learning-python-comparison-different-approaches.html)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 的自动化机器学习：不同方法的比较](https://www.kdnuggets.com/2023/03/automated-machine-learning-python-comparison-different-approaches.html)'
- en: '[5 Different Ways to Load Data in Python](https://www.kdnuggets.com/2020/08/5-different-ways-load-data-python.html)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Python 中加载数据的 5 种不同方法](https://www.kdnuggets.com/2020/08/5-different-ways-load-data-python.html)'
- en: '[The Ultimate Guide To Different Word Embedding Techniques In NLP](https://www.kdnuggets.com/2021/11/guide-word-embedding-techniques-nlp.html)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[自然语言处理中的不同词嵌入技术终极指南](https://www.kdnuggets.com/2021/11/guide-word-embedding-techniques-nlp.html)'
- en: '[AI-Generated Sports Highlights: Different Approaches](https://www.kdnuggets.com/2022/03/aigenerated-sports-highlights-different-approaches.html)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[AI 生成的体育亮点：不同的方法](https://www.kdnuggets.com/2022/03/aigenerated-sports-highlights-different-approaches.html)'
- en: '[The Range of NLP Applications in the Real World: A Different…](https://www.kdnuggets.com/2022/03/different-solution-problem-range-nlp-applications-real-world.html)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[现实世界中 NLP 应用的范围：一种不同的解决方案](https://www.kdnuggets.com/2022/03/different-solution-problem-range-nlp-applications-real-world.html)'
