- en: Object Detection with Luminoth
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/03/object-detection-luminoth.html](https://www.kdnuggets.com/2019/03/object-detection-luminoth.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '![](../Images/dfce4961bf0a5dc37d0e75317eac93af.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In this article, we’ll see how we can use the [Luminoth](https://github.com/tryolabs/luminoth) library
    to detect objects in pictures or videos. Luminoth is an open source [computer
    vision](https://heartbeat.fritz.ai/the-5-computer-vision-techniques-that-will-change-how-you-see-the-world-1ee19334354b) library
    built in Python and based on [TensorFlow](https://www.tensorflow.org/) and [Sonnet](https://github.com/deepmind/sonnet).
    This library was developed by [Tryolabs](https://medium.com/@tryolabs). You can
    learn more about Luminoth and some of their other projects here:'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '[**Tryolabs | Machine Learning & Data Science Consulting**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Tryolabs is a Machine Learning and Data Science consulting firm that helps
    companies build and implement custom…*](https://tryolabs.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: Sonnet is a TensorFlow-based neural network library. Luminoth is a fairly new
    library in its alpha-quality release stage. One of the things we’ll do is illustrate
    how to use Luminoth to detect objects in images as in the picture shown below.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b0dc0ae54fb96ebf82cf228ea65493c4.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Installation**'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can install Luminoth via a quick pip install command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Luminoth provides pre-trained checkpoints we can use. It is, however, possible
    to adapt our own dataset and train it. Let’s dive right in.
  prefs: []
  type: TYPE_NORMAL
- en: The beauty of this library is that it makes the work of object detection easy.
    Let’s work through a simple example with this image.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3d6efa3458fdcdd344770ef8b7be0635.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Source](https://pixabay.com/en/motorcycles-motorcycle-moped-1711872/)'
  prefs: []
  type: TYPE_NORMAL
- en: In order to do this, we’ll need to first fire up our terminal. Predicting the
    objects in an image is fairly easy. However, before we can start making predictions,
    we have to download a checkpoint so we’ll have consistent starting points for
    those predictions. Luminoth provides the `lumi` command that we’ll use for most
    of the operations.
  prefs: []
  type: TYPE_NORMAL
- en: Managing checkpoints is done using the`lumi checkpoint`command, which will download
    pre-trained models that we’ll use to make predictions. This is such a big advantage—it
    takes a long time and a lot of computing power to train image recognition models.
    It is, however, possible to do your own training using cloud infrastructure (Google
    Cloud, AWS, etc.).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Let’s now look at our downloaded checkpoints. This is done via the `lumi checkpoint
    list` command.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/4280e403d0f29361589b0babd31e8659.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can clearly see that we have two checkpoints:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Faster R-CNN w/COCO **— An object detection model trained on the Faster R-CNN
    model. Uses the COCO dataset.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**SSD w/Pascal VOC**—An object detection model trained on the Single Shot Multibox
    Detector (SSD) model. Uses the Pascal dataset.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We’ll now use Luminoth’s Command Line Interface to predict the objects in the
    image we showed above.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This command outputs the predictions in JSON command.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/36b7ac9beb7904e9264947ca4b1ba354.png)'
  prefs: []
  type: TYPE_IMG
- en: You and I can agree that this output isn’t visually appealing, to say the least.
    Luckily for us, the good people from Luminoth provide a way to output an image
    with the objects in the images as labels.
  prefs: []
  type: TYPE_NORMAL
- en: In order to do this, we’ll first create a directory called `predictions` to
    hold the JSON output and the predicted image. Remember that we’re still working
    on the terminal.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Once this is done, we can run the command that will make the predictions and
    return the images with the labeled objects.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: This command might take a couple of minutes to run. Once it's done we’ll see
    the output shown below in our predictions folder.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6a01e5f2b1de1b0a90cf462287821721.png)'
  prefs: []
  type: TYPE_IMG
- en: We can see that it predicted that the objects in the image are motorcycles with
    an accuracy of up to 100%. It was also able to predict the car behind the fence.
    Pretty cool, right?
  prefs: []
  type: TYPE_NORMAL
- en: Luminoth also allows us to runs predictions using specific checkpoints. Let’s
    proceed to check the `Fast` checkpoint and use it. We can do this using either
    its ID or alias.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: or
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/15d618996a39f762578d8e882583bb1c.png)'
  prefs: []
  type: TYPE_IMG
- en: Let’s use this checkpoint to predict the objects in the motorcycle image.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: We’ll get a prompt to download the checkpoint locally, and when it’s downloaded
    the predictions will happen. We see that it was able to predict the motorcycle
    but wasn't able to identify the car behind the fence.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e7a0210ddcbcead04f95848bceaad0e3.png)'
  prefs: []
  type: TYPE_IMG
- en: Luminoth allows us to do these predictions on a web interface. To open the web
    interface run the following command.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: After that head over to [http://localhost:5000/](http://localhost:5000/) to
    access the web interface.
  prefs: []
  type: TYPE_NORMAL
- en: All we have to do is browse for an image on our computer and hit the submit
    button. We can play around with the probability threshold. Increasing the threshold
    will give us fewer images with a higher probability, and decreasing it will give
    us more images with lower probability.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1a6faa7626e80ecc25df95fc9af3d9c1.png)'
  prefs: []
  type: TYPE_IMG
- en: Another awesome thing we can do with this library is detect objects in a video.
    This process will take a while depending on the processing power of the computer.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '**Conclusion**'
  prefs: []
  type: TYPE_NORMAL
- en: There are very many computer vision tools out there. What makes Luminoth unique
    is how easy it is to implement. It also provides trained models that we can plug
    and play in our work. To learn more about this library check out the official [docs](http://luminoth.readthedocs.io/).
  prefs: []
  type: TYPE_NORMAL
- en: '[**Introductory Tutorials For Machine Learning**'
  prefs: []
  type: TYPE_NORMAL
- en: '*If you are just getting started in machine learning or looking to brush up
    your skills, this book is for you.*](https://leanpub.com/introductorytutorialsformachinelearning)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Derrick Mwiti](https://derrickmwiti.com/)** is a data analyst, a writer,
    and a mentor. He is driven by delivering great results in every task, and is a
    mentor at Lapid Leaders Africa.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://heartbeat.fritz.ai/object-detection-with-luminoth-605d35c265f6).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Introduction to PyTorch for Deep Learning](/2018/11/introduction-pytorch-deep-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to do Everything in Computer Vision](/2019/02/everything-computer-vision.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Comparing MobileNet Models in TensorFlow](/2019/03/comparing-mobilenet-models-tensorflow.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[What Is the Difference Between SQL and Object-Relational Mapping (ORM)?](https://www.kdnuggets.com/2022/02/difference-sql-object-relational-mapping-orm.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets™ News 22:n09, Mar 2: Telling a Great Data Story: A…](https://www.kdnuggets.com/2022/n09.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Perform Motion Detection Using Python](https://www.kdnuggets.com/2022/08/perform-motion-detection-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Beginner''s Guide to Anomaly Detection Techniques in Data Science](https://www.kdnuggets.com/2023/05/beginner-guide-anomaly-detection-techniques-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using Hugging Face Transformers for Emotion Detection in Text](https://www.kdnuggets.com/using-hugging-face-transformers-for-emotion-detection-in-text)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News, August 17: How to Perform Motion Detection Using…](https://www.kdnuggets.com/2022/n33.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
