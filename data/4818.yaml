- en: Text Classification & Embeddings Visualization Using LSTMs, CNNs, and Pre-trained
    Word Vectors
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文本分类与嵌入可视化，使用LSTMs、CNNs和预训练词向量
- en: 原文：[https://www.kdnuggets.com/2018/07/text-classification-lstm-cnn-pre-trained-word-vectors.html](https://www.kdnuggets.com/2018/07/text-classification-lstm-cnn-pre-trained-word-vectors.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2018/07/text-classification-lstm-cnn-pre-trained-word-vectors.html](https://www.kdnuggets.com/2018/07/text-classification-lstm-cnn-pre-trained-word-vectors.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](#comments)'
- en: '**By [Sabber Ahamed](https://www.linkedin.com/in/sabber-ahamed/), Computational
    Geophysicist and Machine Learning Enthusiast**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由[Sabber Ahamed](https://www.linkedin.com/in/sabber-ahamed/)，计算地球物理学家和机器学习爱好者**'
- en: '**Editor''s note:** This post summarizes the 3 currently-published posts in
    this series, while a fourth and final installment is soon on the way.'
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**编辑注释：** 本文总结了该系列中目前已发布的3篇文章，而第四篇最终篇章即将发布。'
- en: 'In this tutorial, I classify [Yelp round-10 review datasets](https://www.yelp.com/dataset/).
    The reviews contain a lot of metadata that can be mined and used to infer meaning,
    business attributes, and sentiment. For simplicity, I classify the review comments
    into two class: either as positive or negative. Reviews that have star higher
    than three are regarded as positive while the reviews with star less than or equal
    to 3 are negative. Therefore, the problem is a supervised learning. To build and
    train the model, I first clean the text and convert them to sequences. Each review
    comment is limited to 50 words. As a result, short texts less than 50 words are
    padded with zeros, and long ones are truncated. After processing the review comments,
    I trained three model in three different ways and obtained three word embeddings.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我对[Yelp round-10评论数据集](https://www.yelp.com/dataset/)进行了分类。这些评论包含大量可以挖掘的元数据，用于推断意义、业务属性和情感。为了简单起见，我将评论分为两类：正面或负面。星级高于三的评论被认为是正面的，而星级小于或等于3的评论则为负面。因此，这个问题是一个监督学习问题。为了构建和训练模型，我首先清理文本并将其转换为序列。每条评论的字数限制为50个单词。结果是，少于50个单词的短文本会用零填充，而较长的文本则会被截断。在处理完评论后，我用三种不同的方法训练了三个模型，并获得了三种词嵌入。
- en: '![Image](../Images/3e8934012ca13e02934441669b872907.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/3e8934012ca13e02934441669b872907.png)'
- en: '[**Part 1: Text Classification Using LSTM and visualize Word Embeddings**](https://medium.com/@sabber/classifying-yelp-review-comments-using-lstm-and-word-embeddings-part-1-eb2275e4066b)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[**第1部分：使用LSTM进行文本分类并可视化词嵌入**](https://medium.com/@sabber/classifying-yelp-review-comments-using-lstm-and-word-embeddings-part-1-eb2275e4066b)'
- en: In this part, I build a neural network with LSTM and word embeddings were leaned
    while fitting the neural network on the classification problem.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我构建了一个神经网络，使用LSTM和词嵌入在分类问题上进行训练。
- en: The network starts with an embedding layer. The layer lets the system expand
    each token to a more massive vector, allowing the network to represent a word
    in a meaningful way. The layer takes 20000 as the first argument, which is the
    size of our vocabulary, and 100 as the second input parameter, which is the dimension
    of the embeddings. The third parameter is the input_length of 50, which is the
    length of each comment sequence.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 网络从一个嵌入层开始。这个层允许系统将每个标记扩展为更大的向量，使得网络能够以有意义的方式表示一个词。该层的第一个参数是20000，即我们的词汇表大小，第二个参数是100，即嵌入的维度。第三个参数是50，即每个评论序列的长度。
- en: '**[Part 2: Text Classification Using CNN, LSTM and visualize Word Embeddings](https://medium.com/@sabber/classifying-yelp-review-comments-using-cnn-lstm-and-visualize-word-embeddings-part-2-ca137a42a97d)**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第2部分：使用CNN、LSTM进行文本分类并可视化词嵌入](https://medium.com/@sabber/classifying-yelp-review-comments-using-cnn-lstm-and-visualize-word-embeddings-part-2-ca137a42a97d)**'
- en: In in this part, I add an extra 1D convolutional layer on top of LSTM layer
    to reduce the training time.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我在LSTM层上添加了一个额外的1D卷积层，以减少训练时间。
- en: The LSTM model worked well. However, it takes forever to train three epochs.
    One way to speed up the training time is to improve the network adding “Convolutional”
    layer. Convolutional Neural Networks (CNN) come from image processing. They pass
    a “filter” over the data and calculate a higher-level representation. They have
    been shown to work surprisingly well for text, even though they have none of the
    sequence processing ability of LSTMs.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: LSTM 模型表现良好。然而，训练三个 epoch 的时间非常长。加快训练速度的一种方法是通过增加“卷积”层来改进网络。卷积神经网络（CNN）起源于图像处理。它们在数据上应用“滤波器”并计算更高层次的表示。尽管
    CNN 没有 LSTM 的序列处理能力，但它们在文本处理上表现出意外的好效果。
- en: '**[Part 3: Text Classification Using CNN, LSTM and Pre-trained Glove Word Embeddings](https://medium.com/@sabber/classifying-yelp-review-comments-using-cnn-lstm-and-pre-trained-glove-word-embeddings-part-3-53fcea9a17fa)**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第 3 部分：使用 CNN、LSTM 和预训练 Glove 词嵌入进行文本分类](https://medium.com/@sabber/classifying-yelp-review-comments-using-cnn-lstm-and-pre-trained-glove-word-embeddings-part-3-53fcea9a17fa)**'
- en: In this part-3, I use the same network architecture as part-2, but use the pre-trained
    glove 100 dimension word embeddings as initial input.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 3 部分中，我使用与第 2 部分相同的网络架构，但使用预训练的 100 维 Glove 词嵌入作为初始输入。
- en: In this subsection, I want to use word embeddings from pre-trained Glove. It
    was trained on a dataset of one billion tokens (words) with a vocabulary of 400
    thousand words. The glove has embedding vector sizes, including 50, 100, 200 and
    300 dimensions. I chose the 100-dimensional version. I also want to see the model
    behavior in case the learned word weights do not get updated. I, therefore, set
    the trainable attribute for the model to be False.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一小节中，我想使用预训练的 Glove 词嵌入。它是在一个包含十亿个标记（单词）和 40 万个单词词汇的数据集上训练的。Glove 提供了包括 50、100、200
    和 300 维的嵌入向量。我选择了 100 维的版本。我还希望看到模型的表现，假设学习到的单词权重没有更新。因此，我将模型的可训练属性设置为 False。
- en: '**Part 4: (Not yet published)**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**第 4 部分：（尚未发布）**'
- en: In part-4, I use word2vec to learn word embeddings.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 4 部分中，我使用 word2vec 学习词嵌入。
- en: '**Bio: [Sabber Ahamed](https://www.linkedin.com/in/sabber-ahamed/)** is the
    Founder of [xoolooloo.com](https://www.xoolooloo.com/). Computational Geophysicist
    and Machine Learning Enthusiast.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：[Sabber Ahamed](https://www.linkedin.com/in/sabber-ahamed/)** 是 [xoolooloo.com](https://www.xoolooloo.com/)
    的创始人。计算地球物理学家和机器学习爱好者。'
- en: '**Related:**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Natural Language Processing Nuggets: Getting Started with NLP](/2018/06/getting-started-natural-language-processing.html)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[自然语言处理精华：NLP 入门](/2018/06/getting-started-natural-language-processing.html)'
- en: '[On the contribution of neural networks and word embeddings in Natural Language
    Processing](/2018/05/contribution-neural-networks-word-embeddings-natural-language-processing.html)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[关于神经网络和词嵌入在自然语言处理中的贡献](/2018/05/contribution-neural-networks-word-embeddings-natural-language-processing.html)'
- en: '[Detecting Sarcasm with Deep Convolutional Neural Networks](/2018/06/detecting-sarcasm-deep-convolutional-neural-networks.html)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用深度卷积神经网络检测讽刺](/2018/06/detecting-sarcasm-deep-convolutional-neural-networks.html)'
- en: '* * *'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 为你的组织提供 IT 支持'
- en: '* * *'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Image Classification with Convolutional Neural Networks (CNNs)](https://www.kdnuggets.com/2022/05/image-classification-convolutional-neural-networks-cnns.html)'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用卷积神经网络（CNNs）进行图像分类](https://www.kdnuggets.com/2022/05/image-classification-convolutional-neural-networks-cnns.html)'
- en: '[LSTMs Rise Again: Extended-LSTM Models Challenge the Transformer…](https://www.kdnuggets.com/lstms-rise-again-extended-lstm-models-challenge-the-transformer-superiority)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[LSTM 再次崛起：扩展型 LSTM 模型挑战 Transformer 的优势](https://www.kdnuggets.com/lstms-rise-again-extended-lstm-models-challenge-the-transformer-superiority)'
- en: '[Automate Microsoft Excel and Word Using Python](https://www.kdnuggets.com/2021/08/automate-microsoft-excel-word-python.html)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 自动化 Microsoft Excel 和 Word](https://www.kdnuggets.com/2021/08/automate-microsoft-excel-word-python.html)'
- en: '[What is Text Classification?](https://www.kdnuggets.com/2022/07/text-classification.html)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[什么是文本分类？](https://www.kdnuggets.com/2022/07/text-classification.html)'
- en: '[Best Architecture for Your Text Classification Task: Benchmarking…](https://www.kdnuggets.com/2023/04/best-architecture-text-classification-task-benchmarking-options.html)'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[最佳文本分类任务架构：基准测试…](https://www.kdnuggets.com/2023/04/best-architecture-text-classification-task-benchmarking-options.html)'
- en: '[A Guide to Train an Image Classification Model Using Tensorflow](https://www.kdnuggets.com/2022/12/guide-train-image-classification-model-tensorflow.html)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Tensorflow 训练图像分类模型指南](https://www.kdnuggets.com/2022/12/guide-train-image-classification-model-tensorflow.html)'
