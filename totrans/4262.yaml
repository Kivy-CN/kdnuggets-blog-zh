- en: 'PyCaret 101: An introduction for beginners'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'PyCaret 101: 初学者入门指南'
- en: 原文：[https://www.kdnuggets.com/2021/06/pycaret-101-introduction-beginners.html](https://www.kdnuggets.com/2021/06/pycaret-101-introduction-beginners.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/06/pycaret-101-introduction-beginners.html](https://www.kdnuggets.com/2021/06/pycaret-101-introduction-beginners.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Moez Ali](https://www.linkedin.com/in/profile-moez/), Founder & Author
    of PyCaret**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Moez Ali](https://www.linkedin.com/in/profile-moez/)，PyCaret 的创始人兼作者**'
- en: '![](../Images/2b4e095038b7e40091fb46813a4c773b.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2b4e095038b7e40091fb46813a4c773b.png)'
- en: PyCaret — An open-source, low-code machine learning library in Python
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret — 一个开源的低代码 Python 机器学习库
- en: '* * *'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你所在的组织的 IT'
- en: '* * *'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: PyCaret
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PyCaret
- en: '[PyCaret](https://www.pycaret.org/) is an open-source, low-code machine learning
    library and end-to-end model management tool built-in Python for automating machine
    learning workflows. Its ease of use, simplicity, and ability to quickly and efficiently
    build and deploy end-to-end machine learning pipelines will amaze you.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[PyCaret](https://www.pycaret.org/) 是一个开源的低代码机器学习库和端到端模型管理工具，内置于 Python 中，用于自动化机器学习工作流程。它的易用性、简单性以及能够快速高效地构建和部署端到端机器学习管道的能力将令你惊叹。'
- en: PyCaret is an alternate low-code library that can replace hundreds of lines
    of code with few lines only. This makes the experiment cycle exponentially fast
    and efficient.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 是一个低代码库，可以用几行代码替代数百行代码。这使得实验周期变得极其快速高效。
- en: PyCaret is **simple and easy to use. **All the operations performed in PyCaret
    are sequentially stored in a **Pipeline** that is fully automated for **deployment. **Whether
    it’s imputing missing values, one-hot-encoding, transforming categorical data,
    feature engineering, or even hyperparameter tuning, PyCaret automates all of it.
    To learn more about PyCaret, watch this 1-minute video.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 是 **简单易用的**。PyCaret 中执行的所有操作都被顺序存储在一个 **Pipeline** 中，完全自动化以 **部署**。无论是填补缺失值、进行独热编码、转换分类数据、特征工程，还是超参数调优，PyCaret
    都会自动完成。要了解更多关于 PyCaret 的信息，请观看这段 1 分钟的视频。
- en: PyCaret — An open-source, low-code machine learning library in Python
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret — 一个开源的低代码 Python 机器学习库
- en: Features of PyCaret
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PyCaret 的特点
- en: '![](../Images/eadab4d647dcf4f77f48fa4df54f1c5a.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eadab4d647dcf4f77f48fa4df54f1c5a.png)'
- en: Image by Author
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: Modules in PyCaret
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PyCaret 的模块
- en: 'PyCaret is a modular library arranged into modules and each module representing
    a machine learning use-case. As of the writing of this story, the following modules
    are supported:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 是一个模块化库，按模块排列，每个模块代表一个机器学习用例。截止到本文撰写时，支持以下模块：
- en: '![](../Images/25cf0f7d01befb77986c3b39587cd96e.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/25cf0f7d01befb77986c3b39587cd96e.png)'
- en: Image by Author — Machine Learning use-case supported in PyCaret
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像 — PyCaret 支持的机器学习用例
- en: '** Time Series module is in making and will be available in the next major
    release.*'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**时间序列模块正在开发中，将在下一个主要版本中推出。**'
- en: Installing PyCaret
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装 PyCaret
- en: Installing PyCaret is very easy and takes only a few minutes. We strongly recommend
    using a virtual environment to avoid potential conflicts with other libraries.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 PyCaret 非常简单，仅需几分钟。我们强烈建议使用虚拟环境，以避免与其他库的潜在冲突。
- en: PyCaret’s default installation is a slim version of pycaret that only installs
    hard dependencies [listed here](https://github.com/pycaret/pycaret/blob/master/requirements.txt).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 的默认安装是一个精简版的 pycaret，只安装了硬性依赖项，[列在这里](https://github.com/pycaret/pycaret/blob/master/requirements.txt)。
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When you install the full version of pycaret, all the optional dependencies
    as [listed here](https://github.com/pycaret/pycaret/blob/master/requirements-optional.txt) are
    also installed.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当你安装 PyCaret 的完整版时，所有的可选依赖项也会被安装，详细信息见 [这里](https://github.com/pycaret/pycaret/blob/master/requirements-optional.txt)。
- en: '![](../Images/61927545f7f850ddb656ad96326dd159.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/61927545f7f850ddb656ad96326dd159.png)'
- en: PyCaret by numbers — Image by author
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 数字化 — 作者提供的图片
- en: ???? Let’s get started
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 开始吧
- en: 'Before I show you how easy it is to do machine learning with PyCaret, let’s
    talk a little bit about the machine learning lifecycle at a high level:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在我向你展示如何用 PyCaret 轻松做机器学习之前，让我们先从高层次上谈谈机器学习生命周期：
- en: '![](../Images/a9a1254f49bf8637e4b40ea779055c7a.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a9a1254f49bf8637e4b40ea779055c7a.png)'
- en: Machine Learning Life Cycle — Image by Author (Read from left-to-right)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习生命周期 — 作者提供的图片（从左到右阅读）
- en: '**Business Problem — **This is the first step of the machine learning workflow.
    It may take from few days to a few weeks to complete, depending on the use case
    and complexity of the problem. It is at this stage, data scientists meet with
    subject matter experts (SME’s) to gain an understanding of the problem, interview
    key stakeholders, collect information, and set the overall expectations of the
    project.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**业务问题 —** 这是机器学习工作流的第一步。根据用例和问题的复杂性，这一步可能需要几天到几周的时间才能完成。在这一阶段，数据科学家会与主题专家（SME）会面，以了解问题，采访关键利益相关者，收集信息，并设定项目的总体期望。'
- en: '**Data Sourcing & ETL — **Once the problem understanding is achieved, it then
    comes to using the information gained during interviews to source the data from
    the enterprise database.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据来源与 ETL —** 一旦理解了问题，就可以利用访谈中获得的信息从企业数据库中获取数据。'
- en: '**Exploratory Data Analysis (EDA) — **Modeling hasn’t started yet. EDA is where
    you analyze the raw data. Your goal is to explore the data and assess the quality
    of the data, missing values, feature distribution, correlation, etc.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**探索性数据分析（EDA） —** 模型尚未开始。EDA 是你分析原始数据的阶段。你的目标是探索数据，评估数据的质量、缺失值、特征分布、相关性等。'
- en: '**Data Preparation — **Now it’s time to prepare the data model training. This
    includes things like dividing data into a train and test set, imputing missing
    values, one-hot-encoding, target encoding, feature engineering, feature selection,
    etc.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据准备 —** 现在是准备数据模型训练的时候了。这包括将数据划分为训练集和测试集、填补缺失值、独热编码、目标编码、特征工程、特征选择等。'
- en: '**Model Training & Selection — **This is the step everyone is excited about.
    This involves training a bunch of models, tuning hyperparameters, model ensembling,
    evaluating performance metrics, model analysis such as AUC, Confusion Matrix,
    Residuals, etc, and finally selecting one best model to be deployed in production
    for business use.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型训练与选择 —** 这是大家都兴奋的步骤。这包括训练一堆模型、调整超参数、模型集成、评估性能指标、模型分析如 AUC、混淆矩阵、残差等，最后选择一个最佳模型用于生产环境中的业务应用。'
- en: '**Deployment & Monitoring — **This is the final step which is mostly about
    MLOps. This includes things like packaging your final model, creating a docker
    image, writing the scoring script, and then making it all work together, and finally
    publish it as an API that can be used to obtain predictions on the new data coming
    through the pipeline.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署与监控 —** 这是最后一步，主要涉及 MLOps。这包括打包最终模型、创建 Docker 镜像、编写评分脚本，然后将所有这些整合在一起，最终将其发布为一个
    API，用于对通过管道传入的新数据进行预测。'
- en: The old way of doing all this is pretty cumbersome, long, and requires a lot
    of technical know-how and I possibly cannot cover it in one tutorial. However,
    in this tutorial, I will use PyCaret to demonstrate how easy it has become for
    a data scientist to do all this very efficiently.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的方法相当繁琐、耗时，并且需要大量的技术知识，我可能无法在一个教程中涵盖所有内容。然而，在这个教程中，我将使用 PyCaret 来演示数据科学家如何变得如此高效地完成这些任务。
- en: ???? Business Problem
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 业务问题
- en: For this tutorial, I will be using a very popular case study by Darden School
    of Business, published in [Harvard Business](https://hbsp.harvard.edu/product/UV0869-PDF-ENG).
    The case is regarding the story of two people who are going to be married in the
    future. The guy named *Greg *wanted to buy a ring to propose to a girl named *Sarah*.
    The problem is to find the ring Sarah will like, but after a suggestion from his
    close friend, Greg decides to buy a diamond stone instead so that Sarah can decide
    her choice. Greg then collects data of 6000 diamonds with their price and attributes
    like cut, color, shape, etc.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我将使用达顿商学院的一个非常流行的案例研究，该案例研究发表在[哈佛商业评论](https://hbsp.harvard.edu/product/UV0869-PDF-ENG)上。案例涉及两个未来要结婚的人。名叫*Greg*的男子想买一个戒指向名叫*Sarah*的女孩求婚。问题是找到Sarah会喜欢的戒指，但在朋友的建议下，Greg决定买一个钻石石头，以便Sarah可以决定她的选择。Greg随后收集了6000颗钻石的数据，包括价格和切工、颜色、形状等属性。
- en: ???? Data
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 数据
- en: In this tutorial, I will be using a dataset from a very popular case study by
    the Darden School of Business, published in [Harvard Business](https://hbsp.harvard.edu/product/UV0869-PDF-ENG).
    The goal of this tutorial is to predict the diamond price based on its attributes
    like carat weight, cut, color, etc. You can download the dataset from [PyCaret’s
    repository](https://github.com/pycaret/pycaret/tree/master/datasets).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我将使用达顿商学院的一个非常流行的案例研究的数据集，该案例研究发表在[哈佛商业评论](https://hbsp.harvard.edu/product/UV0869-PDF-ENG)上。本教程的目标是根据钻石的属性（如克拉重量、切工、颜色等）预测钻石价格。你可以从[PyCaret的仓库](https://github.com/pycaret/pycaret/tree/master/datasets)下载数据集。
- en: '[PRE1]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/fb95a6b487372fcc0798bf241f463754.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fb95a6b487372fcc0798bf241f463754.png)'
- en: Sample rows from data
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的样本行
- en: ???? Exploratory Data Analysis
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 探索性数据分析
- en: Let’s do some quick visualization to assess the relationship of independent
    features (weight, cut, color, clarity, etc.) with the target variable i.e. `Price`
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们做一些快速的可视化，以评估独立特征（重量、切工、颜色、清晰度等）与目标变量`Price`的关系。
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/5e3fa68a8d11c0a17130264aa4d9f53d.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5e3fa68a8d11c0a17130264aa4d9f53d.png)'
- en: Let’s check the distribution of the target variable.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查目标变量的分布。
- en: '[PRE3]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/06f59e9b6448c861aa90716081884715.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/06f59e9b6448c861aa90716081884715.png)'
- en: Notice that distribution of `Price` is right-skewed, we can quickly check to
    see if log transformation can make `Price` approximately normal to give fighting
    chance to algorithms that assume normality.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到`Price`的分布是右偏的，我们可以快速检查对数变换是否能使`Price`大致正态分布，从而给假设正态分布的算法提供机会。
- en: '[PRE4]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/a4bba39265f978622d2702ae97bf7620.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a4bba39265f978622d2702ae97bf7620.png)'
- en: This confirms our hypothesis. The transformation will help us to get away with
    skewness and make the target variable approximately normal. Based on this, we
    will transform the `Price` variable before training our models.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这确认了我们的假设。变换将帮助我们摆脱偏斜，使目标变量大致符合正态分布。基于此，我们将在训练模型之前对`Price`变量进行变换。
- en: ???? Data Preparation
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 数据准备
- en: Common to all modules in PyCaret, the `setup` is the first and the only mandatory
    step in any machine learning experiment using PyCaret. This function takes care
    of all the data preparation required before training models. Besides performing
    some basic default processing tasks, PyCaret also offers a wide array of pre-processing
    features. To learn more about all the preprocessing functionalities in PyCaret,
    you can see this [link](https://pycaret.org/preprocessing/).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在PyCaret的所有模块中，`setup`是任何使用PyCaret的机器学习实验中的第一个也是唯一的强制步骤。该函数负责在训练模型之前所需的所有数据准备工作。除了执行一些基本的默认处理任务外，PyCaret还提供了广泛的预处理功能。要了解PyCaret中所有预处理功能的更多信息，请参见这个[链接](https://pycaret.org/preprocessing/)。
- en: '[PRE5]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/f92622b3666c7bc68fe61fb6b46ddf5c.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f92622b3666c7bc68fe61fb6b46ddf5c.png)'
- en: setup function in pycaret.regression module
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: pycaret.regression模块中的setup函数
- en: When you initialize the `setup` function in PyCaret, it profiles the dataset
    and infers the data types for all input features. If all data types are correctly
    inferred, you can press enter to continue.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当你初始化PyCaret中的`setup`函数时，它会分析数据集并推断所有输入特征的数据类型。如果所有数据类型都被正确推断，你可以按回车继续。
- en: 'Notice that:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：
- en: I have passed `log_experiment = True` and `experiment_name = 'diamond'` , this
    will tell PyCaret to automatically log all the metrics, hyperparameters, and model
    artifacts behind the scene as you progress through the modeling phase. This is
    possible due to integration with [MLflow](https://www.mlflow.org/).
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我已传递`log_experiment = True`和`experiment_name = 'diamond'`，这将告诉PyCaret自动记录所有的指标、超参数和模型工件，在建模阶段进行时，这一切都在后台进行。这是由于与[MLflow](https://www.mlflow.org/)的集成实现的。
- en: Also, I have used `transform_target = True` inside the `setup`. PyCaret will
    transform the `Price` variable behind the scene using box-cox transformation.
    It affects the distribution of data in a similar way as log transformation *(technically
    different)*. If you would like to learn more about box-cox transformations, you
    can refer to this [link](https://onlinestatbook.com/2/transformations/box-cox.html).
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此外，我在`setup`中使用了`transform_target = True`。PyCaret将使用box-cox变换在后台转换`Price`变量。这影响了数据的分布，类似于对数变换（*技术上有所不同*）。如果你想了解更多关于box-cox变换的信息，你可以参考这个[链接](https://onlinestatbook.com/2/transformations/box-cox.html)。
- en: '![](../Images/ac6d418cca0eb62de9b2bf43575dc318.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ac6d418cca0eb62de9b2bf43575dc318.png)'
- en: Output from setup — truncated for display
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 设置输出 — 为显示目的已截断
- en: ???? Model Training & Selection
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 模型训练与选择
- en: Now that data is ready for modeling, let’s start the training process by using `compare_models` function.
    It will train all the algorithms available in the model library and evaluates
    multiple performance metrics using k-fold cross-validation.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在数据已经准备好进行建模，让我们使用`compare_models`函数开始训练过程。它将训练模型库中的所有算法，并使用k折交叉验证评估多个性能指标。
- en: '[PRE6]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/07fecb193d63f93d20f3fea859771fe5.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/07fecb193d63f93d20f3fea859771fe5.png)'
- en: Output from compare_models
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`compare_models`的输出'
- en: '[PRE7]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/eb43d501d3b721c528f968ef18076086.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eb43d501d3b721c528f968ef18076086.png)'
- en: Residuals and QQ-Plot of the best model
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳模型的残差和QQ图
- en: '[PRE8]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/0317c1fe59b3d80b2e167e051eab4208.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0317c1fe59b3d80b2e167e051eab4208.png)'
- en: Finalize and Save Pipeline
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 完成并保存Pipeline
- en: Let’s now finalize the best model i.e. train the best model on the entire dataset
    including the test set and then save the pipeline as a pickle file.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们最终确定最佳模型，即在整个数据集（包括测试集）上训练最佳模型，然后将Pipeline保存为pickle文件。
- en: '[PRE9]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '`save_model` function will save the entire pipeline (including the model) as
    a pickle file on your local disk. By default, it will save the file in the same
    folder as your Notebook or script is in but you can pass the complete path as
    well if you would like:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '`save_model`函数将把整个Pipeline（包括模型）保存为本地磁盘上的pickle文件。默认情况下，它将把文件保存到与Notebook或脚本所在的文件夹相同的位置，但如果需要，您也可以传递完整路径：'
- en: '[PRE10]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: ???? Deployment
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 部署
- en: 'Remember we passed `log_experiment = True` in the setup function along with `experiment_name
    = ''diamond''` . Let’s see the magic PyCaret has done with the help of MLflow
    behind the scene. To see the magic let’s initiate the MLflow server:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 记住我们在设置函数中传递了`log_experiment = True`以及`experiment_name = 'diamond'`。让我们看看PyCaret在MLflow的帮助下在后台做了什么神奇的事情。要查看这些魔法，让我们启动MLflow服务器：
- en: '[PRE11]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now open your browser and type “https://localhost:5000”. It will open a UI
    like this:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在打开你的浏览器，输入“https://localhost:5000”。它将打开一个类似这样的用户界面：
- en: '![](../Images/b6170680042f3b2a36cc3b3356deb876.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b6170680042f3b2a36cc3b3356deb876.png)'
- en: '[https://localhost:5000](https://localhost:5000/)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://localhost:5000](https://localhost:5000/)'
- en: 'Each entry in the table above represents a training run resulting in a trained
    Pipeline and a bunch of metadata such as DateTime of a run, performance metrics,
    model hyperparameters, tags, etc. Let’s click on one of the models:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 上表中的每一项代表一个训练运行，产生一个训练好的Pipeline和一堆元数据，如运行的日期时间、性能指标、模型超参数、标签等。让我们点击其中一个模型：
- en: '![](../Images/99991e20fe48b1af29c79fe0a5967e7a.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/99991e20fe48b1af29c79fe0a5967e7a.png)'
- en: Part I — CatBoost Regressor
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分 — CatBoost 回归器
- en: '![](../Images/d48bae6d168a6898337ee1394c12df66.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d48bae6d168a6898337ee1394c12df66.png)'
- en: Part II — CatBoost Regressor (continued)
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 第二部分 — CatBoost 回归器（续）
- en: '![](../Images/901c1286a5f3784d006ef3fc25b7f9d2.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/901c1286a5f3784d006ef3fc25b7f9d2.png)'
- en: Part III — CatBoost Regressor
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 第三部分 — CatBoost 回归器
- en: Notice that you have an address path for the `logged_model`. This is the trained
    Pipeline with Catboost Regressor. You can read this Pipeline using the `load_model` function.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 注意你有一个`logged_model`的地址路径。这是使用Catboost回归器训练的Pipeline。你可以使用`load_model`函数读取这个Pipeline。
- en: '[PRE12]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](../Images/bc9604047be618af559db94d8a86c428.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bc9604047be618af559db94d8a86c428.png)'
- en: Output from print(pipeline)
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: print(pipeline)的输出
- en: Let’s now use this Pipeline to generate predictions on the new data
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们使用这个Pipeline对新数据进行预测
- en: '[PRE13]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![](../Images/1c1bee5b356af4b2b77b4227a490bd60.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1c1bee5b356af4b2b77b4227a490bd60.png)'
- en: Predictions generated from Pipeline
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 从管道生成的预测
- en: Woohoo! We now have inference from our trained Pipeline. Congrats, if this is
    your first one. Notice that all the transformations such as target transformation,
    one-hot-encoding, missing value imputation, etc. happened behind the scene automatically.
    You get a data frame with prediction in actual scale, and this is what you care
    about.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 哇哦！我们现在从训练好的管道中获得了推断。如果这是你的第一次，恭喜你。请注意，所有的转换，如目标转换、独热编码、缺失值填充等，都是在后台自动完成的。你将得到一个包含实际规模预测的数据框，这才是你关心的。
- en: '![](../Images/83f3b7bb83ff24f6897be4a9f2a07d9b.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/83f3b7bb83ff24f6897be4a9f2a07d9b.png)'
- en: Image by Author
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: '![](../Images/b36b63110de0ece1dd0a6283b02637a3.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b36b63110de0ece1dd0a6283b02637a3.png)'
- en: Image by Author
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: There is no limit to what you can achieve using this lightweight workflow automation
    library in Python. If you find this useful, please do not forget to give us ⭐️
    on our GitHub repository.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个轻量级的工作流自动化库在 Python 中没有什么限制。如果你觉得有用，请不要忘记在我们的 GitHub 仓库中给我们 ⭐️。
- en: To hear more about PyCaret follow us on [LinkedIn](https://www.linkedin.com/company/pycaret/) and [Youtube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g).
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 想了解更多关于 PyCaret 的信息，请关注我们的 [LinkedIn](https://www.linkedin.com/company/pycaret/) 和 [Youtube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g)。
- en: Join us on our slack channel. Invite link [here](https://join.slack.com/t/pycaret/shared_invite/zt-p7aaexnl-EqdTfZ9U~mF0CwNcltffHg).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 加入我们的 Slack 频道。邀请链接 [在这里](https://join.slack.com/t/pycaret/shared_invite/zt-p7aaexnl-EqdTfZ9U~mF0CwNcltffHg)。
- en: 'You may also be interested in:'
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你可能还会感兴趣：
- en: '[Build your own AutoML in Power BI using PyCaret 2.0](https://towardsdatascience.com/build-your-own-automl-in-power-bi-using-pycaret-8291b64181d)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 Power BI 中使用 PyCaret 2.0 构建自己的 AutoML](https://towardsdatascience.com/build-your-own-automl-in-power-bi-using-pycaret-8291b64181d)'
- en: '[Deploy Machine Learning Pipeline on Azure using Docker](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-cloud-using-docker-container-bec64458dc01)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 Docker 在 Azure 上部署机器学习管道](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-cloud-using-docker-container-bec64458dc01)'
- en: '[Deploy Machine Learning Pipeline on Google Kubernetes Engine](https://towardsdatascience.com/deploy-machine-learning-model-on-google-kubernetes-engine-94daac85108b)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 Google Kubernetes Engine 上部署机器学习管道](https://towardsdatascience.com/deploy-machine-learning-model-on-google-kubernetes-engine-94daac85108b)'
- en: '[Deploy Machine Learning Pipeline on AWS Fargate](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-aws-fargate-eb6e1c50507)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 AWS Fargate 上部署机器学习管道](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-aws-fargate-eb6e1c50507)'
- en: '[Build and deploy your first machine learning web app](https://towardsdatascience.com/build-and-deploy-your-first-machine-learning-web-app-e020db344a99)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '[构建并部署你的第一个机器学习网页应用](https://towardsdatascience.com/build-and-deploy-your-first-machine-learning-web-app-e020db344a99)'
- en: '[Deploy PyCaret and Streamlit app using AWS Fargate serverless](https://towardsdatascience.com/deploy-pycaret-and-streamlit-app-using-aws-fargate-serverless-infrastructure-8b7d7c0584c2)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 AWS Fargate 无服务器部署 PyCaret 和 Streamlit 应用](https://towardsdatascience.com/deploy-pycaret-and-streamlit-app-using-aws-fargate-serverless-infrastructure-8b7d7c0584c2)'
- en: '[Build and deploy machine learning web app using PyCaret and Streamlit](https://towardsdatascience.com/build-and-deploy-machine-learning-web-app-using-pycaret-and-streamlit-28883a569104)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 和 Streamlit 构建并部署机器学习网页应用](https://towardsdatascience.com/build-and-deploy-machine-learning-web-app-using-pycaret-and-streamlit-28883a569104)'
- en: '[Deploy Machine Learning App built using Streamlit and PyCaret on GKE](https://towardsdatascience.com/deploy-machine-learning-app-built-using-streamlit-and-pycaret-on-google-kubernetes-engine-fd7e393d99cb)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 GKE 上部署使用 Streamlit 和 PyCaret 构建的机器学习应用](https://towardsdatascience.com/deploy-machine-learning-app-built-using-streamlit-and-pycaret-on-google-kubernetes-engine-fd7e393d99cb)'
- en: Important Links
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重要链接
- en: '[Documentation](https://pycaret.readthedocs.io/en/latest/installation.html)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '[文档](https://pycaret.readthedocs.io/en/latest/installation.html)'
- en: '[Blog](https://medium.com/@moez_62905)'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[博客](https://medium.com/@moez_62905)'
- en: '[GitHub](https://www.github.com/pycaret/pycaret)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '[GitHub](https://www.github.com/pycaret/pycaret)'
- en: '[StackOverflow](https://stackoverflow.com/questions/tagged/pycaret)'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '[StackOverflow](https://stackoverflow.com/questions/tagged/pycaret)'
- en: '[Install PyCaret](https://pycaret.readthedocs.io/en/latest/installation.html)
    [Notebook Tutorials](https://pycaret.readthedocs.io/en/latest/tutorials.html)
    [Contribute in PyCaret](https://pycaret.readthedocs.io/en/latest/contribute.html)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '[安装 PyCaret](https://pycaret.readthedocs.io/en/latest/installation.html) [Notebook
    教程](https://pycaret.readthedocs.io/en/latest/tutorials.html) [为 PyCaret 做贡献](https://pycaret.readthedocs.io/en/latest/contribute.html)'
- en: Want to learn about a specific module?
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 想了解某个特定模块？
- en: Click on the links below to see the documentation and working examples.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 点击下面的链接查看文档和工作示例。
- en: '[Classification](https://pycaret.readthedocs.io/en/latest/api/classification.html)
    [Regression](https://pycaret.readthedocs.io/en/latest/api/regression.html)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[分类](https://pycaret.readthedocs.io/en/latest/api/classification.html) [回归](https://pycaret.readthedocs.io/en/latest/api/regression.html)'
- en: '[Clustering](https://pycaret.readthedocs.io/en/latest/api/clustering.html)'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '[聚类](https://pycaret.readthedocs.io/en/latest/api/clustering.html)'
- en: '[Anomaly Detection](https://pycaret.readthedocs.io/en/latest/api/anomaly.html)'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '[异常检测](https://pycaret.readthedocs.io/en/latest/api/anomaly.html)'
- en: '[Natural Language Processing](https://pycaret.readthedocs.io/en/latest/api/nlp.html)
    [Association Rule Mining](https://pycaret.readthedocs.io/en/latest/api/arules.html)'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '[自然语言处理](https://pycaret.readthedocs.io/en/latest/api/nlp.html) [关联规则挖掘](https://pycaret.readthedocs.io/en/latest/api/arules.html)'
- en: '**THE END**'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '**结束**'
- en: '**Bio: [Moez Ali](https://www.linkedin.com/in/profile-moez/)** is a Data Scientist,
    and is Founder & Author of PyCaret.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介： [Moez Ali](https://www.linkedin.com/in/profile-moez/)** 是数据科学家，也是 PyCaret
    的创始人和作者。'
- en: '[Original](https://medium.com/analytics-vidhya/pycaret-101-for-beginners-27d9aefd34c5).
    Reposted with permission.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://medium.com/analytics-vidhya/pycaret-101-for-beginners-27d9aefd34c5).
    经许可转载。'
- en: '**Related:**'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关内容：**'
- en: '[Easy MLOps with PyCaret + MLflow](/2021/05/easy-mlops-pycaret-mlflow.html)'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 和 MLflow 的简单 MLOps](/2021/05/easy-mlops-pycaret-mlflow.html)'
- en: '[Write and train your own custom machine learning models using PyCaret](/2021/05/pycaret-write-train-custom-machine-learning-models.html)'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 编写和训练自定义机器学习模型](/2021/05/pycaret-write-train-custom-machine-learning-models.html)'
- en: '[5 Things You Don’t Know About PyCaret](/2020/07/5-things-pycaret.html)'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[你不知道的 PyCaret 的 5 件事](/2020/07/5-things-pycaret.html)'
- en: More On This Topic
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Introduction to Binary Classification with PyCaret](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 进行二分类介绍](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
- en: '[Introduction to Clustering in Python with PyCaret](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 进行 Python 中的聚类介绍](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)'
- en: '[Announcing PyCaret 3.0: Open-source, Low-code Machine Learning in Python](https://www.kdnuggets.com/2023/03/announcing-pycaret-30-opensource-lowcode-machine-learning-python.html)'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[宣布 PyCaret 3.0：开源、低代码的 Python 机器学习](https://www.kdnuggets.com/2023/03/announcing-pycaret-30-opensource-lowcode-machine-learning-python.html)'
- en: '[Getting Started with PyCaret](https://www.kdnuggets.com/2022/11/getting-started-pycaret.html)'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开始使用 PyCaret](https://www.kdnuggets.com/2022/11/getting-started-pycaret.html)'
- en: '[Linear Programming 101 for Data Scientists](https://www.kdnuggets.com/2023/02/linear-programming-101-data-scientists.html)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家的线性规划 101](https://www.kdnuggets.com/2023/02/linear-programming-101-data-scientists.html)'
- en: '[LangChain 101: Build Your Own GPT-Powered Applications](https://www.kdnuggets.com/2023/04/langchain-101-build-gptpowered-applications.html)'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[LangChain 101：构建您自己的 GPT 驱动应用程序](https://www.kdnuggets.com/2023/04/langchain-101-build-gptpowered-applications.html)'
