- en: Using the apply() Method with Pandas Dataframes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 apply() 方法与 Pandas Dataframes
- en: 原文：[https://www.kdnuggets.com/2022/07/apply-method-pandas-dataframes.html](https://www.kdnuggets.com/2022/07/apply-method-pandas-dataframes.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2022/07/apply-method-pandas-dataframes.html](https://www.kdnuggets.com/2022/07/apply-method-pandas-dataframes.html)
- en: '![Using the apply() Method with Pandas Dataframes](../Images/bdab73235e89186d9bf8ffdafc25d699.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![使用 apply() 方法与 Pandas Dataframes](../Images/bdab73235e89186d9bf8ffdafc25d699.png)'
- en: Photo by [Pakata Goh](https://unsplash.com/@pakata?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/python?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Pakata Goh](https://unsplash.com/@pakata?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    拍摄，来源于 [Unsplash](https://unsplash.com/s/photos/python?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: '**In this tutorial we will cover the following:**'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**在本教程中，我们将涵盖以下内容：**'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织进行 IT 工作'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 1) Understanding apply() method in Python and when it is used
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 1) 理解 Python 中的 apply() 方法及其使用时机
- en: 2) Implementing apply() method on a Pandas Series
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 2) 在 Pandas Series 上实现 apply() 方法
- en: 3) Implementing apply() method on a Pandas Data Frame
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 3) 在 Pandas Data Frame 上实现 apply() 方法
- en: 4) Implementing apply() method to solve four use cases on a Pandas Data Frame
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 4) 实现 apply() 方法以解决 Pandas Data Frame 上的四个用例
- en: 5) Conclusion
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 5) 结论
- en: Understanding apply() Method in Python and When it is Used?
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Python 中的 apply() 方法及其使用时机？
- en: The apply() method is mostly used for data cleaning where it focusses on applying
    the method on every element in a pandas Series and for every row/column of a pandas
    Data Frame.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: apply() 方法主要用于数据清理，它专注于对 pandas Series 中的每个元素以及 pandas Data Frame 的每一行/列应用该方法。
- en: Let us get started
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧
- en: Implementing apply() Method on a Pandas Series
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Pandas Series 上实现 apply() 方法
- en: Series are one-dimensional arrays which have axis labels named indices and consist
    data of different types such as strings, integers and other Python objects too.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Series 是一维数组，具有名为索引的轴标签，并包含不同类型的数据，如字符串、整数和其他 Python 对象。
- en: Let's implement a Series object having two lists which contain planets as indices
    and their diameter in kilometers as data
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们来实现一个 Series 对象，包含两个列表，其中行星作为索引，直径以公里为数据
- en: '**Code:**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码：**'
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Output:**'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '![Using the apply() Method with Pandas Dataframes](../Images/9a7f2a827fa2cec4497baf13f9217b3f.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![使用 apply() 方法与 Pandas Dataframes](../Images/9a7f2a827fa2cec4497baf13f9217b3f.png)'
- en: The code above returns a planetinfo object and its corresponding data type.
    Since the data type of object is series, let's see how we can convert the diameter
    in km of every planet to miles using the apply() method
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码返回一个 planetinfo 对象及其对应的数据类型。由于对象的数据类型是 series，让我们看看如何使用 apply() 方法将每个行星的直径从公里转换为英里
- en: '**Code:**'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码：**'
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output:**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '![Using the apply() Method with Pandas Dataframes](../Images/ac2b104bbbf30948b526e42cb26ddf73.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![使用 apply() 方法与 Pandas Dataframes](../Images/ac2b104bbbf30948b526e42cb26ddf73.png)'
- en: The above code returned the conversion of every planet's diameter from km to
    miles. In order to do that, we first defined a function named km_to_miles(), then
    we passed the function without any parenthesis to the apply() method. The apply()
    method then took every data point in the series and applied the km_to_miles()
    function on it.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码返回了每个行星的直径从公里转换为英里。为了实现这一点，我们首先定义了一个名为 km_to_miles() 的函数，然后将该函数不带括号地传递给
    apply() 方法。apply() 方法随后对 Series 中的每个数据点应用 km_to_miles() 函数。
- en: Implementing apply() Method on a Pandas Data Frame
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Pandas Data Frame 上实现 apply() 方法
- en: 'We will now create a dummy Data Frame in order to understand how we can use
    the apply () method for row and column manipulation in Data Frame. The dummy Data
    Frame which we are going to create contains the details of students using the
    following code:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将创建一个虚拟数据框，以了解如何使用 apply() 方法进行数据框的行和列操作。我们将创建的虚拟数据框包含学生的详细信息，使用以下代码：
- en: '**Code:**'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码：**'
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Output:**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '![Using the apply() Method with Pandas Dataframes](../Images/8c479cf71e5ab4ad02b2dcaae6d7e7ee.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Pandas 数据框的 apply() 方法](../Images/8c479cf71e5ab4ad02b2dcaae6d7e7ee.png)'
- en: We now have created a dummy Data Frame named studentinfo and will learn how
    to implement the apply() method by exploring 4 different use cases. Every use
    case will be new and will be solved by using the apply() method
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经创建了一个名为 studentinfo 的虚拟数据框，并将通过探索 4 个不同的用例来学习如何实现 apply() 方法。每个用例都是新的，并将通过使用
    apply() 方法解决。
- en: Usecase_1
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Usecase_1
- en: As a part of the data cleaning check we will be inspecting whether all the values
    in column STUDENT_NAME are only alphabets. In order to do that we will define
    a function named datacheck() that gets the STUDENT_NAME column and returns True
    or False by using the [isalpha()](https://www.programiz.com/python-programming/methods/string/isalpha)
    method. The result's True or False will be then returned inside a new column named
    IS_ALPHABET in the studentinfo Data Frame
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 作为数据清洗检查的一部分，我们将检查 STUDENT_NAME 列中的所有值是否仅包含字母。为此，我们将定义一个名为 datacheck() 的函数，它获取
    STUDENT_NAME 列并通过使用 [isalpha()](https://www.programiz.com/python-programming/methods/string/isalpha)
    方法返回 True 或 False。结果的 True 或 False 将被返回到名为 IS_ALPHABET 的新列中，在 studentinfo 数据框中。
- en: '**Code:**'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码：**'
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now we will apply the datacheck() function on the STUDENT_NAME column of the
    studentinfo Data Frame by implementing the apply() method.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将在 studentinfo 数据框的 STUDENT_NAME 列上应用 datacheck() 函数，通过实现 apply() 方法。
- en: '**Code:**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码：**'
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Output:**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '![Using the apply() Method with Pandas Dataframes](../Images/d11c98b2baee53bdcb4d8e091c36b24d.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Pandas 数据框的 apply() 方法](../Images/d11c98b2baee53bdcb4d8e091c36b24d.png)'
- en: We can see how the datacheck() function is applied on each row of the STUDENT_NAME
    column and the results returned are stored in a new column named IS_ALPHABET
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到 datacheck() 函数如何应用于 STUDENT_NAME 列的每一行，返回的结果存储在一个名为 IS_ALPHABET 的新列中。
- en: Usecase_2
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Usecase_2
- en: As a part of another data cleaning check we will be reducing the cardinality
    of the column ACADEMIC_STANDING where we will label the Category Good to ACADEMIC_STANDING_GOOD
    and rest of the categories to ACADEMIC_STANDING_BAD.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 作为数据清洗检查的一部分，我们将减少 ACADEMIC_STANDING 列的基数，其中我们将把类别 Good 标记为 ACADEMIC_STANDING_GOOD，其余类别标记为
    ACADEMIC_STANDING_BAD。
- en: To implement this use case we will define a function named reduce_cardinality()
    which gets the column ACADEMIC_STANDING. Inside the function, [ifstatement](https://www.programiz.com/python-programming/if-elif-else)
    is going to be used for comparison check hence returning the results ACADEMIC_STANDING_GOOD
    and ACADEMIC_STANDING_BAD to the ACADEMIC_STANDING column.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这个用例，我们将定义一个名为 reduce_cardinality() 的函数，它获取列 ACADEMIC_STANDING。在函数内部，将使用
    [ifstatement](https://www.programiz.com/python-programming/if-elif-else) 进行比较检查，从而将结果
    ACADEMIC_STANDING_GOOD 和 ACADEMIC_STANDING_BAD 返回到 ACADEMIC_STANDING 列。
- en: '**Code:**'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码：**'
- en: '[PRE5]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now we will apply the reduce_cardinality() function on the ACADEMIC_STANDING
    column of the studentinfo Data Frame by implementing the apply() method.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将在 studentinfo 数据框的 ACADEMIC_STANDING 列上应用 reduce_cardinality() 函数，通过实现
    apply() 方法。
- en: '**Code:**'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码：**'
- en: '[PRE6]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Output:**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '![Using the apply() Method with Pandas Dataframes](../Images/07b348738f08149597017900019ad215.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Pandas 数据框的 apply() 方法](../Images/07b348738f08149597017900019ad215.png)'
- en: We can see how the reduce_cardinality() function is applied on each row of the
    ACADEMIC_STANDING column where the original values inside the ACADEMIC_STANDING
    column have now been modified to two distinct categories which are ACADEMIC_STANDING_BAD
    and ACADEMIC_STANDING_GOOD hence reducing the cardinality in the data
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到 reduce_cardinality() 函数如何应用于 ACADEMIC_STANDING 列的每一行，其中 ACADEMIC_STANDING
    列中的原始值现在已被修改为两个不同的类别，即 ACADEMIC_STANDING_BAD 和 ACADEMIC_STANDING_GOOD，从而减少了数据的基数。
- en: Usecase_3
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Usecase_3
- en: For this use case again we will be reducing the cardinality of the column MID_TERM
    where we will label the grades starting with A,B,C as Corhigher and grades starting
    with D,F,W as Dorlower
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个用例，我们将再次减少 MID_TERM 列的基数，其中我们将以 A、B、C 开头的成绩标记为 Corhigher，以 D、F、W 开头的成绩标记为
    Dorlower。
- en: To implement this use case we will define a function named reduce_cardinality_grade()
    which gets the column MID_TERM_GRADE. Inside the function , [ifstatement](https://www.programiz.com/python-programming/if-elif-else)
    and [()startswith](https://www.w3schools.com/python/ref_string_startswith.asp)
    method are going to be used for comparison check hence returning the results Corhigher
    and Dorlower to the MID_TERM_GRADE column.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 为实现此用例，我们将定义一个名为 reduce_cardinality_grade() 的函数，该函数获取 MID_TERM_GRADE 列。在函数内部，将使用
    [ifstatement](https://www.programiz.com/python-programming/if-elif-else) 和 [()startswith](https://www.w3schools.com/python/ref_string_startswith.asp)
    方法进行比较检查，因此将 MID_TERM_GRADE 列的结果返回为 Corhigher 和 Dorlower。
- en: '**Code:**'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码：**'
- en: '[PRE7]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now we will apply the reduce_cardinality_grade() function on the MID_TERM_GRADE
    column of the studentinfo Data Frame by implementing the apply() method.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将通过实现 apply() 方法对 studentinfo 数据框的 MID_TERM_GRADE 列应用 reduce_cardinality_grade()
    函数。
- en: '**Code:**'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码：**'
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**Output:**'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '![Using the apply() Method with Pandas Dataframes](../Images/5682a00e27fd4d72c0a62a4be3fed0fa.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Pandas Dataframes 的 apply() 方法](../Images/5682a00e27fd4d72c0a62a4be3fed0fa.png)'
- en: We can see how the reduce_cardinality_grade() function is applied on each row
    of the MID_TERM_GRADE column where the original values inside the MID_TERM_GRADE
    column have now been modified to two distinct categories which are Corhigher and
    Dorlower hence reducing the cardinality
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到 reduce_cardinality_grade() 函数如何应用于 MID_TERM_GRADE 列的每一行，原始的 MID_TERM_GRADE
    列中的值现在已被修改为两个不同的类别，即 Corhigher 和 Dorlower，从而减少了基数。
- en: Usecase_4
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Usecase_4
- en: 'For this use will be creating a new column named FINAL_GRADE_STATUS inside
    the function check() where the values inside the FINAL_GRADE_STATUS will be determined
    on the following two conditions:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此用途，我们将在 check() 函数中创建一个名为 FINAL_GRADE_STATUS 的新列，该列的值将基于以下两个条件确定：
- en: 1) If the student's ATTENDANCE_PERCENTAGE is >= 0.6 and MID_TERM_GRADE is Corhigher
    than the FINAL_GRADE_STATUS will be flagged as High_Chance_Of_Passing
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 1) 如果学生的 ATTENDANCE_PERCENTAGE >= 0.6 并且 MID_TERM_GRADE 为 C 或更高，则 FINAL_GRADE_STATUS
    将标记为 High_Chance_Of_Passing
- en: 2) If the student's ATTENDANCE_PERCENTAGE is < 0.6 and MID_TERM_GRADE is Dorlower
    than the FINAL_GRADE_STATUS will be flagged as Low_Chance_Of_Passing
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 2) 如果学生的 ATTENDANCE_PERCENTAGE < 0.6 并且 MID_TERM_GRADE 为 D 或更低，则 FINAL_GRADE_STATUS
    将标记为 Low_Chance_Of_Passing
- en: Inside the function the comparison check will be done by using the [ifstatement](https://www.programiz.com/python-programming/if-elif-else),
    [and operator](https://www.programiz.com/python-programming/operators) in Python
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在函数内部，将使用 [ifstatement](https://www.programiz.com/python-programming/if-elif-else)
    和 [and 操作符](https://www.programiz.com/python-programming/operators) 在 Python 中进行比较检查。
- en: '**Code:**'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码：**'
- en: '[PRE9]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now we will apply the checking function on the ATTENDANCE_PERCENTAGE, MID_TERM_GRADE
    columns of the studentinfo Data Frame by implementing the apply() method. The
    axis=1 argument means to iterate over rows in the Data Frame.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将通过实现 apply() 方法对 studentinfo 数据框的 ATTENDANCE_PERCENTAGE 和 MID_TERM_GRADE
    列应用检查函数。axis=1 参数表示在数据框中按行迭代。
- en: '**Code:**'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码：**'
- en: '[PRE10]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '**Output:**'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '![Using the apply() Method with Pandas Dataframes](../Images/cb0d6e3d60dd470186140dbeceb17282.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Pandas Dataframes 的 apply() 方法](../Images/cb0d6e3d60dd470186140dbeceb17282.png)'
- en: We can see how the check() function is applied on each row of the MID_TERM_GRADE
    and ATTENDANCE_PERCENTAGE columns hence returning a new column named FINAL_GRADE_STATUS
    with values Corhigher and Dorlower .
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到 check() 函数如何应用于 MID_TERM_GRADE 和 ATTENDANCE_PERCENTAGE 列的每一行，从而返回一个名为
    FINAL_GRADE_STATUS 的新列，值为 Corhigher 和 Dorlower。
- en: Conclusion
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this tutorial, we understood how to use the apply() method by exploring different
    use cases. apply() method gives user the ability to perform different types of
    data manipulation on every value of a Series or pandas Data Frame
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们了解了如何通过探索不同的用例来使用 apply() 方法。apply() 方法使用户能够对 Series 或 pandas 数据框中的每个值执行不同类型的数据操作。
- en: '**[Priya Sengar](https://www.linkedin.com/in/priya-sengar/)** (**Medium**,
    **Github**) is a Data Scientist with Old Dominion University. Priya is passionate
    about solving problems in data and converting them into solutions.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Priya Sengar](https://www.linkedin.com/in/priya-sengar/)** (**Medium**,
    **Github**) 是 Old Dominion University 的数据科学家。Priya 热衷于解决数据中的问题并将其转化为解决方案。'
- en: More On This Topic
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Query Your Pandas DataFrames with SQL](https://www.kdnuggets.com/2021/10/query-pandas-dataframes-sql.html)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 SQL 查询你的 Pandas 数据框](https://www.kdnuggets.com/2021/10/query-pandas-dataframes-sql.html)'
- en: '[Combining Pandas DataFrames Made Simple](https://www.kdnuggets.com/2022/09/combining-pandas-dataframes-made-simple.html)'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将 Pandas 数据框组合变得简单](https://www.kdnuggets.com/2022/09/combining-pandas-dataframes-made-simple.html)'
- en: '[How to Merge Pandas DataFrames](https://www.kdnuggets.com/2023/01/merge-pandas-dataframes.html)'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何合并 Pandas DataFrames](https://www.kdnuggets.com/2023/01/merge-pandas-dataframes.html)'
- en: '[3 Ways to Merge Pandas DataFrames](https://www.kdnuggets.com/2023/03/3-ways-merge-pandas-dataframes.html)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[合并 Pandas DataFrames 的 3 种方法](https://www.kdnuggets.com/2023/03/3-ways-merge-pandas-dataframes.html)'
- en: '[Converting JSONs to Pandas DataFrames: Parsing Them the Right Way](https://www.kdnuggets.com/converting-jsons-to-pandas-dataframes-parsing-them-the-right-way)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将 JSON 转换为 Pandas DataFrames：正确解析的方法](https://www.kdnuggets.com/converting-jsons-to-pandas-dataframes-parsing-them-the-right-way)'
- en: '[How to Merge Large DataFrames Efficiently with Pandas](https://www.kdnuggets.com/how-to-merge-large-dataframes-efficiently-with-pandas)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何高效地使用 Pandas 合并大型 DataFrames](https://www.kdnuggets.com/how-to-merge-large-dataframes-efficiently-with-pandas)'
