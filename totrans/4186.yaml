- en: Simple Text Scraping, Parsing, and Processing with this Python Library
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用这个 Python 库进行简单的文本抓取、解析和处理
- en: 原文：[https://www.kdnuggets.com/2021/10/simple-text-scraping-parsing-processing-python-library.html](https://www.kdnuggets.com/2021/10/simple-text-scraping-parsing-processing-python-library.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/10/simple-text-scraping-parsing-processing-python-library.html](https://www.kdnuggets.com/2021/10/simple-text-scraping-parsing-processing-python-library.html)
- en: '[comments](#comments)![Figure](../Images/b28dd1fbd4a8a10b7a5abf6e3115fd20.png)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)![图像](../Images/b28dd1fbd4a8a10b7a5abf6e3115fd20.png)'
- en: Photo by [Peter Lawrence](https://unsplash.com/@chesterfordhouse?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/newspapers?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 由 [Peter Lawrence](https://unsplash.com/@chesterfordhouse?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    在 [Unsplash](https://unsplash.com/s/photos/newspapers?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    上拍摄的照片
- en: Looking for a library to help with scraping, parsing, processing, and extracting
    metadata from news articles? [**Newspaper**](https://github.com/codelucas/newspaper)
    can help. Newspaper is a "[n]ews, full-text, and article metadata extraction in
    Python 3." I would say, with the utmost respect, that Newspaper is a quick and
    dirty text parsing and processing library. It isn't foolproof, and won't always
    be able to fulfill your every need with every article. It will generally do a
    very good job, however, and do so quickly.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 寻找一个帮助抓取、解析、处理和提取新闻文章元数据的库？ [**Newspaper**](https://github.com/codelucas/newspaper)
    可以提供帮助。Newspaper 是一个 "[n]ews, full-text, and article metadata extraction in Python
    3" 库。我会以最尊敬的态度说，Newspaper 是一个快速而简单的文本解析和处理库。它不是万无一失的，并且不会总能满足你对每篇文章的所有需求。然而，它通常能非常好地完成任务，并且速度很快。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三名课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速通往网络安全职业生涯的捷径。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析水平'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织在 IT 方面'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'Let''s go ahead and get started in order to see what you can accomplish quickly
    and easily with the library. If you''re using Python 3, installation is accomplished
    with:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始，以便查看你能多快、多容易地利用这个库。如果你使用的是 Python 3，安装可以通过以下方式完成：
- en: '`pip install newspaper3k`'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip install newspaper3k`'
- en: Once installed, Newspaper is very easy to use.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 安装后，Newspaper 非常易于使用。
- en: Let's import the library, define an article on the web we want to use for processing,
    and download the article. We will use the recent KDnuggets article **[Avoid These
    Five Behaviors That Make You Look Like A Data Novice](https://www.kdnuggets.com/2021/10/avoid-five-behaviors-data-novice.html)**
    by Tessa Xie for these purposes.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们导入这个库，定义一个我们想用来处理的网页文章，并下载这篇文章。我们将使用最近的 KDnuggets 文章 **[避免这五种让你看起来像数据新手的行为](https://www.kdnuggets.com/2021/10/avoid-five-behaviors-data-novice.html)**
    来进行这些操作。
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now, let's see what we have downloaded.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看我们下载了什么。
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This is the entire HTML page for the article. This isn't very useful; let's
    take out first processing step and parse the article with Newspaper. Once we do
    so, let's print the text for the parsed article.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这是文章的整个 HTML 页面。这不是很有用；我们先移除第一个处理步骤，使用 Newspaper 解析文章。完成后，我们打印解析后的文章文本。
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: That looks better. We have removed the HTML not related to the article we downloaded,
    and have otherwise extracted the useful text from within the remaining portions
    of HTML.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来更好。我们已移除了与下载的文章无关的 HTML，并从剩余的 HTML 中提取了有用的文本。
- en: Let's see what metadata we can extract from the parsed article.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看可以从解析的文章中提取哪些元数据。
- en: '[PRE5]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: You can see from the above that some metadata has been easily extracted, while
    in the case of the publication date and authors, Newspaper has come up empty handed.
    This is what I referred to at the start of the article; the library isn't magic,
    and so if an article is not formatted in such a way that facilitates Newspaper's
    pattern matching, identification and extraction of these metadata won't happen.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 从上述内容可以看出，某些元数据已经被轻松提取，而在出版日期和作者的情况下，Newspaper 结果为空。这就是我在文章开头提到的；库并非魔法，如果文章格式不利于
    Newspaper 的模式匹配，这些元数据的识别和提取将不会发生。
- en: Find out what else you can accomplish with a parsed article [here](https://newspaper.readthedocs.io/en/latest/index.html).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 了解你可以用解析过的文章 [这里](https://newspaper.readthedocs.io/en/latest/index.html) 完成的其他任务。
- en: 'Moving on to something more interesting... once an article has been downloaded
    and parsed, it can also be processed using Newspaper''s built-in NLP capabilities,
    which is done as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是更有趣的内容……一旦下载并解析了文章，还可以使用 Newspaper 内置的 NLP 功能来处理，方法如下：
- en: '[PRE13]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Here are a few tasks we can perform on a processed article.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是我们可以对处理过的文章执行的一些任务。
- en: '[PRE14]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: This is certainly more interesting than the parsed article metadata extraction
    above, though both the processed and parsed data extracted from an article could
    certainly be useful.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这无疑比上面解析的文章元数据提取更有趣，尽管从文章中提取的处理和解析数据肯定都很有用。
- en: Keep in mind that there are numerous ways to automate the summarization an article
    with the use of a variety of different libraries and tools; however, Newspaper
    provides a way to do so that provides reasonable results, and does so in a single
    line of code without even the need for the testing of parameters. You can compare
    this with implementing a similar extractive summarization process, using a simple
    word frequency approach, in Python from scratch, in my previous article [Getting
    Started with Automated Text Summarization](https://www.kdnuggets.com/2019/11/getting-started-automated-text-summarization.html);
    you will find that significantly more code is required for similar results.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，有许多方法可以使用各种不同的库和工具来自动总结文章；然而，Newspaper 提供了一种方法，能够在一行代码中提供合理的结果，无需测试参数。你可以将其与我之前的文章
    [《自动文本总结入门》](https://www.kdnuggets.com/2019/11/getting-started-automated-text-summarization.html)
    中使用简单词频方法在 Python 中实现类似的提取总结过程进行比较，你会发现需要更多的代码来获得类似的结果。
- en: 'Interested in only leveraging Newspaper''s summarization functionality? Here''s
    a quick, self-contained example:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 只对利用 Newspaper 的总结功能感兴趣？这是一个快速的、自包含的示例：
- en: '[PRE18]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: And there you have it.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样。
- en: Find out what more you can accomplish with a processed article [here](https://newspaper.readthedocs.io/en/latest/index.html).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 了解更多你可以用处理过的文章 [这里](https://newspaper.readthedocs.io/en/latest/index.html) 完成的任务。
- en: Newspaper isn't perfect and has its limitations, but you can see how quickly
    and easily it can be invoked and leveraged, and how useful it can be even in cases
    where some of its limitations are met. Personally, I have written my own code
    to perform a number of the steps above, and have also leveraged several different
    libraries to accomplish some of the others, generally with more elbow grease needed
    to do so.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Newspaper 并不完美，存在一些限制，但你可以看到它调用和利用的速度和简便程度，即使在遇到一些限制的情况下也很有用。就个人而言，我编写了自己的代码来执行上述步骤中的许多任务，并且还利用了几个不同的库来完成其他任务，通常需要更多的努力。
- en: There is actually much more you can accomplish with the library, and I encourage
    you to [investigate the possibilities](https://newspaper.readthedocs.io/en/latest/index.html).
    Hopefully you are able to use Newspaper for your own projects.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，你可以用这个库完成更多的任务，我鼓励你 [调查可能性](https://newspaper.readthedocs.io/en/latest/index.html)。希望你能够在自己的项目中使用
    Newspaper。
- en: '**Related**:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关**：'
- en: '[Simple Question Answering Web App with HuggingFace Pipelines](/2021/10/simple-question-answering-web-app-hugging-face-pipelines.html)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 HuggingFace Pipelines 的简单问答 Web 应用](/2021/10/simple-question-answering-web-app-hugging-face-pipelines.html)'
- en: '[Applied Language Technology: A No-Nonsense Approach](/2021/06/applied-language-technology.html)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[应用语言技术：实用方法](/2021/06/applied-language-technology.html)'
- en: '[Date Processing and Feature Engineering in Python](/2021/07/date-pre-processing-feature-engineering-python.html)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 中的日期处理和特征工程](/2021/07/date-pre-processing-feature-engineering-python.html)'
- en: More On This Topic
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关主题
- en: '[Converting JSONs to Pandas DataFrames: Parsing Them the Right Way](https://www.kdnuggets.com/converting-jsons-to-pandas-dataframes-parsing-them-the-right-way)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将 JSON 转换为 Pandas DataFrame：正确解析它们](https://www.kdnuggets.com/converting-jsons-to-pandas-dataframes-parsing-them-the-right-way)'
- en: '[A Step-by-Step Guide to Web Scraping with Python and Beautiful Soup](https://www.kdnuggets.com/2023/04/stepbystep-guide-web-scraping-python-beautiful-soup.html)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 和 Beautiful Soup 进行网页抓取的逐步指南](https://www.kdnuggets.com/2023/04/stepbystep-guide-web-scraping-python-beautiful-soup.html)'
- en: '[A Beginner’s Guide to Web Scraping Using Python](https://www.kdnuggets.com/2022/10/beginner-guide-web-scraping-python.html)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 进行网页抓取的初学者指南](https://www.kdnuggets.com/2022/10/beginner-guide-web-scraping-python.html)'
- en: '[Octoparse 8.5: Empowering Local Scraping and More](https://www.kdnuggets.com/2022/02/octoparse-85-empowering-local-scraping.html)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Octoparse 8.5：增强本地抓取及更多功能](https://www.kdnuggets.com/2022/02/octoparse-85-empowering-local-scraping.html)'
- en: '[Introducing the Testing Library for Natural Language Processing](https://www.kdnuggets.com/2023/04/introducing-testing-library-natural-language-processing.html)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[介绍自然语言处理的测试库](https://www.kdnuggets.com/2023/04/introducing-testing-library-natural-language-processing.html)'
- en: '[How to Use the Hugging Face Tokenizers Library to Preprocess Text Data](https://www.kdnuggets.com/how-to-use-the-hugging-face-tokenizers-library-to-preprocess-text-data)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何使用 Hugging Face Tokenizers 库来预处理文本数据](https://www.kdnuggets.com/how-to-use-the-hugging-face-tokenizers-library-to-preprocess-text-data)'
