- en: Fast and Intuitive Statistical Modeling with Pomegranate
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Pomegranate 进行快速而直观的统计建模
- en: 原文：[https://www.kdnuggets.com/2020/12/fast-intuitive-statistical-modeling-pomegranate.html](https://www.kdnuggets.com/2020/12/fast-intuitive-statistical-modeling-pomegranate.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/12/fast-intuitive-statistical-modeling-pomegranate.html](https://www.kdnuggets.com/2020/12/fast-intuitive-statistical-modeling-pomegranate.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: What is Pomegranate?
  id: totrans-3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 什么是 Pomegranate？
- en: First and foremost, it is a delicious fruit.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，它是一种美味的水果。
- en: '![Figure](../Images/c763727dc1da12b587b94061e7bd3bd0.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/c763727dc1da12b587b94061e7bd3bd0.png)'
- en: Image source: [Pixabay](https://pixabay.com/photos/pomegranate-fruit-seeds-food-fresh-3259161/) (Free
    for commercial use)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 图像来源：[Pixabay](https://pixabay.com/photos/pomegranate-fruit-seeds-food-fresh-3259161/)（可商用）
- en: But there is a double delight for fruit-lover data scientists!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 但对于喜爱水果的数据科学家来说，还有双重的惊喜！
- en: It is also [a Python package](https://pomegranate.readthedocs.io/en/latest/index.html) that
    implements fast and flexible probabilistic models ranging from individual probability
    distributions to compositional models such as [**Bayesian networks**](https://en.wikipedia.org/wiki/Bayesian_network) and [**Hidden
    Markov Models**](https://en.wikipedia.org/wiki/Hidden_Markov_model).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是一个 [Python 包](https://pomegranate.readthedocs.io/en/latest/index.html)，实现了从单一概率分布到如
    [**贝叶斯网络**](https://en.wikipedia.org/wiki/Bayesian_network) 和 [**隐马尔可夫模型**](https://en.wikipedia.org/wiki/Hidden_Markov_model)
    等组合模型的快速灵活的概率模型。
- en: The central idea behind this package is that **all probabilistic models can
    be viewed as a probability distribution. **That means they all yield probability
    estimates for samples and can be updated/fitted given samples and their associated
    weights. The primary consequence of this realization is that the implemented classes
    can be stacked and chained more flexibly than those available from other common
    packages.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这个包的核心思想是 **所有概率模型都可以视为一个概率分布。** 这意味着它们都为样本提供概率估计，并且可以根据样本及其相关权重进行更新/拟合。这个认识的主要后果是，实施的类可以比其他常见包提供的类更灵活地堆叠和链式连接。
- en: What’s different from Scipy or Numpy?
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 与 Scipy 或 Numpy 有何不同？
- en: This is a fair question. However, you will see that the implemented classes
    in the Pomegranate package are super intuitive and have uniform interfaces although
    they cover a wide range of statistical modeling aspects,
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这是个公平的问题。然而，你会发现 Pomegranate 包中的实现类非常直观，尽管它们涵盖了广泛的统计建模方面，但接口却很统一。
- en: General distributions
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常见分布
- en: Markov chains
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 马尔可夫链
- en: Bayesian networks
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 贝叶斯网络
- en: Hidden Markov Models
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐马尔可夫模型
- en: Bayes classifier
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 贝叶斯分类器
- en: It is like having useful methods from multiple Python libraries together with
    a uniform and intuitive API.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这就像将多个 Python 库中的有用方法结合在一起，拥有一个统一而直观的 API。
- en: Let us see some cool usage of this nifty little package.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这个巧妙的小包的一些酷炫用法。
- en: Probability distributions
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 概率分布
- en: Let is initialize with a `NormalDistribution` class.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用 `NormalDistribution` 类来初始化。
- en: '![Image for post](../Images/703465a91389ed5457606cff8252a516.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图像](../Images/703465a91389ed5457606cff8252a516.png)'
- en: Generate a few samples,
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 生成几个样本，
- en: '![Image for post](../Images/ad5bcb1ff9b1d91e8dc2b6e9e90b22d6.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图像](../Images/ad5bcb1ff9b1d91e8dc2b6e9e90b22d6.png)'
- en: We can, now, easily check the probability of a sample data point (or an array
    of them) belonging to this distribution,
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以轻松检查一个样本数据点（或它们的数组）属于此分布的概率。
- en: '![Image for post](../Images/db8cb522d3cc5baa34e5988a56350053.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图像](../Images/db8cb522d3cc5baa34e5988a56350053.png)'
- en: Fitting data
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据拟合
- en: This is where it gets more interesting. Fitting with a data sample is super
    easy and fast.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是更有趣的地方。用数据样本进行拟合非常简单和快速。
- en: As initialized above, we can check the parameters (mean and std. dev) of the `n1` object.
    We expect them to be 5.0 and 2.0.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所初始化，我们可以检查 `n1` 对象的参数（均值和标准差）。我们期望它们为 5.0 和 2.0。
- en: '![Image for post](../Images/6a1cfdf759de6d173fe69898f8172835.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图像](../Images/6a1cfdf759de6d173fe69898f8172835.png)'
- en: Now, let us create some synthetic data by adding random noise to a Gaussian.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们通过向高斯分布中添加随机噪声来创建一些合成数据。
- en: '![Figure](../Images/c5993281371810a23c1b2e782ab25ee5.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/c5993281371810a23c1b2e782ab25ee5.png)'
- en: Image generated by the author
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图像由作者生成
- en: We can fir this new data to the `n1` object and then check the estimated parameters.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将这组新数据拟合到 `n1` 对象中，然后检查估计的参数。
- en: '![Image for post](../Images/7c658d2d264e526dcf5c8c368257a455.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图像](../Images/7c658d2d264e526dcf5c8c368257a455.png)'
- en: Phew! It looks like that `n1` has updated its estimated mean and std.dev parameters
    to match with the input data now. The peak of the histogram is close to 4.0 from
    the plot and that’s what the estimated mean shows.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 呼！看来 `n1` 已经更新了其估计的均值和标准差参数以匹配输入数据。直方图的峰值接近于图中的 4.0，这也正是估计的均值所显示的。
- en: Create the distribution directly from a data sample
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从数据样本直接创建分布
- en: We showed how to fit data to a distribution class. Alternatively, one can create
    the object directly from the data,
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们展示了如何将数据拟合到分布类。或者，可以直接从数据创建对象，
- en: '![Image for post](../Images/bc0cd9e59ce71876e85f096f5ae09646.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![Image for post](../Images/bc0cd9e59ce71876e85f096f5ae09646.png)'
- en: Plotting (histogram) is natively supported
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原生支持绘图（直方图）
- en: Plotting is easy on the distribution class with the `plot()` method, which also
    supports all the keywords for a Matplotlib histogram method. We illustrate by
    plotting a Beta distribution object.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `plot()` 方法在分布类上绘图很简单，该方法还支持 Matplotlib 直方图方法的所有关键字。我们通过绘制 Beta 分布对象来进行说明。
- en: '![Figure](../Images/a229ebbbe710bb318cda2780f75080b7.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![Figure](../Images/a229ebbbe710bb318cda2780f75080b7.png)'
- en: Image generated by the author
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 作者生成的图像
- en: Discrete distribution
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 离散分布
- en: This is where it gets more interesting. Instead of passing parameters to a known
    statistical distribution (e.g. Normal or Beta), you can pass in a **dictionary** where
    keys can be ***any objects*** and values are the corresponding probabilities.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这就更有趣了。你可以传递一个**字典**，其中键可以是***任何对象***，值是相应的概率，而不是将参数传递给已知的统计分布（例如正态分布或贝塔分布）。
- en: Here is an illustration with some Hogwarts characters. Note, **when we try to
    calculate the probability of ‘Hagrid’, we get a flat zero** because the distribution
    does not have any finite probability for the ‘Hagrid’ object.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一些霍格沃茨角色的插图。注意，**当我们尝试计算‘海格’的概率时，我们得到一个平坦的零**，因为分布对‘海格’对象没有任何有限的概率。
- en: '![Image for post](../Images/756bc6090c3e728c4149c6b0dfd076a2.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![Image for post](../Images/756bc6090c3e728c4149c6b0dfd076a2.png)'
- en: Fitting data to a discrete distribution
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将数据拟合到离散分布
- en: We can do much more interesting things by fitting data to a discrete distribution
    object. Here is an example with a fictitious DNA nucleic acid sequence. It is
    common to have this type of sequence data in a string, and we can read the data
    and calculate the probabilities of the four nucleic acids in the sequence with
    simple code.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将数据拟合到离散分布对象，我们可以做更有趣的事情。这是一个虚构的 DNA 核酸序列的例子。通常，这种类型的序列数据以字符串形式存在，我们可以用简单的代码读取数据并计算序列中四种核酸的概率。
- en: '![Image for post](../Images/323bfd09209999834b0c5979ba65cdfe.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![Image for post](../Images/323bfd09209999834b0c5979ba65cdfe.png)'
- en: A simple DNA sequence matching application
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一个简单的 DNA 序列匹配应用
- en: We can write an extremely simple (and naive) DNA sequence matching application
    in just a few lines of code. The assumption is that the** sequences, which have
    similar frequencies/probabilities of nucleic acids, are closer to each other**.
    Somewhat arbitrarily, we choose to calculate the root-mean-square-distance for
    this distance metric.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用极其简单（且天真的）几行代码编写一个 DNA 序列匹配应用。假设** 序列中核酸的频率/概率相似的越接近**。有些随意，我们选择计算这种距离度量的均方根距离。
- en: You can look at the [Jupyter notebook](https://github.com/tirthajyoti/Stats-Maths-with-Python/blob/master/Pomegranate.ipynb) for
    the helper function and the exact code, but here is a sample output.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以查看 [Jupyter notebook](https://github.com/tirthajyoti/Stats-Maths-with-Python/blob/master/Pomegranate.ipynb) 获取帮助函数和确切的代码，但这里是一个示例输出。
- en: '![Image for post](../Images/41e20711244ff6980df8d267a261e3b4.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![Image for post](../Images/41e20711244ff6980df8d267a261e3b4.png)'
- en: Gaussian Mixture Models
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 高斯混合模型
- en: Pomegranate makes working with data, coming from multiple Gaussian distributions,
    easy.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Pomegranate 使处理来自多个高斯分布的数据变得简单。
- en: Let’s create some synthetic data,
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一些合成数据，
- en: '![Figure](../Images/0e2981d673fa702e3dd1e3afab1dc9d7.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![Figure](../Images/0e2981d673fa702e3dd1e3afab1dc9d7.png)'
- en: Image generated by the author
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 作者生成的图像
- en: As usual, we can create a model directly from the data with one line of code.
    When we print the estimated parameters of the model, we observe that it has captured
    the ground truth (the parameters of the generator distributions) pretty well.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，我们可以用一行代码直接从数据创建模型。当我们打印模型的估计参数时，我们观察到它捕捉了真实情况（生成器分布的参数）相当准确。
- en: '![Image for post](../Images/6b39f4d7d708a32e5c4fcf59a6d2c21d.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![Image for post](../Images/6b39f4d7d708a32e5c4fcf59a6d2c21d.png)'
- en: Once the model is generated with data samples, we can calculate the probabilities
    and plot them easily. The code is in the [Notebook](https://github.com/tirthajyoti/Stats-Maths-with-Python/blob/master/Pomegranate.ipynb),
    here is the illustrative plot — the left side shows a single Gaussian, and the
    right-side shows a Mixture Model.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦模型通过数据样本生成后，我们可以轻松计算概率并绘制图表。代码在 [Notebook](https://github.com/tirthajyoti/Stats-Maths-with-Python/blob/master/Pomegranate.ipynb)中，下面是说明性的图表——左侧显示了一个单一的高斯分布，右侧显示了混合模型。
- en: '![Figure](../Images/5afcdba8190d030088333622206e0012.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图形](../Images/5afcdba8190d030088333622206e0012.png)'
- en: Image generated by the author
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 由作者生成的图像
- en: Markov Chain
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 马尔可夫链
- en: We can easily model a simple Markov chain with Pomegranate and calculate the
    probability of any given sequence.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以轻松地使用 Pomegranate 建模一个简单的马尔可夫链，并计算任何给定序列的概率。
- en: We will have the quintessential rainy-cloudy-sunny example for this one. Here
    is the transition probability table,
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个示例，我们将使用典型的雨天-阴天-晴天的例子。以下是转换概率表，
- en: '![Image for post](../Images/914f7bed0b3dce6fe89753a53ea901a1.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图片](../Images/914f7bed0b3dce6fe89753a53ea901a1.png)'
- en: '![Figure](../Images/a4609561aa136af2688d48e3eb90d48d.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图形](../Images/a4609561aa136af2688d48e3eb90d48d.png)'
- en: Image generated by the author
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 由作者生成的图像
- en: We also know that, on average, there are 20% rainy days, 50% sunny days, and
    30% cloudy days. We encode both the discrete distribution and the transition matrix
    in the `MarkovChain` class,
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还知道，平均而言，有20%的雨天，50%的晴天和30%的阴天。我们在 `MarkovChain` 类中编码了离散分布和转换矩阵，
- en: '![Image for post](../Images/d263fea7b5fa5d2f6e8fa10559c82617.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图片](../Images/d263fea7b5fa5d2f6e8fa10559c82617.png)'
- en: Now, we can calculate the probability of any given sequence using this object.
    For example, if you look at the table above, you can convince yourself that **a
    sequence like “*Cloudy-Rainy-Cloudy*” has a high likelihood whereas a sequence
    like “*Rainy-Sunny-Rainy-Sunny*” is unlikely to show up**. We can confirm this
    with precise probability calculations (we take logarithm to handle small probability
    numbers),
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用这个对象计算任何给定序列的概率。例如，如果你查看上面的表格，你可以相信**像“*阴天-雨天-阴天*”这样的序列具有较高的可能性，而像“*雨天-晴天-雨天-晴天*”这样的序列不太可能出现**。我们可以通过精确的概率计算来确认这一点（我们取对数来处理小概率数值），
- en: '![Image for post](../Images/6dce0ded2aab26e85c87c684046346e1.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图片](../Images/6dce0ded2aab26e85c87c684046346e1.png)'
- en: Fitting data to a GMM class
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据拟合到 GMM 类
- en: We write a small function to generate a random sequence of rainy-cloudy-sunny
    days and feed that to the GMM class.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们编写了一个小函数来生成随机的雨天-阴天-晴天序列，并将其输入到 GMM 类中。
- en: '![Image for post](../Images/3a0b35730c28dad0ff586cb9670f763b.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图片](../Images/3a0b35730c28dad0ff586cb9670f763b.png)'
- en: First, we feed this data for 14 days’ observation— “Rainy-Sunny-Rainy-Sunny-Rainy-Sunny-Rainy-Rainy-Sunny-Sunny-Sunny-Rainy-Sunny-Cloudy”.
    The probability transition table is calculated for us.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们为14天的观察数据提供——“雨天-晴天-雨天-晴天-雨天-晴天-雨天-雨天-晴天-晴天-晴天-雨天-晴天-阴天”。为我们计算了概率转换表。
- en: '![Image for post](../Images/2af80fb6e4d3310f0099d575073acdb0.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图片](../Images/2af80fb6e4d3310f0099d575073acdb0.png)'
- en: If we generate a random sequence of 10 years i.e. 3650 days, then we get the
    following table. **Because our random generator is uniform, as per the characteristic
    of a Markov Chain, the transition probabilities will assume limiting values of
    ~0.333** each.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们生成一个10年的随机序列，即3650天，那么我们得到以下表格。**由于我们的随机生成器是均匀的，根据马尔可夫链的特性，转换概率将假设约0.333的极限值**。
- en: '![Image for post](../Images/3b4088637259d45c6ead59283ddaffcb.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图片](../Images/3b4088637259d45c6ead59283ddaffcb.png)'
- en: Hidden Markov Model
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 隐马尔可夫模型
- en: There are a lot of cool things you can do with the HMM class in Pomegranate.
    Here, we just show a small example of **detecting the high-density occurrence
    of a sub-sequence within a long string** using HMM predictions.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Pomegranate 中的 HMM 类，你可以做很多酷的事情。这里，我们只是展示了一个小示例，通过 HMM 预测**检测长字符串中子序列的高密度出现**。
- en: Let’s say we are recording the names of four characters in a Harry Potter novel
    as they appear one after another in a chapter, and we are interested in detecting
    some portion where Harry and Dumbledore are appearing together. However, because
    they may be conversing and may mention Ron or Hagrid’s names in these portions,
    the sub-sequence is not clean i.e. it does not strictly contain Harry and Dumbledore’s
    names.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们记录了《哈利·波特》小说中四个角色的名字，它们在一章中一个接一个地出现，我们对检测哈利和邓布利多一起出现的部分感兴趣。然而，由于他们可能会交谈并在这些部分提到罗恩或海格的名字，因此子序列并不干净，即不严格包含哈利和邓布利多的名字。
- en: '![Figure](../Images/d5af1845d9a8c8181c501ecde5b111f7.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/d5af1845d9a8c8181c501ecde5b111f7.png)'
- en: Image Collage created by author from Wikimedia Commons and Pixabay images
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图片拼贴由作者从 Wikimedia Commons 和 Pixabay 图片创建
- en: Following code initiates a uniform probability distribution, a skewed probability
    distribution, two states with names, and the HMM model with these states.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码初始化了一个均匀概率分布，一个偏斜概率分布，两个具有名称的状态，以及一个包含这些状态的 HMM 模型。
- en: '![Image for post](../Images/81f86a6c986642934159c8ea4342ce8c.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![文章图片](../Images/81f86a6c986642934159c8ea4342ce8c.png)'
- en: Then, we need to add the state transition probabilities and ‘bake’ the model
    for finalizing the internal structure. Note the **high self-loop probabilities** for
    the transition i.e. the states tend to stay in their current state with high likelihood.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要添加状态转移概率，并“烘焙”模型以最终确定内部结构。请注意**高自环概率**，即状态倾向于以高概率停留在当前状态。
- en: '![Image for post](../Images/ef435a6fa8d69e8298f815a3724ad55d.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![文章图片](../Images/ef435a6fa8d69e8298f815a3724ad55d.png)'
- en: Now, we have an observed sequence and we will feed this to the HMM model as
    an argument to the `predict` method. The transition and emission probabilities
    will be calculated and a sequence of 1’s and 0’s will be predicted where we can **notice
    the island of 0’s indicating the portion rich with the appearance of ‘Harry-Dumbledore’
    together**.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们有一个观测序列，我们将其作为参数传递给 HMM 模型的`predict`方法。转移和发射概率将被计算，并且会预测出一系列 1 和 0，我们可以**注意到
    0 的岛屿，表示包含“哈利-邓布利多”出现的部分**。
- en: '![Image for post](../Images/5b1e4faed165ad47cb74d05a8862243c.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![文章图片](../Images/5b1e4faed165ad47cb74d05a8862243c.png)'
- en: Summary
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结
- en: In this article, we introduced a fast and intuitive statistical modeling library
    called Pomegranate and showed some interesting usage examples. Many more tutorials
    can be found here. Examples in this article were also inspired by these tutorials.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们介绍了一个快速且直观的统计建模库 Pomegranate，并展示了一些有趣的使用示例。更多教程可以在这里找到。本文中的示例也受到这些教程的启发。
- en: '[**Pomegranate Tutorials from their Github repo**](https://github.com/jmschrei/pomegranate/tree/master/tutorials)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[**Pomegranate 的 GitHub 仓库教程**](https://github.com/jmschrei/pomegranate/tree/master/tutorials)'
- en: The library offers utility classes from various statistical domains — general
    distributions, Markov chain, Gaussian Mixture Models, Bayesian networks — with
    uniform API that can be instantiated quickly with observed data and then can be
    used for parameter estimation, probability calculations, and predictive modeling.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 该库提供了来自各种统计领域的实用类——一般分布、马尔可夫链、高斯混合模型、贝叶斯网络——具有统一的 API，可以快速实例化观察到的数据，并用于参数估计、概率计算和预测建模。
- en: You can check the author’s [**GitHub**](https://github.com/tirthajyoti?tab=repositories)** repositories **for
    code, ideas, and resources in machine learning and data science. If you are, like
    me, passionate about AI/machine learning/data science, please feel free to [add
    me on LinkedIn](https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/) or [follow
    me on Twitter](https://twitter.com/tirthajyotiS).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以查看作者的[**GitHub**](https://github.com/tirthajyoti?tab=repositories)**仓库**，获取机器学习和数据科学方面的代码、想法和资源。如果你和我一样，对人工智能/机器学习/数据科学充满热情，请随时[在
    LinkedIn 上添加我](https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/)或[在 Twitter
    上关注我](https://twitter.com/tirthajyotiS)。
- en: '[**Tirthajyoti Sarkar - Sr. Principal Engineer - Semiconductor, AI, Machine
    Learning**](https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[**Tirthajyoti Sarkar - 高级首席工程师 - 半导体、人工智能、机器学习**](https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/)'
- en: Making data science/ML concepts easy to understand through writing
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 通过写作使数据科学/机器学习概念易于理解
- en: '[Original](https://towardsdatascience.com/statistical-modeling-with-pomegranate-fast-and-intuitive-4d605d9c33a9).
    Reposted with permission.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/statistical-modeling-with-pomegranate-fast-and-intuitive-4d605d9c33a9)。经许可转载。'
- en: '**Related:**'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关内容：**'
- en: '[Overview of data distributions](/2020/06/overview-data-distributions.html)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据分布概述](/2020/06/overview-data-distributions.html)'
- en: '[Before Probability Distributions](/2020/07/before-probability-distributions.html)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[概率分布之前](/2020/07/before-probability-distributions.html)'
- en: '[Comparing Machine Learning Models: Statistical vs. Practical Significance](/2019/01/comparing-machine-learning-models-statistical-vs-practical-significance.html)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比较机器学习模型：统计显著性与实际显著性](/2019/01/comparing-machine-learning-models-statistical-vs-practical-significance.html)'
- en: More On This Topic
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Support Vector Machines: An Intuitive Approach](https://www.kdnuggets.com/2022/08/support-vector-machines-intuitive-approach.html)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[支持向量机：一种直观的方法](https://www.kdnuggets.com/2022/08/support-vector-machines-intuitive-approach.html)'
- en: '[An Intuitive Explanation of Collaborative Filtering](https://www.kdnuggets.com/2022/09/intuitive-explanation-collaborative-filtering.html)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[协同过滤的直观解释](https://www.kdnuggets.com/2022/09/intuitive-explanation-collaborative-filtering.html)'
- en: '[Simple and Fast Data Streaming for Machine Learning Projects](https://www.kdnuggets.com/2022/11/simple-fast-data-streaming-machine-learning-projects.html)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[机器学习项目的简单快速数据流处理](https://www.kdnuggets.com/2022/11/simple-fast-data-streaming-machine-learning-projects.html)'
- en: '[The Fast and Effective Way to Audit ML for Fairness](https://www.kdnuggets.com/2023/01/fast-effective-way-audit-ml-fairness.html)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[快速有效的机器学习公平性审计方法](https://www.kdnuggets.com/2023/01/fast-effective-way-audit-ml-fairness.html)'
- en: '[How Fast Can BERT Go With Sparsity?](https://www.kdnuggets.com/2022/04/fast-bert-go-sparsity.html)'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[BERT在稀疏性下的最快速度是多少？](https://www.kdnuggets.com/2022/04/fast-bert-go-sparsity.html)'
- en: '[Speed up Machine Learning with Fast Kriging (FKR)](https://www.kdnuggets.com/2022/06/vmc-speed-machine-learning-fast-kriging.html)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通过快速克里金法（FKR）加速机器学习](https://www.kdnuggets.com/2022/06/vmc-speed-machine-learning-fast-kriging.html)'
