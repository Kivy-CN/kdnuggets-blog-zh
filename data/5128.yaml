- en: Getting Started with SQL in 5 Steps
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SQL入门五步骤
- en: 原文：[https://www.kdnuggets.com/5-steps-getting-started-with-sql](https://www.kdnuggets.com/5-steps-getting-started-with-sql)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/5-steps-getting-started-with-sql](https://www.kdnuggets.com/5-steps-getting-started-with-sql)
- en: '![Getting Started with SQL in 5 Steps](../Images/fa59cd914bdc8e4ddf8c87a652f631d5.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![SQL入门五步骤](../Images/fa59cd914bdc8e4ddf8c87a652f631d5.png)'
- en: Introduction to Structured Query Language
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结构化查询语言简介
- en: '* * *'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速入门网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织IT工作'
- en: '* * *'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: When it comes to managing and manipulating data in relational databases, Structured
    Query Language (SQL) is the biggest name in the game. SQL is a major domain-specific
    language which serves as the cornerstone for database management, and which provides
    a standardized way to interact with databases. With data being the driving force
    behind decision-making and innovation, SQL remains an essential technology demanding
    top-level attention from data analysts, developers, and data scientists.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在关系型数据库中管理和操作数据时，结构化查询语言（SQL）是最重要的工具。SQL是一个主要的领域特定语言，它是数据库管理的基石，并提供了一种与数据库交互的标准化方式。随着数据驱动决策和创新的力量，SQL仍然是一个至关重要的技术，需要数据分析师、开发人员和数据科学家给予高度关注。
- en: SQL was originally developed by IBM in the 1970s, and became standardized by
    ANSI and ISO in the late 1980s. All types of organizations — from small businesses
    to universities to major corporations — rely on SQL databases such as MySQL, SQL
    Server, and PostgreSQL to handle large-scale data. SQL's importance continues
    to grow with the expansion of data-driven industries. Its universal application
    makes it a vital skill for various professionals, in the data realm and beyond.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: SQL最初由IBM于1970年代开发，并在1980年代末由ANSI和ISO标准化。各种类型的组织——从小型企业到大学，再到大型公司——都依赖于如MySQL、SQL
    Server和PostgreSQL等SQL数据库来处理大规模数据。随着数据驱动行业的扩展，SQL的重要性不断增长。其普遍应用使其成为各种专业人士在数据领域及其他领域的关键技能。
- en: 'SQL allows users to perform various data-related tasks, including:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: SQL允许用户执行各种数据相关任务，包括：
- en: Querying data
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询数据
- en: Inserting new records
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插入新记录
- en: Updating existing records
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新现有记录
- en: Deleting records
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除记录
- en: Creating and modifying tables
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和修改表
- en: This tutorial will offer a step-by-step walkthrough of SQL, focusing on getting
    started with extensive hands-on examples.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程将提供SQL的逐步讲解，重点是通过大量的实操示例开始学习。
- en: 'Step 1: Setting Up Your SQL Environment'
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一步：设置你的SQL环境
- en: Choosing a SQL Database Management System (DBMS)
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择SQL数据库管理系统（DBMS）
- en: Before diving into SQL queries, you'll need to choose a database management
    system (DBMS) that suits your project's needs. The DBMS serves as the backbone
    for your SQL activities, offering different features, performance optimizations,
    and pricing models. Your choice of a DBMS can have a significant impact on how
    you interact with your data.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入SQL查询之前，你需要选择一个适合你项目需求的数据库管理系统（DBMS）。DBMS是你SQL活动的支柱，提供不同的功能、性能优化和定价模型。你对DBMS的选择会显著影响你与数据的互动方式。
- en: '**MySQL**: Open source, widely adopted, used by Facebook and Google. Suitable
    for a variety of applications, from small projects to enterprise-level applications.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MySQL**：开源，广泛采用，被Facebook和Google使用。适用于从小项目到企业级应用的各种应用。'
- en: '**PostgreSQL**: Open source, robust features, used by Apple. Known for its
    performance and standards compliance.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PostgreSQL**：开源，功能强大，被Apple使用。以其性能和标准遵从性而闻名。'
- en: '**SQL Server Express**: Microsoft''s entry-level option. Ideal for small to
    medium applications with limited requirements for scalability.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SQL Server Express**：微软的入门级选项。适用于具有有限扩展需求的小型到中型应用程序。'
- en: '**SQLite**: Lightweight, serverless, and self-contained. Ideal for mobile apps
    and small projects.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SQLite**：轻量级、无服务器、自包含。非常适合移动应用和小型项目。'
- en: Installation Guide for MySQL
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MySQL 安装指南
- en: 'For the sake of this tutorial, we will focus on MySQL due to its widespread
    usage and comprehensive feature set. Installing MySQL is a straightforward process:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为了本教程的目的，我们将重点介绍 MySQL，因为它的使用广泛且功能全面。安装 MySQL 是一个简单的过程：
- en: Visit [MySQL's website](https://dev.mysql.com/downloads/mysql/) and download
    the installer appropriate for your operating system.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 [MySQL 的网站](https://dev.mysql.com/downloads/mysql/) 并下载适合你操作系统的安装程序。
- en: Run the installer, following the on-screen instructions.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行安装程序，按照屏幕上的指示操作。
- en: During the setup, you will be prompted to create a root account. Make sure to
    remember or securely store the root password.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在设置过程中，你会被要求创建一个 root 帐户。请确保记住或安全存储 root 密码。
- en: Once installation is complete, you can access the MySQL shell by opening a terminal
    and typing `mysql -u root -p`. You'll be prompted to enter the root password.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，你可以通过打开终端并输入 `mysql -u root -p` 来访问 MySQL shell。系统会提示你输入 root 密码。
- en: After successful login, you'll be greeted with the MySQL prompt, indicating
    that your MySQL server is up and running.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 成功登录后，你将看到 MySQL 提示符，表示你的 MySQL 服务器正在运行。
- en: Setting Up a SQL IDE
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 SQL IDE
- en: An Integrated Development Environment (IDE) can significantly enhance your SQL
    coding experience by providing features like auto-completion, syntax highlighting,
    and database visualization. An IDE is not strictly necessary for running SQL queries,
    but it is highly recommended for more complex tasks and larger projects.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 集成开发环境 (IDE) 可以显著提升你的 SQL 编程体验，提供如自动补全、语法高亮和数据库可视化等功能。虽然运行 SQL 查询不一定需要 IDE，但对于更复杂的任务和大型项目，IDE
    是强烈推荐的。
- en: '**[DBeaver](https://dbeaver.io/)**: Open source and supports a wide range of
    DBMS, including MySQL, PostgreSQL, SQLite, and SQL Server.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[DBeaver](https://dbeaver.io/)**：开源，并支持广泛的 DBMS，包括 MySQL、PostgreSQL、SQLite
    和 SQL Server。'
- en: '**[MySQL Workbench](https://www.mysql.com/products/workbench/)**: Developed
    by Oracle, this is the official IDE for MySQL and offers comprehensive tools tailored
    for MySQL.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[MySQL Workbench](https://www.mysql.com/products/workbench/)**：由 Oracle 开发，这是
    MySQL 的官方 IDE，提供了专门为 MySQL 量身定制的全面工具。'
- en: After downloading and installing your chosen IDE, you'll need to connect it
    to your MySQL server. This usually involves specifying the server's IP address
    (`localhost` if the server is on your machine), the port number (usually 3306
    for MySQL), and the credentials for an authorized database user.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 下载并安装你选择的 IDE 后，你需要将其连接到你的 MySQL 服务器。这通常涉及指定服务器的 IP 地址（如果服务器在你的机器上则为 `localhost`）、端口号（通常
    MySQL 的端口号为 3306）以及授权数据库用户的凭据。
- en: Testing Your Setup
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试你的设置
- en: 'Let''s make sure that everything is working correctly. You can do this by running
    a simple SQL query to display all existing databases:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们确保一切正常工作。你可以通过运行一个简单的 SQL 查询来显示所有现有的数据库来做到这一点：
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If this query returns a list of databases, and no errors, then congratulations!
    Your SQL environment has been successfully set up, and you are ready to start
    SQL programming.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这个查询返回一个数据库列表，并且没有错误，那么恭喜你！你的 SQL 环境已经成功设置好，你可以开始 SQL 编程了。
- en: 'Step 2: Basic SQL Syntax and Commands'
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 步骤 2：基本 SQL 语法和命令
- en: Creating a Database and Tables
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建数据库和表
- en: 'Before adding or manipulating data, you will first need both a database and
    one table, at minimum. Creating a database and a table is accomplished by:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在添加或操作数据之前，你首先需要一个数据库和至少一个表。创建数据库和表的方法如下：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Manipulating Data
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作数据
- en: 'Now you are ready for data manipulation. Let''s have a look at the basic [CRUD
    operations](https://en.wikipedia.org/wiki/Create,_read,_update_and_delete):'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经准备好进行数据操作。让我们看看基本的 [CRUD 操作](https://en.wikipedia.org/wiki/Create,_read,_update_and_delete)：
- en: 'Insert: `INSERT INTO customers (name, email) VALUES (''John Doe'', ''john@email.com'');`'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插入：`INSERT INTO customers (name, email) VALUES ('John Doe', 'john@email.com');`
- en: 'Query: `SELECT * FROM customers;`'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询：`SELECT * FROM customers;`
- en: 'Update: `UPDATE customers SET email = ''john@newemail.com'' WHERE id = 1;`'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新：`UPDATE customers SET email = 'john@newemail.com' WHERE id = 1;`
- en: 'Delete: `DELETE FROM customers WHERE id = 1;`'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除：`DELETE FROM customers WHERE id = 1;`
- en: Filtering and Sorting
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 过滤和排序
- en: Filtering in SQL involves using conditions to selectively retrieve rows from
    a table, often using the `WHERE` clause. Sorting in SQL arranges the retrieved
    data in a specific order, typically using the `ORDER BY` clause. Pagination in
    SQL divides the result set into smaller chunks, displaying a limited number of
    rows per page.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: SQL 中的过滤涉及使用条件选择性地检索表中的行，通常使用 `WHERE` 子句。SQL 中的排序将检索到的数据按特定顺序排列，通常使用 `ORDER
    BY` 子句。SQL 中的分页将结果集划分为更小的块，每页显示有限数量的行。
- en: 'Filter: `SELECT * FROM customers WHERE name = ''John Doe'';`'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过滤：`SELECT * FROM customers WHERE name = 'John Doe';`
- en: 'Sort: `SELECT * FROM customers ORDER BY name ASC;`'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 排序：`SELECT * FROM customers ORDER BY name ASC;`
- en: 'Paginate: `SELECT * FROM customers LIMIT 10 OFFSET 20;`'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分页：`SELECT * FROM customers LIMIT 10 OFFSET 20;`
- en: Data Types and Constraints
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据类型与约束
- en: Understanding data types and constraints is crucial for defining the structure
    of your tables. Data types specify what kind of data a column can hold, such as
    integers, text, or dates. Constraints enforce limitations to ensure data integrity.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 理解数据类型和约束对于定义表的结构至关重要。数据类型指定列可以包含的数据种类，如整数、文本或日期。约束强制实施限制以确保数据的完整性。
- en: '**Integer Types:** INT, SMALLINT, TINYINT, etc. Used for storing whole numbers.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**整数类型：** INT、SMALLINT、TINYINT 等。用于存储整数。'
- en: '**Decimal Types:** FLOAT, DOUBLE, DECIMAL. Suitable for storing numbers with
    decimal places.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**十进制类型：** FLOAT、DOUBLE、DECIMAL。适合存储带小数的数字。'
- en: '**Character Types:** CHAR, VARCHAR, TEXT. Used for text data.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**字符类型：** CHAR、VARCHAR、TEXT。用于文本数据。'
- en: '**Date and Time:** DATE, TIME, DATETIME, TIMESTAMP. Designed for storing date
    and time information.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日期和时间：** DATE、TIME、DATETIME、TIMESTAMP。用于存储日期和时间信息。'
- en: '[PRE2]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In the above example, the `NOT NULL` constraint ensures that a column cannot
    have a NULL value. The `UNIQUE` constraint guarantees that all values in a column
    are unique. The `CHECK` constraint validates that the salary must be greater than
    zero.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述示例中，`NOT NULL` 约束确保列不能有 NULL 值。`UNIQUE` 约束保证列中的所有值都是唯一的。`CHECK` 约束验证工资必须大于零。
- en: 'Step 3: More Advanced SQL Concepts'
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 3 步：更高级的 SQL 概念
- en: Joining Tables
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 表连接
- en: Joins are used to combine rows from two or more tables based on a related column
    between them. They are essential when you want to retrieve data that is spread
    across multiple tables. Understanding joins is crucial for complex SQL queries.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 连接用于基于相关列将两张或多张表的行组合在一起。当你想检索分布在多个表中的数据时，它们是必不可少的。理解连接对复杂的 SQL 查询至关重要。
- en: 'INNER JOIN: `SELECT * FROM orders JOIN customers ON orders.customer_id = customers.id;`'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: INNER JOIN：`SELECT * FROM orders JOIN customers ON orders.customer_id = customers.id;`
- en: 'LEFT JOIN: `SELECT * FROM orders LEFT JOIN customers ON orders.customer_id
    = customers.id;`'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LEFT JOIN：`SELECT * FROM orders LEFT JOIN customers ON orders.customer_id =
    customers.id;`
- en: 'RIGHT JOIN: `SELECT * FROM orders RIGHT JOIN customers ON orders.customer_id
    = customers.id;`'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RIGHT JOIN：`SELECT * FROM orders RIGHT JOIN customers ON orders.customer_id
    = customers.id;`
- en: Joins can be complex but are incredibly powerful when you need to pull data
    from multiple tables. Let's go through a detailed example to clarify how different
    types of joins work.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 连接可能很复杂，但在需要从多个表中提取数据时，它们非常强大。让我们通过详细的示例来深入了解不同类型的连接如何工作。
- en: 'Consider two tables: **Employees** and **Departments**.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑两个表：**员工** 和 **部门**。
- en: '[PRE3]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Let''s explore different types of joins:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索不同类型的连接：
- en: '[PRE4]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In the above examples, the INNER JOIN returns only the rows where there is a
    match in both tables. The LEFT JOIN returns all rows from the left table, and
    matching rows from the right table, filling with NULL if there is no match. The
    RIGHT JOIN does the opposite, returning all rows from the right table and matching
    rows from the left table.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述示例中，INNER JOIN 只返回两个表中都有匹配的行。LEFT JOIN 返回左表中的所有行，以及右表中匹配的行，如果没有匹配，则填充 NULL。RIGHT
    JOIN 则相反，返回右表中的所有行，以及左表中匹配的行。
- en: Grouping and Aggregation
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分组与聚合
- en: Aggregation functions perform a calculation on a set of values and return a
    single value. Aggregations are commonly used alongside GROUP BY clauses to segment
    data into categories and perform calculations on each group.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合函数对一组值进行计算，并返回单个值。聚合通常与 GROUP BY 子句一起使用，将数据分组并对每个组进行计算。
- en: 'Count: `SELECT customer_id, COUNT(id) AS total_orders FROM orders GROUP BY
    customer_id;`'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计数：`SELECT customer_id, COUNT(id) AS total_orders FROM orders GROUP BY customer_id;`
- en: 'Sum: `SELECT customer_id, SUM(order_amount) AS total_spent FROM orders GROUP
    BY customer_id;`'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 求和：`SELECT customer_id, SUM(order_amount) AS total_spent FROM orders GROUP BY
    customer_id;`
- en: 'Filter group: `SELECT customer_id, SUM(order_amount) AS total_spent FROM orders
    GROUP BY customer_id HAVING total_spent > 100;`'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 筛选组：`SELECT customer_id, SUM(order_amount) AS total_spent FROM orders GROUP
    BY customer_id HAVING total_spent > 100;`
- en: Subqueries and Nested Queries
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 子查询和嵌套查询
- en: Subqueries allow you to perform queries within queries, providing a way to fetch
    data that will be used in the main query as a condition to further restrict the
    data that is retrieved.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 子查询允许你在查询中执行查询，为主查询提供一种方法，以便根据条件进一步限制检索到的数据。
- en: '[PRE5]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Transactions
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 事务
- en: 'Transactions are sequences of SQL operations that are executed as a single
    unit of work. They are important for maintaining the integrity of database operations,
    particularly in multi-user systems. Transactions follow the ACID principles: Atomicity,
    Consistency, Isolation, and Durability.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 事务是作为一个工作单元执行的一系列 SQL 操作。它们对维护数据库操作的完整性非常重要，特别是在多用户系统中。事务遵循 ACID 原则：原子性、一致性、隔离性和持久性。
- en: '[PRE6]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In the above example, both UPDATE statements are wrapped within a transaction.
    Either both execute successfully, or if an error occurs, neither execute, ensuring
    data integrity.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，两个 UPDATE 语句都被包含在一个事务中。要么两者都成功执行，要么出现错误时两者都不执行，从而确保数据的完整性。
- en: 'Step 4: Optimization and Performance Tuning'
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4步：优化和性能调优
- en: Understanding Query Performance
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解查询性能
- en: 'Query performance is crucial for maintaining a responsive database system.
    An inefficient query can lead to delays, affecting the overall user experience.
    Here are some key concepts:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 查询性能对维持一个响应快速的数据库系统至关重要。一个低效的查询可能导致延迟，影响整体用户体验。以下是一些关键概念：
- en: '**Execution Plans:** These plans provide a roadmap of how a query will be executed,
    allowing for analysis and optimization.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**执行计划：** 这些计划提供了查询将如何执行的路线图，允许分析和优化。'
- en: '**Bottlenecks:** Identifying slow parts of a query can guide optimization efforts.
    Tools like the SQL Server Profiler can assist in this process.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**瓶颈：** 识别查询中缓慢的部分可以指导优化工作。像 SQL Server Profiler 这样的工具可以帮助进行这项工作。'
- en: Indexing Strategies
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 索引策略
- en: 'Indexes are data structures that enhance the speed of data retrieval. They
    are vital in large databases. Here''s how they work:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 索引是提高数据检索速度的数据结构。在大型数据库中至关重要。它们的工作原理如下：
- en: '**Single-Column Index:** An index on a single column, often used in WHERE clauses;
    `CREATE INDEX idx_name ON customers (name);`'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单列索引：** 单列上的索引，通常用于 WHERE 子句；`CREATE INDEX idx_name ON customers (name);`'
- en: '**Composite Index:** An index on multiple columns, used when queries filter
    by multiple fields; `CREATE INDEX idx_name_age ON customers (name, age);`'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**复合索引：** 多列上的索引，用于根据多个字段过滤的查询；`CREATE INDEX idx_name_age ON customers (name,
    age);`'
- en: '**Understanding When to Index:** Indexing improves reading speed but can slow
    down insertions and updates. Careful consideration is needed to balance these
    factors.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**了解何时索引：** 索引提高读取速度，但可能会降低插入和更新的速度。需要仔细考虑以平衡这些因素。'
- en: Optimizing Joins and Subqueries
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 优化连接和子查询
- en: 'Joins and subqueries can be resource-intensive. Optimization strategies include:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 连接和子查询可能会占用大量资源。优化策略包括：
- en: '**Using Indexes:** Applying indexes on join fields improves join performance.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用索引：** 在连接字段上应用索引可以提高连接性能。'
- en: '**Reducing Complexity:** Minimize the number of tables joined and the number
    of rows selected.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**减少复杂性：** 尽量减少连接的表和选择的行数。'
- en: '[PRE7]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Database Normalization and Denormalization
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据库规范化和反规范化
- en: 'Database design plays a significant role in performance:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库设计在性能中扮演着重要角色：
- en: '**Normalization:** Reduces redundancy by organizing data into related tables.
    This can make queries more complex but ensures data consistency.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**规范化：** 通过将数据组织到相关表中减少冗余。这可以使查询变得更复杂，但确保数据一致性。'
- en: '**Denormalization:** Combines tables to improve read performance at the cost
    of potential inconsistency. It''s used when read speed is a priority.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**反规范化：** 合并表以提高读取性能，但可能会导致潜在的不一致性。用于读取速度优先的场景。'
- en: Monitoring and Profiling Tools
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 监控和分析工具
- en: 'Utilizing tools to monitor performance ensures that the database runs smoothly:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 利用工具监控性能，确保数据库平稳运行：
- en: '**MySQL''s Performance Schema:** Offers insights into query execution and performance.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MySQL 性能模式：** 提供有关查询执行和性能的见解。'
- en: '**SQL Server Profiler:** Allows tracking and capturing of SQL Server events,
    helping in analyzing performance.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SQL Server Profiler：** 允许跟踪和捕捉 SQL Server 事件，帮助分析性能。'
- en: Best Practices in Writing Efficient SQL
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编写高效 SQL 的最佳实践
- en: 'Adhering to best practices makes SQL code more maintainable and efficient:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循最佳实践使 SQL 代码更具可维护性和效率：
- en: '**Avoid SELECT *:** Select only required columns to reduce load.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**避免使用 SELECT *：** 仅选择所需的列以减少负载。'
- en: '**Minimize Wildcards:** Use wildcards sparingly in LIKE queries.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最小化通配符：** 在 LIKE 查询中谨慎使用通配符。'
- en: '**Use EXISTS Instead of COUNT:** When checking for existence, EXISTS is more
    efficient.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用 EXISTS 而不是 COUNT：** 检查存在时，EXISTS 更有效。'
- en: '[PRE8]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Database Maintenance
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据库维护
- en: 'Regular maintenance ensures optimal performance:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 定期维护确保最佳性能：
- en: '**Updating Statistics:** Helps the database engine make optimization decisions.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更新统计信息：** 帮助数据库引擎做出优化决策。'
- en: '**Rebuilding Indexes:** Over time, indexes become fragmented. Regular rebuilding
    improves performance.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重建索引：** 随着时间推移，索引会变得碎片化。定期重建可以提高性能。'
- en: '**Backups:** Regular backups are essential for data integrity and recovery.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**备份：** 定期备份对数据完整性和恢复至关重要。'
- en: 'Step 5: Performance & Security Best Practices'
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 5 步：性能和安全最佳实践
- en: Performance Best Practices
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 性能最佳实践
- en: 'Optimizing the performance of your SQL queries and database is crucial for
    maintaining a responsive and efficient system. Here are some performance best
    practices:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 优化 SQL 查询和数据库的性能对于维持响应和高效的系统至关重要。以下是一些性能最佳实践：
- en: '**Use Indexes Wisely:** Indexes speed up data retrieval but can slow down data
    modification operations like insert, update, and delete.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**明智地使用索引：** 索引加速数据检索，但可能会降低数据修改操作（如插入、更新和删除）的速度。'
- en: '**Limit Results:** Use the `LIMIT` clause to retrieve only the data you need.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**限制结果：** 使用 `LIMIT` 子句仅检索所需的数据。'
- en: '**Optimize Joins:** Always join tables on indexed or primary key columns.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优化连接：** 始终在索引或主键列上连接表。'
- en: '**Analyze Query Plans:** Understanding the query execution plan can help you
    optimize queries.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分析查询计划：** 理解查询执行计划可以帮助你优化查询。'
- en: Security Best Practices
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全最佳实践
- en: 'Security is paramount when dealing with databases, as they often contain sensitive
    information. Here are some best practices for enhancing SQL security:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理数据库时，安全至关重要，因为它们通常包含敏感信息。以下是增强 SQL 安全性的最佳实践：
- en: '**Data Encryption:** Always encrypt sensitive data before storing it.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据加密：** 存储敏感数据前始终进行加密。'
- en: '**User Privileges:** Grant users the least amount of privileges they need to
    perform their tasks.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户权限：** 只授予用户完成任务所需的最小权限。'
- en: '**SQL Injection Prevention:** Use parameterized queries to protect against
    SQL injection attacks.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**防止 SQL 注入：** 使用参数化查询防护 SQL 注入攻击。'
- en: '**Regular Audits:** Conduct regular security audits to identify vulnerabilities.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**定期审计：** 进行定期安全审计以识别漏洞。'
- en: Combining Performance and Security
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结合性能和安全
- en: Striking the right balance between performance and security is often challenging
    but necessary. For example, while indexing can speed up data retrieval, it can
    also make sensitive data more accessible. Therefore, always consider the security
    implications of your performance optimization strategies.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在性能和安全之间找到正确的平衡通常具有挑战性但却是必要的。例如，虽然索引可以加速数据检索，但也可能使敏感数据更易获取。因此，始终考虑性能优化策略的安全影响。
- en: 'Example: Secure and Efficient Query'
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例：安全高效的查询
- en: '[PRE9]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This example uses a parameterized query, which not only prevents SQL injection
    but also allows MySQL to cache the query, improving performance.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这个示例使用了参数化查询，不仅可以防止 SQL 注入，还允许 MySQL 缓存查询，提高性能。
- en: Moving Forward
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前进的方向
- en: This getting started guide has covered the fundamental concepts and popular
    practical applications of SQL. From getting up and running to mastering complex
    queries, this guide should have provided you with the skills you need to navigate
    data management through the use of detailed examples and with a practical approach.
    As data continues to shape our world, mastering SQL opens the door to a variety
    of fields, including data analytics, machine learning, and software development.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 本入门指南涵盖了 SQL 的基本概念和流行的实际应用。从启动到掌握复杂查询，这本指南应该已经为你提供了通过详细示例和实际方法来驾驭数据管理的技能。随着数据继续塑造我们的世界，掌握
    SQL 为各种领域打开了大门，包括数据分析、机器学习和软件开发。
- en: As you progress, consider extending your SQL skill set with additional resources.
    Sites like [w3schools SQL Tutorial](https://www.w3schools.com/sql/) and [SQL Practice
    Exercises on SQLBolt](https://sqlbolt.com/) provide additional study materials
    and exercises. Additionally, [HackerRank's SQL problems](https://www.hackerrank.com/domains/sql)
    provide goal-oriented query practice. Whether you're building a complex data analytics
    platform or developing the next generation of web applications, SQL is a skill
    you will definitely be using regularly. Remember that the journey to SQL mastery
    traverses a long road, and is a journey that is enriched by consistent practice
    and learning.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 随着你的进步，可以考虑通过额外资源扩展你的 SQL 技能。像 [w3schools SQL 教程](https://www.w3schools.com/sql/)
    和 [SQLBolt 的 SQL 练习](https://sqlbolt.com/) 提供了额外的学习材料和练习。此外，[HackerRank 的 SQL
    问题](https://www.hackerrank.com/domains/sql) 提供了目标导向的查询练习。无论你是在构建复杂的数据分析平台，还是开发下一代网络应用程序，SQL
    都是你必定会经常使用的技能。记住，掌握 SQL 的过程是一条漫长的道路，这条道路因持续的实践和学习而更加丰富。
- en: '[**Matthew Mayo**](https://www.linkedin.com/in/mattmayo13/) ([**@mattmayo13**](https://twitter.com/mattmayo13))
    holds a Master''s degree in computer science and a graduate diploma in data mining.
    As Editor-in-Chief of KDnuggets, Matthew aims to make complex data science concepts
    accessible. His professional interests include natural language processing, machine
    learning algorithms, and exploring emerging AI. He is driven by a mission to democratize
    knowledge in the data science community. Matthew has been coding since he was
    6 years old.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[**Matthew Mayo**](https://www.linkedin.com/in/mattmayo13/) ([**@mattmayo13**](https://twitter.com/mattmayo13))
    拥有计算机科学硕士学位和数据挖掘研究生文凭。作为 KDnuggets 的主编，Matthew 致力于使复杂的数据科学概念变得易于理解。他的专业兴趣包括自然语言处理、机器学习算法以及探索新兴的人工智能。他的使命是让数据科学社区中的知识变得更具普及性。Matthew
    从 6 岁起就开始编程。'
- en: More On This Topic
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Getting Started with SQL Cheatsheet](https://www.kdnuggets.com/2022/08/getting-started-sql-cheatsheet.html)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开始使用 SQL 快捷指南](https://www.kdnuggets.com/2022/08/getting-started-sql-cheatsheet.html)'
- en: '[Getting Started with Python Data Structures in 5 Steps](https://www.kdnuggets.com/5-steps-getting-started-python-data-structures)'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5 步骤开始使用 Python 数据结构](https://www.kdnuggets.com/5-steps-getting-started-python-data-structures)'
- en: '[Getting Started with Scikit-learn in 5 Steps](https://www.kdnuggets.com/5-steps-getting-started-scikit-learn)'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5 步骤开始使用 Scikit-learn](https://www.kdnuggets.com/5-steps-getting-started-scikit-learn)'
- en: '[Getting Started with Google Cloud Platform in 5 Steps](https://www.kdnuggets.com/5-steps-google-cloud-platform)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5 步骤开始使用 Google Cloud Platform](https://www.kdnuggets.com/5-steps-google-cloud-platform)'
- en: '[Getting Started with PyTorch in 5 Steps](https://www.kdnuggets.com/5-steps-getting-started-pytorch)'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5 步骤开始使用 PyTorch](https://www.kdnuggets.com/5-steps-getting-started-pytorch)'
- en: '[Getting Started with Automated Text Summarization](https://www.kdnuggets.com/2019/11/getting-started-automated-text-summarization.html)'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开始使用自动文本摘要](https://www.kdnuggets.com/2019/11/getting-started-automated-text-summarization.html)'
