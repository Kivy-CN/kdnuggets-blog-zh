- en: How to Engineer Date Features in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在 Python 中工程化日期特征
- en: 原文：[https://www.kdnuggets.com/2021/08/engineer-date-features-python.html](https://www.kdnuggets.com/2021/08/engineer-date-features-python.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/08/engineer-date-features-python.html](https://www.kdnuggets.com/2021/08/engineer-date-features-python.html)
- en: '![Figure](../Images/83f524b541d4e54f4d905839a5cb4b07.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/83f524b541d4e54f4d905839a5cb4b07.png)'
- en: Original photo by [Sonja Langford](https://unsplash.com/@sonjalangford?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    on [Unsplash](https://unsplash.com/s/photos/time?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 原图由 [Sonja Langford](https://unsplash.com/@sonjalangford?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    提供，来自 [Unsplash](https://unsplash.com/s/photos/time?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: Maybe, like me, you deal with dates a lot when processing data in Python. Maybe,
    also like me, you get frustrated with dealing with dates in Python, and find you
    consult the documentation far too often to do the same things over and over again.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 也许像我一样，你在用 Python 处理数据时经常处理日期。也许，像我一样，你对处理日期感到沮丧，并发现自己为了反复做同样的事情而频繁查阅文档。
- en: Like anyone who codes and finds themselves doing the same thing more than a
    handful of times, I wanted to make my life easier by automating some common date
    processing tasks, as well as some simple and frequent feature engineering, so
    that my common date parsing and processing tasks for a given date could be done
    with a single function call. I could then select which features I was interested
    in extracting at a given time afterwards.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 像任何编写代码并发现自己重复做同样事情的人一样，我希望通过自动化一些常见的日期处理任务以及一些简单且频繁的特征工程来简化我的工作，这样我就可以通过一次函数调用完成对给定日期的常见日期解析和处理任务。之后，我可以选择感兴趣的特征进行提取。
- en: This date processing is accomplished via the use of a single Python function,
    which accepts only a single date string formatted as '`YYYY-MM-DD`' (because that's
    how dates are formatted), and which returns a dictionary consisting of (currently)
    18 key/value feature pairs. Some of these keys are very straightforward (e.g.
    the parsed four 4 date year) while others are engineered (e.g. whether or not
    the date is a public holiday). If you find this code at all useful, you should
    be able to figure out how to alter or extend it to suit your needs. For some ideas
    on additional date/time related features you may want to code the generation of,
    [check out this article](https://www.kdnuggets.com/2021/04/feature-engineering-datetime-variables-data-science-machine-learning.html).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这个日期处理是通过使用一个 Python 函数来实现的，该函数只接受一个格式为 '`YYYY-MM-DD`' 的日期字符串（因为这是日期的格式），并返回一个包含（目前）18
    个键值对的字典。这些键中的一些非常直接（例如解析的四位日期年），而其他一些是工程化的（例如该日期是否为公共假期）。如果你发现这段代码有用，你应该能够了解如何修改或扩展它以满足你的需求。有关你可能希望编码生成的附加日期/时间相关特征的一些想法，[请查看这篇文章](https://www.kdnuggets.com/2021/04/feature-engineering-datetime-variables-data-science-machine-learning.html)。
- en: Most of the functionality is accomplished using the Python [`datetime`](https://docs.python.org/3/library/datetime.html)
    module, much of which relies on the [`strftime()`](https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior)
    method. The real benefit, however, is that there is a standard, automated approach
    to the same repetitive queries.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分功能是通过 Python [`datetime`](https://docs.python.org/3/library/datetime.html)
    模块实现的，该模块依赖于 [`strftime()`](https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior)
    方法。然而，真正的好处在于有一种标准化、自动化的方法来处理相同的重复查询。
- en: The only non-standard library used is [`holidays`](https://pypi.org/project/holidays/),
    a "fast, efficient Python library for generating country, province and state specific
    sets of holidays on the fly." While the library can accommodate a whole host of
    national and sub-national holiodays, I have used the US national holidays for
    this example. With a quick glance at the project's documentation and the code
    below, you will very easily determine how to change this if needed.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一使用的非标准库是 [`holidays`](https://pypi.org/project/holidays/)，这是一个“快速、高效的 Python
    库，用于动态生成国家、省和州特定的节假日集合。”虽然该库可以处理大量的国家和次国家节假日，但在这个示例中我使用了美国的国定假日。通过快速浏览项目文档和下面的代码，你将很容易确定如何在需要时更改此设置。
- en: So, let's first take a look at `process_date()` function. The comments should
    provide insight into what is going on, should you need it.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，首先让我们看看 `process_date()` 函数。注释应能提供有关其功能的深入了解，如有需要。
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'A few points to note:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 几点需要注意：
- en: '`_l` and `_s` suffixes refer to ''long versions'' and ''short versions'' respectively'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`_l` 和 `_s` 后缀分别指“长版本”和“短版本”'
- en: By default, Python treats days of the week as starting on Sunday (0) and ending
    on Saturday (6); For me, and my processing, weeks start on Monday, and end on
    Sunday — and I don't need a day 0 (as opposed to starting the week on day 1) —
    and so this needed to be changed
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下，Python 将一周的天数视为从星期日（0）开始，到星期六（6）结束；对我来说，我的处理一周从星期一开始，到星期日结束——而且我不需要第 0
    天（与从第 1 天开始的一周相对）——所以这需要改变
- en: A weekday/weekend feature was easy to create
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作日/周末特征很容易创建
- en: Holiday-related features were easy to engineer using the `holidays` library,
    and performing simple date addition and subtraction; again, substituting other
    national or sub-national holidays (or adding to the existing) would be easy to
    do
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假日相关特征使用`holidays`库并进行简单的日期加减法很容易工程化；再次，替代其他国家或次国家假日（或添加到现有的假日）将很容易做到
- en: A `days_from_today` feature was created with another line or 2 of simple date
    math; negative numbers are the number of days a given dates was *before* today,
    while positive numbers are days from today *until* the given date
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个`days_from_today`功能是通过另一两行简单的日期数学创建的；负数是指给定日期*之前*的天数，而正数是指给定日期*到今天*的天数
- en: I don't personally need, for example, a `is_end_of_month` feature, but you should
    be able to see how this could be added to the above code with relative ease at
    this point. Give some customization a try for yourself.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我个人不需要，例如，一个`is_end_of_month`功能，但你应该能够看到如何在此时相对轻松地将其添加到上述代码中。自己尝试一些自定义吧。
- en: Now let's test it out. We will process one date and print out what is returned,
    the full dictionary of key-value feature pairs.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们测试一下。我们将处理一个日期并打印出返回的内容，即特征键值对的完整字典。
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Here you can see the full list of feature keys, and corresponding values. Now,
    in a normal situation I won't need to print out the entire dictionary, but instead
    get the values of a particular key or set of keys.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这里你可以看到完整的特征键列表及其对应值。现在，在正常情况下，我不需要打印出整个字典，而是获取特定键或一组键的值。
- en: We can demonstrate how this might work practically with the below code. We will
    create a list of dates, and then process this list of dates one by one, ultimately
    creating a Pandas data frame of a selection of processed date features, printing
    it out to screen.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过下面的代码演示它如何在实际中工作。我们将创建一个日期列表，然后逐个处理这些日期，最终创建一个 Pandas 数据框，包含处理过的日期特征的选择，并打印到屏幕上。
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: And this data frame hopefully gives you a better idea of how this functionality
    could be useful in practice.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 希望这个数据框能让你更好地理解这个功能在实践中的有用性。
- en: Good luck, and happy data processing.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 祝好运，数据处理愉快。
- en: '**[Matthew Mayo](https://www.linkedin.com/in/mattmayo13/)** ([**@mattmayo13**](https://twitter.com/mattmayo13))
    is a Data Scientist and the Editor-in-Chief of KDnuggets, the seminal online Data
    Science and Machine Learning resource. His interests lie in natural language processing,
    algorithm design and optimization, unsupervised learning, neural networks, and
    automated approaches to machine learning. Matthew holds a Master''s degree in
    computer science and a graduate diploma in data mining. He can be reached at editor1
    at kdnuggets[dot]com.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Matthew Mayo](https://www.linkedin.com/in/mattmayo13/)** ([**@mattmayo13**](https://twitter.com/mattmayo13))
    是数据科学家和 KDnuggets 的主编，这是一个开创性的在线数据科学和机器学习资源。他的兴趣在于自然语言处理、算法设计和优化、无监督学习、神经网络以及机器学习的自动化方法。Matthew
    拥有计算机科学硕士学位和数据挖掘研究生文凭。他可以通过 editor1 at kdnuggets[dot]com 联系。'
- en: '* * *'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三名课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织进行 IT 事务'
- en: '* * *'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Tick-Tock: Using Pendulum For Easy Date And Time Management In Python](https://www.kdnuggets.com/tick-tock-using-pendulum-for-easy-date-and-time-management-in-python)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[滴答：使用Pendulum轻松管理Python中的日期和时间](https://www.kdnuggets.com/tick-tock-using-pendulum-for-easy-date-and-time-management-in-python)'
- en: '[5 Project Ideas to Stay Up-To-Date as a Data Scientist](https://www.kdnuggets.com/2022/07/5-project-ideas-stay-uptodate-data-scientist.html)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[作为数据科学家保持更新的5个项目创意](https://www.kdnuggets.com/2022/07/5-project-ideas-stay-uptodate-data-scientist.html)'
- en: '[Using NumPy to Perform Date and Time Calculations](https://www.kdnuggets.com/using-numpy-to-perform-date-and-time-calculations)'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用NumPy进行日期和时间计算](https://www.kdnuggets.com/using-numpy-to-perform-date-and-time-calculations)'
- en: '[Go from Engineer to ML Engineer with Declarative ML](https://www.kdnuggets.com/2023/05/predibase-go-engineer-ml-engineer-declarative-ml.html)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[从工程师到机器学习工程师：声明式机器学习的转变](https://www.kdnuggets.com/2023/05/predibase-go-engineer-ml-engineer-declarative-ml.html)'
- en: '[Working With Sparse Features In Machine Learning Models](https://www.kdnuggets.com/2021/01/sparse-features-machine-learning-models.html)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在机器学习模型中处理稀疏特征](https://www.kdnuggets.com/2021/01/sparse-features-machine-learning-models.html)'
- en: '[The Challenges of Creating Features for Machine Learning](https://www.kdnuggets.com/2022/02/challenges-creating-features-machine-learning.html)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[创建机器学习特征的挑战](https://www.kdnuggets.com/2022/02/challenges-creating-features-machine-learning.html)'
