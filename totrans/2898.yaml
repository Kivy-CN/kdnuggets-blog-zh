- en: Python Libraries for Interpretable Machine Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/09/python-libraries-interpretable-machine-learning.html](https://www.kdnuggets.com/2019/09/python-libraries-interpretable-machine-learning.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Rebecca Vickery](https://www.linkedin.com/in/rebecca-vickery-20b94133/),
    Data Scientist**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/88057e875a422e75bf9b7cfdf270926e.png)'
  prefs: []
  type: TYPE_IMG
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: As concerns regarding [bias in artificial intelligence](https://en.wikipedia.org/wiki/Algorithmic_bias) become
    more prominent it is becoming more and more important for businesses to be able
    to explain both the predictions their models are producing and how the models
    themselves work. Fortunately, there is an increasing number of [python libraries
    for data science](https://www.kdnuggets.com/2020/11/top-python-libraries-data-science-data-visualization-machine-learning.html)
    being developed that attempt to solve this problem. In the following post, I am
    going to give a brief guide to four of the most established packages for interpreting
    and explaining machine learning models.
  prefs: []
  type: TYPE_NORMAL
- en: The following libraries are all pip installable, come with good documentation
    and have an emphasis on visual interpretation.
  prefs: []
  type: TYPE_NORMAL
- en: '[yellowbrick](https://www.scikit-yb.org/en/latest/quickstart.html)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This library is essentially an extension of the scikit-learn library and provides
    some really useful and pretty looking visualisations for machine learning models.
    The visualiser objects, the core interface, are scikit-learn estimators and so
    if you are used to working with scikit-learn the workflow should be quite familiar.
  prefs: []
  type: TYPE_NORMAL
- en: The visualisations that can be rendered cover model selection, feature importances
    and model performance analysis.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s walk through a few brief examples.
  prefs: []
  type: TYPE_NORMAL
- en: The library can be installed via pip.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: To illustrate a few features I am going to be using a scikit-learn dataset called
    the [wine recognition](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_wine.html#sklearn.datasets.load_wine) set.
    This dataset has 13 features and 3 target classes and can be loaded directly from
    the scikit-learn library. In the below code I am importing the dataset and converting
    it to a data frame. The data can be used in a classifier without any additional
    preprocessing.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: I am also using scikit-learn to further split the data set into test and train.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Next, let’s use the Yellowbricks visualiser to view correlations between features
    in the data set.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/d37ba0497363637469e376ecf48e8877.png)'
  prefs: []
  type: TYPE_IMG
- en: Let’s now fit a RandomForestClassifier and evaluate the performance with another
    visualiser.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/8483d4933ff1e90ad2d4bb9683e31cc0.png)'
  prefs: []
  type: TYPE_IMG
- en: '[ELI5](https://eli5.readthedocs.io/en/latest/)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: ELI5 is another visualisation library that is useful for debugging machine learning
    models and explaining the predictions they have produced. It works with the most
    common python machine learning libraries including scikit-learn, XGBoost and Keras.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s use ELI5 to inspect the feature importance for the model we trained above.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/c59fc7f1c7e3b6e19c61d732b323df9f.png)'
  prefs: []
  type: TYPE_IMG
- en: By default the `show_weights` method uses `gain` to calculate the weight but
    you can specify other types by adding the `importance_type` argument.
  prefs: []
  type: TYPE_NORMAL
- en: You can also use `show_prediction` to inspect the reasons for individual predictions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/1a92558a0481df224e0f93d45a802e70.png)'
  prefs: []
  type: TYPE_IMG
- en: '[LIME](https://github.com/marcotcr/lime)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: LIME (local interpretable model-agnostic explanations) is a package for explaining
    the predictions made by machine learning algorithms. Lime supports explanations
    for individual predictions from a wide range of classifiers, and support for scikit-learn
    is built in.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s use Lime to interpret some predictions from the model we trained earlier.
  prefs: []
  type: TYPE_NORMAL
- en: Lime can be installed via pip.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: First, we build the explainer. This takes a training dataset as an array, the
    names of the features used in the model and the names of the classes in the target
    variable.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Next, we create a lambda function that uses the model to predict on a sample
    of the data. This is borrowed from this excellent, more in-depth, [tutorial](https://www.guru99.com/scikit-learn-tutorial.html) on
    Lime.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: We then use the explainer to explain the prediction on a selected example. The
    result is shown below. Lime produces a visualisation showing how the features
    have contributed to this particular prediction.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/d6225427e86f7eca9ad058a4acc3012c.png)'
  prefs: []
  type: TYPE_IMG
- en: '[MLxtend](http://rasbt.github.io/mlxtend/)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This library contains a host of helper functions for machine learning. This
    covers things like stacking and voting classifiers, model evaluation, feature
    extraction and engineering and plotting. In addition to the documentation, this [paper](https://sebastianraschka.com/pdf/software/mlxtend-latest.pdf) is
    a good resource for a more detailed understanding of the package.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s use MLxtend to compare the decision boundaries for a voting classifier
    against its constituent classifiers.
  prefs: []
  type: TYPE_NORMAL
- en: Again it can be installed via pip.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: The imports I am using are shown below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: The following visualisation only works with two features at a time so we will
    first create an array containing the features `proline` and `color_intensity`.
    I have chosen these as they had the highest weighting from all the features we
    inspected earlier using ELI5.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Next, we create the classifiers, fit them to the training data and visualise
    the decision boundaries using MLxtend. The output is shown below the code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/88057e875a422e75bf9b7cfdf270926e.png)'
  prefs: []
  type: TYPE_IMG
- en: This is by no means an exhaustive list of libraries for interpreting, visualising
    and explaining machine learning models. This excellent [post](https://skymind.ai/wiki/python-ai)
    contains a long list of other useful libraries to try out.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading!
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Rebecca Vickery](https://www.linkedin.com/in/rebecca-vickery-20b94133/)**
    is learning data science through self study. Data Scientist @ Holiday Extras.
    Co-Founder of alGo.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/python-libraries-for-interpretable-machine-learning-c476a08ed2c7).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Opening Black Boxes: How to leverage Explainable Machine Learning](/2019/08/open-black-boxes-explainable-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Data Science Playbook for explainable ML/xAI](/2019/07/domino-xai-data-science-explainable.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Command Line Basics Every Data Scientist Should Know](/2019/08/command-line-basics-every-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Best ETL Tools in 2021](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Write Clean Python Code Using Pipes](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
