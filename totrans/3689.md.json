["```py\nfrom nlptest import Harness\nh = Harness(task=\"ner\", model=\"ner.dl\", hub=”johnsnowlabs”)\nh.generate().run().report()\n```", "```py\n# a string parameter to Harness asks to download a pre-trained pipeline or model\nh1 = Harness(task=\"ner\", model=\"dslim/bert-base-NER\", hub=”huggingface”)\nh2 = Harness(task=\"ner\", model=\"ner.dl\", hub=”johnsnowlabs”)\nh3 = Harness(task=\"ner\", model=\"en_core_web_md\", hub=”spacy”)\n\n# alternatively, configure and pass an initialized pipeline object\npipe = spacy.load(\"en_core_web_sm\", disable=[\"tok2vec\", \"tagger\", \"parser\"])\nh4 = Harness(task=“ner”, model=pipe, hub=”spacy”)\n```", "```py\nh = Harness(task  = \"text-classification\",\n            model = \"distilbert_base_sequence_classifier_toxicity\",\n            data  = “german hatespeech refugees.csv”,\n            hub = “johnsnowlabs”)\n```"]