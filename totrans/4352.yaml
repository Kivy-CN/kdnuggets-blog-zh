- en: A Rising Library Beating Pandas in Performance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/12/rising-library-beating-pandas-performance.html](https://www.kdnuggets.com/2020/12/rising-library-beating-pandas-performance.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Ezz El Din Abdullah](https://www.linkedin.com/in/ezzeddinabdullah/),
    Data Platform Engineer**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Header image](../Images/69442ed2c7287d82e6fe40287b3f23b9.png)'
  prefs: []
  type: TYPE_IMG
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '**pandas **was initially released in 2008 written in [Python, Cython, and C](https://en.wikipedia.org/wiki/Pandas_%28software%29).
    Today, we’re comparing the performance of this well-known library with [**pypolars**](https://github.com/ritchie46/polars),
    a rising DataFrame library written in Rust. We compare the two while sorting and
    concatenating a 25Mil-record data and also when joining two CSVs.'
  prefs: []
  type: TYPE_NORMAL
- en: Downloading Reddit Usernames data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let’s first download a CSV file that contains ~26 million reddit usernames
    from Kaggle: [https://www.kaggle.com/colinmorris/reddit-usernames](https://www.kaggle.com/colinmorris/reddit-usernames)'
  prefs: []
  type: TYPE_NORMAL
- en: 'And let’s form another CSV file that we will use, you can create it with your
    favorite text editor or through the command line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Sorting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Now, let’s compare the sorting algorithm of the two:'
  prefs: []
  type: TYPE_NORMAL
- en: '**pandas**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**pypolars**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**~24 seconds meaning pypolars here is 1.4x faster than pandas**'
  prefs: []
  type: TYPE_NORMAL
- en: Concatenation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We’ll see now how each will perform while concatenating two data frames and
    stacking them into one data frame
  prefs: []
  type: TYPE_NORMAL
- en: '**pandas**'
  prefs: []
  type: TYPE_NORMAL
- en: 18 seconds taken by pandas
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**pypolars**'
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  prefs: []
  type: TYPE_NORMAL
- en: '**Here  pypolars is 1.2x faster**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Joining
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Downloading COVID Tracking data**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Downloading data from [COVID Tracking Project](https://covidtracking.com/data/download) from
    this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: will get you the latest data of the coronavirus spread across all the US in
    this **all-states-history.csv **file
  prefs: []
  type: TYPE_NORMAL
- en: '**Downloading states data**'
  prefs: []
  type: TYPE_NORMAL
- en: 'This is a CSV file indicating the abbreviations of each state since we need
    it to join with the previous CSV which has only the abbreviations listed in *state *column.
    Let’s get this data from this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: This will output **states.csv**, the file that has two columns: *State* and *Abbreviation*
  prefs: []
  type: TYPE_NORMAL
- en: '**pandas**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s use **csvcut** to filter out this resulted **joined_pd.csv** file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Looks like the join is working and it’s left join. If you’re curious why the
    associated *State* values of AS and DC are nulls, that’s because there are no
    abbreviations existing in the **states.csv** file itself. If you look into the *Abbreviation* column,
    you’ll find no values for AS nor DC.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here no AS abbreviations:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'and here no values for DC:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: P.S. if it’s not clear what **csvcut** is used for; we have some tutorials on
    csvkit (the command-line utility that contains csvcut and some other useful command-line
    tools for cleaning, processing, and analyzing CSVs).
  prefs: []
  type: TYPE_NORMAL
- en: '[Part 1 of cleaning CSV data](https://www.ezzeddinabdullah.com/posts/how-to-clean-csv-data-at-the-command-line)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Part 2 of cleaning CSV data](https://www.ezzeddinabdullah.com/posts/how-to-clean-csv-data-at-the-command-line-part-2) [‍](https://www.ezzeddinabdullah.com/posts/how-to-clean-text-data-at-the-command-line)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**pypolars**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Let’s see now how the joined data frame looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'so it looks like here **pypolars** missed the null values for the column it
    joined on, but that’s because the default join is inner join unlike pandas’ default
    join which is left join. To get the same result as pandas you need to change line
    8 to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'which on my machine got ~317ms meaning here:'
  prefs: []
  type: TYPE_NORMAL
- en: '**pypolars is 3x faster in left join**'
  prefs: []
  type: TYPE_NORMAL
- en: Final thoughts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the end, we’ve found how performant **pypolars** is compared to **pandas**.
     Of course, **pandas** is more mature since it’s been 12 years now and the community
    is still investing in it, but if more collaborations are made on **pypolars**;
    this rising library will rock!
  prefs: []
  type: TYPE_NORMAL
- en: 'You might find these tutorials useful:'
  prefs: []
  type: TYPE_NORMAL
- en: '[How to clean text data at the command line](https://www.ezzeddinabdullah.com/posts/how-to-clean-text-data-at-the-command-line)‍'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‍[Why we use docker](https://www.ezzeddinabdullah.com/posts/penguins-in-docker-a-tutorial-on-why-we-use-docker)‍
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Take care, will see you in the next tutorials :)
  prefs: []
  type: TYPE_NORMAL
- en: Peace!
  prefs: []
  type: TYPE_NORMAL
- en: '**[**Click here**](https://upbeat-crafter-1565.ck.page/0f7fd6d5d6)** to get
    fresh content to your inbox****'
  prefs: []
  type: TYPE_NORMAL
- en: '**Resources**'
  prefs: []
  type: TYPE_NORMAL
- en: '[pandas Wikipedia](https://en.wikipedia.org/wiki/Pandas_%28software%29)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pandas documentation](https://pandas.pydata.org/pandas-docs/stable/reference/frame.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pypolars repo authored by Ritchie Vink](https://github.com/ritchie46/polars)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[pypolars documentation](https://ritchie46.github.io/polars/pypolars/frame.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Ritchie Vink comment on Reddit](https://www.reddit.com/r/rust/comments/jqiwpj/xsv_a_commandline_toolkit_for_csv_data_written_in/gbrfexy?utm_source=share&utm_medium=web2x&context=3)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[COVID Tracking Data](https://covidtracking.com/data/download)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[States Abbreviations Data](https://worldpopulationreview.com/states/state-abbreviations)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Reddit usernames dataset | Kaggle](https://www.kaggle.com/colinmorris/reddit-usernames)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Bio: [Ezz El Din Abdullah](https://www.linkedin.com/in/ezzeddinabdullah/)**
    ([ezzeddinabdullah.com](http://ezzeddinabdullah.com)) is a Data Platform Engineer
    at Affectiva.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://www.ezzeddinabdullah.com/posts/a-rising-library-beating-pandas-in-performance).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Merging Pandas DataFrames in Python](/2020/12/merging-pandas-dataframes-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Pandas on Steroids: End to End Data Science in Python with Dask](/2020/11/pandas-steroids-dask-python-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Every Complex DataFrame Manipulation, Explained & Visualized Intuitively](/2020/11/dataframe-manipulation-explained-visualized.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Best ETL Tools in 2021](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Building a solid data team](https://www.kdnuggets.com/2021/12/build-solid-data-team.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
