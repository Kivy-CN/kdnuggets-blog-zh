- en: 4 Tips for Advanced Feature Engineering and Preprocessing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级特征工程和预处理的4个技巧
- en: 原文：[https://www.kdnuggets.com/2019/08/4-tips-advanced-feature-engineering-preprocessing.html](https://www.kdnuggets.com/2019/08/4-tips-advanced-feature-engineering-preprocessing.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/08/4-tips-advanced-feature-engineering-preprocessing.html](https://www.kdnuggets.com/2019/08/4-tips-advanced-feature-engineering-preprocessing.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](#comments)'
- en: '**By [Maarten Grootendorst](https://www.linkedin.com/in/mgrootendorst/), Data
    Scientist, I/O Psychologist & Clinical Psychologist**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Maarten Grootendorst](https://www.linkedin.com/in/mgrootendorst/)，数据科学家，I/O
    心理学家 & 临床心理学家**'
- en: '![Figure](../Images/0c884aa05ac480729f2e3cb199284005.png)[https://www.analyticsvidhya.com/blog/2018/11/data-engineer-comprehensive-list-resources-get-started/data-engineer/](https://www.analyticsvidhya.com/blog/2018/11/data-engineer-comprehensive-list-resources-get-started/data-engineer/)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![Figure](../Images/0c884aa05ac480729f2e3cb199284005.png)[https://www.analyticsvidhya.com/blog/2018/11/data-engineer-comprehensive-list-resources-get-started/data-engineer/](https://www.analyticsvidhya.com/blog/2018/11/data-engineer-comprehensive-list-resources-get-started/data-engineer/)'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三名课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你组织的 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Arguably, two of the most important steps in developing a machine learning model
    is [**feature engineering**](https://www.kdnuggets.com/2018/12/feature-engineering-explained.html)
    and ** preprocessing**. Feature engineering consists of the creation of features
    whereas preprocessing involves cleaning the data.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 可以说，开发机器学习模型的两个最重要的步骤是[**特征工程**](https://www.kdnuggets.com/2018/12/feature-engineering-explained.html)和**数据预处理**。特征工程包括特征的创建，而数据预处理涉及数据的清理。
- en: Torture the data, and it will confess to anything*. — Ronald Coase*
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “折磨数据，它会承认任何事情*。” — **罗纳德·科斯**
- en: We often spend a significant amount of time refining the data into something
    useful for modeling purposes. In order to make this work more efficient, I would
    like to share 4 Tips and Tricks that could help you with engineering and preprocessing
    those features.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通常会花费大量时间将数据提炼成对建模有用的形式。为了使这项工作更高效，我想分享4个技巧和窍门，帮助你在特征工程和数据预处理中。
- en: I should note that, how cliche it might be, **domain knowledge** might be one
    of the most important things to have when engineering features. It might help
    you in preventing under- and overfitting by having a better understanding of the
    features that you use.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我应该指出，尽管这可能听起来很陈词滥调，**领域知识**可能是特征工程中最重要的东西之一。它可以帮助你通过更好地理解你使用的特征来防止欠拟合和过拟合。
- en: You can find the notebook with analyses [here](https://github.com/MaartenGr/feature-engineering).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[这里](https://github.com/MaartenGr/feature-engineering)找到包含分析的笔记本。
- en: 1\. Resampling Imbalanced Data
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1\. 重新采样不平衡数据
- en: In practice, you will encounter imbalanced data more often than not. This does
    not necessarily have to be a problem if your target only has a slight imbalance.
    You could then resolve it by using proper validation measures for the data such
    as *Balanced Accuracy*, *Precision-Recall Curves *or *F1-score*.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践中，你会经常遇到不平衡的数据。如果你的目标变量只有轻微的不平衡，这不一定会成为问题。你可以通过使用适当的验证措施来解决这个问题，比如*平衡准确度*、*精准度-召回曲线*或*F1分数*。
- en: Unfortunately, this is not always the case and your target variable might be
    highly imbalanced (e.g., 10:1). Instead, you can oversample the minority target
    in order to introduce balance using a technique called **SMOTE**.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，这并不总是如此，你的目标变量可能高度不平衡（例如，10:1）。相反，你可以使用一种叫做**SMOTE**的技术来对少数类目标进行过采样，从而引入平衡。
- en: SMOTE
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SMOTE
- en: '[SMOTE](https://jair.org/index.php/jair/article/view/10302)stands for *Synthetic
    Minority Oversampling Technique* and is an oversampling technique used to increase
    the samples in a minority class.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[SMOTE](https://jair.org/index.php/jair/article/view/10302)代表*Synthetic Minority
    Oversampling Technique*，是一种用于增加少数类样本的过采样技术。'
- en: It generates new samples by looking at the *feature space* of the target and
    detecting nearest neighbors. Then, it simply selects similar samples and changes
    a column at a time randomly within the *feature space* of the neighboring samples.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 它通过查看目标的*特征空间*并检测最近邻来生成新样本。然后，它简单地选择类似样本，并在邻近样本的*特征空间*内随机改变一列。
- en: 'The module to implement SMOTE can be found within the [imbalanced-learn](https://imbalanced-learn.readthedocs.io/en/stable/index.html) package.
    You can simply import the package and apply a fit_transform:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 实现SMOTE的模块可以在[imbalanced-learn](https://imbalanced-learn.readthedocs.io/en/stable/index.html)包中找到。你可以简单地导入该包并应用fit_transform：
- en: '![Figure](../Images/5c104f6abf4bc7a85327c2c00b51c6ba.png)Original data (LEFT)
    versus oversampled data (RIGHT).'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '![图](../Images/5c104f6abf4bc7a85327c2c00b51c6ba.png)原始数据（左）与过采样数据（右）。'
- en: 'As you can see the model successfully oversampled the target variable. There
    are several strategies that you can take when oversampling using SMOTE:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，模型成功地对目标变量进行了过采样。使用SMOTE进行过采样时，你可以采取几种策略：
- en: '`**''minority''**`: resample only the minority class;'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**''minority''**`：仅对少数类进行重新采样；'
- en: '`**''not minority''**`: resample all classes but the minority class;'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**''not minority''**`：对除少数类外的所有类进行重新采样；'
- en: '`**''not majority''**`: resample all classes but the majority class;'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**''not majority''**`：对除多数类外的所有类进行重新采样；'
- en: '`**''all''**`: resample all classes;'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**''all''**`：对所有类进行重新采样；'
- en: When `**dict**`, the keys correspond to the targeted classes. The values correspond
    to the desired number of samples for each targeted class.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当`**dict**`时，键对应于目标类。值对应于每个目标类所需的样本数量。
- en: I chose to use a dictionary to specify the extent to which I wanted to oversample
    my data.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我选择使用字典来指定我希望过采样数据的程度。
- en: '**Additional tip 1**: If you have categorical variables in your dataset SMOTE
    is likely to create values for those variables that cannot happen. For example,
    if you have a variable called isMale, which could only take 0 or 1, then SMOTE
    might create 0.365 as a value.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**附加提示 1**：如果你的数据集中有分类变量，SMOTE可能会为这些变量创建无法发生的值。例如，如果你有一个名为isMale的变量，只能取0或1，SMOTE可能会创建0.365作为值。'
- en: Instead, you can use SMOTENC which takes into account the nature of categorical
    variables. This version is also available in the [imbalanced-learn](https://imbalanced-learn.readthedocs.io/en/stable/index.html)package.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，你可以使用SMOTENC，它考虑了分类变量的性质。这个版本也可以在[imbalanced-learn](https://imbalanced-learn.readthedocs.io/en/stable/index.html)包中找到。
- en: '**Additional tip 2: **Make sure to oversample after creating the train/test
    split so that you only oversample the train data. You typically do not want to
    test your model on synthetic data.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**附加提示 2**：确保在创建训练/测试拆分后再进行过采样，这样你只会过采样训练数据。你通常不希望在合成数据上测试你的模型。'
- en: 2\. Creating New Features
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2. 创建新特征
- en: To improve the quality and predictive power of our models, new features from
    existing variables are often created. We can create some interaction (e.g., multiply
    or divide) between each pair of variables hoping to find an interesting new feature.
    This, however, is a lengthy process and requires a significant amount of coding.
    Fortunately, this can be automated using **Deep Feature Synthesis**.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高模型的质量和预测能力，通常会从现有变量中创建新特征。我们可以在每对变量之间创建一些交互（例如，乘法或除法），希望找到一个有趣的新特征。然而，这个过程很繁琐，需要大量编码。幸运的是，这可以通过**Deep
    Feature Synthesis**自动化。
- en: Deep Feature Synthesis
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 深度特征合成
- en: Deep feature synthesis (DFS) is an algorithm which enables you to quickly create
    new variables with varying depth. For example, you can multiply pairs of columns
    but you can also choose to first multiply Column A with Column B and then add
    Column C.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 深度特征合成（DFS）是一种算法，可以快速创建具有不同深度的新变量。例如，你可以先乘以列A和列B，然后再加上列C。
- en: 'First, let me introduce the data I will be using for the example. I have chosen
    to use [HR analytics data](https://www.kaggle.com/lnvardanyan/hr-analytics) since
    the features are easily interpretable:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我介绍一下我将用于示例的数据。我选择使用[HR分析数据](https://www.kaggle.com/lnvardanyan/hr-analytics)，因为特征易于解释：
- en: '![](../Images/cb2ae660de54d3ae23210372dce00ae9.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cb2ae660de54d3ae23210372dce00ae9.png)'
- en: Simply based on our intuition we could identify `**average_monthly_hours**` divided
    by `**number_project**` as an interesting new variable. However, there might be
    much more relationships that we miss out on if we only follow intuition.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 基于我们的直觉，我们可以将`**average_monthly_hours**`除以`**number_project**`识别为一个有趣的新变量。然而，如果我们仅依靠直觉，可能会错过更多的关系。
- en: 'The [package](https://github.com/Featuretools/featuretools) does require an
    understanding of their use of Entities. However, if you use a single table you
    can simply follow the code below:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[包](https://github.com/Featuretools/featuretools)确实需要理解它们对Entities的使用。然而，如果你只使用一个表，可以简单地遵循下面的代码：'
- en: The first step is to create an `**entity**` from which relationships can be
    created with other tables if necessary. Next, we can simply run `**ft.dfs**` in
    order to create new variables. We specify how variables are created with the parameter `**trans_primitives**`.We
    chose to either add numeric variables together or multiply.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是从中创建一个`**entity**`，如果需要，可以与其他表创建关系。接下来，我们可以简单地运行`**ft.dfs**`来创建新变量。我们通过参数`**trans_primitives**`指定如何创建变量。我们选择将数字变量相加或相乘。
- en: '![Figure](../Images/28f211d4ba3627362890151f8d5e3091.png)The output of DFS
    if verbose = True'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '![图](../Images/28f211d4ba3627362890151f8d5e3091.png)如果verbose = True，DFS的输出'
- en: 'As you can see in the image above we have created an additional 668 features
    using only a few lines of code. A few examples of the features that were created:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在上面的图片中看到的，我们仅用几行代码就创建了额外的668个特征。以下是创建的一些特征示例：
- en: '`**last_evaluation**`multiplied with `**satisfaction_level**`'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**last_evaluation**`乘以`**satisfaction_level**`'
- en: '`**left**`multiplied with `**promotion_last_5years**`'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**left**`乘以`**promotion_last_5years**`'
- en: '`**average_monthly_hours**`multiplied with `**satisfaction_level**`plus `**time_spend_company**`'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**average_monthly_hours**`乘以`**satisfaction_level**`再加上`**time_spend_company**`'
- en: '**Additional tip 1: **Note that the implementation here is relatively basic.
    The great thing about DFS is that it can create new variables from aggregations
    between tables (e.g., facts and dimensions). See this [link](https://docs.featuretools.com/loading_data/using_entitysets.html) for
    an example.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**额外提示1：** 请注意，这里的实现相对基础。DFS的优点在于它可以通过表之间的聚合创建新变量（例如，事实和维度）。有关示例，请参见这个[链接](https://docs.featuretools.com/loading_data/using_entitysets.html)。'
- en: '**Additional tip 2: **Run `**ft.list_primitives()**`in order to see the full
    list of aggregation that you can do. It even handles timestamps, null values,
    and long/lat information.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**额外提示2：** 运行`**ft.list_primitives()**`以查看所有可以进行的聚合列表。它甚至处理时间戳、空值和经纬度信息。'
- en: 3\. Handling Missing Values
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3. 处理缺失值
- en: As always, there is no one best way of dealing with missing values. Depending
    on your data it might be sufficient to simply fill them with the mean or mode
    of certain groups. However, there are advanced techniques that use known parts
    of the data to **impute** the missing values.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 像往常一样，没有一种最佳的方法来处理缺失值。根据你的数据，可能仅用某些组的均值或众数来填补缺失值就足够了。然而，还有一些先进的技术使用已知的数据部分来**填补**缺失值。
- en: One such method is called **IterativeImputer** a new package in Scikit-Learn
    which is based on the popular R algorithm for imputing missing variables, MICE.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 一种方法叫做**IterativeImputer**，这是Scikit-Learn中的一个新包，基于流行的R算法MICE用于填补缺失变量。
- en: Iterative Imputer
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Iterative Imputer
- en: 'Although python is a great language for developing machine learning models,
    there are still quite a few methods that work better in R. An example is the well-establish
    imputation packages in R: missForest, mi, mice, etc.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Python是开发机器学习模型的出色语言，但仍然有一些方法在R中效果更好。例如，R中的成熟插补包：missForest、mi、mice等。
- en: The **Iterative Imputer** is developed by Scikit-Learn and models each feature
    with missing values as a function of other features. It uses that as an estimate
    for imputation. At each step, a feature is selected as output `y` and all other
    features are treated as inputs `X`. A regressor is then fitted on `X` and `y` and
    used to predict the missing values of `y`. This is done for each feature and repeated
    for several imputation rounds.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**Iterative Imputer**由Scikit-Learn开发，将每个具有缺失值的特征建模为其他特征的函数。它将此作为填补的估计。在每一步，选择一个特征作为输出`y`，所有其他特征作为输入`X`。然后在`X`和`y`上拟合回归器，并用于预测`y`的缺失值。这对每个特征都这样做，并重复进行几轮填补。'
- en: 'Let us take a look at an example. The data that I use is the well known Titanic
    dataset. In this dataset, the column `Age` has missing values that we would like
    to fill. The code, as always, is straightforward:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个例子。我使用的数据是著名的泰坦尼克号数据集。在这个数据集中，`Age` 列有缺失值，我们希望填补这些值。代码一如既往地简单：
- en: The great thing about this method is that it allows you to use an estimator
    of your choosing. I used a RandomForestRegressor to mimic the behavior of the
    frequently used missForest in R.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方法的一个好处是它允许你使用你选择的估算器。我使用了 RandomForestRegressor 来模拟 R 中常用的 missForest 的行为。
- en: '**Additional tip 1: **If you have sufficient data, then it might be an attractive
    option to simply delete samples with missing data. However, keep in mind that
    it could create bias in your data. Perhaps the missing data follows a pattern
    that you miss out on.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**附加提示 1:** 如果你拥有足够的数据，简单地删除缺失数据的样本可能是一个有吸引力的选项。然而，请记住，这可能会在数据中产生偏差。也许缺失的数据遵循某种模式，你会错过这些模式。'
- en: '**Additional tip 2**: The Iterative Imputer allows for different estimators
    to be used. After some testing, I found out that you can even use **Catboost** as
    an estimator! Unfortunately, LightGBM and XGBoost do not work since their random
    state names differ.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**附加提示 2:** 迭代插补器允许使用不同的估算器。经过一些测试，我发现你甚至可以使用**Catboost**作为估算器！不幸的是，由于其随机状态名称不同，LightGBM
    和 XGBoost 不适用。'
- en: 4\. Outlier Detection
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4\. 异常检测
- en: Outliers are difficult to detect without a good understanding of the data. If
    you know the data well you can more easily specify the thresholds at which your
    data still makes sense.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有对数据的良好理解，异常值很难被检测到。如果你对数据很熟悉，就可以更容易地指定数据仍然有意义的阈值。
- en: '![](../Images/7e4afc742b3d0d845a43120ebd4893c4.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7e4afc742b3d0d845a43120ebd4893c4.png)'
- en: At times this is not possible since a perfect understanding of the data is difficult
    to achieve. Instead, you can make use of Outlier Detection algorithms such as
    the popular **Isolation Forest**.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 有时这并不可能，因为对数据的完美理解难以实现。相反，你可以利用一些异常检测算法，例如流行的**孤立森林**。
- en: Isolation Forest
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 孤立森林
- en: In the Isolation Forest Algorithm, the keyword is *Isolation*. In essence, the
    algorithm checks how easily a sample can be isolated. This results in an isolation
    number which is calculated by the number of splits, in a Random Decision Tree,
    needed to isolate a sample. This isolation number is then averaged over all trees.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在孤立森林算法中，关键词是*孤立*。从本质上讲，该算法检查一个样本被孤立的难易程度。这会产生一个孤立数，该数值通过在随机决策树中分割所需的次数来计算。然后，将所有树上的孤立数取平均。
- en: '![Figure](../Images/6efe7cbcdaeaa7a5a1081b1ad8670850.png)Isolation Forest Procedure.
    Retrieved from: [https://donghwa-kim.github.io/iforest.html](https://donghwa-kim.github.io/iforest.html)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/6efe7cbcdaeaa7a5a1081b1ad8670850.png)孤立森林过程。来源于: [https://donghwa-kim.github.io/iforest.html](https://donghwa-kim.github.io/iforest.html)'
- en: If the algorithm only needs to do a few splits to find a sample, then it is
    more likely to be an outlier. The splits themselves are also randomly partitioned
    such that it produces shorter paths for anomalies. Thus, when the isolation number
    across all trees is low, then that sample is highly likely to be an anomaly.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果算法只需进行少量分割就能找到一个样本，那么它更可能是一个异常值。分割本身也是随机分割的，因此会产生更短的异常路径。因此，当所有树上的孤立数值较低时，该样本很可能是异常值。
- en: 'To show an example I again used the credit card dataset that we used before:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 为了举例说明，我再次使用了之前使用过的信用卡数据集：
- en: '![](../Images/3eb0d3d1bc57941cedf601ee45bb9219.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3eb0d3d1bc57941cedf601ee45bb9219.png)'
- en: '**Additional Tip 1**: There is an [extended](https://github.com/sahandha/eif) version
    of the Isolation Forest available that improves on some shortcomings. However,
    there have been [mixed](https://towardsdatascience.com/outlier-detection-with-extended-isolation-forest-1e248a3fe97b) reviews.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**附加提示 1:** 有一个[扩展](https://github.com/sahandha/eif)版的孤立森林，它改进了一些不足之处。然而，也有[褒贬不一](https://towardsdatascience.com/outlier-detection-with-extended-isolation-forest-1e248a3fe97b)的评论。'
- en: Conclusion
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论
- en: Hopefully, the tips and tricks in this article will help you engineer and preprocess
    those features. Notebook with code can be found [here](https://github.com/MaartenGr/feature-engineering/blob/master/Engineering%20Tips.ipynb).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 希望本文中的技巧和窍门能帮助你进行特征工程和预处理。包含代码的笔记本可以在[这里](https://github.com/MaartenGr/feature-engineering/blob/master/Engineering%20Tips.ipynb)找到。
- en: Any feedback and comments are, as always, greatly appreciated!
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 任何反馈和评论一如既往地受到高度赞赏！
- en: This is the fourth post as part of an (at least) monthly series by [Emset](https://www.emset.net/?source=post_page---------------------------) in
    which we show new and exciting methods for applying and developing Machine Learning
    techniques.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这是[Emset](https://www.emset.net/?source=post_page---------------------------)发布的一个（至少）每月系列中的第四篇文章，我们展示了应用和开发机器学习技术的新方法和令人兴奋的技术。
- en: '**Bio: [Maarten Grootendorst](https://www.linkedin.com/in/mgrootendorst/)**
    is a Data Scientist, I/O Psychologist & Clinical Psychologist. He is passionate
    about anything AI-related! Get in touch: [https://www.linkedin.com/in/mgrootendorst/''](https://www.linkedin.com/in/mgrootendorst/)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**个人简介：[Maarten Grootendorst](https://www.linkedin.com/in/mgrootendorst/)**
    是一名数据科学家、工业与组织心理学家以及临床心理学家。他对任何与AI相关的事物充满热情！请联系：[https://www.linkedin.com/in/mgrootendorst/''](https://www.linkedin.com/in/mgrootendorst/)'
- en: '[Original](https://towardsdatascience.com/4-tips-for-advanced-feature-engineering-and-preprocessing-ec11575c09ea).
    Reposted with permission.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/4-tips-for-advanced-feature-engineering-and-preprocessing-ec11575c09ea)。经许可转载。'
- en: '**Related:**'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关内容：**'
- en: '[9 Tips For Training Lightning-Fast Neural Networks In Pytorch](/2019/08/9-tips-training-lightning-fast-neural-networks-pytorch.html)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在Pytorch中训练快速神经网络的9个技巧](/2019/08/9-tips-training-lightning-fast-neural-networks-pytorch.html)'
- en: '[7 Tips for Dealing With Small Data](/2019/07/7-tips-dealing-small-data.html)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[处理小数据的7个技巧](/2019/07/7-tips-dealing-small-data.html)'
- en: '[7 Steps to Mastering Data Preparation for Machine Learning with Python — 2019
    Edition](/2019/06/7-steps-mastering-data-preparation-python.html)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[掌握Python机器学习数据准备的7个步骤 — 2019年版](/2019/06/7-steps-mastering-data-preparation-python.html)'
- en: More On This Topic
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多主题
- en: '[Feature Store Summit 2022: A free conference on Feature Engineering](https://www.kdnuggets.com/2022/10/hopsworks-feature-store-summit-2022-free-conference-feature-engineering.html)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Feature Store Summit 2022：关于特征工程的免费会议](https://www.kdnuggets.com/2022/10/hopsworks-feature-store-summit-2022-free-conference-feature-engineering.html)'
- en: '[Advanced Feature Selection Techniques for Machine Learning Models](https://www.kdnuggets.com/2023/06/advanced-feature-selection-techniques-machine-learning-models.html)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[机器学习模型的高级特征选择技术](https://www.kdnuggets.com/2023/06/advanced-feature-selection-techniques-machine-learning-models.html)'
- en: '[Building a Tractable, Feature Engineering Pipeline for Multivariate…](https://www.kdnuggets.com/2022/03/building-tractable-feature-engineering-pipeline-multivariate-time-series.html)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[构建一个可处理的、多变量时间序列特征工程管道](https://www.kdnuggets.com/2022/03/building-tractable-feature-engineering-pipeline-multivariate-time-series.html)'
- en: '[Using RAPIDS cuDF to Leverage GPU in Feature Engineering](https://www.kdnuggets.com/2023/06/rapids-cudf-leverage-gpu-feature-engineering.html)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用RAPIDS cuDF利用GPU进行特征工程](https://www.kdnuggets.com/2023/06/rapids-cudf-leverage-gpu-feature-engineering.html)'
- en: '[A Practical Approach To Feature Engineering In Machine Learning](https://www.kdnuggets.com/2023/07/practical-approach-feature-engineering-machine-learning.html)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[机器学习中特征工程的实用方法](https://www.kdnuggets.com/2023/07/practical-approach-feature-engineering-machine-learning.html)'
- en: '[Feature Engineering for Beginners](https://www.kdnuggets.com/feature-engineering-for-beginners)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[特征工程入门](https://www.kdnuggets.com/feature-engineering-for-beginners)'
