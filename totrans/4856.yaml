- en: 'Jupyter Notebook for Beginners: A Tutorial'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jupyter Notebook 初学者教程
- en: 原文：[https://www.kdnuggets.com/2018/05/jupyter-notebook-beginners-tutorial.html/2](https://www.kdnuggets.com/2018/05/jupyter-notebook-beginners-tutorial.html/2)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2018/05/jupyter-notebook-beginners-tutorial.html/2](https://www.kdnuggets.com/2018/05/jupyter-notebook-beginners-tutorial.html/2)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](/2018/05/jupyter-notebook-beginners-tutorial.html?page=2#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](/2018/05/jupyter-notebook-beginners-tutorial.html?page=2#comments)'
- en: Kernels
  id: totrans-3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 内核
- en: Behind every notebook runs a kernel. When you run a code cell, that code is
    executed within the kernel and any output is returned back to the cell to be displayed.
    The kernel's state persists over time and between cells — it pertains to the document
    as a whole and not individual cells.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 每个笔记本的背后都运行着一个内核。当你运行一个代码单元格时，该代码在内核中执行，任何输出会返回到单元格中显示。内核的状态会随着时间的推移和单元格之间持续存在——它涉及整个文档而不是单个单元格。
- en: For example, if you import libraries or declare variables in one cell, they
    will be available in another. In this way, you can think of a notebook document
    as being somewhat comparable to a script file, except that it is multimedia. Let's
    try this out to get a feel for it. First, we'll import a Python package and define
    a function.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你在一个单元格中导入库或声明变量，它们将在另一个单元格中可用。通过这种方式，你可以把笔记本文件看作有点类似于脚本文件，只不过它是多媒体的。让我们试一下以感受一下。首先，我们将导入一个
    Python 包并定义一个函数。
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Once we've executed the cell above, we can reference `np` and `square` in any
    other cell.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们执行了上面的单元格，我们可以在任何其他单元格中引用`np`和`square`。
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This will work regardless of the order of the cells in your notebook. You can
    try it yourself, let's print out our variables again.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这将无论笔记本中的单元格顺序如何都有效。你可以自己尝试一下，让我们再次打印出我们的变量。
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: No surprises here! But now let's change `y`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这里没有什么意外！但现在让我们改变`y`。
- en: '[PRE5]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: What do you think will happen if we run the cell containing our `print` statement
    again? We will get the output `Is 4 squared is 10?`!
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们再次运行包含`print`语句的单元格，你认为会发生什么？我们会得到输出`Is 4 squared is 10?`！
- en: 'Most of the time, the flow in your notebook will be top-to-bottom, but it''s
    common to go back to make changes. In this case, the order of execution stated
    to the left of each cell, such as `In [6]`, will let you know whether any of your
    cells have stale output. And if you ever wish to reset things, there are several
    incredibly useful options from the Kernel menu:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，你的笔记本流程将是自上而下的，但通常会返回进行更改。在这种情况下，单元格左侧标示的执行顺序，比如`In [6]`，会告诉你是否有任何单元格的输出过时。如果你想重置所有内容，可以从内核菜单中选择几个非常有用的选项：
- en: 'Restart: restarts the kernel, thus clearing all the variables etc that were
    defined.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新启动：重新启动内核，从而清除所有已定义的变量等。
- en: 'Restart & Clear Output: same as above but will also wipe the output displayed
    below your code cells.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新启动并清除输出：与上面相同，但还会清除你代码单元格下方显示的输出。
- en: 'Restart & Run All: same as above but will also run all your cells in order
    from first to last.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新启动并运行所有：与上面相同，但还会按顺序从第一个到最后一个运行所有单元格。
- en: If your kernel is ever stuck on a computation and you wish to stop it, you can
    choose the Interupt option.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的内核在计算中卡住了，并且你希望停止它，你可以选择中断选项。
- en: '**Choosing a kernal**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**选择内核**'
- en: You may have noticed that Jupyter gives you the option to change kernel, and
    in fact there are many different options to choose from. Back when you created
    a new notebook from the dashboard by selecting a Python version, you were actually
    choosing which kernel to use.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，Jupyter 允许你更改内核，实际上有很多不同的选项可供选择。当你从仪表板创建一个新笔记本时，选择一个 Python 版本，实际上是选择了要使用的内核。
- en: Not only are there kernels for different versions of Python, but also for [over
    100 languages](https://github.com/jupyter/jupyter/wiki/Jupyter-kernels) including
    Java, C, and even Fortran. Data scientists may be particularly interested in the
    kernels for [R](https://irkernel.github.io/) and [Julia](https://github.com/JuliaLang/IJulia.jl),
    as well as both [imatlab](https://github.com/imatlab/imatlab) and the [Calysto
    MATLAB Kernel](https://github.com/calysto/matlab_kernel) for Matlab. The [SoS
    kernel](https://github.com/vatlab/SOS) provides multi-language support within
    a single notebook. Each kernel has its own installation instructions, but will
    likely require you to run some commands on your computer.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 不仅有针对不同版本的 Python 的内核，还有针对[100 多种语言](https://github.com/jupyter/jupyter/wiki/Jupyter-kernels)的内核，包括
    Java、C，甚至 Fortran。数据科学家可能特别感兴趣于[R](https://irkernel.github.io/)和[Julia](https://github.com/JuliaLang/IJulia.jl)的内核，以及[imatlab](https://github.com/imatlab/imatlab)和[Calysto
    MATLAB 内核](https://github.com/calysto/matlab_kernel)的内核。 [SoS 内核](https://github.com/vatlab/SOS)提供了在单个笔记本中支持多种语言的功能。每个内核都有自己的安装说明，但可能需要你在计算机上运行一些命令。
- en: Example analysis
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例分析
- en: Now we've looked at *what* a Jupyter Notebook is, it's time to look at *how* they're
    used in practice, which should give you a clearer understanding of *why* they
    are so popular. It's finally time to get started with that Fortune 500 data set
    mentioned earlier. Remember, our goal is to find out how the profits of the largest
    companies in the US changed historically.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了*什么是* Jupyter Notebook，是时候看看*如何*在实践中使用它们了，这将帮助你更清楚地理解*为什么*它们如此受欢迎。现在终于可以开始使用之前提到的《财富500强》数据集了。记住，我们的目标是了解美国最大公司历史上利润的变化情况。
- en: It's worth noting that everyone will develop their own preferences and style,
    but the general principles still apply, and you can follow along with this section
    in your own notebook if you wish, which gives you the scope to play around.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，每个人都会形成自己的偏好和风格，但一般原则仍然适用。如果你愿意，可以在自己的笔记本中跟随本节内容，这样你可以进行一些实验。
- en: Naming your notebooks
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 命名你的笔记本
- en: Before you start writing your project, you'll probably want to give it a meaningful
    name. Perhaps somewhat confusingly, you cannot name or rename your notebooks from
    the notebook app itself, but must use either the dashboard or your file browser
    to rename the `.ipynb` file. We'll head back to the dashboard to rename the file
    you created earlier, which will have the default notebook file name `Untitled.ipynb`.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在你开始编写项目之前，你可能会想给它一个有意义的名字。也许有点令人困惑的是，你不能直接在笔记本应用中命名或重命名笔记本，而是必须使用仪表板或文件浏览器来重命名`.ipynb`文件。我们将返回仪表板来重命名你之前创建的文件，它将有一个默认的笔记本文件名`Untitled.ipynb`。
- en: You cannot rename a notebook while it is running, so you've first got to shut
    it down. The easiest way to do this is to select "File > Close and Halt" from
    the notebook menu. However, you can also shutdown the kernel either by going to
    "Kernel > Shutdown" from within the notebook app or by selecting the notebook
    in the dashboard and clicking "Shutdown" (see image below).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你不能在笔记本运行时重命名它，所以你需要先将其关闭。最简单的方法是从笔记本菜单中选择“文件 > 关闭并停止”。然而，你也可以通过在笔记本应用中选择“内核
    > 关闭”来关闭内核，或者通过在仪表板中选择笔记本并点击“关闭”（见下图）来关闭内核。
- en: '![A running notebook](../Images/beb3b6fedbb2c81625553af42f03e64e.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![正在运行的笔记本](../Images/beb3b6fedbb2c81625553af42f03e64e.png)'
- en: You can then select your notebook and and click "Rename" in the dashboard controls.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你可以选择你的笔记本，并点击仪表板控制中的“重命名”。
- en: '![A running notebook](../Images/90719bbcf4b73a92d1a4b6cf21b8ff48.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![正在运行的笔记本](../Images/90719bbcf4b73a92d1a4b6cf21b8ff48.png)'
- en: Note that closing the notebook tab in your browser will **not** "close" your
    notebook in the way closing a document in a traditional application will. The
    notebook's kernel will continue to run in the background and needs to be shut
    down before it is truly "closed" — though this is pretty handy if you accidentally
    close your tab or browser! If the kernel is shut down, you can close the tab without
    worrying about whether it is still running or not.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，关闭浏览器中的笔记本标签页**不会**像在传统应用中关闭文档那样“关闭”笔记本。笔记本的内核将继续在后台运行，需要在真正“关闭”之前手动关闭——不过如果你不小心关闭了标签页或浏览器，这一点非常方便！如果内核已经关闭，你可以关闭标签页而无需担心是否仍在运行。
- en: Once you've named your notebook, open it back up and we'll get going.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你给笔记本命名，重新打开它，我们就可以开始了。
- en: Setup
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置
- en: It's common to start off with a code cell specifically for imports and setup,
    so that if you choose to add or change anything, you can simply edit and re-run
    the cell without causing any side-effects.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，首先会有一个专门用于导入和设置的代码单元，这样如果你选择添加或更改任何内容，你可以简单地编辑并重新运行该单元，而不会造成任何副作用。
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We import [pandas](https://pandas.pydata.org/) to work with our data, [Matplotlib](https://matplotlib.org/) to
    plot charts, and [Seaborn](https://seaborn.pydata.org/) to make our charts prettier.
    It's also common to import [NumPy](http://www.numpy.org/) but in this case, although
    we use it via pandas, we don't need to explicitly. And that first line isn't a
    Python command, but uses something called a line magic to instruct Jupyter to
    capture Matplotlib plots and render them in the cell output; this is one of a
    range of advanced features that are out of the scope of this article.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们导入了[pandas](https://pandas.pydata.org/)以处理数据， [Matplotlib](https://matplotlib.org/)以绘制图表，
    和[Seaborn](https://seaborn.pydata.org/)以使图表更加美观。 通常也会导入[NumPy](http://www.numpy.org/)但在这种情况下，虽然我们通过pandas使用它，但不需要显式导入。而且那第一行不是Python命令，而是使用了称为行魔法的东西来指示Jupyter捕获Matplotlib图表并在单元格输出中呈现；这是一系列高级功能中的一个，超出了本文的范围。
- en: Let's go ahead and load our data.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续加载数据。
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: It's sensible to also do this in a single cell in case we need to reload it
    at any point.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做也是明智的，以防我们需要在任何时候重新加载它。
- en: Save and Checkpoint
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 保存和检查点
- en: Now we've got started, it's best practice to save regularly. Pressing `Ctrl
    + S` will save your notebook by calling the "Save and Checkpoint" command, but
    what this checkpoint thing?
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经开始，最好的做法是定期保存。按`Ctrl + S`将通过调用“保存和检查点”命令来保存你的笔记本，但这个检查点是什么呢？
- en: Every time you create a new notebook, a checkpoint file is created as well as
    your notebook file; it will be located within a hidden subdirectory of your save
    location called `.ipynb_checkpoints` and is also a `.ipynb` file. By default,
    Jupyter will autosave your notebook every 120 seconds to this checkpoint file
    without altering your primary notebook file. When you "Save and Checkpoint," both
    the notebook and checkpoint files are updated. Hence, the checkpoint enables you
    to recover your unsaved work in the event of an unexpected issue. You can revert
    to the checkpoint from the menu via "File > Revert to Checkpoint."
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 每次你创建一个新的笔记本时，都会创建一个检查点文件以及你的笔记本文件；它将位于你保存位置的一个名为`.ipynb_checkpoints`的隐藏子目录中，并且也是一个`.ipynb`文件。默认情况下，Jupyter会每120秒自动保存你的笔记本到这个检查点文件中，而不会更改你的主要笔记本文件。当你“保存和检查点”时，笔记本和检查点文件都会更新。因此，检查点使你能够在遇到意外问题时恢复未保存的工作。你可以通过菜单中的“文件
    > 恢复到检查点”来恢复到检查点。
- en: Investigating our data set
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调查我们的数据集
- en: Now we're really rolling! Our notebook is safely saved and we've loaded our
    data set `df` into the most-used pandas data structure, which is called a `DataFrame` and
    basically looks like a table. What does ours look like?
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们真的开始了！我们的笔记本已经安全保存，我们已经将数据集`df`加载到最常用的pandas数据结构中，它叫做`DataFrame`，基本上看起来像一个表格。我们的数据集看起来怎么样呢？
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '|  | Year | Rank | Company | Revenue (in millions) | Profit (in millions) |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '|  | 年份 | 排名 | 公司 | 收入（百万） | 利润（百万） |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| 0 | 1955 | 1 | General Motors | 9823.5 | 806 |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 0 | 1955 | 1 | 通用汽车 | 9823.5 | 806 |'
- en: '| 1 | 1955 | 2 | Exxon Mobil | 5661.4 | 584.8 |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 1955 | 2 | 埃克森美孚 | 5661.4 | 584.8 |'
- en: '| 2 | 1955 | 3 | U.S. Steel | 3250.4 | 195.4 |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 1955 | 3 | 美国钢铁公司 | 3250.4 | 195.4 |'
- en: '| 3 | 1955 | 4 | General Electric | 2959.1 | 212.6 |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 1955 | 4 | 通用电气 | 2959.1 | 212.6 |'
- en: '| 4 | 1955 | 5 | Esmark | 2510.8 | 19.1 |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 1955 | 5 | Esmark | 2510.8 | 19.1 |'
- en: '[PRE9]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '|  | Year | Rank | Company | Revenue (in millions) | Profit (in millions) |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '|  | 年份 | 排名 | 公司 | 收入（百万） | 利润（百万） |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| 25495 | 2005 | 496 | Wm. Wrigley Jr. | 3648.6 | 493 |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| 25495 | 2005 | 496 | Wm. Wrigley Jr. | 3648.6 | 493 |'
- en: '| 25496 | 2005 | 497 | Peabody Energy | 3631.6 | 175.4 |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| 25496 | 2005 | 497 | 皮博迪能源公司 | 3631.6 | 175.4 |'
- en: '| 25497 | 2005 | 498 | Wendy''s International | 3630.4 | 57.8 |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| 25497 | 2005 | 498 | 温迪国际 | 3630.4 | 57.8 |'
- en: '| 25498 | 2005 | 499 | Kindred Healthcare | 3616.6 | 70.6 |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| 25498 | 2005 | 499 | Kindred Healthcare | 3616.6 | 70.6 |'
- en: '| 25499 | 2005 | 500 | Cincinnati Financial | 3614.0 | 584 |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| 25499 | 2005 | 500 | 辛辛那提金融公司 | 3614.0 | 584 |'
- en: Looking good. We have the columns we need, and each row corresponds to a single
    company in a single year.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来不错。我们有了需要的列，每一行都对应一个公司在一个特定年份的数据。
- en: Let's just rename those columns so we can refer to them later.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只是重命名这些列，以便以后可以引用它们。
- en: '[PRE10]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Next, we need to explore our data set. Is it complete? Did pandas read it as
    expected? Are any values missing?
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要探索一下我们的数据集。数据集是否完整？pandas 是否按预期读取了数据？是否有缺失值？
- en: '[PRE11]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Okay, that looks good — that's 500 rows for every year from 1955 to 2005, inclusive.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，这看起来不错——从1955年到2005年，每年有500行数据。
- en: Let's check whether our data set has been imported as we would expect. A simple
    check is to see if the data types (or dtypes) have been correctly interpreted.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查一下我们的数据集是否已按预期导入。一个简单的检查方法是查看数据类型（或 dtypes）是否被正确解释。
- en: '[PRE13]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Uh oh. It looks like there's something wrong with the profits column — we would
    expect it to be a `float64` like the revenue column. This indicates that it probably
    contains some non-integer values, so let's take a look.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 哎呀。看起来利润列有问题——我们希望它像收入列一样是`float64`类型。这表明它可能包含一些非整数值，因此让我们来看看。
- en: '[PRE15]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '|  | year | rank | company | revenue | profit |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '|  | 年份 | 排名 | 公司 | 收入 | 利润 |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| 228 | 1955 | 229 | Norton | 135.0 | N.A. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 228 | 1955 | 229 | Norton | 135.0 | N.A. |'
- en: '| 290 | 1955 | 291 | Schlitz Brewing | 100.0 | N.A. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| 290 | 1955 | 291 | Schlitz Brewing | 100.0 | N.A. |'
- en: '| 294 | 1955 | 295 | Pacific Vegetable Oil | 97.9 | N.A. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| 294 | 1955 | 295 | Pacific Vegetable Oil | 97.9 | N.A. |'
- en: '| 296 | 1955 | 297 | Liebmann Breweries | 96.0 | N.A. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| 296 | 1955 | 297 | Liebmann Breweries | 96.0 | N.A. |'
- en: '| 352 | 1955 | 353 | Minneapolis-Moline | 77.4 | N.A. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| 352 | 1955 | 353 | Minneapolis-Moline | 77.4 | N.A. |'
- en: Just as we suspected! Some of the values are strings, which have been used to
    indicate missing data. Are there any other values that have crept in?
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所怀疑的那样！一些值是字符串，用于表示缺失数据。是否还有其他值混入了？
- en: '[PRE16]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: That makes it easy to interpret, but what should we do? Well, that depends how
    many values are missing.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得解释变得容易，但我们应该怎么做呢？这取决于缺失值的数量。
- en: '[PRE18]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: It's a small fraction of our data set, though not completely inconsequential
    as it is still around 1.5%. If rows containing `N.A.` are, roughly, uniformly
    distributed over the years, the easiest solution would just be to remove them.
    So let's have a quick look at the distribution.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们数据集的一小部分，但并不是完全无关紧要，因为它仍然约占1.5%。如果包含`N.A.`的行大致上在各个年份中均匀分布，最简单的解决方案就是删除这些行。所以让我们快速查看一下分布情况。
- en: '[PRE20]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![Missing value distribution](../Images/9a7b7cae1a0e30a28f5faaa379801552.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![缺失值分布](../Images/9a7b7cae1a0e30a28f5faaa379801552.png)'
- en: At a glance, we can see that the most invalid values in a single year is fewer
    than 25, and as there are 500 data points per year, removing these values would
    account for less than 4% of the data for the worst years. Indeed, other than a
    surge around the 90s, most years have fewer than half the missing values of the
    peak. For our purposes, let's say this is acceptable and go ahead and remove these
    rows.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 一眼看去，我们可以看到单一年份中无效值的数量不到25，而每年有500个数据点，删除这些值在最坏的情况下占数据的不到4%。实际上，除了90年代的激增，大多数年份的缺失值数量不到峰值的一半。就我们的目的而言，我们可以认为这是可以接受的，接着删除这些行。
- en: '[PRE21]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: We should check that worked.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该检查一下是否成功。
- en: '[PRE22]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Great! We have finished our data set setup.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！我们已经完成了数据集的设置。
- en: If you were going to present your notebook as a report, you could get rid of
    the investigatory cells we created, which are included here as a demonstration
    of the flow of working with notebooks, and merge relevant cells (see the Advanced
    Functionality section below for more on this) to create a single data set setup
    cell. This would mean that if we ever mess up our data set elsewhere, we can just
    rerun the setup cell to restore it.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打算将你的笔记本作为报告呈现，你可以删除我们创建的调查性单元格，这些单元格在这里作为工作流演示，合并相关单元格（有关更多信息，请参见下面的高级功能部分）以创建一个单一的数据集设置单元格。这意味着如果我们在其他地方搞砸了数据集，我们只需重新运行设置单元格即可恢复。
- en: Plotting with matplotlib
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 matplotlib 绘图
- en: Next, we can get to addressing the question at hand by plotting the average
    profit by year. We might as well plot the revenue as well, so first we can define
    some variables and a method to reduce our code.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以通过绘制每年的平均利润来解决手头的问题。我们也可以绘制收入，所以首先我们可以定义一些变量和方法来简化我们的代码。
- en: '[PRE26]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Now let's plot!
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们绘图吧！
- en: '[PRE27]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '![Increase in mean Fortune 500 company profits from 1955 to 2005](../Images/c6061d92ec4e570f1803e0a2db5bc8f4.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![1955年至2005年《财富》500强公司利润的增长](../Images/c6061d92ec4e570f1803e0a2db5bc8f4.png)'
- en: Wow, that looks like an exponential, but it's got some huge dips. They must
    correspond to the [early 1990s recession](https://en.wikipedia.org/wiki/Early_1990s_recession) and
    the [dot-com bubble](https://en.wikipedia.org/wiki/Dot-com_bubble). It's pretty
    interesting to see that in the data. But how come profits recovered to even higher
    levels post each recession?
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 哇，这看起来像是一个指数曲线，但有一些巨大的波动。它们一定对应于[1990年代初期的衰退](https://en.wikipedia.org/wiki/Early_1990s_recession)和[互联网泡沫](https://en.wikipedia.org/wiki/Dot-com_bubble)。在数据中看到这些现象相当有趣。但为什么每次衰退后，利润会恢复到更高的水平呢？
- en: Maybe the revenues can tell us more.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 也许收入能告诉我们更多信息。
- en: '[PRE28]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '![Increase in mean Fortune 500 company revenues from 1955 to 2005](../Images/44f82f195a35df4340d486dc1dd59663.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![1955年至2005年财富500强公司收入的增加](../Images/44f82f195a35df4340d486dc1dd59663.png)'
- en: That adds another side to the story. Revenues were no way nearly as badly hit,
    that's some great accounting work from the finance departments.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这为故事增添了另一面。收入并没有受到如此严重的打击，这得归功于财务部门的出色会计工作。
- en: With a little help [from Stack Overflow](https://stackoverflow.com/a/47582329/604687),
    we can superimpose these plots with +/- their standard deviations.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在[Stack Overflow](https://stackoverflow.com/a/47582329/604687)的帮助下，我们可以在这些图上叠加其标准差的正负范围。
- en: '[PRE29]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '![jupyter-notebook-tutorial_48_0](../Images/963bf0012aa11cc05a286b3550d46f63.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![jupyter-notebook-tutorial_48_0](../Images/963bf0012aa11cc05a286b3550d46f63.png)'
- en: That's staggering, the standard deviations are huge. Some Fortune 500 companies
    make billions while others lose billions, and the risk has increased along with
    rising profits over the years. Perhaps some companies perform better than others;
    are the profits of the top 10% more or less volatile than the bottom 10%?
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这令人吃惊，标准差非常大。一些财富500强公司赚取数十亿，而其他公司则亏损数十亿，多年来风险随着利润的增长而增加。也许有些公司表现优于其他公司；排名前10%的公司利润是否比排名后10%的公司更稳定？
- en: There are plenty of questions that we could look into next, and it's easy to
    see how the flow of working in a notebook matches one's own thought process, so
    now it's time to draw this example to a close. This flow helped us to easily investigate
    our data set in one place without context switching between applications, and
    our work is immediately sharable and reproducible. If we wished to create a more
    concise report for a particular audience, we could quickly refactor our work by
    merging cells and removing intermediary code.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们还有许多问题可以探讨，而且很容易看出在笔记本中工作的流程如何与个人的思维过程相匹配，所以现在是时候结束这个例子了。这种流程帮助我们在一个地方轻松调查数据集，而无需在应用程序之间切换上下文，并且我们的工作可以立即共享和复现。如果我们希望为特定的受众创建更简洁的报告，我们可以通过合并单元格和删除中间代码来快速重构我们的工作。
- en: Sharing your notebooks
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 共享你的笔记本
- en: When people talk of sharing their notebooks, there are generally two paradigms
    they may be considering. Most often, individuals share the end-result of their
    work, much like this article itself, which means sharing non-interactive, pre-rendered
    versions of their notebooks; however, it is also possible to collaborate on notebooks
    with the aid version control systems such as [Git](https://git-scm.com/).
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 当人们谈论共享他们的笔记本时，他们通常考虑两种模式。大多数情况下，个人分享的是他们工作的最终结果，就像这篇文章本身一样，这意味着分享非交互式的、预渲染版本的笔记本；然而，也可以借助版本控制系统如[Git](https://git-scm.com/)进行协作。
- en: That said, there are [some](https://mybinder.org/) nascent [companies](https://kyso.io/) popping
    up on the web offering the ability to run interactive Jupyter Notebooks in the
    cloud.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，网上出现了一些新兴的[公司](https://kyso.io/)，提供在云端运行交互式Jupyter笔记本的能力。
- en: Before you share
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在分享之前
- en: 'A shared notebook will appear exactly in the state it was in when you export
    or save it, including the output of any code cells. Therefore, to ensure that
    your notebook is share-ready, so to speak, there are a few steps you should take
    before sharing:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 共享笔记本将以你导出或保存时的状态出现，包括任何代码单元格的输出。因此，为了确保你的笔记本在共享时准备好，你应该在分享之前采取一些步骤：
- en: Click "Cell > All Output > Clear"
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“单元格 > 全部输出 > 清除”
- en: Click "Kernel > Restart & Run All"
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“内核 > 重新启动并运行全部”
- en: Wait for your code cells to finish executing and check they did so as expected
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待你的代码单元格执行完毕，并检查它们是否按预期完成
- en: This will ensure your notebooks don't contain intermediary output, have a stale
    state, and executed in order at the time of sharing.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这将确保你的笔记本不包含中间输出，状态不过时，并且在分享时按照顺序执行。
- en: Exporting your notebooks
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 导出你的笔记本
- en: Jupyter has built-in support for exporting to HTML and PDF as well as several
    other formats, which you can find from the menu under "File > Download As." If
    you wish to share your notebooks with a small private group, this functionality
    may well be all you need. Indeed, as many researchers in academic institutions
    are given some public or internal webspace, and because you can export a notebook
    to an HTML file, Jupyter Notebooks can be an especially convenient way for them
    to share their results with their peers.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter内置了导出到HTML和PDF以及其他几种格式的支持，你可以从“文件 > 另存为”菜单中找到这些选项。如果你希望将笔记本分享给一个小的私人组，这个功能可能已经足够。事实上，由于许多学术机构的研究人员会有一些公共或内部的网页空间，并且因为你可以将笔记本导出为HTML文件，Jupyter笔记本可以是他们与同行分享研究结果的特别便捷的方式。
- en: But if sharing exported files doesn't cut it for you, there are also some immensely
    popular methods of sharing `.ipynb` files more directly on the web.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果分享导出的文件对你来说不够直接，还有一些非常流行的方法可以更直接地在网上分享`.ipynb`文件。
- en: GitHub
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: GitHub
- en: With the [number of public notebooks on GitHub](https://github.com/parente/nbestimate) exceeding
    1.8 million by early 2018, it is surely the most popular independent platform
    for sharing Jupyter projects with the world. GitHub has integrated support for
    rendering `.ipynb` files directly both in repositories and gists on its website.
    If you aren't already aware, [GitHub](https://github.com/) is a code hosting platform
    for version control and collaboration for repositories created with [Git](https://git-scm.com/).
    You'll need an account to use their services, but standard accounts are free.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 到2018年初，GitHub上的[公开笔记本数量](https://github.com/parente/nbestimate)超过180万，这无疑是分享Jupyter项目给全世界的最受欢迎的独立平台。GitHub已经集成了对`.ipynb`文件的直接渲染支持，无论是在其网站上的代码库还是gists。如果你还不知情，[GitHub](https://github.com/)是一个用于版本控制和协作的代码托管平台，支持使用[Git](https://git-scm.com/)创建的代码库。你需要一个账户来使用他们的服务，但标准账户是免费的。
- en: 'Once you have a GitHub account, the easiest way to share a notebook on GitHub
    doesn''t actually require Git at all. Since 2008, GitHub has provided its Gist
    service for hosting and sharing code snippets, which each get their own repository.
    To share a notebook using Gists:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你有了GitHub账户，最简单的在GitHub上分享笔记本的方式其实根本不需要Git。自2008年以来，GitHub提供了其Gist服务，用于托管和分享代码片段，每个片段都有自己的仓库。要使用Gists分享笔记本：
- en: Sign in and browse to [gist.github.com](https://gist.github.com/).
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录并浏览到[gist.github.com](https://gist.github.com/)。
- en: Open your `.ipynb` file in a text editor, select all and copy the JSON inside.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本编辑器中打开你的`.ipynb`文件，选择全部并复制其中的JSON内容。
- en: Paste the notebook JSON into the gist.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将笔记本的JSON粘贴到gist中。
- en: Give your Gist a filename, remembering to add `.iypnb` or this will not work.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给你的Gist起一个文件名，记得添加`.iypnb`，否则无法使用。
- en: Click either "Create secret gist" or "Create public gist."
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“创建秘密gist”或“创建公开gist”。
- en: 'This should look something like the following:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该看起来像下面这样：
- en: '![Creating a Gist](../Images/d52a64eb4a582f70fdebcd1036e8850b.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![创建Gist](../Images/d52a64eb4a582f70fdebcd1036e8850b.png)'
- en: If you created a public Gist, you will now be able to share its URL with anyone,
    and others will be able to [fork and clone](https://help.github.com/articles/forking-and-cloning-gists/) your
    work.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你创建了一个公开的Gist，你现在可以与任何人分享其URL，其他人也可以[fork和克隆](https://help.github.com/articles/forking-and-cloning-gists/)你的工作。
- en: Creating your own Git repository and sharing this on GitHub is beyond the scope
    of this tutorial, but [GitHub provides plenty of guides](https://guides.github.com/) for
    you to get started on your own.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 创建你自己的Git仓库并在GitHub上分享超出了本教程的范围，但[GitHub提供了大量的指南](https://guides.github.com/)来帮助你自行入门。
- en: An extra tip for those using git is to [add an exception](https://stackoverflow.com/q/35916658/604687) to
    your `.gitignore` for those hidden `.ipynb_checkpoints` directories Jupyter creates,
    so as not to commit checkpoint files unnecessarily to your repo.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 对于使用git的用户，一个额外的提示是为那些Jupyter创建的隐藏`.ipynb_checkpoints`目录在你的`.gitignore`中[添加一个例外](https://stackoverflow.com/q/35916658/604687)，以避免不必要地将检查点文件提交到你的代码库。
- en: Nbviewer
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Nbviewer
- en: Having grown to render [hundreds of thousands](https://blog.jupyter.org/rendering-notebooks-on-github-f7ac8736d686) of
    notebooks every week by 2015, NBViewer is the most popular notebook renderer on
    the web. If you already have somewhere to host your Jupyter Notebooks online,
    be it GitHub or elsewhere, NBViewer will render your notebook and provide a shareable
    URL along with it. Provided as a free service as part of Project Jupyter, it is
    available at [nbviewer.jupyter.org](https://nbviewer.jupyter.org/).
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 到2015年，NBViewer已经每天渲染[成千上万](https://blog.jupyter.org/rendering-notebooks-on-github-f7ac8736d686)的笔记本，成为网络上最受欢迎的笔记本渲染器。如果你已经有地方来在线托管你的Jupyter笔记本，无论是GitHub还是其他地方，NBViewer会渲染你的笔记本，并提供一个可分享的URL。作为Project
    Jupyter的一部分，它作为免费服务提供，网址是[nbviewer.jupyter.org](https://nbviewer.jupyter.org/)。
- en: Initially developed before GitHub's Jupyter Notebook integration, NBViewer allows
    anyone to enter a URL, Gist ID, or GitHub username/repo/file and it will render
    the notebook as a webpage. A Gist's ID is the unique number at the end of its
    URL; for example, the string of characters after the last backslash in `https://gist.github.com/username/50896401c23e0bf417e89cd57e89e1de`.
    If you enter a GitHub username or username/repo, you will see a minimal file browser
    that lets you explore a user's repos and their contents.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 最初在GitHub的Jupyter Notebook集成之前开发的，NBViewer允许任何人输入URL、Gist ID或GitHub用户名/仓库/文件，它将把笔记本渲染为网页。Gist的ID是其URL末尾的唯一数字；例如，在`https://gist.github.com/username/50896401c23e0bf417e89cd57e89e1de`中最后一个反斜杠后的字符。如果你输入GitHub用户名或用户名/仓库，你将看到一个最简文件浏览器，让你浏览用户的仓库及其内容。
- en: The URL NBViewer displays when displaying a notebook is a constant based on
    the URL of the notebook it is rendering, so you can share this with anyone and
    it will work as long as the original files remain online — NBViewer doesn't cache
    files for very long.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: NBViewer在显示笔记本时显示的URL是一个基于正在渲染的笔记本的URL的常量，因此你可以与任何人分享，只要原始文件保持在线，链接就会有效——NBViewer不会长时间缓存文件。
- en: Final Thoughts
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 终结思考
- en: Starting with the basics, we have come to grips with the natural workflow of
    Jupyter Notebooks, delved into IPython's more advanced features, and finally learned
    how to share our work with friends, colleagues, and the world. And we accomplished
    all this from a notebook itself!
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 从基础知识入手，我们已经掌握了Jupyter笔记本的自然工作流程，深入探讨了IPython的高级功能，最后学会了如何与朋友、同事和全世界分享我们的工作。所有这些都是在笔记本本身完成的！
- en: It should be clear how notebooks promote a productive working experience by
    reducing context switching and emulating a natural development of thoughts during
    a project. The power of Jupyter Notebooks should also be evident, and we covered
    plenty of leads to get you started exploring more advanced features in your own
    projects.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 应该清楚笔记本如何通过减少上下文切换和模拟项目中的自然思维发展来促进高效工作体验。Jupyter笔记本的强大功能也应该显而易见，我们提供了许多线索，以便你开始探索在自己的项目中更高级的功能。
- en: If you'd like further inspiration for your own Notebooks, Jupyter has put together [a
    gallery of interesting Jupyter Notebooks](https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks) that
    you may find helpful and the [Nbviewer homepage](https://nbviewer.jupyter.org/) links
    to some really fancy examples of quality notebooks. Also check out our list of [Jupyter
    Notebook tips](https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/).
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望获取更多关于自己笔记本的灵感，Jupyter已经整理了[a gallery of interesting Jupyter Notebooks](https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks)，你可能会发现有帮助，此外，[Nbviewer主页](https://nbviewer.jupyter.org/)链接到一些真正精美的高质量笔记本示例。也查看一下我们的[Jupyter
    Notebook技巧](https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/)列表。
- en: '*Want to learn more about Jupyter Notebooks? We have [a guided project](https://www.dataquest.io/m/207/guided-project%3A-using-jupyter-notebook) you
    may be interested in.*'
  id: totrans-149
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*想了解更多关于Jupyter笔记本的内容？我们有一个[a guided project](https://www.dataquest.io/m/207/guided-project%3A-using-jupyter-notebook)你可能会感兴趣。*'
- en: '**Bio: [Benjamin Pryke](https://twitter.com/BenjaminPryke)** is a Python and
    web developer with a background in computer science and machine learning. Co-founder
    of FinTech firm Machina Capital. Part-time gymnast and digital bohemian.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '**个人简介: [Benjamin Pryke](https://twitter.com/BenjaminPryke)** 是一名Python和网页开发人员，拥有计算机科学和机器学习背景。FinTech公司Machina
    Capital的联合创始人。兼职体操运动员和数字波希米亚。'
- en: '[Original](https://www.dataquest.io/blog/jupyter-notebook-tutorial/?utm_source=kdnuggets&utm_medium=blog).
    Reposted with permission.'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://www.dataquest.io/blog/jupyter-notebook-tutorial/?utm_source=kdnuggets&utm_medium=blog)。转载已获许可。'
- en: '**Related:**'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关:**'
- en: '[Top 5 Best Jupyter Notebook Extensions](/2018/03/top-5-best-jupyter-notebook-extensions.html)'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[前 5 名最佳 Jupyter Notebook 扩展](/2018/03/top-5-best-jupyter-notebook-extensions.html)'
- en: '[5 Things to Know About Machine Learning](/2018/03/5-things-know-about-machine-learning.html)'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[了解机器学习的 5 件事](/2018/03/5-things-know-about-machine-learning.html)'
- en: '[Fast.ai Lesson 1 on Google Colab (Free GPU)](/2018/02/fast-ai-lesson-1-google-colab-free-gpu.html)'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Fast.ai 第 1 课在 Google Colab 上（免费 GPU）](/2018/02/fast-ai-lesson-1-google-colab-free-gpu.html)'
- en: '* * *'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的 3 个顶级课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织进行 IT 工作'
- en: '* * *'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-162
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[How to Setup Julia on Jupyter Notebook](https://www.kdnuggets.com/2022/11/setup-julia-jupyter-notebook.html)'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何在 Jupyter Notebook 中设置 Julia](https://www.kdnuggets.com/2022/11/setup-julia-jupyter-notebook.html)'
- en: '[10 Jupyter Notebook Tips and Tricks for Data Scientists](https://www.kdnuggets.com/2023/06/10-jupyter-notebook-tips-tricks-data-scientists.html)'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家必备的 10 个 Jupyter Notebook 小贴士和技巧](https://www.kdnuggets.com/2023/06/10-jupyter-notebook-tips-tricks-data-scientists.html)'
- en: '[Jupyter Notebook Magic Methods Cheat Sheet](https://www.kdnuggets.com/jupyter-notebook-magic-methods-cheat-sheet)'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Jupyter Notebook 魔法方法速查表](https://www.kdnuggets.com/jupyter-notebook-magic-methods-cheat-sheet)'
- en: '[Python in Finance: Real Time Data Streaming within Jupyter Notebook](https://www.kdnuggets.com/python-in-finance-real-time-data-streaming-within-jupyter-notebook)'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[金融中的 Python：Jupyter Notebook 中的实时数据流](https://www.kdnuggets.com/python-in-finance-real-time-data-streaming-within-jupyter-notebook)'
- en: '[5 Free Templates for Data Science Projects on Jupyter Notebook](https://www.kdnuggets.com/5-free-templates-for-data-science-projects-on-jupyter-notebook)'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5 个免费的 Jupyter Notebook 数据科学项目模板](https://www.kdnuggets.com/5-free-templates-for-data-science-projects-on-jupyter-notebook)'
- en: '[How To Write Efficient Python Code: A Tutorial for Beginners](https://www.kdnuggets.com/how-to-write-efficient-python-code-a-tutorial-for-beginners)'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何编写高效的 Python 代码：初学者教程](https://www.kdnuggets.com/how-to-write-efficient-python-code-a-tutorial-for-beginners)'
