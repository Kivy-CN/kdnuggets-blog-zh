- en: Pull and Analyze Financial Data Using a Simple Python Package
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/07/pull-analyze-financial-data-simple-python-package.html](https://www.kdnuggets.com/2020/07/pull-analyze-financial-data-simple-python-package.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)![Figure](../Images/8eb5ea4bc9e1624d6a2a5adc0245eb21.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Image source: [Pixabay (Free for commercial use)](https://pixabay.com/photos/entrepreneur-idea-competence-vision-1340649/)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Stock market analysis and good investing (for long-term growth) require [careful
    examination of the financial data](https://finance.zacks.com/evaluate-stock-investments-using-financial-statement-analysis-8024.html).
    Various [metrics and ratios](https://www.investopedia.com/financial-edge/0910/6-basic-financial-ratios-and-what-they-tell-you.aspx) are
    often used in such analysis i.e. to **assess the inherent quality of a stock**.
    You may have heard about some of them in the talk from financial and investment
    experts.
  prefs: []
  type: TYPE_NORMAL
- en: For example, the [**Price-over-Earning ratio**](https://www.investopedia.com/investing/use-pe-ratio-and-peg-to-tell-stocks-future/) or **PE
    ratio**. It is the ratio of the share price over the annual earnings/share.
  prefs: []
  type: TYPE_NORMAL
- en: Or, the [**Book value per share**](https://www.investopedia.com/terms/b/bookvaluepercommon.asp).
    It takes the ratio of a firm’s common equity divided by its number of shares outstanding.
    When a stock is undervalued, it will have a higher book value per share in relation
    to its current stock price in the market.
  prefs: []
  type: TYPE_NORMAL
- en: '**Assessing a Stock''s Future With the Price-to-Earnings Ratio and PEG**'
  prefs: []
  type: TYPE_NORMAL
- en: The price-to-earnings ratio (P/E) is one of the most widely used metrics for
    investors and analysts to determine stock…
  prefs: []
  type: TYPE_NORMAL
- en: Often such data are available from websites like Yahoo Finance. However, unless,
    you are using some kind of paid, registered service, you cannot download or scrape
    the data programmatically.
  prefs: []
  type: TYPE_NORMAL
- en: '**Yahoo Finance - Stock Market Live, Quotes, Business & Finance News**'
  prefs: []
  type: TYPE_NORMAL
- en: At Yahoo Finance, you get free stock quotes, up-to-date news, portfolio management
    resources, international market…
  prefs: []
  type: TYPE_NORMAL
- en: However, many microservices exist which provide such data over a simple API
    call. To take advantage of that, we show, in this article,** how to write a simple
    Python class script for interfacing with a **[**financial data microservice**](https://financialmodelingprep.com/)**.**
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/12218ac819aeba9f5d991cd176a44ce1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Image source: Screen capture by the author ([Website](https://financialmodelingprep.com/developer/docs/))'
  prefs: []
  type: TYPE_NORMAL
- en: With this Python class, you can pull data and build a Pandas DataFrame with
    almost all important financial metrics and ratios by invoking a series of simple
    methods.
  prefs: []
  type: TYPE_NORMAL
- en: We also provide simple charting methods (bar chart and scatter plots) for analyzing
    the data graphically.
  prefs: []
  type: TYPE_NORMAL
- en: '**Note, that, you need to obtain your own secret API key (free) from the website
    and register it after instantiating the class object.**'
  prefs: []
  type: TYPE_NORMAL
- en: With that being said, let us examine the Python package/class and the various
    methods that come with it.
  prefs: []
  type: TYPE_NORMAL
- en: The Python class and various built-in methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The core Python class is available [**here on my Github repo**](https://github.com/tirthajyoti/Finance-with-Python/tree/master/financeAPI).
    Feel free to star and fork the repo and improve upon it. You can simply clone
    the repository, and start using the script in your own Notebook.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: To keep the code clean, in this article, we show the use of the class in a test
    Jupyter notebook.
  prefs: []
  type: TYPE_NORMAL
- en: We start by importing regular libraries and the class object.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/0df4771a31243e944c8f15dff45c4863.png)'
  prefs: []
  type: TYPE_IMG
- en: Read the secret API key from a file and register it
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Note that you need to have a file called `Secret_Key.txt` in the same directory
    as the code files. Without it, you cannot progress.
  prefs: []
  type: TYPE_NORMAL
- en: '**Register here: **[**https://financialmodelingprep.com/login**](https://financialmodelingprep.com/login)'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/601533e967226e0fbf84ba0512481ab8.png)'
  prefs: []
  type: TYPE_IMG
- en: Create a class instance
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Image for post](../Images/11d6718391c4c8dc13038a833919a7fe.png)'
  prefs: []
  type: TYPE_IMG
- en: It has a description
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Image for post](../Images/cdea76466c64d524d28614254fb25c7c.png)'
  prefs: []
  type: TYPE_IMG
- en: We cannot access the data without registering the key
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We definitely want to start pulling the data now. Let’s say we want to build
    a data dictionary for the company Apple (with the ticker symbol ‘AAPL’). We can
    try it but we won’t be successful because we have not registered the secret key
    with the class object yet.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/7ebf7c03231154339d9f01d19bc60727.png)'
  prefs: []
  type: TYPE_IMG
- en: So, we register the secret key
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Image for post](../Images/aeadb305e7a25d0d3ec8e3419d7abc1a.png)'
  prefs: []
  type: TYPE_IMG
- en: Let us build a data dictionary now
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For all the methods in this class, we have to pass on the ticker symbol of the
    company (on the US financial market). For Apple Inc, it is ‘AAPL’.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/b563db4bf793c27b1a43bf156ebe3a05.png)'
  prefs: []
  type: TYPE_IMG
- en: If we examine this dictionary, we will note that a huge amount of data has been
    pulled from the API endpoint. A partial screenshot is provided below.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/8f24896ab64c6077ed18ebf298035131.png)'
  prefs: []
  type: TYPE_IMG
- en: Build a DataFrame with multiple companies’ data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Working with Python dictionaries is fine but for large-scale data analytics,
    we should think of building a Pandas DataFrame. We provide a built-in method to
    do just that. Building a DataFrame is as easy as passing on a list of ticker symbols
    and the code does all the data scraping and structuring job for you.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s say we want to download all the financial data for the following companies,
  prefs: []
  type: TYPE_NORMAL
- en: Twitter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Facebook
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Microsoft
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nvidia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apple
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Salesforce
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Image for post](../Images/24e604e6fbff0307ef501618ead17d46.png)'
  prefs: []
  type: TYPE_IMG
- en: A nicely formatted DataFrame is ready for your use!
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/ab4bbbc226baff5ebbcc5fae98b79ebf.png)'
  prefs: []
  type: TYPE_IMG
- en: What kind of data is available anyway?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We can easily examine the kind of data that has been pulled from the API service.
    Note, we pass on an argument ‘profile’, ‘metrics’ or ‘ration’, and get back the
    list of corresponding data items.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/1d4feb387508dd7f54998abbb63cbb6a.png)'
  prefs: []
  type: TYPE_IMG
- en: '![Image for post](../Images/feefc3c3372715e98d26e98c71a3b47d.png)'
  prefs: []
  type: TYPE_IMG
- en: '![Image for post](../Images/91e11643267026eba4557f9b33bb8589.png)'
  prefs: []
  type: TYPE_IMG
- en: On to plotting — visual analytics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the package, we have included code for simple visual analytics with the data.
  prefs: []
  type: TYPE_NORMAL
- en: It is often helpful to examine various metrics and financial ratios in simple
    bar charts. To do that, just pass on the name of the variable you want to be plotted.
    You can also include usual Matplotlib keyword arguments such as color and transparency
    (alpha).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/a120fe5f526e835a20508b4a771151be.png)'
  prefs: []
  type: TYPE_IMG
- en: '![Image for post](../Images/8f901f301791e2beece5c53e87f72ce5.png)'
  prefs: []
  type: TYPE_IMG
- en: You can also plot simple scatter plots to visually analyze inter-relationships
    between financial metrics.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/da885848a19c315a9e40dd1fcc327485.png)'
  prefs: []
  type: TYPE_IMG
- en: You can also pass on a third variable to be used for scaling the size of the
    markers in the scatter plot. This helps, in an indirect way, visualize more than
    two variables in a 2-dimensional plot. For example, we pass on the share price
    parameter as the third variable in the code below.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/92c76edfbd64043d746a3e52572d44aa.png)'
  prefs: []
  type: TYPE_IMG
- en: Custom analysis with the underlying DataFrame
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Often, investors may want to create their own filters and investment logic with
    the available data.
  prefs: []
  type: TYPE_NORMAL
- en: For example, we may want to consider only those companies with market capitalization
    > 200 billion USD and then look at the metric of *Enterprise value over EBIDTA *in
    a bar chart.
  prefs: []
  type: TYPE_NORMAL
- en: We can access the underlying DataFrame, create a custom DataFrame, and then
    assign this custom DataFrame to a new `financeAPI()` object to take advantage
    of the ready-made charting methods.
  prefs: []
  type: TYPE_NORMAL
- en: In this way, we won't need to request data from the API again. **We should avoid
    the data read as much as possible because of the limitation of the number of data
    read with the free API key.**
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/882d6725bfdb6fa2fa2db07021e92947.png)'
  prefs: []
  type: TYPE_IMG
- en: And then we plot a bar chart based on this custom DataFrame (embedded in the
    custom class object).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/23157d08fc421020ba078a9b320d31e4.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We show the implementation and usage of a simple Python class/package that can
    be used to pull a broad range of financial metrics and ratios from a microservice.
  prefs: []
  type: TYPE_NORMAL
- en: Registration with the service is required to obtain a Free API key for this.
    The usage is, of course, limited in terms of the number of data read for the free
    account. The website also has [paid plans for unlimited usage](https://financialmodelingprep.com/developer/docs/pricing/).
  prefs: []
  type: TYPE_NORMAL
- en: Note that this work focuses on **static financial data**, as available in the
    annual financial statements, and not on the dynamic time-series share market pricing
    data. **It should be used for gauging the long-term financial strength of a firm
    for growth-oriented investing.**
  prefs: []
  type: TYPE_NORMAL
- en: As a data scientist, often you may need to write custom class/packages to pull
    and analyze data from microservice APIs, and hopefully, this article (and the
    associated codebase) can give you a simple yet effective introduction toward that
    knowledge.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/f4f3590523f10171ca57de1da244ac3b.png)'
  prefs: []
  type: TYPE_IMG
- en: Image source: [Pixabay (Free for commercial use)](https://pixabay.com/photos/money-coin-investment-business-2724241/)
  prefs: []
  type: TYPE_NORMAL
- en: Also, you can check the author’s [**GitHub**](https://github.com/tirthajyoti?tab=repositories)** repositories **for
    code, ideas, and resources in machine learning and data science. If you are, like
    me, passionate about AI/machine learning/data science, please feel free to [add
    me on LinkedIn](https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/) or [follow
    me on Twitter](https://twitter.com/tirthajyotiS).
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/pull-and-analyze-financial-data-using-a-simple-python-package-83e47759c4a7).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Time Series Classification Synthetic vs Real Financial Time Series](/2020/03/time-series-classification-synthetic-real-financial-time-series.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Free Economics & Finance Courses for Data Scientists](/2020/06/free-economics-finance-courses-data-scientists.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Four Ways to Apply NLP in Financial Services](/2020/06/four-ways-apply-nlp-financial-services.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[How to Package and Distribute Machine Learning Models with MLFlow](https://www.kdnuggets.com/2022/08/package-distribute-machine-learning-models-mlflow.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Drag, Drop, Analyze: The Rise of No-Code Data Science](https://www.kdnuggets.com/drag-drop-analyze-the-rise-of-nocode-data-science)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How ML Model Explainability Accelerates the AI Adoption Journey for…](https://www.kdnuggets.com/2022/07/ml-model-explainability-accelerates-ai-adoption-journey-financial-services.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Pydantic Tutorial: Data Validation in Python Made Simple](https://www.kdnuggets.com/pydantic-tutorial-data-validation-in-python-made-simple)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Simple Steps to Automate Data Cleaning with Python](https://www.kdnuggets.com/5-simple-steps-to-automate-data-cleaning-with-python)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[3 Simple Ways to Speed Up Your Python Code](https://www.kdnuggets.com/2022/10/3-simple-ways-speed-python-code.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
