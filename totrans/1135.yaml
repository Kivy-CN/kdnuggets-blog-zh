- en: Advanced Statistical Concepts in Data Science
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2021/09/advanced-statistical-concepts-data-science.html](https://www.kdnuggets.com/2021/09/advanced-statistical-concepts-data-science.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)[![Figure](../Images/cdc4d1496f7060844b5a251b2b60575d.png)](https://static.wixstatic.com/media/3eee0b_bc230abd081f486f9f767abc7c674157~mv2.gif)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Credits: [https://www.congruentsoft.com/business-intelligence.aspx](https://www.congruentsoft.com/business-intelligence.aspx)'
  prefs: []
  type: TYPE_NORMAL
- en: In my previous articles [**Beginners Guide to Statistics in Data Science**](https://www.theaidream.com/post/beginners-guide-to-statistics-in-data-science)
    and [**The Inferential Statistics Data Scientists Should Know**](https://www.theaidream.com/post/the-inferential-statistics-data-scientists-should-know)
    we have talked about almost all the basics(**Descriptive and Inferential**) of
    statistics which are commonly used in understanding and working with any data
    science case study. In this article, lets go a little beyond and talk about some
    advance concepts which are not part of the buzz.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Q-Q(quantile-quantile) Plots
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before understanding QQ plots first understand what is a **Quantile**?
  prefs: []
  type: TYPE_NORMAL
- en: A quantile defines a particular part of a data set, i.e. a quantile determines
    how many values in a distribution are above or below a certain limit. Special
    quantiles are the quartile (quarter), the quintile (fifth), and percentiles (hundredth).
  prefs: []
  type: TYPE_NORMAL
- en: '**An example:**'
  prefs: []
  type: TYPE_NORMAL
- en: If we divide a distribution into four equal portions, we will speak of four
    quartiles. The first quartile includes all values that are smaller than a quarter
    of all values. In a graphical representation, it corresponds to 25% of the total
    area of distribution. The two lower quartiles comprise 50% of all distribution
    values. The interquartile range between the first and third quartile equals the
    range in which 50% of all values lie that are distributed around the mean.
  prefs: []
  type: TYPE_NORMAL
- en: In Statistics, A **Q-Q(quantile-quantile)** plot is a scatterplot created by
    plotting two sets of quantiles against one another. If both sets of quantiles
    came from the same distribution, we should see the points forming a line that’s
    roughly straight(y=x).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1f7e3aa7232e9ceae92499b9dbc2d249.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Q-Q plot](https://statisticsglobe.com/r-qqplot-qqnorm-qqline-function)'
  prefs: []
  type: TYPE_NORMAL
- en: For example, the median is a quantile where 50% of the data fall below that
    point and 50% lie above it. The purpose of Q Q plots is to find out if two sets
    of data come from the same distribution. A **45-degree** angle is plotted on the
    Q Q plot; if the two data sets come from a common distribution, the points will
    fall on that reference line.
  prefs: []
  type: TYPE_NORMAL
- en: It’s very important for you to know whether the distribution is normal or not
    so as to apply various statistical measures on the data and interpret it in much
    more human-understandable visualization and their Q-Q plot comes into the picture.
    The most fundamental question answered by the Q-Q plot is if the curve is Normally
    Distributed or not.
  prefs: []
  type: TYPE_NORMAL
- en: Normally distributed, but why?
  prefs: []
  type: TYPE_NORMAL
- en: The Q-Q plots are used to find the type of distribution for a random variable
    whether it is a Gaussian Distribution, Uniform Distribution, Exponential Distribution,
    or even Pareto Distribution, etc.
  prefs: []
  type: TYPE_NORMAL
- en: You can tell the type of distribution using the power of the Q-Q plot just by
    looking at the plot. In general, we are talking about Normal distributions only
    because we have a very beautiful concept of the 68–95–99.7 rule which perfectly
    fits into the normal distribution So we know how much of the data lies in the
    range of the first standard deviation, second standard deviation and third standard
    deviation from the mean. So knowing if a distribution is Normal opens up new doors
    for us to experiment with
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7ec33e7d1b45640b3861e799700c3f8f.png)'
  prefs: []
  type: TYPE_IMG
- en: Types of Q-Q plots. [Source](http://sherrytowers.com/2013/08/29/aml-610-fall-2013-module-ii-review-of-probability-distributions/qqplot_examples/)
  prefs: []
  type: TYPE_NORMAL
- en: Skewed Q-Q plots
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Q-Q plots can find skewness(measure of asymmetry) of the distribution.
  prefs: []
  type: TYPE_NORMAL
- en: If the bottom end of the Q-Q plot deviates from the straight line but the upper
    end is not, then the distribution is **Left skewed(Negatively skewed).**
  prefs: []
  type: TYPE_NORMAL
- en: Now if upper end of the Q-Q plot deviates from the staright line and the lower
    is not, then the distribution is **Right skewed(Positively skewed).**
  prefs: []
  type: TYPE_NORMAL
- en: Tailed Q-Q plots
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Q-Q plots can find Kurtosis(measure of tailedness) of the distribution.
  prefs: []
  type: TYPE_NORMAL
- en: The distribution with the fat tail will have both the ends of the Q-Q plot to
    deviate from the straight line and its centre follows the line, where as a thin
    tailed distribution will term Q-Q plot with very less or negligible deviation
    at the ends thus making it a perfect fit for normal distribution.
  prefs: []
  type: TYPE_NORMAL
- en: Q-Q plots in Python([Source](https://www.statology.org/q-q-plot-python/))
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Suppose we have the following dataset of 100 values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'To create a Q-Q plot for this dataset, we can use the [qqplot() function](https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.qqplot.html)
    from the statsmodels library:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/53306c314b790866cfd2d75c065cb930.png)'
  prefs: []
  type: TYPE_IMG
- en: In a Q-Q plot, the x-axis displays the **theoretical quantiles**. This means
    it doesn’t show your actual data, but instead, it represents where your data would
    be if it were normally distributed.
  prefs: []
  type: TYPE_NORMAL
- en: The y-axis displays your **actual data**. This means that if the data values
    fall along a roughly straight line at a 45-degree angle, then the data is normally
    distributed.
  prefs: []
  type: TYPE_NORMAL
- en: We can see in our Q-Q plot above that the data values tend to closely follow
    the 45-degree, which means the data is likely normally distributed. This shouldn’t
    be surprising since we generated the 100 data values by using the [numpy.random.normal()
    function](https://numpy.org/doc/stable/reference/random/generated/numpy.random.normal.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider instead if we generated a dataset of 100 uniformly distributed values
    and created a Q-Q plot for that dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/fac88e1945a12cf2ca7328bf10ee4089.png)'
  prefs: []
  type: TYPE_IMG
- en: The data values clearly do not follow the red 45-degree line, which is an indication
    that they do not follow a normal distribution.
  prefs: []
  type: TYPE_NORMAL
- en: Chebyshev's Inequality
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In probability, **Chebyshev’s Inequality**, also known as “**Bienayme-Chebyshev**”
    Inequality guarantees that, for a wide class of probability distributions, only
    a definite fraction of values will be found within a specific distance from the
    mean of a distribution.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/71d5aafc543be391ca348727d5d2b336.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [https://www.thoughtco.com/chebyshevs-inequality-3126547](https://www.thoughtco.com/chebyshevs-inequality-3126547)'
  prefs: []
  type: TYPE_NORMAL
- en: Chebyshev’s inequality is similar to **The Empirical rule(68-95-99.7);** however,
    the latter rule only applies to normal distributions. Chebyshev’s inequality is
    broader; it can be applied to any distribution so long as the distribution includes
    a defined variance and mean.
  prefs: []
  type: TYPE_NORMAL
- en: So Chebyshev’s inequality says that at least **(1-1/k^2)** of data from a sample
    must fall within **K** standard deviations from the mean (or equivalently, no
    more than **1/k^2** of the distribution’s values can be more than k standard deviations
    away from the mean).
  prefs: []
  type: TYPE_NORMAL
- en: Where **K** --> Positive real number
  prefs: []
  type: TYPE_NORMAL
- en: If the data is not normally distributed then different amounts of data could
    be in one standard deviation. Chebyshev’s inequality provides a way to know what
    fraction of data falls within **K** standard deviations from the mean for any
    data distribution.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3c1e614f219dcc80947f160b392695bb.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Credits: [https://calcworkshop.com/joint-probability-distribution/chebyshev-inequality/](https://calcworkshop.com/joint-probability-distribution/chebyshev-inequality/)'
  prefs: []
  type: TYPE_NORMAL
- en: Chebyshev’s inequality is of great value because it can be applied to any probability
    distribution in which the mean and variance are provided.
  prefs: []
  type: TYPE_NORMAL
- en: Let us consider an example, Assume 1,000 contestants show up for a job interview,
    but there are only 70 positions available. In order to select the finest 70 contestants
    amongst the total contestants, the proprietor gives tests to judge their potential.
    The mean score on the test is 60, with a standard deviation of 6\. If an applicant
    scores an 84, can they presume that they are getting the job?
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9247c8134b8e1f1fc7e9f490ca4d4127.png)'
  prefs: []
  type: TYPE_IMG
- en: The results show that about 63 people scored above a 60, so with 70 positions
    available, a contestant who scores an 84 can be assured they got the job.
  prefs: []
  type: TYPE_NORMAL
- en: Chebyshev's Inequality in Python([Source](https://gist.github.com/chaipi-chaya/9eb72978dbbfd7fa4057b493cf6a32e7))
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Create a population of 1,000,000 values, I use a gamma distribution(also works
    with other distributions) with shape = 2 and scale = 2.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Now sample 10,000 values from the population.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Count the sample that has a distance from the expected value larger than k standard
    deviation and use the count to calculate the probabilities. I want to depict a
    trend of probabilities when k is increasing, so I use a range of k from 0.1 to
    3.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Plot the results:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/eadd20bfb61c35d8cf0b9aa5edf30371.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](../Images/d3b887df06f1bae86a2b6ba6d5dc203b.png)'
  prefs: []
  type: TYPE_IMG
- en: From the above plot and result, we can see that as the k increases, the probability
    is decreasing, and the probability of each k follows the inequality. Moreover,
    only the case that k is larger than 1 is useful. If k is less than 1, the right
    side of the inequality is larger than 1 which is not useful because the probability
    cannot be larger than 1.
  prefs: []
  type: TYPE_NORMAL
- en: Log-Normal Distribution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In probability theory, a **Log-normal distribution** also known as **Galton's
    distribution** is a continuous probability distribution of a random variable whose
    logarithm is normally distributed.
  prefs: []
  type: TYPE_NORMAL
- en: Thus, if the random variable **X** is log-normally distributed, then **Y = ln(X)**
    has a normal distribution. Equivalently, if **Y** has a normal distribution, then
    the exponential function of **Y i.e, X = exp(Y),** has a log-normal distribution.
  prefs: []
  type: TYPE_NORMAL
- en: Skewed distributions with low mean and high variance and all positive values
    fit under this type of distribution. A random variable that is log-normally distributed
    takes only positive real values.
  prefs: []
  type: TYPE_NORMAL
- en: 'The general formula for the probability density function of the lognormal distribution
    is:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/dc0d9513b05ec0201d1388de814b061b.png)'
  prefs: []
  type: TYPE_IMG
- en: The location and scale parameters are equivalent to the mean and standard deviation
    of the logarithm of the random variable.
  prefs: []
  type: TYPE_NORMAL
- en: 'The shape of Lognormal distribution is defined by 3 parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '***σ*** is the shape parameter, (and is the standard deviation of the log of
    the distribution)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**θ** or **μ** is the location parameter (and is the mean of the distribution)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**m** is the scale parameter (and is also the median of the distribution)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The location and scale parameters are equivalent to the mean and standard deviation
    of the logarithm of the random variable as explained above.
  prefs: []
  type: TYPE_NORMAL
- en: If **x = θ**, then **f(x) = 0**. The case where **θ = 0** and **m = 1** is called
    the **standard lognormal distribution**. The case where **θ** equals zero is called
    the **2-parameter lognormal distribution**.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following graph illustrates the effect of the **location(μ)** and **shape(*σ*)**
    parameter on the probability density function of the lognormal distribution:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/39708303c14c438edca98198e827c2f4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [https://www.sciencedirect.com/topics/mathematics/lognormal-distribution](https://www.sciencedirect.com/topics/mathematics/lognormal-distribution)'
  prefs: []
  type: TYPE_NORMAL
- en: Log-Normal Distribution in Python([Source](https://stackoverflow.com/a/41968334/7175247))
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let us consider an example to generate random numbers from a log-normal distribution
    with **μ=1** and **σ=0.5** using scipy.stats.lognorm function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/2bfd006df7d40b8745ae3748e842e47c.png)'
  prefs: []
  type: TYPE_IMG
- en: Power Law distribution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In statistics, a **Power Law** is a functional relationship between two quantities,
    where a relative change in one quantity results in a proportional relative change
    in the other quantity, independent of the initial size of those quantities: one
    quantity varies as a power of another.'
  prefs: []
  type: TYPE_NORMAL
- en: For instance, considering the area of a square in terms of the length of its
    side, if the length is doubled, the area is multiplied by a factor of four.
  prefs: []
  type: TYPE_NORMAL
- en: A power law distribution has the form **Y = k Xα**,
  prefs: []
  type: TYPE_NORMAL
- en: 'where:'
  prefs: []
  type: TYPE_NORMAL
- en: '**X** and **Y** are variables of interest,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**α** is the law’s exponent,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**k** is a constant.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/4863108e7a7e1fc40103e9e7cb9aa075.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [https://en.wikipedia.org/wiki/Power_law](https://en.wikipedia.org/wiki/Power_law)'
  prefs: []
  type: TYPE_NORMAL
- en: Power-law distribution is just one of many probability distributions, but it
    is considered a valuable tool to assess uncertainty issues that normal distribution
    cannot handle when they occur at a certain probability.
  prefs: []
  type: TYPE_NORMAL
- en: 'Many processes have been found to follow power laws over substantial ranges
    of values. From the distribution in incomes, size of meteoroids, earthquake magnitudes,
    the spectral density of weight matrices in deep neural networks, word usage, number
    of neighbors in various networks, etc. (Note: The power law here is a continuous
    distribution. The last two examples are discrete, but on a large scale can be
    modeled as if continuous).'
  prefs: []
  type: TYPE_NORMAL
- en: Power-law distribution in Python([Source)](https://towardsdatascience.com/generating-pareto-distribution-in-python-2c2f77f70dbf)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let us plot the [Pareto distribution](https://en.wikipedia.org/wiki/Pareto_distribution)
    which is one form of a power-law probability distribution. Pareto distribution
    is sometimes known as the Pareto Principle or **‘80–20’** rule, as the rule states
    that 80% of society’s wealth is held by 20% of its population. Pareto distribution
    is not a law of nature, but an observation. It is useful in many real-world problems.
    It is a skewed heavily tailed distribution.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/ddc18c867157d654bde2e0d730fde602.png)'
  prefs: []
  type: TYPE_IMG
- en: Box cox transformation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **Box-Cox transformation** transforms our data so that it closely resembles
    a normal distribution.
  prefs: []
  type: TYPE_NORMAL
- en: The one-parameter Box-Cox transformations are defined as In many statistical
    techniques, we assume that the errors are normally distributed. This assumption
    allows us to construct confidence intervals and conduct hypothesis tests. By transforming
    your target variable, we can (hopefully) normalize our errors (if they are not
    already normal).
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, transforming our variables can improve the predictive power of
    our models because transformations can cut away white noise.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4d11c5df11f76d5ee50688d1682d706c.png)'
  prefs: []
  type: TYPE_IMG
- en: Original distribution(Left) and near-normal distribution after applying Box
    cox transformation. [Source](https://medium.com/@patricklcavins/using-scipys-powertransformer-3e2b792fd712)
  prefs: []
  type: TYPE_NORMAL
- en: At the core of the Box-Cox transformation is an exponent, **lambda (λ)**, which
    varies from -5 to 5\. All values of **λ** are considered and the optimal value
    for your data is selected; The “optimal value” is the one that results in the
    best approximation of a normal distribution curve.
  prefs: []
  type: TYPE_NORMAL
- en: 'The one-parameter Box-Cox transformations are defined as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d90c1b940c1f707658ed3bdae922254e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'and the two-parameter Box-Cox transformations as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/77aac2b334fb73d4566b266da9b425ec.png)'
  prefs: []
  type: TYPE_IMG
- en: Moreover, the one-parameter Box-Cox transformation holds for **y > 0**, i.e.
    only for positive values and two-parameter Box-Cox transformation for **y > -λ**,
    i.e. negative values.
  prefs: []
  type: TYPE_NORMAL
- en: The parameter **λ** is estimated using the [profile likelihood](https://en.wikipedia.org/wiki/Profile_likelihood)
    function and using goodness-of-fit tests.
  prefs: []
  type: TYPE_NORMAL
- en: If we talk about some drawbacks of Box-cox transformation, then if interpretation
    is what you want to do, then Box-cox is not recommended. Because if **λ** is some
    non-zero number, then the transformed target variable may be more difficult to
    interpret than if we simply applied a log transform.
  prefs: []
  type: TYPE_NORMAL
- en: A second stumbling block is that the Box-Cox transformation usually gives the
    median of the forecast distribution when we revert the transformed data to its
    original scale. Occasionally, we want the mean and not the median.
  prefs: []
  type: TYPE_NORMAL
- en: Box-Cox transformation in Python([Source](https://www.geeksforgeeks.org/box-cox-transformation-using-python/))
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: SciPy’s stats package provides a function called boxcox for performing box-cox
    power transformation that takes in original non-normal data as input and returns
    fitted data along with the lambda value that was used to fit the non-normal distribution
    to normal distribution.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/1b76557a111d3e02419bfb4014957173.png)'
  prefs: []
  type: TYPE_IMG
- en: Poisson distribution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In probability theory and statistics, the **Poisson distribution** is a discrete
    probability distribution that expresses the probability of a given number of events
    occurring in a fixed interval of time or space if these events occur with a known
    constant mean rate and independently of the time since the last event.
  prefs: []
  type: TYPE_NORMAL
- en: In very simple terms, A Poisson distribution can be used to estimate how likely
    it is that something will happen "X" number of times.
  prefs: []
  type: TYPE_NORMAL
- en: Some examples of Poisson processes are customers calling a help center, radioactive
    decay in atoms, visitors to a website, photons arriving at a space telescope,
    and movements in a stock price. Poisson processes are usually associated with
    time, but they do not have to be.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Formula for the Poisson Distribution Is:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5e5e7098270414202d0d65f9eeb4989e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Where:'
  prefs: []
  type: TYPE_NORMAL
- en: '**e** is Euler''s number (*e* = 2.71828...)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**k** is the number of occurrences'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**k!** is the factorial of **k**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**λ** is equal to the expected value of **k** when that is also equal to its
    variance'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lambda(**λ**) can be thought of as the expected number of events in the interval.
    As we change the rate parameter, λ, we change the probability of seeing different
    numbers of events in one interval. The below graph is the probability mass function
    of the Poisson distribution showing the probability of a number of events occurring
    in an interval with different rate parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bd840c8733df74e00b3c02fd801fc7ab.png)'
  prefs: []
  type: TYPE_IMG
- en: Probability Mass function for Poisson Distribution with varying rate parameters.[Source](https://www.analyzemath.com/probabilities/poisson-distribution-examples.html)
  prefs: []
  type: TYPE_NORMAL
- en: The Poisson distribution is also commonly used to model financial count data
    where the tally is small and is often zero. For one example, in finance, it can
    be used to model the number of trades that a typical investor will make in a given
    day, which can be 0 (often), or 1, or 2, etc.
  prefs: []
  type: TYPE_NORMAL
- en: As another example, this model can be used to predict the number of "shocks"
    to the market that will occur in a given time period, say over a decade.
  prefs: []
  type: TYPE_NORMAL
- en: Poisson distribution in Python
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/ca327cc896e76beeffb14c10c829b212.png)'
  prefs: []
  type: TYPE_IMG
- en: As **λ** becomes bigger, the graph looks more like a normal distribution.
  prefs: []
  type: TYPE_NORMAL
- en: I hope you have enjoyed reading this article, If you have any questions or suggestions,
    please leave a comment.
  prefs: []
  type: TYPE_NORMAL
- en: Feel free to connect me on [**LinkedIn**](https://www.linkedin.com/in/nagesh-singh-chauhan-6936bb13b/)
    for any query.
  prefs: []
  type: TYPE_NORMAL
- en: '**Thanks for reading!!!**'
  prefs: []
  type: TYPE_NORMAL
- en: '**References**'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://calcworkshop.com/joint-probability-distribution/chebyshev-inequality/](https://calcworkshop.com/joint-probability-distribution/chebyshev-inequality/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://corporatefinanceinstitute.com/resources/knowledge/data-analysis/chebyshevs-inequality/](https://corporatefinanceinstitute.com/resources/knowledge/data-analysis/chebyshevs-inequality/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.itl.nist.gov/div898/handbook/eda/section3/eda3669.htm](https://www.itl.nist.gov/div898/handbook/eda/section3/eda3669.htm)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.statology.org/q-q-plot-python/](https://www.statology.org/q-q-plot-python/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://gist.github.com/chaipi-chaya/9eb72978dbbfd7fa4057b493cf6a32e7](https://gist.github.com/chaipi-chaya/9eb72978dbbfd7fa4057b493cf6a32e7)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://stackoverflow.com/a/41968334/7175247](https://stackoverflow.com/a/41968334/7175247)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Original](https://www.theaidream.com/post/advanced-statistical-concepts-in-data-science).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[The Inferential Statistics Data Scientists Should Know](/2021/03/statistics-data-scientists-should-know.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Important Statistics Data Scientists Need to Know](/2021/09/important-statistics-data-scientists.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Zero-Shot Learning: Can you classify an object without seeing it before?](/2021/04/zero-shot-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Back to Basics Week 2: Database, SQL, Data Management and…](https://www.kdnuggets.com/back-to-basics-week-2-database-sql-data-management-and-statistical-concepts)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[10 Basic Statistical Concepts in Plain English](https://www.kdnuggets.com/10-basic-statistical-concepts-in-plain-english)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 8 Basic Statistics Concepts for Data Science](https://www.kdnuggets.com/2020/06/8-basic-statistics-concepts.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 SQL Concepts You Should Know For Data Science](https://www.kdnuggets.com/2022/11/7-sql-concepts-needed-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ChatGPT as a Personalized Tutor for Learning Data Science Concepts](https://www.kdnuggets.com/2023/05/chatgpt-personalized-tutor-learning-data-science-concepts.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Concepts You Should Know About Gradient Descent and Cost Function](https://www.kdnuggets.com/2020/05/5-concepts-gradient-descent-cost-function.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
