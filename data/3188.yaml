- en: 'Getting Started with TensorFlow: A Machine Learning Tutorial'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 入门 TensorFlow：机器学习教程
- en: 原文：[https://www.kdnuggets.com/2017/12/getting-started-tensorflow.html/2](https://www.kdnuggets.com/2017/12/getting-started-tensorflow.html/2)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2017/12/getting-started-tensorflow.html/2](https://www.kdnuggets.com/2017/12/getting-started-tensorflow.html/2)
- en: '**Transforming Data**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据转换**'
- en: '**Reduction**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**减少**'
- en: TensorFlow supports different kinds of reduction. Reduction is an operation
    that removes one or more dimensions from a tensor by performing certain operations
    across those dimensions. A list of supported reductions for the current version
    of TensorFlow can be found here. We will present a few of them in the example
    below.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: TensorFlow 支持不同类型的减少操作。减少操作是一种通过在这些维度上执行某些操作来从张量中移除一个或多个维度的操作。当前版本的 TensorFlow
    支持的减少操作列表可以在这里找到。我们将在下面的示例中展示其中的一些。
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Output:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The first parameter of reduction operators is the tensor that we want to reduce.
    The second parameter is the indexes of dimensions along which we want to perform
    the reduction. That parameter is optional, and if not passed, reduction will be
    performed along all dimensions.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: reduction 操作符的第一个参数是我们想要减少的张量。第二个参数是我们想要进行减少操作的维度索引。该参数是可选的，如果未传递，则会沿所有维度进行减少。
- en: We can take a look at the [reduce_sum](https://www.tensorflow.org/versions/master/api_docs/python/tf/reduce_sum)
    operation. We pass a 2-d tensor, and want to reduce it along dimension 1.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以查看 [reduce_sum](https://www.tensorflow.org/versions/master/api_docs/python/tf/reduce_sum)
    操作。我们传递一个 2 维张量，并希望沿维度 1 进行减少。
- en: 'In our case, the resulting sum would be:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，结果总和将是：
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If we passed dimension 0, the result would be:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们传递了维度 0，则结果将是：
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'If we don’t pass any axis, the result is just the overall sum of:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们没有传递任何轴，结果就是：
- en: '[PRE4]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: All reduction functions have a similar interface and are listed in the TensorFlow
    [reduction documentation](https://www.tensorflow.org/versions/r0.12/api_docs/python/math_ops/reduction).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 所有减少函数具有类似的接口，并且列在 TensorFlow 的 [减少文档](https://www.tensorflow.org/versions/r0.12/api_docs/python/math_ops/reduction)
    中。
- en: '**Segmentation**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**分段**'
- en: Segmentation is a process in which one of the dimensions is the process of mapping
    dimensions onto provided segment indexes, and the resulting elements are determined
    by an index row.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 分段是一个过程，其中一个维度是将维度映射到提供的分段索引的过程，结果元素由索引行决定。
- en: Segmentation is actually grouping the elements under repeated indexes, so for
    example, in our case, we have segmented ids `[0, 0, 1, 2, 2]` applied on tensor
    `tens1`, meaning that the first and second arrays will be transformed following
    segmentation operation (in our case summation) and will get a new array, which
    looks like `(2, 8, 1, 0) = (2+0, 5+3, 3-2, -5+5)`. The third element in tensor
    `tens1` is untouched because it isn’t grouped in any repeated index, and last
    two arrays are summed in same way as it was the case for the first group. Beside
    summation, TensorFlow supports [product](https://www.tensorflow.org/versions/master/api_docs/python/tf/segment_prod),
    [mean](https://www.tensorflow.org/versions/master/api_docs/python/tf/segment_mean),
    [max](https://www.tensorflow.org/versions/master/api_docs/python/tf/segment_max),
    and [min](https://www.tensorflow.org/versions/master/api_docs/python/tf/segment_min).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 分段实际上是将元素分组到重复的索引下，因此例如，在我们的例子中，我们对张量 `tens1` 应用了分段 id `[0, 0, 1, 2, 2]`，这意味着第一个和第二个数组将按照分段操作（在我们的例子中是求和）进行转换，并得到一个新数组，其形式为
    `(2, 8, 1, 0) = (2+0, 5+3, 3-2, -5+5)`。张量 `tens1` 中的第三个元素未被处理，因为它没有被分组到任何重复的索引中，最后两个数组以与第一个组相同的方式进行求和。除了求和，TensorFlow
    还支持 [product](https://www.tensorflow.org/versions/master/api_docs/python/tf/segment_prod)、[mean](https://www.tensorflow.org/versions/master/api_docs/python/tf/segment_mean)、[max](https://www.tensorflow.org/versions/master/api_docs/python/tf/segment_max)
    和 [min](https://www.tensorflow.org/versions/master/api_docs/python/tf/segment_min)。
- en: '![](../Images/8626a778161812ae5f56cd7be77da7ed.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8626a778161812ae5f56cd7be77da7ed.png)'
- en: '[PRE5]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Sequence Utilities**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**序列工具**'
- en: 'Sequence utilities include methods such as:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 序列工具包括以下方法：
- en: '[argmin](https://www.tensorflow.org/versions/master/api_docs/python/tf/argmin)
    function, which returns the index with min value across the axes of the input
    tensor,'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[argmin](https://www.tensorflow.org/versions/master/api_docs/python/tf/argmin)
    函数，它返回输入张量在各轴上的最小值的索引，'
- en: '[argmax](https://www.tensorflow.org/versions/master/api_docs/python/tf/argmax)
    function, which returns the index with max value across the axes of the input
    tensor,'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[argmax](https://www.tensorflow.org/versions/master/api_docs/python/tf/argmax)
    函数，它返回输入张量在各轴上的最大值的索引，'
- en: '[setdiff](https://www.tensorflow.org/versions/master/api_docs/python/tf/setdiff1d),
    which computes the difference between two lists of numbers or strings,'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[setdiff](https://www.tensorflow.org/versions/master/api_docs/python/tf/setdiff1d)，计算两个数字或字符串列表之间的差异，'
- en: '[where](https://www.tensorflow.org/api_docs/python/tf/where) function, which
    will return elements either from two passed elements x or y, which depends on
    the passed condition, or'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[where](https://www.tensorflow.org/api_docs/python/tf/where) 函数，会根据传递的条件从两个传入元素
    x 或 y 中返回元素，或'
- en: '[unique](https://www.tensorflow.org/versions/master/api_docs/python/tf/unique)
    function, which will return unique elements in a 1-D tensor.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[unique](https://www.tensorflow.org/versions/master/api_docs/python/tf/unique)
    函数，会返回 1-D 张量中的唯一元素。'
- en: 'We demonstrate a few execution examples below:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们下面展示几个执行示例：
- en: '[PRE7]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Output:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '[PRE8]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**Machine Learning with TensorFlow**'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**TensorFlow 中的机器学习**'
- en: In this section, we will present a machine learning use case with TensorFlow.
    The first example will be an algorithm for classifying data with the [kNN](https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm)
    approach, and the second will use the [linear regression algorithm](https://en.wikipedia.org/wiki/Linear_regression).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍一个使用 TensorFlow 的机器学习用例。第一个示例将是使用 [kNN](https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm)
    方法对数据进行分类的算法，第二个将使用 [线性回归算法](https://en.wikipedia.org/wiki/Linear_regression)。
- en: '**kNN**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**kNN**'
- en: 'The first algorithm is k-Nearest Neighbors (kNN). It’s a supervised learning
    algorithm that uses distance metrics, for example Euclidean distance, to classify
    data against training. It is one of the simplest algorithms, but still really
    powerful for classifying data. Pros of this algorithm:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个算法是 k-最近邻（kNN）。这是一个监督学习算法，使用距离度量，例如欧几里得距离，来对数据进行分类。它是最简单的算法之一，但在数据分类方面仍然非常强大。该算法的优点：
- en: Gives high accuracy when the training model is big enough, and
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当训练模型足够大时，精度很高，并且
- en: Isn’t usually sensitive to outliers, and we don’t need to have any assumptions
    about data.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常对离群值不敏感，我们不需要对数据做任何假设。
- en: 'Cons of this algorithm:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法的缺点：
- en: Computationally expensive, and
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算成本高，并且
- en: Requires a lot of memory where new classified data need to be added to all initial
    training instances.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要大量内存，因为新分类的数据需要添加到所有初始训练实例中。
- en: '![](../Images/61b097d4eeb897b627e93adfa030aa28.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/61b097d4eeb897b627e93adfa030aa28.png)'
- en: 'The distance which we will use in this code sample is Euclidean, which defines
    the distance between two points like this:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在此代码示例中，我们将使用欧几里得距离，定义两个点之间的距离如下：
- en: '![](../Images/6379458d1999e254d668ef45cbb393d3.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6379458d1999e254d668ef45cbb393d3.png)'
- en: In this formula, `n` is the number of dimensions of the space, `x` is the vector
    of the training data, and `y` is a new data point that we want to classify.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在此公式中，`n` 是空间的维度数，`x` 是训练数据的向量，`y` 是我们要分类的新数据点。
- en: '[PRE9]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The dataset which we used in above example is one which can be found on the
    [Kaggle datasets](https://www.kaggle.com/datasets) section. We used the [one](https://www.kaggle.com/dalpozz/creditcardfraud)
    which contains transactions made by credit cards of European cardholders. We are
    using the data without any cleaning or filtering and as per the description in
    Kaggle for this dataset, it is highly unbalanced. The dataset contains 31 variables:
    Time, V1, …, V28, Amount, and Class. In this code sample we use only V1, …, V28
    and Class. Class labels transactions which are fraudulent with 1 and those which
    aren’t with 0.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 上面示例中使用的数据集可以在 [Kaggle datasets](https://www.kaggle.com/datasets) 部分找到。我们使用的是
    [这个](https://www.kaggle.com/dalpozz/creditcardfraud) 数据集，其中包含欧洲持卡人的信用卡交易。我们使用的数据未经任何清理或筛选，按照
    Kaggle 对该数据集的描述，它高度不平衡。数据集包含 31 个变量：Time, V1, …, V28, Amount 和 Class。在此代码示例中，我们仅使用
    V1, …, V28 和 Class。Class 标签将欺诈交易标记为 1，将非欺诈交易标记为 0。
- en: The code sample contains mostly the things which we described in previous sections
    with exception where we introduced the function for loading a dataset. The function
    `load_data(filepath)` will take a CSV file as an argument and will return a tuple
    with data and labels defined in CSV.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 代码示例主要包含我们在前面章节中描述的内容，除了引入了用于加载数据集的函数。函数 `load_data(filepath)` 将 CSV 文件作为参数，并返回包含
    CSV 中定义的数据和标签的元组。
- en: Just below that function, we have defined placeholders for the test and trained
    data. Trained data are used in the prediction model to resolve the labels for
    the input data that need to be classified. In our case, kNN use Euclidian distance
    to get the nearest label.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在该函数下方，我们定义了测试数据和训练数据的占位符。训练数据用于预测模型中，以解决需要分类的输入数据的标签。在我们的案例中，kNN使用欧几里得距离来获取最近的标签。
- en: The error rate can be calculated by simple division with the number when a classifier
    missed by the total number of examples which in our case for this dataset is 0.2
    (i.e., the classifier gives us the wrong data label for 20% of test data).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 错误率可以通过将分类器漏检的样本数量与总样本数量进行简单除法来计算。在我们的数据集中，这一比例为0.2（即，分类器对20%的测试数据给出了错误的标签）。
- en: Linear Regression
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 线性回归
- en: The linear regression algorithm looks for a linear relationship between two
    variables. If we label the dependent variable as y, and the independent variable
    as x, then we’re trying to estimate the parameters of the function `y = Wx + b`.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 线性回归算法寻求两个变量之间的线性关系。如果我们将因变量标记为y，自变量标记为x，那么我们尝试估计函数`y = Wx + b`的参数。
- en: 'Linear regression is a widely used algorithm in the field of applied sciences.
    This algorithm allows adding in implementation two important concepts of machine
    learning: [Cost function](https://en.wikipedia.org/wiki/Loss_function) and the
    [gradient descent method](https://en.wikipedia.org/wiki/Gradient_descent) for
    finding the minimum of the function.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 线性回归是应用科学领域中广泛使用的算法。这种算法在实现中结合了机器学习的两个重要概念：[成本函数](https://en.wikipedia.org/wiki/Loss_function)和[梯度下降法](https://en.wikipedia.org/wiki/Gradient_descent)，用于寻找函数的最小值。
- en: A machine learning algorithm that is implemented using this method must predict
    values of `y` as a function of `x` where a linear regression algorithm will determinate
    values `W` and `b`, which are actually unknowns and which are determined across
    training process. A cost function is chosen, and usually the mean square error
    is used where the gradient descent is the optimization algorithm used to find
    a local minimum of the cost function.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种方法实现的机器学习算法必须预测`y`作为`x`的函数，其中线性回归算法将确定`W`和`b`的值，这些值实际上是未知的，并且在训练过程中确定。选择一个成本函数，通常使用均方误差，而梯度下降是用于找到成本函数局部最小值的优化算法。
- en: The gradient descent method is only a local function minimum, but it can be
    used in the search for a global minimum by randomly choosing a new start point
    once it has found a local minimum and repeating this process many times. If the
    number of minima of the function is limited and there are very high number of
    attempts, then there is a good chance that at some point the global minimum is
    spotted. Some more details about this technique we will leave for the [article](https://www.toptal.com/machine-learning/machine-learning-theory-an-introductory-primer)
    which we mentioned in the introduction section.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 梯度下降法只是一个局部函数最小值，但它可以通过在找到局部最小值后随机选择一个新的起始点，并重复这一过程多次，来用于寻找全局最小值。如果函数的最小值数量有限且尝试次数非常多，那么有很大机会在某个时候发现全局最小值。关于这一技术的更多细节，我们将留到在引言部分提到的[文章](https://www.toptal.com/machine-learning/machine-learning-theory-an-introductory-primer)中。
- en: '[PRE10]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Output:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '[PRE11]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: In the above example, we have two new variables, which we called `cost` and
    `train`. With those two variables, we defined an optimizer which we want to use
    in our training model and the function which we want to minimize.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述示例中，我们有两个新变量，我们称之为`cost`和`train`。使用这两个变量，我们定义了一个优化器，用于我们的训练模型以及我们希望最小化的函数。
- en: At the end, the output parameters of `W` and `b` should be identical as those
    defined in the `generate_test_values` function. In line 17, we actually defined
    a function which we used to generate the linear data points to train where `w1=2`,
    `w2=3`, `w3=7` and `b=4`. Linear regression from the above example is multivariate
    where more than one independent variable are used.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`W`和`b`的输出参数应与`generate_test_values`函数中定义的参数相同。在第17行中，我们实际上定义了一个函数，用于生成线性数据点进行训练，其中`w1=2`、`w2=3`、`w3=7`和`b=4`。上述示例中的线性回归是多变量的，其中使用了多个自变量。
- en: '**Conclusion**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**结论**'
- en: As you can see from this TensorFlow tutorial, TensorFlow is a powerful framework
    that makes working with mathematical expressions and multi-dimensional arrays
    a breeze—something fundamentally necessary in machine learning. It also abstracts
    away the complexities of executing the data graphs and scaling.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 正如这个 TensorFlow 教程所示，TensorFlow 是一个强大的框架，使得处理数学表达式和多维数组变得轻而易举——这是机器学习中根本必要的东西。它还抽象了执行数据图和扩展的复杂性。
- en: Over time, TensorFlow has grown in popularity and is now being used by developers
    for solving problems using deep learning methods for image recognition, video
    detection, text processing like sentiment analysis, etc. Like any other library,
    you may need some time to get used to the concepts that TensorFlow is built on.
    And, once you do, with the help of documentation and community support, representing
    problems as data graphs and solving them with TensorFlow can make machine learning
    at scale a less tedious process.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，TensorFlow 的受欢迎程度不断增长，现在开发者们利用它来解决图像识别、视频检测、文本处理（如情感分析）等问题。像其他库一样，你可能需要一些时间来熟悉
    TensorFlow 所基于的概念。一旦你掌握了这些概念，借助文档和社区支持，将问题表示为数据图并使用 TensorFlow 解决它们，可以使大规模机器学习过程变得不那么繁琐。
- en: '[Original](https://www.toptal.com/machine-learning/tensorflow-machine-learning-tutorial).
    Reposted with permission.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://www.toptal.com/machine-learning/tensorflow-machine-learning-tutorial)。经许可转载。'
- en: '**Bio: [Dino](https://www.toptal.com/resume/dino-causevic)** has over five
    years of experience as a software developer. For the past two years, he has worked
    in Java and related technologies, mostly in implementing big data solutions using
    NoSQL technologies and in implementing REST services. He is based in Sarajevo
    and is a member of Toptal.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：[Dino](https://www.toptal.com/resume/dino-causevic)** 拥有五年以上的软件开发经验。过去两年，他主要从事
    Java 及相关技术的工作，主要涉及使用 NoSQL 技术实施大数据解决方案和实现 REST 服务。他居住在萨拉热窝，是 Toptal 的成员。'
- en: '**Related**'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关**'
- en: '[**NIPS 2017 Key Points & Summary Notes**](https://www.kdnuggets.com/2017/12/nips-2017-key-points-summary-notes.html)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**NIPS 2017 关键点与总结笔记**](https://www.kdnuggets.com/2017/12/nips-2017-key-points-summary-notes.html)'
- en: '[**TensorFlow for Short-Term Stocks Prediction**](https://www.kdnuggets.com/2017/12/tensorflow-short-term-stocks-prediction.html)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**TensorFlow 用于短期股票预测**](https://www.kdnuggets.com/2017/12/tensorflow-short-term-stocks-prediction.html)'
- en: '[**Accelerating Algorithms: Considerations in Design, Algorithm Choice and
    Implementation**](https://www.kdnuggets.com/2017/12/accelerating-algorithms-design-choice-implementation.html)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**加速算法：设计、算法选择和实现中的考虑因素**](https://www.kdnuggets.com/2017/12/accelerating-algorithms-design-choice-implementation.html)'
- en: '* * *'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速开启网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你所在组织的 IT'
- en: '* * *'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Federated Learning: Collaborative Machine Learning with a Tutorial…](https://www.kdnuggets.com/2021/12/federated-learning-collaborative-machine-learning-tutorial-get-started.html)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[联邦学习：协作机器学习教程…](https://www.kdnuggets.com/2021/12/federated-learning-collaborative-machine-learning-tutorial-get-started.html)'
- en: '[Getting Started with Scikit-learn for Classification in Machine Learning](https://www.kdnuggets.com/getting-started-with-scikit-learn-for-classification-in-machine-learning)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开始使用 Scikit-learn 进行机器学习分类](https://www.kdnuggets.com/getting-started-with-scikit-learn-for-classification-in-machine-learning)'
- en: '[Getting Started with Automated Text Summarization](https://www.kdnuggets.com/2019/11/getting-started-automated-text-summarization.html)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开始使用自动文本摘要](https://www.kdnuggets.com/2019/11/getting-started-automated-text-summarization.html)'
- en: '[Getting Started Cleaning Data](https://www.kdnuggets.com/2022/01/getting-started-cleaning-data.html)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开始清理数据](https://www.kdnuggets.com/2022/01/getting-started-cleaning-data.html)'
- en: '[Getting Started with SQL Cheatsheet](https://www.kdnuggets.com/2022/08/getting-started-sql-cheatsheet.html)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQL 入门备忘单](https://www.kdnuggets.com/2022/08/getting-started-sql-cheatsheet.html)'
- en: '[Getting Started with spaCy for NLP](https://www.kdnuggets.com/2022/11/getting-started-spacy-nlp.html)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[spaCy 入门指南](https://www.kdnuggets.com/2022/11/getting-started-spacy-nlp.html)'
