- en: Data Science Data Architecture
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2015/09/data-science-data-architecture.html](https://www.kdnuggets.com/2015/09/data-science-data-architecture.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](/2015/09/data-science-data-architecture.html?page=2#comments)'
  prefs: []
  type: TYPE_IMG
- en: '**By [Dr. Olav Laudy](https://www.linkedin.com/profile/view?id=10505631)**
    (Chief Data Scientist, IBM Analytics, Asia Pacific).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Introduction**'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'This article describes the data architecture that allows data scientists to
    do what they do best: “drive the widespread use of data in decision-making”. It
    is intended for various audiences: for IT admins to better understand the needs
    of data scientists, for data scientists to better articulate their needs and in
    general for companies who are looking to setup a data science work stream. Data
    scientists are kind of a rare breed. Apart from data science, they need to understand
    business and they need to have IT hacking skills (i.e. ability to get things working
    in an IT landscape; not to be confused with a penetration/exploit type of hacker).
    The data scientist does understand more business that an IT person and understands
    more IT than a business person. The flip side: the data scientist does understand
    less IT than an IT person and understands less business than a business person.
    With this set of skills comes the request for a specific workflow and data architecture.'
  prefs: []
  type: TYPE_NORMAL
- en: '**IT versus Data Science terminology**'
  prefs: []
  type: TYPE_NORMAL
- en: 'IT landscapes can go as extensive as DTAP: Development, Testing, Acceptance,
    Production environment, but more often IT architectures follow a subset of those.
    From a data science perspective, there is a model development environment and
    a model production environment (i.e. a model scoring environment). In both worlds
    production environment means the same: a stable, audit-able environment that interfaces
    with the business under known conditions (workload, response time, escalation
    routes, etc.). Model development environment, however, has a different meaning
    for IT and the data scientists. Table 1 spells out the criteria for the different
    environments and shows that the data science model development environment is
    neither an IT development environment nor an IT production environment. Note that
    not all companies have such a strict set of requirements as outlined below, but
    it is a good starting point for an inventory.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/71aa6ea5bb3f4a9e09f8588efc5c7ca3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'A model development environment needs to have production-grade availability
    in multiple aspects:'
  prefs: []
  type: TYPE_NORMAL
- en: The daily business of the data scientists takes place on this platform, and
    it not being available stops any model development.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The model development environment, over time, will contain a great deal of (analytical)
    assets, and in that sense, it cannot be restricted in lifetime, nor allows it
    for an easy re-installation and starting from scratch.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A model development environment may have its own backup or testing environment
    to test the application of bug fixes and patches.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Number crunching requires a lot computational power and storage and needs to
    be sized specific to the data and model requirements expected.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The model development environment needs formal backup and escalation routes
    in case of disruptions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The model development environment comes with production level requirement regarding
    data availability. It is unfortunate that this needs to be pointed out: **a data
    scientist does not build models on test data**. It is amazing how often I’m asked
    to build a model on 2000 rows of artificially created data with the same columns
    names as the real data. Such a strategy works when one writes an API to returns
    a specific data request, however, in data science one learns from data and artificially
    created data does not contain any interesting structure.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A model development environment needs to have development status in the following
    aspects:'
  prefs: []
  type: TYPE_NORMAL
- en: A data scientists needs to work against a database with the ability to create,
    fill and drop tables. A data scientist is able to create queries that hang the
    system. That is part of experimentation and may happen once in a while. It will
    become a lesson learned.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A data scientist is not a DBA. Creating tables happens on the fly, with the
    fullest disregard to proper database management such as naming conventions, indexing,
    partitioning and database normalization. Restricting a data scientist to work
    along those lines will kill productivity.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The DBA companion may help out to do the proper thing to the database, such
    a writing clean-up scripts, indexing, etc. In additional the data scientist may
    request a DBA to set up database schemas, users, archiving etc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The data scientist needs to have fairly unrestricted access to a command prompt
    and OS level capabilities. It will not be the first time that data is being delivered
    in the shape of 100.000 zip files or a job needs to be setup to scrape some data
    from the (intra)web. Although source data or temporary files are preferred to
    go in the database, sometimes it’s just simpler to have the ability to store data
    in a csv on disk.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unrestricted installation of software doesn’t have to be among the requirements,
    however, not having to go through a three-month approval process helps productivity
    a lot.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A data scientist should not need to have access to privacy sensitive data. The
    data repository containing the historic data can be created under referential
    integrity (i.e. you can still join tables) with hashed or encrypted sensitive
    fields.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The need for a separate model development and production environment**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Not all analytical models are intended to make it to a production environment,
    although, the models that are most valuable are not one-time executions, but are
    embedded, repeatable scoring generators that the business can act upon. The model
    development takes place in a relatively unstructured environment that gives the
    possibility to play with data and experiment with modeling approaches. Embedding
    an analytical model in the business means it migrates from this loosely defined
    environment to a location of rigor and structure. Not separating the environments
    leads to a series of issues:**'
  prefs: []
  type: TYPE_NORMAL
- en: '***   An ad-hoc query for a new to develop model can disrupt the scoring of
    a production model.'
  prefs: []
  type: TYPE_NORMAL
- en: A data scientist can manually alter scores (e.g. credit scores).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There’s privacy sensitive data available for the eyes of the data scientist
    (as production data is not censored).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The model development cycle is likely required to align with the production
    scoring cycle.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Archiving needs are different for model generated scores and models.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/0a0ada1562c77e823a195803eb3ffd9f.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1 shows the difference between cycles for model development and model
    scoring. In the development environment, the data scientist comes up with an idea
    and slowly works towards a ready model. Once it has taken the right shape, it
    is placed in the pre-production environment (later more), where it is thoroughly
    inspected. Upon approval, and with the proper controls in place, the model is
    moved to production, where it is being scored on a set interval. Note that developing
    the model in the same environment as the scoring, frequently implies that a new
    version of the model needs to be ready for the upcoming scoring moment, i.e. the
    new model needs to be developed in between the scoring moments. This rushes the
    process and is error prone due to the lack of audit-ability and formal model migration
    process. In separate environments, as shown in Figure 1, after some time, the
    data scientist has a new idea to improve the model. The current approved model
    is taken from the pre-production environment, and being worked on. Once ready
    it is placed back into pre-approval, but as the figure shows, it cannot be approved
    due to lacking functionality. The data scientist repairs the defect, after which,
    upon approval, the new model can be placed in production.
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Data Mesh & Its Distributed Data Architecture](https://www.kdnuggets.com/2022/02/data-mesh-distributed-data-architecture.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets™ News 22:n07, Feb 16: How to Learn Math for Machine…](https://www.kdnuggets.com/2022/n07.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data Mesh Architecture: Reimagining Data Management](https://www.kdnuggets.com/2022/05/data-mesh-architecture-reimagining-data-management.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News, May 18: 5 Free Hosting Platform For Machine…](https://www.kdnuggets.com/2022/n20.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Exploring Data Mesh: A Paradigm Shift in Data Architecture](https://www.kdnuggets.com/exploring-data-mesh-a-paradigm-shift-in-data-architecture)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Build a Scalable Data Architecture with Apache Kafka](https://www.kdnuggets.com/2023/04/build-scalable-data-architecture-apache-kafka.html)**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
