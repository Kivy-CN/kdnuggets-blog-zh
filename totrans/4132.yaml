- en: How to Select Rows and Columns in Pandas Using [ ], .loc, iloc, .at and .iat
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 [ ]、.loc、iloc、.at 和 .iat 选择 Pandas 中的行和列
- en: 原文：[https://www.kdnuggets.com/2019/06/select-rows-columns-pandas.html](https://www.kdnuggets.com/2019/06/select-rows-columns-pandas.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/06/select-rows-columns-pandas.html](https://www.kdnuggets.com/2019/06/select-rows-columns-pandas.html)
- en: '![How to Select Rows and Columns in Pandas using [ ], .loc, iloc, .at and .iat](../Images/702ba22e874a73b4bd1f47dd5e07b6a6.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![如何使用 [ ]、.loc、iloc、.at 和 .iat 选择 Pandas 中的行和列](../Images/702ba22e874a73b4bd1f47dd5e07b6a6.png)'
- en: Image by [catalyststuff](https://www.freepik.com/free-vector/cute-panda-lifting-barbell-gym-fitness-cartoon-vector-icon-illustration-animal-sports-icon-isolated_29456470.htm#query=panda&position=36&from_view=search)
    on Freepik
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[catalyststuff](https://www.freepik.com/free-vector/cute-panda-lifting-barbell-gym-fitness-cartoon-vector-icon-illustration-animal-sports-icon-isolated_29456470.htm#query=panda&position=36&from_view=search)
    在 Freepik
- en: '*You can download the Jupyter notebook of this tutorial [here](https://nbviewer.jupyter.org/github/manujeevanprakash/Selecting-rows-and-columns-pandas/blob/master/Selecting%20rows%20and%20columns%20-%20Pandas%20tutorial.ipynb).*'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '*你可以在 [这里](https://nbviewer.jupyter.org/github/manujeevanprakash/Selecting-rows-and-columns-pandas/blob/master/Selecting%20rows%20and%20columns%20-%20Pandas%20tutorial.ipynb)
    下载本教程的 Jupyter notebook。*'
- en: In this blog post, I will show you how to select subsets of data in Pandas using
    `[ ]`, `.loc`, `.iloc`, `.at`, and `.iat`.  I will be using the wine quality dataset
    hosted on the [UCI](http://archive.ics.uci.edu/ml/datasets/Wine) website. This
    data record 11 chemical properties (such as the concentrations of sugar, citric
    acid, alcohol, pH, etc.) of thousands of red and white wines from northern Portugal,
    as well as the quality of the wines, recorded on a scale from 1 to 10\. We will
    only look at the data for red wine.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇博客中，我将展示如何使用 `[ ]`、`.loc`、`.iloc`、`.at` 和 `.iat` 在 Pandas 中选择数据子集。我将使用托管在
    [UCI](http://archive.ics.uci.edu/ml/datasets/Wine) 网站上的葡萄酒质量数据集。该数据记录了北葡萄牙成千上万种红酒和白酒的11种化学性质（如糖、柠檬酸、酒精、pH等）以及葡萄酒的质量，质量以1到10的等级记录。我们只查看红酒的数据。
- en: First, I import the Pandas library, and read the dataset into a DataFrame.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我导入了 Pandas 库，并将数据集读取到数据框中。
- en: '![import_pandas_1](../Images/cebadef539bd97f3ff603820d6fd41d4.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![import_pandas_1](../Images/cebadef539bd97f3ff603820d6fd41d4.png)'
- en: 'Here are the first 5 rows of the DataFrame:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是数据框的前5行：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![Pandas dataframe head](../Images/c4045109d9fabcb1d3a2c82aa0eca343.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![Pandas 数据框头部](../Images/c4045109d9fabcb1d3a2c82aa0eca343.png)'
- en: I rename the columns to make it easier for me call the column names for future
    operations.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我重命名了列，以便在未来操作中更容易调用列名。
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Different Ways to Select Columns
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择列的不同方法
- en: Selecting a single column
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择单列
- en: To select the first column 'fixed_acidity', you can pass the column name as
    a string to the indexing operator.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要选择第一列 'fixed_acidity'，你可以将列名作为字符串传递给索引操作符。
- en: '![](../Images/08276394e3dac0b88e392f7ccbb07266.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/08276394e3dac0b88e392f7ccbb07266.png)'
- en: You can perform the same task using the dot operator.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用点操作符执行相同的任务。
- en: '![](../Images/6e270715c30162d3bb8555074680c0cf.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6e270715c30162d3bb8555074680c0cf.png)'
- en: Selecting multiple columns
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择多个列
- en: To select multiple columns, you can pass a list of column names to the indexing
    operator.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要选择多个列，你可以将列名列表传递给索引操作符。
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Alternatively, you can assign all your columns to a list variable and pass that
    variable to the indexing operator.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，你也可以将所有列分配给一个列表变量，并将该变量传递给索引操作符。
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/c8ad3f9275eaf80b4ce68eca60b1e459.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c8ad3f9275eaf80b4ce68eca60b1e459.png)'
- en: Selecting columns using "select_dtypes" and "filter" methods
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 "select_dtypes" 和 "filter" 方法选择列
- en: To select columns using `select_dtypes` method, you should first find out the
    number of columns for each data types.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 `select_dtypes` 方法选择列，你首先应找出每种数据类型的列数。
- en: '![selecting columns using dtypes](../Images/024adac40939d295865a670cb353cfa6.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![使用 dtypes 选择列](../Images/024adac40939d295865a670cb353cfa6.png)'
- en: In this example, there are 11 columns that are float and one column that is
    an integer. To select only the float columns,  use `wine_df.select_dtypes(include
    = ['float'])`. The `select_dtypes` method takes in a list of datatypes in its
    include parameter. The list values can be a string or a Python object.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，有11列是浮点型数据，一列是整数型数据。要仅选择浮点型列，使用 `wine_df.select_dtypes(include = ['float'])`。`select_dtypes`
    方法的 include 参数接受一个数据类型列表。列表值可以是字符串或 Python 对象。
- en: You can also use the `filter` method to select columns based on the column names
    or index labels.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用 `filter` 方法根据列名或索引标签选择列。
- en: '![filter_method for selecting columns](../Images/0efdf55372d05c339e7235361c2e3c1d.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![选择列的filter方法](../Images/0efdf55372d05c339e7235361c2e3c1d.png)'
- en: In the above example, the `filter` method returns columns that contain the exact
    string 'acid'. The `like` parameter takes a string as an input and returns columns
    that has the string.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述示例中，`filter`方法返回包含确切字符串'acid'的列。`like`参数接受一个字符串作为输入，并返回包含该字符串的列。
- en: You can use regular expressions with the `regex` parameter in the `filter` method.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在`filter`方法中使用`regex`参数来进行正则表达式匹配。
- en: '![regular_exp_filter](../Images/66cfbe43313d8970181b71e5374850b6.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![正则表达式过滤](../Images/66cfbe43313d8970181b71e5374850b6.png)'
- en: Here, I first rename the *ph* and *quality* columns. Then, I pass the regex
    parameter to the `filter` method to find all the columns that has a number.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我首先重命名了*ph*和*quality*列。然后，我将正则表达式参数传递给`filter`方法，以查找所有包含数字的列。
- en: Changing the Order of Columns
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 改变列的顺序
- en: I would like to change the order of my columns.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我想要改变列的顺序。
- en: '![Changing the order of columns](../Images/ee3e2116ca847c37fce7083a5f00a1bc.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![改变列的顺序](../Images/ee3e2116ca847c37fce7083a5f00a1bc.png)'
- en: '`wine_df.columns` shows all the column names. I organize the names of my columns
    into three list variables, and concatenate all these variables to get the final
    column order.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`wine_df.columns` 显示了所有列名。我将列名组织成三个列表变量，并将这些变量连接起来以获得最终的列顺序。'
- en: '![reordering columns in pandas](../Images/ecbfd932b084cd60eb70a39f893ee9df.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![在pandas中重新排序列](../Images/ecbfd932b084cd60eb70a39f893ee9df.png)'
- en: I use the Set module to check if `new_cols` contains all the columns from the
    original.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用Set模块检查`new_cols`是否包含所有原始列。
- en: Then, I pass the `new_cols` variable to the indexing operator and store the
    resulting DataFrame in a variable `"wine_df_2" `. Now, the `wine_df_2 `DataFrame
    has the columns in the order that I wanted.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我将`new_cols`变量传递给索引操作符，并将结果DataFrame存储在变量`"wine_df_2"`中。现在，`wine_df_2` DataFrame中的列按我想要的顺序排列。
- en: '![pass the names of the columns](../Images/d30a144433d06a5dd1f6837a112bdc67.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![传递列名](../Images/d30a144433d06a5dd1f6837a112bdc67.png)'
- en: Different Ways to Select Rows
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择行的不同方法
- en: Selecting rows using .iloc and loc
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用.iloc和loc选择行
- en: Now, let's see how to use .iloc and loc for selecting rows from our DataFrame. To
    illustrate this concept better, I remove all the duplicate rows from the "density"
    column and change the index of `wine_df `DataFrame to 'density'.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何使用.iloc和loc从我们的DataFrame中选择行。为了更好地说明这一概念，我从“density”列中删除了所有重复行，并将`wine_df`
    DataFrame的索引更改为“density”。
- en: '![selecting rows](../Images/7c4042a7e32fefcc04f9cfce34a8f788.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![选择行](../Images/7c4042a7e32fefcc04f9cfce34a8f788.png)'
- en: To select the third row in `wine_df `DataFrame, I pass number 2 to the `.iloc`
    indexer.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要选择`wine_df` DataFrame中的第三行，我将数字2传递给`.iloc`索引器。
- en: '![selecting rows using iloc](../Images/a448f8d8c2d6b3c86d59f8d4f54efceb.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![使用iloc选择行](../Images/a448f8d8c2d6b3c86d59f8d4f54efceb.png)'
- en: To do the same thing, I use the `.loc` indexer.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做同样的事情，我使用`.loc`索引器。
- en: '![selecting rows using loc](../Images/8a65f1489636c3726e3f9f4a92f8691b.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![使用loc选择行](../Images/8a65f1489636c3726e3f9f4a92f8691b.png)'
- en: To select rows with different index positions, I pass a list to the `.iloc`
    indexer.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 要选择具有不同索引位置的行，我将一个列表传递给`.iloc`索引器。
- en: '![](../Images/c24b78400b8a99f912ff6ea37609ece9.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c24b78400b8a99f912ff6ea37609ece9.png)'
- en: I pass a list of density values to the `.iloc` indexer to reproduce the above
    DataFrame.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我将一系列密度值传递给`.iloc`索引器，以重现上述DataFrame。
- en: '![loc to reproduce the dataframe](../Images/95cb1c8eac0b7cc8f4badb152229b320.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![loc 以重现数据框](../Images/95cb1c8eac0b7cc8f4badb152229b320.png)'
- en: You can use slicing to select multiple rows . This is similar to slicing a list
    in Python.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用切片来选择多行。这类似于在Python中切片列表。
- en: '![](../Images/3462ee8575270be3c2b35ec530b43342.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3462ee8575270be3c2b35ec530b43342.png)'
- en: The above operation selects rows 2, 3 and 4.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 上述操作选择了第2、第3和第4行。
- en: You can perform the same thing using `loc`.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`loc`来执行相同的操作。
- en: '![list slicing using loc](../Images/87e74a4a029aff959363eb55873efac0.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![使用loc的列表切片](../Images/87e74a4a029aff959363eb55873efac0.png)'
- en: Here, I am selecting the rows between  the indexes *0.9970 *and *0.9959*.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我选择了索引之间的行 *0.9970* 和 *0.9959*。
- en: Selecting Rows and Columns Simultaneously
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 同时选择行和列
- en: You have to pass parameters for both row and column inside the `.iloc` and `loc`
    indexers to select rows and columns simultaneously. The rows and column values
    may be scalar values, lists, slice objects or boolean.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 你必须在`.iloc`和`loc`索引器中传递行和列的参数，以同时选择行和列。行和列的值可以是标量值、列表、切片对象或布尔值。
- en: 'Select all the rows, and 4th, 5th and 7th column:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 选择所有行，以及第 4、第 5 和第 7 列：
- en: '![](../Images/9da68dbe538dae687906056ce52542da.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9da68dbe538dae687906056ce52542da.png)'
- en: 'To replicate the above DataFrame, pass the column names as a list to the `.loc`
    indexer:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要复制上述 DataFrame，将列名作为列表传递给 `.loc` 索引器：
- en: '![columns and rows using loc](../Images/8e1e5339b7e70ac65522052f4092b66d.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![使用 loc 选择列和行](../Images/8e1e5339b7e70ac65522052f4092b66d.png)'
- en: Selecting disjointed rows and columns
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择不连续的行和列
- en: To select a particular number of rows and columns, you can do the following
    using `.iloc`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要选择特定数量的行和列，你可以使用 `.iloc` 进行如下操作。
- en: '![disjointed rows using iloc](../Images/94fc33523cb1194e1d0e196e896b35fd.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![使用 iloc 选择不连续的行](../Images/94fc33523cb1194e1d0e196e896b35fd.png)'
- en: To select a particular number of rows and columns, you can do the following
    using `.loc`.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 要选择特定数量的行和列，你可以使用 `.loc` 进行如下操作。
- en: '![selecting particular rows using loc](../Images/998d994536c63a89fa911e883576a542.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![使用 loc 选择特定行](../Images/998d994536c63a89fa911e883576a542.png)'
- en: To select a single value from the DataFrame, you can do the following.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 要从 DataFrame 中选择单一值，你可以执行以下操作。
- en: '![selecting a single scalar value](../Images/271ba1ff98120b2e81dbde5634b4902b.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![选择单一标量值](../Images/271ba1ff98120b2e81dbde5634b4902b.png)'
- en: You can use slicing to select a particular column.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用切片来选择特定的列。
- en: '![slicing to selecting rows and columns](../Images/898c7280e9c1c6e38632cf78c8249ac1.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![切片选择行和列](../Images/898c7280e9c1c6e38632cf78c8249ac1.png)'
- en: To select rows and columns simultaneously, you need to understand the use of
    comma in the square brackets. The parameters to the left of the comma always selects
    rows based on the row index, and parameters to the right of the comma always selects
    columns based on the column index.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 要同时选择行和列，你需要理解方括号中逗号的使用。逗号左侧的参数总是根据行索引选择行，而逗号右侧的参数总是根据列索引选择列。
- en: If you want to select a set of rows and all the columns, you don't need to use
    a colon following a comma.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想选择一组行和所有列，你不需要在逗号后使用冒号。
- en: '![no need to use comma](../Images/3161e81a4b1cebe9e837a6f236e80b1f.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![无需使用逗号](../Images/3161e81a4b1cebe9e837a6f236e80b1f.png)'
- en: '![iloc - for selecting all columns and selected number of rows](../Images/64d16cc79ebda9e257120ba3e39197e2.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![iloc - 选择所有列和选定数量的行](../Images/64d16cc79ebda9e257120ba3e39197e2.png)'
- en: Selecting rows and columns using "get_loc" and "index" methods
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 "get_loc" 和 "index" 方法选择行和列
- en: '![rows and columns using get_loc](../Images/c462379dac125653e38a3dd3238eee91.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![使用 get_loc 选择行和列](../Images/c462379dac125653e38a3dd3238eee91.png)'
- en: In the above example, I use the `get_loc ` method to find the integer position
    of the column 'volatile_acidity' and assign it to the variable `col_start`. Again,
    I use the `get_loc `method to find the integer position of the column that is
    2 integer values more than  'volatile_acidity' column, and assign it to the variable
    called `col_end`.I then use the `iloc `method to select the first 4 rows, and
    `col_start` and `col_end`columns.  If you pass an index label to the `get_loc `method,
    it returns its integer location.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述示例中，我使用 `get_loc` 方法查找列 'volatile_acidity' 的整数位置，并将其赋值给变量 `col_start`。然后，我再次使用
    `get_loc` 方法查找比 'volatile_acidity' 列多 2 个整数值的列的位置，并将其赋值给变量 `col_end`。接着，我使用 `iloc`
    方法选择前 4 行，以及 `col_start` 和 `col_end` 列。如果你将索引标签传递给 `get_loc` 方法，它将返回其整数位置。
- en: You can perform a very similar operation using .`loc`.  The following shows
    how to select the rows from 3 to 7, along with columns "volatile_acidity" to "chlorides".
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 `.loc` 执行类似的操作。以下显示了如何选择第 3 到第 7 行，以及从 "volatile_acidity" 到 "chlorides"
    的列。
- en: '![index and getloc](../Images/e57abad54bd2b8c8143d4ec75759394d.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![索引和 getloc](../Images/e57abad54bd2b8c8143d4ec75759394d.png)'
- en: Subselection using .iat and at
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 `.iat` 和 `.at` 进行子选择
- en: Indexers, `.iat` and `.at`, are much more faster than .iloc and .loc for selecting a
    single element from a DataFrame.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 索引器 `.iat` 和 `.at` 比 `.iloc` 和 `.loc` 更快，用于从 DataFrame 中选择单个元素。
- en: '![density val](../Images/45c9d021cd058bd93952e9d841399bd1.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![密度值](../Images/45c9d021cd058bd93952e9d841399bd1.png)'
- en: '![subselection using iat and at](../Images/42741047c28f39e6234eb5e8c48d23c4.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![使用 iat 和 at 进行子选择](../Images/42741047c28f39e6234eb5e8c48d23c4.png)'
- en: '![subselection using iat and at part 2](../Images/9c82dd5edc43a1d89a6e15a0fd7eb726.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![使用 iat 和 at 进行子选择第 2 部分](../Images/9c82dd5edc43a1d89a6e15a0fd7eb726.png)'
- en: I will be writing more tutorials on manipulating data using Pandas. Stay Tuned!
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我将撰写更多关于使用 Pandas 操作数据的教程。敬请关注！
- en: References
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[Pandas Cookbook](https://www.packtpub.com/big-data-and-business-intelligence/pandas-cookbook)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Pandas Cookbook](https://www.packtpub.com/big-data-and-business-intelligence/pandas-cookbook)'
- en: '[Python for Data Analysis](https://www.amazon.com/Python-Data-Analysis-Wrangling-IPython-ebook/dp/B075X4LT6K)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 数据分析](https://www.amazon.com/Python-Data-Analysis-Wrangling-IPython-ebook/dp/B075X4LT6K)'
- en: '* * *'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业的捷径。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 为你的组织提供 IT 支持'
- en: '* * *'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[4 Ways to Rename Pandas Columns](https://www.kdnuggets.com/2022/11/4-ways-rename-pandas-columns.html)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[重命名 Pandas 列的 4 种方法](https://www.kdnuggets.com/2022/11/4-ways-rename-pandas-columns.html)'
- en: '[3 Ways to Append Rows to Pandas DataFrames](https://www.kdnuggets.com/2022/08/3-ways-append-rows-pandas-dataframes.html)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将行追加到 Pandas DataFrame 的 3 种方法](https://www.kdnuggets.com/2022/08/3-ways-append-rows-pandas-dataframes.html)'
- en: '[How to Process a DataFrame with Millions of Rows in Seconds](https://www.kdnuggets.com/2022/01/process-dataframe-millions-rows-seconds.html)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何在几秒钟内处理包含数百万行的 DataFrame](https://www.kdnuggets.com/2022/01/process-dataframe-millions-rows-seconds.html)'
- en: '[How to Correctly Select a Sample From a Huge Dataset in Machine Learning](https://www.kdnuggets.com/2019/05/sample-huge-dataset-machine-learning.html)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何从大型数据集中正确选择样本进行机器学习](https://www.kdnuggets.com/2019/05/sample-huge-dataset-machine-learning.html)'
- en: '[Using SQL with Python: SQLAlchemy and Pandas](https://www.kdnuggets.com/using-sql-with-python-sqlalchemy-and-pandas)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将 SQL 与 Python 一起使用：SQLAlchemy 和 Pandas](https://www.kdnuggets.com/using-sql-with-python-sqlalchemy-and-pandas)'
- en: '[Using the apply() Method with Pandas Dataframes](https://www.kdnuggets.com/2022/07/apply-method-pandas-dataframes.html)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 apply() 方法处理 Pandas DataFrame](https://www.kdnuggets.com/2022/07/apply-method-pandas-dataframes.html)'
