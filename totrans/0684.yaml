- en: DIY Deep Learning Projects
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2018/06/diy-deep-learning-projects.html](https://www.kdnuggets.com/2018/06/diy-deep-learning-projects.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '![Image](../Images/17f2247c67478f353b74fc6c0d17296d.png)'
  prefs: []
  type: TYPE_IMG
- en: LinkedIn Data Science Community
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/338973683142cf09dec12d6f65a55655.png)'
  prefs: []
  type: TYPE_IMG
- en: Akshay Bahadur is one of the great examples that the Data Science community
    at LinkedIn gave. There are great people in other platforms like Quora, StackOverflow,
    Youtube, here, and in lots of forums and platforms helping each other in many
    areas of science, philosophy, math, language and of course Data Science and its
    companions.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/835c6f3c51ede047eadc1d6ca2ac2318.png)'
  prefs: []
  type: TYPE_IMG
- en: Akshay Bahadur.
  prefs: []
  type: TYPE_NORMAL
- en: But I think in the past ~3 years, the LinkedIn community has excel on sharing
    great content in the Data Science space, from sharing experiences to detailed
    posts on how to do Machine Learning or Deep Learning in the real world. I always
    recommend to people entering in this area to be a part of a community, and LinkedIn
    is on the best, you will find me there all the time :).
  prefs: []
  type: TYPE_NORMAL
- en: Starting with Deep Learning and Computer Vision
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![](../Images/eb810539c6ccac2761f884c014417c71.png)'
  prefs: []
  type: TYPE_IMG
- en: '[https://github.com/facebookresearch/Detectron](https://github.com/facebookresearch/Detectron)'
  prefs: []
  type: TYPE_NORMAL
- en: The research in the Deep Learning space for classifying things in images, detecting
    them and do actions when they “see” something has been very important in this
    decade, with amazing results like surpassing human level performance for some
    problems.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this article I will show you every post Akshay Bahadur has done in the space
    of Computer Vision (CV) and Deep Learning (DL). If you are not familiar with any
    of those terms you can learn more about them here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[**A “weird” introduction to Deep Learning**'
  prefs: []
  type: TYPE_NORMAL
- en: '*There are amazing introductions, courses and blog posts on Deep Learning.
    But this is a different kind of introduction.*towardsdatascience.com](https://towardsdatascience.com/a-weird-introduction-to-deep-learning-7828803693b0)'
  prefs: []
  type: TYPE_NORMAL
- en: '[**Two months exploring deep learning and computer vision**'
  prefs: []
  type: TYPE_NORMAL
- en: '*I decided to develop familiarity with computer vision and machine learning
    techniques. As a web developer, I found this…*towardsdatascience.com](https://towardsdatascience.com/two-months-exploring-deep-learning-and-computer-vision-3dcc84b2457f)'
  prefs: []
  type: TYPE_NORMAL
- en: '[**From Neuroscience To Computer Vision**'
  prefs: []
  type: TYPE_NORMAL
- en: '*A 50 Year Look At Human And Computer Vision*towardsdatascience.com](https://towardsdatascience.com/from-neuroscience-to-computer-vision-e86a4dea3574)'
  prefs: []
  type: TYPE_NORMAL
- en: '[**Computer Vision by Andrew Ng — 11 Lessons Learned**'
  prefs: []
  type: TYPE_NORMAL
- en: '*I recently completed Andrew Ng’s computer vision course on Coursera. Ng does
    an excellent job at explaining many of the…*towardsdatascience.com](https://towardsdatascience.com/computer-vision-by-andrew-ng-11-lessons-learned-7d05c18a6999)'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Hand Movement Using OpenCV
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[**akshaybahadur21/HandMovementTracking**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Contribute to HandMovementTracking development by creating an account on GitHub.*github.com](https://github.com/akshaybahadur21/HandMovementTracking)'
  prefs: []
  type: TYPE_NORMAL
- en: 'From Akshay:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To perform video tracking an algorithm analyzes sequential video frames and
    outputs the movement of targets between the frames. There are a variety of algorithms,
    each having strengths and weaknesses. Considering the intended use is important
    when choosing which algorithm to use. There are two major components of a visual
    tracking system: target representation and localization, as well as filtering
    and data association.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Video tracking is the process of locating a moving object (or multiple objects)
    over time using a camera. It has a variety of uses, some of which are: human-computer
    interaction, security and surveillance, video communication and compression, augmented
    reality, traffic control, medical imaging and video editing.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/fd9958aece7bd34acb9d68b741ace2fd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This is all the code you need to reproduce it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Yep, 54 lines of code. Very simple right? You will need to have OpenCV installed
    in your computer, if you have Mac check this out:'
  prefs: []
  type: TYPE_NORMAL
- en: '[**Install OpenCV 3 on MacOS**'
  prefs: []
  type: TYPE_NORMAL
- en: '*In this post, we will provide step by step instructions for installing OpenCV
    3.3.0 (C++ and Python) on MacOS and OSX…*www.learnopencv.com](https://www.learnopencv.com/install-opencv3-on-macos/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have Ubuntu:'
  prefs: []
  type: TYPE_NORMAL
- en: '[**OpenCV: Install OpenCV-Python in Ubuntu**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Now we have all the required dependencies, let''s install OpenCV. Installation
    has to be configured with CMake. It…*docs.opencv.org](https://docs.opencv.org/3.4.1/d2/de6/tutorial_py_setup_in_ubuntu.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'and if you have Windows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[**Install OpenCV-Python in Windows - OpenCV 3.0.0-dev documentation**'
  prefs: []
  type: TYPE_NORMAL
- en: '*In this tutorial We will learn to setup OpenCV-Python in your Windows system.
    Below steps are tested in a Windows 7-64…*docs.opencv.org](https://docs.opencv.org/3.0-beta/doc/py_tutorials/py_setup/py_setup_in_windows/py_setup_in_windows.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Drowsiness Detection OpenCV
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[**akshaybahadur21/Drowsiness_Detection**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Contribute to Drowsiness_Detection development by creating an account on GitHub.*github.com](https://github.com/akshaybahadur21/Drowsiness_Detection)'
  prefs: []
  type: TYPE_NORMAL
- en: This can be used by riders who tend to drive for a longer period of time that
    may lead to accidents. This code can detect your eyes and alert when the user
    is drowsy.
  prefs: []
  type: TYPE_NORMAL
- en: '**Dependencies**'
  prefs: []
  type: TYPE_NORMAL
- en: cv2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: immutils
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: dlib
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: scipy
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Algorithm**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Each eye is represented by 6 (x, y)-coordinates, starting at the left-corner
    of the eye (as if you were looking at the person), and then working clockwise
    around the eye:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bbdf9b2032f999fdfb37fe73b2402e4d.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Condition**'
  prefs: []
  type: TYPE_NORMAL
- en: It checks 20 consecutive frames and if the Eye Aspect ratio is lesst than 0.25,
    Alert is generated.
  prefs: []
  type: TYPE_NORMAL
- en: '**Relationship**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e9960701bb337eb9d65d773675f4c540.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Summing up**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2069cf3ed782cfb6cd957bbbf49fe34b.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](../Images/bf8688f84fe8201275fb8cc0c24cc37e.png)'
  prefs: []
  type: TYPE_IMG
- en: 3\. Digit Recognition using Softmax Regression
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[**akshaybahadur21/Digit-Recognizer**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Digit-Recognizer - Machine Learning classifier for recognizing the digits.*github.com](https://github.com/akshaybahadur21/Digit-Recognizer)'
  prefs: []
  type: TYPE_NORMAL
- en: This code helps you classify different digits using softmax regression. You
    can install Conda for python which resolves all the dependencies for machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: '**Description**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Softmax Regression (synonyms: Multinomial Logistic, Maximum Entropy Classifier,
    or just Multi-class Logistic Regression) is a generalization of logistic regression
    that we can use for multi-class classification (under the assumption that the
    classes are mutually exclusive). In contrast, we use the (standard) Logistic Regression
    model in binary classification tasks.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/205b0cabc1ab47ddf01fa63dbb82487f.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Python Implementation**'
  prefs: []
  type: TYPE_NORMAL
- en: The dataset used was MNIST with images of size 28 X 28, and the plan here is
    to classify digits from 0 to 9 using Logistic Regression, Shallow Network and
    Deep Neural Network.
  prefs: []
  type: TYPE_NORMAL
- en: One of the best parts here is that he coded three models using Numpy including
    optimization, forward and back propagation and just everything.
  prefs: []
  type: TYPE_NORMAL
- en: 'For Logistic Regression: [**see code here**](https://gist.github.com/FavioVazquez/122e778c15e23d6c18969bc9e70cdbc5)'
  prefs: []
  type: TYPE_NORMAL
- en: 'For a Shallow Neural Network: [**see code here**](https://gist.github.com/FavioVazquez/6b4f476c3258a52b6accd842d57a3281)'
  prefs: []
  type: TYPE_NORMAL
- en: 'And finally with a Deep Neural Network: [**see code here**](https://gist.github.com/FavioVazquez/45f182f79e2afc39ea0536ae2d118370)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Execution for writing through webcam**'
  prefs: []
  type: TYPE_NORMAL
- en: To run the code, type `python Dig-Rec.py`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/0bcd81e8fa9f98464832fc19bc07631a.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Execution for showing images through webcam**'
  prefs: []
  type: TYPE_NORMAL
- en: To run the code, type `python Digit-Recognizer.py`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/c8360c56faba426c0dfada7fc591de13.png)'
  prefs: []
  type: TYPE_IMG
- en: Devanagiri Recognition
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[**akshaybahadur21/Devanagiri-Recognizer**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Devanagiri-Recognizer - Hindi Alphabet classifier using convnet*github.com](https://github.com/akshaybahadur21/Devanagiri-Recognizer)'
  prefs: []
  type: TYPE_NORMAL
- en: This code helps you classify different alphabets of hindi language (Devanagiri)
    using Convnets. You can install Conda for python which resolves all the dependencies
    for machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: '**Technique Used**'
  prefs: []
  type: TYPE_NORMAL
- en: I have used convolutional neural networks. I am using Tensorflow as the framework
    and Keras API for providing a high level of abstraction.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Architecture**'
  prefs: []
  type: TYPE_NORMAL
- en: CONV2D → MAXPOOL → CONV2D → MAXPOOL → FC → Softmax → Classification
  prefs: []
  type: TYPE_NORMAL
- en: '**Some additional points**'
  prefs: []
  type: TYPE_NORMAL
- en: You can go for additional conv layers.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add regularization to prevent overfitting.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can add additional images to the training set for increasing the accuracy.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Python Implementation**'
  prefs: []
  type: TYPE_NORMAL
- en: Dataset- DHCD (Devnagari Character Dataset) with i mages of size 32 X 32 and
    usage of Convolutional Network.
  prefs: []
  type: TYPE_NORMAL
- en: To run the code, type `python Dev-Rec.py`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/7bc3ba69048c99f3fb0a415154c37d90.png)'
  prefs: []
  type: TYPE_IMG
- en: 4\. Facial Recognition using FaceNet
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[**akshaybahadur21/Facial-Recognition-using-Facenet**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Facial-Recognition-using-Facenet - Implementation of facial recognition using
    facenets.*github.com](https://github.com/akshaybahadur21/Facial-Recognition-using-Facenet)'
  prefs: []
  type: TYPE_NORMAL
- en: This code helps in facial recognition using facenets ([https://arxiv.org/pdf/1503.03832.pdf](https://arxiv.org/pdf/1503.03832.pdf)).
    The concept of facenets was originally presented in a research paper. The main
    concepts talked about triplet loss function to compare images of different person.
    This concept uses inception network which has been taken from source and fr_utils.py
    is taken from deeplearning.ai for reference. I have added several functionalities
    of my own for providing stability and better detection.
  prefs: []
  type: TYPE_NORMAL
- en: '**Code Requirements**'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can install Conda for python which resolves all the dependencies for machine
    learning and you’ll need:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '**Description**'
  prefs: []
  type: TYPE_NORMAL
- en: A facial recognition system is a technology capable of identifying or verifying
    a person from a digital image or a video frame from a video source. There are
    multiples methods in which facial recognition systems work, but in general, they
    work by comparing selected facial features from given image with faces within
    a database.
  prefs: []
  type: TYPE_NORMAL
- en: '**Functionalities added**'
  prefs: []
  type: TYPE_NORMAL
- en: Detecting face only when your eyes are opened. (Security measure).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using face align functionality from dlib to predict effectively while live streaming.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Python Implementation**'
  prefs: []
  type: TYPE_NORMAL
- en: Network Used- Inception Network
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Original Paper — Facenet by Google
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Procedure**'
  prefs: []
  type: TYPE_NORMAL
- en: If you want to train the network , run `Train-inception.py`, however you don't
    need to do that since I have already trained the model and saved it as `face-rec_Google.h5` file
    which gets loaded at runtime.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now you need to have images in your database. The code check `/images`folder
    for that. You can either paste your pictures there or you can click it using web
    cam. For doing that, run `create-face.py` the images get stored in `/incept` folder.
    You have to manually paste them in `/images folder`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run `rec-feat.py` for running the application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../Images/1f71c3e2a0a479ea1676da80444be5ff.png)'
  prefs: []
  type: TYPE_IMG
- en: 5\. Emojinator
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[**akshaybahadur21/Emojinator**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Emojinator - A simple emoji classifier for humans.*github.com](https://github.com/akshaybahadur21/Emojinator)'
  prefs: []
  type: TYPE_NORMAL
- en: This code helps you to recognize and classify different emojis. As of now, we
    are only supporting hand emojis.
  prefs: []
  type: TYPE_NORMAL
- en: '**Code Requirements**'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can install Conda for python which resolves all the dependencies for machine
    learning and you’ll need:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '**Description**'
  prefs: []
  type: TYPE_NORMAL
- en: Emojis are ideograms and smileys used in electronic messages and web pages.
    Emoji exist in various genres, including facial expressions, common objects, places
    and types of weather, and animals. They are much like emoticons, but emoji are
    actual pictures instead of typographics.
  prefs: []
  type: TYPE_NORMAL
- en: '**Functionalities**'
  prefs: []
  type: TYPE_NORMAL
- en: Filters to detect hand.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: CNN for training the model.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Python Implementation**'
  prefs: []
  type: TYPE_NORMAL
- en: Network Used- Convolutional Neural Network
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Procedure**'
  prefs: []
  type: TYPE_NORMAL
- en: First, you have to create a gesture database. For that, run `CreateGest.py`.
    Enter the gesture name and you will get 2 frames displayed. Look at the contour
    frame and adjust your hand to make sure that you capture the features of your
    hand. Press 'c' for capturing the images. It will take 1200 images of one gesture.
    Try moving your hand a little within the frame to make sure that your model doesn't
    overfit at the time of training.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Repeat this for all the features you want.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run `CreateCSV.py` for converting the images to a CSV file
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you want to train the model, run ‘TrainEmojinator.py’
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, run `Emojinator.py` for testing your model via webcam.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Contributors**'
  prefs: []
  type: TYPE_NORMAL
- en: Akshay Bahadur and Raghav Patnecha.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bf56b24d5e89f9afd35f9cca9a979c8c.png)'
  prefs: []
  type: TYPE_IMG
- en: Final Words
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I can only say I’m incredibly impress on these projects, all of them you can
    run them on your computer, or more easily on[ Deep Cognition’s](http://deepcognition.ai/) platform
    if you don’t want to install anything, and it can run online.
  prefs: []
  type: TYPE_NORMAL
- en: I want to thank Akshay and his friends for making this great Open Source contributions
    and for all the others that will come. Try them, run them, and get inspired. This
    is only a small example of the amazing things DL and CV can do, and is up to you
    to take this an turn it into something that can help the world become a better
    place.
  prefs: []
  type: TYPE_NORMAL
- en: Never give up, we need everyone to be interested in lots of different things.
    I think we can change the world for the better, improve our lives, the way we
    work, think and solve problems, and if we channel all the resources we have right
    now to make these area of knowledge to work together for a greater good, we can
    make a huge positive impact in the world and our lives.
  prefs: []
  type: TYPE_NORMAL
- en: '**We need more people interested, more courses, more specializations, more
    enthusiasm. We need you :)**'
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading this. I hope you found something interesting here :)
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have questions just add me in twitter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[**Favio Vázquez (@FavioVaz) | Twitter**'
  prefs: []
  type: TYPE_NORMAL
- en: '*The latest Tweets from Favio Vázquez (@FavioVaz). Data Scientist. Physicist
    and computational engineer. I have a…*twitter.com](https://twitter.com/FavioVaz)'
  prefs: []
  type: TYPE_NORMAL
- en: 'and LinkedIn:'
  prefs: []
  type: TYPE_NORMAL
- en: '[**Favio Vázquez — Principal Data Scientist — OXXO | LinkedIn**'
  prefs: []
  type: TYPE_NORMAL
- en: '*View Favio Vázquez’s profile on LinkedIn, the world’s largest professional
    community. Favio has 15 jobs jobs listed on…*linkedin.com](http://linkedin.com/in/faviovazquez/)'
  prefs: []
  type: TYPE_NORMAL
- en: See you there :)
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Favio Vazquez](https://www.linkedin.com/in/faviovazquez/)** is a physicist
    and computer engineer working on Data Science and Computational Cosmology. He
    has a passion for science, philosophy, programming, and music. Right now he is
    working on data science, machine learning and big data as the Principal Data Scientist
    at Oxxo. Also, he is the creator of Ciencia y Datos, a Data Science publication
    in Spanish. He loves new challenges, working with a good team and having interesting
    problems to solve. He is part of Apache Spark collaboration, helping in MLlib,
    Core and the Documentation. He loves applying his knowledge and expertise in science,
    data analysis, visualization, and automatic learning to help the world become
    a better place.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/diy-deep-learning-projects-c2e0fac3274f).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[A “Weird” Introduction to Deep Learning](/2018/03/weird-introduction-deep-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Two Sides of Getting a Job as a Data Scientist](/2018/03/two-sides-getting-job-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[My Journey into Deep Learning](/2018/01/journey-into-deep-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
