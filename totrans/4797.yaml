- en: Introduction to Fraud Detection Systems
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 欺诈检测系统简介
- en: 原文：[https://www.kdnuggets.com/2018/08/introduction-fraud-detection-systems.html](https://www.kdnuggets.com/2018/08/introduction-fraud-detection-systems.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2018/08/introduction-fraud-detection-systems.html](https://www.kdnuggets.com/2018/08/introduction-fraud-detection-systems.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](#comments)'
- en: '**By [Miguel Gonzalez-Fierro]( https://www.linkedin.com/in/miguelgfierro/),
    Microsoft**.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由[米格尔·冈萨雷斯-费罗](https://www.linkedin.com/in/miguelgfierro/)，微软**。'
- en: Fraud detection is one of the top priorities for banks and financial institutions,
    which can be addressed using machine learning. According to [a report published
    by Nilson](https://nilsonreport.com/upload/content_promo/The_Nilson_Report_Issue_1118.pdf),
    in 2017 the worldwide losses in card fraud related cases reached 22.8 billion
    dollars. The problem is forecasted to get worse in the following years, by 2021,
    the card fraud bill is expected to be 32.96 billion dollars.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 欺诈检测是银行和金融机构的首要任务之一，可以通过机器学习来解决。根据[a report published by Nilson](https://nilsonreport.com/upload/content_promo/The_Nilson_Report_Issue_1118.pdf)，2017年全球因卡片欺诈案件造成的损失达到228亿美元。预计这一问题在未来几年将进一步恶化，到2021年，卡片欺诈的损失预计将达到329.6亿美元。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升您的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持您的组织IT需求'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: In this tutorial, we will use the [credit card fraud detection dataset](https://www.kaggle.com/mlg-ulb/creditcardfraud) from
    Kaggle, to identify fraud cases. We will use a [gradient boosted tree](https://blogs.technet.microsoft.com/machinelearning/2017/07/25/lessons-learned-benchmarking-fast-machine-learning-algorithms/) as
    a machine learning algorithm. And finally, we will create a simple API to operationalize
    (o16n) the model.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将使用[Kaggle上的信用卡欺诈检测数据集](https://www.kaggle.com/mlg-ulb/creditcardfraud)来识别欺诈案例。我们将使用[梯度提升树](https://blogs.technet.microsoft.com/machinelearning/2017/07/25/lessons-learned-benchmarking-fast-machine-learning-algorithms/)作为机器学习算法。最后，我们将创建一个简单的API来使模型投入实际使用。
- en: We will use the gradient boosting library [LightGBM](https://github.com/Microsoft/LightGBM),
    which has recently became one of the most popular libraries for top participants
    in [Kaggle competitions](https://github.com/Microsoft/LightGBM/tree/a39c848e6456d473d2043dff3f5159945a36b567/examples).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用梯度提升库[LightGBM](https://github.com/Microsoft/LightGBM)，它最近已成为[Kaggle竞赛](https://github.com/Microsoft/LightGBM/tree/a39c848e6456d473d2043dff3f5159945a36b567/examples)顶级参与者中最受欢迎的库之一。
- en: Fraud detection problems are known for being extremely imbalanced. [Boosting](https://en.wikipedia.org/wiki/Boosting_(machine_learning)) is
    one technique that usually works well with these kind of datasets. It iteratively
    creates weak classifiers (decision trees) weighting the instances to increase
    the performance. In the first subset, a weak classifier is trained and tested
    on all the training data, those instances that have bad performance are weighted
    to appear more in the next data subset. Finally, all the classifiers are ensembled
    with a weighted average of their estimates.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 欺诈检测问题以极其不平衡而著称。[Boosting](https://en.wikipedia.org/wiki/Boosting_(machine_learning))
    是一种通常适用于这类数据集的技术。它通过迭代创建弱分类器（决策树），加权实例以提高性能。在第一个子集中，训练和测试一个弱分类器，在所有训练数据上测试表现差的实例权重被提高，以便在下一个数据子集中出现更多。最终，所有分类器都通过加权平均其预测结果进行集成。
- en: In LightGBM, there is a [parameter](https://github.com/Microsoft/LightGBM/blob/master/docs/Parameters.rst#objective-parameters) called `is_unbalanced` that
    automatically helps you to control this issue.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在LightGBM中，有一个[参数](https://github.com/Microsoft/LightGBM/blob/master/docs/Parameters.rst#objective-parameters)叫做`is_unbalanced`，可以自动帮助你控制这个问题。
- en: LigtGBM can be used with or without [GPU](https://lightgbm.readthedocs.io/en/latest/GPU-Performance.html).
    For small datasets, like the one we are using here, it is faster to use CPU, due
    to IO overhead. However, I wanted to showcase the GPU alternative, which is trickier
    to install, in case anyone wants to experiment with bigger datasets.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: LightGBM 可以在有或没有 [GPU](https://lightgbm.readthedocs.io/en/latest/GPU-Performance.html)的情况下使用。对于像我们这里使用的小数据集，使用CPU更快，因为IO开销较大。然而，我想展示GPU的替代方案，虽然安装更复杂，以便有兴趣的人可以尝试更大的数据集。
- en: 'To install the dependencies in Linux:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中安装依赖项：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Dataset
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据集
- en: The first step is to load the dataset and analyze it.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是加载数据集并分析它。
- en: For it, before continuing, **you have to run the notebook [data_prep.ipynb](https://render.githubusercontent.com/view/data_prep.ipynb)**,
    which will generate the SQLite database.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，**你必须运行笔记本 [data_prep.ipynb](https://render.githubusercontent.com/view/data_prep.ipynb)**，这将生成SQLite数据库。
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '|  | Time | V1 | V2 | V3 | V4 | V5 | V6 | V7 | V8 | V9 | ... | V21 | V22 |
    V23 | V24 | V25 | V26 | V27 | V28 | Amount | Class |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '|  | 时间 | V1 | V2 | V3 | V4 | V5 | V6 | V7 | V8 | V9 | ... | V21 | V22 | V23
    | V24 | V25 | V26 | V27 | V28 | 金额 | 类别 |'
- en: '| 0 | 0.0 | -1.359807 | -0.072781 | 2.536347 | 1.378155 | -0.338321 | 0.462388
    | 0.239599 | 0.098698 | 0.363787 | ... | -0.018307 | 0.277838 | -0.110474 | 0.066928
    | 0.128539 | -0.189115 | 0.133558 | -0.021053 | 149.62 | 0 |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 0 | 0.0 | -1.359807 | -0.072781 | 2.536347 | 1.378155 | -0.338321 | 0.462388
    | 0.239599 | 0.098698 | 0.363787 | ... | -0.018307 | 0.277838 | -0.110474 | 0.066928
    | 0.128539 | -0.189115 | 0.133558 | -0.021053 | 149.62 | 0 |'
- en: '| 1 | 0.0 | 1.191857 | 0.266151 | 0.166480 | 0.448154 | 0.060018 | -0.082361
    | -0.078803 | 0.085102 | -0.255425 | ... | -0.225775 | -0.638672 | 0.101288 |
    -0.339846 | 0.167170 | 0.125895 | -0.008983 | 0.014724 | 2.69 | 0 |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 0.0 | 1.191857 | 0.266151 | 0.166480 | 0.448154 | 0.060018 | -0.082361
    | -0.078803 | 0.085102 | -0.255425 | ... | -0.225775 | -0.638672 | 0.101288 |
    -0.339846 | 0.167170 | 0.125895 | -0.008983 | 0.014724 | 2.69 | 0 |'
- en: '| 2 | 1.0 | -1.358354 | -1.340163 | 1.773209 | 0.379780 | -0.503198 | 1.800499
    | 0.791461 | 0.247676 | -1.514654 | ... | 0.247998 | 0.771679 | 0.909412 | -0.689281
    | -0.327642 | -0.139097 | -0.055353 | -0.059752 | 378.66 | 0 |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 1.0 | -1.358354 | -1.340163 | 1.773209 | 0.379780 | -0.503198 | 1.800499
    | 0.791461 | 0.247676 | -1.514654 | ... | 0.247998 | 0.771679 | 0.909412 | -0.689281
    | -0.327642 | -0.139097 | -0.055353 | -0.059752 | 378.66 | 0 |'
- en: '| 3 | 1.0 | -0.966272 | -0.185226 | 1.792993 | -0.863291 | -0.010309 | 1.247203
    | 0.237609 | 0.377436 | -1.387024 | ... | -0.108300 | 0.005274 | -0.190321 | -1.175575
    | 0.647376 | -0.221929 | 0.062723 | 0.061458 | 123.50 | 0 |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 1.0 | -0.966272 | -0.185226 | 1.792993 | -0.863291 | -0.010309 | 1.247203
    | 0.237609 | 0.377436 | -1.387024 | ... | -0.108300 | 0.005274 | -0.190321 | -1.175575
    | 0.647376 | -0.221929 | 0.062723 | 0.061458 | 123.50 | 0 |'
- en: '| 4 | 2.0 | -1.158233 | 0.877737 | 1.548718 | 0.403034 | -0.407193 | 0.095921
    | 0.592941 | -0.270533 | 0.817739 | ... | -0.009431 | 0.798278 | -0.137458 | 0.141267
    | -0.206010 | 0.502292 | 0.219422 | 0.215153 | 69.99 | 0 |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 2.0 | -1.158233 | 0.877737 | 1.548718 | 0.403034 | -0.407193 | 0.095921
    | 0.592941 | -0.270533 | 0.817739 | ... | -0.009431 | 0.798278 | -0.137458 | 0.141267
    | -0.206010 | 0.502292 | 0.219422 | 0.215153 | 69.99 | 0 |'
- en: 5 rows × 31 columns
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 5行 × 31列
- en: As we can see, the dataset is extremely imbalanced. The minority class counts
    for around 0.002% of the examples.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，数据集极为不平衡。少数类别约占0.002%的样本。
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The next step is to split the dataset into train and test.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将数据集拆分为训练集和测试集。
- en: '[PRE10]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Training with LightGBM - Baseline
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用LightGBM进行训练 - 基准
- en: For this task we use a simple set of parameters to train the model. We just
    want to create a baseline model, so we are not performing here cross validation
    or parameter tunning.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个任务，我们使用了一组简单的参数来训练模型。我们只想创建一个基准模型，因此这里没有进行交叉验证或参数调优。
- en: The details of the different parameters of LightGBM can be found in the [documentation](https://github.com/Microsoft/LightGBM/blob/master/docs/Parameters.rst).
    Also, the authors provide [some advices](https://github.com/Microsoft/LightGBM/blob/master/docs/Parameters-Tuning.rst) on
    how to tune the parameters and prevent overfitting.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: LightGBM的不同参数细节可以在 [文档](https://github.com/Microsoft/LightGBM/blob/master/docs/Parameters.rst) 中找到。此外，作者提供了 [一些建议](https://github.com/Microsoft/LightGBM/blob/master/docs/Parameters-Tuning.rst) 来调整参数并防止过拟合。
- en: '[PRE14]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Once we have the trained model, we can obtain some metrics.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们拥有了训练好的模型，我们可以获得一些指标。
- en: '[PRE18]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![Confusion Matrix](../Images/9d43e51cb4429246863d109770aa14ee.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![混淆矩阵](../Images/9d43e51cb4429246863d109770aa14ee.png)'
- en: In business terms, if the system classifies a fair transaction as fraud (false
    positive), the bank will investigate the issue probably using human intervention.
    According to a [2015 report from Javelin Strategy](https://www.javelinstrategy.com/press-release/false-positive-card-declines-push-consumers-abandon-issuers-and-merchants#),
    15% of all cardholders have had at least one transaction incorrectly declined
    in the previous year, representing an annual decline amount of almost $118 billion.
    Nearly 4 in 10 declined cardholders report that they abandoned their card after
    being falsely declined.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 从商业角度来看，如果系统将一个正常的交易误分类为欺诈（假阳性），银行将会进行调查，可能需要人工干预。根据[2015年Javelin策略报告](https://www.javelinstrategy.com/press-release/false-positive-card-declines-push-consumers-abandon-issuers-and-merchants#)，15%的持卡人在前一年中至少有一笔交易被错误地拒绝，总金额近1180亿美元。近4成被拒绝的持卡人表示，他们在被错误拒绝后放弃了他们的卡。
- en: However, if a fraudulent transaction is not detected, effectively meaning that
    the classifier predicts that a transaction is fair when it is really fraudulent
    (false negative), then the bank is losing money and the bad guy is getting away
    with it.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果欺诈交易未被检测到，实际上意味着分类器预测交易是正常的，而实际是欺诈性的（假阴性），那么银行就会亏损，而犯罪分子则逃脱了。
- en: A common way to use business rules in these predictions is to control the threshold
    or operation point of the prediction. This can be controlled changing the threshold
    value in `binarize_prediction(y_prob, threshold=0.5)`. It is common to do a loop
    from 0.1 to 0.9 and evaluate the different business outcomes.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些预测中使用商业规则的一个常见方法是控制预测的阈值或操作点。这可以通过在`binarize_prediction(y_prob, threshold=0.5)`中更改阈值来控制。通常会从0.1到0.9进行循环，评估不同的商业结果。
- en: '[PRE23]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: O16N with Flask and Websockets
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Flask和Websockets进行操作化
- en: The next step is to operationalize (o16n) the machine learning model. For it,
    we are going to use [Flask](http://flask.pocoo.org/) to create a RESTfull API.
    The input of the API is going to be a transaction (defined by its features), and
    the output, the model prediction.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将机器学习模型投入使用。为此，我们将使用[Flask](http://flask.pocoo.org/)来创建一个RESTful API。API的输入将是一个交易（由其特征定义），输出将是模型的预测。
- en: Aditionally, we designed a [websocket service](https://miguelgfierro.com/blog/2018/demystifying-websockets-for-real-time-web-communication/) to
    visualize fraudulent transactions on a map. The system works in real time using
    the library [flask-socketio](https://github.com/miguelgrinberg/Flask-SocketIO).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们设计了一个[websocket服务](https://miguelgfierro.com/blog/2018/demystifying-websockets-for-real-time-web-communication/)来在地图上可视化欺诈交易。系统使用库[flask-socketio](https://github.com/miguelgrinberg/Flask-SocketIO)实时工作。
- en: When a new transaction is sent to the API, the LightGBM model predicts whether
    the transaction is fair or fraudulent. If the transaction is fraudulent, the server
    sends a signal to the a web client, that renders a world map showing the location
    of the fraudulent transaction. The map is made with javascript using [amCharts](http://amcharts.com/) and
    the map locations are taken from the previously created SQLite database.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 当新交易被发送到API时，LightGBM模型会预测交易是正常还是欺诈。如果交易是欺诈性的，服务器会向一个web客户端发送信号，客户端渲染出一个世界地图，显示欺诈交易的位置。地图使用[javascript](http://amcharts.com/)和之前创建的SQLite数据库中的位置数据制作。
- en: To start the api execute `(fraud)$ python api.py` inside the conda environment.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动API，请在conda环境中执行`(fraud)$ python api.py`。
- en: '[PRE24]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: First, we make sure that the API is on
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们确保API正在运行
- en: '[PRE25]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The fraud police is watching you
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 欺诈警察在监视你
- en: '![](../Images/f39cf9728096f014c1e8b578120251fb.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f39cf9728096f014c1e8b578120251fb.png)'
- en: Now, we are going to select one value and predict the output.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将选择一个值并预测输出。
- en: '[PRE26]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Fraudulent transaction visualization
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 欺诈交易可视化
- en: Now that we know that the main end point of the API works, we will try the /predict_map
    end point. It creates a real time visualization system for fraudulent transactions
    using websockets.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道API的主要端点工作正常，我们将尝试/predict_map端点。它使用websockets创建一个实时可视化系统来展示欺诈交易。
- en: A websocket is a protocol intended for real-time communications developed for
    the HTML5 specification. It creates a persistent, low latency connection that
    can support transactions initiated by either the client or server. [In this post](https://miguelgfierro.com/blog/2018/demystifying-websockets-for-real-time-web-communication/)
    you can find a detailed explanation of websockets and other related technologies.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: WebSocket 是一种旨在进行实时通信的协议，为 HTML5 规范开发。它创建了一个持久的、低延迟的连接，可以支持由客户端或服务器发起的事务。[在这篇文章中](https://miguelgfierro.com/blog/2018/demystifying-websockets-for-real-time-web-communication/)，你可以找到关于
    WebSocket 和其他相关技术的详细解释。
- en: '![](../Images/aa05baa6de9f9f3c3b73020d78f30e87.png)For our case, whenever a
    user makes a request to the end point `/predict_map`, the machine learning model
    evaluates the transaction details and makes a prediction. If the prediction is
    classified as fraudulent, the server sends a signal using `socketio.emit(''map_update'',
    location)`. This signal just contains a dictionary, called `location`, with a
    simulated name and location of where the fraudulent transaction occurred. The
    signal is shown in `index.html`, which just renders some javascript code that
    is referenced via an `id="chartdiv"`.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/aa05baa6de9f9f3c3b73020d78f30e87.png)对于我们的案例，每当用户向端点`/predict_map`发出请求时，机器学习模型会评估交易详情并进行预测。如果预测被分类为欺诈，服务器会使用`socketio.emit(''map_update'',
    location)`发送信号。该信号仅包含一个名为`location`的字典，包含一个模拟的名称和欺诈交易发生的位置。信号在`index.html`中显示，该文件仅渲染一些通过`id="chartdiv"`引用的
    JavaScript 代码。'
- en: 'The javascript code is defined in the file `frauddetection.js`. The websocket
    part is the following:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript 代码定义在文件`frauddetection.js`中。WebSocket 部分如下：
- en: '[PRE30]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: When a new signal is emited from the server in python, the javascript code receives
    it and processes it. It creates a new variable called `newLocation` containing
    the location information, that is going to be saved in a global array called `mapLocations`.
    This variable contains all the fradulent locations that appeared since the session
    started. Then there is a clearing process for amCharts to be able to draw the
    new information in the map and finally the array is stored in `map.dataProvider.images`,
    which actually refresh the map with the new point. The variable `map` is set earlier
    in the code and it is the amCharts object responsible for defining the map.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 当服务器在 Python 中发出新的信号时，JavaScript 代码会接收并处理它。它创建了一个名为`newLocation`的新变量，包含要保存到名为`mapLocations`的全局数组中的位置信息。这个变量包含了自会话开始以来出现的所有欺诈位置。接下来，进行一个清理过程，以便
    amCharts 能够在地图上绘制新信息，最后将数组存储在`map.dataProvider.images`中，这实际上是用新点刷新地图。变量`map`在代码中较早定义，它是负责定义地图的
    amCharts 对象。
- en: 'To make a query to the visualization end point:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 要向可视化端点发起查询：
- en: '[PRE31]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Now you can go the map url (in local it would be http://localhost:5000/map)
    and see how the map is reshesed with a new fraudulent location every time you
    execute the previous cell. You should see a map like the following one:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以访问地图 URL（在本地是 http://localhost:5000/map），查看每次执行前一个单元格时地图如何更新为新的欺诈位置。你应该会看到类似下面的地图：
- en: '![](../Images/e4766c0703951537c3484955db166ee2.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e4766c0703951537c3484955db166ee2.png)'
- en: Load test
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 负载测试
- en: Once we have the API, we can test its scalability and response time.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们拥有了 API，我们就可以测试它的可扩展性和响应时间。
- en: Here you can find a simple load test to evaluate the performance of your API.
    Please bear in mind that, in this case, there is no request overhead due to the
    different locations of client and server, since the client and server are the
    same computer.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这里你可以找到一个简单的负载测试来评估你的 API 性能。请记住，在这种情况下，由于客户端和服务器位于同一台计算机上，因此没有请求开销。
- en: The response time of 10 requests is around 300ms, so one request would be 30ms.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 10 个请求的响应时间大约为 300 毫秒，因此一个请求的响应时间为 30 毫秒。
- en: '[PRE33]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Enterprise grade reference architecture for fraud detection
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 企业级欺诈检测参考架构
- en: In this tutorial we have seen how to create a baseline fraud detection model.
    However, for a big company this is not enough.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们已经看到如何创建一个基线欺诈检测模型。然而，对于大公司来说，这还不够。
- en: In the next figure we can see a reference architecture for fraud detection,
    that should be adapted to the customer specifics. All services are based on Azure.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，我们可以看到一个欺诈检测的参考架构，这个架构应根据客户的具体情况进行调整。所有服务都基于 Azure。
- en: '1) Two general data sources for the customer: real time data and static information.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 1) 客户的两个主要数据源：实时数据和静态信息。
- en: 2) A general database piece to store the data. Since it is a reference architecture,
    and without more data, I put several options together ([SQL Database](https://azure.microsoft.com/en-gb/services/sql-database/), [CosmosDB](https://azure.microsoft.com/en-gb/services/cosmos-db/), [SQL
    Data Warehouse](https://azure.microsoft.com/en-gb/services/sql-data-warehouse/),
    etc) on cloud or on premise.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: 3) Model experimentation using [Azure ML](https://azure.microsoft.com/en-gb/overview/machine-learning/),
    again, using general computation targets such as [DSVM](https://azure.microsoft.com/en-gb/services/virtual-machines/data-science-virtual-machines/), [BatchAI](https://azure.microsoft.com/en-gb/services/batch-ai/), [Databricks](https://azure.microsoft.com/en-gb/services/databricks/) or [HDInsight](https://azure.microsoft.com/en-gb/services/hdinsight/).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: 4) Model retraining using new data and a model obtained from the [Model Management](https://docs.microsoft.com/en-gb/azure/machine-learning/desktop-workbench/model-management-overview).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: 5) Operationalization layer with a [Kubernetes cluster](https://azure.microsoft.com/en-gb/services/container-service/kubernetes/),
    which takes the best model and put it in production.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: 6) Reporting layer to show the results.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e9a4672215422ba64b766a7a91cb2cd4.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
- en: '[Original](https://github.com/miguelgfierro/sciblog_support/blob/master/Intro_to_Fraud_Detection/fraud_detection.ipynb).
    Reposted with permission.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: '[Using GRAKN.AI to Detect Patterns in Credit Fraud Data](https://www.kdnuggets.com/2017/08/grakn-ai-detect-patterns-credit-fraud-data.html)'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[AI for Fraud Detection – How does Mastercard do it? Learn how global leaders
    use AI](https://www.kdnuggets.com/2018/07/rework-ai-fraud-detection-mastercard-global-leaders.html)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Intuitive Ensemble Learning Guide with Gradient Boosting](https://www.kdnuggets.com/2018/07/intuitive-ensemble-learning-guide-gradient-boosting.html)'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[How Data Science Fuels Fraud Prevention](https://www.kdnuggets.com/2022/09/data-science-fuels-fraud-prevention.html)'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Fighting AI with AI Fraud Monitoring for Deepfake Applications](https://www.kdnuggets.com/2023/05/fighting-ai-ai-fraud-monitoring-deepfake-applications.html)'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Uncertainty Quantification in Artificial Intelligence-based Systems](https://www.kdnuggets.com/2022/04/uncertainty-quantification-artificial-intelligencebased-systems.html)'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Ten Key Lessons of Implementing Recommendation Systems in Business](https://www.kdnuggets.com/2022/07/ten-key-lessons-implementing-recommendation-systems-business.html)'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chip Huyen shares frameworks and case studies for implementing ML systems](https://www.kdnuggets.com/2023/02/sphere-chip-huyen-shares-frameworks-case-studies-implementing-ml-systems.html)'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[OLAP vs. OLTP: A Comparative Analysis of Data Processing Systems](https://www.kdnuggets.com/2023/08/olap-oltp-comparative-analysis-data-processing-systems.html)'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
