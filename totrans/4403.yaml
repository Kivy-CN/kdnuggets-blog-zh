- en: Geographical Plots with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/09/geographical-plots-python.html](https://www.kdnuggets.com/2020/09/geographical-plots-python.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Ahmad Bin Shafiq](https://medium.com/@ahmadbinshafiq), Machine Learning
    Student**.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9646078e14e33c48415a6e604b7f5aea.png)'
  prefs: []
  type: TYPE_IMG
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Plotly
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Plotly is a famous library used for creating interactive plotting and dashboards
    in Python. Plotly is also a [company](https://plot.ly/), that allows us to host
    both online and offline data visualisatoins.*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In this article, we will be using offline plotly to visually represent data
    in the form of different geographical maps.
  prefs: []
  type: TYPE_NORMAL
- en: '**Installing Plotly**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Run both commands in the command prompt to install **plotly** and **cufflinks **and
    all of their packages on our local machine.
  prefs: []
  type: TYPE_NORMAL
- en: '**Choropleth Map**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Choropleth maps are popular thematic maps used to represent statistical data
    through various shading patterns or symbols on predetermined geographic areas
    (i.e., countries). They are good at utilizing data to easily represent the variability
    of the desired measurement across a region.*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**How does a Choropleth map works?**'
  prefs: []
  type: TYPE_NORMAL
- en: Choropleth Maps display divided geographical areas or regions that are colored,
    shaded, or patterned in relation to a data variable. This provides a way to visualize
    values over a geographical area, which can show variation or patterns across the
    displayed location.
  prefs: []
  type: TYPE_NORMAL
- en: '**Using Choropleth with Python**'
  prefs: []
  type: TYPE_NORMAL
- en: Here, we will be using a [dataset](https://github.com/ahmadbinshafiq/Geographical-Plotting---Python/blob/master/2014_World_Power_Consumption) of
    power consumption of different countries throughout the world in 2014.
  prefs: []
  type: TYPE_NORMAL
- en: Okay, so let’s get started.
  prefs: []
  type: TYPE_NORMAL
- en: '**Importing libraries**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Here, *init_notebook_mode(connected=True)* connects Javascript to our notebook.
  prefs: []
  type: TYPE_NORMAL
- en: '**Creating/Interpreting our DataFrame**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/4a83bbda4e0d205b80ee878ef6f5d481.png)'
  prefs: []
  type: TYPE_IMG
- en: Here we have 3 columns, and all of them have 219 non-null entries.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/6a8becf960ebf21cd85ccf78a2bb7038.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Compiling our data into dictionaries**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '*type = ’choropleth''*: defines the type of the map, i.e., choropleth in this
    case.'
  prefs: []
  type: TYPE_NORMAL
- en: '*colorscale = ‘Viridis''*: displays a color map (f*or more color scales, refer *[*here*](https://plotly.com/python/builtin-colorscales/)*).*'
  prefs: []
  type: TYPE_NORMAL
- en: '*locations = df[''Country'']*: add a list of all countries.'
  prefs: []
  type: TYPE_NORMAL
- en: '*locationmode = ''country names’*: as we have country names in our dataset,
    so we set location mode to ‘country names’.'
  prefs: []
  type: TYPE_NORMAL
- en: '*z*: list of integer values that display the power consumption of each state.'
  prefs: []
  type: TYPE_NORMAL
- en: '*text = df[''Country'']*: displays a text when hovering over the map for each
    state element. In this case, it is the name of the country itself.'
  prefs: []
  type: TYPE_NORMAL
- en: '*colorbar = {‘title’ : ‘Power Consumption KWH’}*: a dictionary that contains
    information about the right sidebar. Here, colorbar contains the title of the
    sidebar.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '*layout**—* a Geo object that can be used to control the appearance of the
    base **map** onto which data is plotted.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: It is a nested dictionary that contains all the relevant information about how
    our map/plot should look like.
  prefs: []
  type: TYPE_NORMAL
- en: '**Generating our plot/map**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/4215236de87a5b1006d2b666b68a0bb8.png)'
  prefs: []
  type: TYPE_IMG
- en: Cool! Our choropleth map for the ‘2014 World Power Consumption’ has been generated,
    and from the above, we can see that each country displays its name and its power
    consumption in kWh when hovering over each element on the map. The more concentrated
    the data is in one particular area, the deeper the shade of color on the map.
    Here ‘China’ has the largest power consumption, and so its color is deepest.
  prefs: []
  type: TYPE_NORMAL
- en: Density Maps
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Density mapping is simply a way to show where points or lines may be concentrated
    in a given area.
  prefs: []
  type: TYPE_NORMAL
- en: '**Using Density Maps with Python**'
  prefs: []
  type: TYPE_NORMAL
- en: Here, we will be using a worldwide [dataset](https://raw.githubusercontent.com/plotly/datasets/master/earthquakes-23k.csv) of
    earthquakes and their magnitudes.
  prefs: []
  type: TYPE_NORMAL
- en: Okay, so let’s get started.
  prefs: []
  type: TYPE_NORMAL
- en: '**Importing libraries**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '**Creating/Interpreting our DataFrame**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/05951d086205cab8f46f61f4d4c5d53b.png)'
  prefs: []
  type: TYPE_IMG
- en: Here, we have 4 columns, and all of them have 23412 non-null entries.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/1eba9f29d49877c7c73b4bf55af82940.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Plotting our data**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '*lat=''Latitude''*: takes in the Latitude column of our data frame.'
  prefs: []
  type: TYPE_NORMAL
- en: '*lon=''Longitude''*: takes in the Longitude column of our data frame.'
  prefs: []
  type: TYPE_NORMAL
- en: '*z*: list of integer values that display the magnitude of the earthquake.'
  prefs: []
  type: TYPE_NORMAL
- en: '*radius=10*: sets the radius of influence of each point.'
  prefs: []
  type: TYPE_NORMAL
- en: '*center=dict(lat=0, lon=180)*: sets the center point of the map in a dictionary.'
  prefs: []
  type: TYPE_NORMAL
- en: '*zoom=0*: sets map zoom level.'
  prefs: []
  type: TYPE_NORMAL
- en: '*mapbox_style=''stamen-terrain''*: sets the base map style. Here, "stamen-terrain"
    is the base map style.'
  prefs: []
  type: TYPE_NORMAL
- en: '*fig.show()*: displays the map.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Map**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/076620345231f9a19e02701dc5821569.png)'
  prefs: []
  type: TYPE_IMG
- en: Great! Our Density map for the ‘Earthquakes and their magnitudes’ has been generated,
    and from the above, we can see that it covers all the territories that suffered
    from the earthquake, and also shows the magnitude of the earthquake of every region
    when we **hover **over it.
  prefs: []
  type: TYPE_NORMAL
- en: Geographical plotting using plotly can be a bit challenging sometimes due to
    its various formats of data, so please refer to this [cheat sheet](https://images.plot.ly/plotly-documentation/images/python_cheat_sheet.pdf) for
    all types of syntaxes of plotly plots.
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Exploring the Impact of Geographic Information Systems](https://www.kdnuggets.com/2020/04/impact-geographic-information-systems.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top 10 Data Visualization Tools for Every Data Scientist](https://www.kdnuggets.com/2020/05/top-10-data-visualization-tools-every-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Techniques to Visualize Geospatial Data](https://www.kdnuggets.com/2017/10/7-techniques-visualize-geospatial-data.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
