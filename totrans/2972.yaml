- en: Artificial Neural Networks Optimization using Genetic Algorithm with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/03/artificial-neural-networks-optimization-genetic-algorithm-python.html/2](https://www.kdnuggets.com/2019/03/artificial-neural-networks-optimization-genetic-algorithm-python.html/2)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](/2019/03/artificial-neural-networks-optimization-genetic-algorithm-python.html?page=2#comments)'
  prefs: []
  type: TYPE_IMG
- en: Complete Python Implementation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The Python implementation for such project has three Python files:'
  prefs: []
  type: TYPE_NORMAL
- en: '**GA.py** for implementing GA functions.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**ANN.py** for implementing ANN functions.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Third file for calling such functions through a number of generations. This
    is the main file of the project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Main Project File Implementation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: The third file is the main file because it connects all functions. It reads
    the features and the class labels files, filters features based on the standard
    deviation, creates the ANN architecture, generates the initial solutions, loops
    through a number of generations by calculating the fitness values for all solutions,
    selecting best parents, applying crossover and mutation, and finally creating
    the new population. Its implementation is given below. Such a file defines the
    GA parameters such as a number of solutions per population, number of selected
    parents, mutation percent, and number of generations. You can try different values
    for them.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Based on 1,000 generations, a plot is created at the end of this file using
    **Matplotlib** visualization library that shows how the accuracy changes across
    each generation. It is shown in the next figure.
  prefs: []
  type: TYPE_NORMAL
- en: '![genetic-algorithm-accuracy](../Images/64fe9af88fc4f028af9430b41dc84444.png)'
  prefs: []
  type: TYPE_IMG
- en: After 1,000 iterations, the accuracy is more than 97%. This is compared to 45%
    without using an optimization technique as in the previous tutorial. This is an
    evidence about why results might be bad not because there is something wrong in
    the model or the data but because no optimization technique is used. Of course,
    using different values for the parameters such as 10,000 generations might increase
    the accuracy. At the end of this file, it saves the parameters in matrix form
    to the disk for use later.
  prefs: []
  type: TYPE_NORMAL
- en: GA.py Implementation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The **GA.py** file implementation is in listed below. Note that the **mutation()**
    function accepts the **mutation_percent** parameter that defines the number of
    genes to change their values randomly. It is set to 10% in the main file. Such
    a file holds the 2 new functions **mat_to_vector()** and **vector_to_mat()**.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: ANN.py Implementation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Finally, the **ANN.py** is implemented according to the code listed below. It
    contains the implementation of the activation functions (sigmoid and ReLU) in
    addition to the **fitness()** and **predict_outputs()** functions to calculate
    the accuracy.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: For Contacting the Author
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'E-mail: [ahmed.f.gad@gmail.com](https://mailto:ahmed.f.gad@gmail.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'LinkedIn: [https://linkedin.com/in/ahmedfgad/](https://linkedin.com/in/ahmedfgad/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'KDnuggets: [https://www.kdnuggets.com/author/ahmed-gad](https://www.kdnuggets.com/author/ahmed-gad)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'YouTube: [https://youtube.com/AhmedGadFCIT](https://youtube.com/AhmedGadFCIT)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'TowardsDataScience: [https://towardsdatascience.com/@ahmedfgad](https://towardsdatascience.com/@ahmedfgad)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'GitHub: [https://github.com/ahmedfgad](https://github.com/ahmedfgad)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Original](https://www.linkedin.com/pulse/artificial-neural-networks-optimization-using-genetic-ahmed-gad/).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Ahmed Gad](https://www.linkedin.com/in/ahmedfgad/)** received his B.Sc.
    degree with excellent with honors in information technology from the Faculty of
    Computers and Information (FCI), Menoufia University, Egypt, in July 2015\. For
    being ranked first in his faculty, he was recommended to work as a teaching assistant
    in one of the Egyptian institutes in 2015 and then in 2016 to work as a teaching
    assistant and a researcher in his faculty. His current research interests include
    deep learning, machine learning, artificial intelligence, digital signal processing,
    and computer vision.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Artificial Neural Network Implementation using NumPy and Image Classification](/2019/02/artificial-neural-network-implementation-using-numpy-and-image-classification.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Genetic Algorithm Implementation in Python](/2018/07/genetic-algorithm-implementation-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Is Learning Rate Useful in Artificial Neural Networks?](/2018/01/learning-rate-useful-neural-network.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Write Clean Python Code Using Pipes](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Building a solid data team](https://www.kdnuggets.com/2021/12/build-solid-data-team.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
