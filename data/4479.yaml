- en: 'Text Mining in Python: Steps and Examples'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python中的文本挖掘：步骤和示例
- en: 原文：[https://www.kdnuggets.com/2020/05/text-mining-python-steps-examples.html](https://www.kdnuggets.com/2020/05/text-mining-python-steps-examples.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/05/text-mining-python-steps-examples.html](https://www.kdnuggets.com/2020/05/text-mining-python-steps-examples.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Dhilip Subramanian](https://medium.com/@sdhilip), Data Scientist and
    AI Enthusiast**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者：[Dhilip Subramanian](https://medium.com/@sdhilip)，数据科学家和人工智能爱好者**'
- en: '![Header image](../Images/c3cf17396251256b2cdd50b7e755ab3e.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![Header image](../Images/c3cf17396251256b2cdd50b7e755ab3e.png)'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织在IT方面'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: In today’s scenario, one way of people’s success identified by how they are
    communicating and sharing information to others. That’s where the concepts of
    language come into picture. However, there are many languages in the world. Each
    has many standards and alphabets, and the combination of these words arranged
    meaningfully resulted in the formation of a sentence. Each language has its own
    rules while developing these sentences and these set of rules are also known as
    grammar.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在今天的场景中，人们的成功方式之一是通过他们如何与他人沟通和分享信息来确定的。这就是语言概念发挥作用的地方。然而，世界上有许多语言，每种语言都有不同的标准和字母，这些单词有意义地排列组合形成句子。每种语言在构建这些句子时都有自己的规则，这些规则也称为语法。
- en: '![](../Images/c5f6849132542f8ff523affcaf749f20.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c5f6849132542f8ff523affcaf749f20.png)'
- en: In today’s world, according to the industry estimates, only 20 percent of the
    data is being generated in the structured format as we speak, as we tweet, as
    we send messages on WhatsApp, Email, Facebook, Instagram or any text messages.
    And, the majority of this data exists in the textual form which is a highly unstructured
    format. In order to produce meaningful insights from the text data then we need
    to follow a method called Text Analysis.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在当今世界，根据行业估算，只有20%的数据是以结构化格式生成的，无论是我们发推文、发送WhatsApp消息、电子邮件、Facebook、Instagram还是任何文本消息。大多数数据存在于文本形式中，这是一种高度非结构化的格式。为了从文本数据中提取有意义的见解，我们需要遵循一种叫做文本分析的方法。
- en: What is Text Mining?
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 什么是文本挖掘？
- en: '**Text Mining is the process of deriving meaningful information from natural
    language text.**'
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**文本挖掘是从自然语言文本中提取有意义信息的过程。**'
- en: '![](../Images/e9b57d93f95c884eb9b1ee9923b3b2ed.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e9b57d93f95c884eb9b1ee9923b3b2ed.png)'
- en: '**What is NLP?**'
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**什么是自然语言处理（NLP）？**'
- en: '**Natural Language Processing(NLP) is a part of computer science and artificial
    intelligence which deals with human languages.**'
  id: totrans-18
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**自然语言处理（NLP）是计算机科学和人工智能的一部分，处理人类语言。**'
- en: 'In other words, NLP is a component of text mining that performs a special kind
    of linguistic analysis that essentially **helps a machine “read” text**. It uses
    a different methodology to** decipher the ambiguities in human language**, including
    the following: automatic summarization, part-of-speech tagging, disambiguation,
    chunking, as well as disambiguation and natural language understanding and recognition.
    We will see all the processes in a step by step manner using Python.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，NLP是文本挖掘的一个组成部分，执行一种特殊的语言分析，**帮助机器“阅读”文本**。它使用不同的方法来**解码人类语言中的模糊性**，包括以下内容：自动摘要、词性标注、消歧义、分块以及消歧义和自然语言理解与识别。我们将通过Python逐步了解所有这些过程。
- en: '![](../Images/74d22d2e6faa0c42f09efa9b50e4cff2.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/74d22d2e6faa0c42f09efa9b50e4cff2.png)'
- en: First, we need to install the NLTK library that is the natural language toolkit
    for building Python programs to work with human language data and it also provides
    easy to use interface.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要安装NLTK库，它是一个自然语言工具包，用于构建Python程序以处理人类语言数据，并提供易于使用的接口。
- en: Terminologies in NLP
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自然语言处理术语
- en: Tokenization
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分词
- en: Tokenization is the first step in NLP. It is the process of breaking strings
    into tokens which in turn are small structures or units. Tokenization involves
    three steps which are breaking a complex sentence into words, understanding the
    importance of each word with respect to the sentence and finally produce structural
    description on an input sentence.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 分词是自然语言处理中的第一步。它是将字符串分解成标记的过程，而标记又是较小的结构或单元。分词涉及三个步骤：将复杂句子拆分为单词，理解每个单词在句子中的重要性，最后对输入句子生成结构描述。
- en: '**Code:**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码：**'
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Output**'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: From the above output, we can see the text split into tokens. Words, comma,
    punctuations are called tokens.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 从上述输出可以看出，文本被拆分成了标记。单词、逗号、标点符号都被称为标记。
- en: Finding frequency distinct in the text
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在文本中查找频率差异
- en: '**Code 1**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码 1**'
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Output**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: ‘the’ is found 3 times in the text, ‘Brazil’ is found 2 times in the text, etc.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: ‘the’在文本中出现了3次，‘Brazil’出现了2次，等等。
- en: '**Code 2**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码 2**'
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Output**'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Stemming
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 词干提取
- en: Stemming usually refers to normalizing words into its base form or root form.
  id: totrans-41
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 词干提取通常指将单词规范化为其基本形式或根形式。
- en: '![](../Images/e754c6c3775f95075828815ef3e9d82d.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e754c6c3775f95075828815ef3e9d82d.png)'
- en: Here, we have words waited, waiting and waits. Here the root word is ‘wait’. There
    are two methods in Stemming namely, Porter Stemming (removes common morphological
    and inflectional endings from words) and Lancaster Stemming (a more aggressive
    stemming algorithm).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有单词waited、waiting和waits。根词是‘wait’。词干提取有两种方法，即Porter词干提取（去除单词的常见形态和屈折结尾）和Lancaster词干提取（更激进的词干提取算法）。
- en: '**Code 1**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码 1**'
- en: '[PRE6]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Output**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**Code 2**'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码 2**'
- en: '[PRE8]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**Output**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE9]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Code 3**'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码 3**'
- en: '[PRE10]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '**Output**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE11]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Lancaster is more aggressive than Porter stemmer
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Lancaster比Porter词干提取器更激进
- en: Lemmatization
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 词形还原
- en: '![](../Images/d690d47d94309e2d45e733a64aa0cea6.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d690d47d94309e2d45e733a64aa0cea6.png)'
- en: In simpler terms, it is the process of converting a word to its base form. The
    difference between stemming and lemmatization is, lemmatization considers the
    context and converts the word to its meaningful base form, whereas stemming just
    removes the last few characters, often leading to incorrect meanings and spelling
    errors.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 简单来说，这是一种将单词转换为其基本形式的过程。词干提取和词形还原的区别在于，词形还原考虑上下文，将单词转换为其有意义的基本形式，而词干提取只是去掉最后几个字符，通常导致错误的含义和拼写错误。
- en: For example, lemmatization would correctly identify the base form of ‘caring’
    to ‘care’, whereas, stemming would cutoff the ‘ing’ part and convert it to car.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，词形还原会正确地将‘caring’的基本形式识别为‘care’，而词干提取则会去掉‘ing’部分，将其转换为car。
- en: Lemmatization can be implemented in python by using Wordnet Lemmatizer, Spacy
    Lemmatizer, TextBlob, Stanford CoreNLP
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 词形还原可以通过使用Wordnet Lemmatizer、Spacy Lemmatizer、TextBlob、Stanford CoreNLP在Python中实现。
- en: '**Code**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码**'
- en: '[PRE12]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '**Output**'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE13]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Stop Words
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 停用词
- en: “Stop words” are the most common words in a language like “the”, “a”, “at”,
    “for”, “above”, “on”, “is”, “all”. These words do not provide any meaning and
    are usually removed from texts. We can remove these stop words using nltk library
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: “停用词”是语言中最常见的词汇，如“the”、“a”、“at”、“for”、“above”、“on”、“is”、“all”。这些词没有提供任何实际意义，通常会从文本中删除。我们可以使用nltk库来删除这些停用词。
- en: '**Code**'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码**'
- en: '[PRE14]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '**Output**'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE15]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Part of speech tagging (POS)
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 词性标注（POS）
- en: '![](../Images/7bc7db51d2c88556da7a5d29f2c05ef8.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7bc7db51d2c88556da7a5d29f2c05ef8.png)'
- en: Part-of-speech tagging is used to assign parts of speech to each word of a given
    text (such as nouns, verbs, pronouns, adverbs, conjunction, adjectives, interjection)
    based on its definition and its context. There are many tools available for POS
    taggers and some of the widely used taggers are NLTK, Spacy, TextBlob, Standford
    CoreNLP, etc.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 词性标注用于为给定文本中的每个单词分配词性（如名词、动词、代词、副词、连词、形容词、感叹词），根据其定义和上下文。有许多可用的POS标注工具，其中一些广泛使用的标注工具有NLTK、Spacy、TextBlob、Standford
    CoreNLP等。
- en: '**Code**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码**'
- en: '[PRE16]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '**Output**'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE17]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Named entity recognition
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 命名实体识别
- en: It is the process of detecting the named entities such as the person name, the
    location name, the company name, the quantities and the monetary value.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这是检测命名实体的过程，如人名、地点名、公司名、数量和货币值。
- en: '![Figure](../Images/c4655974cf144518f570af57ebcd0416.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/c4655974cf144518f570af57ebcd0416.png)'
- en: Ref: [Sujit Pal](https://www.slideshare.net/sujitpal/soda-v2-named-entity-recognition-from-streaming-test-106598233)
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 参考：[Sujit Pal](https://www.slideshare.net/sujitpal/soda-v2-named-entity-recognition-from-streaming-test-106598233)
- en: '**Code**'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码**'
- en: '[PRE18]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '**Output**'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE19]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Chunking
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 词组分析
- en: Chunking means picking up individual pieces of information and grouping them
    into bigger pieces. In the context of NLP and text mining, chunking means a grouping
    of words or tokens into chunks.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 词块化是指提取单独的信息片段并将其分组为更大的块。在自然语言处理（NLP）和文本挖掘的背景下，词块化是将词语或标记分组为块。
- en: '![Figure](../Images/bafbf88d5ed750b51f406187fe96c82b.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/bafbf88d5ed750b51f406187fe96c82b.png)'
- en: ref: [nltk.org](https://www.nltk.org/book/ch07.html)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '参考: [nltk.org](https://www.nltk.org/book/ch07.html)'
- en: '**Code**'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码**'
- en: '[PRE20]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '**Output**'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE21]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: This blog summarizes text preprocessing and covers the NLTK steps including
    Tokenization, Stemming, Lemmatization, POS tagging, Named entity recognition and
    Chunking.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 本博客总结了文本预处理，并涵盖了包括分词、词干提取、词形还原、词性标注、命名实体识别和词块化在内的NLTK步骤。
- en: Thanks for reading. Keep learning and stay tuned for more!
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读。继续学习，敬请关注更多内容！
- en: 'Reference:'
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参考：
- en: '[https://www.expertsystem.com/natural-language-processing-and-text-mining/](https://www.expertsystem.com/natural-language-processing-and-text-mining/)'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://www.expertsystem.com/natural-language-processing-and-text-mining/](https://www.expertsystem.com/natural-language-processing-and-text-mining/)'
- en: '[https://www.nltk.org](https://www.nltk.org/)'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://www.nltk.org](https://www.nltk.org/)'
- en: '[https://www.edureka.co](https://www.geeksforgeeks.org/nlp-chunk-tree-to-text-and-chaining-chunk-transformation/)'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://www.edureka.co](https://www.geeksforgeeks.org/nlp-chunk-tree-to-text-and-chaining-chunk-transformation/)'
- en: '[https://www.geeksforgeeks.org/nlp-chunk-tree-to-text-and-chaining-chunk-transformation/](https://www.geeksforgeeks.org/nlp-chunk-tree-to-text-and-chaining-chunk-transformation/)'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://www.geeksforgeeks.org/nlp-chunk-tree-to-text-and-chaining-chunk-transformation/](https://www.geeksforgeeks.org/nlp-chunk-tree-to-text-and-chaining-chunk-transformation/)'
- en: '[https://www.geeksforgeeks.org/part-speech-tagging-stop-words-using-nltk-python/](https://www.learntek.org/blog/categorizing-pos-tagging-nltk-python/)'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://www.geeksforgeeks.org/part-speech-tagging-stop-words-using-nltk-python/](https://www.learntek.org/blog/categorizing-pos-tagging-nltk-python/)'
- en: '**Bio: [Dhilip Subramanian](https://medium.com/@sdhilip)** is a Mechanical
    Engineer and has completed his Master''s in Analytics. He has 9 years of experience
    with specialization in various domains related to data including IT, marketing,
    banking, power, and manufacturing. He is passionate about NLP and machine learning.
    He is a contributor to the [SAS community](https://communities.sas.com/t5/user/viewprofilepage/user-id/271305)
    and loves to write technical articles on various aspects of data science on the
    Medium platform.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介: [Dhilip Subramanian](https://medium.com/@sdhilip)** 是一名机械工程师，已获得分析学硕士学位。他拥有9年的数据相关领域经验，专注于IT、市场营销、银行、电力和制造业。他对自然语言处理（NLP）和机器学习充满热情。他是[SAS社区](https://communities.sas.com/t5/user/viewprofilepage/user-id/271305)的贡献者，并在Medium平台上撰写有关数据科学各个方面的技术文章。'
- en: '[Original](https://medium.com/towards-artificial-intelligence/text-mining-in-python-steps-and-examples-78b3f8fd913b).
    Reposted with permission.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://medium.com/towards-artificial-intelligence/text-mining-in-python-steps-and-examples-78b3f8fd913b)。经许可转载。'
- en: '**Related:**'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Tokenization and Text Data Preparation with TensorFlow & Keras](/2020/03/tensorflow-keras-tokenization-text-data-prep.html)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用TensorFlow和Keras进行分词和文本数据准备](/2020/03/tensorflow-keras-tokenization-text-data-prep.html)'
- en: '[Five Cool Python Libraries for Data Science](/2020/04/five-cool-python-libraries-data-science.html)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[五款酷炫的Python数据科学库](/2020/04/five-cool-python-libraries-data-science.html)'
- en: '[Natural Language Processing Recipes: Best Practices and Examples](/2020/05/natural-language-processing-recipes-best-practices-examples.html)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[自然语言处理食谱：最佳实践和示例](/2020/05/natural-language-processing-recipes-best-practices-examples.html)'
- en: More On This Topic
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[SQL LIKE Operator Examples](https://www.kdnuggets.com/2022/09/sql-like-operator-examples.html)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQL LIKE 操作符示例](https://www.kdnuggets.com/2022/09/sql-like-operator-examples.html)'
- en: '[Ensemble Learning with Examples](https://www.kdnuggets.com/2022/10/ensemble-learning-examples.html)'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[示例的集成学习](https://www.kdnuggets.com/2022/10/ensemble-learning-examples.html)'
- en: '[Picking Examples to Understand Machine Learning Model](https://www.kdnuggets.com/2022/11/picking-examples-understand-machine-learning-model.html)'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[选择示例以理解机器学习模型](https://www.kdnuggets.com/2022/11/picking-examples-understand-machine-learning-model.html)'
- en: '[Between Dreams and Reality: Generative Text and Hallucinations](https://www.kdnuggets.com/between-dreams-and-reality-generative-text-and-hallucinations)'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[梦想与现实之间：生成文本与幻觉](https://www.kdnuggets.com/between-dreams-and-reality-generative-text-and-hallucinations)'
- en: '[Build a Text-to-Speech Converter with Python in 5 Minutes](https://www.kdnuggets.com/2022/09/build-texttospeech-converter-python-5-minutes.html)'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用Python在5分钟内构建一个文本转语音转换器](https://www.kdnuggets.com/2022/09/build-texttospeech-converter-python-5-minutes.html)'
- en: '[Text Summarization Development: A Python Tutorial with GPT-3.5](https://www.kdnuggets.com/2023/04/text-summarization-development-python-tutorial-gpt35.html)'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[文本总结开发：使用 GPT-3.5 的 Python 教程](https://www.kdnuggets.com/2023/04/text-summarization-development-python-tutorial-gpt35.html)'
