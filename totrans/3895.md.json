["```py\nIn [1]: results = [[10,8,7],[5,4,3],[8,6,9]]\n\nIn [2]: results = pd.DataFrame(results, columns=['Maths','English','Science'])\n\n```", "```py\nIn [5]: results\n\nOut[5]:\n   Maths  English  Science\n0     10        8        7\n1      5        4        3\n2      8        6        9\n\n```", "```py\nIn [7]: maxlist = []\n\nIn [8]: for i in results:\n   ...:     maxlist.append(max(results[i]))\n\n```", "```py\nIn [9]: maxlist\n\nOut[9]: [10, 8, 9]\n\n```", "```py\n[varname for varname in iterableName]\n\n```", "```py\nIn [27]:maxlist = [max(results[i]) for i in results]\n\n```", "```py\nOut[27]: [10, 8, 9]\n\n```", "```py\nnewlist = [whatYouwantToAppend for anything in anyIterable]\n\n```", "```py\n[max(results[i]) for i in results]\n\n```", "```py\n{key, value for key, value in anyIterable}\n\n```", "```py\ndf = \n{0: 'A',\n 1: 'B',\n 2: 'C',\n 3: 'D',\n 4: 'E',\n 5: 'F',\n 6: 'G',\n 7: 'H',\n 8: 'I',\n 9: 'J',\n 10: 'K',\n 11: 'L',\n 12: 'M',\n 13: 'N',\n 14: 'O',\n 15: 'P',\n 16: 'Q',\n 17: 'R',\n 18: 'S',\n 19: 'T',\n 20: 'U',\n 21: 'V',\n 22: 'W',\n 23: 'X',\n 24: 'Y',\n 25: 'Z'}\n\n```", "```py\n{number: alphabet for alphabet , number in df.items()}\n\n```", "```py\nz = lambda functionArgument1 : functionArgument1 + 1\n\n```", "```py\nz(5)\n>>>6\n\n```", "```py\ndf = pd.DataFrame([\n    'Braud, Mr. Owen Harris',\n    'Cumings, Mrs. John Bradley',\n    'Heikkeinen, Miss. Laina',\n    'Futrelle, Mrs. Jacques Heath',\n    'Allen, Mr. William Henry',\n    'Moran, Mr. James'\n])\n\n```", "```py\ndf['Title'] = df[0].apply(lambda a: a[a.find(',')+2: a.find('.')])\n\n```", "```py\ndef isEven(anyInteger):\n   return anyInteger % 2 == 0\n\n```", "```py\nmyList = [0, 5, 10, 15, 20, 25, 30]\n\n```", "```py\n# Traditional approach\nisEvenList = []\nfor i in myList:\n    isEvenList.append(isEven(i))\n\n```", "```py\nisEvenList = list(map(isEven, myList))\n\n```", "```py\nlist/dict/tuple(map(myFunction, myIterable))\n\n```"]