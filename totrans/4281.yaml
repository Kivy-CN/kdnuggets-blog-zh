- en: How To Generate Meaningful Sentences Using a T5 Transformer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2021/05/generate-meaningful-sentences-t5-transformer.html](https://www.kdnuggets.com/2021/05/generate-meaningful-sentences-t5-transformer.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Vatsal Saglani](https://www.linkedin.com/in/vatsalsaglani), Machine Learning
    Engineer at Quinnox**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ebd7ecb3538f515a84f574de22bf1de9.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Tech Daily](https://unsplash.com/@techdailyca?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/streaming?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
    ([Tech Daily](https://techdaily.ca/))
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: In the blog, [**Generating storylines using a T5 Transformer**](https://pub.towardsai.net/generating-cool-storylines-using-a-t5-transformer-and-having-fun-4a79f6ab8adb) we
    saw how we can fine-tune a Sequence2Sequence (Text-To-Text) Transformer (T5) to
    generate storylines/plots by providing inputs like genre, director, cast, and
    ethnicity. In this blog, we will check out how we can use that trained T5 Model
    for inference. Later, we will also see how can we deploy it using `gunicorn` and `flask`.
  prefs: []
  type: TYPE_NORMAL
- en: How to do Model Inference?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Let’s set up the script with the imports*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '*Set the *`*SEED*`* value and load the model and tokenizer*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '*Use the *`*model.generate*`* function to generate sequences*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '*Note: Read *[*this*](https://huggingface.co/blog/how-to-generate)* amazing
    Hugging Face blog regarding how you to use different decoding strategies for Text
    Generation using Transformers*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Let’s put this in a function*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: How to deploy this with Flask?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There are multiple ways a user can provide the inputs and the model might need
    to generate the plots. The user can provide only the genre, or they can provide
    genre and cast or they can even provide all the four i.e. genre, director, cast
    and ethnicity. But for the purpose of this implementation, I have kept it mandatory
    to provide a genre at the least.
  prefs: []
  type: TYPE_NORMAL
- en: You can check out the link below to see how the API will work.
  prefs: []
  type: TYPE_NORMAL
- en: '[**Movie Plot Generator**'
  prefs: []
  type: TYPE_NORMAL
- en: I generate vague movie plots on the web (but sometimes they are good). But I
    can assure you that it will always be…](https://movie-plot-generator.vercel.app/)
  prefs: []
  type: TYPE_NORMAL
- en: '*Let’s develop a backend to achieve the API call used for the link above*'
  prefs: []
  type: TYPE_NORMAL
- en: Install the requirements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Create an app.py file
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Imports*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '*Add an API route*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '*The main block to run the *`*flask*`* app*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '*This script won’t work yet. You might receive an ImportError when executing
    the script at this point as we haven’t yet created the *`*predict.py*`* script
    with the *`***PredictionModelObject***`'
  prefs: []
  type: TYPE_NORMAL
- en: Create the `PredictionModelObject`
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Create an *`*predict.py*`* file and import the following*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '*Create the *`*PredictionModelObject*`* class*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Save the `predict.py` file and then run the `app.py` file in debug mode using,
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Test your API
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Create a *`*test_api.py*`* file and execute*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: How to run with `gunicorn` ?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Using `gunicorn` with `flask` is very easy. While installing the requirements
    at the start we have installed the `gunicorn` command and now we need to go to
    the folder where the `app.py` file is located via. the terminal and run the following
    command
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: The format and flags we use above represent the following
  prefs: []
  type: TYPE_NORMAL
- en: '*k: kind (type of workers)- *`*gthread*`*, *`*gevent*`*, etc...*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*w: number of workers*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*t: timeout time*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*threads: number of threads per worker*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*b: bind port number*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*If your filename is *`*server.py*`* or *`*flask_app.py*`* the *`*app:app*`* part
    will change to *`*server:app*`* or *`*flask_app:app*`'
  prefs: []
  type: TYPE_NORMAL
- en: In Summary
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this blog, we saw how can we use our previously trained T5 transformer to
    generate storylines and deploy it using `flask` and `gunicorn`. This blog is made
    to be followed pretty easily so you don't waste time going around different platforms
    to check out the issues. Hope you have fun reading and implementing this.
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Vatsal Saglani](https://www.linkedin.com/in/vatsalsaglani)** ([@saglanivatsal](https://twitter.com/saglanivatsal))
    is a Machine Learning Engineer at Quinnox.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://pub.towardsai.net/how-to-generate-meaningful-sentences-using-a-t5-transformer-b755bee64882).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Hugging Face Transformers Package – What Is It and How To Use It](/2021/02/hugging-face-transformer-basics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Multilingual CLIP with Huggingface + PyTorch Lightning](/2021/03/multilingual-clip--huggingface-pytorch-lightning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[GPT-2 vs GPT-3: The OpenAI Showdown](/2021/02/gpt2-gpt3-openai-showdown.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[4 Ways to Generate Passive Income Using ChatGPT](https://www.kdnuggets.com/2023/03/4-ways-generate-passive-income-chatgpt.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Generate Music From Text Using Google MusicLM](https://www.kdnuggets.com/2023/06/generate-music-text-google-musiclm.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[3 Ways to Generate Hyper-Realistic Faces Using Stable Diffusion](https://www.kdnuggets.com/3-ways-to-generate-hyper-realistic-faces-using-stable-diffusion)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Generate Synthetic Tabular Dataset](https://www.kdnuggets.com/2022/03/generate-tabular-synthetic-dataset.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Generate Synthetic Time-series Data with Open-source Tools](https://www.kdnuggets.com/2022/06/generate-synthetic-timeseries-data-opensource-tools.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Combining Data Management and Data Storytelling to Generate Value](https://www.kdnuggets.com/combining-data-management-and-data-storytelling-to-generate-value)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
