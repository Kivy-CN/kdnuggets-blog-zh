- en: 'Python Enum: How To Build Enumerations in Python'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 枚举：如何在 Python 中构建枚举
- en: 原文：[https://www.kdnuggets.com/python-enum-how-to-build-enumerations-in-python](https://www.kdnuggets.com/python-enum-how-to-build-enumerations-in-python)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/python-enum-how-to-build-enumerations-in-python](https://www.kdnuggets.com/python-enum-how-to-build-enumerations-in-python)
- en: '![Python Enum: How To Build Enumerations in Python](../Images/3e65f6a3b6634eddfaab25f2aaf94ca5.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Python 枚举：如何在 Python 中构建枚举](../Images/3e65f6a3b6634eddfaab25f2aaf94ca5.png)'
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: If you’ve programmed in a language like C++ or Java, you’ve likely used enums
    to create named constants. Enums are helpful when you have a variable that takes
    one of a fixed number of values—often related such as the days of the week, student
    grades, order status, and the like.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用过像 C++ 或 Java 这样的编程语言，你可能已经使用了枚举来创建命名常量。当你有一个变量，它可以取一个固定数量的值时，枚举是很有用的——这些值通常是相关的，如一周中的天数、学生成绩、订单状态等。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业轨道。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Python, however, does not have an explicit enum data type. But you can use the
    enum module in the Python standard library to create enumerations. And this tutorial
    will teach you how.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，Python 并没有一个显式的枚举数据类型。但你可以使用 Python 标准库中的 enum 模块来创建枚举。本教程将教你如何做。
- en: Let's get started!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: What Are Enums, And Why Should You Use Them?
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是枚举，为什么要使用它们？
- en: Enum stands for “enumeration” and consists of a set of predefined named constants.
    These constants are often related. Common examples include months in a year, days
    of the week, grades, order and task statuses.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 枚举代表“枚举”，由一组预定义的命名常量组成。这些常量通常相关联。常见的例子包括一年中的月份、一周中的天数、等级、顺序和任务状态。
- en: 'To sum up: An enum is essentially a collection of related constants, where
    each constant has a meaningful name associated with it.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下：枚举本质上是相关常量的集合，每个常量都有一个有意义的名称。
- en: In Python, you can create enums using the [enum module](https://docs.python.org/3/library/enum.html)
    (which we’ll do shortly!).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中，你可以使用 [enum 模块](https://docs.python.org/3/library/enum.html) 来创建枚举（我们将很快进行演示！）。
- en: Why Use Enums
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么使用枚举
- en: 'Using enums helps improve code clarity and maintainability. Here''s'' how:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 使用枚举有助于提高代码的清晰度和可维护性。方法如下：
- en: Enums enhance code clarity by replacing magic numbers or strings with meaningful
    labels. They also make the code more self-documenting as the names of enum members
    convey their purpose.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 枚举通过用有意义的标签替换神秘数字或字符串来增强代码的清晰度。它们还使代码更具自文档化，因为枚举成员的名称传达了它们的目的。
- en: Enums improve code maintainability by providing a simple way to define and manage
    related constants.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 枚举通过提供一种简单的方式来定义和管理相关常量，从而提高代码的可维护性。
- en: By restricting variable assignments to only valid enum values, enums also ensure
    type safety.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过将变量赋值限制为仅有效的枚举值，枚举还确保了类型安全。
- en: Enums facilitate easy iteration over and comparison of related constants.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 枚举便于对相关常量进行简单的迭代和比较。
- en: Now let’s create our first enumeration in Python.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在 Python 中创建我们的第一个枚举。
- en: Creating Enums Using Python’s Enum Class
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 的 Enum 类创建枚举
- en: 'We’ll create a `TaskStatus` enum that takes the following four names and values:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个 `TaskStatus` 枚举，它包含以下四个名称和值：
- en: '![Python Enum: How To Build Enumerations in Python](../Images/5112ef4e5b244d82b0a35453f1b423d8.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![Python 枚举：如何在 Python 中构建枚举](../Images/5112ef4e5b244d82b0a35453f1b423d8.png)'
- en: Image by Author
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: First, we import the `Enum` class from the enum module to create enums.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们从 enum 模块中导入 `Enum` 类来创建枚举。
- en: 'We then define a new class `TaskStatus` that inherits from `Enum` to create
    an enumeration. Each member is defined with a unique name and an optional value
    like so:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们定义一个新的类 `TaskStatus`，它继承自 `Enum` 来创建枚举。每个成员都定义了一个唯一的名称和一个可选的值，如下所示：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'All enum members we create are instances of the Enum class. You may verify
    it by calling the `isinstance()` function as shown:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建的所有枚举成员都是Enum类的实例。你可以通过调用`isinstance()`函数来验证，如下所示：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Let’s print out all the members in the `TaskStatus` enum by casting it into
    a list:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过将`TaskStatus`枚举转换成列表来打印出所有成员：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You should see the following output:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到以下输出：
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: All enum members have a **name** and a **value**. Meaning you can access enum
    members using their names, like `TaskStatus.TODO`. Or you access them by value,
    like `TaskStatus(0)`.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 所有枚举成员都有一个**名称**和一个**值**。这意味着你可以通过它们的名称来访问枚举成员，比如`TaskStatus.TODO`。或者通过值来访问它们，比如`TaskStatus(0)`。
- en: Working with Python Enums
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Python枚举
- en: Now that we’ve created a simple `TaskStatus` enum, let's learn how to perform
    simple tasks such as iterating over the enum members.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了一个简单的`TaskStatus`枚举，接下来让我们学习如何执行一些简单的任务，例如对枚举成员进行迭代。
- en: Iterating Over Enums
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 迭代枚举
- en: 'In Python, you can work with enums pretty much the same way you work with any
    iterable. For example, you can use the `len()` function to count the number of
    enum members:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python中，你可以以类似于处理任何可迭代对象的方式来处理枚举。例如，你可以使用`len()`函数来计算枚举成员的数量：
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You can also iterate over enums just the way you would over a Python iterable
    such as list. In the following for loop, we access both the name and value of
    each enum member and print them out:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以像迭代Python的可迭代对象（如列表）一样迭代枚举。在下面的for循环中，我们访问每个枚举成员的名称和值，并将它们打印出来：
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Here’s the output:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这是输出结果：
- en: '[PRE8]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Ordering in Enums
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 枚举中的排序
- en: 'In the example, the status and the corresponding numeric value are as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例中，状态及其对应的数字值如下：
- en: 'TODO: 0'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'TODO: 0'
- en: 'IN_PROGRESS: 1'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'IN_PROGRESS: 1'
- en: 'DONE: 2'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'DONE: 2'
- en: 'ABANDONED: -1'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'ABANDONED: -1'
- en: But you can also use the default ordering by using the `auto()` helper function.
    When you do so, if you have ‘n’ members in the enum, the values assigned are 1
    through n. But you can pass in a start value, say k, `auto(k)` for the enumeration
    to start at k and go up to k + n.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 但你也可以使用默认的排序方式，通过使用`auto()`辅助函数。当你这样做时，如果枚举中有‘n’个成员，分配的值是1到n。但你可以传入一个起始值，比如k，`auto(k)`用于使枚举从k开始并递增到k
    + n。
- en: 'Let’s modify the `TaskStatus` enum as shown:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们按如下方式修改`TaskStatus`枚举：
- en: '[PRE9]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now let’s print out the members:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们打印出这些成员：
- en: '[PRE10]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We see that the values are 1 to 4 as expected:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到这些值是1到4，正如预期的那样：
- en: '[PRE11]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Building on the TaskStatus Enum – A More Helpful Example
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于TaskStatus枚举——一个更有用的示例
- en: 'Now let''s build on the `TaskStatus` enum that we have. Create a task.py file
    in your working directory with the following version of the enum:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在已有的`TaskStatus`枚举基础上继续构建。在你的工作目录中创建一个task.py文件，并包含以下版本的枚举：
- en: '[PRE12]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Say we have a task with a name and a current status. And the valid transitions
    between states are as shown:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有一个任务，包含一个名称和一个当前状态。有效的状态转换如下所示：
- en: '![Python Enum: How To Build Enumerations in Python](../Images/0a6c001697289295fc82d0f80e750f30.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![Python Enum: How To Build Enumerations in Python](../Images/0a6c001697289295fc82d0f80e750f30.png)'
- en: Image by Author
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'Let’s create a `Task` class:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个`Task`类：
- en: '[PRE13]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: We have an `update_status()` method that checks if the transition to the new
    state is valid given the current status. For invalid transitions, a ValueError
    exception  is raised.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个`update_status()`方法，用于检查在当前状态下过渡到新状态是否有效。对于无效的过渡，会引发ValueError异常。
- en: 'Here’s an Instance of the `Task` class: the “Write Report” task with status
    TODO:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这是`Task`类的一个实例：状态为TODO的“写报告”任务：
- en: '[PRE14]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Updating the status of the task to IN_PROGRESS should work as it’s a valid
    state transition:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 将任务的状态更新为IN_PROGRESS应该能成功，因为这是一个有效的状态转换：
- en: '[PRE16]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'And once the task is complete, we can update its status to DONE:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦任务完成，我们可以将其状态更新为DONE：
- en: '[PRE18]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'But if you try to update the status to an invalid one, such as trying to update
    DONE to TODO, you’ll run into ValueError exception:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果你尝试将状态更新为无效的状态，比如尝试将DONE更新为TODO，你会遇到ValueError异常：
- en: '[PRE20]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Here’s the traceback of the ValueError raised because of invalid state transition
    from DONE to TODO:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为从DONE到TODO的无效状态转换引发的ValueError的追溯：
- en: '[PRE21]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Wrapping Up
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this tutorial, we learned how to build enumerations in Python by coding a
    simple TaskStatus enum. We learned how to access enum members and iterate over
    them.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们学习了如何通过编写一个简单的TaskStatus枚举来构建枚举。我们学习了如何访问枚举成员并对其进行迭代。
- en: Also, we learned how default ordering works if you choose to use the `auto()`
    helper function to set the values for enum members. We then tried using the TaskStatus
    enum in a more helpful example.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还学习了如果你选择使用 `auto()` 辅助函数来设置枚举成员的值，默认排序是如何工作的。然后，我们尝试在一个更有用的示例中使用 TaskStatus
    枚举。
- en: You can find the [code examples on GitHub](https://github.com/balapriyac/python-basics/tree/main/enums).
    I’ll see you all soon in another Python tutorial. Until then, happy coding!
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 [GitHub 上找到代码示例](https://github.com/balapriyac/python-basics/tree/main/enums)。我会在另一个
    Python 教程中再见到你们。在那之前，祝编程愉快！
- en: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)****
    is a developer and technical writer from India. She likes working at the intersection
    of math, programming, data science, and content creation. Her areas of interest
    and expertise include DevOps, data science, and natural language processing. She
    enjoys reading, writing, coding, and coffee! Currently, she''s working on learning
    and sharing her knowledge with the developer community by authoring tutorials,
    how-to guides, opinion pieces, and more. Bala also creates engaging resource overviews
    and coding tutorials.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)****
    是一位来自印度的开发者和技术作家。她喜欢在数学、编程、数据科学和内容创作的交汇点上工作。她的兴趣和专长领域包括 DevOps、数据科学和自然语言处理。她喜欢阅读、写作、编程和咖啡！目前，她正在通过编写教程、操作指南、观点文章等，学习并与开发者社区分享她的知识。Bala
    还创建了引人入胜的资源概述和编码教程。'
- en: More On This Topic
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Build a Web Scraper with Python in 5 Minutes](https://www.kdnuggets.com/2022/02/build-web-scraper-python-5-minutes.html)'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 Python 在 5 分钟内构建一个网页抓取器](https://www.kdnuggets.com/2022/02/build-web-scraper-python-5-minutes.html)'
- en: '[It''s alive! Build your first robots with Python and some cheap,…](https://www.kdnuggets.com/2023/06/manning-build-first-robots-python-cheap-basic-components.html)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[它活过来了！用 Python 和一些便宜的……构建你的第一个机器人](https://www.kdnuggets.com/2023/06/manning-build-first-robots-python-cheap-basic-components.html)'
- en: '[FastAPI Tutorial: Build APIs with Python in Minutes](https://www.kdnuggets.com/fastapi-tutorial-build-apis-with-python-in-minutes)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[FastAPI 教程：用 Python 在几分钟内构建 API](https://www.kdnuggets.com/fastapi-tutorial-build-apis-with-python-in-minutes)'
- en: '[Build a Text-to-Speech Converter with Python in 5 Minutes](https://www.kdnuggets.com/2022/09/build-texttospeech-converter-python-5-minutes.html)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 Python 在 5 分钟内构建一个文本到语音转换器](https://www.kdnuggets.com/2022/09/build-texttospeech-converter-python-5-minutes.html)'
- en: '[Build An AI Application with Python in 10 Easy Steps](https://www.kdnuggets.com/build-an-ai-application-with-python-in-10-easy-steps)'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 Python 在 10 个简单步骤中构建一个 AI 应用程序](https://www.kdnuggets.com/build-an-ai-application-with-python-in-10-easy-steps)'
- en: '[Build a Command-Line App with Python in 7 Easy Steps](https://www.kdnuggets.com/build-a-command-line-app-with-python-in-7-easy-steps)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 Python 轻松构建命令行应用程序的 7 个步骤](https://www.kdnuggets.com/build-a-command-line-app-with-python-in-7-easy-steps)'
