- en: A Guide to Working with SQLite Databases in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/a-guide-to-working-with-sqlite-databases-in-python](https://www.kdnuggets.com/a-guide-to-working-with-sqlite-databases-in-python)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![sqlite](../Images/28370dcbc9584501c42815ae9bb8694f.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: SQLite is a lightweight, serverless relational database management system (RDBMS)
    that is widely used due to its simplicity and ease of embedding within applications.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: So whether you're building a small application, managing data locally, or prototyping
    a project, SQLite provides a convenient solution for storing and querying structured
    data. In this tutorial, you’ll learn how to work with SQLite databases from Python
    using the built-in [sqlite3 module](https://docs.python.org/3/library/sqlite3.html).
  prefs: []
  type: TYPE_NORMAL
- en: Particularly, you’ll learn how to connect to an SQLite database from Python
    and perform basic CRUD operations. Let’s get started.
  prefs: []
  type: TYPE_NORMAL
- en: Setting Up the Environment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As a first step create a dedicated virtual environment for your project (in
    the project directory) and activate it. You can do it using the built-in venv
    module like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'In this tutorial, we’ll use [Faker](https://pypi.org/project/Faker/) to generate
    synthetic records. So install it using pip:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The sqlite3 module is built into the Python standard library, so you don't have
    to install it. So if you’ve installed Faker and are using a recent version of
    Python, you’re good to go!
  prefs: []
  type: TYPE_NORMAL
- en: Connecting to an SQLite Database
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the project directory, create a Python script and get started. As a first
    step to interact with the database, we should establish a connection with the
    database.
  prefs: []
  type: TYPE_NORMAL
- en: 'To connect to a sample database example.db, you can use the `connect()` function
    from the sqlite3 module like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: If the database already exists, then it connects to it. Else it creates the
    database in the working directory.
  prefs: []
  type: TYPE_NORMAL
- en: After connecting to the database, we’ll create a database cursor that will help
    us run queries. The cursor object has methods to execute queries and fetch the
    results of the query. It works very similarly to a file handler.
  prefs: []
  type: TYPE_NORMAL
- en: '![sqlite](../Images/1e38fdc13b49a32fb2d938ac8e6e91e5.png)'
  prefs: []
  type: TYPE_IMG
- en: Database Cursor | Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'It’s often helpful to use the connection as a context manager in a with statement
    like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This way you don’t have to worry about closing the connection object. The connection
    is automatically closed when the execution exits the with block. We’ll explicitly
    close the cursor objects in this tutorial, though.
  prefs: []
  type: TYPE_NORMAL
- en: Creating Database Tables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now let’s create a `customers` table with the required fields in the database.
    To do so, we first create a cursor object. We then run a CREATE TABLE statement,
    and pass in the query string to the `execute()` method called on the cursor object:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'When you run the script, you should see the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Performing CRUD Operations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s perform some basic CRUD operations on the database table. If you’d like
    you may create separate scripts for each operation.
  prefs: []
  type: TYPE_NORMAL
- en: Inserting Records
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now we’ll insert some records into the `customers` table. We’ll use Faker to
    generate synthetic records. To keep the outputs readable, I’ve inserted only 10
    records. But you may insert as many records as you’d like.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Notice how we use parameterized queries: instead of hardcoding the values into
    the INSERT statement, we use ? placeholders and pass in a tuple of values.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Running the script should give:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Reading and Updating Records
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now that we’ve inserted records into the table, let’s run a query to read in
    all the records. Notice how we use the `execute()` method to run queries and the
    `fetchall()` method on the cursor to retrieve the results of the query.
  prefs: []
  type: TYPE_NORMAL
- en: 'Because we’ve stored the results of the previous query in `all_customers`,
    let’s also run an UPDATE query to update the `num_orders` corresponding to the
    id 1\. Here’s the code snippet:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'This outputs both the records and the message after the update query:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Deleting Records
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To delete a customer with a specific customer ID, let’s run a DELETE statement
    as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'This outputs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Filtering Records Using the WHERE Clause
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![sqlite](../Images/1ddfac37a313ec252b2e49aaaf7a552d.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s say we want to fetch records of customers who’ve made fewer than 10 orders,
    say to run targeted campaigns and the like. For this, we run a SELECT query with
    the WHERE clause specifying the condition for filtering (in this case the number
    of orders). Here''s how you can achieve this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'And here’s the output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Wrapping Up
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: And that’s a wrap! This was a guide to getting started with SQLite with Python.
    I hope you found it helpful. You can find all the code [on GitHub](https://github.com/balapriyac/python-basics/tree/main/sqlite-tut).
    In the next part, we’ll look at running joins and subqueries, managing transactions
    in SQLite, and more. Until then, happy coding!
  prefs: []
  type: TYPE_NORMAL
- en: If you’re interested in learning how database indexes work, read [How To Speed
    Up SQL Queries Using Indexes [Python Edition]](https://www.kdnuggets.com/2023/08/speed-sql-queries-indexes-python-edition.html).
  prefs: []
  type: TYPE_NORMAL
- en: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)****
    is a developer and technical writer from India. She likes working at the intersection
    of math, programming, data science, and content creation. Her areas of interest
    and expertise include DevOps, data science, and natural language processing. She
    enjoys reading, writing, coding, and coffee! Currently, she''s working on learning
    and sharing her knowledge with the developer community by authoring tutorials,
    how-to guides, opinion pieces, and more. Bala also creates engaging resource overviews
    and coding tutorials.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[A Comprehensive Guide to Pinecone Vector Databases](https://www.kdnuggets.com/a-comprehensive-guide-to-pinecone-vector-databases)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Working With Sparse Features In Machine Learning Models](https://www.kdnuggets.com/2021/01/sparse-features-machine-learning-models.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Working with Big Data: Tools and Techniques](https://www.kdnuggets.com/working-with-big-data-tools-and-techniques)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Deep Learning working in the wild: A Data-Centric Course](https://www.kdnuggets.com/2022/04/corise-deep-learning-wild-data-centric-course.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 Soft Skills for Data Scientists Working Remotely](https://www.kdnuggets.com/2022/05/6-soft-skills-data-scientists-working-remotely.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Deep Learning working in the wild: A Data-Centric Course](https://www.kdnuggets.com/2022/11/corise-deep-learning-wild-data-centric-course.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
