- en: What is Hierarchical Clustering?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是层次聚类？
- en: 原文：[https://www.kdnuggets.com/2019/09/hierarchical-clustering.html](https://www.kdnuggets.com/2019/09/hierarchical-clustering.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/09/hierarchical-clustering.html](https://www.kdnuggets.com/2019/09/hierarchical-clustering.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**What is Clustering??**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**什么是聚类？？**'
- en: '**Clustering **is a technique that groups similar objects such that the objects
    in the same group are more similar to each other than the objects in the other
    groups. The group of similar objects is called a **Cluster.**'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**聚类**是一种将相似对象分组的技术，使得同一组中的对象比其他组中的对象更相似。相似对象的组称为**簇**。'
- en: '![Figure](../Images/d864c96c4c7666187cbf8c49c37b343e.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/d864c96c4c7666187cbf8c49c37b343e.png)'
- en: Clustered data points
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类的数据点
- en: '* * *'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的IT工作'
- en: '* * *'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'There are 5 popular clustering algorithms that data scientists need to know:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学家需要了解5种流行的聚类算法：
- en: '**K-Means Clustering**: To know more click [here](https://towardsdatascience.com/introduction-to-image-segmentation-with-k-means-clustering-83fd0a9e2fc3).'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**K-均值聚类**：欲了解更多信息，请点击[这里](https://towardsdatascience.com/introduction-to-image-segmentation-with-k-means-clustering-83fd0a9e2fc3)。'
- en: '**Hierarchical Clustering**: We’ll discuss this algorithm here in detail.'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**层次聚类**：我们将在这里详细讨论该算法。'
- en: '**Mean-Shift Clustering:** To know more click [here](https://spin.atomicobject.com/2015/05/26/mean-shift-clustering/).'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**均值漂移聚类：** 欲了解更多信息，请点击[这里](https://spin.atomicobject.com/2015/05/26/mean-shift-clustering/)。'
- en: '**Density-Based Spatial Clustering of Applications with Noise (DBSCAN): **To
    know more click [here](https://en.wikipedia.org/wiki/DBSCAN).'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**基于密度的空间聚类应用于噪声（DBSCAN）：** 欲了解更多信息，请点击[这里](https://en.wikipedia.org/wiki/DBSCAN)。'
- en: '**Expectation-Maximization (EM) Clustering using Gaussian Mixture Models (GMM): **To
    know more click [here](https://towardsdatascience.com/gaussian-mixture-models-d13a5e915c8e).'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**期望最大化（EM）聚类使用高斯混合模型（GMM）：** 欲了解更多信息，请点击[这里](https://towardsdatascience.com/gaussian-mixture-models-d13a5e915c8e)。'
- en: '**Hierarchical Clustering Algorithm**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**层次聚类算法**'
- en: Also called **Hierarchical cluster analysis** or **HCA **is an unsupervised
    clustering algorithm which involves creating clusters that have predominant ordering
    from top to bottom.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 也称为**层次聚类分析**或**HCA**，是一种无监督的聚类算法，涉及创建从上到下具有主导顺序的簇。
- en: 'For e.g: All files and folders on our hard disk are organized in a hierarchy.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：我们硬盘上的所有文件和文件夹都以层次结构组织。
- en: The algorithm groups similar objects into groups called ***clusters***. The
    endpoint is a set of clusters or groups*, *where each cluster is distinct from
    each other cluster, and the objects within each cluster are broadly similar to
    each other.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法将相似的对象分组成称为***簇***的组。最终结果是一组簇或组，其中每个簇彼此不同，而每个簇中的对象在广义上彼此相似。
- en: 'This clustering technique is divided into two types:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这种聚类技术分为两种类型：
- en: Agglomerative Hierarchical Clustering
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 凝聚层次聚类
- en: Divisive Hierarchical Clustering
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 分裂层次聚类
- en: '**Agglomerative Hierarchical Clustering**'
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**凝聚层次聚类**'
- en: The Agglomerative Hierarchical Clustering is the most common type of hierarchical
    clustering used to group objects in clusters based on their similarity. It’s also
    known as AGNES (Agglomerative Nesting). It's a “[bottom-up](https://en.wikipedia.org/wiki/Top-down_and_bottom-up_design)”
    approach: ***each observation starts in its own cluster, and pairs of clusters
    are merged as one moves up the hierarchy.***
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 凝聚层次聚类是最常见的层次聚类类型，用于根据对象的相似性将对象分组。它也称为AGNES（凝聚嵌套）。它是一种“[自下而上](https://en.wikipedia.org/wiki/Top-down_and_bottom-up_design)”的方法：***每个观察从自己的簇开始，随着层次的上升，簇对簇被合并。***
- en: '**How does it work?**'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**它是如何工作的？**'
- en: Make each data point a single-point cluster → forms N clusters
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将每个数据点作为单点簇 → 形成 N 个簇
- en: Take the two closest data points and make them one cluster → forms N-1 clusters
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取两个最接近的数据点并将它们合并成一个簇 → 形成 N-1 个簇
- en: Take the two closest clusters and make them one cluster → Forms N-2 clusters.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取两个最接近的簇并将它们合并成一个簇 → 形成 N-2 个簇。
- en: Repeat step-3 until you are left with only one cluster.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复步骤 3，直到只剩下一个簇。
- en: 'Have a look at the visual representation of Agglomerative Hierarchical Clustering
    for better understanding:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 查看聚合层次聚类的可视化表示以便更好地理解：
- en: '![Figure](../Images/2d5c84fed59033b3130bd242b7e92738.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/2d5c84fed59033b3130bd242b7e92738.png)'
- en: '[Agglomerative Hierarchical Clustering](https://gfycat.com/somelonelycaterpillar)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[聚合层次聚类](https://gfycat.com/somelonelycaterpillar)'
- en: 'There are several ways to measure the distance between clusters in order to
    decide the rules for clustering, and they are often called Linkage Methods. Some
    of the common linkage methods are:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种方法可以测量簇之间的距离，以决定聚类的规则，这些方法通常称为链接方法。一些常见的链接方法包括：
- en: '**Complete-linkage**: the distance between two clusters is defined as the *longest* distance
    between two points in each cluster.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完全链接**：两个簇之间的距离定义为两个簇中各点之间的*最长*距离。'
- en: '**Single-linkage**: the distance between two clusters is defined as the *shortest* distance
    between two points in each cluster. This linkage may be used to detect high values
    in your dataset which may be outliers as they will be merged at the end.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单链接**：两个簇之间的距离定义为两个簇中各点之间的*最短*距离。此链接方法可用于检测数据集中可能存在的异常值，因为它们会在最后合并。'
- en: '**Average-linkage**: the distance between two clusters is defined as the average
    distance between each point in one cluster to every point in the other cluster.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平均链接**：两个簇之间的距离定义为一个簇中每个点到另一个簇中每个点的平均距离。'
- en: '**Centroid-linkage:** finds the centroid of cluster 1 and centroid of cluster
    2, and then calculates the distance between the two before merging.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**中心点链接**：找到簇 1 和簇 2 的中心点，然后计算它们之间的距离，再进行合并。'
- en: The choice of linkage method entirely depends on you and there is no hard and
    fast method that will always give you good results. Different linkage methods
    lead to different clusters.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 选择链接方法完全取决于你，没有一种固定的方法总是能给你带来好的结果。不同的链接方法会导致不同的簇。
- en: The point of doing all this is to demonstrate the way hierarchical clustering
    works, it maintains a memory of how we went through this process and that memory
    is stored in **Dendrogram**.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 做这些的目的在于展示层次聚类的工作原理，它保留了我们如何进行这个过程的记忆，这种记忆存储在**树状图**中。
- en: '**What is a Dendrogram?**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**什么是树状图？**'
- en: A Dendrogram is a type of tree diagram showing hierarchical relationships between
    different sets of data.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 树状图是一种显示不同数据集之间层次关系的树形图。
- en: As already said a Dendrogram contains the memory of hierarchical clustering
    algorithm, so just by looking at the Dendrgram you can tell how the cluster is
    formed.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，树状图包含层次聚类算法的记忆，因此仅通过查看树状图，你可以了解簇是如何形成的。
- en: '![Figure](../Images/21be7560a8fe5a22873d0b7907c2d922.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/21be7560a8fe5a22873d0b7907c2d922.png)'
- en: '[Dendrogram](https://giphy.com/explore/dendrogram)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[树状图](https://giphy.com/explore/dendrogram)'
- en: '**Note:- **'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：-**'
- en: Distance between data points represents dissimilarities.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据点之间的距离表示不相似性。
- en: Height of the blocks represents the distance between clusters.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 块的高度表示簇之间的距离。
- en: So you can observe from the above figure that initially P5 and P6 which are
    closest to each other by any other point are combined into one cluster followed
    by P4 getting merged into the same cluster(C2). Then P1and P2 gets combined into
    one cluster followed by P0 getting merged into the same cluster(C4). Now P3 gets
    merged in cluster C2 and finally, both clusters get merged into one.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 从上面的图可以观察到，最初 P5 和 P6 由于彼此之间的距离最小，被合并成一个簇，然后 P4 被合并到同一个簇 (C2)。接着 P1 和 P2 合并成一个簇，然后
    P0 被合并到同一个簇 (C4)。现在 P3 被合并到簇 C2，最后这两个簇合并成一个。
- en: '**Parts of a Dendrogram**'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**树状图的组成部分**'
- en: '![Figure](../Images/61b86c9b3b38eb3d02057b488973efc2.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/61b86c9b3b38eb3d02057b488973efc2.png)'
- en: '[Pic Credit](https://www.statisticshowto.datasciencecentral.com/hierarchical-clustering/)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[图片来源](https://www.statisticshowto.datasciencecentral.com/hierarchical-clustering/)'
- en: 'A dendrogram can be a column graph (as in the image below) or a row graph.
    Some dendrograms are circular or have a fluid-shape, but the software will usually
    produce a row or column graph. No matter what the shape, the basic graph comprises
    the same parts:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 树状图可以是柱状图（如下面的图片所示）或条形图。一些树状图是圆形的或具有流动形状，但软件通常会生成行或列图。不论形状如何，基本图形包含相同的部分：
- en: The ***Clades*** are the branch and are arranged according to how similar (or
    dissimilar) they are. Clades that are close to the same height are similar to
    each other; clades with different heights are dissimilar — **the greater the difference
    in height, the more dissimilarity.**
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***谱系*** 是分支，按照它们的相似度（或差异度）进行排列。相近高度的谱系彼此相似；高度不同的谱系彼此不同 —— **高度差异越大，差异越明显。**'
- en: Each clade has one or more ***leaves***.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个谱系都有一个或多个***叶子***。
- en: Leaves A, B, and C are more similar to each other than they are to leaves D,
    E, or F.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 叶子 A、B 和 C 彼此之间的相似度高于它们与叶子 D、E 或 F 的相似度。
- en: Leaves D and E are more similar to each other than they are to leaves A, B,
    C, or F.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 叶子 D 和 E 彼此间的相似度高于它们与叶子 A、B、C 或 F 的相似度。
- en: Leaf F is substantially different from all of the other leaves.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 叶子 F 与其他所有叶子有显著不同。
- en: A clade can theoretically have an infinite amount of leaves. However, the more
    leaves you have, the harder the graph will be to read with the naked eye.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 一个谱系理论上可以有无限多的叶子。然而，叶子越多，图形在裸眼下阅读的难度越大。
- en: '**One question that might have intrigued you by now is how do you decide when
    to stop merging the clusters?**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**到现在为止，可能引起你兴趣的一个问题是如何决定何时停止合并簇？**'
- en: You cut the dendrogram tree with a horizontal line at a height where the line
    can traverse the maximum distance up and down without intersecting the merging
    point.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在树状图上用水平线进行切割，选择一个高度，在该高度上线可以在上下方向上最大程度地穿越而不交叉合并点。
- en: For example in the below figure L3 can traverse maximum distance up and down
    without intersecting the merging points. So we draw a horizontal line and the
    number of verticle lines it intersects is the optimal number of clusters.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在下图中，L3 可以在上下方向上最大程度地穿越而不交叉合并点。因此，我们画一条水平线，线与垂直线的交点数就是最佳簇数。
- en: '![Figure](../Images/e468c33d0dae5aa5b033ffad73e4c21b.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/e468c33d0dae5aa5b033ffad73e4c21b.png)'
- en: '[Choosing the optimal number of clusters.](https://www.google.com/imgres?imgurl=https%3A%2F%2Fars.els-cdn.com%2Fcontent%2Fimage%2F3-s2.0-B978012811654800004X-f04-03-9780128116548.jpg&imgrefurl=https%3A%2F%2Fwww.sciencedirect.com%2Ftopics%2Fcomputer-science%2Fagglomerative-algorithm&docid=4v7-F4YYs4wofM&tbnid=ZDsxb9kaKxWmWM%3A&vet=12ahUKEwizmMT5vtTkAhWHad4KHXc5ByQ4rAIQMygvMC96BAgBEDE..i&w=314&h=226&bih=691&biw=1440&q=dendrogram%20explained&ved=2ahUKEwizmMT5vtTkAhWHad4KHXc5ByQ4rAIQMygvMC96BAgBEDE&iact=mrc&uact=8)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[选择最佳簇数。](https://www.google.com/imgres?imgurl=https%3A%2F%2Fars.els-cdn.com%2Fcontent%2Fimage%2F3-s2.0-B978012811654800004X-f04-03-9780128116548.jpg&imgrefurl=https%3A%2F%2Fwww.sciencedirect.com%2Ftopics%2Fcomputer-science%2Fagglomerative-algorithm&docid=4v7-F4YYs4wofM&tbnid=ZDsxb9kaKxWmWM%3A&vet=12ahUKEwizmMT5vtTkAhWHad4KHXc5ByQ4rAIQMygvMC96BAgBEDE..i&w=314&h=226&bih=691&biw=1440&q=dendrogram%20explained&ved=2ahUKEwizmMT5vtTkAhWHad4KHXc5ByQ4rAIQMygvMC96BAgBEDE&iact=mrc&uact=8)'
- en: '**Number of Clusters in this case = 3.**'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**此案例中的簇数 = 3。**'
- en: Divisive Hierarchical Clustering
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分裂层次聚类
- en: In *Divisive* or DIANA(DIvisive ANAlysis Clustering) is a top-down clustering
    method where we assign all of the observations to a single cluster and then partition
    the cluster to two least similar clusters. Finally, we proceed recursively on
    each cluster until there is one cluster for each observation. So this clustering
    approach is exactly opposite to Agglomerative clustering.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*分裂* 或 DIANA（DIvisive ANAlysis Clustering）是一种自顶向下的聚类方法，我们将所有观测分配到一个簇中，然后将该簇分割成两个最不相似的簇。最后，我们在每个簇上递归地进行，直到每个观测都有一个簇。所以这种聚类方法正好与凝聚聚类相反。'
- en: '![Figure](../Images/fcda2a4b265cb4b2bf061a6726d9e62c.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/fcda2a4b265cb4b2bf061a6726d9e62c.png)'
- en: '[Pic credit](https://www.researchgate.net/figure/Conceptual-dendrogram-for-agglomerative-and-divisive-Hierarchical-based-clustering-19_fig2_321399805)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[图片来源](https://www.researchgate.net/figure/Conceptual-dendrogram-for-agglomerative-and-divisive-Hierarchical-based-clustering-19_fig2_321399805)'
- en: There is evidence that divisive algorithms produce more accurate hierarchies
    than agglomerative algorithms in some circumstances but is conceptually more complex.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 有证据表明，在某些情况下，分裂算法比凝聚算法生成的层次结构更准确，但其概念上更复杂。
- en: In both agglomerative and divisive hierarchical clustering, users need to specify
    the desired number of clusters as a termination condition(when to stop merging).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在聚合层次聚类和分裂层次聚类中，用户需要指定期望的簇数量作为终止条件（何时停止合并）。
- en: Measuring the goodness of Clusters
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 衡量簇的优劣
- en: Well, there are many measures to do this, perhaps the most popular one is the `Dunn's
    Index`. Dunn's index is the ratio between the minimum inter-cluster distances
    to the maximum intra-cluster diameter. The diameter of a cluster is the distance
    between its two furthermost points. In order to have well separated and compact
    clusters you should aim for a higher Dunn's index.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，有很多方法可以做到这一点，也许最流行的就是`Dunn's Index`。Dunn's Index 是最小簇间距离与最大簇内直径的比率。簇的直径是其两个最远点之间的距离。为了获得良好的分离和紧凑的簇，你应该追求更高的
    Dunn's Index。
- en: Now let's implement one use case scenario using Agglomerative Hierarchical clustering
    algorithm. The data set consist of customer details of one particular shopping
    mall along with their spending score.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们使用聚合层次聚类算法实现一个用例场景。数据集包含一个特定购物中心的客户详细信息及其消费评分。
- en: You can download the dataset from [here](https://www.kaggle.com/shwetabh123/mall-customers).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从[这里](https://www.kaggle.com/shwetabh123/mall-customers)下载数据集。
- en: 'Let''s start by importing 3 basic libraries:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从导入 3 个基本库开始：
- en: '[PRE0]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Load the dataset:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 加载数据集：
- en: '[PRE1]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![Figure](../Images/daaa2201747eb4c09b8c92b61d618025.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/daaa2201747eb4c09b8c92b61d618025.png)'
- en: Original Dataset
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 原始数据集
- en: So our goal is to cluster customers based on their spending score.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们的目标是根据他们的消费评分对客户进行聚类。
- en: Out of all the features, `CustomerID` and `Genre` are irrelevant fields and
    can be dropped and create a matrix of independent variables by select only `Age`and `Annual
    Income`.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有特征中，`CustomerID`和`Genre`是不相关的字段，可以去掉，只保留`Age`和`Annual Income`来创建独立变量矩阵。
- en: '[PRE2]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Next, we need to choose the number of clusters and for doing this we’ll use
    Dendrograms.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要选择簇的数量，为此我们将使用树状图（Dendrograms）。
- en: '[PRE3]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/3f388b0ef4b8de84cbd26d87f31da321.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3f388b0ef4b8de84cbd26d87f31da321.png)'
- en: As we have already discussed to choose the number of clusters we draw a horizontal
    line to the longest line that traverses maximum distance up and down without intersecting
    the merging points. So we draw a horizontal line and the number of verticle lines
    it intersects is the optimal number of clusters.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前讨论的，选择簇的数量时，我们绘制一条水平线，穿过最大上下距离而不与合并点相交的最长线段。因此，我们绘制水平线，它所交叉的垂直线数量就是最优的簇数量。
- en: In this case, it's 5\. So let's fit our Agglomerative model with 5 clusters.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，是5。因此，让我们用5个簇来拟合我们的聚合模型。
- en: '[PRE4]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Visualize the results.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化结果。
- en: '[PRE5]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Figure](../Images/5aca25e413a6f4f2840bf998959e4520.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/5aca25e413a6f4f2840bf998959e4520.png)'
- en: A cluster of customers based on their Annual Income and spending score.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 根据他们的年收入和消费评分对客户进行聚类。
- en: Conclusion
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论
- en: Hierarchical clustering is a very useful way of segmentation. The advantage
    of not having to pre-define the number of clusters gives it quite an edge over
    k-Means. However, it doesn't work well when we have huge amount of data.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 层次聚类是一种非常有用的分割方法。它的优势在于不需要预定义簇的数量，这使其相比于 k-Means 更具优势。然而，当我们有大量数据时，它表现不佳。
- en: Well, this comes to the end of this article. I hope you guys have enjoyed reading
    it. Please share your thoughts/comments/doubts in the comment section.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，这篇文章到此为止。希望你们喜欢阅读。请在评论区分享你的想法/评论/疑问。
- en: You can reach me out over [LinkedIn](https://www.linkedin.com/in/nagesh-singh-chauhan-6936bb13b/?source=post_page---------------------------) for
    any query.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过[LinkedIn](https://www.linkedin.com/in/nagesh-singh-chauhan-6936bb13b/?source=post_page---------------------------)联系我，有任何疑问都可以问我。
- en: '![](../Images/36fac5b8825e21f2e39f62ab62445132.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/36fac5b8825e21f2e39f62ab62445132.png)'
- en: Thanks for reading !!!
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读 !!!
- en: '**Bio: [Nagesh Singh Chauhan](https://www.linkedin.com/in/nagesh-singh-chauhan-6936bb13b/)**
    is a Big data developer at CirrusLabs. He has over 4 years of working experience
    in various sectors like Telecom, Analytics, Sales, Data Science having specialisation
    in various Big data components.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：[Nagesh Singh Chauhan](https://www.linkedin.com/in/nagesh-singh-chauhan-6936bb13b/)**
    是 CirrusLabs 的大数据开发人员。他在电信、分析、销售、数据科学等多个领域拥有超过 4 年的工作经验，并在各种大数据组件方面具有专业知识。'
- en: '[Original](https://medium.com/swlh/what-is-hierarchical-clustering-c04e9972e002).
    Reposted with permission.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://medium.com/swlh/what-is-hierarchical-clustering-c04e9972e002)。转载许可。'
- en: '**Related:**'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Predict Age and Gender Using Convolutional Neural Network and OpenCV](/2019/04/predict-age-gender-using-convolutional-neural-network-opencv.html)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用卷积神经网络和 OpenCV 预测年龄和性别](/2019/04/predict-age-gender-using-convolutional-neural-network-opencv.html)'
- en: '[Introduction to Image Segmentation with K-Means clustering](/2019/08/introduction-image-segmentation-k-means-clustering.html)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[K-Means 聚类的图像分割简介](/2019/08/introduction-image-segmentation-k-means-clustering.html)'
- en: '[Classifying Heart Disease Using K-Nearest Neighbors](/2019/07/classifying-heart-disease-using-k-nearest-neighbors.html)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 K-最近邻分类心脏病](/2019/07/classifying-heart-disease-using-k-nearest-neighbors.html)'
- en: More On This Topic
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Unveiling Hidden Patterns: An Introduction to Hierarchical Clustering](https://www.kdnuggets.com/unveiling-hidden-patterns-an-introduction-to-hierarchical-clustering)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[揭示隐藏模式：层次聚类简介](https://www.kdnuggets.com/unveiling-hidden-patterns-an-introduction-to-hierarchical-clustering)'
- en: '[Clustering Unleashed: Understanding K-Means Clustering](https://www.kdnuggets.com/2023/07/clustering-unleashed-understanding-kmeans-clustering.html)'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[聚类解密：理解 K-Means 聚类](https://www.kdnuggets.com/2023/07/clustering-unleashed-understanding-kmeans-clustering.html)'
- en: '[How to Use MultiIndex for Hierarchical Data Organization in Pandas](https://www.kdnuggets.com/how-to-use-multiindex-for-hierarchical-data-organization-in-pandas)'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何在 Pandas 中使用 MultiIndex 进行层次数据组织](https://www.kdnuggets.com/how-to-use-multiindex-for-hierarchical-data-organization-in-pandas)'
- en: '[DBSCAN Clustering Algorithm in Machine Learning](https://www.kdnuggets.com/2020/04/dbscan-clustering-algorithm-machine-learning.html)'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[机器学习中的 DBSCAN 聚类算法](https://www.kdnuggets.com/2020/04/dbscan-clustering-algorithm-machine-learning.html)'
- en: '[What is K-Means Clustering and How Does its Algorithm Work?](https://www.kdnuggets.com/2023/05/kmeans-clustering-algorithm-work.html)'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[什么是 K-Means 聚类及其算法如何工作？](https://www.kdnuggets.com/2023/05/kmeans-clustering-algorithm-work.html)'
- en: '[Clustering with scikit-learn: A Tutorial on Unsupervised Learning](https://www.kdnuggets.com/2023/05/clustering-scikitlearn-tutorial-unsupervised-learning.html)'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 scikit-learn 进行聚类：无监督学习教程](https://www.kdnuggets.com/2023/05/clustering-scikitlearn-tutorial-unsupervised-learning.html)'
