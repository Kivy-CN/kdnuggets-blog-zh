- en: 'Pandas: How to One-Hot Encode Data'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'Pandas: 如何进行独热编码'
- en: 原文：[https://www.kdnuggets.com/2023/07/pandas-onehot-encode-data.html](https://www.kdnuggets.com/2023/07/pandas-onehot-encode-data.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2023/07/pandas-onehot-encode-data.html](https://www.kdnuggets.com/2023/07/pandas-onehot-encode-data.html)
- en: '![Pandas: How to One-Hot Encode Data](../Images/c0f8134b033e517c4d51e4349fe07d0c.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Pandas: 如何进行独热编码](../Images/c0f8134b033e517c4d51e4349fe07d0c.png)'
- en: Image from [Pexels](https://www.pexels.com/photo/a-woman-looking-afar-5473955/)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自 [Pexels](https://www.pexels.com/photo/a-woman-looking-afar-5473955/)
- en: What is One-Hot Encoding
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是独热编码
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的 Top 3 课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持组织的 IT 工作'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: One-hot encoding is a data preprocessing step to convert categorical values
    into compatible numerical representations.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 独热编码是将类别值转换为兼容的数值表示形式的数据预处理步骤。
- en: '| categorical_column | bool_col | col_1 | col_2 | label |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| categorical_column | bool_col | col_1 | col_2 | label |'
- en: '| value_A | True | 9 | 4 | 0 |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| value_A | True | 9 | 4 | 0 |'
- en: '| value_B | False | 7 | 2 | 0 |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| value_B | False | 7 | 2 | 0 |'
- en: '| value_D | True | 9 | 5 | 0 |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| value_D | True | 9 | 5 | 0 |'
- en: '| value_D | False | 8 | 3 | 1 |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| value_D | False | 8 | 3 | 1 |'
- en: '| value_D | False | 9 | 0 | 1 |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| value_D | False | 9 | 0 | 1 |'
- en: '| value_D | False | 5 | 4 | 1 |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| value_D | False | 5 | 4 | 1 |'
- en: '| value_B | True | 8 | 1 | 1 |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| value_B | True | 8 | 1 | 1 |'
- en: '| value_D | True | 6 | 6 | 1 |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| value_D | True | 6 | 6 | 1 |'
- en: '| value_C | True | 0 | 5 | 0 |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| value_C | True | 0 | 5 | 0 |'
- en: For example for this dummy dataset, the categorical column has multiple string
    values. Many machine learning algorithms require the input data to be in numerical
    form. Therefore, we need some way to convert this data attribute to a form compatible
    with such algorithms. Thus, we break down the categorical column into multiple
    binary-valued columns.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，对于这个虚拟数据集，类别列具有多个字符串值。许多机器学习算法要求输入数据为数值形式。因此，我们需要将这些数据属性转换为适合这些算法的形式。因此，我们将类别列拆分为多个二值列。
- en: How to use Pandas Library for One-Hot Encoding
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 Pandas 库进行独热编码
- en: Firstly, read the .csv file or any other associated file into a Pandas data
    frame.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，将 .csv 文件或任何其他关联文件读入 Pandas 数据框。
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: To check unique values and better understand our data, we can use the following
    Panda functions.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 为了检查唯一值并更好地理解数据，我们可以使用以下 Panda 函数。
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'For this dummy data, the functions return the following output:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这些虚拟数据，这些函数返回以下输出：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'For the categorical column, we can break it down into multiple columns. For
    this, we use [pandas.get_dummies()](https://pandas.pydata.org/docs/reference/api/pandas.get_dummies.html)
    method. It takes the following arguments:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 对于类别列，我们可以将其拆分为多个列。为此，我们使用 [pandas.get_dummies()](https://pandas.pydata.org/docs/reference/api/pandas.get_dummies.html)
    方法。它接受以下参数：
- en: '| Argument |  |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 参数 |  |'
- en: '| **data:** array-like, Series, or DataFrame | The original panda''s data frame
    object |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| **数据：** 类数组、Series 或 DataFrame | 原始的 pandas 数据框对象 |'
- en: '| **columns:** list-like, default None | List of categorical columns to hot-encode
    |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| **列：** 类似列表，默认为 None | 类别列的列表，用于进行独热编码 |'
- en: '| **drop_first:** bool, default False | Removes the first level of categorical
    labels |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| **drop_first：** 布尔值，默认为 False | 移除类别标签的第一个级别 |'
- en: To better understand the function, let us work on one-hot encoding the dummy
    dataset.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解该函数，让我们对虚拟数据集进行独热编码。
- en: Hot-Encoding the Categorical Columns
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 类别列的独热编码
- en: We use the get_dummies method and pass the original data frame as **data** input.
    In **columns**, we pass a list containing only the *categorical_column* header.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 `get_dummies` 方法并将原始数据框作为 **data** 输入。在 **columns** 中，我们传递一个仅包含 *categorical_column*
    头的列表。
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The following commands drops the categorical_column and creates a new column
    for each unique value. Therefore, the single categorical column is converted into
    4 new columns where only one of the 4 columns will have a 1 value, and all of
    the other 3 are encoded 0\. This is why it is called One-Hot Encoding.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '| categorical_column_value_A | categorical_column_value_B | categorical_column_value_C
    | categorical_column_value_D |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
- en: '| 1 | 0 | 0 | 0 |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
- en: '| 0 | 1 | 0 | 0 |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
- en: '| 0 | 0 | 0 | 1 |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
- en: '| 0 | 0 | 0 | 1 |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
- en: '| 0 | 0 | 0 | 1 |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
- en: '| 0 | 0 | 0 | 1 |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
- en: '| 0 | 1 | 0 | 0 |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
- en: '| 0 | 0 | 0 | 1 |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
- en: '| 0 | 0 | 1 | 0 |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
- en: '| 0 | 0 | 0 | 1 |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
- en: The problem occurs when we want to one-hot encode the boolean column. It creates
    two new columns as well.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: Hot Encoding Binary Columns
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '| bool_col_False | bool_col_True |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
- en: '| 0 | 1 |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
- en: '| 1 | 0 |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
- en: '| 0 | 1 |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
- en: '| 1 | 0 |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
- en: We unnecessarily increase a column when we can have only one column where True
    is encoded to 1 and False is encoded to 0\. To solve this, we use the **drop_first**
    argument.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '| bool_col_True |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
- en: '| 1 |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
- en: '| 0 |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
- en: '| 1 |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
- en: '| 0 |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
- en: Conclusion
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The dummy dataset is one-hot encoded where the final result looks like
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '| col_1 | col_2 | bool | A | B | C | D | label |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
- en: '| 9 | 4 | 1 | 1 | 0 | 0 | 0 | 0 |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
- en: '| 7 | 2 | 0 | 0 | 1 | 0 | 0 | 0 |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
- en: '| 9 | 5 | 1 | 0 | 0 | 0 | 1 | 0 |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
- en: '| 8 | 3 | 0 | 0 | 0 | 0 | 1 | 1 |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
- en: '| 9 | 0 | 0 | 0 | 0 | 0 | 1 | 1 |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
- en: '| 5 | 4 | 0 | 0 | 0 | 0 | 1 | 1 |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
- en: '| 8 | 1 | 1 | 0 | 1 | 0 | 0 | 1 |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
- en: '| 6 | 6 | 1 | 0 | 0 | 0 | 1 | 1 |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
- en: '| 0 | 5 | 1 | 0 | 0 | 1 | 0 | 0 |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
- en: '| 1 | 8 | 1 | 0 | 0 | 0 | 1 | 0 |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
- en: The categorical values and boolean values have been converted to numerical values
    that can be used as input to machine learning algorithms.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: '**[Muhammad Arham](https://www.linkedin.com/in/muhammad-arham-a5b1b1237/)**
    is a Deep Learning Engineer working in Computer Vision and Natural Language Processing.
    He has worked on the deployment and optimizations of several generative AI applications
    that reached the global top charts at Vyro.AI. He is interested in building and
    optimizing machine learning models for intelligent systems and believes in continual
    improvement.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Introduction to Pandas for Data Science](https://www.kdnuggets.com/2020/06/introduction-pandas-data-science.html)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data Ingestion with Pandas: A Beginner Tutorial](https://www.kdnuggets.com/2022/04/data-ingestion-pandas-beginner-tutorial.html)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Simplify Data Processing with Pandas Pipeline](https://www.kdnuggets.com/2022/08/simplify-data-processing-pandas-pipeline.html)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[10 Pandas One Liners for Data Access, Manipulation, and Management](https://www.kdnuggets.com/2023/01/pandas-one-liners-data-access-manipulation-management.html)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Optimal Way to Input Missing Data with Pandas fillna()](https://www.kdnuggets.com/2023/02/optimal-way-input-missing-data-pandas-fillna.html)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data Cleaning with Pandas](https://www.kdnuggets.com/data-cleaning-with-pandas)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
