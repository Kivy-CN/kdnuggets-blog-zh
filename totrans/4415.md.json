["```py\nspanish_stemmer = SpanishStemmer()classStemmedCountVectorizerSP(CountVectorizer):\ndef build_analyzer(self):\nanalyzer = super(StemmedCountVectorizerSP,self).build_analyzer()return lambda doc: ([spanish_stemmer.stem(w) for w in analyzer(doc)])\n```", "```py\nfrom scipy import sparsemy_sparse_matrix = sparse.csr_matrix(my_array)\n```", "```py\nstart = time.time()whatever_you_want_to_timeend = time.time()print(end â€” start)\n```"]