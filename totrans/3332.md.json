["```py\nSubject: posting\n\nhi , ' m work phonetics project modern irish ' m hard source . anyone recommend book article english ? ' , specifically interest palatal ( slender ) consonant , work helpful too . thank ! laurel sutton ( sutton @ garnet . berkeley . edu\n```", "```py\ndef make_Dictionary(train_dir):\n    emails = [os.path.join(train_dir,f) for f in os.listdir(train_dir)]    \n    all_words = []       \n    for mail in emails:    \n        with open(mail) as m:\n            for i,line in enumerate(m):\n                if i == 2:  #Body of email is only 3rd line of text file\n                    words = line.split()\n                    all_words += words\n\n    dictionary = Counter(all_words)\n    # Paste code for non-word removal here(code snippet is given below) \n    return dictionary\n```", "```py\nlist_to_remove = dictionary.keys()\nfor item in list_to_remove:\n    if item.isalpha() == False: \n        del dictionary[item]\n    elif len(item) == 1:\n        del dictionary[item]\ndictionary = dictionary.most_common(3000)\n```", "```py\n[('order', 1414), ('address', 1293), ('report', 1216), ('mail', 1127), ('send', 1079), ('language', 1072), ('email', 1051), ('program', 1001), ('our', 987), ('list', 935), ('one', 917), ('name', 878), ('receive', 826), ('money', 788), ('free', 762)\n```", "```py\ndef extract_features(mail_dir): \n    files = [os.path.join(mail_dir,fi) for fi in os.listdir(mail_dir)]\n    features_matrix = np.zeros((len(files),3000))\n    docID = 0;\n    for fil in files:\n      with open(fil) as fi:\n        for i,line in enumerate(fi):\n          if i == 2:\n            words = line.split()\n            for word in words:\n              wordID = 0\n              for i,d in enumerate(dictionary):\n                if d[0] == word:\n                  wordID = i\n                  features_matrix[docID,wordID] = words.count(word)\n        docID = docID + 1     \n    return features_matrix\n```", "```py\nimport os\nimport numpy as np\nfrom collections import Counter\nfrom sklearn.naive_bayes import MultinomialNB, GaussianNB, BernoulliNB\nfrom sklearn.svm import SVC, NuSVC, LinearSVC\n\n# Create a dictionary of words with its frequency\n\ntrain_dir = 'train-mails'\ndictionary = make_Dictionary(train_dir)\n\n# Prepare feature vectors per training mail and its labels\n\ntrain_labels = np.zeros(702)\ntrain_labels[351:701] = 1\ntrain_matrix = extract_features(train_dir)\n\n# Training SVM and Naive bayes classifier\n\nmodel1 = MultinomialNB()\nmodel2 = LinearSVC()\nmodel1.fit(train_matrix,train_labels)\nmodel2.fit(train_matrix,train_labels)\n\n# Test the unseen mails for Spam\ntest_dir = 'test-mails'\ntest_matrix = extract_features(test_dir)\ntest_labels = np.zeros(260)\ntest_labels[130:260] = 1\nresult1 = model1.predict(test_matrix)\nresult2 = model2.predict(test_matrix)\nprint confusion_matrix(test_labels,result1)\nprint confusion_matrix(test_labels,result2)\n```"]