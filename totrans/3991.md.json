["```py\nimport pandas as pd\nimport numpy as np\n```", "```py\ndef get_data(size = 10_000):\n    df = pd.DataFrame()\n    df['age'] = np.random.randint(0, 100, size)\n    df['time_at_work'] = np.random.randint(0,8,size)\n    df['percentage_productive'] = np.random.rand(size)\n    df['favorite_treat'] = np.random.choice(['ice_cream', 'boba', 'cookie'], size)\n    df['bad_karma'] = np.random.choice(['stub_toe', 'wifi_malfunction', 'extra_traffic'])\n    return df\n```", "```py\ndef reward_calc(row):\n  if row['age'] >= 65:\n    return row ['favorite_treat']\n  if (row['time_at_work'] >= 2) & (row['percentage_productive'] >= 0.5):\n    return row ['favorite_treat']\n  return row['bad_karma']\n```", "```py\n%%timeit\ndf = get_data()\nfor index, row in df.iterrows():\n  df.loc[index, 'reward'] = reward_calc(row)\n```", "```py\n3.66 s ± 119 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n```", "```py\n%%timeit\ndf = get_data()\ndf['reward'] = df.apply(reward_calc, axis=1)\n```", "```py\n404 ms ± 18.2 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n```", "```py\n%%timeit\ndf = get_data()\ndf['reward'] = df['bad_karma']\ndf.loc[((df['percentage_productive'] >= 0.5) &\n      (df['time_at_work'] >= 2)) |\n      (df['age'] >= 65), 'reward'] = df['favorite_treat']\n```", "```py\n10.4 ms ± 76.2 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n```"]