- en: Explore the world of Bioinformatics with Machine Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/09/explore-world-bioinformatics-machine-learning.html](https://www.kdnuggets.com/2019/09/explore-world-bioinformatics-machine-learning.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: Bioinformatics is a field of study that uses computation to extract knowledge
    from biological data. It includes the collection, storage, retrieval, manipulation
    and modeling of data for analysis, visualization or prediction through the development
    of algorithms and software.
  prefs: []
  type: TYPE_NORMAL
- en: We can quote it in a simpler way **“Bioinformatics deals with computational
    and mathematical approaches for understanding and processing biological data”.**
  prefs: []
  type: TYPE_NORMAL
- en: It is an interdisciplinary field in which new computational methods are developed
    to analyze biological data and to make biological discoveries. For example, two
    typical tasks in genetics and genomics are the processes of sequencing and annotating
    an organism’s complete set of DNA. In neurosciences, neuroimaging techniques,
    such as computerized tomography (CT), positron emission tomography (PET), functional
    magnetic resonance imaging (fMRI), and diffusion tensor imaging (DTI), are used
    to study brains in vivo and to understand the inner workings of the nervous system.
  prefs: []
  type: TYPE_NORMAL
- en: 'The application of Machine Learning to biological and neuroimaging data opens
    new frontiers for biomedical engineering: improving our understanding of complex
    diseases such as cancer or neurodegenerative and psychiatric disorders. Advances
    in this field can ultimately lead to the development of automated diagnostic tools
    and of precision medicine, which consists of targeting custom medical treatments
    considering individual variability, lifestyle, and environment.'
  prefs: []
  type: TYPE_NORMAL
- en: Prior to the emergence of machine learning algorithms, bioinformatics algorithms
    had to be explicitly programmed by hand which, for problems such as [protein structure
    prediction](https://en.wikipedia.org/wiki/Protein_structure_prediction), proves
    extremely difficult.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/2c974e7ea568c8f0a5a2291d5874c9c4.png)'
  prefs: []
  type: TYPE_IMG
- en: '[3-D structure of protein sequence](https://www.dnastar.com/blog/structural-biology/from-protein-sequence-to-3d-structure/)'
  prefs: []
  type: TYPE_NORMAL
- en: Machine learning techniques such as [deep learning](https://en.wikipedia.org/wiki/Deep_learning) enable
    the algorithm to make use of automatic [feature learning](https://en.wikipedia.org/wiki/Feature_learning) which
    means that based on the dataset alone, the algorithm can learn how to combine
    multiple [features](https://en.wikipedia.org/wiki/Feature_(machine_learning)) of
    the input data into a more abstract set of features from which to conduct further
    learning. This multi-layered approach to learning patterns in the input data allows
    such systems to make quite complex predictions when trained on large datasets.
    In recent years, the size and number of available biological datasets have skyrocketed,
    enabling bioinformatics researchers to make use of these machine learning algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: 'Machine learning has been applied to six biological domains: Genomics, Proteomics,
    Microarrays, Systems biology, Stroke diagnosis, and Text mining.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Genomics**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is an interdisciplinary field of biology focusing on the structure, function,
    evolution, mapping, and editing of **genomes**. A Genome is an organism’s complete
    set of DNA, including all of its genes. There is an increasing need for the development
    of machine learning systems that can automatically determine the location of protein-encoding
    genes within a given DNA sequence and this problem in computational biology is
    known as [gene prediction](https://en.wikipedia.org/wiki/Gene_prediction). To
    know more about Genomics click [here](https://en.wikipedia.org/wiki/Genomics).
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/5d12ec9acb4c7af91480255da642f1dc.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Genome](https://www.genomicsengland.co.uk/understanding-genomics/)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Proteomics**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Proteomics is the large-scale study of **proteomes**. A proteome is a set of
    proteins produced in an organism, system, or biological context.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/67bd5adba434be0d276cdf540552a0e6.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Proteome](https://proteopedia.org/wiki/index.php/Book:Structural_Proteomics_and_its_Impact_on_the_Life_Sciences:6)'
  prefs: []
  type: TYPE_NORMAL
- en: Proteins, strings of [amino acids](https://en.wikipedia.org/wiki/Amino_acid),
    gain much of their function from [protein folding](https://en.wikipedia.org/wiki/Protein_folding) in
    which they conform into a three-dimensional structure. This structure is composed
    of a number of layers of folding, including the [primary structure](https://en.wikipedia.org/wiki/Protein_primary_structure) (i.e.
    the flat string of amino acids), the [secondary structure](https://en.wikipedia.org/wiki/Protein_secondary_structure) ([alpha
    helices](https://en.wikipedia.org/wiki/Alpha_helix) and [beta sheets](https://en.wikipedia.org/wiki/Beta_sheet)),
    the [tertiary structure](https://en.wikipedia.org/wiki/Protein_tertiary_structure),
    and the [quarternary structure](https://en.wikipedia.org/wiki/Protein_quaternary_structure).
  prefs: []
  type: TYPE_NORMAL
- en: Protein secondary structure prediction is the main focus of this subfield as
    the further protein foldings (tertiary and quaternary structures) are determined
    based on the secondary structure. Solving the true structure of a protein is an
    incredibly expensive and time-intensive process, furthering the need for systems
    that can accurately predict the structure of a protein by analyzing the amino
    acid sequence directly. Prior to machine learning, researchers needed to conduct
    this prediction manually.
  prefs: []
  type: TYPE_NORMAL
- en: The current state-of-the-art in secondary structure prediction uses a system
    called DeepCNF (deep convolutional neural fields) which relies on the machine
    learning model of [artificial neural networks](https://en.wikipedia.org/wiki/Artificial_neural_network) to
    achieve an accuracy of approximately 84% when tasked to classify the amino acids
    of a protein sequence into one of three structural classes (helix, sheet, or coil).
  prefs: []
  type: TYPE_NORMAL
- en: '**Microarrays**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Microarrays, a type of [lab-on-a-chip](https://en.wikipedia.org/wiki/Lab-on-a-chip),
    are used for automatically collecting data about large amounts of biological material.
    Machine learning can aid in the analysis of this data, and it has been applied
    to expression pattern identification, classification, and genetic network induction.
  prefs: []
  type: TYPE_NORMAL
- en: This technology is especially useful for monitoring the expression of genes
    within a genome, aiding in diagnosing different types of cancer-based on which
    genes are expressed. One of the main problems in this field is identifying which
    genes are expressed based on the collected data.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/2e8263a03a7ad1f311a297fb807c41c9.png)'
  prefs: []
  type: TYPE_IMG
- en: '[DNA-microarray chip](https://en.wikipedia.org/wiki/File:Microarray-schema.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Machine learning presents a potential solution to this problem as various classification
    methods can be used to perform this identification. The most commonly used methods
    are [radial basis function networks](https://en.wikipedia.org/wiki/Radial_basis_function_network), [deep
    learning](https://en.wikipedia.org/wiki/Deep_learning), [Bayesian classification](https://en.wikipedia.org/wiki/Naive_Bayes_classifier), [decision
    trees](https://en.wikipedia.org/wiki/Decision_tree), and [random forest](https://en.wikipedia.org/wiki/Random_forest).
  prefs: []
  type: TYPE_NORMAL
- en: '**Systems biology**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Systems biology focuses on the study of the emergent behaviors from complex
    interactions of simple biological components in a system. Such components can
    include molecules such as DNA, RNA, proteins, and metabolites.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/370a460cf0f4ec70fc0c39c3da677132.png)'
  prefs: []
  type: TYPE_IMG
- en: '[System biology](https://systemsbiology.org/about/what-is-systems-biology/)'
  prefs: []
  type: TYPE_NORMAL
- en: Machine learning has been used to aid in the modeling of these complex interactions
    in biological systems in domains such as genetic networks, signal transduction
    networks, and metabolic pathways. [Probabilistic graphical models](https://en.wikipedia.org/wiki/Graphical_model),
    a machine learning technique for determining the structure between different variables,
    are one of the most commonly used methods for modeling genetic networks. In addition,
    machine learning has been applied to systems biology problems such as identifying [transcription
    factor binding sites](https://en.wikipedia.org/wiki/DNA_binding_site) using a
    technique known as [Markov chain optimization](https://en.wikipedia.org/wiki/Markov_chain). [Genetic
    algorithms](https://en.wikipedia.org/wiki/Genetic_algorithm), machine learning
    techniques which are based on the natural process of evolution, have been used
    to model genetic networks and regulatory structures.
  prefs: []
  type: TYPE_NORMAL
- en: '**Stroke diagnosis**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Machine learning methods for the analysis of [neuroimaging](https://en.wikipedia.org/wiki/Neuroimaging) data
    are used to help diagnose stroke. Three-dimensional Convolutional Neural Network(CNN)
    and Support Vector Machines(SVM) methods are often used.
  prefs: []
  type: TYPE_NORMAL
- en: '**Text mining**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The increase in available biological publications led to the issue of the increase
    in difficulty in searching through and compiling all the relevant available information
    on a given topic across all sources. This task is known as [knowledge extraction](https://en.wikipedia.org/wiki/Knowledge_extraction).
    This is necessary for biological data collection which can then, in turn, be fed
    into machine learning algorithms to generate new biological knowledge. Machine
    learning can be used for this knowledge extraction task using techniques such
    as Natural Language Processing(NLP) to extract useful information from human-generated
    reports in a database.
  prefs: []
  type: TYPE_NORMAL
- en: This technique has been applied to the search for novel drug targets, as this
    task requires the examination of information stored in biological databases and
    journals. Annotations of proteins in protein databases often do not reflect the
    complete known set of knowledge of each protein, so additional information must
    be extracted from biomedical literature. Machine learning has been applied to
    the automatic annotation of the function of genes and proteins, determination
    of the subcellular localization of a protein, analysis of DNA-expression arrays,
    large-scale protein interaction analysis, and molecule interaction analysis.
  prefs: []
  type: TYPE_NORMAL
- en: Lets us now implement the **Support Vector Machine(SVM)** algorithm in bioinformatics
    dataset and see how it works.
  prefs: []
  type: TYPE_NORMAL
- en: '**Molecular Classification of Cancer by Gene Expression Monitoring using Support
    Vector Machine(SVM)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Although cancer classification has improved over the past 30 years, there has
    been no general approach for identifying new cancer classes (class discovery)
    or for assigning tumors to known classes (class prediction). The dataset comes
    from a proof-of-concept study published in 1999 by Golub et al. It showed how
    new cases of cancer could be classified by gene expression monitoring (via DNA
    microarray) and thereby provided a general approach for identifying new cancer
    classes and assigning tumors to known classes.
  prefs: []
  type: TYPE_NORMAL
- en: The goal is to classify patients with **acute myeloid leukemia (AML)** and **acute
    lymphoblastic leukemia (ALL)** using the SVM algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: The dataset can be downloaded from [Kaggle](https://www.kaggle.com/crawford/gene-expression).
  prefs: []
  type: TYPE_NORMAL
- en: '**Let''s start coding:**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Start with loading 3 basic python libraries:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Load the datasets:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![Figure](../Images/fc22e216af51a9c9dd5db29e1a86b883.png)'
  prefs: []
  type: TYPE_IMG
- en: Train_Data
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![Figure](../Images/8bf5f1ff61c067dbbbc276bb8422322d.png)'
  prefs: []
  type: TYPE_IMG
- en: Test_Data
  prefs: []
  type: TYPE_NORMAL
- en: '**About the dataset:**'
  prefs: []
  type: TYPE_NORMAL
- en: Each row represents a different gene.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Columns 1 and 2 are descriptions about that gene.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Each numbered column is a patient in label data.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Each patient has 7129 gene expression values — i.e each patient has one value
    for each gene.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The training data contain gene expression values for patients 1 through 38.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The test data contain gene expression values for patients 39 through 72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now check for nulls in both the datasets(We don't have any nulls in these datasets).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Now drop column ‘`call`’ from both train and test data as it doesn't have any
    statistical relevance.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Now join all the datasets and transpose the final joined data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![Figure](../Images/bb53a6a90b5ef5890a9ecbcf56116d08.png)'
  prefs: []
  type: TYPE_IMG
- en: df_all
  prefs: []
  type: TYPE_NORMAL
- en: After transpose, the rows have been converted to columns(7129 columns/features)
  prefs: []
  type: TYPE_NORMAL
- en: Now convert patient column to a numeric value and create dummy variables**(converts
    categories into numeric values)** since ‘`cancer`’ is a cateogorical column having
    2 categories(ALL, AML).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Now join data frames `df_all` and `labels` on `patient` column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![Figure](../Images/6dc72d487d601781c2d60ac3273e69aa.png)'
  prefs: []
  type: TYPE_IMG
- en: Data
  prefs: []
  type: TYPE_NORMAL
- en: Our next step is to create two variables **X(matrix of independent variables)** and **y(vector
    of the dependent variable)**.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Next, We split 75% of the data into training set while 25% of the data to test
    set. The **test_size** variable is where we actually specify the proportion of
    the test set.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Next step is to normalize the data because if we closely look at the data the
    range of values of independent variables varies a lot. So when the values vary
    a lot in independent variables, we use feature scaling so that all the values
    remain in the comparable range.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: The number of columns/features that we have been working with is huge. We have
    72 rows and 7129 columns. Basically we need to decrease the number of features(Dimentioanlity
    Reduction) to remove the possibility of[**Curse of Dimensionality**](https://en.wikipedia.org/wiki/Curse_of_dimensionality).
  prefs: []
  type: TYPE_NORMAL
- en: For reducing the number of dimensions/features we will use the most popular
    dimensionality reduction algorithm i.e. **PCA(Principal Component Analysis).**
  prefs: []
  type: TYPE_NORMAL
- en: To perform PCA we have to choose the number of features/dimensions that we want
    in our data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: The above code gives **k=38.**
  prefs: []
  type: TYPE_NORMAL
- en: Now let us take k=38 and apply PCA on our independent variables.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/c00b104fea93a104aef3e1d7b086fccf.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Note:- PCA can lead to a reduction in model performance on datasets with
    no or low feature correlation or does not meet the assumptions of linearity.**'
  prefs: []
  type: TYPE_NORMAL
- en: The next step is to fit our data into the Support Vector Machine(SVM) algorithm
    but before doing that we will perform Hyperparameter optimization.
  prefs: []
  type: TYPE_NORMAL
- en: '[**Hyperparameter optimization**](https://en.wikipedia.org/wiki/Hyperparameter_optimization) or
    tuning is the problem of choosing a set of optimal hyperparameters for a learning
    algorithm. A hyperparameter is a parameter whose value is used to control the
    learning process. By contrast, the values of other parameters are learned.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: We will use GridSearchCV from sklearn for choosing the best hyperparameters.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Now check what are the best parameters for our SVM algorithm
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '![Figure](../Images/359052faed330856fdc07ddf063a20de.png)'
  prefs: []
  type: TYPE_IMG
- en: Best hyperparameters
  prefs: []
  type: TYPE_NORMAL
- en: Now let's train our SVM classification model.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Its time for some predictions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Evaluating model performance:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Confusion matrix and visualize it using Heatmap.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '![Figure](../Images/e3361d5cfad812c5b4fada41c4eea144.png)'
  prefs: []
  type: TYPE_IMG
- en: Heatmap of the Confusion matrix
  prefs: []
  type: TYPE_NORMAL
- en: Well, this example goes to show that if you just predict that every patient
    has AML, you’ll be correct more often than wrong.
  prefs: []
  type: TYPE_NORMAL
- en: So our SVM classification model predicted the cancer patients with 67% accuracy
    which is of course not that good. What you can do is try different classifiers
    like Random forest, K-NN, Gradient Boosting, xgboost etc and compare the accuracies
    for each model.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: So in this article, we have seen how a classification ML algorithm can be used
    to predict cancer in a patient.
  prefs: []
  type: TYPE_NORMAL
- en: Ultimately I think for machine learning to really flourish, it's going to come
    down to better bioinformatics data. Heath and bioinformatics data right now have
    pretty poor statistical power. Either they usually have poor signal (genomics),
    high noise/bias (electronic health records), or smallish sample sizes.
  prefs: []
  type: TYPE_NORMAL
- en: Well, that is all for this article. I hope you guys have enjoyed reading it,
    please share your suggestions/views/questions in the comment section.
  prefs: []
  type: TYPE_NORMAL
- en: You can also reach me out over [LinkedIn](https://www.linkedin.com/in/nagesh-singh-chauhan-6936bb13b/?source=post_page---------------------------) for
    any query.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/577dd8c15d8c1f18d796f599f7595cb7.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Pic Credit](https://sighack.com/post/make-animated-gifs-in-processing)'
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading !!!
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Nagesh Singh Chauhan](https://www.linkedin.com/in/nagesh-singh-chauhan-6936bb13b/)**
    is a Data Science enthusiast. Interested in Big Data, Python, Machine Learning.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/explore-the-world-of-bioinformatics-with-machine-learning-47c62c482aaf).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[A Friendly Introduction to Support Vector Machines](/2019/09/friendly-introduction-support-vector-machines.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Classifying Heart Disease Using K-Nearest Neighbors](/2019/07/classifying-heart-disease-using-k-nearest-neighbors.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Image Segmentation with K-Means clustering](/2019/08/introduction-image-segmentation-k-means-clustering.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Best ETL Tools in 2021](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
