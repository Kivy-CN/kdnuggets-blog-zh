- en: 'R vs Python (Again): A Human Factor Perspective'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: R 与 Python（再论）：一种人为因素的视角
- en: 原文：[https://www.kdnuggets.com/2022/01/r-python-human-factor-perspective.html](https://www.kdnuggets.com/2022/01/r-python-human-factor-perspective.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2022/01/r-python-human-factor-perspective.html](https://www.kdnuggets.com/2022/01/r-python-human-factor-perspective.html)
- en: '![R vs Python (Again): A Human Factor Perspective](../Images/b7672ac69a5bb40ffca47deb2841af0b.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![R 与 Python（再论）：一种人为因素的视角](../Images/b7672ac69a5bb40ffca47deb2841af0b.png)'
- en: Image by the author based on the image by [OpenClipart-Vectors](https://pixabay.com/users/openclipart-vectors-30363/)
    on [pixabay](https://pixabay.com/)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图像由作者根据 [OpenClipart-Vectors](https://pixabay.com/users/openclipart-vectors-30363/)
    在 [pixabay](https://pixabay.com/) 的图像制作
- en: I often hear or read things that say in essence "R is good for quick and dirty
    analyses, but if you want to do serious work you should use Python". I completely
    disagree with this statement, as it is absolutely possible to write efficient,
    reliable, robust, production-quality code in R - I have done it, so others can
    do it, too. When comparing two languages, you can think about their intrinsic
    qualities, like language constructs, syntax, functions, and available libraries.
    But you can also employ a more empirical approach, mentally visualizing at a high
    speed all the examples of the code written in either of the two languages that
    you have encountered. And then, I am willing to admit that, if you rephrase the
    above statement in ''the average Python code is of higher quality than the average
    R code", there might be some truth in it, and it can be explained by the "human
    factor".
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我经常听到或看到类似的说法：“R 适合快速且粗糙的分析，但如果你想做严肃的工作，你应该使用 Python。” 我完全不同意这种说法，因为在 R 中编写高效、可靠、稳健、生产级别的代码是完全可能的——我做到了，所以其他人也可以做到。当比较两种语言时，你可以考虑它们的内在特性，比如语言结构、语法、函数和可用的库。但你也可以采用一种更为经验的方法，快速地在脑中回忆你遇到过的用这两种语言编写的所有代码示例。然后，我愿意承认，如果你将上述说法重新表述为“平均而言，Python
    代码的质量高于平均 R 代码”，这可能有一些道理，这可以通过“人为因素”来解释。
- en: '**Disclaimer:**'
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**免责声明：**'
- en: ''
  id: totrans-6
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This opinion is obviously not based on a rigorous scientific approach, in the
    sense that it is not based on objective data, as such data is not (and I think
    can't be) available. Indeed, we don't have access to all Python/R code that has
    ever been created (nor that has been created let's say last year), nor to a representative
    sample of such code. We also don't have access to the educational background and
    professional profile of all Python/R users, nor to their representative sample.
    And even if we had such data, it would be extremely difficult to define an average
    piece of Python/R code and to assess its quality. So it is based solely on my
    subjective but honest appreciation of the situation.
  id: totrans-7
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这种观点显然不是基于严谨的科学方法，因为它不是基于客观数据的，因为这些数据并不存在（我认为也无法获得）。确实，我们无法获取所有曾经创建的 Python/R
    代码（也不能获取去年创建的代码），也无法获取这类代码的代表性样本。我们也没有所有 Python/R 用户的教育背景和职业资料，也没有他们的代表性样本。即使我们拥有这些数据，定义一个平均的
    Python/R 代码并评估其质量也将极其困难。所以这仅仅是基于我对情况的主观但诚实的评价。
- en: Read on to find out more.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读更多内容。
- en: About code quality
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于代码质量
- en: Although there is no universal definition or measure of the code quality, it
    is generally admitted that the good code should be readable (well documented,
    follow a consistent style, …), modular, reusable, reliable, testable, and of course,
    do what it is intended to do. It should also efficiently use the computing resources
    (memory, CPU) and the time resource, i.e., be reasonably fast.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然没有普遍适用的代码质量定义或测量标准，但普遍承认，好的代码应该是可读的（文档齐全，风格一致等）、模块化、可重用、可靠、可测试，并且能够完成预期的功能。它还应该高效地使用计算资源（内存、CPU）和时间资源，即运行速度要合理。
- en: '**Note:**'
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意：**'
- en: ''
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Code is only a part of the software, there's also the algorithm that code implements.
    Whatever programming language you use and even if you respect the above code quality
    requirements, the software that's algorithmically inefficient is not good software.
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 代码只是软件的一部分，还有代码实现的算法。无论你使用什么编程语言，即使你遵守上述代码质量要求，算法效率低的软件也不是好的软件。
- en: Typical R User Profile
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 典型的 R 用户画像
- en: '**Background**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**背景**'
- en: Most R users come from a scientific background. They are often self-thought
    R programmers (Google and YouTube are the most important R tutors!), and even
    if they had formal training in R, it was probably quite minimal and most likely
    embedded in a statistics class (exception made of professional statisticians and
    data scientists). Also, they were likely not exposed to general computer science
    training and concepts, and therefore are not familiar with good coding practices.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 R 用户来自科学背景。他们通常是自学的 R 程序员（Google 和 YouTube 是最重要的 R 教学资源！），即使他们接受过正式的 R 培训，这种培训也很可能相当有限，并且很可能是在统计学课程中（专业统计学家和数据科学家除外）。此外，他们可能没有接受过一般计算机科学培训和概念，因此不熟悉良好的编码实践。
- en: '**Usage**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用情况**'
- en: R is generally used as an auxiliary tool to accomplish their main job - do research.
    So what counts is to get the job done - analyze the data, produce tables and charts
    for the Ph.D. thesis, journal or conference paper, or project report for the funding
    agency. As a consequence, the code developed is a single-use, throwaway software.
    Documentation or coding style is not an issue, spaghetti-style single scripts
    instead of modular code are frequent, not to mention the hard-coded file paths
    and other parameters which destroy any hope for the reuse of the code. Code is
    in general run interactively by the author, and if an error occurs it is hot-fixed
    at the spot, so, of course, there's no provision for proper error handling. If
    the code runs today on my computer and on my data set, then I'm happy, and I have
    done my job! But we shouldn't blame them (at least not too much) - their job is
    to produce scientific results, not the efficient and high-quality computer code.
    It is sure that writing quality code is not that difficult once you get used to
    it, and even if the code was intended to be single-use, parts of it could probably
    be reused on other occasions, but low code quality makes the task almost impossible.
    All this considered, we can argue that the "average" R code will most often **not
    meet** the high-quality coding standards.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: R 通常作为辅助工具来完成他们的主要工作——进行研究。因此，重要的是完成工作——分析数据，为博士论文、期刊或会议论文，或资助机构的项目报告制作表格和图表。因此，开发的代码是一次性的、临时的软件。文档或编码风格不是问题，频繁出现的是意大利面条风格的单一脚本而非模块化代码，更不用说硬编码的文件路径和其他参数，这破坏了代码复用的任何希望。代码通常由作者交互式运行，如果发生错误，会立即修复，因此当然没有适当的错误处理。如果代码今天在我的计算机和数据集上运行，那我就满意了，我完成了我的工作！但我们不应过于责怪他们——他们的工作是产生科学结果，而不是高效和高质量的计算机代码。可以肯定的是，一旦习惯了，编写高质量代码并不难，即使代码本意是一次性的，但其中的一些部分可能在其他场合被重复使用，但低质量的代码使得这个任务几乎不可能完成。考虑到所有这些，我们可以说，“普通”
    R 代码大多**不符合**高质量编码标准。
- en: The notable exception is again professional statisticians and data scientists,
    for whom producing code can be considered as a part of their main task - developing
    statistical and machine-learning methodology and tools, and therefore they often
    produce good quality code made available as R packages on CRAN and other repositories.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 显著的例外再次是专业统计学家和数据科学家，对于他们来说，编写代码可以被视为他们主要任务的一部分——开发统计学和机器学习方法及工具，因此他们常常生产高质量的代码，并在
    CRAN 和其他仓库中提供 R 包。
- en: Typical Python User Profile
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 典型的 Python 用户画像
- en: '**Background**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**背景**'
- en: Most Python users come from a computing background. Python is often used at
    universities as a tool to introduce computer science concepts ([https://www.edx.org/learn/python](https://www.edx.org/learn/python)).
    Even if they didn't graduate in computer science, Python users probably had some
    formal training in Python programming, as this was a requirement for them to get
    the job. Also, even if they didn't initially study computer science, they likely
    had some formal training in general computer science, besides Python programming,
    and are familiar with good coding practices.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 Python 用户来自计算背景。Python 通常被用作大学介绍计算机科学概念的工具 ([https://www.edx.org/learn/python](https://www.edx.org/learn/python))。即使他们没有计算机科学的学位，Python
    用户可能也接受过一些正式的 Python 编程培训，因为这是一项工作要求。此外，即使他们最初没有学习计算机科学，他们也很可能接受过一般计算机科学的正式培训，除了
    Python 编程之外，并且熟悉良好的编码实践。
- en: '**Usage**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用情况**'
- en: Python is generally used by software developers - people whose main task is
    to produce code. The code is intended to be run many times, on different computers
    (and possibly even operating systems), and on many different data sets. The code
    tends to be robust and reliable, copes with exceptional situations, and gracefully
    handles errors. It is also expected that the code will have to be maintained,
    possibly by other people (bug correction, adaptation, evolution), so the notions
    of documentation, style, readability, reuse become naturally a part of the development
    process. All this considered, we can argue that the "average" Python code will
    most often **meet** the high-quality coding standards.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Python 通常由软件开发人员使用——这些人的主要任务是编写代码。代码的目的是多次运行，在不同的计算机（甚至可能是不同的操作系统）上运行，并处理许多不同的数据集。代码通常是稳健和可靠的，能够处理异常情况，并优雅地处理错误。还期望代码需要维护，可能由其他人进行（修复错误、适应、演变），因此文档、风格、可读性、重用等概念自然成为开发过程的一部分。考虑到这一点，我们可以认为“普通”Python代码往往会**符合**高质量的编码标准。
- en: Conclusion
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: In this post, I have tried to explore the hypothesis about the origins of the
    belief that Python is more suitable than R for writing production-quality code.
    I don't think that it comes from the intrinsic characteristics of the two languages
    and their ecosystems. I suppose that it rather comes from the fact that average
    R users are probably less concerned by the code quality than their Python counterparts,
    which can be explained by their background and the place programming occupies
    in their respective jobs.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我尝试探讨有关Python是否比R更适合编写生产级代码的信念来源的假设。我认为这种信念并不来自于两种语言及其生态系统的固有特性。我猜这更可能来自于普通R用户可能对代码质量的关注程度低于Python用户，这可以通过他们的背景和编程在各自工作中的地位来解释。
- en: And, of course, the final conclusion is that the belief that Python is superior
    to R for writing quality code is wrong!
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，最终的结论是，认为Python在编写高质量代码方面优于R的信念是错误的！
- en: '**[Zivan Karaman](https://www.linkedin.com/in/zivankaraman/)** is a freelance
    data science & software engineering consultant, passionate about using mathematics,
    statistics, and computing to transform the data into actionable insights that
    can help solve real-world problems. Particularly fond of the R ecosystem has been
    using it even before it was created (using R ancestor S/S+ since the early 90s).
    [Connect with him on LinkedIn](https://www.linkedin.com/in/zivankaraman/).'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Zivan Karaman](https://www.linkedin.com/in/zivankaraman/)** 是一位自由的数据科学与软件工程顾问，热衷于利用数学、统计学和计算来将数据转化为可操作的见解，以帮助解决实际问题。特别钟爱R生态系统，早在R创建之前就已经使用（自90年代初期开始使用R的前身S/S+）。
    [在LinkedIn上与他联系](https://www.linkedin.com/in/zivankaraman/).'
- en: '* * *'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的IT'
- en: '* * *'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Explainable Forecasting and Nowcasting with State-of-the-art Deep…](https://www.kdnuggets.com/2021/12/sota-explainable-forecasting-and-nowcasting.html)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[最先进的深度学习解释性预测和实时预测](https://www.kdnuggets.com/2021/12/sota-explainable-forecasting-and-nowcasting.html)'
- en: '[Cloud ML In Perspective: Surprises of 2021, Projections for 2022](https://www.kdnuggets.com/2021/12/cloud-ml-perspective-surprises-2021-projections-2022.html)'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[云机器学习透视：2021年的惊喜和2022年的预测](https://www.kdnuggets.com/2021/12/cloud-ml-perspective-surprises-2021-projections-2022.html)'
- en: '[If I Had To Start Learning Data Science Again, How Would I Do It?](https://www.kdnuggets.com/2020/08/start-learning-data-science-again.html)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如果我需要重新开始学习数据科学，我会怎么做？](https://www.kdnuggets.com/2020/08/start-learning-data-science-again.html)'
- en: '[There and Back Again… a RAPIDS Tale](https://www.kdnuggets.com/2023/06/back-again-rapids-tale.html)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[去而复返……一则RAPIDS故事](https://www.kdnuggets.com/2023/06/back-again-rapids-tale.html)'
- en: '[LSTMs Rise Again: Extended-LSTM Models Challenge the Transformer…](https://www.kdnuggets.com/lstms-rise-again-extended-lstm-models-challenge-the-transformer-superiority)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[LSTMs 再度崛起：扩展-LSTM 模型挑战 Transformer 的优越性…](https://www.kdnuggets.com/lstms-rise-again-extended-lstm-models-challenge-the-transformer-superiority)'
- en: '[The Gap Between Deep Learning and Human Cognitive Abilities](https://www.kdnuggets.com/2022/10/gap-deep-learning-human-cognitive-abilities.html)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[深度学习与人类认知能力之间的差距](https://www.kdnuggets.com/2022/10/gap-deep-learning-human-cognitive-abilities.html)'
