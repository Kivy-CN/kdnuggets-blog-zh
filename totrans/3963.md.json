["```py\npip install pandas numpy\n```", "```py\nimport numpy as np\nimport pandas as pd\n\nnp_array= np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\npandas_df = pd.DataFrame(np_array, columns=['A', 'B', 'C'])\n\nprint(np_array)\nprint(pandas_df)\n```", "```py\nOutput>>\n[[1 2 3]\n [4 5 6]\n [7 8 9]]\n   A  B  C\n0  1  2  3\n1  4  5  6\n2  7  8  9\n```", "```py\ndf = pd.DataFrame({\n    'A': [1, 2, np.nan, 4, 5],\n    'B': [5, np.nan, np.nan, 3, 2],\n    'C': [1, 2, 3, np.nan, 5]\n})\nprint(df)\n```", "```py\nOutput>>\n    A    B    C\n0  1.0  5.0  1.0\n1  2.0  NaN  2.0\n2  NaN  NaN  3.0\n3  4.0  3.0  NaN\n4  5.0  2.0  5.0\n```", "```py\ndf.isnull().sum() \n```", "```py\nOutput>>\nA    1\nB    2\nC    1\ndtype: int64\n```", "```py\ndf['A'] = df['A'].replace('missing data'', np.nan)\n```", "```py\ndf = pd.DataFrame({\n    'A': np.random.normal(0, 1, 1000),\n    'B': np.random.normal(0, 1, 1000)\n})\n\ndf.loc[10, 'A'] = 100\ndf.loc[25, 'B'] = -100\n\ndef detect_outliers(data, threshold=3):\n    z_scores = np.abs((data - data.mean()) / data.std())\n    return z_scores > threshold\n\noutliers = detect_outliers(df)\nprint(df[outliers.any(axis =1)])\n```", "```py\nOutput>>\n            A           B\n10  100.000000    0.355967\n25    0.239933 -100.000000\n```", "```py\ndf = pd.DataFrame({\n    'Category': [np.random.choice(['A', 'B']) for i in range(100)],\n    'Values': np.random.rand(100)\n})\n\nprint(df.groupby('Category')['Values'].agg([np.mean, np.std, np.min, np.max]))\n```", "```py\nOutput>>\n             mean       std      amin      amax\nCategory                                        \nA         0.524568  0.288471  0.025635  0.999284\nB         0.525937  0.300526  0.019443  0.999090\n```", "```py\ndata = {'A': [15,20,25,30,35], 'B': [10, 20, 30, 40, 50]}\n\ndf = pd.DataFrame(data)\ndf['C'] = np.add(df['A'], df['B'])  \n\nprint(df)\n```", "```py\nOutput>>\n   A   B   C\n0  15  10  25\n1  20  20  40\n2  25  30  55\n3  30  40  70\n4  35  50  85\n```", "```py\ndf['B_exp'] = np.exp(df['B'])\nprint(df)\n```", "```py\nOutput>>\n   A   B   C         B_exp\n0  15  10  25  2.202647e+04\n1  20  20  40  4.851652e+08\n2  25  30  55  1.068647e+13\n3  30  40  70  2.353853e+17\n4  35  50  85  5.184706e+21\n```", "```py\ndf['A_replaced'] = np.where(df['A'] > 20, df['B'] * 2, df['B'] / 2)\nprint(df)\n```", "```py\nOutput>>\n   A   B   C         B_exp  A_replaced\n0  15  10  25  2.202647e+04         5.0\n1  20  20  40  4.851652e+08        10.0\n2  25  30  55  1.068647e+13        60.0\n3  30  40  70  2.353853e+17        80.0\n4  35  50  85  5.184706e+21       100.0\n```"]