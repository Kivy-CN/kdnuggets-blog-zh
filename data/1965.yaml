- en: How To Create Minimal Docker Images for Python Applications
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何为 Python 应用创建最小的 Docker 镜像
- en: 原文：[https://www.kdnuggets.com/how-to-create-minimal-docker-images-for-python-applications](https://www.kdnuggets.com/how-to-create-minimal-docker-images-for-python-applications)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/how-to-create-minimal-docker-images-for-python-applications](https://www.kdnuggets.com/how-to-create-minimal-docker-images-for-python-applications)
- en: '![How To Create Minimal Docker Images for Python Applications](../Images/ae992706a0204663973d2080d2e67d71.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![如何为 Python 应用创建最小的 Docker 镜像](../Images/ae992706a0204663973d2080d2e67d71.png)'
- en: Image by Editor | Midjourney & Canva
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源 | Midjourney & Canva
- en: Creating minimal Docker images for Python apps enhances security by reducing
    the attack surface, facilitates faster image builds, and improves overall application
    maintainability. Let’s learn how to create minimal Docker images for Python applications.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 为 Python 应用创建最小的 Docker 镜像可以通过减少攻击面来提高安全性，加快镜像构建速度，并改善整体应用程序的可维护性。让我们来学习如何为
    Python 应用创建最小的 Docker 镜像。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全领域。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织在 IT 领域'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Prerequisites
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 先决条件
- en: 'Before you get started:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在你开始之前：
- en: You should have Docker installed. [Get Docker](https://docs.docker.com/get-docker/)
    for your operating system if you haven’t already.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该安装了 Docker。如果还没有，请[获取 Docker](https://docs.docker.com/get-docker/)以适应你的操作系统。
- en: A sample Python application you need to build the minimal image for. You can
    also follow along with the [example app](https://github.com/balapriyac/data-science-tutorials/tree/main/docker/minimal-img-python-apps)
    we create.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你需要为最小镜像构建的示例 Python 应用。你也可以跟随我们创建的[示例应用](https://github.com/balapriyac/data-science-tutorials/tree/main/docker/minimal-img-python-apps)。
- en: Create a Sample Python Application
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个示例 Python 应用
- en: Let's create a simple Flask application for inventory management. This application
    will allow you to add, view, update, and delete inventory items. We'll then dockerize
    the application using the standard Python 3.11 image.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个简单的 Flask 应用用于库存管理。这个应用允许你添加、查看、更新和删除库存项目。然后我们将使用标准的 Python 3.11 镜像将应用
    Docker 化。
- en: 'In your project directory, you should have app.py, requirements.txt, and Dockerfile:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的项目目录中，你应该有 app.py、requirements.txt 和 Dockerfile：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here’s the code for the Flask app for inventory management:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是用于库存管理的 Flask 应用的代码：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This is a minimal Flask application that implements basic CRUD (Create, Read,
    Update, Delete) operations for an in-memory inventory database. It uses Flask
    to create a web server that listens for HTTP requests on port 5000\. When a request
    is received:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个最小的 Flask 应用，实现了基本的 CRUD（创建、读取、更新、删除）操作，用于内存中的库存数据库。它使用 Flask 创建一个 web 服务器，监听端口
    5000 上的 HTTP 请求。当收到请求时：
- en: For a POST request to `/inventory`, it adds a new item to the inventory.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 POST 请求 `/inventory`，它将新项目添加到库存中。
- en: For a GET request to `/inventory/<item_id>`, it retrieves the item with the
    specified ID from the inventory.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 GET 请求 `/inventory/<item_id>`，它从库存中检索具有指定 ID 的项目。
- en: For a PUT request to `/inventory/<item_id>`, it updates the item with the specified
    ID in the inventory.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 PUT 请求 `/inventory/<item_id>`，它更新库存中具有指定 ID 的项目。
- en: For a DELETE request to `/inventory/<item_id>`, it deletes the item with the
    specified ID from the inventory.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 DELETE 请求 `/inventory/<item_id>`，它从库存中删除具有指定 ID 的项目。
- en: 'Now create the requirements.txt file:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在创建 requirements.txt 文件：
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Next create the Dockerfile:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来创建 Dockerfile：
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Finally build the image (we use the tag `full` to identify that this uses the
    default Python image):'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 最后构建镜像（我们使用标签`full`来标识这是使用默认 Python 镜像的）：
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Once the build is complete you can run the `docker images` command:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 构建完成后，你可以运行`docker images`命令：
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You’ll see that this super simple app is about 1.02 GB in size. Well, this is
    because the base image we used the default Python 3.11 image has a large number
    of Debian packages and is about 1.01 GB in size. **So we need to find a smaller
    base image.**
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你会发现这个超级简单的应用大约有 1.02 GB 大小。这是因为我们使用的默认 Python 3.11 镜像包含了大量的 Debian 包，大小约为 1.01
    GB。**所以我们需要找到一个更小的基础镜像。**
- en: 'Well, here are the options:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，这里是选项：
- en: '`python:version-alpine` images are based on Alpine Linux and will give you
    the smallest final image. But you need to be able to install packages as well,
    yes? But that’s a challenge with alpine images.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`python:version-alpine` 镜像基于 Alpine Linux，会给你最小的最终镜像。但你需要能够安装包，对吧？不过，这在 Alpine
    镜像中是个挑战。'
- en: '`python:version-slim` comes with the minimal number of Debian packages needed
    to run Python. And you’ll (almost always) be able to install most required Python
    packages with `pip`.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`python:version-slim` 带有运行 Python 所需的最少 Debian 包。你（几乎总是）能够使用 `pip` 安装大多数所需的
    Python 包。'
- en: So your base image should be small. But not too small that you face compatibility
    issues and wrap your head around installing dependencies (quite common for Python
    applications). That’s why we’ll use the `python:3.11-slim` base image in the next
    step and build our image.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你的基础镜像应该足够小，但也不要小到遇到兼容性问题或者在安装依赖项时绞尽脑汁（这在 Python 应用中很常见）。这就是为什么我们在下一步将使用 `python:3.11-slim`
    基础镜像并构建我们的镜像。
- en: '![base-image](../Images/ceb96d9bfe9d23b760c9d28c4fd47030.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![base-image](../Images/ceb96d9bfe9d23b760c9d28c4fd47030.png)'
- en: Choosing the Optimal Base Image | Image by Author
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 选择最佳基础镜像 | 作者图片
- en: Use the Slim Python Base Image
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Slim Python 基础镜像
- en: 'Now rewrite the Dockerfile to use the `python:3.11-slim` base image like so:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将 Dockerfile 重写为使用 `python:3.11-slim` 基础镜像，如下所示：
- en: '[PRE6]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Let’s build the image (tagged `slim`):'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们构建镜像（标记为 `slim`）：
- en: '[PRE7]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The `python:3.11-slim` base image is of size 131 MB. And the `inventory-app:slim`
    image is around 146 MB which is much smaller than the 1.02GB image we had earlier:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`python:3.11-slim` 基础镜像的大小为 131 MB。而 `inventory-app:slim` 镜像的大小约为 146 MB，比我们之前的
    1.02 GB 镜像小得多：'
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: You can also use multi-stage builds to make the final image smaller. But that's
    for another tutorial!
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用多阶段构建来使最终镜像更小。但那是另一个教程的内容！
- en: Additional Resources
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 额外资源
- en: 'Here are a few useful resources:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些有用的资源：
- en: '[Containerize Python Apps with Docker in 5 Easy Steps](https://www.kdnuggets.com/containerize-python-apps-with-docker-in-5-easy-steps)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Docker 在 5 个简单步骤中容器化 Python 应用](https://www.kdnuggets.com/containerize-python-apps-with-docker-in-5-easy-steps)'
- en: '[python - Official Image | Docker Hub](https://hub.docker.com/_/python)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[python - 官方镜像 | Docker Hub](https://hub.docker.com/_/python)'
- en: '[Differences Between Standard Docker Images and Alpine \ Slim Versions](https://forums.docker.com/t/differences-between-standard-docker-images-and-alpine-slim-versions/134973)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[标准 Docker 镜像与 Alpine \ Slim 版本之间的差异](https://forums.docker.com/t/differences-between-standard-docker-images-and-alpine-slim-versions/134973)'
- en: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)****
    is a developer and technical writer from India. She likes working at the intersection
    of math, programming, data science, and content creation. Her areas of interest
    and expertise include DevOps, data science, and natural language processing. She
    enjoys reading, writing, coding, and coffee! Currently, she''s working on learning
    and sharing her knowledge with the developer community by authoring tutorials,
    how-to guides, opinion pieces, and more. Bala also creates engaging resource overviews
    and coding tutorials.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)**
    是来自印度的开发者和技术作家。她喜欢在数学、编程、数据科学和内容创作的交汇点上工作。她的兴趣和专长领域包括 DevOps、数据科学和自然语言处理。她喜欢阅读、写作、编程和喝咖啡！目前，她正在通过撰写教程、操作指南、评论文章等与开发者社区分享她的知识。Bala
    还创建引人入胜的资源概述和编码教程。'
- en: More On This Topic
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Create a Dashboard Using Python and Dash](https://www.kdnuggets.com/2023/08/create-dashboard-python-dash.html)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 和 Dash 创建仪表盘](https://www.kdnuggets.com/2023/08/create-dashboard-python-dash.html)'
- en: '[How To Create Custom Context Managers in Python](https://www.kdnuggets.com/how-to-create-custom-context-managers-in-python)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何在 Python 中创建自定义上下文管理器](https://www.kdnuggets.com/how-to-create-custom-context-managers-in-python)'
- en: '[Containerize Python Apps with Docker in 5 Easy Steps](https://www.kdnuggets.com/containerize-python-apps-with-docker-in-5-easy-steps)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Docker 在 5 个简单步骤中容器化 Python 应用](https://www.kdnuggets.com/containerize-python-apps-with-docker-in-5-easy-steps)'
- en: '[Best Python Tools for Building Generative AI Applications Cheat Sheet](https://www.kdnuggets.com/2023/08/best-python-tools-generative-ai-cheat-sheet.html)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[构建生成性AI应用程序的最佳Python工具备忘单](https://www.kdnuggets.com/2023/08/best-python-tools-generative-ai-cheat-sheet.html)'
- en: '[How to Create a Sampling Plan for Your Data Project](https://www.kdnuggets.com/2022/11/create-sampling-plan-data-project.html)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何为您的数据项目创建采样计划](https://www.kdnuggets.com/2022/11/create-sampling-plan-data-project.html)'
- en: '[How to Create a Dataset for Machine Learning](https://www.kdnuggets.com/2022/02/create-dataset-machine-learning.html)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何为机器学习创建数据集](https://www.kdnuggets.com/2022/02/create-dataset-machine-learning.html)'
