- en: 'Solving 5 Complex SQL Problems: Tricky Queries Explained'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决5个复杂SQL问题：棘手的查询解析
- en: 原文：[https://www.kdnuggets.com/2022/07/5-hardest-things-sql.html](https://www.kdnuggets.com/2022/07/5-hardest-things-sql.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2022/07/5-hardest-things-sql.html](https://www.kdnuggets.com/2022/07/5-hardest-things-sql.html)
- en: '![The 5 Hardest Things to do in SQL](../Images/fa67cdf461a14281ea03e090313dda28.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![在SQL中最难做的5件事](../Images/fa67cdf461a14281ea03e090313dda28.png)'
- en: Image by Editor
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑器提供的图片
- en: Many of us have experienced the core power of speed and efficiency delivered
    by centralizing compute within the Cloud Data Warehouse. While this is true, many
    of us have also realized that, like with anything, this value comes with its own
    set of downsides.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们许多人都体验过将计算集中在云数据仓库中带来的速度和效率的核心优势。虽然这确实如此，但我们也意识到，就像任何事情一样，这种价值也伴随着自己的缺点。
- en: One of the primary drawbacks of this approach is that you must learn and execute
    queries in different languages, specifically SQL. While writing SQL is faster
    and less expensive than standing up a secondary infrastructure to run python (on
    your laptop or in-office servers), it comes with many different complexities depending
    on what information the data analyst wants to extract from the cloud warehouse.
    The switch over to cloud data warehouses increases the utility of complex SQL
    versus python. Having been through this experience myself, I decided to record
    the specific transformations that are the most painful to learn and perform in
    SQL and provide the actual SQL needed to alleviate some of this pain for my readers.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法的主要缺点之一是你必须学习和执行不同语言的查询，特别是SQL。虽然编写SQL比建立一个运行python的辅助基础设施（在你的笔记本电脑或办公室服务器上）更快、更便宜，但它带来了许多复杂性，具体取决于数据分析师希望从云数据仓库中提取什么信息。转向云数据仓库增加了复杂SQL相较于python的实用性。经历了这一过程后，我决定记录那些在SQL中最难学和执行的具体转换，并提供缓解这些痛苦所需的实际SQL。
- en: To aid in your workflow, you’ll notice that I provide examples of the data structure
    before and after the transform is executed, so you can follow along and validate
    your work. I have also provided the actual SQL needed to perform each of the 5
    hardest transformations. You’ll need new SQL to perform the transformation across
    multiple projects as your data changes. We’ve provided links to dynamic SQL for
    each transformation so you can continue to capture the SQL needed for your analysis
    on an as needed basis!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助你的工作流程，你会注意到我在转换执行前后提供了数据结构示例，这样你可以跟随并验证你的工作。我还提供了进行这5个最难转换所需的实际SQL。你需要新的SQL来执行多个项目的转换，因为你的数据会变化。我们提供了每个转换的动态SQL链接，以便你可以根据需要继续捕获分析所需的SQL！
- en: Date Spines
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 日期脊
- en: It is not clear where the term date spine originated, but even those who don’t
    know the term are probably familiar with what it is.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 术语“日期脊”来源不明确，但即使是不知道这个术语的人，也可能对它的概念很熟悉。
- en: 'Imagine you are analyzing your daily sales data, and it looks like this:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下你正在分析每日销售数据，它看起来像这样：
- en: '| sales_date | product | sales |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| sales_date | product | sales |'
- en: '| 2022-04-14 | A | 46 |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-14 | A | 46 |'
- en: '| 2022-04-14 | B | 409 |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-14 | B | 409 |'
- en: '| 2022-04-15 | A | 17 |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-15 | A | 17 |'
- en: '| 2022-04-15 | B | 480 |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-15 | B | 480 |'
- en: '| 2022-04-18 | A | 65 |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-18 | A | 65 |'
- en: '| 2022-04-19 | A | 45 |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-19 | A | 45 |'
- en: '| 2022-04-19 | B | 411 |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-19 | B | 411 |'
- en: No sales happened on the 16th and 17th, so the rows are completely missing.
    If we were trying to calculate *average daily sales*, or build a time series forecast
    model, this format would be a major problem. What we need to do is insert rows
    for the missing days.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 16号和17号没有销售，因此这些行完全缺失。如果我们尝试计算*平均每日销售额*或构建时间序列预测模型，这种格式将是一个主要问题。我们需要做的是插入缺失日期的行。
- en: 'Here is the basic concept:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这是基本概念：
- en: Generate or select unique dates
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成或选择唯一日期
- en: Generate or select unique products
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成或选择唯一产品
- en: Cross Join (cartesian product) all combinations of 1&2
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 交叉连接（笛卡尔积）1和2的所有组合
- en: 'Outer Join #3 to your original data'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '外连接 #3 到你的原始数据'
- en: '[Customizable SQL for Datespine](https://app.rasgoml.com/sql?transformName=%22datespine_groups%22&tableState=%7B%22tables%22%3A%5B%7B%22name%22%3A%22My_First_Table%22%2C%22columns%22%3A%5B%7B%22name%22%3A%22sales_date%22%2C%22dataType%22%3A%22date%22%7D%2C%7B%22name%22%3A%22product%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22sales%22%2C%22dataType%22%3A%22number%22%7D%5D%7D%5D%2C%22baseTableName%22%3A%22My_First_Table%22%2C%22ddl%22%3A%22%22%7D&formState=%7B%22arguments%22%3A%7B%22group_by%22%3A%7B%22argType%22%3A%22column_list%22%2C%22cols%22%3A%5B%7B%22id%22%3A1%2C%22columnName%22%3A%22product%22%2C%22displayName%22%3A%22product%22%2C%22dataType%22%3A%22string%22%2C%22dwColumnId%22%3A1%7D%5D%7D%2C%22date_col%22%3A%7B%22argType%22%3A%22column%22%2C%22col%22%3A%7B%22id%22%3A0%2C%22columnName%22%3A%22sales_date%22%2C%22displayName%22%3A%22sales_date%22%2C%22dataType%22%3A%22date%22%2C%22dwColumnId%22%3A0%7D%7D%2C%22start_timestamp%22%3A%7B%22argType%22%3A%22timestamp%22%2C%22value%22%3A%222020-01-01T00%3A00%22%7D%2C%22end_timestamp%22%3A%7B%22argType%22%3A%22timestamp%22%2C%22value%22%3A%222023-01-01T00%3A00%22%7D%2C%22interval_type%22%3A%7B%22argType%22%3A%22date_part%22%2C%22value%22%3A%22day%22%7D%2C%22group_bounds%22%3A%7B%22argType%22%3A%22value%22%2C%22value%22%3A%22mixed%22%7D%7D%2C%22transformName%22%3A%22datespine_groups%22%7D)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[可定制的日期脊柱SQL](https://app.rasgoml.com/sql?transformName=%22datespine_groups%22&tableState=%7B%22tables%22%3A%5B%7B%22name%22%3A%22My_First_Table%22%2C%22columns%22%3A%5B%7B%22name%22%3A%22sales_date%22%2C%22dataType%22%3A%22date%22%7D%2C%7B%22name%22%3A%22product%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22sales%22%2C%22dataType%22%3A%22number%22%7D%5D%7D%5D%2C%22baseTableName%22%3A%22My_First_Table%22%2C%22ddl%22%3A%22%22%7D&formState=%7B%22arguments%22%3A%7B%22group_by%22%3A%7B%22argType%22%3A%22column_list%22%2C%22cols%22%3A%5B%7B%22id%22%3A1%2C%22columnName%22%3A%22product%22%2C%22displayName%22%3A%22product%22%2C%22dataType%22%3A%22string%22%2C%22dwColumnId%22%3A1%7D%5D%7D%2C%22date_col%22%3A%7B%22argType%22%3A%22column%22%2C%22col%22%3A%7B%22id%22%3A0%2C%22columnName%22%3A%22sales_date%22%2C%22displayName%22%3A%22sales_date%22%2C%22dataType%22%3A%22date%22%2C%22dwColumnId%22%3A0%7D%7D%2C%22start_timestamp%22%3A%7B%22argType%22%3A%22timestamp%22%2C%22value%22%3A%222020-01-01T00%3A00%22%7D%2C%22end_timestamp%22%3A%7B%22argType%22%3A%22timestamp%22%2C%22value%22%3A%222023-01-01T00%3A00%22%7D%2C%22interval_type%22%3A%7B%22argType%22%3A%22date_part%22%2C%22value%22%3A%22day%22%7D%2C%22group_bounds%22%3A%7B%22argType%22%3A%22value%22%2C%22value%22%3A%22mixed%22%7D%7D%2C%22transformName%22%3A%22datespine_groups%22%7D)'
- en: 'The end result will look like this:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 最终结果将如下所示：
- en: '| sales_date | product | sales |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| sales_date | product | sales |'
- en: '| 2022-04-14 | A | 46 |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-14 | A | 46 |'
- en: '| 2022-04-14 | B | 409 |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-14 | B | 409 |'
- en: '| 2022-04-15 | A | 17 |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-15 | A | 17 |'
- en: '| 2022-04-15 | B | 480 |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-15 | B | 480 |'
- en: '| 2022-04-16 | A | 0 |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-16 | A | 0 |'
- en: '| 2022-04-16 | B | 0 |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-16 | B | 0 |'
- en: '| 2022-04-17 | A | 0 |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-17 | A | 0 |'
- en: '| 2022-04-17 | B | 0 |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-17 | B | 0 |'
- en: '| 2022-04-18 | A | 65 |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-18 | A | 65 |'
- en: '| 2022-04-18 | B | 0 |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-18 | B | 0 |'
- en: '| 2022-04-19 | A | 45 |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-19 | A | 45 |'
- en: '| 2022-04-19 | B | 411 |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 2022-04-19 | B | 411 |'
- en: Pivot / Unpivot
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pivot / Unpivot
- en: Sometimes, when doing an analysis, you want to restructure the table. For instance,
    we might have a list of students, subjects, and grades, but we want to break out
    subjects into each column. We all know and love Excel because of its pivot tables.
    But have you ever tried to do it in SQL? Not only does every database have annoying
    differences in how PIVOT is supported, but the syntax is unintuitive and easily
    forgettable.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，在进行分析时，你可能需要重新构建表格。例如，我们可能有一个学生、科目和成绩的列表，但我们想将科目拆分到每一列。我们都知道并喜欢Excel的**数据透视表**。但你是否尝试过在SQL中实现它？不仅每个数据库在如何支持PIVOT方面有令人烦恼的差异，而且语法也不直观，容易忘记。
- en: 'Before:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 之前：
- en: '| Student | Subject | Grade |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 学生 | 科目 | 成绩 |'
- en: '| Jared | Mathematics | 61 |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| Jared | 数学 | 61 |'
- en: '| Jared | Geography | 94 |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| Jared | 地理 | 94 |'
- en: '| Jared | Phys Ed | 98 |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| Jared | 体育 | 98 |'
- en: '| Patrick | Mathematics | 99 |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| Patrick | 数学 | 99 |'
- en: '| Patrick | Geography | 93 |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| Patrick | 地理 | 93 |'
- en: '| Patrick | Phys Ed | 4 |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| Patrick | 体育 | 4 |'
- en: '[Customizable SQL for Pivot](https://app.rasgoml.com/sql?transformName=%22pivot%22&tableState=%7B%22tables%22%3A%5B%7B%22name%22%3A%22My_First_Table%22%2C%22columns%22%3A%5B%7B%22name%22%3A%22Student%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22Subject%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22Grade%22%2C%22dataType%22%3A%22number%22%7D%5D%7D%5D%2C%22baseTableName%22%3A%22My_First_Table%22%2C%22ddl%22%3A%22%22%7D&formState=%7B%22arguments%22%3A%7B%22dimensions%22%3A%7B%22argType%22%3A%22column_list%22%2C%22cols%22%3A%5B%7B%22id%22%3A0%2C%22columnName%22%3A%22Student%22%2C%22displayName%22%3A%22Student%22%2C%22dataType%22%3A%22string%22%2C%22dwColumnId%22%3A0%7D%5D%7D%2C%22pivot_column%22%3A%7B%22argType%22%3A%22column%22%2C%22col%22%3A%7B%22id%22%3A2%2C%22columnName%22%3A%22Grade%22%2C%22displayName%22%3A%22Grade%22%2C%22dataType%22%3A%22number%22%2C%22dwColumnId%22%3A2%7D%7D%2C%22value_column%22%3A%7B%22argType%22%3A%22column%22%2C%22col%22%3A%7B%22id%22%3A1%2C%22columnName%22%3A%22Subject%22%2C%22displayName%22%3A%22Subject%22%2C%22dataType%22%3A%22string%22%2C%22dwColumnId%22%3A1%7D%7D%2C%22agg_method%22%3A%7B%22argType%22%3A%22agg%22%2C%22value%22%3A%22AVG%22%7D%2C%22list_of_vals%22%3A%7B%22argType%22%3A%22string_list%22%2C%22values%22%3A%5B%22Mathematics%22%2C%22Geography%22%2C%22Phys%20Ed%22%5D%7D%7D%2C%22transformName%22%3A%22pivot%22%7D)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[可自定义 SQL 进行透视](https://app.rasgoml.com/sql?transformName=%22pivot%22&tableState=%7B%22tables%22%3A%5B%7B%22name%22%3A%22My_First_Table%22%2C%22columns%22%3A%5B%7B%22name%22%3A%22Student%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22Subject%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22Grade%22%2C%22dataType%22%3A%22number%22%7D%5D%7D%5D%2C%22baseTableName%22%3A%22My_First_Table%22%2C%22ddl%22%3A%22%22%7D&formState=%7B%22arguments%22%3A%7B%22dimensions%22%3A%7B%22argType%22%3A%22column_list%22%2C%22cols%22%3A%5B%7B%22id%22%3A0%2C%22columnName%22%3A%22Student%22%2C%22displayName%22%3A%22Student%22%2C%22dataType%22%3A%22string%22%2C%22dwColumnId%22%3A0%7D%5D%7D%2C%22pivot_column%22%3A%7B%22argType%22%3A%22column%22%2C%22col%22%3A%7B%22id%22%3A2%2C%22columnName%22%3A%22Grade%22%2C%22displayName%22%3A%22Grade%22%2C%22dataType%22%3A%22number%22%2C%22dwColumnId%22%3A2%7D%7D%2C%22value_column%22%3A%7B%22argType%22%3A%22column%22%2C%22col%22%3A%7B%22id%22%3A1%2C%22columnName%22%3A%22Subject%22%2C%22displayName%22%3A%22Subject%22%2C%22dataType%22%3A%22string%22%2C%22dwColumnId%22%3A1%7D%7D%2C%22agg_method%22%3A%7B%22argType%22%3A%22agg%22%2C%22value%22%3A%22AVG%22%7D%2C%22list_of_vals%22%3A%7B%22argType%22%3A%22string_list%22%2C%22values%22%3A%5B%22Mathematics%22%2C%22Geography%22%2C%22Phys%20Ed%22%5D%7D%7D%2C%22transformName%22%3A%22pivot%22%7D)'
- en: 'Result:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 结果：
- en: '| Student | Mathematics | Geography | Phys Ed |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| Student | Mathematics | Geography | Phys Ed |'
- en: '| Jared | 61 | 94 | 98 |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| Jared | 61 | 94 | 98 |'
- en: '| Patrick | 99 | 93 | 4 |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| Patrick | 99 | 93 | 4 |'
- en: One-hot Encoding
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一热编码
- en: This one isn’t necessarily difficult but is time-consuming. Most data scientists
    don’t consider doing one-hot-encoding in SQL. Although the syntax is simple, they
    would rather transfer the data out of the data warehouse than the tedious task
    of writing a 26-line CASE statement. We don’t blame them!
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方法不一定困难，但确实耗时。大多数数据科学家不考虑在 SQL 中做一热编码。虽然语法很简单，他们宁愿将数据从数据仓库中转移出来，也不愿意写 26 行的
    CASE 语句。我们不怪他们！
- en: However, we recommend taking advantage of your data warehouse and its processing
    power. Here is an example using STATE as a column to one-hot-encode.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们建议利用你的数据仓库及其处理能力。这里是一个使用 STATE 作为列进行一热编码的示例。
- en: 'Before:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 之前：
- en: '| Babyname | State | Qty |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| Babyname | State | Qty |'
- en: '| Alice | AL | 156 |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| Alice | AL | 156 |'
- en: '| Alice | AK | 146 |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| Alice | AK | 146 |'
- en: '| Alice | PA | 654 |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| Alice | PA | 654 |'
- en: '| … | … | … |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| … | … | … |'
- en: '| Zelda | NY | 417 |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| Zelda | NY | 417 |'
- en: '| Zelda | AL | 261 |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| Zelda | AL | 261 |'
- en: '| Zelda | CO | 321 |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| Zelda | CO | 321 |'
- en: '[Customizable SQL for One-Hot Encode](https://app.rasgoml.com/sql?transformName=%22one_hot_encode%22&tableState=%7B%22tables%22%3A%5B%7B%22name%22%3A%22My_First_Table%22%2C%22columns%22%3A%5B%7B%22name%22%3A%22BABYNAME%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22STATE%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22Qty%22%2C%22dataType%22%3A%22number%22%7D%5D%7D%5D%2C%22baseTableName%22%3A%22My_First_Table%22%2C%22ddl%22%3A%22%22%7D&formState=%7B%22arguments%22%3A%7B%22column%22%3A%7B%22argType%22%3A%22column%22%2C%22col%22%3A%7B%22id%22%3A1%2C%22columnName%22%3A%22STATE%22%2C%22displayName%22%3A%22STATE%22%2C%22dataType%22%3A%22string%22%2C%22dwColumnId%22%3A1%7D%7D%2C%22list_of_vals%22%3A%7B%22argType%22%3A%22string_list%22%2C%22values%22%3A%5B%22AL%22%2C%22AK%22%2C%22AZ%22%2C%22AR%22%2C%22CA%22%2C%22CO%22%2C%22CT%22%2C%22DE%22%2C%22FL%22%2C%22GA%22%2C%22HI%22%2C%22ID%22%2C%22IL%22%2C%22IN%22%2C%22IA%22%2C%22KS%22%2C%22KY%22%2C%22LA%22%2C%22ME%22%2C%22MD%22%2C%22MA%22%2C%22MI%22%2C%22MN%22%2C%22MS%22%2C%22MO%22%2C%22MT%22%2C%22NE%22%2C%22NV%22%2C%22NH%22%2C%22NJ%22%2C%22NM%22%2C%22NY%22%2C%22NC%22%2C%22ND%22%2C%22OH%22%2C%22OK%22%2C%22OR%22%2C%22PA%22%2C%22RI%22%2C%22SC%22%2C%22SD%22%2C%22TN%22%2C%22TX%22%2C%22UT%22%2C%22VT%22%2C%22VA%22%2C%22WA%22%2C%22WV%22%2C%22WI%22%2C%22WY%22%5D%7D%7D%2C%22transformName%22%3A%22one_hot_encode%22%7D)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[可自定义的 SQL 用于独热编码](https://app.rasgoml.com/sql?transformName=%22one_hot_encode%22&tableState=%7B%22tables%22%3A%5B%7B%22name%22%3A%22My_First_Table%22%2C%22columns%22%3A%5B%7B%22name%22%3A%22BABYNAME%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22STATE%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22Qty%22%2C%22dataType%22%3A%22number%22%7D%5D%7D%5D%2C%22baseTableName%22%3A%22My_First_Table%22%2C%22ddl%22%3A%22%22%7D&formState=%7B%22arguments%22%3A%7B%22column%22%3A%7B%22argType%22%3A%22column%22%2C%22col%22%3A%7B%22id%22%3A1%2C%22columnName%22%3A%22STATE%22%2C%22displayName%22%3A%22STATE%22%2C%22dataType%22%3A%22string%22%2C%22dwColumnId%22%3A1%7D%7D%2C%22list_of_vals%22%3A%7B%22argType%22%3A%22string_list%22%2C%22values%22%3A%5B%22AL%22%2C%22AK%22%2C%22AZ%22%2C%22AR%22%2C%22CA%22%2C%22CO%22%2C%22CT%22%2C%22DE%22%2C%22FL%22%2C%22GA%22%2C%22HI%22%2C%22ID%22%2C%22IL%22%2C%22IN%22%2C%22IA%22%2C%22KS%22%2C%22KY%22%2C%22LA%22%2C%22ME%22%2C%22MD%22%2C%22MA%22%2C%22MI%22%2C%22MN%22%2C%22MS%22%2C%22MO%22%2C%22MT%22%2C%22NE%22%2C%22NV%22%2C%22NH%22%2C%22NJ%22%2C%22NM%22%2C%22NY%22%2C%22NC%22%2C%22ND%22%2C%22OH%22%2C%22OK%22%2C%22OR%22%2C%22PA%22%2C%22RI%22%2C%22SC%22%2C%22SD%22%2C%22TN%22%2C%22TX%22%2C%22UT%22%2C%22VT%22%2C%22VA%22%2C%22WA%22%2C%22WV%22%2C%22WI%22%2C%22WY%22%5D%7D%7D%2C%22transformName%22%3A%22one_hot_encode%22%7D)'
- en: 'Result:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 结果：
- en: '| Babyname | State | State_AL | State_AK | … | State_CO | Qty |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| Babyname | State | State_AL | State_AK | … | State_CO | Qty |'
- en: '| Alice | AL | 1 | 0 | … | 0 | 156 |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| Alice | AL | 1 | 0 | … | 0 | 156 |'
- en: '| Alice | AK | 0 | 1 | … | 0 | 146 |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| Alice | AK | 0 | 1 | … | 0 | 146 |'
- en: '| Alice | PA | 0 | 0 | … | 0 | 654 |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| Alice | PA | 0 | 0 | … | 0 | 654 |'
- en: '| … | … |  |  | … |  | … |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| … | … |  |  | … |  | … |'
- en: '| Zelda | NY | 0 | 0 | … | 0 | 417 |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| Zelda | NY | 0 | 0 | … | 0 | 417 |'
- en: '| Zelda | AL | 1 | 0 | … | 0 | 261 |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| Zelda | AL | 1 | 0 | … | 0 | 261 |'
- en: '| Zelda | CO | 0 | 0 | … | 1 | 321 |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| Zelda | CO | 0 | 0 | … | 1 | 321 |'
- en: Market Basket Analysis
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 市场篮分析
- en: When doing a market basket analysis or mining for association rules, the first
    step is often formatting the data to aggregate each transaction into a single
    record. This can be challenging for your laptop, but your data warehouse is designed
    to crunch this data efficiently.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行市场篮分析或挖掘关联规则时，第一步通常是将数据格式化以将每笔交易汇总为一个记录。这对你的笔记本电脑来说可能是一个挑战，但你的数据仓库旨在高效地处理这些数据。
- en: 'Typical transaction data:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 典型交易数据：
- en: '| SALESORDERNUMBER | CUSTOMERKEY | ENGLISHPRODUCTNAME | LISTPRICE | WEIGHT
    | ORDERDATE |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| 销售订单号 | 客户密钥 | 英文产品名称 | 列表价格 | 重量 | 订单日期 |'
- en: '| SO51247 | 11249 | Mountain-200 Black | 2294.99 | 23.77 | 1/1/2013 |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| SO51247 | 11249 | Mountain-200 黑色 | 2294.99 | 23.77 | 1/1/2013 |'
- en: '| SO51247 | 11249 | Water Bottle - 30 oz. | 4.99 |  | 1/1/2013 |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| SO51247 | 11249 | 水瓶 - 30 oz. | 4.99 |  | 1/1/2013 |'
- en: '| SO51247 | 11249 | Mountain Bottle Cage | 9.99 |  | 1/1/2013 |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| SO51247 | 11249 | Mountain 水瓶架 | 9.99 |  | 1/1/2013 |'
- en: '| SO51246 | 25625 | Sport-100 Helmet | 34.99 |  | 12/31/2012 |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| SO51246 | 25625 | Sport-100 头盔 | 34.99 |  | 12/31/2012 |'
- en: '| SO51246 | 25625 | Water Bottle - 30 oz. | 4.99 |  | 12/31/2012 |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| SO51246 | 25625 | 水瓶 - 30 oz. | 4.99 |  | 12/31/2012 |'
- en: '| SO51246 | 25625 | Road Bottle Cage | 8.99 |  | 12/31/2012 |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| SO51246 | 25625 | Road 水瓶架 | 8.99 |  | 12/31/2012 |'
- en: '| SO51246 | 25625 | Touring-1000 Blue | 2384.07 | 25.42 | 12/31/2012 |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| SO51246 | 25625 | Touring-1000 蓝色 | 2384.07 | 25.42 | 12/31/2012 |'
- en: '[Customizable SQL for Market Basket](https://app.rasgoml.com/sql?transformName=%22market_basket%22&tableState=%7B%22tables%22%3A%5B%7B%22name%22%3A%22My_First_Table%22%2C%22columns%22%3A%5B%7B%22name%22%3A%22SALESORDERNUMBER%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22CUSTOMERKEY%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22ENGLISHPRODUCTNAME%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22LISTPRICE%22%2C%22dataType%22%3A%22float%22%7D%2C%7B%22name%22%3A%22WEIGHT%22%2C%22dataType%22%3A%22float%22%7D%2C%7B%22name%22%3A%22ORDERDATE%22%2C%22dataType%22%3A%22date%22%7D%5D%7D%5D%2C%22baseTableName%22%3A%22My_First_Table%22%2C%22ddl%22%3A%22%22%7D&formState=%7B%22arguments%22%3A%7B%22transaction_id%22%3A%7B%22argType%22%3A%22column%22%2C%22col%22%3A%7B%22id%22%3A0%2C%22columnName%22%3A%22SALESORDERNUMBER%22%2C%22displayName%22%3A%22SALESORDERNUMBER%22%2C%22dataType%22%3A%22string%22%2C%22dwColumnId%22%3A0%7D%7D%2C%22sep%22%3A%7B%22argType%22%3A%22value%22%2C%22value%22%3A%22%2C%20%22%7D%2C%22agg_column%22%3A%7B%22argType%22%3A%22column%22%2C%22col%22%3A%7B%22id%22%3A2%2C%22columnName%22%3A%22ENGLISHPRODUCTNAME%22%2C%22displayName%22%3A%22ENGLISHPRODUCTNAME%22%2C%22dataType%22%3A%22string%22%2C%22dwColumnId%22%3A2%7D%7D%7D%2C%22transformName%22%3A%22market_basket%22%7D)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[市场篮子自定义SQL](https://app.rasgoml.com/sql?transformName=%22market_basket%22&tableState=%7B%22tables%22%3A%5B%7B%22name%22%3A%22My_First_Table%22%2C%22columns%22%3A%5B%7B%22name%22%3A%22SALESORDERNUMBER%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22CUSTOMERKEY%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22ENGLISHPRODUCTNAME%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22LISTPRICE%22%2C%22dataType%22%3A%22float%22%7D%2C%7B%22name%22%3A%22WEIGHT%22%2C%22dataType%22%3A%22float%22%7D%2C%7B%22name%22%3A%22ORDERDATE%22%2C%22dataType%22%3A%22date%22%7D%5D%7D%5D%2C%22baseTableName%22%3A%22My_First_Table%22%2C%22ddl%22%3A%22%22%7D&formState=%7B%22arguments%22%3A%7B%22transaction_id%22%3A%7B%22argType%22%3A%22column%22%2C%22col%22%3A%7B%22id%22%3A0%2C%22columnName%22%3A%22SALESORDERNUMBER%22%2C%22displayName%22%3A%22SALESORDERNUMBER%22%2C%22dataType%22%3A%22string%22%2C%22dwColumnId%22%3A0%7D%7D%2C%22sep%22%3A%7B%22argType%22%3A%22value%22%2C%22value%22%3A%22%2C%20%22%7D%2C%22agg_column%22%3A%7B%22argType%22%3A%22column%22%2C%22col%22%3A%7B%22id%22%3A2%2C%22columnName%22%3A%22ENGLISHPRODUCTNAME%22%2C%22displayName%22%3A%22ENGLISHPRODUCTNAME%22%2C%22dataType%22%3A%22string%22%2C%22dwColumnId%22%3A2%7D%7D%7D%2C%22transformName%22%3A%22market_basket%22%7D)'
- en: 'Result:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 结果：
- en: '| NUMTRANSACTIONS | ENGLISHPRODUCTNAME_LISTAGG |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| NUMTRANSACTIONS | ENGLISHPRODUCTNAME_LISTAGG |'
- en: '| 207 | Mountain Bottle Cage, Water Bottle - 30 oz. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 207 | 山地瓶架，水瓶 - 30 盎司 |'
- en: '| 200 | Mountain Tire Tube, Patch Kit/8 Patches |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| 200 | 山地轮胎内胎，修补工具包/8片补丁 |'
- en: '| 142 | LL Road Tire, Patch Kit/8 Patches |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| 142 | LL 公路轮胎，修补工具包/8片补丁 |'
- en: '| 137 | Patch Kit/8 Patches, Road Tire Tube |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| 137 | 修补工具包/8片补丁，公路轮胎内胎 |'
- en: '| 135 | Patch Kit/8 Patches, Touring Tire Tube |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 135 | 修补工具包/8片补丁，旅行轮胎内胎 |'
- en: '| 132 | HL Mountain Tire, Mountain Tire Tube, Patch Kit/8 Patches |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| 132 | HL 山地轮胎，山地轮胎内胎，修补工具包/8片补丁 |'
- en: Time-Series Aggregations
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间序列聚合
- en: Time series aggregations are not only used by data scientists but they’re used
    for analytics as well. What makes them difficult is that window functions require
    the data to be formatted correctly.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列聚合不仅被数据科学家使用，也被用于分析。它们难以处理的原因在于窗口函数要求数据格式正确。
- en: 'For example, if you want to calculate the average sales amount in the past
    14 days, window functions require you to have all sales data broken up into one
    row per day. Unfortunately, anyone who has worked with sales data before knows
    that it is usually stored at the transaction level. This is where time-series
    aggregation comes in handy. You can create aggregated, historical metrics without
    reformatting the entire dataset. It also comes in handy if we want to add multiple
    metrics at one time:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你想计算过去14天的平均销售金额，窗口函数要求你将所有销售数据分解为每天一行。不幸的是，任何处理过销售数据的人都知道，销售数据通常是以交易级别存储的。这就是时间序列聚合派上用场的地方。你可以在不重新格式化整个数据集的情况下创建聚合的历史指标。如果我们想一次添加多个指标，这也很有用：
- en: Average sales in the past 14 days
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过去14天的平均销售
- en: Biggest purchase in last 6 months
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过去6个月的最大购买
- en: Count Distinct product types in last 90 days
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过去90天的不同产品类型数量
- en: If you wanted to use window functions, each metric would need to be built independently
    with several steps.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想使用窗口函数，每个指标都需要独立构建，并经过多个步骤。
- en: A better way to handle this, is to use common table expressions (CTEs) to define
    each of the historical windows, pre-aggregated.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 更好的处理方式是使用公共表表达式（CTEs）来定义每个历史窗口，并进行预聚合。
- en: 'For example:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '| Transaction ID | Customer ID | Product Type | Purchase Amt | Transaction
    Date |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| 交易ID | 客户ID | 产品类型 | 购买金额 | 交易日期 |'
- en: '| 65432 | 101 | Grocery | 101.14 | 2022-03-01 |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| 65432 | 101 | 杂货 | 101.14 | 2022-03-01 |'
- en: '| 65493 | 101 | Grocery | 98.45 | 2022-04-30 |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| 65493 | 101 | 杂货 | 98.45 | 2022-04-30 |'
- en: '| 65494 | 101 | Automotive | 239.98 | 2022-05-01 |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| 65494 | 101 | 汽车 | 239.98 | 2022-05-01 |'
- en: '| 66789 | 101 | Grocery | 86.55 | 2022-05-22 |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| 66789 | 101 | 杂货 | 86.55 | 2022-05-22 |'
- en: '| 66981 | 101 | Pharmacy | 14 | 2022-06-15 |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| 66981 | 101 | 药品 | 14 | 2022-06-15 |'
- en: '| 67145 | 101 | Grocery | 93.12 | 2022-06-22 |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| 67145 | 101 | 杂货 | 93.12 | 2022-06-22 |'
- en: '[Customizable SQL for Time Series Aggregate SQL](https://app.rasgoml.com/sql?transformName=%22timeseries_agg%22&tableState=%7B%22tables%22%3A%5B%7B%22name%22%3A%22My_First_Table%22%2C%22columns%22%3A%5B%7B%22name%22%3A%22Transaction_ID%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22Customer_ID%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22Product_Type%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22Purchase_Amt%22%2C%22dataType%22%3A%22float%22%7D%2C%7B%22name%22%3A%22Transaction_Date%22%2C%22dataType%22%3A%22date%22%7D%5D%7D%5D%2C%22baseTableName%22%3A%22My_First_Table%22%2C%22ddl%22%3A%22%22%7D&formState=%7B%22arguments%22%3A%7B%22aggregations%22%3A%7B%22argType%22%3A%22agg_dict%22%2C%22aggDict%22%3A%7B%22Purchase_Amt%22%3A%7B%22AVG%22%3Atrue%2C%22MAX%22%3Atrue%7D%2C%22Transaction_ID%22%3A%7B%22COUNT%20DISTINCT%22%3Atrue%7D%7D%7D%2C%22date%22%3A%7B%22argType%22%3A%22column%22%2C%22col%22%3A%7B%22id%22%3A4%2C%22columnName%22%3A%22Transaction_Date%22%2C%22displayName%22%3A%22Transaction_Date%22%2C%22dataType%22%3A%22date%22%2C%22dwColumnId%22%3A4%7D%7D%2C%22offsets%22%3A%7B%22argType%22%3A%22int_list%22%2C%22values%22%3A%5B14%2C90%2C180%5D%7D%2C%22date_part%22%3A%7B%22argType%22%3A%22date_part%22%2C%22value%22%3A%22day%22%7D%2C%22group_by%22%3A%7B%22argType%22%3A%22column_list%22%2C%22cols%22%3A%5B%7B%22id%22%3A1%2C%22columnName%22%3A%22Customer_ID%22%2C%22displayName%22%3A%22Customer_ID%22%2C%22dataType%22%3A%22string%22%2C%22dwColumnId%22%3A1%7D%5D%7D%7D%2C%22transformName%22%3A%22timeseries_agg%22%7D)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '[可定制的时间序列聚合 SQL](https://app.rasgoml.com/sql?transformName=%22timeseries_agg%22&tableState=%7B%22tables%22%3A%5B%7B%22name%22%3A%22My_First_Table%22%2C%22columns%22%3A%5B%7B%22name%22%3A%22Transaction_ID%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22Customer_ID%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22Product_Type%22%2C%22dataType%22%3A%22string%22%7D%2C%7B%22name%22%3A%22Purchase_Amt%22%2C%22dataType%22%3A%22float%22%7D%2C%7B%22name%22%3A%22Transaction_Date%22%2C%22dataType%22%3A%22date%22%7D%5D%7D%5D%2C%22baseTableName%22%3A%22My_First_Table%22%2C%22ddl%22%3A%22%22%7D&formState=%7B%22arguments%22%3A%7B%22aggregations%22%3A%7B%22argType%22%3A%22agg_dict%22%2C%22aggDict%22%3A%7B%22Purchase_Amt%22%3A%7B%22AVG%22%3Atrue%2C%22MAX%22%3Atrue%7D%2C%22Transaction_ID%22%3A%7B%22COUNT%20DISTINCT%22%3Atrue%7D%7D%7D%2C%22date%22%3A%7B%22argType%22%3A%22column%22%2C%22col%22%3A%7B%22id%22%3A4%2C%22columnName%22%3A%22Transaction_Date%22%2C%22displayName%22%3A%22Transaction_Date%22%2C%22dataType%22%3A%22date%22%2C%22dwColumnId%22%3A4%7D%7D%2C%22offsets%22%3A%7B%22argType%22%3A%22int_list%22%2C%22values%22%3A%5B14%2C90%2C180%5D%7D%2C%22date_part%22%3A%7B%22argType%22%3A%22date_part%22%2C%22value%22%3A%22day%22%7D%2C%22group_by%22%3A%7B%22argType%22%3A%22column_list%22%2C%22cols%22%3A%5B%7B%22id%22%3A1%2C%22columnName%22%3A%22Customer_ID%22%2C%22displayName%22%3A%22Customer_ID%22%2C%22dataType%22%3A%22string%22%2C%22dwColumnId%22%3A1%7D%5D%7D%7D%2C%22transformName%22%3A%22timeseries_agg%22%7D)'
- en: 'Result:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 结果：
- en: '| Transaction ID | Customer ID | Product Type | Purchase Amt | Transaction
    Date | Avg Sales Past 14 Days | Max Purchase Past 6 months | Count Distinct Product
    Type last 90 days |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| 交易 ID | 客户 ID | 产品类型 | 购买金额 | 交易日期 | 过去 14 天的平均销售 | 过去 6 个月的最大购买 | 过去 90
    天不同产品类型的计数 |'
- en: '| 65432 | 101 | Grocery | 101.14 | 2022-03-01 | 101.14 | 101.14 | 1 |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| 65432 | 101 | 杂货 | 101.14 | 2022-03-01 | 101.14 | 101.14 | 1 |'
- en: '| 65493 | 101 | Grocery | 98.45 | 2022-04-30 | 98.45 | 101.14 | 2 |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| 65493 | 101 | 杂货 | 98.45 | 2022-04-30 | 98.45 | 101.14 | 2 |'
- en: '| 65494 | 101 | Automotive | 239.98 | 2022-05-01 | 169.21 | 239.98 | 2 |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| 65494 | 101 | 汽车 | 239.98 | 2022-05-01 | 169.21 | 239.98 | 2 |'
- en: '| 66789 | 101 | Grocery | 86.55 | 2022-05-22 | 86.55 | 239.98 | 2 |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| 66789 | 101 | 杂货 | 86.55 | 2022-05-22 | 86.55 | 239.98 | 2 |'
- en: '| 66981 | 101 | Pharmacy | 14 | 2022-06-15 | 14 | 239.98 | 3 |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| 66981 | 101 | 药品 | 14 | 2022-06-15 | 14 | 239.98 | 3 |'
- en: '| 67145 | 101 | Grocery | 93.12 | 2022-06-22 | 53.56 | 239.98 | 3 |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| 67145 | 101 | 杂货 | 93.12 | 2022-06-22 | 53.56 | 239.98 | 3 |'
- en: Conclusion
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: I hope this piece helps shed some light on the different troubles that a data
    practitioner will encounter when operating within the modern data stack. SQL is
    a double-edged sword when it comes to querying the cloud warehouse. While centralizing
    the compute in the cloud data warehouse increases speed, it sometimes requires
    some extra SQL skills. I hope that this piece has helped answer questions and
    provides the syntax and background needed to tackle these problems.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望这篇文章能够帮助揭示数据从业者在现代数据堆栈操作过程中会遇到的各种问题。SQL 在查询云仓库时是把双刃剑。虽然将计算集中在云数据仓库中可以提高速度，但有时也需要一些额外的
    SQL 技能。我希望这篇文章能够回答一些问题，并提供解决这些问题所需的语法和背景知识。
- en: '**[Josh Berry](https://www.linkedin.com/in/joshberry022/)** ([**@Twitter**](https://mobile.twitter.com/itsamejoshabee))
    leads Customer Facing Data Science at Rasgo and has been in the data and analytics
    profession since 2008\. Josh spent 10 years at Comcast where he built the data
    science team and was a key owner of the internally developed Comcast feature store
    - one of the first feature stores to hit the market. Following Comcast, Josh was
    a critical leader in building out Customer Facing Data Science at DataRobot. In
    his spare time Josh performs complex analysis on interesting topics such as baseball,
    F1 racing, housing market predictions, and more.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Josh Berry](https://www.linkedin.com/in/joshberry022/)** （[**@Twitter**](https://mobile.twitter.com/itsamejoshabee)）领导
    Rasgo 的客户数据科学工作，自 2008 年以来一直从事数据和分析工作。Josh 曾在 Comcast 工作了 10 年，在那里他建立了数据科学团队，并且是内部开发的
    Comcast 特征商店的关键负责人之一——这是市场上首批推出的特征商店之一。离开 Comcast 后，Josh 在 DataRobot 继续担任客户数据科学团队的重要领导。业余时间，Josh
    会对如棒球、F1 赛车、房地产市场预测等有趣的话题进行复杂分析。'
- en: '* * *'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你组织的 IT'
- en: '* * *'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 了解更多相关话题
- en: '[5 Tricky SQL Queries Solved](https://www.kdnuggets.com/2020/11/5-tricky-sql-queries-solved.html)'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[解决的 5 个棘手 SQL 查询](https://www.kdnuggets.com/2020/11/5-tricky-sql-queries-solved.html)'
- en: '[The Definitive Guide to Solving the Phantom Read in MySQL](https://www.kdnuggets.com/2022/06/definitive-guide-solving-phantom-read-mysql.html)'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[解决 MySQL 中幻读问题的权威指南](https://www.kdnuggets.com/2022/06/definitive-guide-solving-phantom-read-mysql.html)'
- en: '[Graph of Thoughts: A New Paradigm for Elaborate Problem-Solving in…](https://www.kdnuggets.com/graph-of-thoughts-a-new-paradigm-for-elaborate-problem-solving-in-large-language-models)'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[思想图谱：大型语言模型中的复杂问题解决新范式](https://www.kdnuggets.com/graph-of-thoughts-a-new-paradigm-for-elaborate-problem-solving-in-large-language-models)'
- en: '[4 Useful Intermediate SQL Queries for Data Science](https://www.kdnuggets.com/2022/12/4-useful-intermediate-sql-queries-data-science.html)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学中的 4 个有用中级 SQL 查询](https://www.kdnuggets.com/2022/12/4-useful-intermediate-sql-queries-data-science.html)'
- en: '[KDnuggets News, December 7: Top 10 Data Science Myths Busted • 4…](https://www.kdnuggets.com/2022/n47.html)'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻，12 月 7 日：揭示的十大数据科学误区 • 4…](https://www.kdnuggets.com/2022/n47.html)'
- en: '[How to Optimize SQL Queries for Faster Data Retrieval](https://www.kdnuggets.com/2023/06/optimize-sql-queries-faster-data-retrieval.html)'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何优化 SQL 查询以更快地检索数据](https://www.kdnuggets.com/2023/06/optimize-sql-queries-faster-data-retrieval.html)'
