- en: Top 10 Advanced Data Science SQL Interview Questions You Must Know How to Answer
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你必须知道如何回答的前 10 个高级数据科学 SQL 面试问题
- en: 原文：[https://www.kdnuggets.com/2023/01/top-10-advanced-data-science-sql-interview-questions-must-know-answer.html](https://www.kdnuggets.com/2023/01/top-10-advanced-data-science-sql-interview-questions-must-know-answer.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2023/01/top-10-advanced-data-science-sql-interview-questions-must-know-answer.html](https://www.kdnuggets.com/2023/01/top-10-advanced-data-science-sql-interview-questions-must-know-answer.html)
- en: '![Top 10 Advanced Data Science SQL Interview Question s You Must Know How to
    Answer](../Images/d59a4b2b424770120f327b180bf5431e.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![你必须知道如何回答的前 10 个高级数据科学 SQL 面试问题](../Images/d59a4b2b424770120f327b180bf5431e.png)'
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: Introduction
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持组织的 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: SQL( Structured Query Language) is a standard programming language used for
    managing and manipulating databases. It's an essential skill for any data professional,
    as it allows them to effectively retrieve and analyze data stored in a database.
    As a result, SQL is a common topic in technical interviews for positions that
    involve working with data, similar to data analysts, data engineers, and database
    administrators.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: SQL（结构化查询语言）是一种用于管理和操作数据库的标准编程语言。它是任何数据专业人员的必备技能，因为它使他们能够有效地检索和分析存储在数据库中的数据。因此，SQL
    是技术面试中的常见话题，适用于涉及数据工作的职位，如数据分析师、数据工程师和数据库管理员。
- en: Question 01
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题 01
- en: SQL query to find nth highest salary/payment or 3rd Highest salary/payment
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查找第 nth 高薪资/支付或第 3 高薪资/支付的 SQL 查询
- en: To find the nth highest salary, you can use a subquery with the DENSE_RANK()
    function to calculate the dense rank of each salary, and then filter the results
    to only include the row with the ranking equal to n.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找第 nth 高薪资，你可以使用带有 DENSE_RANK() 函数的子查询来计算每个薪资的密集排名，然后筛选结果以仅包括排名等于 n 的行。
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You can also use the LIMIT and OFFSET clauses to find the nth highest salary,
    as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用 LIMIT 和 OFFSET 子句来查找第 nth 高薪资，如下所示：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'For example, to find the 3rd highest salary, you would use the following query:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要找到第 3 高的薪资，你可以使用以下查询：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Question 02
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题 02
- en: How do you optimize SQL queries for performance?
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何优化 SQL 查询以提高性能？
- en: There are several ways to optimize SQL queries for better performance, including
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方法可以优化 SQL 查询以提高性能，包括
- en: '**Indexing **'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**索引**'
- en: Creating an index on a column or group of columns can significantly improve
    the speed of queries that filter on those columns.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在某列或某些列上创建索引可以显著提高对这些列进行筛选的查询速度。
- en: '**Partitioning **'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**分区**'
- en: Partitioning a large table into smaller pieces can improve the performance of
    queries that only need to access a subset of the data.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 将大型表分区为更小的部分可以提高仅需要访问数据子集的查询性能。
- en: '**Normalization **'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**规范化**'
- en: Normalization involves organizing the data in a database so that each piece
    of data is stored in only one place, reducing redundancy and perfecting the integrity
    of the data.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 规范化涉及将数据库中的数据组织到仅存储一个位置，以减少冗余并完善数据的完整性。
- en: '**Use of appropriate data types **'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用适当的数据类型**'
- en: Using the correct data type for each column can improve the performance of queries
    that filter or sort on those columns.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为每列使用正确的数据类型可以提高对这些列进行筛选或排序的查询性能。
- en: '**Use of appropriate JOIN types **'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用适当的 JOIN 类型**'
- en: Using the correct JOIN type(e.g., INNER JOIN, OUTER JOIN, CROSS JOIN) can improve
    the performance of queries that join multiple tables.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 使用正确的 JOIN 类型（例如 INNER JOIN、OUTER JOIN、CROSS JOIN）可以提高多表联接查询的性能。
- en: '**Use of appropriate aggregate functions**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用适当的聚合函数**'
- en: Using appropriate aggregate functions(e.g., SUM, AVG, MIN, MAX) can improve
    the performance of queries that perform calculations on large sets of data. Some
    aggregate functions, similar to COUNT, are more effective than others, so it's
    important to choose the applicable function for your query.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 使用适当的聚合函数（例如，SUM、AVG、MIN、MAX）可以提高对大型数据集执行计算的查询性能。一些聚合函数，类似于 COUNT，比其他函数更有效，因此选择适用的函数对查询非常重要。
- en: Question 03
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题 03
- en: How do you use the LAG and LEAD functions in SQL? Can you give an example of
    their use?
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你如何在 SQL 中使用 LAG 和 LEAD 函数？能否给出它们使用的示例？
- en: The LAG() and LEAD() functions are window functions in SQL that allow you to
    compare values in a row with values in a preceding or following row, respectively.
    They're useful for calculating running totals, or for comparing values in a table
    with values in a previous or subsequent row.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: LAG() 和 LEAD() 函数是 SQL 中的窗口函数，允许你将行中的值与前一行或后一行的值进行比较。它们对计算累计总数或将表中的值与前一行或后一行的值进行比较非常有用。
- en: 'The **LAG() function** takes two arguments: the column to be returned, and
    the number of rows to go back. For example'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**LAG() 函数**接受两个参数：要返回的列和向回查找的行数。例如'
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The **LEAD() function** works in a similar way, but goes forward rather than
    backward. For example
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**LEAD() 函数**的工作方式类似，但向前而不是向后。例如'
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Question 04
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题 04
- en: Explain ETL and ELT concept in SQL
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解释 SQL 中的 ETL 和 ELT 概念
- en: ETL( Extract, Transform, Load) is a process used in SQL to extract data from
    one or more sources, transform the data into a format suitable for analysis or
    other uses, and then load the data into a target system, such as a data warehouse
    or data lake.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: ETL（提取、转换、加载）是一个用于 SQL 的过程，用于从一个或多个源中提取数据，将数据转换成适合分析或其他用途的格式，然后将数据加载到目标系统中，例如数据仓库或数据湖。
- en: ELT( Extract, Load, Transform) is similar to ETL, but the Transform phase is
    performed after the data is loaded into the target system, rather than before.
    This allows the target system to perform the transformations, which can be more
    efficient and scalable than performing the transformations in an ETL tool. ELT
    is often used in modern data infrastructures, which use powerful data processing
    engines( such as Apache Spark or Apache Flink) to perform the Transform phase.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: ELT（提取、加载、转换）与 ETL 类似，但转换阶段在数据加载到目标系统后进行，而不是之前进行。这允许目标系统执行转换，这可能比在 ETL 工具中执行转换更高效、更具扩展性。ELT
    通常用于现代数据基础设施，这些基础设施使用强大的数据处理引擎（如 Apache Spark 或 Apache Flink）来执行转换阶段。
- en: Question 05
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题 05
- en: Can you explain the difference between the WHERE and HAVING clauses in SQL
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你能解释 SQL 中 WHERE 和 HAVING 子句的区别吗？
- en: The WHERE and HAVING clauses are both used to filter rows from a SELECT statement.
    The main difference between the two is that the WHERE clause is used to filter
    rows before the group by operation, while the HAVING clause is used to filter
    rows after the group by operation.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: WHERE 和 HAVING 子句都用于从 SELECT 语句中筛选行。它们之间的主要区别是 WHERE 子句用于在分组操作之前筛选行，而 HAVING
    子句用于在分组操作之后筛选行。
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In this example, the HAVING clause is used to filter out any departments where
    the sum of the salaries for employees in that department is less than 100000\.
    This is done after the group by operation, so it only affects the rows that represent
    each department.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，HAVING 子句用于筛选出部门中员工薪水总和少于 100000 的部门。这是在分组操作之后完成的，因此只影响表示每个部门的行。
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In this example, the WHERE clause is used to filter out any employees with a
    salary of less than 50000\. This is done before any group by operation, so it
    affects all rows in the employees table.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，WHERE 子句用于筛选薪水少于 50000 的员工。这是在任何分组操作之前完成的，因此它影响 employees 表中的所有行。
- en: Question 06
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题 06
- en: Explain the difference between TRUNCATE, DROP, and DELETE operations in SQL
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解释 SQL 中 TRUNCATE、DROP 和 DELETE 操作之间的区别
- en: '**TRUNCATE**'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**TRUNCATE**'
- en: The TRUNCATE operation removes all rows from a table, but it doesn't affect
    the structure of the table. It's faster than DELETE, because it doesn't generate
    any undo or redo logs and doesn't fire any delete triggers.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: TRUNCATE 操作从表中删除所有行，但不会影响表的结构。它比 DELETE 更快，因为它不会生成任何撤销或重做日志，也不会触发任何删除触发器。
- en: Here's an example of using the TRUNCATE statement
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用 TRUNCATE 语句的一个示例
- en: '[PRE7]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This statement removes all rows from the employees table, but the table structure,
    including column names and data types, remains unchanged.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 该语句从 employees 表中删除所有行，但表的结构，包括列名和数据类型，保持不变。
- en: '**DROP**'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**DROP**'
- en: The DROP operation removes a table from the database and removes all data in
    the table. It also removes any indexes, triggers, and constraints associated with
    the table.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: DROP 操作从数据库中删除一个表，并删除表中的所有数据。它还删除与表相关的任何索引、触发器和约束。
- en: Here's an example of using the DROP statement
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个使用 DROP 语句的示例
- en: '[PRE8]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This statement removes the employees table from the database and all data in
    the table is permanently deleted. The table structure is also removed.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 该语句从数据库中删除 employees 表，并且表中的所有数据都被永久删除。表结构也被移除。
- en: '**DELETE**'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**DELETE**'
- en: The DELETE operation removes one or more rows from a table. It allows you to
    specify a WHERE clause to select the rows to delete. It also generates undo and
    redo logs, and fires cancel triggers.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: DELETE 操作从表中删除一行或多行。它允许你指定一个 WHERE 子句以选择要删除的行。它还生成撤销和重做日志，并触发取消触发器。
- en: Here's an example of using the DELETE statement
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个使用`DELETE`语句的示例
- en: '[PRE9]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This statement removes all rows from the employees table where the salary is
    less than 50000 The table structure remains unchanged, and the deleted rows can
    be recovered using the undo logs.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 该语句删除 employees 表中所有工资低于 50000 的行。表结构保持不变，被删除的行可以通过撤销日志恢复。
- en: Question 07
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题 07
- en: Which is more efficient join or subquery?
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 哪种更有效，连接还是子查询？
- en: It's generally more efficient to use a JOIN rather than a subquery when combining
    data from multiple tables. This is because a JOIN allows the database to execute
    the query more efficiently by using indices on the joined tables.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，使用 JOIN 比使用子查询更高效，因为 JOIN 允许数据库通过利用连接表上的索引更高效地执行查询。
- en: 'For example, consider the following two queries that return the same results:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，考虑以下两个返回相同结果的查询：
- en: '[PRE10]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The first query uses a JOIN to combine the orders and customers tables, and
    then filters the results using a WHERE clause. The second query uses a subquery
    to select the relevant customer IDs from the customers table, and then uses the
    IN operator to filter the orders table based on those IDs.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个查询使用 JOIN 将 orders 和 customers 表结合在一起，然后使用 WHERE 子句筛选结果。第二个查询使用子查询从 customers
    表中选择相关的客户 ID，然后使用 IN 运算符根据这些 ID 筛选 orders 表。
- en: Question 08
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题 08
- en: How do you use window functions in SQL?
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何在 SQL 中使用窗口函数？
- en: In SQL, a window function is a function that operates on a set of rows, or a"
    window", defined by a window specification. Window functions are used to perform
    calculations across rows, and they can be used in SELECT, UPDATE, and DELETE statements,
    as well as in the WHERE and HAVING clauses of a SELECT statement.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SQL 中，窗口函数是对由窗口规范定义的一组行或“窗口”操作的函数。窗口函数用于在行之间执行计算，并且可以在 SELECT、UPDATE 和 DELETE
    语句中使用，以及在 SELECT 语句的 WHERE 和 HAVING 子句中使用。
- en: 'Here''s an example of using a window function in a SELECT statement:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在 SELECT 语句中使用窗口函数的示例：
- en: '[PRE12]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This statement returns a result set with three columns: name, salary, and avg_salary_by_department.
    The avg_salary_by_department column is calculated using the AVG window function,
    which calculates the average salary for each department. The PARTITION BY clause
    specifies that the window is partitioned by department_id, meaning that the average
    salary is calculated separately for each department.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 该语句返回一个包含三列的结果集：name、salary 和 avg_salary_by_department。avg_salary_by_department
    列是使用 AVG 窗口函数计算的，该函数计算每个部门的平均工资。PARTITION BY 子句指定窗口按 department_id 分区，这意味着平均工资是针对每个部门单独计算的。
- en: Question 09
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题 09
- en: Explain Normalization
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解释规范化
- en: 'Normalization is the process of organizing a database in a way that reduces
    redundancy and dependency. It is a systematic approach to decomposing tables to
    eliminate data redundancy and improve data integrity. There are several normal
    forms that can be used to normalize a database. The most common normal forms are:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 规范化是将数据库组织成一种减少冗余和依赖的方式的过程。它是一种系统化的方法，用于分解表格以消除数据冗余并提高数据完整性。可以使用几种规范形式来规范化数据库。最常见的规范形式包括：
- en: '**First Normal Form (1NF)**'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**第一范式 (1NF)**'
- en: Each cell in the table contains a single value, and not a list of values
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表中的每个单元格包含一个单一的值，而不是一个值的列表
- en: Each column in the table has a unique name
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表中的每一列都有一个唯一的名称
- en: The table does not contain any repeating groups of columns
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表中不包含任何重复的列组
- en: '**Second Normal Form (2NF)**'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**第二范式 (2NF)**'
- en: It is in first normal form
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它处于第一范式
- en: It does not have any partial dependencies (that is, a non-prime attribute is
    dependent on a part of a composite primary key)
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它没有任何部分依赖（即，非主属性依赖于复合主键的一部分）
- en: '**Third Normal Form (3NF)**'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**第三范式 (3NF)**'
- en: It is in second normal form
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它符合第二范式
- en: It does not have any transitive dependencies (that is, a non-prime attribute
    is dependent on another non-prime attribute)
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它没有任何传递依赖（即，非主属性依赖于另一个非主属性）
- en: '**Boyce-Codd Normal Form (BCNF)**'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**博伊斯-科德范式 (BCNF)**'
- en: It is in third normal form
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它符合第三范式
- en: Every determinant (an attribute that determines the value of another attribute)
    is a candidate key (a column or set of columns that can be used as a primary key)
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个决定因素（一个决定其他属性值的属性）都是候选键（一个可以作为主键的列或列集）
- en: Question 10
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题 10
- en: Explain Exclusive Lock and Update Lock in SQL
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解释SQL中的独占锁和更新锁
- en: An exclusive lock is a lock that prevents other transactions from reading or
    writing to the locked rows. This type of lock is typically used when a transaction
    needs to modify the data in a table, and it wants to ensure that no other transactions
    can access the table at the same time.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 独占锁是一种锁，防止其他事务读取或写入被锁定的行。这种锁通常在事务需要修改表中的数据时使用，并希望确保没有其他事务可以同时访问该表。
- en: An update lock is a lock that allows other transactions to read the locked rows,
    but it prevents them from updating or writing to the locked rows. This type of
    lock is typically used when a transaction needs to read the data in a table, but
    it wants to ensure that the data is not modified by other transactions until the
    current transaction is finished.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 更新锁是一种锁，允许其他事务读取被锁定的行，但防止它们更新或写入被锁定的行。这种锁通常在事务需要读取表中的数据时使用，但希望确保在当前事务完成之前，数据不会被其他事务修改。
- en: '**[Sonia Jamil](www.linkedin.com/in/sonia-jamil)** is currently employed as
    a Database Analyst at one of Pakistan''s largest telecommunications companies.
    In addition to her full-time job, she also work as a freelancer. Her background
    includes expertise in database administration and experience with both on-premises
    and cloud-based SQL Server environments. She is proficient in the latest SQL Server
    technologies and have a strong interest in data management and data analytics.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**[索尼亚·贾米尔](www.linkedin.com/in/sonia-jamil)** 目前在巴基斯坦最大的电信公司之一担任数据库分析师。除了全职工作，她还兼职做自由职业者。她的背景包括数据库管理方面的专业知识，并且有在本地和云环境中的SQL
    Server经验。她精通最新的SQL Server技术，并对数据管理和数据分析有着浓厚的兴趣。'
- en: More On This Topic
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[How to Answer Data Science Coding Interview Questions](https://www.kdnuggets.com/2022/01/answer-data-science-coding-interview-questions.html)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何回答数据科学编程面试问题](https://www.kdnuggets.com/2022/01/answer-data-science-coding-interview-questions.html)'
- en: '[KDnuggets News, May 4: 9 Free Harvard Courses to Learn Data…](https://www.kdnuggets.com/2022/n18.html)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻，5月4日：9门免费哈佛课程学习数据……](https://www.kdnuggets.com/2022/n18.html)'
- en: '[15 Python Coding Interview Questions You Must Know For Data Science](https://www.kdnuggets.com/2022/04/15-python-coding-interview-questions-must-know-data-science.html)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[15个数据科学必知的Python编程面试问题](https://www.kdnuggets.com/2022/04/15-python-coding-interview-questions-must-know-data-science.html)'
- en: '[25 Advanced SQL Interview Questions for Data Scientists](https://www.kdnuggets.com/2022/10/25-advanced-sql-interview-questions-data-scientists.html)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[25个数据科学家高级SQL面试问题](https://www.kdnuggets.com/2022/10/25-advanced-sql-interview-questions-data-scientists.html)'
- en: '[26 Data Science Interview Questions You Should Know](https://www.kdnuggets.com/26-data-science-interview-questions-you-should-know)'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[26个你应该知道的数据科学面试问题](https://www.kdnuggets.com/26-data-science-interview-questions-you-should-know)'
- en: '[24 SQL Questions You Might See on Your Next Interview](https://www.kdnuggets.com/2022/06/24-sql-questions-might-see-next-interview.html)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[24个SQL面试问题，你可能会在下一个面试中遇到](https://www.kdnuggets.com/2022/06/24-sql-questions-might-see-next-interview.html)'
