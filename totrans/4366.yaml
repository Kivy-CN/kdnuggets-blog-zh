- en: Simple Python Package for Comparing, Plotting & Evaluating Regression Models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/11/simple-python-package-comparing-plotting-evaluating-regression-models.html](https://www.kdnuggets.com/2020/11/simple-python-package-comparing-plotting-evaluating-regression-models.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Ajay Arunachalam](https://www.linkedin.com/in/ajay-arunachalam-4744581a/),
    Orebro University**'
  prefs: []
  type: TYPE_NORMAL
- en: I always believe in democratizing AI and machine learning, and spreading the
    knowledge in such a way, to cater the larger audiences in general, to harness
    the power of AI. An attempt inline to this is the development of the python package
    “**regressormetricgraphplot**” that is aimed to help users plot the evaluation
    metric graph with single line code for different widely used regression model
    metrics comparing them at a glance. With this utility package, it also significantly
    lowers the barrier for the practitioners to evaluate the different machine learning
    algorithms in an amateur fashion by applying it to their everyday predictive regression
    problems.
  prefs: []
  type: TYPE_NORMAL
- en: Before we dwell into the package details, let’s understand a few basic concepts
    in simple layman terms.
  prefs: []
  type: TYPE_NORMAL
- en: In general, the modeling pipeline involves the pre-processing stage, fitting
    the machine learning algorithms, and followed by their evaluation. In the figure
    below, as an example the modeling steps for ensemble learning is depicted. The
    block A includes the data processing like cleaning, wrangling, aggregation, deriving
    new features, feature selection, etc. The block B & C depicts the ensemble learning
    where the pre-processed data is input to the individual models in Layer-1 which
    are evaluated and tuned. The input to Layer-2 includes predictions from the previous
    Layer-1 where then the voting ensemble scheme is used to derive the final predictions.
    The results are combined using the average. Finally, the block D shows the model
    evaluation and result interpretation. The data is split (70:30 ratio) into training
    and testing data. The three standalone ML algorithms namely Linear Regression,
    Random Forest and XGBoost were used. All the models were created with tuned parameters,
    and then finally a **Voting Regression** model is used.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/d0a644811eddf7c416c573c0e905fc2a.png)'
  prefs: []
  type: TYPE_IMG
- en: Modeling Pipeline Ensemble Learning Example
  prefs: []
  type: TYPE_NORMAL
- en: Different regression metrics were used for evaluation. Let’s discuss each of
    them with their formulae, and corresponding simple explanation.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/b9f01e831ca1e4990d7cb8aa274439ec.png)'
  prefs: []
  type: TYPE_IMG
- en: A voting regressor is an ensemble meta-estimator that fits base regressors each
    on the whole dataset. It then averages the individual predictions to form a final
    prediction as shown below.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/1f06efb9f79cd2db8bca3fef709aed4b.png)'
  prefs: []
  type: TYPE_IMG
- en: Getting Started
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Terminal Installation**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Notebook**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Just replace the line ‘**from CompareModels import ***’ with ‘**from regressioncomparemetricplot
    import CompareModels**’
  prefs: []
  type: TYPE_NORMAL
- en: Follow the rest as demonstrated in the demo example [here] — ([https://github.com/ajayarunachalam/RegressorMetricGraphPlot/blob/main/regressormetricgraphplot/demo.ipynb](https://github.com/ajayarunachalam/RegressorMetricGraphPlot/blob/main/regressormetricgraphplot/demo.ipynb))
  prefs: []
  type: TYPE_NORMAL
- en: '**Installation with Anaconda**'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you installed your Python with Anaconda you can run the following commands
    to get started:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: CODE WALKTHROUGH
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Image for post](../Images/9e0eb5211810e85c0bce31e30bfa4d30.png)'
  prefs: []
  type: TYPE_IMG
- en: USAGE
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![Image for post](../Images/c7202ef4a1fc35eeea23d9786afb4931.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![Image for post](../Images/bba3241d685a395adf5c3f286db781a9.png)'
  prefs: []
  type: TYPE_IMG
- en: COMPLETE DEMO
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Comprehensive demonstrations can be found in the [Demo.ipynb](https://github.com/ajayarunachalam/RegressorMetricGraphPlot/blob/main/regressormetricgraphplot/demo.ipynb) file.
  prefs: []
  type: TYPE_NORMAL
- en: CONTACT
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If there’s some metrics implementation you would like to add or add in some
    examples feel free to do so. You can reach me at [ajay.arunachalam08@gmail.com](mailto:ajay.arunachalam08@gmail.com)
  prefs: []
  type: TYPE_NORMAL
- en: Always Keep Learning & Sharing Knowledge!!!
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Ajay Arunachalam](https://www.linkedin.com/in/ajay-arunachalam-4744581a/)**
    ([personal website](https://sites.google.com/site/ajayarunachalamprofile/)) is
    a Postdoctoral Researcher (Artificial Intelligence) at Centre for Applied Autonomous
    Sensor Systems, Orebro University, Sweden. Prior to this, he was working as a
    Data Scientist at True Corporation, a Communications Conglomerate, working with
    Petabytes of data, building & deploying deep models in production. He truly believes
    that Opacity in AI systems is need of the hour, before we fully accept the power
    of AI. With this in mind, he has always strived to democratize AI, and be more
    inclined towards building Interpretable Models. His interest is in Applied Artificial
    Intelligence, Machine Learning, Deep Learning, Deep RL, and Natural Language Processing,
    specifically learning good representations. From his experience working on real-world
    problems, he fully acknowledges that finding good representations is the key in
    designing the system that can solve interesting challenging real-world problems,
    that go beyond human-level intelligence, and ultimately explain complicated data
    for us that we don''t understand. In order to achieve this, he envisions learning
    algorithms that can learn feature representations from both unlabelled and labelled
    data, be guided with and/or without human interaction, and that are on different
    levels of abstractions in order to bridge the gap between low-level data and high-level
    abstract concepts.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://ajay-arunachalam08.medium.com/i-always-believe-in-democratizing-ai-and-machine-learning-and-spreading-the-knowledge-in-such-a-5343dab282aa).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Model Evaluation Metrics in Machine Learning](/2020/05/model-evaluation-metrics-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PyCaret 2.1 is here: What’s new?](/2020/09/pycaret-21-new.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Most Popular Distance Metrics Used in KNN and When to Use Them](/2020/11/most-popular-distance-metrics-knn.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[How to Package and Distribute Machine Learning Models with MLFlow](https://www.kdnuggets.com/2022/08/package-distribute-machine-learning-models-mlflow.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Plotting and Data Visualization for Data Science](https://www.kdnuggets.com/2022/06/plotting-data-visualization-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Pandas Plotting Functions You Might Not Know](https://www.kdnuggets.com/2023/02/5-pandas-plotting-functions-might-know.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Pandas Plotting Functions for Quick Data Visualization](https://www.kdnuggets.com/7-pandas-plotting-functions-for-quick-data-visualization)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Comparing Linear and Logistic Regression](https://www.kdnuggets.com/2022/11/comparing-linear-logistic-regression.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Beyond Accuracy: Evaluating & Improving a Model with the NLP Test Library](https://www.kdnuggets.com/2023/04/john-snow-beyond-accuracy-nlp-test-library.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
