- en: Creating A Simple Docker Data Science Image
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/08/simple-docker-data-science-image.html](https://www.kdnuggets.com/2023/08/simple-docker-data-science-image.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Creating A Simple Docker Data Science Setup](../Images/354326b0cc6fcfe512f843067a46c046.png)'
  prefs: []
  type: TYPE_IMG
- en: Image created by Author with Midjourney
  prefs: []
  type: TYPE_NORMAL
- en: Why Docker for Data Science?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: As a data scientist, having a standardized and portable environment for analysis
    and modeling is crucial. [Docker](https://www.docker.com/) provides an excellent
    way to create reusable and sharable data science environments. In this article,
    we'll walk through the steps to set up a basic data science environment using
    Docker.
  prefs: []
  type: TYPE_NORMAL
- en: 'Why is it we would consider using Docker? Docker allows data scientists to
    create isolated and reproducible environments for their work. Some key advantages
    of using Docker include:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Consistency** - The same environment can be replicated across different machines.
    No more "it works on my machine" issues.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Portability** - Docker environments can easily be shared and deployed across
    multiple platforms.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Isolation** - Containers isolate dependencies and libraries needed for different
    projects. No more conflicts!'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scalability** - It''s easy to scale an application built inside Docker by
    spinning up more containers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Collaboration** - Docker enables collaboration by allowing teams to share
    development environments.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Step 1: Creating a Dockerfile'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The starting point for any Docker environment is the Dockerfile. This text file
    contains instructions for building the Docker image.
  prefs: []
  type: TYPE_NORMAL
- en: Let's create a basic Dockerfile for a Python data science environment and save
    it as 'Dockerfile' without an extension.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This Dockerfile uses the [official Python image](https://hub.docker.com/layers/library/python/3.9.9-slim-buster/images/sha256-24f5fd0379e7a0a729baa94e7637336b9f2dd2cf8251e46923ec181ee90ab54c)
    and installs some popular data science libraries on top of it. The last line defines
    the default command to run Jupyter Lab when a container is started.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 2: Building the Docker Image'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now we can build the image using the `docker build` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This will create an image tagged `ds-python` based on our Dockerfile.
  prefs: []
  type: TYPE_NORMAL
- en: Building the image may take a few minutes as all the dependencies are installed.
    Once complete, we can view our local Docker images using `docker images`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 3: Running a Container'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'With the image built, we can now launch a container:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This will start a Jupyter Lab instance and map port 8888 on the host to 8888
    in the container.
  prefs: []
  type: TYPE_NORMAL
- en: We can now navigate to `localhost:8888` in a browser to access Jupyter and start
    running notebooks!
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 4: Sharing and Deploying the Image'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A key benefit of Docker is the ability to share and deploy images across environments.
  prefs: []
  type: TYPE_NORMAL
- en: 'To save an image to tar archive, run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'This tarball can then be loaded on any other system with Docker installed via:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: We can also push images to a Docker registry like Docker Hub to share with others
    publicly or privately within an organization.
  prefs: []
  type: TYPE_NORMAL
- en: 'To push the image to Docker Hub:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a Docker Hub account if you don't already have one
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Log in to Docker Hub from the command line using `docker login`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Tag the image with your Docker Hub username: `docker tag ds-python yourusername/ds-python`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Push the image: `docker push yourusername/ds-python`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The `ds-python` image is now hosted on Docker Hub. Other users can pull the
    image by running:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: For private repositories, you can create an organization and add users. This
    allows you to share Docker images securely within teams.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 5: Loading and Running the Image'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To load and run the Docker image on another system:'
  prefs: []
  type: TYPE_NORMAL
- en: Copy over the `ds-python.tar` file to the new system
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Load the image using `docker load -i ds-python.tar`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Start a container using `docker run -p 8888:8888 ds-python`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Access Jupyter Lab at `localhost:8888`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That's it! The ds-python image is now ready to use on the new system.
  prefs: []
  type: TYPE_NORMAL
- en: Final Thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This gives you a quick primer on setting up a reproducible data science environment
    with Docker. Some additional best practices to consider:'
  prefs: []
  type: TYPE_NORMAL
- en: Use smaller base images like Python slim to optimize image size
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leverage Docker volumes for data persistence and sharing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Follow security principles like avoiding running containers as root
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use Docker Compose for defining and running multi-container applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I hope you find this intro helpful. Docker enables tons of possibilities for
    streamlining and scaling data science workflows.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Matthew Mayo](https://www.linkedin.com/in/mattmayo13/)** ([**@mattmayo13**](https://twitter.com/mattmayo13))
    is a Data Scientist and the Editor-in-Chief of KDnuggets, the seminal online Data
    Science and Machine Learning resource. His interests lie in natural language processing,
    algorithm design and optimization, unsupervised learning, neural networks, and
    automated approaches to machine learning. Matthew holds a Master''s degree in
    computer science and a graduate diploma in data mining. He can be reached at editor1
    at kdnuggets[dot]com.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[How To Use Docker Tags to Manage Image Versions Effectively](https://www.kdnuggets.com/how-to-use-docker-tags-to-manage-image-versions-effectively)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[An Overview of Mercury: Creating Data Science Portfolio and…](https://www.kdnuggets.com/2022/05/overview-mercury-creating-data-science-portfolio-notebook-based-webapps.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Winning The Room: Creating and Delivering an Effective Data-Driven…](https://www.kdnuggets.com/2022/04/franks-winning-room-creating-delivering-effective-data-driven-presentation.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Creating a Web Application to Extract Topics from Audio with Python](https://www.kdnuggets.com/2023/01/creating-web-application-extract-topics-audio-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Challenges of Creating Features for Machine Learning](https://www.kdnuggets.com/2022/02/challenges-creating-features-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Best Practices for Creating Domain-Specific AI Models](https://www.kdnuggets.com/2022/07/best-practices-creating-domainspecific-ai-models.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
