- en: Simple Yet Practical Data Cleaning Codes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/02/simple-yet-practical-data-cleaning-codes.html](https://www.kdnuggets.com/2019/02/simple-yet-practical-data-cleaning-codes.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '**By [Admond Lee](https://www.linkedin.com/in/admond1994/), Micron Technology
    / AI Time Journal / Tech in Asia**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fed5bafb8bf3f9637902354cf7d045e3.png)'
  prefs: []
  type: TYPE_IMG
- en: In one of my articles—[My First Data Scientist Internship](https://towardsdatascience.com/my-first-data-scientist-internship-7f7aa2ee4040),
    I talked about how crucial data cleaning (data preprocessing, data munging...Whatever
    it is) is and how it could easily occupy 40%-70% of the whole data science workflow.
    The world is imperfect, so is data.
  prefs: []
  type: TYPE_NORMAL
- en: '***Garbage in, Garbage out***'
  prefs: []
  type: TYPE_NORMAL
- en: Real world data is dirty, and we as a data scientist—aka data cleaner sometimes—should
    be able to perform data cleaning prior to any data analysis or models building
    to ensure the the maximum quality of data.
  prefs: []
  type: TYPE_NORMAL
- en: Long story short, after being in data science field for quite some time, I do
    feel the pain of doing data cleaning before dealing with data analysis, visualization
    and models building.
  prefs: []
  type: TYPE_NORMAL
- en: Admit it or not, data cleaning is not an easy task and most of the time it is
    time-consuming and tedious, yet this process is too important to be neglected.
  prefs: []
  type: TYPE_NORMAL
- en: You’ll understand what I mean if you’ve been through the process. And this is
    exactly the reason why I wrote this article to help you perform
  prefs: []
  type: TYPE_NORMAL
- en: data cleaning in a more smoother way.
  prefs: []
  type: TYPE_NORMAL
- en: Why is This Article Important to You?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![first-post-on-linkedin](../Images/c0e2ed09dc70451ba63092b0223c47dd.png)[My
    recent post on LinkedIn](https://www.linkedin.com/feed/update/urn:li:activity:6486373885376851968)'
  prefs: []
  type: TYPE_IMG
- en: One week ago, I posted on LinkedIn to ask and answer some of the burning questions
    faced by aspiring data scientists and professionals about data science.
  prefs: []
  type: TYPE_NORMAL
- en: '*If you’ve been following my work, [I’m on a mission to democratize sharing-learning
    environment on LinkedIn](https://www.linkedin.com/pulse/2018-year-turning-point-my-life-kin-lim-lee/)
    with the focus particularly on data science by initiating discussions on LinkedIn
    among aspiring data scientists, data scientists and other data professionals in
    different expertise and background. Feel free to follow me on [LinkedIn](https://www.linkedin.com/in/admond1994/)
    if you’d like to participate in these discussions on interesting topics about
    data science. You’ll be amazed by how engaging and supportive the data science
    community is.* *????*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/00d09f37cbe02734f5961cf97ed3448b.png)'
  prefs: []
  type: TYPE_IMG
- en: So I got a few interesting questions in the comments. However, there was one
    particular question posted by [Anirban](https://www.linkedin.com/in/anirban-kar-chaudhuri-7913737b/)
    that I eventually decided to write an article to answer that question since I’ve
    been getting the similar questions from time to time.
  prefs: []
  type: TYPE_NORMAL
- en: In fact, not long ago I realized that some data had similar patterns when it
    came to data cleaning. And this was when I started organizing and compiling some
    of the data cleaning codes that I thought they would be applicable to other common
    scenarios — **my little toolbox for data cleaning**.
  prefs: []
  type: TYPE_NORMAL
- en: Since the common scenarios here span across different types of datasets, this
    article focuses more on showing and explaining what the codes are used for so
    that you can plug and play easily.
  prefs: []
  type: TYPE_NORMAL
- en: At the end of this article, I hope you’ll find the codes useful and that would
    make your data cleaning process more faster and efficient.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: My Little Toolbox for Data Cleaning
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the following code snippets, the codes are written in functions for self-explanatory
    purposes. You can always use the codes directly without putting them into functions
    with a small change of parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '**1\. Drop multiple columns**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Sometimes, not all columns are useful in our analysis. Therefore, the `df.drop`
    comes in handy to drop the selected columns as specified by you.
  prefs: []
  type: TYPE_NORMAL
- en: '**2\. Change dtypes**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: When a dataset gets larger, we need to convert the `dtypes` in order to save
    memory. If you’re interested in learning how to use Pandas to deal with large
    data, I strongly encourage you to check out this article — [Why and How to Use
    Pandas with Large Data](https://towardsdatascience.com/why-and-how-to-use-pandas-with-large-data-9594dda2ea4c).
  prefs: []
  type: TYPE_NORMAL
- en: '**3\. Convert categorical variable to numerical variable**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Some machine learning models require variables to be in numerical format. This
    is when we need to convert categorical variables to numerical variables before
    feeding them to the models. In terms of data visualization, I’d suggest to retain
    the categorical variables to have a more explicit interpretation and understanding.
  prefs: []
  type: TYPE_NORMAL
- en: '**4\. Check missing data**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: If you want to check the number of missing data for each column, this is the
    fastest way to go with. This gives you a better understanding of which columns
    have higher number of missing data that determine your next action of data cleaning
    and analysis.
  prefs: []
  type: TYPE_NORMAL
- en: '**5\. Remove strings in columns**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: There might be some time when you’d face the new line character or other weird
    symbols that appear in your columns of strings. This could easily be dealt with
    using `df['col_1'].replace` where `col_1` is one of the columns in the dataframe
    `df`.
  prefs: []
  type: TYPE_NORMAL
- en: '**6\. Remove white space in columns**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Anything is possible when data is messy. It is not uncommon to see there are
    some white spaces at the beginning of the strings. Thus this approach is useful
    when you want to remove white spaces at the beginning of the strings in a column.
  prefs: []
  type: TYPE_NORMAL
- en: '**7\. Concatenate two columns with strings (with condition)**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: This is helpful when you want to combine two columns with strings conditionally.
    For instance, you want to concatenate the 1st column with the 2nd column if the
    strings in the 1st column end with certain letters. The ending letters can also
    be removed after the concatenation, depending on your needs.
  prefs: []
  type: TYPE_NORMAL
- en: '**8\. Convert timestamp(from string to datetime format)**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: When dealing with time series data, chances are we’ll encounter timestamp column
    in string format. This means we may have to convert the string format to datetime
    format — format to be specified based on our requirement — in order to give meaningful
    analysis and presentation using the data.
  prefs: []
  type: TYPE_NORMAL
- en: Final Thoughts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![](../Images/177e8049d4f988d1ab40735e88b089c4.png)[(Source)](https://unsplash.com/photos/oTvU7Zmtei)'
  prefs: []
  type: TYPE_IMG
- en: Thank you for reading.
  prefs: []
  type: TYPE_NORMAL
- en: The codes by nature are relatively simple to implement. I hope this little toolbox
    of data cleaning gave you more confidence to perform data cleaning and more broader
    perspective of how datasets typically look like based on my experience.
  prefs: []
  type: TYPE_NORMAL
- en: As always, if you have any questions or comments feel free to leave your feedback
    below or you can always reach me on [LinkedIn](https://www.linkedin.com/in/admond1994/).
    Till then, see you in the next post! ????
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Admond Lee](https://www.linkedin.com/in/admond1994/)** is a Big Data
    Engineer at work, Data Scientist in action. His current roles are at Micron Technology,
    AI Time Journal, and Tech in Asia. He has been helping start-up founders and various
    companies tackle their problems using data with deep data science and industry
    expertise. You can connect with him on [LinkedIn](https://www.linkedin.com/in/admond1994/),
    [Medium](https://medium.com/@admond1994), [Twitter](https://twitter.com/admond1994),
    and [Facebook](https://www.facebook.com/lee.admond.355).'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/the-simple-yet-practical-data-cleaning-codes-ad27c4ce0a38).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Notes on Feature Preprocessing: The What, the Why, and the How](/2018/10/notes-feature-preprocessing-what-why-how.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Financial Data Analysis – Data Processing 1: Loan Eligibility Prediction](/2018/09/financial-data-analysis-loan-eligibility-prediction.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Tidying Data in Python](/2017/01/tidying-data-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_IND
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '* * *'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: '[5 Simple Steps to Automate Data Cleaning with Python](https://www.kdnuggets.com/5-simple-steps-to-automate-data-cleaning-with-python)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[LLaMA 3: Meta’s Most Powerful Open-Source Model Yet](https://www.kdnuggets.com/llama-3-metas-most-powerful-open-source-model-yet)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Practical Statistics for Data Scientists](https://www.kdnuggets.com/2023/05/practical-statistics-data-scientists.html)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Tools Every Data Scientist Should Know: A Practical Guide](https://www.kdnuggets.com/tools-every-data-scientist-should-know-a-practical-guide)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Practical Deep Learning from fast.ai is Back!](https://www.kdnuggets.com/2022/07/practical-deep-learning-fastai-2022.html)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Practical Guide to Transfer Learning using PyTorch](https://www.kdnuggets.com/2023/06/practical-guide-transfer-learning-pytorch.html)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
