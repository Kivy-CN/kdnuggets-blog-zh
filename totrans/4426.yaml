- en: Build Your Own AutoML Using PyCaret 2.0
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 PyCaret 2.0 构建你自己的 AutoML
- en: 原文：[https://www.kdnuggets.com/2020/08/build-automl-pycaret.html](https://www.kdnuggets.com/2020/08/build-automl-pycaret.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/08/build-automl-pycaret.html](https://www.kdnuggets.com/2020/08/build-automl-pycaret.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Moez Ali](https://www.linkedin.com/in/profile-moez/), Founder & Author
    of PyCaret**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Moez Ali](https://www.linkedin.com/in/profile-moez/)，PyCaret 的创始人和作者**'
- en: '![Figure](../Images/ebd6f2d3031fd2699b0b56170a71c36a.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/ebd6f2d3031fd2699b0b56170a71c36a.png)'
- en: PyCaret — An open source, low-code machine learning library in Python
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret — 一个开源的低代码 Python 机器学习库
- en: '**PyCaret 2.0**'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**PyCaret 2.0**'
- en: Last week we have announced [PyCaret 2.0](https://towardsdatascience.com/announcing-pycaret-2-0-39c11014540e),
    an open source, **low-code** machine learning library in Python that automates
    machine learning workflow. It is an end-to-end machine learning and model management
    tool that speeds up machine learning experiment cycle and helps data scientists
    become more efficient and productive.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 上周我们宣布了 [PyCaret 2.0](https://towardsdatascience.com/announcing-pycaret-2-0-39c11014540e)，这是一个开源的**低代码**
    Python 机器学习库，自动化机器学习工作流。它是一个端到端的机器学习和模型管理工具，加快了机器学习实验周期，并帮助数据科学家提高效率和生产力。
- en: In this post we present a **step-by-step tutorial** on how PyCaret can be used
    to build an Automated Machine Learning Solution within [Power BI](https://powerbi.microsoft.com/en-us/),
    thus allowing data scientists and analysts to add a layer of machine learning
    to their Dashboards without any additional license or software costs. PyCaret
    is an open source and **free to use **Python library that comes with a wide range
    of functions that are built to work within Power BI.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们展示了一个**逐步教程**，讲解如何在 [Power BI](https://powerbi.microsoft.com/en-us/)
    中使用 PyCaret 构建自动化机器学习解决方案，从而让数据科学家和分析师可以在他们的仪表板上添加机器学习层，而无需额外的许可或软件成本。PyCaret
    是一个开源的**免费使用**的 Python 库，提供了多种在 Power BI 中工作的功能。
- en: 'By the end of this article you will learn how to implement the following in
    Power BI:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文结束时，你将学会如何在 Power BI 中实现以下内容：
- en: Setting up Python conda environment and install pycaret==2.0.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 Python conda 环境并安装 pycaret==2.0。
- en: Link the newly created conda environment with Power BI.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将新创建的 conda 环境与 Power BI 连接起来。
- en: Build your first AutoML solution in Power BI and present the performance metrics
    on dashboard.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Power BI 中构建你的第一个 AutoML 解决方案，并在仪表板上展示性能指标。
- en: Productionalize / deploy your AutoML solution in Power BI.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Power BI 中生产化/部署你的 AutoML 解决方案。
- en: Microsoft Power BI
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Microsoft Power BI
- en: Power BI is a business analytics solution that lets you visualize your data
    and share insights across your organization, or embed them in your app or website.
    In this tutorial, we will use [Power BI Desktop](https://powerbi.microsoft.com/en-us/downloads/) for
    machine learning by importing the PyCaret library into Power BI.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Power BI 是一个商业分析解决方案，让你能够可视化数据并在组织内部共享见解，或将其嵌入到应用程序或网站中。在本教程中，我们将通过将 PyCaret
    库导入 Power BI 来使用 [Power BI Desktop](https://powerbi.microsoft.com/en-us/downloads/)
    进行机器学习。
- en: What is Automated Machine Learning?
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 什么是自动化机器学习？
- en: Automated machine learning (AutoML) is the process of automating the time consuming,
    iterative tasks of machine learning. It allows data scientists and analysts to
    build machine learning models with efficiency while sustaining the model quality.
    The final goal of any AutoML solution is to finalize the best model based on some
    performance criteria.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化机器学习（AutoML）是自动化机器学习中耗时的迭代任务的过程。它允许数据科学家和分析师高效地构建机器学习模型，同时保持模型质量。任何 AutoML
    解决方案的最终目标是根据某些性能标准确定最佳模型。
- en: Traditional machine learning model development process is resource-intensive,
    requiring significant domain knowledge and time to produce and compare dozens
    of models. With automated machine learning, you’ll accelerate the time it takes
    to get production-ready ML models with great ease and efficiency.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的机器学习模型开发过程资源消耗大，需要大量领域知识和时间来生成和比较多个模型。使用自动化机器学习，你可以更轻松、高效地加快获得生产就绪的机器学习模型的时间。
- en: '**How Does PyCaret works?**'
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**PyCaret 是如何工作的？**'
- en: 'PyCaret is a workflow automation tool for supervised and unsupervised machine
    learning. It is organized into six modules and each module has a set of functions
    available to perform some specific action. Each function takes an input and returns
    an output, which in most cases is a trained machine learning model. Modules available
    as of the second release are:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 是一个用于监督学习和无监督学习的工作流自动化工具。它分为六个模块，每个模块都有一组函数，用于执行特定操作。每个函数接收输入并返回输出，在大多数情况下是一个训练好的机器学习模型。第二版发布时可用的模块有：
- en: '[Classification](https://www.pycaret.org/classification)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[分类](https://www.pycaret.org/classification)'
- en: '[Regression](https://www.pycaret.org/regression)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[回归](https://www.pycaret.org/regression)'
- en: '[Clustering](https://www.pycaret.org/clustering)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[聚类](https://www.pycaret.org/clustering)'
- en: '[Anomaly Detection](https://www.pycaret.org/anomaly-detection)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[异常检测](https://www.pycaret.org/anomaly-detection)'
- en: '[Natural Language Processing](https://www.pycaret.org/nlp)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[自然语言处理](https://www.pycaret.org/nlp)'
- en: '[Association Rule Mining](https://www.pycaret.org/association-rules)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[关联规则挖掘](https://www.pycaret.org/association-rules)'
- en: All modules in PyCaret supports data preparation (over 25+ essential preprocessing
    techniques, comes with a huge collection of untrained models & support for custom
    models, automatic hyperparameter tuning, model analysis and interpretability,
    automatic model selection, experiment logging and easy cloud deployment options.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 中的所有模块支持数据准备（超过 25 种基本预处理技术，配有大量未训练的模型以及对自定义模型的支持，自动超参数调优，模型分析和可解释性，自动模型选择，实验记录和简单的云部署选项）。
- en: '![Figure](../Images/f04fa31cd25523d0e3a6fa808557fbb0.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/f04fa31cd25523d0e3a6fa808557fbb0.png)'
- en: https://www.pycaret.org/guide
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: https://www.pycaret.org/guide
- en: To learn more about PyCaret, [click here](https://towardsdatascience.com/announcing-pycaret-2-0-39c11014540e) to
    read our official release announcement.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于 PyCaret 的信息，[点击这里](https://towardsdatascience.com/announcing-pycaret-2-0-39c11014540e)
    阅读我们的官方发布公告。
- en: If you want to get started in Python, [click here](https://github.com/pycaret/pycaret/tree/master/examples) to
    see a gallery of example notebooks to get started.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想开始学习 Python，[点击这里](https://github.com/pycaret/pycaret/tree/master/examples)
    查看示例笔记本的图库。
- en: “PyCaret is democratizing machine learning and the use of advanced analytics
    by providing free, open source, and low-code machine learning solution for business
    analysts, domain experts, citizen data scientists, and experienced data scientists”.
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “PyCaret 通过提供免费的开源低代码机器学习解决方案，正在推动机器学习和高级分析的普及，适用于业务分析师、领域专家、普通数据科学家以及经验丰富的数据科学家。”
- en: Before we start
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开始之前
- en: If you are using Python for the first time, installing Anaconda Distribution
    is the easiest way to get started. [Click here](https://www.anaconda.com/distribution/) to
    download Anaconda Distribution with Python 3.7 or greater.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是第一次使用 Python，安装 Anaconda Distribution 是开始的最简单方式。 [点击这里](https://www.anaconda.com/distribution/)
    下载包含 Python 3.7 或更高版本的 Anaconda Distribution。
- en: '![Figure](../Images/c7c8ab066e516a98e8339027d3f08f0c.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/c7c8ab066e516a98e8339027d3f08f0c.png)'
- en: '[https://www.anaconda.com/products/individual](https://www.anaconda.com/products/individual)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.anaconda.com/products/individual](https://www.anaconda.com/products/individual)'
- en: Setting up the Environment
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置环境
- en: 'Before we start using PyCaret’s machine learning capabilities in Power BI we
    need to create a virtual environment and install pycaret. This is a three-step
    process:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始使用 PyCaret 在 Power BI 中的机器学习功能之前，需要创建一个虚拟环境并安装 pycaret。这是一个三步过程：
- en: '[✅](https://fsymbols.com/signs/tick/) **Step 1 — Creating an anaconda environment**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[✅](https://fsymbols.com/signs/tick/) **步骤 1 — 创建 anaconda 环境**'
- en: 'Open **Anaconda Prompt **from start menu and execute the following code:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 从开始菜单中打开 **Anaconda Prompt** 并执行以下代码：
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![Figure](../Images/ca629ea77ecd0f69afc5f6279ebf25f4.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/ca629ea77ecd0f69afc5f6279ebf25f4.png)'
- en: Anaconda Prompt — Creating an environment
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Anaconda Prompt — 创建环境
- en: '[✅](https://fsymbols.com/signs/tick/) **Step 2 — Installing PyCaret**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[✅](https://fsymbols.com/signs/tick/) **步骤 2 — 安装 PyCaret**'
- en: 'Execute the following code in Anaconda Prompt:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Anaconda Prompt 中执行以下代码：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Installation may take 15–20 minutes. If you are having issues with installation,
    please see our [GitHub](https://www.github.com/pycaret/pycaret) page for known
    issues and resolutions.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 安装可能需要 15–20 分钟。如果你遇到安装问题，请查看我们的 [GitHub](https://www.github.com/pycaret/pycaret)
    页面以获取已知问题和解决方案。
- en: '[✅](https://fsymbols.com/signs/tick/)**Step 3 — Setting up a Python Directory
    in Power BI**'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[✅](https://fsymbols.com/signs/tick/)**步骤 3 — 在 Power BI 中设置 Python 目录**'
- en: 'The virtual environment created must be linked with Power BI. This can be done
    using Global Settings in Power BI Desktop (File → Options → Global → Python scripting).
    Anaconda Environment by default is installed under:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的虚拟环境必须与 Power BI 关联。这可以通过 Power BI Desktop 中的全局设置完成（文件 → 选项 → 全局 → Python
    脚本）。Anaconda 环境默认安装在：
- en: '`C:\Users\***username***\AppData\Local\Continuum\anaconda3\envs\myenv`'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`C:\Users\***username***\AppData\Local\Continuum\anaconda3\envs\myenv`'
- en: '![Figure](../Images/1b946ad7361f6b2dc10da9efbb2296a0.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/1b946ad7361f6b2dc10da9efbb2296a0.png)'
- en: File → Options → Global → Python scripting
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 文件 → 选项 → 全局 → Python 脚本
- en: '**???? Lets get started**'
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**???? 开始吧**'
- en: Setting the Business Context
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设定业务背景
- en: An insurance company wants to improve its cash flow forecasting by better predicting
    the patient charges using the demographic and basic patient health risk metrics
    at the time of hospitalization.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 一家保险公司希望通过更好地预测患者费用来改善现金流预测，使用住院时的基本人口统计数据和患者健康风险指标。
- en: '![Figure](../Images/15cb86b37c83b7fbc80ec7c8d1b53f3c.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/15cb86b37c83b7fbc80ec7c8d1b53f3c.png)'
- en: '*(*[*data source*](https://www.kaggle.com/mirichoi0218/insurance#insurance.csv)*)*'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '*(*[*数据源*](https://www.kaggle.com/mirichoi0218/insurance#insurance.csv)*)*'
- en: Objective
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 目标
- en: To train and select the best performing regression model that predicts patient
    charges based on the other variables in the dataset i.e. age, sex, bmi, children,
    smoker, and region.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 训练和选择最佳性能的回归模型，该模型根据数据集中其他变量（即年龄、性别、BMI、子女数、吸烟者和地区）预测患者费用。
- en: ???? Step 1 — Load the dataset
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 步骤 1 — 加载数据集
- en: You can load dataset directly from out GitHub by going to Power BI Desktop →
    Get Data → Web
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以直接从我们的 GitHub 上加载数据集，方法是：Power BI Desktop → 获取数据 → Web
- en: Link to dataset: [https://raw.githubusercontent.com/pycaret/pycaret/master/datasets/insurance.csv](https://raw.githubusercontent.com/pycaret/pycaret/master/datasets/insurance.csv)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集链接：[https://raw.githubusercontent.com/pycaret/pycaret/master/datasets/insurance.csv](https://raw.githubusercontent.com/pycaret/pycaret/master/datasets/insurance.csv)
- en: '![Figure](../Images/7c9a9d98fe18942bb5df5adac07e96a8.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/7c9a9d98fe18942bb5df5adac07e96a8.png)'
- en: Power BI Desktop → Get Data → Web
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Power BI Desktop → 获取数据 → Web
- en: 'Create a duplicate dataset in Power Query:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Power Query 中创建一个重复的数据集：
- en: '![Figure](../Images/b9cdb8d9f55c88017447107fcea8bf85.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/b9cdb8d9f55c88017447107fcea8bf85.png)'
- en: Power Query → Create a duplicate dataset
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Power Query → 创建一个重复的数据集
- en: ???? Step 2— Run AutoML as Python Script
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 步骤 2— 运行 AutoML 作为 Python 脚本
- en: 'Run the following code in Power Query (Transform → Run Python script):'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Power Query 中运行以下代码（转换 → 运行 Python 脚本）：
- en: '[PRE2]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![Figure](../Images/cb1d217ca940b1dd5ad8481e25483e4b.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/cb1d217ca940b1dd5ad8481e25483e4b.png)'
- en: Script in Power Query
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Power Query 中的脚本
- en: The first two line of code is for importing the relevant module and initializing
    the setup function. The setup function performs several imperative steps required
    in machine learning such as cleaning missing values (if any), splitting the data
    into train and test, setting up cross validation strategy, defining metrics, performing
    algorithm-specific transformations etc.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 前两行代码用于导入相关模块并初始化设置函数。设置函数执行机器学习中所需的几个重要步骤，例如清理缺失值（如果有）、将数据拆分为训练集和测试集、设置交叉验证策略、定义指标、执行特定算法的转换等。
- en: The magic function that trains multiple models, compares and evaluates performance
    metrics is **compare_models. **It returns the best model based on ‘**sort’ **parameter
    that can be defined inside compare_models. By default, it uses ‘R2’ for regression
    use-case and ‘Accuracy’ for classification use-case.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 训练多个模型、比较和评估性能指标的魔法函数是**compare_models**。它根据可以在 `compare_models` 中定义的‘**sort**’参数返回最佳模型。默认情况下，它对回归用例使用‘R2’，对分类用例使用‘Accuracy’。
- en: Rest of the lines are for finalizing the best model returned through compare_models
    and saving it as a pickle file in your local diretory. Last line returns the dataframe
    with details of model trained and their performance metrics.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 剩下的几行代码用于最终确定通过 `compare_models` 返回的最佳模型，并将其保存为本地目录中的 pickle 文件。最后一行返回包含训练模型及其性能指标详细信息的数据框。
- en: 'Output:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![Figure](../Images/1bf6f2ac6a2004416fe10d76f3b6e164.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/1bf6f2ac6a2004416fe10d76f3b6e164.png)'
- en: Output from Python Script
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Python 脚本的输出
- en: With just few lines we have trained over 20 models and the table presents the
    performance metrics based on 10 fold cross validation.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 仅用几行代码我们就训练了超过 20 个模型，表格展示了基于 10 折交叉验证的性能指标。
- en: Top performing model **Gradient Boosting Regressor** will be saved along with
    the entire transformation pipeline as a pickle file in your local directory. This
    file can be consumed later to generate predictions on a new dataset (see step
    3 below).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 表现最佳的模型**梯度提升回归器**将与整个转换管道一起作为 pickle 文件保存在你的本地目录中。此文件稍后可以用来对新的数据集生成预测（见下方步骤
    3）。
- en: '![Figure](../Images/2f3d1f34f6ce81e94ad11f60a177486a.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/2f3d1f34f6ce81e94ad11f60a177486a.png)'
- en: Transformation Pipeline and Model saved as a pickle file
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 转换管道和模型保存为 pickle 文件
- en: 'PyCaret works on the idea of modular automation. As such if you have more resources
    and time for training you can extend the script to perform hyperparameter tuning,
    ensembling, and other available modeling techniques. See example below:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 基于模块化自动化的理念。因此，如果你有更多的资源和时间用于训练，你可以扩展脚本以进行超参数调整、集成和其他可用建模技术。请参见以下示例：
- en: '[PRE3]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We have now returned top 5 models instead of the one highest performing model.
    We have then created a list comprehension (loop) to tune hyperparameters of top
    candidate models and then finally **automl function **selects the single best
    performing model which is then saved as a pickle file (Note that we didn’t use **finalize_model **this
    time because automl function returns the finalized model).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在返回了前 5 个模型，而不是仅返回表现最好的一个模型。然后，我们创建了一个列表推导（循环）来调整前候选模型的超参数，最后**automl 函数**选择了表现最好的单一模型，该模型然后被保存为
    pickle 文件（注意，我们这次没有使用**finalize_model**，因为 automl 函数返回的是最终模型）。
- en: '**Sample Dashboard**'
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**示例仪表板**'
- en: Sample dashboard is created. PBIX file is [uploaded here](https://github.com/pycaret/pycaret-powerbi-automl).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 示例仪表板已创建。PBIX 文件[已上传到这里](https://github.com/pycaret/pycaret-powerbi-automl)。
- en: '![Figure](../Images/28d20533650eb410ff6ba82d854e0d10.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/28d20533650eb410ff6ba82d854e0d10.png)'
- en: Dashboard created using PyCaret AutoML results
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 PyCaret AutoML 结果创建的仪表板
- en: ???? Step 3 — Deploy Model to generate predictions
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 步骤 3 — 部署模型以生成预测
- en: Once we have a final model saved as a pickle file we can use it to predict charges
    on the new dataset.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们将最终模型保存为 pickle 文件，我们可以使用它对新的数据集进行费用预测。
- en: '**Loading new dataset**'
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**加载新数据集**'
- en: 'For demonstration purposes, we will load the same dataset again and remove
    the ‘charges’ column from the dataset. Execute the following code as a Python
    script in Power Query to get the predictions:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示目的，我们将再次加载相同的数据集并从数据集中删除‘charges’列。请在 Power Query 中执行以下 Python 脚本以获取预测：
- en: '[PRE4]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Output :'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![Figure](../Images/f8e32de1177d53c5a94f5857415a408e.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/f8e32de1177d53c5a94f5857415a408e.png)'
- en: predict_model function output in Power Query
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '`predict_model` 函数在 Power Query 中的输出'
- en: '**Deploy on Power BI Service**'
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**在 Power BI 服务上部署**'
- en: When you publish a Power BI report with Python scripts to the service, these
    scripts will also be executed when your data is refreshed through the on-premises
    data gateway.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将包含 Python 脚本的 Power BI 报告发布到服务时，这些脚本也会在通过本地数据网关刷新数据时执行。
- en: To enable this, you must ensure that the Python runtime with the dependent Python
    packages are also installed on the machine hosting your personal gateway. Note,
    Python script execution is not supported for on-premises data gateways shared
    by multiple users. [Click here](https://powerbi.microsoft.com/en-us/blog/python-visualizations-in-power-bi-service/) to
    read more about this.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，你必须确保安装了包含依赖 Python 包的 Python 运行时在托管个人网关的机器上。请注意，共享的本地数据网关不支持 Python
    脚本执行。[点击这里](https://powerbi.microsoft.com/en-us/blog/python-visualizations-in-power-bi-service/)以了解更多信息。
- en: PBIX files used in this tutorial is uploaded on this GitHub Repository: [https://github.com/pycaret/pycaret-powerbi-automl](https://github.com/pycaret/pycaret-powerbi-automl)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程中使用的 PBIX 文件已上传到这个 GitHub 仓库：[https://github.com/pycaret/pycaret-powerbi-automl](https://github.com/pycaret/pycaret-powerbi-automl)
- en: If you would like to learn more about PyCaret 2.0, read this [announcement](https://towardsdatascience.com/announcing-pycaret-2-0-39c11014540e).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于 PyCaret 2.0 的信息，请阅读这个[公告](https://towardsdatascience.com/announcing-pycaret-2-0-39c11014540e)。
- en: If you have used PyCaret before, you might be interested in [release notes](https://github.com/pycaret/pycaret/releases/tag/2.0) for
    current release.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你之前使用过 PyCaret，你可能会对当前版本的[发行说明](https://github.com/pycaret/pycaret/releases/tag/2.0)感兴趣。
- en: There is no limit to what you can achieve using this light-weight workflow automation
    library in Python. If you find this useful, please do not forget to give us ⭐️
    on our github repo.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个轻量级的工作流自动化库在 Python 中，你可以实现无数目标。如果你觉得这个很有用，请不要忘记在我们的 GitHub 仓库上给我们⭐️。
- en: To hear more about PyCaret follow us on [LinkedIn](https://www.linkedin.com/company/pycaret/) and [Youtube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g).
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 想了解更多 PyCaret 信息，请关注我们的[LinkedIn](https://www.linkedin.com/company/pycaret/)和[Youtube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g)。
- en: '**You may also be interested it:**'
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**你可能也感兴趣：**'
- en: '[Machine Learning in Power BI using PyCaret](https://towardsdatascience.com/machine-learning-in-power-bi-using-pycaret-34307f09394a)'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 Power BI 中使用 PyCaret 进行机器学习](https://towardsdatascience.com/machine-learning-in-power-bi-using-pycaret-34307f09394a)'
- en: '[Build your first Anomaly Detector in Power BI using PyCaret](https://towardsdatascience.com/build-your-first-anomaly-detector-in-power-bi-using-pycaret-2b41b363244e)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 Power BI 中使用 PyCaret 构建你的第一个异常检测器](https://towardsdatascience.com/build-your-first-anomaly-detector-in-power-bi-using-pycaret-2b41b363244e)'
- en: '[How to implement Clustering in Power BI using PyCaret](https://towardsdatascience.com/how-to-implement-clustering-in-power-bi-using-pycaret-4b5e34b1405b)'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '[如何在 Power BI 中使用 PyCaret 实现聚类](https://towardsdatascience.com/how-to-implement-clustering-in-power-bi-using-pycaret-4b5e34b1405b)'
- en: '[Topic Modeling in Power BI using PyCaret](https://towardsdatascience.com/topic-modeling-in-power-bi-using-pycaret-54422b4e36d6)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 Power BI 中使用 PyCaret 进行主题建模](https://towardsdatascience.com/topic-modeling-in-power-bi-using-pycaret-54422b4e36d6)'
- en: Important Links
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重要链接
- en: '[Blog](https://medium.com/@moez_62905)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '[博客](https://medium.com/@moez_62905)'
- en: '[Release Notes for PyCaret 2.0](https://github.com/pycaret/pycaret/releases/tag/2.0)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '[PyCaret 2.0 的发布说明](https://github.com/pycaret/pycaret/releases/tag/2.0)'
- en: '[User Guide / Documentation](https://www.pycaret.org/guide)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[用户指南 / 文档](https://www.pycaret.org/guide)'
- en: '[Github](https://www.github.com/pycaret/pycaret)'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '[Github](https://www.github.com/pycaret/pycaret)'
- en: '[Stackoverflow](https://stackoverflow.com/questions/tagged/pycaret)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[Stackoverflow](https://stackoverflow.com/questions/tagged/pycaret)'
- en: '[Install PyCaret](https://www.pycaret.org/install)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '[安装 PyCaret](https://www.pycaret.org/install)'
- en: '[Notebook Tutorials](https://www.pycaret.org/tutorial)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '[Notebook 教程](https://www.pycaret.org/tutorial)'
- en: '[Contribute in PyCaret](https://www.pycaret.org/contribute)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 PyCaret 中贡献](https://www.pycaret.org/contribute)'
- en: Want to learn about a specific module?
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 想了解特定模块？
- en: Click on the links below to see the documentation and working examples.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 点击下面的链接查看文档和工作示例。
- en: '[Classification](https://www.pycaret.org/classification)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '[分类](https://www.pycaret.org/classification)'
- en: '[Regression](https://www.pycaret.org/regression)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[回归](https://www.pycaret.org/regression)'
- en: '[Clustering](https://www.pycaret.org/clustering)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[聚类](https://www.pycaret.org/clustering)'
- en: '[Anomaly Detection](https://www.pycaret.org/anomaly-detection)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[异常检测](https://www.pycaret.org/anomaly-detection)'
- en: '[Natural Language Processing](https://www.pycaret.org/nlp)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '[自然语言处理](https://www.pycaret.org/nlp)'
- en: '[Association Rule Mining](https://www.pycaret.org/association-rules)'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[关联规则挖掘](https://www.pycaret.org/association-rules)'
- en: '**Bio: [Moez Ali](https://www.linkedin.com/in/profile-moez/)** is a Data Scientist,
    and is Founder & Author of PyCaret.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介: [Moez Ali](https://www.linkedin.com/in/profile-moez/)** 是一名数据科学家，同时也是
    PyCaret 的创始人和作者。'
- en: '[Original](https://towardsdatascience.com/build-your-own-automl-in-power-bi-using-pycaret-8291b64181d).
    Reposted with permission.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/build-your-own-automl-in-power-bi-using-pycaret-8291b64181d)。经许可转载。'
- en: '**Related:**'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[GitHub is the Best AutoML You Will Ever Need](/2020/08/github-best-automl-ever-need.html)'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Github 是你将来需要的最佳 AutoML](/2020/08/github-best-automl-ever-need.html)'
- en: '[5 Things You Don’t Know About PyCaret](/2020/07/5-things-pycaret.html)'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[你不知道的 PyCaret 的 5 件事](/2020/07/5-things-pycaret.html)'
- en: '[Deploy a Machine Learning Pipeline to the Cloud Using a Docker Container](/2020/06/deploy-machine-learning-pipeline-cloud-docker.html)'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Docker 容器将机器学习管道部署到云端](/2020/06/deploy-machine-learning-pipeline-cloud-docker.html)'
- en: '* * *'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前 3 门课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业轨道。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析水平'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT 工作'
- en: '* * *'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[LangChain 101: Build Your Own GPT-Powered Applications](https://www.kdnuggets.com/2023/04/langchain-101-build-gptpowered-applications.html)'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[LangChain 101：构建自己的 GPT 驱动应用](https://www.kdnuggets.com/2023/04/langchain-101-build-gptpowered-applications.html)'
- en: '[Build Your Own PandasAI with LlamaIndex](https://www.kdnuggets.com/build-your-own-pandasai-with-llamaindex)'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[构建自己的 PandasAI 与 LlamaIndex](https://www.kdnuggets.com/build-your-own-pandasai-with-llamaindex)'
- en: '[Introduction to Binary Classification with PyCaret](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 的二分类介绍](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
- en: '[Introduction to Clustering in Python with PyCaret](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 的聚类介绍](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)'
- en: '[Announcing PyCaret 3.0: Open-source, Low-code Machine Learning in Python](https://www.kdnuggets.com/2023/03/announcing-pycaret-30-opensource-lowcode-machine-learning-python.html)'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[宣布 PyCaret 3.0：Python 中的开源低代码机器学习](https://www.kdnuggets.com/2023/03/announcing-pycaret-30-opensource-lowcode-machine-learning-python.html)'
- en: '[Getting Started with PyCaret](https://www.kdnuggets.com/2022/11/getting-started-pycaret.html)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开始使用 PyCaret](https://www.kdnuggets.com/2022/11/getting-started-pycaret.html)'
