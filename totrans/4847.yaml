- en: PyTorch Tensor Basics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2018/05/pytorch-tensor-basics.html](https://www.kdnuggets.com/2018/05/pytorch-tensor-basics.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: Now that we know [what a tensor is](/2018/05/wtf-tensor.html), and saw how Numpy's
    `ndarray` can be used to represent them, let's switch gears and see how they are
    represented in PyTorch.
  prefs: []
  type: TYPE_NORMAL
- en: '[PyTorch](https://pytorch.org/) has made an impressive dent on the machine
    learning scene since Facebook open-sourced it in early 2017\. It may not have
    the widespread adoption that TensorFlow has -- which was initially released well
    over a year prior, enjoys the backing of Google, and had the luxury of establishing
    itself as the gold standard as a new wave of neural networking tools was being
    ushered in -- but the attention that PyTorch receives in the research community
    especially is quite real. Much of this attention comes both from its relationship
    to [Torch proper](http://torch.ch/), and its dynamic computation graph.'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '![Header image](../Images/27f79394bcc1a8c8b2bdb92a788b8013.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Image source](http://noaxiom.org/tensor)As excited as I have recently been
    by turning my own attention to PyTorch, this is not really a *PyTorch* tutorial;
    it''s more of an introduction to PyTorch''s [`Tensor`](https://pytorch.org/docs/master/tensors.html)
    class, which is reasonably analogous to Numpy''s `ndarray`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tensor (Very) Basics**'
  prefs: []
  type: TYPE_NORMAL
- en: 'So let''s take a look at some of PyTorch''s tensor basics, starting with creating
    a tensor (using the `Tensor` class):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'You can transpose a tensor in one of 2 ways:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Both result in the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Note that neither result in a change to the original.
  prefs: []
  type: TYPE_NORMAL
- en: 'Reshape a tensor with view:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'And another example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: It should be obvious that mathematical conventions which are followed by Numpy
    carry over to PyTorch Tensors (specifically I'm referring to row and column notation).
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a tensor and fill it with zeros (you can accomplish something similar
    with `ones()`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Create a tensor with randoms pulled from the normal distribution:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Shape, dimensions, and datatype of a tensor object:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: It should also be obvious that, beyond mathematical concepts, a number of programmatic
    and instantiation similarities between `ndarray` and `Tensor` implementations
    exist.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can slice PyTorch tensors the same way you slice `ndarrays`, which should
    be familiar to anyone who uses other Python structures:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '**PyTorch `Tensor` To and From Numpy `ndarray`**'
  prefs: []
  type: TYPE_NORMAL
- en: You can easily create a tensors from an `ndarray` and vice versa. These operations
    are fast, since the data of both structures will share the same memory space,
    and so no copying is involved. This is obviously an [efficient approach](https://stsievert.com/blog/2017/09/07/pytorch/).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '**Basic Tensor Operations**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few tensor operations, which you can compare with Numpy implementations
    for fun. First up is the cross product:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'Next is the matrix product:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'And finally, elementwise multiplication:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '**A Word About GPUs**'
  prefs: []
  type: TYPE_NORMAL
- en: PyTorch tensors have inherent GPU support. Specifying to use the GPU memory
    and CUDA cores for storing and performing tensor calculations is easy; the [`cuda`](https://pytorch.org/docs/master/cuda.html)
    package can help determine whether GPUs are available, and the package's `cuda()`
    method assigns a tensor to the GPU.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: '**Related**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[WTF is a Tensor?!?](/2018/05/wtf-tensor.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Started with PyTorch Part 1: Understanding How Automatic Differentiation
    Works](/2018/04/getting-started-pytorch-understanding-automatic-differentiation.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Simple Starter Guide to Build a Neural Network](/2018/02/simple-starter-guide-build-neural-network.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
