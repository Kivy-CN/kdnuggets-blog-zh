["```py\nselect category, \nsum(amount) as sales\nfrom sales\ngroup by category;\n```", "```py\nselect department, \ncount(empid) as emp_count\nfrom employees\ngroup by department;\n```", "```py\nselect department, \navg(salary) as avg_salary\nfrom employees\ngroup by department;\n```", "```py\nselect department, \nmax(salary) as max_salary\nfrom employees\ngroup by department;\n```", "```py\nselect name, \ncount(*) AS duplicate_count\nfrom customers\ngroup by name\nhaving count(*) > 1;\n```", "```py\nselect book_name, amount\nrow_number() over (partition by category order by amount) as sales_rank\nfrom book_sales;\n```", "```py\nselect category, book_name, amount from (\nselect category, book_name, amount\nrow_number() over (partition by category order by amount) as sales_rank\nfrom book_sales\n) as book_ranked_sales\nwhere sales_rank = 1;\n```", "```py\nselect product_id, date, amount,\nsum(amount) over (partition by product_id order by date desc) as running_total\nfrom sales_data;\n```", "```py\nselect employee_id, salary, department,\navg(salary) over (partition by department) as avg_dept_sal\nfrom employees;\n```", "```py\nselect employee_id, salary,\nntile(4) over (order by salary desc) as tile_id\nfrom employees;\n```", "```py\nselect product_id,\nrow_number() over (order by product_id) as row_num,\nproduct_id - row_number() over (order by product_id) as island_id,\nfrom products;\n```"]