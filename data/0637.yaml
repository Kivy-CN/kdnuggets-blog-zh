- en: A Guide to Preparing OpenCV for Android
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 Android 准备 OpenCV 的指南
- en: 原文：[https://www.kdnuggets.com/2020/10/guide-preparing-opencv-android.html](https://www.kdnuggets.com/2020/10/guide-preparing-opencv-android.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/10/guide-preparing-opencv-android.html](https://www.kdnuggets.com/2020/10/guide-preparing-opencv-android.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: This tutorial guides Android developers in preparing the popular library OpenCV
    (Open Computer Vision) for use. Through a step-by-step guide, the library will
    be imported into Android Studio (the official IDE for Android).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程指导 Android 开发人员为使用流行的 OpenCV（开源计算机视觉）库做准备。通过逐步指南，将该库导入 Android Studio（Android
    的官方 IDE）。
- en: Upon installation and setup, OpenCV can be used for performing any of the operations
    it supports, such as object detection, segmentation, tracking, and more.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 安装和设置完成后，可以使用 OpenCV 执行其支持的任何操作，例如目标检测、分割、跟踪等。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'At the end of this tutorial, OpenCV is used to apply the Canny filter to an
    image. The Android Studio project associated with this is available on GitHub
    here:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程的最后，将使用 OpenCV 对图像应用 Canny 滤镜。与此相关的 Android Studio 项目可以在 GitHub 上找到：
- en: '[**ahmedfgad/OpenCVAndroid**'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[**ahmedfgad/OpenCVAndroid**](https://github.com/ahmedfgad/OpenCVAndroid)'
- en: Using OpenCV in Android Devices. Contribute to ahmedfgad/OpenCVAndroid development
    by creating an account on GitHub.](https://github.com/ahmedfgad/OpenCVAndroid)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 OpenCV 在 Android 设备上。通过在 GitHub 上创建一个帐户来贡献 [ahmedfgad/OpenCVAndroid](https://github.com/ahmedfgad/OpenCVAndroid)
    的开发。
- en: Overview of OpenCV
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: OpenCV 概述
- en: OpenCV is a vision library built for doing complex, real-time operations on
    images. It is a free, open source library originally written in C++. It includes
    interfaces with Python, Java, and MATLAB. With no need to write many lines of
    code to build an operation, OpenCV already supports building such operations with
    a simple interface, where the user can write just a few lines of code.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: OpenCV 是一个用于对图像执行复杂实时操作的视觉库。它是一个免费、开源的库，最初用 C++ 编写。它包括与 Python、Java 和 MATLAB
    的接口。无需编写大量代码即可构建操作，OpenCV 已经支持使用简单的接口构建这样的操作，用户只需编写几行代码。
- en: Before discussing importing OpenCV into and Android project, let’s start by
    building an Android project and make sure that the Android development environment
    is working as expected.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论如何将 OpenCV 导入 Android 项目之前，首先从构建一个 Android 项目开始，确保 Android 开发环境按预期工作。
- en: 'The points that will be covered in this tutorial are as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程将涵盖的要点如下：
- en: Building an Android Studio Project
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个 Android Studio 项目
- en: Running the Project
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行项目
- en: Editing the Project to Display a Toast Message
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑项目以显示 Toast 消息
- en: Downloading OpenCV
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载 OpenCV
- en: Importing OpenCV in Android Studio
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Android Studio 中导入 OpenCV
- en: Fixing Possible Gradle Sync Errors
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复可能的 Gradle 同步错误
- en: Adding OpenCV as a Dependency
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 OpenCV 作为依赖项添加
- en: Adding Native Libraries
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加本地库
- en: Using OpenCV for Filtering Images
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 OpenCV 进行图像滤波
- en: Summary
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 概述
- en: Building an Android Studio Project
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建一个 Android Studio 项目
- en: Let’s go through the steps of building a new Android Studio project. The first
    is to create a new project from the **File** menu as illustrated in the next figure.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看构建一个新的 Android Studio 项目的步骤。第一步是从**文件**菜单中创建一个新项目，如下图所示。
- en: '![Image for post](../Images/09d4736825e19a6960264bbf595fcd42.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图片](../Images/09d4736825e19a6960264bbf595fcd42.png)'
- en: By selecting the “**New Project**” menu item, a new window appears asking for
    a few details (e.g. app name and project directory). The app name we’ll used for
    this tutorial is **OpenCVAndroid**.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 通过选择“**新建项目**”菜单项，将出现一个新窗口，要求输入一些细节（例如应用名称和项目目录）。本教程中将使用的应用名称是**OpenCVAndroid**。
- en: '![Image for post](../Images/e1b850399b72094326853b8e917b8535.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图片用于帖子](../Images/e1b850399b72094326853b8e917b8535.png)'
- en: By clicking the **Next** button, another window appears asking for the target
    devices and the minimum SDK. You can select one of the SDKs available in your
    environment. You can lower the minimum SDK if you’d like to support more devices.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**下一步**按钮后，会出现另一个窗口询问目标设备和最低 SDK。你可以选择环境中可用的一个 SDK。如果你想支持更多设备，可以降低最低 SDK。
- en: '![Image for post](../Images/63280fdcb929804425e63f772e48203f.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图片用于帖子](../Images/63280fdcb929804425e63f772e48203f.png)'
- en: By clicking **Next**, another window appears asking for whether a default activity
    is to be created within the project or not. There are a few different options.
    If no activity is to be created, you can select the top-left option “**Add No
    Activity**”.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**下一步**，会出现另一个窗口询问是否在项目中创建一个默认活动。有几个不同的选项。如果不创建任何活动，你可以选择左上角的选项“**添加无活动**”。
- en: Because we’re going to build an Android app, then there must be an Activity,
    even if empty. As a result, I selected the “**Empty Activity**” option. Note that
    this activity is not completely empty as it contains a TextView that covers the
    screen, as we’ll see later, after running the app.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们要构建一个 Android 应用程序，所以必须有一个 Activity，即使是空的。因此，我选择了“**空活动**”选项。请注意，这个活动并非完全空白，因为它包含一个覆盖整个屏幕的
    TextView，稍后运行应用程序时我们会看到。
- en: '![Image for post](../Images/18f12cf75a1b78a83fa5e0f022694b06.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图片用于帖子](../Images/18f12cf75a1b78a83fa5e0f022694b06.png)'
- en: By specifying that the app is to include an activity, another window appears
    asking for the **Activity Name**. This name is regarded as the class name of the
    Java file associated with this activity. After specifying the proper name of your
    choice, click **Finish** to create the project.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 指定应用程序包含一个活动后，会出现另一个窗口询问**活动名称**。此名称被视为与该活动相关联的 Java 文件的类名。指定适当的名称后，点击**完成**以创建项目。
- en: Note that you can check the “**Generate Layout File**” checkbox to create a
    layout for the activity. You can either check or uncheck the “Backwards Compatibility”
    checkbox.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，你可以勾选“**生成布局文件**”复选框来为活动创建一个布局。你可以选择勾选或取消勾选“向后兼容性”复选框。
- en: '![Image for post](../Images/2ea57011b493983d2a2b711d0c9b5d0e.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图片用于帖子](../Images/2ea57011b493983d2a2b711d0c9b5d0e.png)'
- en: After the project is created, you can select the Android project view and will
    find a Java file for the activity named **MainActivity**. It is a Java file with
    a .java extension, but it isn’t just displayed in the Android project view. There’s
    also an XML layout file named `activity_main.xml`, as illustrated in the next
    figure.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 项目创建完成后，你可以选择 Android 项目视图，并会找到一个名为**MainActivity**的 Java 文件。这是一个 .java 扩展名的
    Java 文件，但不仅仅在 Android 项目视图中显示。还有一个名为`activity_main.xml`的 XML 布局文件，如下图所示。
- en: '![Image for post](../Images/a6341b1e2e219393f28a91fb6318ab34.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图片用于帖子](../Images/a6341b1e2e219393f28a91fb6318ab34.png)'
- en: Running the Project
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行项目
- en: Without discussing the implementation of these files, let’s run the project
    to ensure everything is working correctly. To run an Android Studio project, you
    either need an emulator (virtual device) or a real device connected via a USB
    cable.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在不讨论这些文件的实现的情况下，让我们运行项目以确保一切正常。要运行 Android Studio 项目，你需要一个模拟器（虚拟设备）或通过 USB 电缆连接的真实设备。
- en: To run the project, select the **Run ‘app’** option from the **Run** menu. A
    window appears asking whether an emulator or a USB device is used. I currently
    don’t have any USB connected devices and thus will choose the available emulator.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行项目，请从**运行**菜单中选择**运行 'app'**选项。会出现一个窗口询问是否使用模拟器或 USB 设备。我目前没有连接任何 USB 设备，因此选择了可用的模拟器。
- en: '![Image](../Images/fde4eee83e3b7f54895b3c9169c42171.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/fde4eee83e3b7f54895b3c9169c42171.png)'
- en: After the emulator starts up, the application will install automatically and
    will appear in the app list, as shown below. Note that the app name “**OpenCV
    Android**” is what we entered previously.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟器启动后，应用程序将自动安装并出现在应用程序列表中，如下所示。请注意，应用程序名称“**OpenCV Android**”是我们之前输入的。
- en: '![Image for post](../Images/1baa3f6a84fec4b3d3990c4dae27a9d2.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图片用于帖子](../Images/1baa3f6a84fec4b3d3990c4dae27a9d2.png)'
- en: After the project runs, the app will not only install but also launch automatically.
    The screen of the app is shown below. As specified previously, the activity layout
    just contains a TextView displaying “**Hello World!**”.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 项目运行后，应用程序不仅会安装，还会自动启动。应用程序的界面如下所示。如前所述，活动布局仅包含一个显示“**Hello World!**”的 TextView。
- en: '![Image for post](../Images/02e0d545caf94283de33bc2ddd5b50df.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![Image for post](../Images/02e0d545caf94283de33bc2ddd5b50df.png)'
- en: After running the project, we know that the development environment is working
    correctly. Before importing OpenCV within the project, it’s better to get familiar
    with the project. Thus, let’s see the contents of the `MainActivity.java` and `activity_main.xml` files
    and make a simple edit.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 运行项目后，我们知道开发环境工作正常。在项目中导入 OpenCV 之前，最好先熟悉一下项目。因此，我们来查看 `MainActivity.java` 和
    `activity_main.xml` 文件的内容，并进行一个简单的编辑。
- en: Looking for a spark to take your apps to the next level? Machine learning enables
    powerful, highly-personalized mobile experiences. [Subscribe to the Fritz AI Newsletter
    to learn how.](https://www.fritz.ai/newsletter?utm_campaign=fritzai-newsletter-scale4&utm_source=heartbeat)
  id: totrans-52
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 想为你的应用带来新的突破吗？机器学习可以实现强大而高度个性化的移动体验。 [订阅 Fritz AI 新闻通讯以了解更多信息](https://www.fritz.ai/newsletter?utm_campaign=fritzai-newsletter-scale4&utm_source=heartbeat)。
- en: Editing the Project to Display a Toast Message
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编辑项目以显示 Toast 消息
- en: The content of the MainActivity.java file is given below. The activity name
    is MainActivity, which extends the AppCompatActivity class. It’s well-known that
    an Android activity extends the Activity class, but in this project, it actually
    extends the AppCompatActivity because we checked the “Backwards Compatibility”
    option while creating the project.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: MainActivity.java 文件的内容如下所示。活动名称为 MainActivity，继承自 AppCompatActivity 类。众所周知，Android
    活动继承自 Activity 类，但在本项目中，它实际上继承自 AppCompatActivity，因为我们在创建项目时选择了“向后兼容性”选项。
- en: The activity has just the `onCreate()` method, which is called once the activity
    is created. It just uses the `setContentView()` method for setting the activity
    XML layout, which renders the UI of the activity when launched.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 该活动仅有 `onCreate()` 方法，它在活动创建时被调用。它只使用 `setContentView()` 方法来设置活动的 XML 布局，该方法在启动时呈现活动的
    UI。
- en: The content of the XML layout is listed below. It simply creates a layout of
    type `ConstraintLayout` with width and height covering the device screen. It just
    has a single child view, which is `TextView` as specified while building the project.
    The text of the `TextView` is set to “Hello World!”.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: XML 布局的内容如下所示。它简单地创建了一个 `ConstraintLayout` 类型的布局，宽度和高度覆盖设备屏幕。它只有一个子视图，即在构建项目时指定的
    `TextView`。`TextView` 的文本设置为“Hello World!”。
- en: To get familiar with the project, let’s make a simple edit by adding a new Button
    view, which displays a Toast message when clicked. The edited layout XML file
    for adding the Button view is listed below. The Button text is set to “**Display
    Toast Message**”. When clicked, a callback method named `displayToast()` will
    be called.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 为了熟悉项目，我们来做一个简单的编辑，通过添加一个新的按钮视图，该视图在点击时显示 Toast 消息。添加按钮视图的编辑后的布局 XML 文件如下所示。按钮的文本设置为“**显示
    Toast 消息**”。点击时，将调用一个名为 `displayToast()` 的回调方法。
- en: The `displayToast()` method is implemented in the edited activity Java file,
    as shown below. It uses the Toast class for displaying a toast message.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`displayToast()` 方法在编辑过的活动 Java 文件中实现，如下所示。它使用 Toast 类来显示 Toast 消息。'
- en: After running the project again and clicking the button, the message will be
    displayed as given in the next figure. By reaching this step, we’ve made sure
    the project is running correctly, and we also have a little understanding of the
    main activity and its layout. Now, let’s start importing the OpenCV library.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行项目并点击按钮时，消息将如下一图所示显示。通过这个步骤，我们确保项目运行正常，同时对主活动及其布局有了一些了解。现在，让我们开始导入 OpenCV
    库。
- en: '![Image for post](../Images/3a4e87387ca89c89d5598221b9bf5109.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![Image for post](../Images/3a4e87387ca89c89d5598221b9bf5109.png)'
- en: Downloading OpenCV
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下载 OpenCV
- en: For downloading OpenCV, you can use this link [https://opencv.org/releases](https://opencv.org/releases),
    which lists the OpenCV releases. Scrolling down this page, you can find OpenCV
    3.4.4, which is used in this tutorial. You can download the latest release available
    at the current time which is 4.1.0 if that’s the best option for you. Remember
    to download the Android release of the library.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 下载 OpenCV 时，你可以使用这个链接 [https://opencv.org/releases](https://opencv.org/releases)，它列出了
    OpenCV 的各个版本。在页面向下滚动，你可以找到本教程中使用的 OpenCV 3.4.4。如果最新的 4.1.0 版本对你来说是更好的选择，也可以下载。记得下载库的
    Android 版本。
- en: '![Image](../Images/cf9a6c62fb2e24a9f7439521ef28b959.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/cf9a6c62fb2e24a9f7439521ef28b959.png)'
- en: You will download a ZIP file, which you’ll need to extract.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你将下载一个 ZIP 文件，需要将其解压。
- en: '![Image](../Images/a6b720a5a454779f396df57f9dc7d205.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/a6b720a5a454779f396df57f9dc7d205.png)'
- en: The directory tree of the extracted folder is given in the next figure. The
    2 important folders we’ll use are **java** and **libs**. Bother of these files
    are subfolders of the **sdk** folder.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 解压缩文件夹的目录结构见下图。我们将使用的两个重要文件夹是 **java** 和 **libs**。这两个文件夹都是 **sdk** 文件夹的子文件夹。
- en: The **java** folder contains the java files of the OpenCV. Because not all files
    are written in Java and some are written in C++ and still needed to be used within
    Java, there’s another folder named **libs** that holds these files.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**java** 文件夹包含 OpenCV 的 Java 文件。因为并非所有文件都是用 Java 编写的，有些是用 C++ 编写的，并且仍需要在 Java
    中使用，所以还有一个名为 **libs** 的文件夹来存放这些文件。'
- en: '![Image](../Images/6b12eb76232b448af384ae0034b9a802.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/6b12eb76232b448af384ae0034b9a802.png)'
- en: Importing OpenCV in Android Studio
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Android Studio 中导入 OpenCV
- en: In order to import a library in Android Studio, go to the **File** menu and
    select “**Import Module**” as illustrated in the next figure.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Android Studio 中导入库，进入 **File** 菜单并选择“**Import Module**”，如下图所示。
- en: '![Image](../Images/7e6ef1d0b64719f3c17194f02f97ec6b.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/7e6ef1d0b64719f3c17194f02f97ec6b.png)'
- en: After selecting it, a new window appears asking for the path of the module to
    be imported as shown below.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 选择后，会出现一个新窗口，询问要导入的模块的路径，如下所示。
- en: '![Image](../Images/da193accab0a57a85dfba7a1444d4ae9.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/da193accab0a57a85dfba7a1444d4ae9.png)'
- en: Click on the three dots near on the right side near the “**Source Directory**”
    and navigate to the path where the **sdk** folder inside the downloaded OpenCV
    for Android exists.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 点击右侧“**Source Directory**”旁边的三个点，然后导航到下载的 OpenCV for Android 中 **sdk** 文件夹所在的路径。
- en: '![Image](../Images/b02057dd23ab67d90334f261240491dc.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/b02057dd23ab67d90334f261240491dc.png)'
- en: After clicking **OK**, the “**Source Directory**” in the previous menu will
    change according to the selected path as illustrated in the figure below. The
    module name will change to reflect that Android Studio detected OpenCV.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **OK** 后，之前菜单中的“**Source Directory**”将根据选择的路径进行更改，如下图所示。模块名称将更改以反映 Android
    Studio 检测到 OpenCV。
- en: '![Image](../Images/36f79808d7fe5bfd5d42115aeeea69b7.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/36f79808d7fe5bfd5d42115aeeea69b7.png)'
- en: Click **Next** to go to another window shown below, where you can just click **Finish** to
    import the library. After clicking Finish, you have to wait for the Gradle Sync
    to finish.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **Next** 进入下一个窗口，在那里你只需点击 **Finish** 以导入库。点击 Finish 后，你需要等待 Gradle Sync 完成。
- en: '![Image](../Images/73d5eb18bd36b78721b722805e8cbbab.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/73d5eb18bd36b78721b722805e8cbbab.png)'
- en: Fixing Possible Gradle Sync Errors
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修复可能的 Gradle Sync 错误
- en: A number of errors might appear when building the project using Gradle. Here
    we’re going to discuss 3 of them.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Gradle 构建项目时，可能会出现多个错误。这里我们将讨论其中的 3 个。
- en: The first one is that it’s expected to encounter a **Gradle Sync** error while
    loading the library as shown below. The problem is simply that OpenCV is using
    an SDK not installed in the environment.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你可能会遇到 **Gradle Sync** 错误，如下所示。问题在于 OpenCV 使用的 SDK 在环境中未安装。
- en: '![Image](../Images/82376e5911e10ded3366b6b76bc4a89a.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/82376e5911e10ded3366b6b76bc4a89a.png)'
- en: We can solve this issue in 2 ways. The first one is to install the SDK used
    by OpenCV. The second one, which will be used in this tutorial, is to change the
    SDK version used by OpenCV to one of the already available SDKs.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过两种方式解决这个问题。第一种是安装 OpenCV 使用的 SDK。第二种方法，在本教程中使用，是将 OpenCV 使用的 SDK 版本更改为已存在的
    SDK 之一。
- en: To change the SDK used by OpenCV, change the project view to Project and go
    to the `build.gradle` file under the imported OpenCV. Don’t forget to open the `build.gradle` file
    under the OpenCV library, not under the app.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改 OpenCV 使用的 SDK，请将项目视图更改为 Project，然后转到导入的 OpenCV 下的 `build.gradle` 文件。不要忘记打开
    OpenCV 库下的 `build.gradle` 文件，而不是应用下的。
- en: '![Image](../Images/a1978bc6f506e343b5c5418fefe049e1.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/a1978bc6f506e343b5c5418fefe049e1.png)'
- en: The content of this file is listed below. According to the `compileSdkVersion` field,
    it reflects that the SDK version used by OpenCV is 14 and hasn’t been installed.
    This error might not appear for you if SDK 14 is already installed.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件的内容如下所示。根据 `compileSdkVersion` 字段，它反映了 OpenCV 使用的 SDK 版本为 14 并且尚未安装。如果 SDK
    14 已安装，则此错误可能不会出现。
- en: If SDK 14 isn’t installed for you, you can change it to another available SDK.
    I’ll use SDK 21\. The edited `build.gradle` file of the OpenCV library is listed
    below. You can try to sync the project again after making this edit, and it’s
    expected that everything will work successfully after that.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有安装 SDK 14，你可以更改为其他可用的 SDK。我将使用 SDK 21。下面列出了编辑后的 OpenCV 库 `build.gradle`
    文件。你可以在进行此编辑后尝试重新同步项目，预期一切会在那之后成功运行。
- en: The second issue is that the first line in the `build.gradle` file of the OpenCV
    library might be as shown below. This refers to the fact that the imported OpenCV
    is an application and not a library. I found that this line exists for OpenCV
    4.1.0.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个问题是 OpenCV 库的 `build.gradle` 文件中的第一行可能如下所示。这指的是导入的 OpenCV 是一个应用程序而不是库。我发现这一行存在于
    OpenCV 4.1.0 中。
- en: '[PRE0]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Using this line returns an error while building the project. The error says:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这一行会在构建项目时返回错误。错误信息是：
- en: '`Unable to resolve dependency for ‘**:app@debugUnitTest/compileClasspath’:
    Could not resolve project :openCVLibrary433.**`'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '`无法解析‘**:app@debugUnitTest/compileClasspath’ 的依赖项：无法解析项目 :openCVLibrary433.**`'
- en: 'Because OpenCV is meant to be imported as a library, the first line must be
    the following:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 因为 OpenCV 是作为库导入的，第一行必须是以下内容：
- en: '[PRE1]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Changing the first line to the one above may not be enough. This is because
    if the first line in the OpenCV `build.gradle` is `apply plugin: ‘com.android.application’`,
    then it’s expected to find the `applicationId` set to `org.opencv`. It’s a problem
    to have such a field in projects imported as a library. So you have to format
    it as a comment it using // or simply delete it.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '将第一行更改为上面提到的内容可能还不够。这是因为如果 OpenCV 的 `build.gradle` 文件中的第一行是 `apply plugin:
    ‘com.android.application’`，则期望找到 `applicationId` 设置为 `org.opencv`。在作为库导入的项目中有这样的字段是一个问题。因此，你需要使用
    // 将其格式化为注释，或者直接删除它。'
- en: Adding OpenCV as a Dependency
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加 OpenCV 作为依赖
- en: Despite being imported within Android Studio, OpenCV isn’t detected inside the
    activity Java file. The project doesn’t know what `org.opencv` is. This is because
    we also have to add the library as a dependency in our project.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在 Android Studio 内部导入了 OpenCV，但在 activity Java 文件中没有检测到 OpenCV。项目不知道 `org.opencv`
    是什么。这是因为我们还需要在项目中将库添加为依赖。
- en: '![Image for post](../Images/b2993a9c932b5fdd5b6336df3edce3e5.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图片](../Images/b2993a9c932b5fdd5b6336df3edce3e5.png)'
- en: In order to do that, select the “**Project Structure**” menu item from the File
    menu, as shown below.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，从文件菜单中选择“**项目结构**”菜单项，如下所示。
- en: '![Image for post](../Images/6c343185c2a62c7143a1c7ed5c457987.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图片](../Images/6c343185c2a62c7143a1c7ed5c457987.png)'
- en: This opens another window. In the left side under the **Modules** section, click
    on **app** and then go to **Dependencies**. This opens the dependencies window.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这会打开另一个窗口。在左侧的 **模块** 部分，点击 **app**，然后转到 **依赖**。这会打开依赖窗口。
- en: '![Image](../Images/0b6052691684be92823648548c3d29ec.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/0b6052691684be92823648548c3d29ec.png)'
- en: In order to add a new dependency, click on the green + icon on the right side
    of the screen, as shown below. A menu appears, from which we select the “**Module
    dependency**” option.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 为了添加新的依赖，点击屏幕右侧的绿色 + 图标，如下所示。会出现一个菜单，我们从中选择“**模块依赖**”选项。
- en: '![Image](../Images/9dff33579ab1018c55bc0cf84ddbdf32.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/9dff33579ab1018c55bc0cf84ddbdf32.png)'
- en: A new window opens, which shows a list of modules to be selected as dependencies.
    We have just a single module for OpenCV, and thus a single item is available.
    Select it and click OK.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 一个新窗口会打开，显示一个模块列表以供选择作为依赖项。我们只有一个 OpenCV 模块，因此只有一个项目可用。选择它并点击 OK。
- en: '![Image](../Images/b22138db6d1393154e94a4707712ad78.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/b22138db6d1393154e94a4707712ad78.png)'
- en: This takes you back to the dependencies window, but after OpenCV is added as
    one of the dependencies. Click OK to confirm adding OpenCV as a dependency.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这会带你回到依赖窗口，但 OpenCV 已作为依赖之一添加。点击 OK 确认添加 OpenCV 作为依赖。
- en: '![Image](../Images/2c476007d5efed2ab8d7f099621bcd1d.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/2c476007d5efed2ab8d7f099621bcd1d.png)'
- en: After doing that, you’ll find that the OpenCV library is detected within the
    Java code.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，你会发现 OpenCV 库在 Java 代码中被检测到了。
- en: '![Image](../Images/7851fe97e394f0a872505b3505942e9c.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/7851fe97e394f0a872505b3505942e9c.png)'
- en: Adding Native Libraries
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加本地库
- en: Some files within OpenCV are native. This means they aren’t written in Java
    but C++. These files are available within the **libs** folder. The folder tree
    of the downloaded OpenCV file is given again below to refresh your memory about
    the location of the **libs** folder which is **OpenCV/sdk/native/libs**.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: OpenCV 中的一些文件是本地的。这意味着它们不是用 Java 编写的，而是用 C++ 编写的。这些文件可以在**libs**文件夹中找到。下载的 OpenCV
    文件的文件夹结构如下，以便你重新记起**libs**文件夹的位置，即**OpenCV/sdk/native/libs**。
- en: '![Image](../Images/1cc05e9135ec336509a96b28a0783efe.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/1cc05e9135ec336509a96b28a0783efe.png)'
- en: 'This folder needs to be copied into the project under this directory: OpenCVAndroid/app/src/main/.
    It’s very important to rename the copied folder to be **jnilibs**. After doing
    that, the contents of the project’s main folder are as shown in the next figure.
    After doing that, the OpenCV library is ready for use.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件夹需要复制到项目中的这个目录：OpenCVAndroid/app/src/main/。非常重要的是将复制的文件夹重命名为**jnilibs**。完成后，项目的主文件夹内容如下图所示。完成这些步骤后，OpenCV
    库就可以使用了。
- en: '![Image](../Images/7bcfae846f55d13a172726a52344633e.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/7bcfae846f55d13a172726a52344633e.png)'
- en: Using OpenCV for Filtering Images
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 OpenCV 进行图像滤镜处理
- en: After importing OpenCV successfully within Android Studio, this section of the
    tutorial uses OpenCV to apply a filter over an image. The [GitHub project](https://github.com/ahmedfgad/OpenCVAndroid) contains
    the Android Studio project in which OpenCV is already imported, and the Canny
    filter is applied to an image after clicking a button.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 成功在 Android Studio 中导入 OpenCV 后，本教程的这一部分使用 OpenCV 对图像应用滤镜。[GitHub 项目](https://github.com/ahmedfgad/OpenCVAndroid)包含了已经导入
    OpenCV 的 Android Studio 项目，并在点击按钮后对图像应用了 Canny 滤镜。
- en: The layout of the previous app will be modified to add an ImageView, as listed
    below. This is not the only change, as the layout used is changed to a **LinearLayout**.
    The orientation used for this layout is vertical. Moreover, the TextView is no
    longer needed and thus removed.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的应用布局将被修改以添加一个 ImageView，具体如下。这不是唯一的更改，因为所使用的布局被更改为**LinearLayout**。该布局的方向为垂直。此外，TextView
    不再需要，因此被移除。
- en: The image displayed on the ImageView is a resource image named **test**. In
    order to add a resource image to the project, simply use the Android project view
    and drag and drop an image file into the **drawable** folder, as illustrated below.
    The image file is named `test.jpg`. The resource name of this image, **test**,
    is derived from the file name.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 显示在 ImageView 上的图像是名为**test**的资源图像。为了将资源图像添加到项目中，只需使用 Android 项目视图，将图像文件拖放到**drawable**文件夹中，如下所示。图像文件名为`test.jpg`。该图像的资源名称**test**来源于文件名。
- en: '![Image](../Images/7c975feb7e89e68cc5b04436e7e0ace7.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/7c975feb7e89e68cc5b04436e7e0ace7.png)'
- en: The app screen after running the modified app is shown below. Next, we write
    Java code for reading the resource image displayed in the ImageView, process it
    using OpenCV, and then display the resultant image again in the ImageView.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 运行修改后的应用程序后的屏幕如下面所示。接下来，我们编写 Java 代码来读取在 ImageView 中显示的资源图像，使用 OpenCV 处理它，然后再次在
    ImageView 中显示处理后的图像。
- en: '![Image](../Images/44dfb2dfd87b34bb78692768e20c86c9.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/44dfb2dfd87b34bb78692768e20c86c9.png)'
- en: Previously, the Button view was displaying a toast message when clicked. This
    time, it will apply the Canny filter over the image. The modified Java code is
    listed below. All you have to do is to create a drawable resource with the name **test**.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 之前，按钮视图在点击时会显示一个 toast 消息。这一次，它将对图像应用 Canny 滤镜。修改后的 Java 代码如下。你只需创建一个名为**test**的
    drawable 资源。
- en: After clicking the button, the resource image is read as an OpenCV Mat named
    img. Then the Mat is filtered according to the `Canny()` method inside the `Imgproc` class
    and the filtered image is stored into the `img_result` Mat.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 点击按钮后，资源图像会被读取为名为 img 的 OpenCV Mat。然后，使用 `Canny()` 方法对 Mat 进行滤镜处理，并将处理后的图像存储到
    `img_result` Mat 中。
- en: This Mat is then converted into a bitmap image using the `matToBitmap()` method.
    Finally, the converted bitmap image is set as the image displayed on the ImageView
    using the `setImageBitmap()` method. The result after filtering the image is shown
    in the next figure.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，这个 Mat 会使用 `matToBitmap()` 方法转换为位图图像。最后，使用 `setImageBitmap()` 方法将转换后的位图图像设置为
    ImageView 上显示的图像。图像过滤后的结果如下图所示。
- en: '![Image for post](../Images/d792b6881efff17e2660ba1e265b6bd0.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![发布图像](../Images/d792b6881efff17e2660ba1e265b6bd0.png)'
- en: And that’s it!
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 就这些！
- en: Summary
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结
- en: This tutorial discussed the detailed steps for using OpenCV in Android Studio.
    An Android Studio project is created, and after making sure it’s working properly,
    we started preparing OpenCV.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程讨论了在Android Studio中使用OpenCV的详细步骤。创建了一个Android Studio项目，并在确保其正常工作的情况下，开始准备OpenCV。
- en: To do this, we first downloaded OpenCV from its official site. After that, we
    imported OpenCV as a module within the Android Studio project and added it as
    a dependency. We then copied the **libs** folder (within Android Studio) into
    our project, renaming it **jnilibs**. As a final step in preparing OpenCV for
    Android Studio, we initialized `OpenCVLoader` using the `onCreate()` method.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们首先从官方网站下载了OpenCV。之后，将OpenCV作为模块导入Android Studio项目，并将其添加为依赖项。接着，我们将**libs**文件夹（在Android
    Studio中）复制到项目中，并将其重命名为**jnilibs**。作为准备OpenCV用于Android Studio的最终步骤，我们使用`OpenCVLoader`初始化了`onCreate()`方法。
- en: Finally, we ensured OpenCV was working properly within the project and used
    it to build a simple app in which an image is filtered using Canny.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们确保了OpenCV在项目中的正常工作，并用它构建了一个简单的应用程序，在该程序中，通过Canny进行图像滤波。
- en: For Contacting the Author
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 联系作者
- en: E-mail: [ahmed.f.gad@gmail.com](mailto:ahmed.f.gad@gmail.com)
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'E-mail: [ahmed.f.gad@gmail.com](mailto:ahmed.f.gad@gmail.com)'
- en: LinkedIn: [https://linkedin.com/in/ahmedfgad](https://linkedin.com/in/ahmedfgad)
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'LinkedIn: [https://linkedin.com/in/ahmedfgad](https://linkedin.com/in/ahmedfgad)'
- en: Heartbeat: [https://heartbeat.fritz.ai/@ahmedfgad](https://heartbeat.fritz.ai/@ahmedfgad)
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Heartbeat: [https://heartbeat.fritz.ai/@ahmedfgad](https://heartbeat.fritz.ai/@ahmedfgad)'
- en: KDnuggets: [https://www.kdnuggets.com/author/ahmed-gad](https://www.kdnuggets.com/author/ahmed-gad)
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'KDnuggets: [https://www.kdnuggets.com/author/ahmed-gad](https://www.kdnuggets.com/author/ahmed-gad)'
- en: TowardsDataScience: [https://towardsdatascience.com/@ahmedfgad](https://towardsdatascience.com/@ahmedfgad)
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'TowardsDataScience: [https://towardsdatascience.com/@ahmedfgad](https://towardsdatascience.com/@ahmedfgad)'
- en: GitHub: [https://github.com/ahmedfgad](https://github.com/ahmedfgad)
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'GitHub: [https://github.com/ahmedfgad](https://github.com/ahmedfgad)'
- en: '**Bio: [Ahmed Gad](https://www.linkedin.com/in/ahmedfgad/)** received his B.Sc.
    degree with excellent with honors in information technology from the Faculty of
    Computers and Information (FCI), Menoufia University, Egypt, in July 2015\. For
    being ranked first in his faculty, he was recommended to work as a teaching assistant
    in one of the Egyptian institutes in 2015 and then in 2016 to work as a teaching
    assistant and a researcher in his faculty. His current research interests include
    deep learning, machine learning, artificial intelligence, digital signal processing,
    and computer vision.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '**简历: [Ahmed Gad](https://www.linkedin.com/in/ahmedfgad/)** 获得了埃及梅诺菲亚大学计算机与信息学院信息技术学士学位，并以优异成绩毕业。由于在学院排名第一，他在2015年被推荐到埃及的一所机构担任教学助理，随后在2016年继续担任教学助理及研究员。他当前的研究兴趣包括深度学习、机器学习、人工智能、数字信号处理和计算机视觉。'
- en: '[Original](https://heartbeat.fritz.ai/a-guide-to-preparing-opencv-for-android-4e9532677809).
    Reposted with permission.'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://heartbeat.fritz.ai/a-guide-to-preparing-opencv-for-android-4e9532677809)。转载经许可。'
- en: '**Related:**'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关内容:**'
- en: '[Accelerated Computer Vision: A Free Course From Amazon](/2020/08/accelerated-computer-vision-free-course-amazon.html)'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[加速计算机视觉：来自亚马逊的免费课程](/2020/08/accelerated-computer-vision-free-course-amazon.html)'
- en: '[Computer Vision Recipes: Best Practices and Examples](/2020/09/computer-vision-recipes-best-practices-examples.html)'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[计算机视觉食谱：最佳实践和示例](/2020/09/computer-vision-recipes-best-practices-examples.html)'
- en: '[Introduction to Federated Learning](/2020/08/introduction-federated-learning.html)'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[联邦学习简介](/2020/08/introduction-federated-learning.html)'
- en: More On This Topic
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Preparing for a Data Analyst Interview](https://www.kdnuggets.com/2022/08/datacamp-preparing-data-analyst-interview.html)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[准备数据分析师面试](https://www.kdnuggets.com/2022/08/datacamp-preparing-data-analyst-interview.html)'
- en: '[Discover the World of Computer Vision: Introducing MLM''s Latest…](https://www.kdnuggets.com/2024/01/mlm-discover-the-world-of-computer-vision-ebook)'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[发现计算机视觉的世界：介绍MLM最新的…](https://www.kdnuggets.com/2024/01/mlm-discover-the-world-of-computer-vision-ebook)'
- en: '[A Beginner''s Guide to End to End Machine Learning](https://www.kdnuggets.com/2021/12/beginner-guide-end-end-machine-learning.html)'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[初学者的端到端机器学习指南](https://www.kdnuggets.com/2021/12/beginner-guide-end-end-machine-learning.html)'
- en: '[A Simple Guide to Machine Learning Visualisations](https://www.kdnuggets.com/2022/04/simple-guide-machine-learning-visualisations.html)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[机器学习可视化简单指南](https://www.kdnuggets.com/2022/04/simple-guide-machine-learning-visualisations.html)'
- en: '[Comprehensive Guide to the Normal Distribution](https://www.kdnuggets.com/2022/06/comprehensive-guide-normal-distribution.html)'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[正态分布综合指南](https://www.kdnuggets.com/2022/06/comprehensive-guide-normal-distribution.html)'
- en: '[Geocoding in Python: A Complete Guide](https://www.kdnuggets.com/2022/11/geocoding-python-complete-guide.html)'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python中的地理编码：完整指南](https://www.kdnuggets.com/2022/11/geocoding-python-complete-guide.html)'
