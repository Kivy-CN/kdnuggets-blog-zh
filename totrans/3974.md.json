["```py\npip install numpy \n```", "```py\nimport numpy as np\n\ndates = np.array(['2023-01-01', '2023-01-02', '2023-01-03', '2023-01-04', '2023-01-05'], dtype='datetime64')\ndates\n```", "```py\nOutput>>\narray(['2023-01-01', '2023-01-02', '2023-01-03', '2023-01-04',\n       '2023-01-05'], dtype='datetime64[D]')\n```", "```py\ndate_range = np.arange('2023-01-01', '2025-01-01', dtype='datetime64[M]')\ndate_range\n```", "```py\nOutput>>\narray(['2023-01', '2023-02', '2023-03', '2023-04', '2023-05', '2023-06',\n       '2023-07', '2023-08', '2023-09', '2023-10', '2023-11', '2023-12',\n       '2024-01', '2024-02', '2024-03', '2024-04', '2024-05', '2024-06',\n       '2024-07', '2024-08', '2024-09', '2024-10', '2024-11', '2024-12'],\n      dtype='datetime64[M]')\n```", "```py\ndata = np.random.randn(len(date_range)) * 10 + 100 \n```", "```py\nOutput>>\narray([128.85379394,  92.17272879,  81.73341807,  97.68879621,\n       116.26500413,  89.83992529,  93.74247891, 115.50965063,\n        88.05478692, 106.24013365,  92.84193254,  96.70640287,\n        93.67819695, 106.1624716 ,  97.64298602, 115.69882628,\n       110.88460629,  97.10538592,  98.57359395, 122.08098289,\n       104.55571757, 100.74572336,  98.02508889, 106.47247489])\n```", "```py\ndef moving_average(data, window):\n    return np.convolve(data, np.ones(window), 'valid') / window\n\nma_12 = moving_average(data, 12)\nma_12\n```", "```py\nOutput>>\narray([ 99.97075433,  97.03945458,  98.20526648,  99.53106381,\n       101.03189965, 100.58353316, 101.18898821, 101.59158114,\n       102.13919216, 103.51426971, 103.05640219, 103.48833188,\n       104.30217122])\n```", "```py\n[128.85379394,  92.17272879,  81.73341807,  97.68879621,\n       116.26500413,  89.83992529,  93.74247891, 115.50965063,\n        88.05478692, 106.24013365,  92.84193254,  96.70640287]\n```", "```py\n[92.17272879,  81.73341807,  97.68879621,\n       116.26500413,  89.83992529,  93.74247891, 115.50965063,\n        88.05478692, 106.24013365,  92.84193254,  96.70640287,\n        93.67819695]\n```", "```py\ntrend = np.polyfit(np.arange(len(data)), data, 1)\ntrend\n```", "```py\nOutput>>\narray([ 0.20421765, 99.78795983])\n```", "```py\ndetrended = data - (trend[0] * np.arange(len(data)) + trend[1])\ndetrended\n```", "```py\nOutput>>\narray([ 29.06583411,  -7.81944869, -18.46297706,  -2.71181657,\n        15.66017371, -10.96912278,  -7.2707868 ,  14.29216727,\n       -13.36691409,   4.61421499,  -8.98820376,  -5.32795108,\n        -8.56037465,   3.71968235,  -5.00402087,  12.84760174,\n         7.8291641 ,  -6.15427392,  -4.89028352,  18.41288776,\n         0.6834048 ,  -3.33080706,  -6.25565918,   1.98750918])\n```", "```py\nseasonality = np.mean(data.reshape(-1, 12), axis=0)\nseasonal_component = np.tile(seasonality, len(data)//12 + 1)[:len(data)]\n```", "```py\nOutput>>\narray([111.26599544,  99.16760019,  89.68820205, 106.69381124,\n       113.57480521,  93.4726556 ,  96.15803643, 118.79531676,\n        96.30525224, 103.4929285 ,  95.43351072, 101.58943888,\n       111.26599544,  99.16760019,  89.68820205, 106.69381124,\n       113.57480521,  93.4726556 ,  96.15803643, 118.79531676,\n        96.30525224, 103.4929285 ,  95.43351072, 101.58943888])\n```"]