- en: 7 Steps to Mastering Data Preparation with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2017/06/7-steps-mastering-data-preparation-python.html/2](https://www.kdnuggets.com/2017/06/7-steps-mastering-data-preparation-python.html/2)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Step 4: Dealing with Outliers'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is not a tutorial on drafting a strategy to deal with outliers in your
    data when modeling; there are times when including outliers in modeling is appropriate,
    and there are times when they are not (regardless of what anyone tries to tell
    you). This is situation-dependent, and no one can make sweeping assertions as
    to whether your situation belongs in column A or column B.
  prefs: []
  type: TYPE_NORMAL
- en: '![Outliers](../Images/83f05baa9ceceac3e6681aadf81698c0.png)'
  prefs: []
  type: TYPE_IMG
- en: Can you find the outlier?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some discussions for dealing with outliers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Outliers: To Drop or Not to Drop](http://www.theanalysisfactor.com/outliers-to-drop-or-not-to-drop/),
    The Analysis Factor'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Is it OK to remove outliers from data?](https://stats.stackexchange.com/questions/200534/is-it-ok-to-remove-outliers-from-data/200923),
    Stack Exchange'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Outliers can be the result of poor data collection, or they can be genuinely
    good, anomalous data. These are 2 different scenarios, and must be approached
    differently, and so no "one size fits all" advice is applicable here, similar
    to that of dealing with missing values. A particularly good point of insights
    from the Analysis Factor article from above is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: One option is to try a transformation. Square root and log transformations both
    pull in high numbers. This can make assumptions work better if the outlier is
    a dependent variable and can reduce the impact of a single point if the outlier
    is an independent variable.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'We will leave the decision as to whether or not to leave outliers in your dataset
    or not. However, if your model does call for dealing with outlier data in some
    manner, here are a few discussions on approaches:'
  prefs: []
  type: TYPE_NORMAL
- en: '[3 methods to deal with outliers](/2017/01/3-methods-deal-outliers.html), by
    Alberto Quesada'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Removing Outliers Using Standard Deviation in Python](/2017/02/removing-outliers-standard-deviation-python.html),
    by Punit Jajodia'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Remove Outliers in Pandas DataFrame using Percentiles](https://stackoverflow.com/questions/35827863/remove-outliers-in-pandas-dataframe-using-percentiles),
    Stack Overflow'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Step 5: Dealing with Imbalanced Data'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'So, what if your otherwise robust dataset -- lacking both missing values and
    outliers -- is made up of 2 classes: one which includes 95 percent of the instances,
    and the other which includes a mere 5 percent? Or worse -- 99.8 vs 0.2 percent?'
  prefs: []
  type: TYPE_NORMAL
- en: If so, your dataset is imbalanced, at least as far as the classes are concerned.
    This can be problematic, in ways which I'm sure do not need to be pointed out.
    But no need to to toss the data to the side yet; there are, of course, strategies
    for dealing with this.
  prefs: []
  type: TYPE_NORMAL
- en: Note that, while this may not genuinely be a data preparation task, such a dataset
    characteristic will make itself known early in the data preparation stage (the
    importance of EDA), and the validity of such data can certainly be assessed preliminarily
    during this preparation stage.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, have a look at this discussion by Tom Fawcett on how to approach:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Learning from Imbalanced Classes](/2016/08/learning-from-imbalanced-classes.html),
    by Tom Fawcett'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Next, take a look at this discussion on techniques for handling class imbalance:'
  prefs: []
  type: TYPE_NORMAL
- en: '[7 Techniques to Handle Imbalanced Data](/2017/06/7-techniques-handle-imbalanced-data.html),
    by Ye Wu & Rick Radewagen'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Imbalanced data](../Images/c9cbb484ef13d59bff657b921d1b6624.png)'
  prefs: []
  type: TYPE_IMG
- en: Recognizing and dealing with imbalance is important.
  prefs: []
  type: TYPE_NORMAL
- en: 'A good explanation of why we can run into imbalanced data, and why we can do
    so in some domains much more frequently than in others (from 7 Techniques to Handle
    Imbalanced Data, linked above):'
  prefs: []
  type: TYPE_NORMAL
- en: Data used in these areas often have less than 1% of rare, but “interesting”
    events (e.g. fraudsters using credit cards, user clicking advertisement or corrupted
    server scanning its network). However, most machine learning algorithms do not
    work very well with imbalanced datasets. The following seven techniques can help
    you, to train a classifier to detect the abnormal class.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Step 6: Data Transformations'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Wikipedia defines [data transformation](https://en.wikipedia.org/wiki/Data_transformation_(statistics))
    as:'
  prefs: []
  type: TYPE_NORMAL
- en: In statistics, data transformation is the application of a deterministic mathematical
    function to each point in a data set — that is, each data point zi is replaced
    with the transformed value *y[i]* = *f(z[i])*, where *f* is a function. Transforms
    are usually applied so that the data appear to more closely meet the assumptions
    of a statistical inference procedure that is to be applied, or to improve the
    interpretability or appearance of graphs.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Transforming data is one of the most important aspects of data preparation,
    and one which requires more finesse than most others. When missing values manifest
    themselves in data, they are generally easy to find, and can be (at least, superficially)
    dealt with by one of the common methods outlined above -- or by more complex measures
    gained from insight over time in a domain. However, when and if data transformations
    are required -- to say nothing of the type of transformation required -- is often
    not as easily identifiable.
  prefs: []
  type: TYPE_NORMAL
- en: A plethora of transformations exist; instead of trying to generalize when and
    why transformations are useful, let's look at a few specific transformations in
    order to get a better handle on them.
  prefs: []
  type: TYPE_NORMAL
- en: 'This overview from Scikit-learn''s documentation gives some rationale for some
    of the most important preprocessing transformations, namely standardization, normalization,
    and binarization (with a few others thrown in as well):'
  prefs: []
  type: TYPE_NORMAL
- en: '[Preprocessing data](http://scikit-learn.org/stable/modules/preprocessing.html),
    Scikit-learn documentation'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![One-hot encoding](../Images/5fadf8e114fa3bd5734554c29040064e.png)'
  prefs: []
  type: TYPE_IMG
- en: Sample results of a one-hot encoding transformation.
  prefs: []
  type: TYPE_NORMAL
- en: 'One-hot encoding "transforms categorical features to a format that works better
    with classification and regression algorithms" (taken from the first link below).
    See a discussion of the one-hot transformation below, as well as an approach using
    Pandas:'
  prefs: []
  type: TYPE_NORMAL
- en: '[What is one hot encoding and when is it used in data science?](https://www.quora.com/What-is-one-hot-encoding-and-when-is-it-used-in-data-science/answer/H%C3%A5kon-Hapnes-Strand),
    Quora answer by Håkon Hapnes Strand'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How can I one hot encode in Python?](http://stackoverflow.com/questions/37292872/how-can-i-one-hot-encode-in-python),
    Stack Overflow'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The log distribution transformation can be useful if "you assume a model form
    that is non-linear but can be transformed to a linear model" (taken from below).
    Read a bit more about an under-appreciated type of transformation below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[When (and why) should you take the log of a distribution (of numbers)?](https://stats.stackexchange.com/questions/18844/when-and-why-should-you-take-the-log-of-a-distribution-of-numbers),
    Stack Exchange'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As stated above, numerous transformations are possible, depending on the data
    and your requirements. I would like to take a closer look at data transformation
    in the future, and leave a more in-depth discussion for that time.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that this entire discussion is also fully and intentionally skipping any
    mention of feature selection for a specific reason: it deserves far more than
    a simple few sentences in this much more broad discussion. A similar guide specifically
    for feature selection is upcoming, and will be linked here once complete.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 7: Finishing Touches & Moving Ahead'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Alright. Your data is "clean." For our purposes, this means that you have a
    valid and usable Pandas DataFrame at this point. But what do you do with it?
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to go right to feeding your data into a machine learning algorithm
    in order to attempt building a model, you probably need your data in a more appropriate
    representation. In the Python ecosystem, that would generally be a numpy ndarray
    (or matrix). You can have a look at the following for some preliminary ideas on
    getting there (from an elementary point of view):'
  prefs: []
  type: TYPE_NORMAL
- en: '[Turning a Pandas Dataframe to an array and evaluate Multiple Linear Regression
    Model](https://stackoverflow.com/questions/28334091/turning-a-pandas-dataframe-to-an-array-and-evaluate-multiple-linear-regression-m),
    Stack Overflow'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![ML pipeline](../Images/2b1892e803954b3888cf48f32e0c71b7.png)'
  prefs: []
  type: TYPE_IMG
- en: Very simple data preparation process.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have clean data in a proper representation for machine learning in
    Python, why not check out the following pair of articles meant to cover the very
    ground you are now ready for:'
  prefs: []
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering Machine Learning With Python](/2015/11/seven-steps-machine-learning-python.html),
    by Matthew Mayo'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 More Steps to Mastering Machine Learning With Python](/2017/03/seven-more-steps-machine-learning-python.html),
    by Matthew Mayo'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'What if you don''t want to move on to modeling quite yet? Or, what if you do,
    but you want to output this data into some storage form more suitable to your
    situation? Here is some information on Pandas DataFrame storage:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Writing a Pandas DataFrame to MySQL](https://stackoverflow.com/questions/39939716/writing-a-pandas-dataframe-to-mysql),
    Stack Overflow'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Quick HDF5 with Pandas](https://dzone.com/articles/quick-hdf5-pandas), by
    Giuseppe Vettigli'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Don''t forget that there are additional dataset-specific and -related considerations
    before moving forward, including (especially?) splitting the dataset into a training
    and a testing set, a process which is applicable to all sorts of machine learning
    tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Numpy: How to split/partition a dataset (array) into training and test datasets
    for, e.g., cross validation?](https://stackoverflow.com/questions/3674409/numpy-how-to-split-partition-a-dataset-array-into-training-and-test-datasets),
    Stack Overflow'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Is there a Python function that splits data into train, cross validation and
    test sets?](https://www.quora.com/Is-there-a-Python-function-that-splits-data-into-train-cross-validation-and-test-sets/answer/Harizo-Rajaona),
    Quora answer by Harizo Rajaona'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'And, as pure punishment, here are some additional takes on data preparation
    in general:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Tidying Data in Python](/2017/01/tidying-data-python.html), by Jean-Nicholas
    Hould'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Doing Data Science: A Kaggle Walkthrough Part 3 – Cleaning Data](/2016/06/doing-data-science-kaggle-walkthrough-data-cleaning.html),
    by Brett Romero'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Machine Learning Workflows in Python from Scratch Part 1: Data Preparation](/2017/05/machine-learning-workflows-python-scratch-part-1.html),
    by Matthew Mayo'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[7 Steps to Understanding NoSQL Databases](/2016/07/seven-steps-understanding-nosql-databases.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering SQL for Data Science](/2016/06/seven-steps-mastering-sql-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Steps to Understanding Deep Learning](/2016/01/seven-steps-deep-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Write Clean Python Code Using Pipes](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
