["```py\n\nimport numpy\n\nimport GA\n\nimport pickle\n\nimport matplotlib.pyplot\n\nf = open(\"dataset_features.pkl\", \"rb\")\n\ndata_inputs = pickle.load(f)\n\nf.close()\n\nf = open(\"outputs.pkl\", \"rb\")\n\ndata_outputs = pickle.load(f)\n\nf.close()\n\nnum_samples = data_inputs.shape[0]\n\nnum_feature_elements = data_inputs.shape[1]\n\ntrain_indices = numpy.arange(1, num_samples, 4)\n\ntest_indices = numpy.arange(0, num_samples, 4)\n\nprint(\"Number of training samples: \", train_indices.shape[0])\n\nprint(\"Number of test samples: \", test_indices.shape[0])\n\n\"\"\"\n\nGenetic algorithm parameters:\n\n    Population size\n\n    Mating pool size\n\n    Number of mutations\n\"\"\"\n\nsol_per_pop = 8 # Population size.\n\nnum_parents_mating = 4 # Number of parents inside the mating pool.\n\nnum_mutations = 3 # Number of elements to mutate.\n\n# Defining the population shape.\npop_shape = (sol_per_pop, num_feature_elements)\n\n# Creating the initial population.\nnew_population = numpy.random.randint(low=0, high=2, size=pop_shape)\nprint(new_population.shape)\n\nbest_outputs = []\nnum_generations = 100\n\n```"]