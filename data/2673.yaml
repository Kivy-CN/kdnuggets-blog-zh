- en: 5 Things You Are Doing Wrong in PyCaret
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你在PyCaret中做错的5件事
- en: 原文：[https://www.kdnuggets.com/2020/11/5-things-doing-wrong-pycaret.html](https://www.kdnuggets.com/2020/11/5-things-doing-wrong-pycaret.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/11/5-things-doing-wrong-pycaret.html](https://www.kdnuggets.com/2020/11/5-things-doing-wrong-pycaret.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Moez Ali](https://www.linkedin.com/in/profile-moez/), Founder & Author
    of PyCaret**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Moez Ali](https://www.linkedin.com/in/profile-moez/)，PyCaret创始人兼作者**'
- en: '![Figure](../Images/6fd3bbe1eed3087171efe5233e63e86b.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/6fd3bbe1eed3087171efe5233e63e86b.png)'
- en: Photo by [Ben White](https://unsplash.com/@benwhitephotography?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Ben White](https://unsplash.com/@benwhitephotography?utm_source=medium&utm_medium=referral)
    供稿，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: '* * *'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前3个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1. [Google网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2. [Google数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3. [Google IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的IT'
- en: '* * *'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: PyCaret
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PyCaret
- en: PyCaret is an open-source, low-code machine learning library in Python that
    automates machine learning workflows. It is an end-to-end machine learning and
    model management tool that speeds up the machine learning experiment cycle and
    makes you more productive.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret是一个开源的低代码机器学习库，旨在自动化机器学习工作流程。它是一个端到端的机器学习和模型管理工具，能加速机器学习实验周期，让你更高效。
- en: In comparison with the other open-source machine learning libraries, PyCaret
    is an alternate low-code library that can be used to replace hundreds of lines
    of code with few words only. This makes experiments exponentially fast and efficient.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他开源机器学习库相比，PyCaret是一个可替代的低代码库，可以用少量代码替代数百行代码。这使得实验变得极其快速和高效。
- en: Official: [https://www.pycaret.org](https://www.pycaret.org/)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 官方网站：[https://www.pycaret.org](https://www.pycaret.org/)
- en: Docs: [https://pycaret.readthedocs.io/en/latest/](https://pycaret.readthedocs.io/en/latest/)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 文档：[https://pycaret.readthedocs.io/en/latest/](https://pycaret.readthedocs.io/en/latest/)
- en: Git: [https://www.github.com/pycaret/pycaret](https://www.github.com/pycaret/pycaret)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 'Git: [https://www.github.com/pycaret/pycaret](https://www.github.com/pycaret/pycaret)'
- en: ???? compare_models does more than what you think
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? compare_models比你想象的更多
- en: When we had released version 1.0 of PyCaret in Apr 2020, **compare_models **function
    was comparing all the models in the library to return the averaged cross-validated
    performance metrics. Based on which you would use **create_model **to train the
    best performing model and get the trained model output that you can use for predictions.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在2020年4月发布PyCaret 1.0版本时，**compare_models**函数比较库中的所有模型，以返回平均交叉验证性能指标。基于这些指标，你会使用**create_model**来训练表现最好的模型，并获得可以用于预测的训练模型输出。
- en: This behavior was later changed in version 2.0. **compare_models **now returns
    the best model based on the **n_select** parameter which by default is set to
    1 which means that it will return the best model (by default).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '这种行为在2.0版本中进行了更改。**compare_models**现在基于**n_select**参数返回最佳模型，默认设置为1，这意味着它将返回最佳模型（默认情况下）。 '
- en: '![Figure](../Images/2f64f64a52336071f10bd0aa449bc957.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/2f64f64a52336071f10bd0aa449bc957.png)'
- en: compare_models(n_select = 1)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: compare_models(n_select = 1)
- en: 'By changing the default **n_select **parameter to 3, you can get a list of
    top 3 models. For example:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将默认的**n_select**参数更改为3，你可以获得前3名模型的列表。例如：
- en: '![Figure](../Images/1e8aa7356f9bd812c66f347418a27077.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/1e8aa7356f9bd812c66f347418a27077.png)'
- en: compare_models(n_select = 3)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: compare_models(n_select = 3)
- en: 'The returned objects are trained models, you really don’t need to call **create_model **again
    to train them. You can use these models to generate diagnostic plots or to even
    use them for predictions, if you would like. For example:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的对象是训练好的模型，你实际上不需要再调用**create_model**来训练它们。你可以使用这些模型生成诊断图，甚至用于预测。例如：
- en: '![Figure](../Images/561308d029c10707f2b8796d963a5e44.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/561308d029c10707f2b8796d963a5e44.png)'
- en: predict_model function
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: predict_model 函数
- en: ????You think you are limited to scikit-learn models only
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ????你认为你只能使用 scikit-learn 模型
- en: 'We recieve a lot of requests to include non *scikit-learn* models in the model
    library. Many people don’t realize that you are not limited to the default models
    only. **create_model **function also accepts untrained model object in addition
    to the ID’s of models available in the model library. As long as your object is
    compatible with *scikit-learn* fit/predict API, it will work just fine. For example,
    here we have trained and evaluated ***NGBClassifier*** from [ngboost](https://github.com/stanfordmlgroup/ngboost) library
    by simply importing untrained NGBClassifier:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们收到很多请求，希望将非 *scikit-learn* 模型纳入模型库。许多人没有意识到你并不仅限于使用默认模型。**create_model** 函数除了接受模型库中可用的模型
    ID 外，还接受未训练的模型对象。只要你的对象与 *scikit-learn* 的 fit/predict API 兼容，它就会正常工作。例如，这里我们通过简单地导入未训练的
    NGBClassifier 训练和评估了来自 [ngboost](https://github.com/stanfordmlgroup/ngboost) 库的
    ***NGBClassifier***。
- en: '![Figure](../Images/f7e2bf067b1dd47cf059ecbc8a29f37f.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/f7e2bf067b1dd47cf059ecbc8a29f37f.png)'
- en: create_model with external models
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 使用外部模型的 create_model
- en: You can also pass the untrained models in the **include **parameter of the **compare_models **and
    it will just work normally.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以在 **compare_models** 的 **include** 参数中传递未训练的模型，它会正常工作。
- en: '![Figure](../Images/dd119e114d11c91320af98c831c196f2.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/dd119e114d11c91320af98c831c196f2.png)'
- en: compare_models with untrained object
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用未训练对象的 compare_models
- en: Notice that include parameters include ID’s for three untrained model from the
    model library i.e. Logistic Regression, Decision Tree and K Neighbors and one
    untrained object from ngboost library. Also, notice that the index represents
    the position of the model entered in the include parameter.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，include 参数包括来自模型库的三个未训练模型的 ID，即逻辑回归、决策树和 K 近邻，以及一个来自 ngboost 库的未训练对象。此外，注意索引表示在
    include 参数中输入的模型的位置。
- en: ????You don’t know about the pull( ) function
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ????你不了解 pull() 函数
- en: 'All training functions (create_model, tune_model, ensemble_model, etc.) in
    PyCaret displays a score grid but it doesn’t return the score grid. Hence you
    cannot store the score grid in an object like pandas.DataFrame. However, there
    is a function called **pull **that allows you to do that. For example:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 中的所有训练函数（如 create_model、tune_model、ensemble_model 等）都显示一个评分网格，但它不会返回评分网格。因此，你不能将评分网格存储在类似
    pandas.DataFrame 的对象中。然而，有一个名为 **pull** 的函数可以实现这一点。例如：
- en: '![Figure](../Images/8f33d9987a20793c5236c7ae391a2a72.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/8f33d9987a20793c5236c7ae391a2a72.png)'
- en: pull function with create_model
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 create_model 的 pull 函数
- en: This will also work for holdout score grid when you use **predict_model **function.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用 **predict_model** 函数时，这也适用于 holdout 评分网格。
- en: '![Figure](../Images/f976d7fe434f039d8400949177f29d1b.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/f976d7fe434f039d8400949177f29d1b.png)'
- en: pull function with predict_model
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 predict_model 的 pull 函数
- en: 'Now that you can access metrics as pandas.DataFrame, you can do wonders. For
    example, you can create a loop to train a model with different parameters and
    create a comparison table with this simple code:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以将指标作为 pandas.DataFrame 访问，你可以做很多事情。例如，你可以创建一个循环，用不同的参数训练模型，并使用这段简单的代码创建一个比较表：
- en: '![Figure](../Images/d4cf0da30cc625e0751b2652c1326950.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/d4cf0da30cc625e0751b2652c1326950.png)'
- en: create_model and pull function
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: create_model 和 pull 函数
- en: ???? You think PyCaret is a black-box, it is not.
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ????你认为 PyCaret 是一个黑箱，它并不是。
- en: Another common confusion is that all the preprocessing is happening behind the
    scenes and is not accessible to users. As such, you cannot audit what happens
    when you ran the **setup **function. This is not True.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个常见的混淆是所有的预处理都在后台进行，用户无法访问。因此，当你运行 **setup** 函数时，你无法审计发生了什么。这并不正确。
- en: 'There are two functions in PyCaret **get_config **and **set_config **that allows
    you to access and change everything in the background, from your training set
    to the random state of your model. You can check the documentation of **get_config **function
    by simply calling **help(get_config)** to see which variables are accessible to
    you:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 中有两个函数 **get_config** 和 **set_config**，它们允许你访问和更改后台的所有内容，从你的训练集到模型的随机状态。你可以通过简单地调用
    **help(get_config)** 来查看 **get_config** 函数的文档，以查看哪些变量对你是可访问的：
- en: '![Figure](../Images/0d548afe8b03e65615731b5a1f30fcb3.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/0d548afe8b03e65615731b5a1f30fcb3.png)'
- en: help(get_config)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: help(get_config)
- en: 'You can access the variable by calling it inside the **get_config** function.
    For example to access **X_train** transformed dataset, you will write this:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在 **get_config** 函数中调用它来访问变量。例如，要访问 **X_train** 转换的数据集，你可以这样写：
- en: '![Figure](../Images/7ed5d7408642944630557ab823afdb22.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/7ed5d7408642944630557ab823afdb22.png)'
- en: get_config(‘X_train’)
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: get_config(‘X_train’)
- en: 'You can use the **set_config **function to change the environment variables.
    With what you know so far about **pull, get_config,** and **set_config **function,you
    can create some pretty sophisticated workflows. For example, you can resample
    holdout set ***N times*** to evaluate averaged performance metrics instead of
    relying on one holdout set:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 **set_config** 函数来更改环境变量。根据你目前对 **pull、get_config** 和 **set_config** 函数的了解，你可以创建一些相当复杂的工作流。例如，你可以对保留集进行
    ***N 次*** 重采样，以评估平均性能指标，而不是依赖一个保留集：
- en: '[PRE0]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: ????You are not logging your experiments
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ????你没有记录你的实验
- en: If you are not logging your experiments, you should start logging them now.
    Whether you want to use MLFlow backend server or not, you should still log all
    your experiments. When you perform any experiment, you generate a lot of meta
    data which is impossible to keep track of manually.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有记录你的实验，你应该现在开始记录。无论你是否打算使用 MLFlow 后端服务器，你都应该记录所有实验。当你进行任何实验时，你会生成大量的元数据，人工跟踪这些数据几乎是不可能的。
- en: 'PyCaret’s logging functionality will generate a nice, light-weight, easy to
    understand excel spreadsheet when you use **get_logs** function. For example:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 的记录功能将在你使用 **get_logs** 函数时生成一个简洁、轻量、易于理解的 Excel 表格。例如：
- en: '[PRE1]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![Figure](../Images/7f9e5823e3551fa6be2cd756b1b4f324.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/7f9e5823e3551fa6be2cd756b1b4f324.png)'
- en: get_logs()
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: get_logs()
- en: In this very short experiment we have generated over 3,000 meta data points
    (metrics, hyperparameters, runtime, etc.). Imagine how you would have manually
    kept track of these datapoints? Perhaps, it’s not practically possible. Fortunately,
    PyCaret provides a simple way to do it. Simply set **log_experiment** to True
    in the **setup **function**.**
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个非常简短的实验中，我们生成了超过 3,000 个元数据点（指标、超参数、运行时间等）。想象一下你会如何手动跟踪这些数据点？也许，这在实际中是不可能的。幸运的是，PyCaret
    提供了一种简单的方法来实现这一点。只需在 **setup** 函数中将 **log_experiment** 设置为 True。
- en: There is no limit to what you can achieve using the lightweight workflow automation
    library in Python. If you find this useful, please do not forget to give us ⭐️
    on our [GitHub repo](https://www.github.com/pycaret/pycaret/).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Python 中的轻量级工作流自动化库，你可以实现无限的目标。如果你觉得这很有用，请不要忘记在我们的 [GitHub 仓库](https://www.github.com/pycaret/pycaret/)上给我们⭐️。
- en: To hear more about PyCaret follow us on [LinkedIn](https://www.linkedin.com/company/pycaret/) and [Youtube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于 PyCaret 的信息，请关注我们的 [LinkedIn](https://www.linkedin.com/company/pycaret/)
    和 [YouTube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g)。
- en: To learn more about all the updates in PyCaret 2.2, please see the [release
    notes](https://github.com/pycaret/pycaret/releases) or read this [announcement](https://towardsdatascience.com/pycaret-2-2-is-here-whats-new-ad7612ca63b).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解 PyCaret 2.2 中的所有更新，请查看 [发行说明](https://github.com/pycaret/pycaret/releases)
    或阅读这篇 [公告](https://towardsdatascience.com/pycaret-2-2-is-here-whats-new-ad7612ca63b)。
- en: Important Links
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重要链接
- en: '[User Guide](https://www.pycaret.org/guide)'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[用户指南](https://www.pycaret.org/guide)'
- en: '[Documentation](https://pycaret.readthedocs.io/en/latest/)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[文档](https://pycaret.readthedocs.io/en/latest/)'
- en: '[Official Tutorials](https://github.com/pycaret/pycaret/tree/master/tutorials)
    [Example Notebooks](https://github.com/pycaret/pycaret/tree/master/examples)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '[官方教程](https://github.com/pycaret/pycaret/tree/master/tutorials) [示例笔记本](https://github.com/pycaret/pycaret/tree/master/examples)'
- en: '[Other Resources](https://github.com/pycaret/pycaret/tree/master/resources)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[其他资源](https://github.com/pycaret/pycaret/tree/master/resources)'
- en: Want to learn about a specific module?
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 想了解特定模块吗？
- en: Click on the links below to see the documentation and working examples.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 点击下面的链接查看文档和工作示例。
- en: '[Classification](https://pycaret.readthedocs.io/en/latest/api/classification.html)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[分类](https://pycaret.readthedocs.io/en/latest/api/classification.html)'
- en: '[Regression](https://pycaret.readthedocs.io/en/latest/api/regression.html)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[回归](https://pycaret.readthedocs.io/en/latest/api/regression.html)'
- en: '[Clustering](https://pycaret.readthedocs.io/en/latest/api/clustering.html)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[聚类](https://pycaret.readthedocs.io/en/latest/api/clustering.html)'
- en: '[Anomaly Detection](https://pycaret.readthedocs.io/en/latest/api/anomaly.html)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[异常检测](https://pycaret.readthedocs.io/en/latest/api/anomaly.html)'
- en: '[Natural Language Processing](https://pycaret.readthedocs.io/en/latest/api/nlp.html)
    [Association Rule Mining](https://pycaret.readthedocs.io/en/latest/api/arules.html)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[自然语言处理](https://pycaret.readthedocs.io/en/latest/api/nlp.html) [关联规则挖掘](https://pycaret.readthedocs.io/en/latest/api/arules.html)'
- en: '**Bio: [Moez Ali](https://www.linkedin.com/in/profile-moez/)** is a Data Scientist,
    and is Founder & Author of PyCaret.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**个人简介： [Moez Ali](https://www.linkedin.com/in/profile-moez/)** 是一名数据科学家，同时也是
    PyCaret 的创始人和作者。'
- en: '[Original](https://towardsdatascience.com/5-things-you-are-doing-wrong-in-pycaret-e01981575d2a).
    Reposted with permission.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/5-things-you-are-doing-wrong-in-pycaret-e01981575d2a)。已获许可转载。'
- en: '**Related:**'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[5 Things You Don’t Know About PyCaret](/2020/07/5-things-pycaret.html)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[你可能不知道的 PyCaret 5 件事](/2020/07/5-things-pycaret.html)'
- en: '[Deploy a Machine Learning Pipeline to the Cloud Using a Docker Container](/2020/06/deploy-machine-learning-pipeline-cloud-docker.html)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Docker 容器将机器学习管道部署到云端](/2020/06/deploy-machine-learning-pipeline-cloud-docker.html)'
- en: '[GitHub is the Best AutoML You Will Ever Need](/2020/08/github-best-automl-ever-need.html)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GitHub 是你所需的最佳自动机器学习工具](/2020/08/github-best-automl-ever-need.html)'
- en: More On This Topic
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[7 Things You Didn''t Know You Could do with a Low Code Tool](https://www.kdnuggets.com/2022/09/7-things-didnt-know-could-low-code-tool.html)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[7 件你不知道可以用低代码工具做的事](https://www.kdnuggets.com/2022/09/7-things-didnt-know-could-low-code-tool.html)'
- en: '[Phi-2: Small LMs that are Doing Big Things](https://www.kdnuggets.com/phi-2-small-lms-that-are-doing-big-things)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Phi-2: 小型语言模型的重大成就](https://www.kdnuggets.com/phi-2-small-lms-that-are-doing-big-things)'
- en: '[Introduction to Binary Classification with PyCaret](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 进行二分类介绍](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
- en: '[Introduction to Clustering in Python with PyCaret](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 在 Python 中进行聚类介绍](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)'
- en: '[Announcing PyCaret 3.0: Open-source, Low-code Machine Learning in Python](https://www.kdnuggets.com/2023/03/announcing-pycaret-30-opensource-lowcode-machine-learning-python.html)'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[宣布 PyCaret 3.0：开源、低代码的 Python 机器学习工具](https://www.kdnuggets.com/2023/03/announcing-pycaret-30-opensource-lowcode-machine-learning-python.html)'
- en: '[Getting Started with PyCaret](https://www.kdnuggets.com/2022/11/getting-started-pycaret.html)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyCaret 入门](https://www.kdnuggets.com/2022/11/getting-started-pycaret.html)'
