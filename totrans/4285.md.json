["```py\n**# install slim version (default)** pip install pycaret**# install the full version**\npip install pycaret[full]\n```", "```py\n**# read the csv file** import pandas as pd\ndata = pd.read_csv('train.csv')\ndata['date'] = pd.to_datetime(data['date'])**# combine store and item column as time_series**\ndata['store'] = ['store_' + str(i) for i in data['store']]\ndata['item'] = ['item_' + str(i) for i in data['item']]\ndata['time_series'] = data[['store', 'item']].apply(lambda x: '_'.join(x), axis=1)\ndata.drop(['store', 'item'], axis=1, inplace=True)**# extract features from date**\ndata['month'] = [i.month for i in data['date']]\ndata['year'] = [i.year for i in data['date']]\ndata['day_of_week'] = [i.dayofweek for i in data['date']]\ndata['day_of_year'] = [i.dayofyear for i in data['date']]data.head()\n```", "```py\n**# check the unique time_series**\ndata['time_series'].nunique()\n>>> 500\n```", "```py\n**# plot multiple time series with moving avgs in a loop**import plotly.express as pxfor i in data['time_series'].unique():\n    subset = data[data['time_series'] == i]\n    subset['moving_average'] = subset['sales'].rolling(30).mean()\n    fig = px.line(subset, x=\"date\", y=[\"sales\",\"moving_average\"], title = i, template = 'plotly_dark')\n    fig.show()\n```", "```py\nconcat_results = pd.concat(all_results,axis=0)\nconcat_results.head()\n```", "```py\n**# create a date range from 2013 to 2019**\nall_dates = pd.date_range(start='2013-01-01', end = '2019-12-31', freq = 'D')**# create empty dataframe**\nscore_df = pd.DataFrame()**# add columns to dataset**\nscore_df['date'] = all_dates\nscore_df['month'] = [i.month for i in score_df['date']]\nscore_df['year'] = [i.year for i in score_df['date']]\nscore_df['day_of_week'] = [i.dayofweek for i in score_df['date']]\nscore_df['day_of_year'] = [i.dayofyear for i in score_df['date']]score_df.head()\n```", "```py\nfrom pycaret.regression import load_model, predict_modelall_score_df = []for i in tqdm(data['time_series'].unique()):\n    l = load_model('trained_models/' + str(i), verbose=False)\n    p = predict_model(l, data=score_df)\n    p['time_series'] = i\n    all_score_df.append(p)concat_df = pd.concat(all_score_df, axis=0)\nconcat_df.head()\n```", "```py\nfinal_df = pd.merge(concat_df, data, how = 'left', left_on=['date', 'time_series'], right_on = ['date', 'time_series'])\nfinal_df.head()\n```", "```py\nfor i in final_df['time_series'].unique()[:5]:\n    sub_df = final_df[final_df['time_series'] == i]\n\n    import plotly.express as px\n    fig = px.line(sub_df, x=\"date\", y=['sales', 'Label'], title=i, template = 'plotly_dark')\n    fig.show()\n```"]