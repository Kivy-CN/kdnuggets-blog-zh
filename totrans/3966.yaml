- en: Using NumPy to Perform Date and Time Calculations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 NumPy 执行日期和时间计算
- en: 原文：[https://www.kdnuggets.com/using-numpy-to-perform-date-and-time-calculations](https://www.kdnuggets.com/using-numpy-to-perform-date-and-time-calculations)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/using-numpy-to-perform-date-and-time-calculations](https://www.kdnuggets.com/using-numpy-to-perform-date-and-time-calculations)
- en: '![NumPy to Perform Date and Time Calculations](../Images/96bedcbc849f2fd2fcdf9c38ebe004de.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![NumPy 执行日期和时间计算](../Images/96bedcbc849f2fd2fcdf9c38ebe004de.png)'
- en: Image by Author | Canva
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 作者图片 | Canva
- en: Dates and times are at the core of countless data analysis tasks, from tracking
    financial transactions to monitoring sensor data in real-time. Yet, handling date
    and time calculations can often feel like navigating a maze.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 日期和时间是无数数据分析任务的核心，从追踪金融交易到实时监测传感器数据。然而，处理日期和时间的计算常常让人感觉像是在迷宫中探索。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Fortunately, with NumPy, we’re in luck. NumPy’s robust date and time functionalities
    take the headache out of these tasks, offering a suite of methods that simplify
    the process immensely.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，有了 NumPy，我们很幸运。NumPy 强大的日期和时间功能让这些任务变得轻松，提供了一系列简化过程的方法。
- en: For instance, NumPy allows you to easily create arrays of dates, perform arithmetic
    on dates and times, and convert between different time units with just a few lines
    of code. Do you need to find the difference between two dates? NumPy can do that
    effortlessly. Do you want to resample your time series data to a different frequency?
    NumPy has you covered. This convenience and power make NumPy an invaluable tool
    for anyone working with date and time calculations, turning what used to be a
    complex challenge into a straightforward task.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，NumPy 允许你轻松创建日期数组，对日期和时间执行算术运算，并且只需几行代码即可在不同的时间单位之间转换。你需要找出两个日期之间的差异吗？NumPy
    可以轻松做到。你想将你的时间序列数据重新采样到不同的频率吗？NumPy 能满足你的需求。这种便利和强大使得 NumPy 成为处理日期和时间计算的宝贵工具，将曾经复杂的挑战转变为简单的任务。
- en: This article will guide you through performing date and time calculations using
    NumPy. We’ll cover what **datetime** is and how it is represented, where date
    and time are commonly used, common difficulties and issues using it, and best
    practices.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本文将指导你使用 NumPy 执行日期和时间计算。我们将介绍**datetime**是什么以及如何表示，日期和时间通常用于何处，使用它时的常见困难和问题，以及最佳实践。
- en: What is DateTime
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是 DateTime
- en: DateTime refers to the representation of dates and times in a unified format.
    It includes specific calendar dates and times, often down to fractions of a second.
    This combination is very important for accurately recording and managing temporal
    data, such as timestamps in logs, scheduling events, and conducting time-based
    analyses.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: DateTime 指的是以统一格式表示日期和时间。这包括特定的日历日期和时间，通常精确到秒的分数。这种组合对于准确记录和管理时间数据，如日志中的时间戳、事件调度和进行基于时间的分析，非常重要。
- en: In general programming and data analysis, **DateTime** is typically represented
    by specialized data types or objects that provide a structured way to handle dates
    and times. These objects allow for easy manipulation, comparison, and arithmetic
    operations involving dates and times.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在一般编程和数据分析中，**DateTime** 通常由专门的数据类型或对象表示，这些对象提供了一种结构化的方式来处理日期和时间。这些对象允许对日期和时间进行轻松的操作、比较和算术运算。
- en: NumPy and other libraries like pandas provide robust support for **DateTime**
    operations, making working with temporal data in various formats and performing
    complex calculations easy and precise.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 和其他库如 pandas 提供了对**DateTime**操作的强大支持，使得处理各种格式的时间数据以及执行复杂的计算变得轻松而精准。
- en: In NumPy, date and time handling primarily revolve around the `datetime64` data
    type and associated functions. You might be wondering why the data type is called
    [datetime64](https://numpy.org/doc/stable/reference/arrays.scalars.html#numpy.datetime64).
    This is because [datetime](https://docs.python.org/3/library/datetime.html#datetime.datetime)
    is already taken by the Python standard library.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在 NumPy 中，日期和时间的处理主要围绕 `datetime64` 数据类型及其相关函数。你可能会想知道为什么这个数据类型叫做 [datetime64](https://numpy.org/doc/stable/reference/arrays.scalars.html#numpy.datetime64)。这是因为
    [datetime](https://docs.python.org/3/library/datetime.html#datetime.datetime)
    已经被 Python 标准库使用了。
- en: 'Here''s a breakdown of how it works:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是它的工作原理：
- en: '**datetime64 Data Type**'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**datetime64 数据类型**'
- en: '**Representation**: NumPy''s `datetime64` dtype represents dates and times
    as 64-bit integers, offering efficient storage and manipulation of temporal data.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表示**：NumPy 的 `datetime64` 数据类型将日期和时间表示为 64 位整数，提供高效的时间数据存储和操作。'
- en: '**Format**: Dates and times in `datetime64` format are specified with a string
    that indicates the desired precision, such as `YYYY-MM-DD` for dates or `YYYY-MM-DD
    HH:mm:ss` for timestamps down to seconds.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**格式**：`datetime64` 格式中的日期和时间由一个字符串指定，指示所需的精度，例如，`YYYY-MM-DD` 表示日期或 `YYYY-MM-DD
    HH:mm:ss` 表示到秒的时间戳。'
- en: 'For example:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Features of `datetime64` in NumPy
  id: totrans-25
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`datetime64`在 NumPy 中的特点'
- en: NumPy's `datetime64` offers robust features to simplify several operations.
    From flexible resolution handling to powerful arithmetic capabilities, `datetime64`
    makes working with temporal data straightforward and efficient.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 的 `datetime64` 提供了强大的功能来简化多种操作。从灵活的分辨率处理到强大的算术能力，`datetime64` 使得处理时间数据变得简单高效。
- en: '**Resolution Flexibility**: `datetime64` supports various resolutions from
    nanoseconds to years. For example,**ns** (nanoseconds), **us** (microseconds),
    **ms** (milliseconds), **s** (seconds), **m** (minutes), **h** (hours), **D**
    (days), **W** (weeks), **M** (months), **Y** (years).'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**分辨率灵活性**：`datetime64` 支持从纳秒到年的各种分辨率。例如，**ns**（纳秒），**us**（微秒），**ms**（毫秒），**s**（秒），**m**（分钟），**h**（小时），**D**（天），**W**（周），**M**（月），**Y**（年）。'
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Arithmetic Operations**: Perform direct arithmetic on `datetime64` objects,
    such as adding or subtracting time units, for example, adding days to a date.'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**算术操作**：对 `datetime64` 对象执行直接的算术运算，例如，添加或减去时间单位，比如为日期添加天数。'
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Indexing and Slicing**: Utilize standard NumPy indexing and slicing techniques
    on `datetime64` arrays.For example, extracting a range of dates.'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**索引和切片**：在 `datetime64` 数组上使用标准的 NumPy 索引和切片技术。例如，提取日期范围。'
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Comparison Operations**: Compare `datetime64` objects to determine chronological
    order. Example: Checking if one date is before another.'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**比较操作**：比较 `datetime64` 对象以确定时间顺序。例如：检查一个日期是否在另一个日期之前。'
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Conversion Functions**: Convert between `datetime64` and other date/time
    representations. Example: Converting a `datetime64` object to a string.'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**转换函数**：在 `datetime64` 和其他日期/时间表示形式之间进行转换。例如：将 `datetime64` 对象转换为字符串。'
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Where Do You Tend to Use Date and Time?
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你倾向于在哪里使用日期和时间？
- en: Date and time can be used in several sectors, such as the financial sector,
    to track stock prices, analyze market trends, evaluate financial performance over
    time, calculate returns, assess volatility, and identify patterns in time series
    data.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 日期和时间可以在多个领域中使用，例如金融领域，用于跟踪股票价格、分析市场趋势、评估财务表现、计算回报、评估波动性以及识别时间序列数据中的模式。
- en: You can also use Date and time in other sectors, such as healthcare, to manage
    patient records with time-stamped data for medical history, treatments, and medication
    schedules.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以在其他领域使用日期和时间，例如在医疗保健领域，管理带有时间戳的患者记录，用于医疗历史、治疗和药物计划。
- en: 'Scenario: Analyzing E-commerce Sales Data'
  id: totrans-40
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 场景：分析电子商务销售数据
- en: 'Imagine you''re a data analyst working for an e-commerce company. You have
    a dataset containing sales transactions with timestamps, and you need to analyze
    sales patterns over the past year. Here’s how you can leverage `datetime64` in
    NumPy:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下你是一名在电子商务公司工作的数据分析师。你有一个包含带有时间戳的销售交易的数据集，你需要分析过去一年的销售模式。以下是你如何利用 NumPy 中的
    `datetime64`：
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In this scenario, `datetime64` allows you to easily manipulate and analyze the
    sales data, providing insights into daily sales patterns.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，`datetime64` 允许你轻松操作和分析销售数据，提供对每日销售模式的洞察。
- en: Common difficulties When Using Date and Time
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用日期和时间时的常见困难
- en: While NumPy's `datetime64` is a powerful tool for handling dates and times,
    it is not without its challenges. From parsing various date formats to managing
    time zones, developers often encounter several hurdles that can complicate their
    data analysis tasks. This section highlights some of these typical issues.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 NumPy 的 `datetime64` 是处理日期和时间的强大工具，但它也有其挑战。从解析各种日期格式到管理时区，开发人员通常会遇到几个可能复杂化数据分析任务的障碍。本节突出了这些典型问题的一些例子。
- en: '**Parsing and Converting Formats**: Handling various date and time formats
    can be challenging, especially when working with data from multiple sources.'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**解析和转换格式**：处理各种日期和时间格式可能很具挑战性，特别是当处理来自多个来源的数据时。'
- en: '**Time Zone Handling**: `datetime64` in NumPy does not natively support time
    zones.'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**时区处理**：NumPy 的 `datetime64` 本身不支持时区。'
- en: '**Resolution Mismatches**: Different parts of a dataset may have timestamps
    with different resolutions (e.g., some in days, others in seconds).'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**分辨率不匹配**：数据集的不同部分可能具有不同分辨率的时间戳（例如，有些以天为单位，有些以秒为单位）。'
- en: How to Perform Date and Time Calculations
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何进行日期和时间计算
- en: Let’s explore examples of date and time calculations in NumPy, ranging from
    basic operations to more advanced scenarios, to help you harness the full potential
    of `datetime64` for your data analysis needs.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探讨 NumPy 中日期和时间计算的示例，从基本操作到更高级的场景，以帮助你充分利用 `datetime64` 来满足数据分析需求。
- en: Adding Days to a Date
  id: totrans-51
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 向日期添加天数
- en: The goal here is to demonstrate how to add a specific number of days (**5**
    days in this case) to a given date (**2024-07-15**)
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的目标是演示如何将特定天数（在此情况下为**5**天）添加到给定日期（**2024-07-15**）
- en: '[PRE7]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**Output:**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: 'Start Date: 2024-07-15'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 开始日期：2024-07-15
- en: 'End Date after adding 5 days: 2024-07-20'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 添加5天后的结束日期：2024-07-20
- en: '**Explanation**:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**解释**：'
- en: We define the `start_date` using `np.datetime64`.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们使用 `np.datetime64` 定义 `start_date`。
- en: Using `np.timedelta64`, we add **5** days (**5**, **D**) to `start_date` to
    get `end_date`.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `np.timedelta64`，我们将**5**天（**5**，**D**）添加到 `start_date` 以获得 `end_date`。
- en: Finally, we print both `start_date` and `end_date` to observe the result of
    the addition.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，我们打印 `start_date` 和 `end_date` 以观察加法的结果。
- en: Calculating Time Difference Between Two Dates
  id: totrans-61
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 计算两个日期之间的时间差
- en: Calculate the time difference in hours between two specific dates (**2024-07-15T12:00**
    and **2024-07-17T10:30**)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 计算两个特定日期（**2024-07-15T12:00** 和 **2024-07-17T10:30**）之间的时间差（小时）
- en: '[PRE8]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**Output:**'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: 'Date 1: 2024-07-15T12:00'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 日期 1：2024-07-15T12:00
- en: 'Date 2: 2024-07-17T10:30'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 日期 2：2024-07-17T10:30
- en: 'Time difference in hours: 46.5'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 时间差（小时）：46.5
- en: '**Explanation**:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**解释**：'
- en: Define `date1` and `date2` using `np.datetime64` with specific timestamps.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `np.datetime64` 定义 `date1` 和 `date2`，并指定特定的时间戳。
- en: Compute `time_diff` by subtracting `date1` from `date2` and dividing by `np.timedelta64(1,
    'h')` to convert the difference to hours.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过从 `date1` 中减去 `date2` 并除以 `np.timedelta64(1, 'h')` 来计算 `time_diff`，将差值转换为小时。
- en: Print the original dates and the calculated time difference in hours.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打印原始日期和计算出的时间差（小时）。
- en: Handling Time Zones and Business Days
  id: totrans-72
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 处理时区和工作日
- en: Calculate the number of business days between two dates, excluding weekends
    and holidays.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 计算两个日期之间的工作日数，排除周末和假期。
- en: '[PRE9]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Output:**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: 'Start Date: 2024-07-01'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 开始日期：2024-07-01
- en: 'End Date: 2024-07-15'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 结束日期：2024-07-15
- en: 'Number of Business Days: 11'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 工作日数：11
- en: '**Explanation**:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**解释**：'
- en: '**NumPy and Pandas Import**: NumPy is imported as `np` and Pandas as `pd` to
    utilize their date and time handling functionalities.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NumPy 和 Pandas 导入**：NumPy 被导入为 `np`，Pandas 被导入为 `pd`，以利用它们的日期和时间处理功能。'
- en: '**Date Definition**: Defines `start_date` and `end_date` using NumPy''s code
    style="background: #F5F5F5" < np.datetime64 to specify the start and end dates
    (''**2024-07-01**'' and ''**2024-07-15**'', respectively).'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日期定义**：使用 NumPy 的 `np.datetime64` 定义 `start_date` 和 `end_date` 来指定开始和结束日期（分别为
    ''**2024-07-01**'' 和 ''**2024-07-15**''）。'
- en: '**Conversion to pandas Timestamp**: This conversion converts `start_date` and
    `end_date` from `np.datetime64` to pandas **Timestamp** objects (`start_date_ts`
    and `end_date_ts`) for compatibility with pandas more advanced date manipulation
    capabilities.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**转换为 pandas 时间戳**：此转换将 `start_date` 和 `end_date` 从 `np.datetime64` 转换为 pandas
    **时间戳** 对象（`start_date_ts` 和 `end_date_ts`），以兼容 pandas 更高级的日期处理功能。'
- en: '**Business Day Calculation**: Utilizes `pd.bdate_range` to generate a range
    of business dates (excluding weekends) between `start_date_ts` and `end_date_ts`.
    Calculate the size (number of elements) of this business date range (`business_days`),
    representing the count of business days between the two dates.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作日计算**：使用`pd.bdate_range`生成`start_date_ts`和`end_date_ts`之间的工作日期范围（排除周末）。计算该工作日期范围的大小（元素数量）（`business_days`），表示两日期之间的工作日数量。'
- en: Print the original `start_date` and `end_date`.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打印原始的`start_date`和`end_date`。
- en: Displays the calculated number of business days (`business_days`) between the
    specified dates.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示指定日期之间计算的工作日数量（`business_days`）。
- en: Best Practices When Using `datetime64`
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 `datetime64` 的最佳实践
- en: 'When working with date and time data in NumPy, following best practices ensures
    that your analyses are accurate, efficient, and reliable. Proper handling of `datetime64`
    can prevent common issues and optimize your data processing workflows. Here are
    some key best practices to keep in mind:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在 NumPy 中处理日期和时间数据时，遵循最佳实践可以确保你的分析准确、高效且可靠。正确处理`datetime64`可以防止常见问题并优化数据处理工作流程。以下是一些关键的最佳实践：
- en: Ensure all date and time data are in a consistent format before processing.
    This helps avoid parsing errors and inconsistencies.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在处理之前确保所有日期和时间数据都采用一致的格式。这有助于避免解析错误和不一致。
- en: Select the resolution ('**D**', '**h**', '**m**', etc.) that matches your data
    needs. Avoid mixing different resolutions to prevent inaccuracies in calculations.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择与你的数据需求匹配的分辨率（‘**D**’，‘**h**’，‘**m**’等）。避免混合不同的分辨率，以防计算不准确。
- en: Use `datetime64` to represent missing or invalid dates, and preprocess your
    data to address these values before analysis.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `datetime64` 表示缺失或无效日期，并在分析前预处理数据以解决这些值。
- en: If your data includes multiple time zones, Standardize all timestamps to a common
    time zone early in your processing workflow.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你的数据包含多个时区，请在处理工作流的早期阶段将所有时间戳标准化为一个通用时区。
- en: Check that your dates fall within valid ranges for `datetime64` to avoid overflow
    errors and unexpected results.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查你的日期是否在`datetime64`的有效范围内，以避免溢出错误和意外结果。
- en: Conclusion
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: In summary, NumPy's `datetime64` dtype provides a robust framework for managing
    date and time data in numerical computing. It offers versatility and computational
    efficiency for various applications, such as data analysis, simulations, and more.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，NumPy 的 `datetime64` 数据类型提供了一个强大的框架，用于在数值计算中管理日期和时间数据。它为各种应用提供了灵活性和计算效率，例如数据分析、模拟等。
- en: We explored how to perform date and time calculations using NumPy, delving into
    the core concepts and its representation with the `datetime64` data type. We discussed
    the common applications of date and time in data analysis. We also examined the
    common difficulties associated with handling date and time data in NumPy, such
    as format inconsistencies, time zone issues, and resolution mismatches
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们探讨了如何使用 NumPy 进行日期和时间计算，深入了解了核心概念及其使用 `datetime64` 数据类型的表现。我们讨论了日期和时间在数据分析中的常见应用。同时，我们还审视了在
    NumPy 中处理日期和时间数据的常见困难，例如格式不一致、时区问题和分辨率不匹配。
- en: By adhering to these best practices, you can ensure that your work with `datetime64`
    is precise and efficient, leading to more reliable and meaningful insights from
    your data.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循这些最佳实践可以确保你对`datetime64`的使用既准确又高效，从而为你的数据提供更可靠和有意义的见解。
- en: '[](https://www.linkedin.com/in/olumide-shittu)****[Shittu Olumide](https://www.linkedin.com/in/olumide-shittu/)****
    is a software engineer and technical writer passionate about leveraging cutting-edge
    technologies to craft compelling narratives, with a keen eye for detail and a
    knack for simplifying complex concepts. You can also find Shittu on [Twitter](https://twitter.com/Shittu_Olumide_).'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://www.linkedin.com/in/olumide-shittu)****[Shittu Olumide](https://www.linkedin.com/in/olumide-shittu/)****
    是一名软件工程师和技术作家，热衷于利用前沿技术来撰写引人入胜的叙述，对细节有敏锐的洞察力，并擅长简化复杂的概念。你还可以在[Twitter](https://twitter.com/Shittu_Olumide_)上找到
    Shittu。'
- en: More On This Topic
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Tick-Tock: Using Pendulum For Easy Date And Time Management In Python](https://www.kdnuggets.com/tick-tock-using-pendulum-for-easy-date-and-time-management-in-python)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Tick-Tock: 使用 Pendulum 进行 Python 中简易日期和时间管理](https://www.kdnuggets.com/tick-tock-using-pendulum-for-easy-date-and-time-management-in-python)'
- en: '[How to Perform Matrix Operations with NumPy](https://www.kdnuggets.com/how-to-perform-matrix-operations-with-numpy)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何使用 NumPy 执行矩阵运算](https://www.kdnuggets.com/how-to-perform-matrix-operations-with-numpy)'
- en: '[How to Engineer Date Features in Python](https://www.kdnuggets.com/2021/08/engineer-date-features-python.html)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何在 Python 中工程化日期特征](https://www.kdnuggets.com/2021/08/engineer-date-features-python.html)'
- en: '[5 Project Ideas to Stay Up-To-Date as a Data Scientist](https://www.kdnuggets.com/2022/07/5-project-ideas-stay-uptodate-data-scientist.html)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5 个项目想法帮助数据科学家保持最新](https://www.kdnuggets.com/2022/07/5-project-ideas-stay-uptodate-data-scientist.html)'
- en: '[How to Perform Motion Detection Using Python](https://www.kdnuggets.com/2022/08/perform-motion-detection-python.html)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何使用 Python 执行运动检测](https://www.kdnuggets.com/2022/08/perform-motion-detection-python.html)'
- en: '[KDnuggets News, August 17: How to Perform Motion Detection Using…](https://www.kdnuggets.com/2022/n33.html)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻，8月17日：如何执行运动检测…](https://www.kdnuggets.com/2022/n33.html)'
