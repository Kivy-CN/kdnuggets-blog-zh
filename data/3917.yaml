- en: How a simple mix of object-oriented programming can sharpen your deep learning
    prototype
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何通过简单的面向对象编程混合来提升你的深度学习原型
- en: 原文：[https://www.kdnuggets.com/2019/08/simple-mix-object-oriented-programming-sharpen-deep-learning-prototype.html](https://www.kdnuggets.com/2019/08/simple-mix-object-oriented-programming-sharpen-deep-learning-prototype.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/08/simple-mix-object-oriented-programming-sharpen-deep-learning-prototype.html](https://www.kdnuggets.com/2019/08/simple-mix-object-oriented-programming-sharpen-deep-learning-prototype.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](#comments)'
- en: '![](../Images/639dd33fb84f100e7f6a32b3beae256d.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/639dd33fb84f100e7f6a32b3beae256d.png)'
- en: Introduction
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 介绍
- en: This post is not meant for seasoned software engineers. **This is geared towards
    data scientists and machine learning (ML) practitioners**, who like me, do not
    come from a software engineering background.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本文不针对经验丰富的软件工程师。**这面向数据科学家和机器学习（ML）从业者**，他们像我一样，没有软件工程背景。
- en: We use Python a lot for our work. Why? Because it’s awesome for ML and data
    science community.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在工作中大量使用Python。为什么？因为它对机器学习和数据科学社区来说非常棒。
- en: It is on the way to becoming the [fastest growing major language for modern
    data-driven analytics and artificial intelligence (AI) apps](https://stackoverflow.blog/2017/09/14/python-growing-quickly/?source=post_page---------------------------).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 它正逐渐成为现代数据驱动分析和人工智能（AI）应用的[增长最快的主要语言](https://stackoverflow.blog/2017/09/14/python-growing-quickly/?source=post_page---------------------------)。
- en: However, it is also used for simple scripting purpose, to [automate stuff](https://automatetheboringstuff.com/?source=post_page---------------------------),
    to [test a hypothesis](https://machinelearningmastery.com/statistical-hypothesis-tests-in-python-cheat-sheet/?source=post_page---------------------------),
    create [interactive plots for brainstorming](https://mode.com/blog/python-interactive-plot-libraries?source=post_page---------------------------),
    to [control lab instruments](https://hackaday.com/2016/11/16/how-to-control-your-instruments-from-a-computer-its-easier-than-you-think/?source=post_page---------------------------),
    etc.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，它也用于简单的脚本编写，来[自动化任务](https://automatetheboringstuff.com/?source=post_page---------------------------)，[测试假设](https://machinelearningmastery.com/statistical-hypothesis-tests-in-python-cheat-sheet/?source=post_page---------------------------)，创建[用于头脑风暴的交互式图表](https://mode.com/blog/python-interactive-plot-libraries?source=post_page---------------------------)，[控制实验室仪器](https://hackaday.com/2016/11/16/how-to-control-your-instruments-from-a-computer-its-easier-than-you-think/?source=post_page---------------------------)等。
- en: But here is the thing.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 但问题是。
- en: '**Python for software development and Python for scripting is not exactly the
    same beast — at least in the domain of data science.**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**用于软件开发的Python和用于脚本编写的Python并不是完全相同的东西——至少在数据科学领域中如此。**'
- en: Scripting is (mostly) the code you write for yourself. Software is the assemblage
    of code you (and other teammates) write for others.
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 脚本编写（主要是）你为自己编写的代码。软件则是你（以及其他团队成员）为他人编写的代码集合。
- en: It will be wise to admit that, when (a majority of) data scientists, who do
    not come from a software engineering background, write Python programs for AI/Ml
    models and statistical analysis, they tend to write such code *for themselves*.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 明智的做法是承认，当（大多数）没有软件工程背景的数据科学家为AI/ML模型和统计分析编写Python程序时，他们往往编写这种代码*仅仅是为了自己*。
- en: They just want to get to the heart of the pattern, hidden in the data. Fast.
    Without thinking deeply about normal mortals - *users*.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 他们只想迅速抓住数据中隐藏的模式。不深入思考普通用户——*用户*。
- en: They write a block of code to produce a rich and beautiful plot. But they don’t
    create a ***function*** out of it, to use later.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 他们编写了一段代码以生成丰富美观的图表。但他们不会将其创建为一个***函数***，以便后续使用。
- en: They import lots of ***methods*** and ***classes*** from standard libraries.
    But they don’t create a ***subclass*** of their own by ***inheritance*** and add
    methods to it for extending the functionality.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 他们从标准库中导入了许多***方法***和***类***。但他们不会通过***继承***来创建自己的***子类***，并为其添加方法以扩展功能。
- en: '***Functions, inheritance, methods, classes ***— these are at the heart of
    robust **object-oriented programming (OOP)**, but they are somewhat avoidable
    if all you want to do is to create a Jupyter notebook with your data analysis
    and plots.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '***函数、继承、方法、类***——这些是稳健的**面向对象编程（OOP）**的核心，但如果你只是想用数据分析和图表创建一个Jupyter笔记本，它们在一定程度上是可以避免的。'
- en: You can avoid the initial pain of using OOP principles, but that, almost always,
    renders your Notebook code non-reusable and non-extensible.
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以避免最初使用面向对象编程原则的痛苦，但这几乎总会导致你的笔记本代码不可重用和不可扩展。
- en: In short, that piece of code serves only you (until you forget what logic exactly
    you coded) and no one else.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，这段代码仅对你自己有用（直到你忘记了你编写的具体逻辑），对其他人则无效。
- en: But [**readability (and thereby re-useability) is critically important**](https://devblogs.microsoft.com/oldnewthing/20070406-00/?p=27343&source=post_page---------------------------).
    That is the true test of the merit of what you produced. Not for yourself. But
    for others.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 但 [**可读性（因此可重用性）至关重要**](https://devblogs.microsoft.com/oldnewthing/20070406-00/?p=27343&source=post_page---------------------------)。这是你所编写内容真正的价值测试。不是为了你自己，而是为了他人。
- en: In fact, data scientist [Will Koehrsen](https://towardsdatascience.com/u/e2f299e30cb9?source=post_page---------------------------) just
    wrote a wonderful piece on this idea.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，数据科学家 [Will Koehrsen](https://towardsdatascience.com/u/e2f299e30cb9?source=post_page---------------------------)
    刚刚写了一篇关于这个想法的精彩文章。
- en: '**[Notes on Software Construction from Code Complete](https://towardsdatascience.com/notes-on-software-construction-from-code-complete-8d2a8a959c69?source=post_page---------------------------)**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**[《代码大全》中的软件构建笔记](https://towardsdatascience.com/notes-on-software-construction-from-code-complete-8d2a8a959c69?source=post_page---------------------------)**'
- en: 'Lessons from “Code Complete: A Practical Handbook of Software Constructions”
    with applications for data science'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 《代码大全：软件构建的实用手册》的经验教训在数据科学中的应用
- en: To top it off, the **hundreds of popular MOOC or online courses on data science
    and AI/ML also do not emphasize this aspect of coding, because it feels like a
    burden for a young, enthusiastic learner**. He/She is here to learn cool algorithms
    and neural network optimizations, not OOP in Python. Consequently, this aspect
    remains neglected.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 更重要的是，[**数以百计的受欢迎的 MOOC 或在线数据科学和 AI/ML 课程也没有强调这种编码方面，因为对于年轻的热情学习者来说，这感觉像是一种负担**]。他们在这里是为了学习酷炫的算法和神经网络优化，而不是
    Python 中的面向对象编程。因此，这一方面往往被忽视。
- en: So, what can you do?
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，你可以做些什么呢？
- en: A simple mix of OOP can sharpen your deep learning (DL) code
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 适当的面向对象编程可以提升你深度学习（DL）代码的质量。
- en: I am not a software engineer, never had been in my life. So, when I started
    exploring ML and data science, I wrote a great many amounts of sloppy, non-reusable
    code.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我不是软件工程师，生活中从未做过这类工作。所以，当我开始探索机器学习和数据科学时，我写了大量粗糙、不具可重用性的代码。
- en: Gradually, I am trying to become better and using simple enhancements to my
    coding style to make them more useful (for anybody in the world).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我正在逐步尝试改进自己，使用简单的代码风格增强来使其对世界上的任何人更有用。
- en: And, I have discovered that it does not take much to start mixing OOP principles
    in your data science code.
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 而且，我发现开始在数据科学代码中混合面向对象编程原则并不难。
- en: Even if you never took a software engineering course in your life, some ideas
    may come naturally to you. **All you have to do is to put yourself in someone
    else’s shoe and think about how that person will take and use your code in a constructive
    manner**.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你一生中从未上过软件工程课程，一些想法可能也会自然而然地浮现给你。[**你只需设身处地思考，考虑其他人如何以建设性的方式使用你的代码**]。
- en: If you have a code block that appears more than once in your analysis (in the
    exact same form or in slight variations), can you make a function out of it?
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你的分析中有一个代码块出现多次（形式完全相同或略有变化），你能将它封装成一个函数吗？
- en: When you make such a function, what parameters will be passing on? [Which one
    of them can be optional? What will be the default values](https://www.programiz.com/python-programming/function-argument?source=post_page---------------------------)?
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你创建这样的函数时，哪些参数需要传递？[其中哪些可以是可选的？默认值是什么](https://www.programiz.com/python-programming/function-argument?source=post_page---------------------------)？
- en: If you encounter a situation where you don’t know how many parameters will need
    to be passed on, [are you using the *args, **kwargs that Python offers](https://www.geeksforgeeks.org/args-kwargs-python/?source=post_page---------------------------)?
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你遇到一个你不知道需要传递多少参数的情况，[你是否使用了 Python 提供的 *args, **kwargs](https://www.geeksforgeeks.org/args-kwargs-python/?source=post_page---------------------------)？
- en: Did you write a [docstring for that function](https://www.geeksforgeeks.org/python-docstrings/?source=post_page---------------------------) to
    let others know what the function does and what parameters it expects, an example
    perhaps?
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你是否为那个函数编写了 [文档字符串](https://www.geeksforgeeks.org/python-docstrings/?source=post_page---------------------------)
    来让其他人知道函数的作用和期望的参数，或许还包括一个示例？
- en: When you have collected a bunch of such utility functions, are you still working
    on the same notebook, or [switching over to a new, clean notebook and just calling](http://web.cs.iastate.edu/~smkautz/cs127f16/notes/chapter07/?source=post_page---------------------------) “from *my_utility_script* import *func1,
    func2, func3*” (Did you create a *my_utility_script* as a simple Python file rather
    than a Jupyter notebook)?
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你收集了一堆这样的实用函数时，你是否还在使用同一个笔记本，或者[切换到一个新的、干净的笔记本，并直接调用](http://web.cs.iastate.edu/~smkautz/cs127f16/notes/chapter07/?source=post_page---------------------------)“from
    *my_utility_script* import *func1, func2, func3*”（你是否将*my_utility_script*创建为一个简单的Python文件而不是Jupyter笔记本）？
- en: Did you put the *my_utility_script* in a directory, [put an *__init__.py* file
    (even a blank one) in the same directory and make it a Python module](https://timothybramlett.com/How_to_create_a_Python_Package_with___init__py.html?source=post_page---------------------------)to
    be importable just like NumPy or Pandas?
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你是否把*my_utility_script*放在了一个目录中，[在同一目录下放置一个*__init__.py*文件（即使是空的），并将其设置为一个Python模块](https://timothybramlett.com/How_to_create_a_Python_Package_with___init__py.html?source=post_page---------------------------)，以便像NumPy或Pandas一样可以导入？
- en: Are you thinking about not merely importing classes and methods from great packages
    like NumPy and TensorFlow but [adding your own methods to them and extending their
    functionality](https://stackoverflow.com/questions/25458433/how-to-extend-class-method?source=post_page---------------------------)?
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你是否在考虑不仅仅从像NumPy和TensorFlow这样的优秀包中导入类和方法，而是[为它们添加自己的方法并扩展其功能](https://stackoverflow.com/questions/25458433/how-to-extend-class-method?source=post_page---------------------------)？
- en: What do I even mean by all of these? Let’s demonstrate using a simple case —
    a DL image classification problem with the [fashion MNIST](https://github.com/zalandoresearch/fashion-mnist?source=post_page---------------------------) dataset.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我说的这些到底是什么意思？让我们用一个简单的案例来演示——一个使用[fashion MNIST](https://github.com/zalandoresearch/fashion-mnist?source=post_page---------------------------)数据集的DL图像分类问题。
- en: 'Case illustration with a DL classification task:'
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用DL分类任务案例说明：
- en: The approach
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方法
- en: The [detailed notebook is given here in my Github repo](https://github.com/tirthajyoti/Deep-learning-with-Python/blob/master/Notebooks/OOP_principle_deep_learning.ipynb?source=post_page---------------------------).
    You are encouraged to go through it and fork it for your own use and extension.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[详细的笔记本在我的Github库中给出](https://github.com/tirthajyoti/Deep-learning-with-Python/blob/master/Notebooks/OOP_principle_deep_learning.ipynb?source=post_page---------------------------)。鼓励你阅读并进行自己的分叉以便使用和扩展。'
- en: Code is essential for building great software but not necessarily suitable for
    a Medium article, which you are reading to gain insights, and not practicing a
    debugging or refactoring exercise.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 代码对于构建伟大的软件至关重要，但不一定适合Medium文章，而你阅读这些文章是为了获得见解，而不是进行调试或重构练习。
- en: Therefore, I will just pick up chosen code snippets and try to point out how
    I tried to encode some of the principles, detailed earlier, in this Notebook.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我将挑选一些代码片段，并尝试指出我如何在本Notebook中编码之前详细说明的一些原则。
- en: The core ML task and the higher-order business problem
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 核心机器学习任务和高阶业务问题
- en: The core ML task is simple — building a deep learning classifier for the [**fashion
    MNIST**](https://github.com/zalandoresearch/fashion-mnist?source=post_page---------------------------) dataset,
    which is a fun spin on the original famous MNIST hand-written digit dataset. Fashion
    MNIST consists of 60,000 training images of 28 x 28 pixel size — of objects related
    to fashion e.g. hat, shoe, trouser, t-shirt, dresses, etc. It also consists of
    10,000 test images for model validation and testing.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 核心机器学习任务很简单——为[**fashion MNIST**](https://github.com/zalandoresearch/fashion-mnist?source=post_page---------------------------)数据集构建一个深度学习分类器，这是对原始著名的MNIST手写数字数据集的一种有趣变体。Fashion
    MNIST包含60,000张28 x 28像素大小的训练图像——这些图像与时尚相关，如帽子、鞋子、裤子、T恤、裙子等。它还包含10,000张测试图像用于模型验证和测试。
- en: '![Figure](../Images/70adab23bb60dcdfb43ae1c220a47516.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/70adab23bb60dcdfb43ae1c220a47516.png)'
- en: '**Fashion MNIST (**[**https://github.com/zalandoresearch/fashion-mnist**](https://github.com/zalandoresearch/fashion-mnist?source=post_page---------------------------)**)**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**Fashion MNIST (**[**https://github.com/zalandoresearch/fashion-mnist**](https://github.com/zalandoresearch/fashion-mnist?source=post_page---------------------------)**)**'
- en: But what if there is a higher-order optimization or visual analytics question
    around this core ML task —***how the model architecture complexity impacts the
    minimum epochs it takes to reach the desired accuracy***?
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果围绕这个核心机器学习任务有一个高阶优化或可视化分析问题——***模型架构复杂度如何影响达到期望准确度所需的最小周期数***？
- en: It should be clear to the reader, why we even bother about such a question. **Because
    this is related to the overall business optimization**. [Training a neural net
    is not a trivial computational matter](https://www.technologyreview.com/s/613630/training-a-single-ai-model-can-emit-as-much-carbon-as-five-cars-in-their-lifetimes/?source=post_page---------------------------).
    Therefore, it makes sense to investigate **what minimum training effort must be
    spent to achieve a target performance metric and how the choice of architecture
    impacts that**.
  id: totrans-48
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 应该让读者明白，为什么我们还要考虑这样的问题。**因为这与整体业务优化相关**。[训练神经网络并非一个简单的计算问题](https://www.technologyreview.com/s/613630/training-a-single-ai-model-can-emit-as-much-carbon-as-five-cars-in-their-lifetimes/?source=post_page---------------------------)。因此，调查
    **达到目标性能指标所需的最小训练努力以及架构选择如何影响这一点** 是有意义的。
- en: In this example, we will not even use a convolutional net, as a simple densely
    connected neural net can accomplish reasonably high accuracy, and, in fact, a
    somewhat sub-optimal performance is required to illustrate the main point of the
    higher-order optimization question we posed above.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们甚至不使用卷积网络，因为一个简单的密集连接神经网络就可以达到相当高的准确性，实际上，我们故意使用了一些次优性能来阐明我们提出的更高阶优化问题的主要观点。
- en: Our solution
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我们的解决方案
- en: So, we have to solve two problems -
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们必须解决两个问题 -
- en: How to determine what the minimum number of epochs is for reaching the desired
    accuracy target?
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何确定达到所需准确度目标的最小轮次是多少？
- en: How the specific architecture of the model impacts this number or training behavior?
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型的具体架构如何影响这个数字或训练行为？
- en: To achieve the goals, we will use two simple OOP principles,
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这些目标，我们将使用两个简单的面向对象编程原则，
- en: Creating an [inherited class from a base class object](https://www.digitalocean.com/community/tutorials/understanding-class-inheritance-in-python-3?source=post_page---------------------------)
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个 [从基类对象继承的类](https://www.digitalocean.com/community/tutorials/understanding-class-inheritance-in-python-3?source=post_page---------------------------)
- en: Create utility functions and call them from a compact code block which can be
    presented to an external user for higher order optimization and analytics
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建实用函数并从紧凑的代码块中调用它们，这些代码块可以呈现给外部用户用于更高阶优化和分析
- en: Code snippets to show the good practices
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 代码片段以展示良好的实践
- en: Here we show some code snippets to illustrate how simple OOP principles have
    been utilized to achieve our solution. The snippets are marked with comments for
    easy understanding.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这里展示了一些代码片段，以说明如何利用简单的面向对象编程原则来实现我们的解决方案。这些片段附有注释以便于理解。
- en: '*First, we inherit a Keras class and write our own subclass adding a method
    for checking training accuracy and taking an action based on that value.*'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '*首先，我们继承一个 Keras 类，并编写自己的子类，添加一个方法来检查训练准确度，并根据该值采取相应的行动。*'
- en: '![](../Images/bd4010a9987717834876f7f1c5552bfd.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bd4010a9987717834876f7f1c5552bfd.png)'
- en: This [simple callback](http://keras.io/callbacks/?source=post_page---------------------------) results
    in **dynamic control of the epochs** — the training stops automatically when the
    accuracy reaches the desired threshold.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 [简单的回调函数](http://keras.io/callbacks/?source=post_page---------------------------)
    结果实现了 **动态控制训练轮次** —— 当准确性达到所需阈值时，训练会自动停止。
- en: '![](../Images/257b65d8deecbf013ad98cd406f9182a.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/257b65d8deecbf013ad98cd406f9182a.png)'
- en: We put the Keras model construction codes in a utility function so that **a
    model of an arbitrary number of layers and architecture (as long as they are densely
    connected) can be generated** using simple user input in the form of some function
    arguments.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将 Keras 模型构建代码放入一个实用函数中，以便 **可以通过一些函数参数的简单用户输入生成任意层数和架构的模型（只要它们是密集连接的）**。
- en: '![](../Images/89ad51c5f979024fb921cffb7c4b97f8.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/89ad51c5f979024fb921cffb7c4b97f8.png)'
- en: We can even put the compilation and training code into a utility function to **use
    those hyperparameters in a higher-order optimization loop**conveniently.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至可以将编译和训练代码放入一个实用函数中，以便 **在更高阶优化循环中方便地使用这些超参数**。
- en: '![](../Images/30056cdf2206d15d4c48d431e76dbf4c.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/30056cdf2206d15d4c48d431e76dbf4c.png)'
- en: Next, it’s time for visualization. Again here, we go by the practice of functionalization.
    Generic plot functions take raw data as input. However, if we have a specific
    purpose of plotting the evolution of training set accuracy and showing how it
    compares to the target, then our **plot function should just take the deep learning
    model as the input** and generate the desired plot.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是可视化环节。这里，我们依然采用功能化的做法。通用的绘图函数以原始数据为输入。然而，如果我们有特定的目的，如绘制训练集准确性的变化并展示其与目标的比较，那么我们的**绘图函数应该仅以深度学习模型为输入**并生成所需的图表。
- en: '![](../Images/6b64701031704a27e0a3bd626167ddf5.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6b64701031704a27e0a3bd626167ddf5.png)'
- en: A typical result looks like following,
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一个典型的结果如下所示，
- en: '![](../Images/0bdfd3c2e031522e8a65b82f7a7d4e94.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0bdfd3c2e031522e8a65b82f7a7d4e94.png)'
- en: Final analytics code — super compact and simple
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最终分析代码 — 超级紧凑且简单
- en: And, now we can take advantage of all the functions and classes, we defined
    earlier, and bring them all together to accomplish the higher-order task.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以利用之前定义的所有函数和类，并将它们整合在一起完成更高阶的任务。
- en: Consequently, our final code will be super compact but it will generate the
    same interesting plots of loss and accuracy over epochs, that we show above, for
    a variety of accuracy threshold values and neural network architectures.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们的最终代码将非常紧凑，但它将生成与上述相同的损失和准确性随训练轮次变化的有趣图表，适用于各种准确性阈值和神经网络架构。
- en: This will give a user the ability to to use a minimal amount of code to produce
    visual analytics about the choice of performance metric (accuracy in this case),
    and neural network architecture. **This is the first step towards building an
    optimized machine learning system.**
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使用户能够使用最少量的代码来生成关于性能指标（在本例中为准确性）和神经网络架构的视觉分析。**这是构建优化的机器学习系统的第一步。**
- en: We generate a few cases for investigation,
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们生成了几个案例进行调查，
- en: '![](../Images/d80a17328c8bc26cc0bc355ca2dce3bb.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d80a17328c8bc26cc0bc355ca2dce3bb.png)'
- en: Our final analytics/optimization code is succinct and easy to follow for a high-level
    user, **who does not need to know the complexity of Keras model building or callbacks
    classes**.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最终的分析/优化代码简洁明了，适合高阶用户使用，**不需要了解 Keras 模型构建或回调类的复杂性**。
- en: This is the core principle behind OOP — the abstraction of the layers of complexity,
    which we are able to accomplish for our deep learning task.
  id: totrans-78
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这就是面向对象编程的核心原则 — 复杂性层次的抽象，我们在深度学习任务中实现了这一点。
- en: Note, how we pass on the `print_msg=False` to the class instance. While we needed
    basic printing of status for initial check/debug, we should execute the analysis
    silently for the optimization task. If we did not have this argument in our class
    definition, then we would not have a way to stop printing debugging messages.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们如何将`print_msg=False`传递给类实例。虽然我们在初始检查/调试时需要基本的状态打印，但在优化任务中我们应当静默执行分析。如果在类定义中没有这个参数，那么我们将无法停止打印调试信息。
- en: We show some of the representative results which are automatically generated
    from executing the code block above. It clearly shows, how with a minimal amount
    of high-level code, we are able to generate visual analytics to judge the relative
    performance of various neural architectures for various levels of performance
    metrics. This gives a user, without tweaking the lower-level functions, easily
    make a judgment on the choice of a model as per his/her performance demand.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们展示了一些代表性的结果，这些结果是通过执行上述代码块自动生成的。它清楚地显示了，通过少量的高阶代码，我们能够生成视觉分析，以评估不同神经网络架构在各种性能指标下的相对表现。这使得用户无需调整低级函数，即可根据其性能需求轻松判断模型的选择。
- en: '![](../Images/d3231e01d1652f36248138eddf1eb779.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d3231e01d1652f36248138eddf1eb779.png)'
- en: Also, note the custom titles for each plot. These titles clearly enunciate the
    target performance and the complexity of the neural net, thereby making the analytics
    easy.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，请注意每个图表的自定义标题。这些标题清晰地阐述了目标性能和神经网络的复杂性，从而使分析变得简单。
- en: It was a small addition to the plotting utility function but this shows the
    need for careful planning while creating such functions. If we had not planned
    for such an argument to the function, it would not have been possible to generate
    a custom title for each plot. **This careful planning of API (application program
    interface) is part and parcel of good OOP**.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这是对绘图工具函数的小补充，但这表明在创建此类函数时需要仔细规划。如果我们没有为函数规划这样的参数，就不可能为每个图生成自定义标题。**这种 API（应用程序接口）的精心规划是良好面向对象编程（OOP）的核心部分**。
- en: Finally, turn the scripts into a simple Python module
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最后，将脚本转化为一个简单的 Python 模块。
- en: So far, you may be working with a Jupyter notebook, but you may want to turn
    this exercise into a neat Python module, which you can import from any time you
    want.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，你可能正在使用 Jupyter notebook，但你可能希望将这个练习转化为一个整洁的 Python 模块，随时可以导入。
- en: Just like you write “*from matplotlib import pyplot*”, you can import these
    utility functions (Keras model build, train, and plotting) anywhere.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 就像你写“*from matplotlib import pyplot*”一样，你可以在任何地方导入这些工具函数（Keras 模型构建、训练和绘图）。
- en: '![](../Images/30ffeea0a36dbac4577c113acf61caec.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/30ffeea0a36dbac4577c113acf61caec.png)'
- en: Summary and conclusions
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结与结论
- en: We showed some simple good practices, borrowed from OOP, to apply to a DL analysis
    task. Almost all of them may seem trivial to seasoned software developers but **this
    post is for budding data scientists who may not have that background but should
    understand the importance of imbuing these good practices in their machine learning
    workflow**.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们展示了一些从 OOP 借来的简单良好实践，以应用于 DL 分析任务。对经验丰富的软件开发人员来说，这些可能看起来微不足道，但**这篇文章是为那些可能没有相关背景但应该理解在机器学习工作流中融入这些良好实践重要性的新兴数据科学家们**。
- en: '[The notebook is here](https://github.com/tirthajyoti/Deep-learning-with-Python/blob/master/Notebooks/OOP_principle_deep_learning.ipynb?source=post_page---------------------------).'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[笔记本在这里](https://github.com/tirthajyoti/Deep-learning-with-Python/blob/master/Notebooks/OOP_principle_deep_learning.ipynb?source=post_page---------------------------)。'
- en: At the risk of repeating myself one too many times, let me summarize the good
    practices, again here,
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有些话可能说得太多了，但让我在这里再次总结一下良好的实践，
- en: Whenever get a chance, **turn repetitive code blocks into utility functions**
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每当有机会时，**将重复的代码块转化为工具函数**。
- en: '**Think very carefully about the API of the function** i.e. what minimal set
    of arguments is required and how they will serve a purpose for a higher level
    programming task'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仔细考虑函数的 API**，即需要哪些最小参数集以及它们如何为更高级的编程任务服务。'
- en: Don’t forget to **write a docstring** for a function, even if it is a one-liner
    description
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要忘记为函数**编写文档字符串**，即使它只是一个简短的描述。
- en: If you start accumulating many utility functions related to the same object,
    consider **turning that object to a class** and putting the utility functions
    as methods
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你开始积累许多与同一对象相关的工具函数，可以考虑**将该对象转化为一个类**，并将这些工具函数作为方法放入类中。
- en: '**Extend class functionality** whenever you get a chance for accomplishing
    complex analysis using inheritance'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每当有机会时扩展类的功能**，通过继承来完成复杂的分析。'
- en: '**Don’t stop at Jupyter notebooks**. Turn them into **executable scripts**and
    put them in a **small module**. Build the **habit of modularizing your work** so
    that it can be easily reused and extended by anyone, anywhere.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不要停留在 Jupyter notebooks**。将它们转化为**可执行脚本**并放入一个**小模块**。养成**模块化工作**的习惯，这样可以让任何人、任何地方都能轻松重用和扩展你的工作。'
- en: Who knows, you may be able to release a utility package on the Python package
    repository (PyPi server) when you accumulate enough of useful classes and sub-modules.
    You will have the bragging right of releasing an original open-source package
    then :-)
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 谁知道呢，当你积累足够有用的类和子模块时，你可能会在 Python 包存储库（PyPi 服务器）上发布一个实用程序包。到时你将拥有发布原创开源包的 bragging
    right :-)
- en: If you have any questions or ideas to share, please contact the author at [**tirthajyoti[AT]gmail.com**](mailto:tirthajyoti@gmail.com?source=post_page---------------------------).
    Also, you can check the author’s [**GitHub**](https://github.com/tirthajyoti?tab=repositories&source=post_page---------------------------)
    **repositories **for other fun code snippets in Python, R, or MATLAB and machine
    learning resources. If you are, like me, passionate about machine learning/data
    science, please feel free to [add me on LinkedIn](https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/?source=post_page---------------------------) or [follow
    me on Twitter.](https://twitter.com/tirthajyotiS?source=post_page---------------------------)
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有任何问题或想法分享，请通过 [**tirthajyoti[AT]gmail.com**](mailto:tirthajyoti@gmail.com?source=post_page---------------------------)
    联系作者。此外，你还可以查看作者的 [**GitHub**](https://github.com/tirthajyoti?tab=repositories&source=post_page---------------------------)
    **库**，获取其他有趣的 Python、R 或 MATLAB 代码片段和机器学习资源。如果你像我一样，对机器学习/数据科学充满热情，请随时 [在 LinkedIn
    上添加我](https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/?source=post_page---------------------------)
    或 [在 Twitter 上关注我。](https://twitter.com/tirthajyotiS?source=post_page---------------------------)
- en: '**Bio: [Tirthajyoti Sarkar](https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/)**
    is the Senior Principal Engineer at ON Semiconductor working on Deep Learning/Machine
    Learning based design automation projects.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**个人简介： [提尔塔吉约提·萨尔卡](https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/)**
    是 ON Semiconductor 的高级首席工程师，专注于基于深度学习/机器学习的设计自动化项目。'
- en: '[Original](https://towardsdatascience.com/how-a-simple-mix-of-object-oriented-programming-can-sharpen-your-deep-learning-prototype-19893bd969bd).
    Reposted with permission.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/how-a-simple-mix-of-object-oriented-programming-can-sharpen-your-deep-learning-prototype-19893bd969bd)。已获得许可转载。'
- en: '**Related:**'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Optimization with Python: How to make the most amount of money with the least
    amount of risk?](/2019/06/optimization-python-money-risk.html)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 Python 进行优化：如何在最小风险下赚取最多的钱？](/2019/06/optimization-python-money-risk.html)'
- en: '[How do you check the quality of your regression model in Python?](/2019/07/check-quality-regression-model-python.html)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何在 Python 中检查回归模型的质量？](/2019/07/check-quality-regression-model-python.html)'
- en: '[Mathematical programming —  Key Habit to Build Up for Advancing Data Science](/2019/05/mathematical-programming-key-habit-advancing-data-science.html)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数学编程——提升数据科学的关键习惯](/2019/05/mathematical-programming-key-habit-advancing-data-science.html)'
- en: '* * *'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三名课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你组织的 IT'
- en: '* * *'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Machine Learning Is Not Like Your Brain Part 5: Biological Neurons…](https://www.kdnuggets.com/2022/07/machine-learning-like-brain-part-5-biological-neurons-cant-summation-inputs.html)'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[机器学习并不像你的大脑 第 5 部分: 生物神经元……](https://www.kdnuggets.com/2022/07/machine-learning-like-brain-part-5-biological-neurons-cant-summation-inputs.html)'
- en: '[Python: The programming language of machine learning](https://www.kdnuggets.com/2022/06/mlm-python-programming-language-machine-learning.html)'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python: 机器学习的编程语言](https://www.kdnuggets.com/2022/06/mlm-python-programming-language-machine-learning.html)'
- en: '[3 Simple Ways to Speed Up Your Python Code](https://www.kdnuggets.com/2022/10/3-simple-ways-speed-python-code.html)'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[加速你的 Python 代码的 3 种简单方法](https://www.kdnuggets.com/2022/10/3-simple-ways-speed-python-code.html)'
- en: '[Personalized AI Made Simple: Your No-Code Guide to Adapting GPTs](https://www.kdnuggets.com/personalized-ai-made-simple-your-no-code-guide-to-adapting-gpts)'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[简化的个性化 AI：你的无代码 GPT 适配指南](https://www.kdnuggets.com/personalized-ai-made-simple-your-no-code-guide-to-adapting-gpts)'
- en: '[Llama, Llama, Llama: 3 Simple Steps to Local RAG with Your Content](https://www.kdnuggets.com/3-simple-steps-to-local-rag-with-your-content)'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Llama, Llama, Llama: 用你的内容进行本地 RAG 的 3 个简单步骤](https://www.kdnuggets.com/3-simple-steps-to-local-rag-with-your-content)'
- en: '[How Generative AI Can Help You Improve Your Data Visualization Charts](https://www.kdnuggets.com/how-generative-ai-can-help-you-improve-your-data-visualization-charts)'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[生成式 AI 如何帮助你改善数据可视化图表](https://www.kdnuggets.com/how-generative-ai-can-help-you-improve-your-data-visualization-charts)'
