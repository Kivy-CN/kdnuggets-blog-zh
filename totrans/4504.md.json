["```py\nimport pandas as pd\n\n```", "```py\ndf=pd.read_csv(‘clareyan_file.csv’)\n\n```", "```py\n#create a Python script that converts a Python dictionary{ } into a Pandas DataFrame\ndf = pd.DataFrame({\n    'year_born': [1984, 1998, 1959, pd.np.nan, 1982, 1990, 1989, 1974, pd.np.nan, 1982], \n    'sex': ['M', 'W', 'M', 'W', 'W', 'M', 'W', 'W', 'M', 'W'],\n    'name': ['George', 'Elizabeth', 'John', 'Julie', 'Mary', 'Bob', 'Jennifer', 'Patricia', 'Albert', 'Linda']\n})\n#display the top 5 rows \ndf.head()\n#display the top 10\ndf.head(10)\n#display the bottom 5 rows\ndf.tail(5)\n\n```", "```py\ndf.shape\n\n```", "```py\nprint('Number of variables: {}'.format(df.shape[1]))\nprint('Number of rows: {}'.format(df.shape[0]))\n\n```", "```py\n# Check the data type\ndf.dtypes\n\n```", "```py\n# basic data information(columns, rows, data types and memory usage)\ndf.info()\n\n```", "```py\n#use the dataframe.nunique() function to find the unique values\nunique_counts = pd.DataFrame.from_records([(col, df[col].nunique()) for col in df.columns],columns=['Column_Name', 'Num_Unique']).sort_values(by=['Num_Unique'])\n\n```", "```py\n#inspect the categorical column in detail\ndf['sex']\n\n```", "```py\n# Counting\ndf.sex.value_counts()\n\n```", "```py\n# look into the specify data\ndf[(df['sex']=='M') & (df['year_born']==1990)]\n\n```", "```py\n#show the *row* at position zero (1st row) df.iloc[0]\n```", "```py\n#show the 1st column and 1st *row*\ndf.iloc[0,0]\n\n```", "```py\n#Gives you the ***row*** at position zero (2nd row)\ndf.loc[1]\n\n```", "```py\n#give you the first row and the column of 'sex'\ndf.loc[0,'sex']\n\n```", "```py\n#select all rows where sex is male\ndf.loc[df.sex=='M']\n\n```", "```py\n#only show the column of 'year born' where sex is male\ndf.loc[df.sex=='M','year_born']\n\n```", "```py\n# find the mean of year_born of male\ndf.loc[df.sex=='M', 'year_born'].median()\n\n```", "```py\n#find null values and sort descending\ndf.isnull().sum().sort_values(ascending=False)\n\n```", "```py\n#method 1: fill missing value using mean\ndf['year_born'].fillna((df['year_born'].mean()), inplace= True)\n\n```", "```py\n#method 2 drop the rows with missing value\ndf.dropna(inplace = True)\n\n```", "```py\n%matplotlib inline\ndf.loc[df.sex=='W', 'year_born'].hist()\n\n```", "```py\n#plot a histogram showing 'year_born'\ndf.hist(column='year_born')\n\n```", "```py\nimport pandas_profiling\ndf.profile_report()\n\n```"]