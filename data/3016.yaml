- en: 3 More Google Colab Environment Management Tips
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3 个更多的 Google Colab 环境管理技巧
- en: 原文：[https://www.kdnuggets.com/2019/01/more-google-colab-environment-management-tips.html](https://www.kdnuggets.com/2019/01/more-google-colab-environment-management-tips.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/01/more-google-colab-environment-management-tips.html](https://www.kdnuggets.com/2019/01/more-google-colab-environment-management-tips.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](#comments)'
- en: Google's Colab was greeted with all sorts of hype when it was first publicly
    released in early 2018\. After originally being quite excited about it, I wrote
    [a short post](/2018/02/essential-google-colaboratory-tips-tricks.html) with a
    few tips for new users, which covered taking advantage of the free GPU runtime,
    installing additional third-party Python libraries, and uploading and using data
    files to your Colab environment.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Google 的 Colab 在 2018 年初首次公开发布时引起了各种炒作。在最初对其感到非常兴奋之后，我写了 [一篇短文](/2018/02/essential-google-colaboratory-tips-tricks.html)，提供了一些针对新用户的技巧，包括利用免费的
    GPU 运行时、安装额外的第三方 Python 库，以及上传和使用数据文件到你的 Colab 环境中。
- en: '![Header image](../Images/f2a5d9754f4267cd5dd86c2c0a9ed1ec.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![Header image](../Images/f2a5d9754f4267cd5dd86c2c0a9ed1ec.png)'
- en: Well, like every novelty, Colab's excitement wore off a bit after the initial
    euphoria. However, after dipping back into the books and needing a stable notebook
    environment *which I could access and share seamlessly between my notebook, workstation,
    and Chromebook*, I decided to give Colab another look. It turned out to be a good
    decision; I have been regularly using Colab for the past few months for *all*
    of my learning-related coding.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 像每一种新事物一样，Colab 的兴奋感在最初的狂热之后有所减退。然而，在重新深入书籍并需要一个稳定的笔记本环境 *可以在我的笔记本、工作站和 Chromebook
    之间无缝访问和共享* 之后，我决定再看看 Colab。这证明是一个好决定；在过去几个月里，我一直定期使用 Colab 进行 *所有* 与学习相关的编码。
- en: This post is a second entry in the short-but-hopefully-useful Google Colab environment
    tips series, and includes 3 more things I've learned while managing my own Colab
    coding environment while learning. I stress that this is what I am using for my
    *learning*, no mission-critical projects, and I am primarily using Colab as I
    can switch between my various machines seamlessly, while still having access to
    GPUs for training (and even TPUs).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇文章是简短但希望有用的 Google Colab 环境技巧系列中的第二篇，包含了我在管理自己的 Colab 编码环境时学到的 3 个额外技巧。我强调这是我用于
    *学习* 的内容，没有涉及到关键任务项目，我主要使用 Colab 是因为可以在各种机器之间无缝切换，同时仍然可以访问 GPU 进行训练（甚至 TPUs）。
- en: Note that some of these are plain vanilla Jupyter tricks, so don't @ me.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，其中一些是普通的 Jupyter 技巧，所以别@我。
- en: '**0\. Get Colab out of the browser**'
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**0\. 把 Colab 从浏览器中移除**'
- en: OK, this isn't really a Colab tip, but first get Colab out of the browser. If
    you're like me, your tab situation is sub-optimal. Sullying that up any further
    with both the Colab management interface **and** a bunch of notebooks won't help,
    so run Colab as its own standalone app. This is OS-dependent, but involves having
    the Colab "app" installed in your Chrome browser, and selecting both "Open as
    window" and "Create shortcuts..." from the app context menu, after which you need
    to find the shortcut and use it to open the app in its own window.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，这实际上不是一个 Colab 的技巧，但首先要把 Colab 从浏览器中移除。如果你像我一样，你的标签页情况可能不太理想。把 Colab 管理界面**和**一堆笔记本都挤在一起并不会有所帮助，所以把
    Colab 作为独立的应用程序运行。这取决于操作系统，但包括在 Chrome 浏览器中安装 Colab “应用”，并从应用上下文菜单中选择“以窗口形式打开”和“创建快捷方式...”，然后你需要找到快捷方式并用它来在独立窗口中打开应用。
- en: '![Right-click](../Images/d8a2c5bd1d585486045c441491f12d1c.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![右键点击](../Images/d8a2c5bd1d585486045c441491f12d1c.png)'
- en: That's it; now you open Colab in its very own window, like in the post header
    image, from its very own icon. I know, not really on topic, but still useful.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样；现在你可以从其独立的图标中打开 Colab，在它自己的窗口中，就像帖子头图那样。我知道，这不太相关，但还是有用的。
- en: '**1\. Download a file to local computer**'
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**1\. 下载文件到本地计算机**'
- en: 'This is another simple one, but important enough to mention. A use case: you
    have created a Keras model and want to visualize the model. You call `plot_model`
    to create a PNG file, but since Colab virtual machines don''t give you permanency
    in file storage, you want to download the image. The following excerpt does it:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个简单的技巧，但足够重要值得提及。使用场景：你创建了一个 Keras 模型并想要可视化该模型。你调用 `plot_model` 来创建一个 PNG
    文件，但由于 Colab 虚拟机不提供文件存储的持久性，你想下载图像。以下摘录可以实现：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Execute the cell and a pop up dialog prompts you for a download location. Which
    leads us to...
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 执行单元格后，弹出对话框提示你选择下载位置。这使我们转到……
- en: '**1(b). Display an image inline**'
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**1(b). 内联显示图像**'
- en: 'Yeah, it''s elementary, but it took me a few to remember that I was working
    with more or less a regular Jupyter environment with Colab. So, to display the
    above image inline, use:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，这很简单，但我花了几分钟才记起我在使用的是一个类似常规Jupyter环境的Colab。因此，要内联显示上述图像，请使用：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'A quick intuitive modification will allow you to inline all sorts of other
    files as you would expect. Lesson: remember you are using a plain old Jupyter
    notebook, more or less. OK, on to Colab stuff.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一个快速直观的修改将允许你像预期的那样内联各种其他文件。教训：记住你正在使用的是一个普通的Jupyter笔记本，或多或少。好了，接下来是Colab的内容。
- en: '**2\. Access your Google Drive filesystem**'
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**2\. 访问你的Google Drive文件系统**'
- en: Let's say I want to save that model image file to my Google Drive instead of
    my local computer. There are [all sorts of ways](https://colab.research.google.com/notebooks/io.ipynb)
    to get files in and out of Google Drive. I find this is the most straightforward
    way of getting CSV data, for example, out of Google Drive.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我想把那个模型图像文件保存到我的Google Drive中，而不是本地计算机。有[各种方法](https://colab.research.google.com/notebooks/io.ipynb)可以在Google
    Drive中获取文件。我发现这是从Google Drive中提取CSV数据的最直接方法。
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![GDrive auth code](../Images/f996dc6b9e01900fa6d41db2e7d1e871.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![GDrive auth code](../Images/f996dc6b9e01900fa6d41db2e7d1e871.png)'
- en: 'After clicking the link and entering the authorization code, you can access
    your drive as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 点击链接并输入授权码后，你可以按如下方式访问你的驱动器：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![Colab GDrive ls](../Images/b240bde1eb37c12ce6c34973ab68db04.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![Colab GDrive ls](../Images/b240bde1eb37c12ce6c34973ab68db04.png)'
- en: Sure, it isn't permanent, but it isn't much work, and seems more straightforward
    than using any of the other options, in my view (and is no less permanent). If
    you use something like [AutoKey](https://github.com/autokey/autokey), a desktop
    automation and text expansion tool, then often-used code excerpts and commands
    like this become even more trivial anyhow.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，它不是永久性的，但这并不费事，在我看来，这比使用其他选项更直接（并且同样不那么永久）。如果你使用像[AutoKey](https://github.com/autokey/autokey)这样的桌面自动化和文本扩展工具，那么常用的代码片段和命令变得更加微不足道。
- en: 'Back on topic: now you can save files to (or get files from) Google Drive.
    Easy, so long as you are comfortable in the terminal... which you should be anyways.
    Either work with the data file where it is or move or copy it up a few directory
    levels to the Colab VM root. Since it disappears from here after dropping your
    instance, however, it makes more sense to me to just read the data from where
    it sits in the CSV file in the filesystem:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 回到主题：现在你可以将文件保存到（或从）Google Drive中。很简单，只要你对终端操作感到熟悉……其实你应该本来就熟悉。要么在数据文件所在的位置进行操作，要么将其移动或复制到Colab虚拟机的根目录上几层。由于在删除实例后文件会从这里消失，因此对我来说，从文件系统中的CSV文件读取数据更有意义：
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**3\. Use custom libraries and modules stored in Google Drive**'
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**3\. 使用存储在Google Drive中的自定义库和模块**'
- en: So, what if you have custom Python libraries or modules you want to import into
    Colab projects?
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如果你有自定义的Python库或模块想要导入到Colab项目中怎么办？
- en: For example, I have a folder I called 'my_modules' in my Colab directory I store
    common .py files I want access to in Colab. I don't want to store them on GitHub,
    and they aren't clean files I want to otherwise have to *make* clean and share
    with others. Let's say they are simple a collection of helper modules I have gotten
    used to using myself; data loader functions, data cleaning functions, and the
    like.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我在Colab目录下有一个名为'my_modules'的文件夹，里面存放着我想在Colab中访问的常见.py文件。我不想把它们存储在GitHub上，而且这些文件也不是我需要*整理*后分享给他人的干净文件。假设它们只是我自己习惯使用的辅助模块的简单集合；数据加载函数、数据清洗函数等。
- en: Any files like this I store in a Dropbox folder with the same name which I sync
    with the Google Drive version. This way I can use the file both inside Colab and
    outside. I have direct OS access to Google Drive contents — natively on Chrome,
    and via [ocamlfuse](https://github.com/astrada/google-drive-ocamlfuse) on Ubuntu
    — and can make use of them starting with the same Google Drive filesystem access
    trick in the above point.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 任何像这样的文件，我都存储在一个名称相同的Dropbox文件夹中，并与Google Drive版本同步。这样，我可以在Colab内部和外部都使用这个文件。我对Google
    Drive内容有直接的操作系统访问——在Chrome上本地访问，以及通过[ocamlfuse](https://github.com/astrada/google-drive-ocamlfuse)在Ubuntu上访问——可以利用上述点中的Google
    Drive文件系统访问技巧。
- en: 'This snippet is useful. Say I have a module called `naive_sharding.py` in my
    `my_modules` directory. Since it is a number of directory levels down, here is
    the easiest way for me to leave the file where it is and import it within Colab:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这个代码片段很有用。假设我在 `my_modules` 目录下有一个名为 `naive_sharding.py` 的模块。由于它在多个目录层级下，以下是我在
    Colab 中导入该文件的最简单方法：
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: That's it; the `naive_sharding.py` module has been imported, and is ready to
    use.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样；`naive_sharding.py` 模块已被导入，并准备好使用。
- en: Modifying some of the above code snippets, you can see how easy it would be
    to get, say, model weights into and out of a Colab environment quite trivially.
    And so with the short notes above, and an outside-the-box thinking, you can accomplish
    quite a bit with Google Colab, despite what numerous naysayers might have you
    believe. Given there is zero setup, and Chromebook access is likewise trivial,
    I have recently found Colab to be an ideal coding tool.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 通过修改上述代码片段，你可以看到将模型权重导入和导出 Colab 环境是多么简单。因此，凭借上面的简短说明和创新思维，你可以充分利用 Google Colab，尽管有许多人可能不这么认为。鉴于零设置以及
    Chromebook 访问的便利性，我最近发现 Colab 是一个理想的编码工具。
- en: Don't forget to read the [first 3 tips and tricks found here](/2018/02/essential-google-colaboratory-tips-tricks.html).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 别忘了阅读 [这里的前 3 个提示和技巧](/2018/02/essential-google-colaboratory-tips-tricks.html)。
- en: '**Related**:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关**：'
- en: '[3 Essential Google Colaboratory Tips & Tricks](/2018/02/essential-google-colaboratory-tips-tricks.html)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[3 个重要的 Google Colaboratory 提示和技巧](/2018/02/essential-google-colaboratory-tips-tricks.html)'
- en: '[Best Practices for Using Notebooks for Data Science](/2018/11/best-practices-notebooks-data-science.html)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学笔记本使用最佳实践](/2018/11/best-practices-notebooks-data-science.html)'
- en: '[How to Set Up a Free Data Science Environment on Google Cloud](/2018/08/set-up-free-data-science-environment-google-cloud.html)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何在 Google Cloud 上设置免费的数据科学环境](/2018/08/set-up-free-data-science-environment-google-cloud.html)'
- en: '* * *'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三名课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析水平'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织在 IT 领域'
- en: '* * *'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Running Redis on Google Colab](https://www.kdnuggets.com/2022/01/running-redis-google-colab.html)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Google Colab 上运行 Redis](https://www.kdnuggets.com/2022/01/running-redis-google-colab.html)'
- en: '[From Google Colab to a Ploomber Pipeline: ML at Scale with GPUs](https://www.kdnuggets.com/2022/03/google-colab-ploomber-pipeline-ml-scale-gpus.html)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[从 Google Colab 到 Ploomber 管道：使用 GPU 扩展的 ML](https://www.kdnuggets.com/2022/03/google-colab-ploomber-pipeline-ml-scale-gpus.html)'
- en: '[Fine Tuning LLAMAv2 with QLora on Google Colab for Free](https://www.kdnuggets.com/fine-tuning-llamav2-with-qlora-on-google-colab-for-free)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Google Colab 上使用 QLora 对 LLAMAv2 进行微调，免费](https://www.kdnuggets.com/fine-tuning-llamav2-with-qlora-on-google-colab-for-free)'
- en: '[Running Mixtral 8x7b On Google Colab For Free](https://www.kdnuggets.com/running-mixtral-8x7b-on-google-colab-for-free)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Google Colab 上免费运行 Mixtral 8x7b](https://www.kdnuggets.com/running-mixtral-8x7b-on-google-colab-for-free)'
- en: '[RAPIDS cuDF for Accelerated Data Science on Google Colab](https://www.kdnuggets.com/2023/01/rapids-cudf-accelerated-data-science-google-colab.html)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RAPIDS cuDF 在 Google Colab 上加速数据科学](https://www.kdnuggets.com/2023/01/rapids-cudf-accelerated-data-science-google-colab.html)'
- en: '[A Full End-to-End Deployment of a Machine Learning Algorithm into a…](https://www.kdnuggets.com/2021/12/deployment-machine-learning-algorithm-live-production-environment.html)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将机器学习算法完整部署到生产环境](https://www.kdnuggets.com/2021/12/deployment-machine-learning-algorithm-live-production-environment.html)'
