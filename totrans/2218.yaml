- en: Getting Started with PyTorch in 5 Steps
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 PyTorch 的 5 步入门指南
- en: 原文：[https://www.kdnuggets.com/5-steps-getting-started-pytorch](https://www.kdnuggets.com/5-steps-getting-started-pytorch)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/5-steps-getting-started-pytorch](https://www.kdnuggets.com/5-steps-getting-started-pytorch)
- en: '![Getting Started with PyTorch in 5 Steps](../Images/85ff1f259e44794911a7f7d810b43ab6.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![使用 PyTorch 的 5 步入门指南](../Images/85ff1f259e44794911a7f7d810b43ab6.png)'
- en: Introduction to PyTorch and PyTorch Lightning
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyTorch 和 PyTorch Lightning 简介
- en: '[PyTorch](https://pytorch.org/) is a popular open-source machine learning framework
    based on Python and optimized for GPU-accelerated computing. Originally developed
    by developed by Meta AI in 2016 and now part of the Linux Foundation, PyTorch
    has quickly become one of the most widely used frameworks for deep learning research
    and applications.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[PyTorch](https://pytorch.org/) 是一个流行的基于 Python 的开源机器学习框架，并优化了 GPU 加速计算。最初由
    Meta AI 在 2016 年开发，现在是 Linux 基金会的一部分，PyTorch 很快成为深度学习研究和应用中使用最广泛的框架之一。'
- en: 'Unlike some other frameworks like TensorFlow, PyTorch uses dynamic computation
    graphs which allow for greater flexibility and debugging capabilities. The key
    benefits of PyTorch include:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 与一些其他框架（如 TensorFlow）不同，PyTorch 使用动态计算图，这允许更大的灵活性和调试能力。PyTorch 的关键好处包括：
- en: Simple and intuitive Python API for building neural networks
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单直观的 Python API，用于构建神经网络
- en: Broad support for GPU/TPU acceleration
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 广泛支持 GPU/TPU 加速
- en: Built-in support for automatic differentiation
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内置自动微分支持
- en: Distributed training capabilities
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分布式训练能力
- en: Interoperability with other Python libraries like NumPy
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与其他 Python 库（如 NumPy）的互操作性
- en: '[PyTorch Lightning](https://lightning.ai/docs/pytorch/stable/) is a lightweight
    wrapper built on top of PyTorch that further simplifies the process of researcher
    workflow and model development. With Lightning, data scientists can focus more
    on designing models rather than boilerplate code. Key advantages of Lightning
    include:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[PyTorch Lightning](https://lightning.ai/docs/pytorch/stable/) 是一个建立在 PyTorch
    之上的轻量级封装，进一步简化了研究人员的工作流程和模型开发过程。使用 Lightning，数据科学家可以更多地专注于设计模型，而不是重复的代码。Lightning
    的主要优点包括：'
- en: Provides structure to organize PyTorch code
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供组织 PyTorch 代码的结构
- en: Handles training loop boilerplate code
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理训练循环的样板代码
- en: Accelerates research experiments with hyperparameters tuning
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过超参数调优加速研究实验
- en: Simplifies model scaling and deployment
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简化模型的扩展和部署
- en: By combining the power and flexibility of PyTorch with the high-level APIs of
    Lightning, developers can quickly build scalable deep learning systems and iterate
    faster.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将 PyTorch 的强大功能和灵活性与 Lightning 的高级 API 相结合，开发人员可以快速构建可扩展的深度学习系统，并加快迭代速度。
- en: 'Step 1: Installation and Setup'
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 步：安装和设置
- en: 'To start using PyTorch and Lightning, you''ll first need to install a few prerequisites:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用 PyTorch 和 Lightning，您首先需要安装一些先决条件：
- en: Python 3.6 or higher
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 3.6 或更高版本
- en: Pip package installer
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pip 包管理器
- en: An NVidia GPU is recommended for accelerated operations (CPU-only setup possible
    but slower)
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐使用 NVidia GPU 进行加速操作（仅 CPU 设置可能会更慢）
- en: Installing Python and PyTorch
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Python 和 PyTorch
- en: 'It''s recommended to use Anaconda for setting up a Python environment for data
    science and deep learning workloads. Follow the steps below:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 建议使用 Anaconda 设置用于数据科学和深度学习工作的 Python 环境。请按照以下步骤操作：
- en: Download and install Anaconda for your OS from [here](https://www.anaconda.com/products/distribution)
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 [这里](https://www.anaconda.com/products/distribution) 下载并安装适用于您操作系统的 Anaconda
- en: 'Create a Conda environment (or using another Python environment manager): `conda
    create -n pytorch python=3.8`'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个 Conda 环境（或使用其他 Python 环境管理器）：`conda create -n pytorch python=3.8`
- en: 'Activate the environment: `conda activate pytorch`'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 激活环境：`conda activate pytorch`
- en: 'Install PyTorch: `conda install pytorch torchvision torchaudio -c pytorch`'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 PyTorch：`conda install pytorch torchvision torchaudio -c pytorch`
- en: 'Verify that PyTorch is installed correctly by running a quick test in Python:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在 Python 中运行一个快速测试来验证 PyTorch 是否正确安装：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This will print out a random 3x3 tensor, confirming PyTorch is working properly.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打印出一个随机的 3x3 张量，确认 PyTorch 正常工作。
- en: Installing PyTorch Lightning
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 PyTorch Lightning
- en: 'With PyTorch installed, we can now install Lightning using pip:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了 PyTorch 后，我们现在可以使用 pip 安装 Lightning：
- en: '`pip install lightning`'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip install lightning`'
- en: 'Let''s confirm Lightning is set up correctly:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们确认 Lightning 是否正确设置：
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This should print out the version number, such as `0.6.0`.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会打印出版本号，如 `0.6.0`。
- en: Now we're ready to start building deep learning models.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们准备开始构建深度学习模型了。
- en: 'Step 2: Building a Model with PyTorch'
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 2 步：使用 PyTorch 构建模型
- en: PyTorch uses tensors, similar to NumPy arrays, as its core data structure. Tensors
    can be operated on by GPUs and support automatic differentiation for building
    neural networks.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: PyTorch 使用张量，类似于 NumPy 数组，作为其核心数据结构。张量可以由 GPU 操作，并支持自动微分以构建神经网络。
- en: 'Let''s define a simple neural network for image classification:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们定义一个用于图像分类的简单神经网络：
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This defines a convolutional neural network with two convolutional layers and
    three fully connected layers for classifying 10 classes. The `forward()` method
    defines how data passes through the network.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这定义了一个具有两个卷积层和三个全连接层的卷积神经网络，用于分类 10 个类别。`forward()` 方法定义了数据如何通过网络传递。
- en: We can now train this model on sample data using Lightning.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以使用 Lightning 在样本数据上训练这个模型。
- en: 'Step 3: Training the Model with Lightning'
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 3 步：使用 Lightning 训练模型
- en: 'Lightning provides a `LightningModule` class to encapsulate PyTorch model code
    and the training loop boilerplate. Let''s convert our model:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Lightning 提供了一个 `LightningModule` 类来封装 PyTorch 模型代码和训练循环样板代码。让我们转换我们的模型：
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `training_step()` defines the forward pass and loss calculation. We configure
    an Adam optimizer with learning rate 0.02.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`training_step()` 定义了前向传递和损失计算。我们配置了一个学习率为 0.02 的 Adam 优化器。'
- en: 'Now we can train this model easily:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以轻松地训练这个模型：
- en: '[PRE4]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The Trainer handles the epoch looping, validation, logging automatically. We
    can evaluate the model on test data (more on [data modules here](https://lightning.ai/docs/pytorch/stable/data/datamodule.html)):'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Trainer 处理时期循环、验证、日志记录自动化。我们可以在测试数据上评估模型（更多关于[数据模块的信息](https://lightning.ai/docs/pytorch/stable/data/datamodule.html)）：
- en: '[PRE5]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'For comparison, here is the network and training loop code in pure PyTorch:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 作为对比，这里是纯 PyTorch 中的网络和训练循环代码：
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Lightning makes PyTorch model development incredibly fast and intuitive.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Lightning 使得 PyTorch 模型开发变得非常快速和直观。
- en: 'Step 4: Advanced Topics'
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 4 步：高级主题
- en: Lightning provides many built-in capabilities for hyperparameter tuning, preventing
    overfitting, and model management.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Lightning 提供了许多内置功能，用于超参数调优、防止过拟合和模型管理。
- en: Hyperparameter Tuning
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 超参数调优
- en: 'We can optimize hyperparameters like learning rate using Lightning''s `tuner`
    module:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 Lightning 的` tuner`模块来优化超参数，例如学习率：
- en: '[PRE7]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This performs a Bayesian search over the hyperparameter space.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这在超参数空间上执行贝叶斯搜索。
- en: Handling Overfitting
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理过拟合
- en: 'Strategies like dropout layers and early stopping can reduce overfitting:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 像 dropout 层和早停等策略可以减少过拟合：
- en: '[PRE8]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Model Saving and Loading
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型保存和加载
- en: 'Lightning makes it simple to save and reload models:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Lightning 使得保存和重新加载模型变得简单：
- en: '[PRE9]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This preserves the full model state and hyperparameters.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这保留了完整的模型状态和超参数。
- en: 'Step 5: Comparing PyTorch & PyTorch Lightning'
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 5 步：比较 PyTorch 和 PyTorch Lightning
- en: Both PyTorch and PyTorch Lightning are powerful libraries for deep learning,
    but they serve different purposes and offer unique features. While PyTorch provides
    the foundational blocks for designing and implementing deep learning models, PyTorch
    Lightning aims to simplify the repetitive parts of model training, thereby accelerating
    the development process.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: PyTorch 和 PyTorch Lightning 都是强大的深度学习库，但它们服务于不同的目的并提供独特的功能。虽然 PyTorch 提供了设计和实现深度学习模型的基础构件，但
    PyTorch Lightning 旨在简化模型训练的重复部分，从而加速开发过程。
- en: Key Differences
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关键区别
- en: 'Here is a summary of the key differences between PyTorch and PyTorch Lightning:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 PyTorch 和 PyTorch Lightning 之间关键差异的总结：
- en: '| Feature | PyTorch | PyTorch Lightning |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| 特征 | PyTorch | PyTorch Lightning |'
- en: '| --- | --- | --- |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Training Loop | Manually coded | Automated |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| 训练循环 | 手动编写 | 自动化 |'
- en: '| Boilerplate Code | Required | Minimal |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 样板代码 | 需要 | 最小 |'
- en: '| Hyperparameter Tuning | Manual setup | Built-in support |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| 超参数调优 | 手动设置 | 内置支持 |'
- en: '| Distributed Training | Available but manual setup | Automated |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 分布式训练 | 可用但需要手动设置 | 自动化 |'
- en: '| Code Organization | No specific structure | Encourages modular design |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| 代码组织 | 无特定结构 | 鼓励模块化设计 |'
- en: '| Model Saving and Loading | Custom implementation needed | Simplified with
    checkpoints |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| 模型保存和加载 | 需要自定义实现 | 使用检查点简化 |'
- en: '| Debugging | Advanced but manual | Easier with built-in logs |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| 调试 | 高级但手动 | 使用内置日志更容易 |'
- en: '| GPU/TPU Support | Available | Easier setup |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| GPU/TPU 支持 | 可用 | 更容易设置 |'
- en: Flexibility vs Convenience
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 灵活性与便利性
- en: PyTorch is renowned for its flexibility, particularly with dynamic computation
    graphs, which is excellent for research and experimentation. However, this flexibility
    often comes at the cost of writing more boilerplate code, especially for the training
    loop, distributed training, and hyperparameter tuning. On the other hand, PyTorch
    Lightning abstracts away much of this boilerplate while still allowing full customization
    and access to the lower-level PyTorch APIs when needed.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: PyTorch 以其灵活性而闻名，特别是动态计算图，这对于研究和实验非常出色。然而，这种灵活性通常需要编写更多的模板代码，特别是对于训练循环、分布式训练和超参数调优。另一方面，PyTorch
    Lightning 抽象化了这些模板代码，同时在需要时仍然允许完全自定义和访问低级 PyTorch API。
- en: Speed of Development
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开发速度
- en: If you're starting a project from scratch or conducting complex experiments,
    PyTorch Lightning can save you a lot of time. The LightningModule class streamlines
    the training process, automates logging, and even simplifies distributed training.
    This allows you to focus more on your model architecture and less on the repetitive
    aspects of model training and validation.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从零开始一个项目或进行复杂的实验，PyTorch Lightning 可以节省你大量的时间。LightningModule 类简化了训练过程，自动化日志记录，甚至简化了分布式训练。这使你可以更多地专注于模型架构，而不是模型训练和验证中的重复工作。
- en: The Verdict
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 判决结果
- en: In summary, PyTorch offers more granular control and is excellent for researchers
    who need that level of detail. PyTorch Lightning, however, is designed to make
    the research-to-production cycle smoother and faster, without taking away the
    power and flexibility that PyTorch provides. Whether you choose PyTorch or PyTorch
    Lightning will depend on your specific needs, but the good news is that you can
    easily switch between the two or even use them in tandem for different parts of
    your project.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，PyTorch 提供了更细粒度的控制，适合需要这种详细级别的研究人员。然而，PyTorch Lightning 的设计旨在使研究到生产的周期更顺畅、更快速，同时不剥夺
    PyTorch 提供的力量和灵活性。你选择 PyTorch 还是 PyTorch Lightning 将取决于你的具体需求，但好消息是你可以轻松地在两者之间切换，甚至在项目的不同部分同时使用它们。
- en: Moving Forward
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 展望未来
- en: 'In this article, we covered the basics of using PyTorch and PyTorch Lightning
    for deep learning:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们涵盖了使用 PyTorch 和 PyTorch Lightning 进行深度学习的基础知识：
- en: PyTorch provides a powerful and flexible framework for building neural networks
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyTorch 提供了一个强大而灵活的框架，用于构建神经网络
- en: PyTorch Lightning simplifies training and model development workflows
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyTorch Lightning 简化了训练和模型开发工作流程
- en: Key features like hyperparameters optimization and model management accelerate
    deep learning research
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关键功能如超参数优化和模型管理加速了深度学习研究
- en: With these foundations you can start building and training advanced models like
    CNNs, RNNs, GANs and more. The active open source community also offers Lightning
    support and additions like Bolt, a component and optimization library.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些基础，你可以开始构建和训练高级模型，如 CNN、RNN、GAN 等。活跃的开源社区还提供了 Lightning 支持和 Bolt 等组件及优化库。
- en: Happy deep learning!
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 祝深度学习愉快！
- en: '[**Matthew Mayo**](https://www.linkedin.com/in/mattmayo13/) ([**@mattmayo13**](https://twitter.com/mattmayo13))
    holds a Master''s degree in computer science and a graduate diploma in data mining.
    As Editor-in-Chief of KDnuggets, Matthew aims to make complex data science concepts
    accessible. His professional interests include natural language processing, machine
    learning algorithms, and exploring emerging AI. He is driven by a mission to democratize
    knowledge in the data science community. Matthew has been coding since he was
    6 years old.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '[**马修·梅奥**](https://www.linkedin.com/in/mattmayo13/) ([**@mattmayo13**](https://twitter.com/mattmayo13))
    拥有计算机科学硕士学位和数据挖掘研究生文凭。作为 KDnuggets 的主编，马修的目标是让复杂的数据科学概念变得易于理解。他的专业兴趣包括自然语言处理、机器学习算法以及探索新兴的人工智能。他致力于在数据科学社区中普及知识。马修从6岁起就开始编程。'
- en: '* * *'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业道路。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织在 IT 领域'
- en: '* * *'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关话题
- en: '[Getting Started with PyTorch Lightning](https://www.kdnuggets.com/2022/12/getting-started-pytorch-lightning.html)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[入门 PyTorch Lightning](https://www.kdnuggets.com/2022/12/getting-started-pytorch-lightning.html)'
- en: '[Getting Started with Python Data Structures in 5 Steps](https://www.kdnuggets.com/5-steps-getting-started-python-data-structures)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5 步骤入门 Python 数据结构](https://www.kdnuggets.com/5-steps-getting-started-python-data-structures)'
- en: '[Getting Started with SQL in 5 Steps](https://www.kdnuggets.com/5-steps-getting-started-with-sql)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5 步骤入门 SQL](https://www.kdnuggets.com/5-steps-getting-started-with-sql)'
- en: '[Getting Started with Scikit-learn in 5 Steps](https://www.kdnuggets.com/5-steps-getting-started-scikit-learn)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5 步骤入门 Scikit-learn](https://www.kdnuggets.com/5-steps-getting-started-scikit-learn)'
- en: '[Getting Started with Google Cloud Platform in 5 Steps](https://www.kdnuggets.com/5-steps-google-cloud-platform)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5 步骤入门 Google Cloud Platform](https://www.kdnuggets.com/5-steps-google-cloud-platform)'
- en: '[5 Simple Steps Series: Master Python, SQL, Scikit-learn, PyTorch &…](https://www.kdnuggets.com/5-simple-steps-series-master-python-sql-scikit-learn-pytorch-google-cloud)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5 个简单步骤系列：掌握 Python、SQL、Scikit-learn、PyTorch 等](https://www.kdnuggets.com/5-simple-steps-series-master-python-sql-scikit-learn-pytorch-google-cloud)'
