- en: 'Text Preprocessing in Python: Steps, Tools, and Examples'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2018/11/text-preprocessing-python.html/2](https://www.kdnuggets.com/2018/11/text-preprocessing-python.html/2)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Example 12\. Named-entity recognition using NLTK:**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Code:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Coreference resolution (anaphora resolution)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Pronouns and other referring expressions should be connected to the right individuals.
    Coreference resolution finds the mentions in a text that refer to the same real-world
    entity. For example, in the sentence, “Andrew said he would buy a car” the pronoun
    “he” refers to the same person, namely to “Andrew”. Coreference resolution tools: [Stanford
    CoreNLP](https://stanfordnlp.github.io/CoreNLP/coref.html), [spaCy](https://spacy.io/), [Open
    Calais](http://www.opencalais.com/), [Apache OpenNLP](https://opennlp.apache.org/docs/1.8.4/manual/opennlp.html#tools.coref) are
    described in the [“Coreference resolution” sheet of the table.](https://docs.google.com/spreadsheets/d/1-9rMhfcmxFv2V2Q5ZWn1FfLDZZYsuwb1eoSp9CiEEOg/edit?usp=sharing)
  prefs: []
  type: TYPE_NORMAL
- en: '| **Name, Developer, Initial release** | **Features** | **Programming languages**
    | **License** |'
  prefs: []
  type: TYPE_TB
- en: '| [**Beautiful Anaphora Resolution Toolkit (BART)**, Massimo Poesio, Simone
    Ponzetto, Yannick Versley, Johns Hopkins Summer Workshop, 2007](http://www.bart-coref.org/)
    | Incorporates a variety of machine learning approaches | REST-based web service
    | [Apache license v2.0](https://www.apache.org/licenses/LICENSE-2.0) |'
  prefs: []
  type: TYPE_TB
- en: '| Uses several machine learning toolkits |'
  prefs: []
  type: TYPE_TB
- en: '| [Exports the result as inline XML [36]](http://www.bart-coref.org/index.html)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [**JavaRAP**, Long Qiu, 2004](https://wing.comp.nus.edu.sg/~qiu/NLPTools/JavaRAP.html)
    | Resolves third person pronouns, lexical anaphors, Identifies pleonastic pronouns
    | Java | - |'
  prefs: []
  type: TYPE_TB
- en: '| Output format: anaphor - antecedent pairs; text with in-place substitutions
    |'
  prefs: []
  type: TYPE_TB
- en: '| Accuracy: 57.9% (MUC6) |'
  prefs: []
  type: TYPE_TB
- en: '| [around 1,500 words per second [37]](https://wing.comp.nus.edu.sg/~qiu/NLPTools/JavaRAP.html)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [**A General Tool for Anaphora Resolution - GuiTAR**, University of Essex,
    2007](http://cswww.essex.ac.uk/Research/nle/GuiTAR/) | Takes as an input a MAS-XML
    compliant file and adds new markup holding anaphoric information (elements). |
    Java | [GPL License](http://www.gnu.org/licenses/gpl.txt) |'
  prefs: []
  type: TYPE_TB
- en: '| [Evaluation module is also included [38]](http://cswww.essex.ac.uk/Research/nle/GuiTAR/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [**Reconcile**, Cornell University, The University of Utah, Lawrence Livermore
    National Labs, 2009](https://www.cs.utah.edu/nlp/reconcile/) | Runs on common
    data sets or unlabeled texts | Java | [GPL License](http://www.gnu.org/licenses/gpl.txt)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Utilizes supervised machine learning classifiers from the Weka toolkit, the
    Berkeley Parser and Stanford Named Entity Recognition system. |'
  prefs: []
  type: TYPE_TB
- en: '| MUC Score (MUC-6): recall 67.23; precision 65.54; F-measure 66.38 |'
  prefs: []
  type: TYPE_TB
- en: '| [[39]](https://www.cs.utah.edu/nlp/reconcile/) |'
  prefs: []
  type: TYPE_TB
- en: '| [**ARKref**, Brendan O''Connor, Michael Heilman, 2009](http://www.cs.cmu.edu/~ark/ARKref/)
    | Deterministic, rule-based system | Java | [GPL, MIT](https://github.com/brendano/arkref/blob/master/LICENSE.txt)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Uses syntactic information from a constituent parser, and semantic information
    from an entity recognition component |'
  prefs: []
  type: TYPE_TB
- en: '| [Precision: 0.657617, recall: 0.552433, f1: 0.600454 [40]](https://github.com/brendano/arkref)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [**Illinois Coreference Package**, Dan Roth, Eric Bengtson, 2008](https://cogcomp.org/page/software_view/Coref)
    | Coreference related features: | Java | - |'
  prefs: []
  type: TYPE_TB
- en: '| Gender and number match, WordNet relations including synonym, hypernym, antonym,
    and ACE entity types (person, organization, and geopolitical entity) |'
  prefs: []
  type: TYPE_TB
- en: '| [Features anaphoricity classifier [41]](https://cogcomp.org/page/software_view/Coref)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [**Neural coref**, Hugging Face, 2017](https://github.com/huggingface/neuralcoref)
    | Uses neural nets and spaCy | Python | [MIT License](https://github.com/huggingface/neuralcoref/blob/master/LICENCE.txt)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [Adds various speakers in the conversation when computing the features and
    resolving the coreferences [42]](https://medium.com/huggingface/state-of-the-art-neural-coreference-resolution-for-chatbots-3302365dcf30)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [Online demo](https://huggingface.co/coref/) |'
  prefs: []
  type: TYPE_TB
- en: '| [**coreference resolution toolkit (cort)**, Sebastian Martschat, Thierry
    Goeckel, Patrick Claus](https://github.com/smartschat/cort) | Coreference resolution
    component | Python | [MIT License](https://github.com/smartschat/cort/blob/master/LICENSE)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Error analysis component |'
  prefs: []
  type: TYPE_TB
- en: '| Framework is based on latent variables allowing user to rapidly devise approaches
    to coreference resolution |'
  prefs: []
  type: TYPE_TB
- en: '| [Analyzes and visualizes errors made by coreference resolution systems [43]](https://github.com/smartschat/cort)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [**CherryPicker**, Altaf Rahman, Vincent Ng, University of Texas at Dallas,
    2009](http://www.hlt.utdallas.edu/~altaf/cherrypicker/) | Runs on Unix/Linux |
    - | Free for educational and research activities; may not be used for commercial
    or for-profit purposes |'
  prefs: []
  type: TYPE_TB
- en: '| [Cluster-ranking coreference model [44]](http://www.hlt.utdallas.edu/~altaf/cherrypicker/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [**FreeLing**, TALP Research Center, Universitat Politècnica de Catalunya](http://nlp.lsi.upc.edu/freeling/)
    | Provides language analysis functionalities | C++ | [Affero GNU General Public
    License](http://www.gnu.org/licenses/agpl.html) |'
  prefs: []
  type: TYPE_TB
- en: '| Supports a variety of languages |'
  prefs: []
  type: TYPE_TB
- en: '| Provides a command-line front-end |'
  prefs: []
  type: TYPE_TB
- en: '| [output formats :XML, JSON, CoNLL [45]](http://nlp.lsi.upc.edu/freeling/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [**eXternally configurable REference and Non Named Entity Recognizer (xrenner)**,
    Zeldes, Amir and Zhang, Shuo, Department of Linguistics at Georgetown University,
    2016](https://corpling.uis.georgetown.edu/xrenner/) | Highly configurable, language
    independent coreferencer | Python | [Apache License, Version 2.0](https://github.com/amir-zeldes/xrenner/blob/master/LICENSE.txt)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [Pluggable classifiers – models can work 100% rule-based or use classifiers
    to rank rule outputs [46]](https://corpling.uis.georgetown.edu/xrenner/) |'
  prefs: []
  type: TYPE_TB
- en: '|  |'
  prefs: []
  type: TYPE_TB
- en: '**Coreference resolution tools**'
  prefs: []
  type: TYPE_NORMAL
- en: An example of coreference resolution using xrenner can be found [here](https://corpling.uis.georgetown.edu/xrenner/doc/using.html#importing-as-a-module).
  prefs: []
  type: TYPE_NORMAL
- en: Collocation extraction
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Collocations are word combinations occurring together more often than would
    be expected by chance. Collocation examples are “break the rules,” “free time,”
    “draw a conclusion,” “keep in mind,” “get ready,” and so on.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Name, Developer, Initial release** | **Features** | **Programming languages**
    | **License** |'
  prefs: []
  type: TYPE_TB
- en: '| [**TermeX**, Text Analysis and Knowledge Engineering Lab, University of Zagreb,
    2009](http://takelab.fer.hr/termex_s/) | UTF-8 formatted input text | [Front end
    GUI](http://ktlab.fer.hr/termex/data/TermexHelp_e.pdf) | Freely available for
    research purposes upon request. |'
  prefs: []
  type: TYPE_TB
- en: '| uses 14 association measures |'
  prefs: []
  type: TYPE_TB
- en: '| Processes of n-grams up to length four |'
  prefs: []
  type: TYPE_TB
- en: '| Hand selection of candidate n-grams for terminology lexica |'
  prefs: []
  type: TYPE_TB
- en: '| Windows and Linux support |'
  prefs: []
  type: TYPE_TB
- en: '| Fast and memory efficient processing of large corpora |'
  prefs: []
  type: TYPE_TB
- en: '| [ [47]](http://takelab.fer.hr/termex_s/) |'
  prefs: []
  type: TYPE_TB
- en: '| [**Collocate**, Athelstan](http://www.athel.com/) | Uses statistical analyses
    (t-score, log likelihood, Mutual Information) and frequency information to present
    a list of candidate collocations | Application | [Educational Price. Single user:
    $45](http://www.michaelbarlow.com/) |'
  prefs: []
  type: TYPE_TB
- en: '| Searches for a word (phrase) within a set span (e.g. 4 words). | [Site license
    (2-year, 15 users) $395](http://www.michaelbarlow.com/) |'
  prefs: []
  type: TYPE_TB
- en: '| Produces an n-gram list |  |'
  prefs: []
  type: TYPE_TB
- en: '| [Extracts collocations using thresholds and either mutual information [48]](https://www.athel.com/colloc.html)
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| [**CollTerm**, Faculty of Humanities and Social Sciences at University of
    Zagreb; Research Institute for Artificial Intelligence at Romanian Academy](https://github.com/accurat-toolkit/CollTerm)
    | Results based on five different co-occurrence measures for multiword units (i.e.
    collocations) or distributional differences from large representative corpus by
    application of the TF-IDF measurement on single word units | Python | [ApacheLicense_2.0](http://www.apache.org/licenses/LICENSE-2.0.html)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [Language independent [49]](http://linghub.lider-project.eu/metashare/a89c02f4663d11e28a985ef2e4e6c59e76428bf02e394229a70428f25a839f75)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [**Collocation Extractor**, Dan Ștefănescu, 2012](http://metashare.ilsp.gr:8080/repository/browse/collocation-extractor/7a2432acdc7311e5aa0b00237df3e35819ec25a2cee244cd8782b24eddcad3c8/)
    | Collocation words features in this approach: | [Application](http://ws.racai.ro:9191/narratives/batch2/Colloc.pdf)
    | Restrictions: Inform Licensor, No Redistribution |'
  prefs: []
  type: TYPE_TB
- en: '| – the distance between them is relatively constant; | User Nature: Academic,
    Commercial |'
  prefs: []
  type: TYPE_TB
- en: '| – they appear together more often than expected by chance (Log-Likelihood)
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| Language independent |  |'
  prefs: []
  type: TYPE_TB
- en: '| [output annotation format: Text output with one collocation per line and
    annotations separated by tab [50]](http://ws.racai.ro:9191/narratives/batch2/Colloc.pdf)
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| [**ICE: Idiom and Collocation Extractor**, Verizon Labs, Computer Science
    Dept. University of Houston, 2017](https://github.com/shahryarabaki/ICE) | Idioms
     and collocations extraction | Python | [Apache License 2.0](https://github.com/shahryarabaki/ICE/blob/master/LICENSE)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Two user-friendly formats |'
  prefs: []
  type: TYPE_TB
- en: '| [for identifying collocations offline and online Dictionary search, web search
    and substitution, and web search independence are used [51]](http://www.aclweb.org/anthology/E17-3027)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [**Text::NSP**, University of Minnesota, Carnegie Mellon University, University
    of Pittsburgh,  2000](https://metacpan.org/pod/Text::NSP) | Extract collocations
    and N-grams from text | Perl | [GNU General Public License](http://www.gnu.org/licenses/gpl.txt)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Text::NSP::Measures module evaluates whether the co-occurrence of the words
    in an N-gram is purely by chance or statistically significant. |'
  prefs: []
  type: TYPE_TB
- en: '| [[52]](https://metacpan.org/pod/Text::NSP) |'
  prefs: []
  type: TYPE_TB
- en: '**Collocation extraction tools**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Example 13\. Collocation extraction using ICE **[**[51]**](http://www.aclweb.org/anthology/E17-3027)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Code:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Relationship extraction**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Relationship extraction allows obtaining structured information from unstructured
    sources such as raw text. Strictly stated, it is identifying relations (e.g.,
    acquisition, spouse, employment) among named entities (e.g., people, organizations,
    locations). For example, from the sentence “Mark and Emily married yesterday,”
    we can extract the information that Mark is Emily’s husband.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Name, Developer, Initial release** | **Features** | **Programming languages**
    | **License** |'
  prefs: []
  type: TYPE_TB
- en: '| [**ReVerb**, University of Washington''s Turing Center](http://reverb.cs.washington.edu/)
    | Automatically identifies and extracts binary relationships from English sentences
    | Java | [ReVerb Software License Agreement](http://reverb.cs.washington.edu/LICENSE.txt)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Designed for Web-scale information extraction where the target relations
    cannot be specified in advance and speed is important. |'
  prefs: []
  type: TYPE_TB
- en: '| Inputs raw text |'
  prefs: []
  type: TYPE_TB
- en: '| [Outputs (argument1, relation phrase, argument2)  triples [53]](https://github.com/knowitall/reverb)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [**EXEMPLAR**, University of Alberta, 2013](https://github.com/U-Alberta/exemplar)
    | Able to identify instances of any relation described in the text | Java | [GNU
    General Public License v3.0](https://github.com/U-Alberta/exemplar/blob/master/LICENSE)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Extracts relations with two or more arguments |'
  prefs: []
  type: TYPE_TB
- en: '| [Role of an argument can be SUBJ (subject), DOBJ (direct object) and POBJ
    (prepositional object) [54]](https://github.com/U-Alberta/exemplar) |'
  prefs: []
  type: TYPE_TB
- en: '| [**Toolkit for Exploring Text for Relation Extraction (TETRE)**, Alisson
    Oldoni, 2017](https://github.com/aoldoni/tetre) | Accepts raw text as an input
    | Command line tool | [MIT License](https://github.com/aoldoni/tetre/blob/master/LICENSE)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Optimized for the task of information extraction in a corpus composed of
    academic papers |'
  prefs: []
  type: TYPE_TB
- en: '| Does data transformation, parsing, wraps tasks of third-party binaries |'
  prefs: []
  type: TYPE_TB
- en: '| [Outputs the relations in HTML and JSON [55]](https://github.com/aoldoni/tetre)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [**TextRazor**, TextRazor, 2011](https://www.textrazor.com/) | Uses state-of-the-art
    NLP and AI techniques | Python | [Pricing](https://www.textrazor.com/plans) |'
  prefs: []
  type: TYPE_TB
- en: '| Processes thousands of words per second per core | PHP |'
  prefs: []
  type: TYPE_TB
- en: '| [Allows user to add product names, people, companies, custom classification
    rules and advanced linguistic patterns [56]](https://www.textrazor.com/technology)
    | Java |'
  prefs: []
  type: TYPE_TB
- en: '|  | REST API |'
  prefs: []
  type: TYPE_TB
- en: '| [**Information Extraction in Python (IEPY)**, Machinalis, 2014](https://github.com/machinalis/iepy)
    | Tries to predict relations using information provided by the user | Python |
    [BSD 3-Clause "New" or "Revised" License](https://github.com/machinalis/iepy/blob/develop/LICENSE)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Aimed to perform Information Extraction (IE) on a large dataset |'
  prefs: []
  type: TYPE_TB
- en: '| created for scientific experiments with new IE algorithms |'
  prefs: []
  type: TYPE_TB
- en: '| [Configured with convenient defaults [57]](https://github.com/machinalis/iepy)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [**Watson Natural Language Understanding**, IBM](https://www.ibm.com/watson/developercloud/natural-language-understanding/api/v1/#relations)
    | Recognizes when two entities are related, and identify the type of relation
    | Curl | [Pricing](https://www.ibm.com/cloud/watson-natural-language-understanding/pricing)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [Supported languages: Arabic, English, Korean, Spanish [58]](https://www.ibm.com/watson/developercloud/natural-language-understanding/api/v1/#relations)
    | Node |'
  prefs: []
  type: TYPE_TB
- en: '|  | Java |'
  prefs: []
  type: TYPE_TB
- en: '|  | Python |'
  prefs: []
  type: TYPE_TB
- en: '| [**MIT Information Extraction (MITIE)**, E. Davis King, 2009](https://github.com/mit-nlp/MITIE)
    | Binary relation detection | C, C++, Java, R, Python | Boost Software License
    |'
  prefs: []
  type: TYPE_TB
- en: '| tools for training custom extractors and relation detectors |'
  prefs: []
  type: TYPE_TB
- en: '| Uses of distributional word embeddings and structural Support Vector Machines
    |'
  prefs: []
  type: TYPE_TB
- en: '| Offers several pre-trained models |'
  prefs: []
  type: TYPE_TB
- en: '| [Supports English, Spanish, and German [59]](https://github.com/mit-nlp/MITIE)
    |'
  prefs: []
  type: TYPE_TB
- en: An example of relationship extraction using [NLTK can be found here](http://www.nltk.org/howto/relextract.html).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this post, we talked about text preprocessing and described its main steps
    including normalization, tokenization, stemming, lemmatization, chunking, part
    of speech tagging, named-entity recognition, coreference resolution, collocation
    extraction, and relationship extraction. We also discussed text preprocessing
    tools and examples. A [comparative table](https://docs.google.com/spreadsheets/d/1-9rMhfcmxFv2V2Q5ZWn1FfLDZZYsuwb1eoSp9CiEEOg/edit?usp=sharing) was
    created.
  prefs: []
  type: TYPE_NORMAL
- en: After the text preprocessing is done, the result may be used for more complicated
    NLP tasks, for example, machine translation or natural language generation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Resources:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[http://www.nltk.org/index.html](http://www.nltk.org/index.html)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[http://textblob.readthedocs.io/en/dev/](http://textblob.readthedocs.io/en/dev/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://spacy.io/usage/facts-figures](https://spacy.io/usage/facts-figures)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://radimrehurek.com/gensim/index.html](https://radimrehurek.com/gensim/index.html)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://opennlp.apache.org/](https://opennlp.apache.org/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[http://opennmt.net/](http://opennmt.net/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://gate.ac.uk/](https://gate.ac.uk/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://uima.apache.org/](https://uima.apache.org/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://www.clips.uantwerpen.be/pages/MBSP#tokenizer](https://www.clips.uantwerpen.be/pages/MBSP#tokenizer)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://rapidminer.com/](https://rapidminer.com/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[http://mallet.cs.umass.edu/](http://mallet.cs.umass.edu/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://www.clips.uantwerpen.be/pages/pattern](https://www.clips.uantwerpen.be/pages/pattern)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://nlp.stanford.edu/software/tokenizer.html#About](https://nlp.stanford.edu/software/tokenizer.html#About)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://tartarus.org/martin/PorterStemmer/](https://tartarus.org/martin/PorterStemmer/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[http://www.nltk.org/api/nltk.stem.html](http://www.nltk.org/api/nltk.stem.html)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://snowballstem.org/](https://snowballstem.org/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://pypi.python.org/pypi/PyStemmer/1.0.1](https://pypi.python.org/pypi/PyStemmer/1.0.1)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://www.elastic.co/guide/en/elasticsearch/guide/current/hunspell.html](https://www.elastic.co/guide/en/elasticsearch/guide/current/hunspell.html)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://lucene.apache.org/core/](https://lucene.apache.org/core/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://dkpro.github.io/dkpro-core/](https://dkpro.github.io/dkpro-core/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[http://ucrel.lancs.ac.uk/claws/](http://ucrel.lancs.ac.uk/claws/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[http://www.cis.uni-muenchen.de/~schmid/tools/TreeTagger/](http://www.cis.uni-muenchen.de/~schmid/tools/TreeTagger/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Shallow_parsing](https://en.wikipedia.org/wiki/Shallow_parsing)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://cogcomp.org/page/software_view/Chunker](https://cogcomp.org/page/software_view/Chunker)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://github.com/dstl/baleen](https://github.com/dstl/baleen)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://github.com/CogComp/cogcomp-nlp/tree/master/ner](https://github.com/CogComp/cogcomp-nlp/tree/master/ner)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://github.com/lasigeBioTM/MER](https://github.com/lasigeBioTM/MER)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://blog.paralleldots.com/product/dig-relevant-text-elements-entity-extraction-api/](https://blog.paralleldots.com/product/dig-relevant-text-elements-entity-extraction-api/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[http://www.opencalais.com/about-open-calais/](http://www.opencalais.com/about-open-calais/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[http://alias-i.com/lingpipe/index.html](http://alias-i.com/lingpipe/index.html)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://github.com/glample/tagger](https://github.com/glample/tagger)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[http://minorthird.sourceforge.net/old/doc/](http://minorthird.sourceforge.net/old/doc/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://www.ibm.com/support/knowledgecenter/en/SS8NLW_10.0.0/com.ibm.watson.wex.aac.doc/aac-tasystemt.html](https://www.ibm.com/support/knowledgecenter/en/SS8NLW_10.0.0/com.ibm.watson.wex.aac.doc/aac-tasystemt.html)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://www.poolparty.biz/](https://www.poolparty.biz/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://www.basistech.com/text-analytics/rosette/entity-extractor/](https://www.basistech.com/text-analytics/rosette/entity-extractor/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[http://www.bart-coref.org/index.html](http://www.bart-coref.org/index.html)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://wing.comp.nus.edu.sg/~qiu/NLPTools/JavaRAP.html](https://wing.comp.nus.edu.sg/~qiu/NLPTools/JavaRAP.html)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[http://cswww.essex.ac.uk/Research/nle/GuiTAR/](http://cswww.essex.ac.uk/Research/nle/GuiTAR/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://www.cs.utah.edu/nlp/reconcile/](https://www.cs.utah.edu/nlp/reconcile/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://github.com/brendano/arkref](https://github.com/brendano/arkref)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://cogcomp.org/page/software_view/Coref](https://cogcomp.org/page/software_view/Coref)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://medium.com/huggingface/state-of-the-art-neural-coreference-resolution-for-chatbots-3302365dcf30](https://medium.com/huggingface/state-of-the-art-neural-coreference-resolution-for-chatbots-3302365dcf30)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://github.com/smartschat/cort](https://github.com/smartschat/cort)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[http://www.hlt.utdallas.edu/~altaf/cherrypicker/](http://www.hlt.utdallas.edu/~altaf/cherrypicker/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[http://nlp.lsi.upc.edu/freeling/](http://nlp.lsi.upc.edu/freeling/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://corpling.uis.georgetown.edu/xrenner/#](https://corpling.uis.georgetown.edu/xrenner/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[http://takelab.fer.hr/termex_s/](http://takelab.fer.hr/termex_s/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://www.athel.com/colloc.html](https://www.athel.com/colloc.html)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[http://linghub.lider-project.eu/metashare/a89c02f4663d11e28a985ef2e4e6c59e76428bf02e394229a70428f25a839f75](http://linghub.lider-project.eu/metashare/a89c02f4663d11e28a985ef2e4e6c59e76428bf02e394229a70428f25a839f75)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[http://ws.racai.ro:9191/narratives/batch2/Colloc.pdf](http://ws.racai.ro:9191/narratives/batch2/Colloc.pdf)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[http://www.aclweb.org/anthology/E17-3027](http://www.aclweb.org/anthology/E17-3027)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://metacpan.org/pod/Text::NSP](https://metacpan.org/pod/Text::NSP)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://github.com/knowitall/reverb](https://github.com/knowitall/reverb)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://github.com/U-Alberta/exemplar](https://github.com/U-Alberta/exemplar)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://github.com/aoldoni/tetre](https://github.com/aoldoni/tetre)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://www.textrazor.com/technology](https://www.textrazor.com/technology)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://github.com/machinalis/iepy](https://github.com/machinalis/iepy)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://www.ibm.com/watson/developercloud/natural-language-understanding/api/v1/#relations](https://www.ibm.com/watson/developercloud/natural-language-understanding/api/v1/#relations)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://github.com/mit-nlp/MITIE](https://github.com/mit-nlp/MITIE)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Bio**: [Data Monsters](https://datamonsters.com/) help corporations and funded
    startups research, design, and develop real-time intelligent software to improve
    their business with data technologies.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://medium.com/@datamonsters/text-preprocessing-in-python-steps-tools-and-examples-bf025f872908).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Data Representation for Natural Language Processing Tasks](https://www.kdnuggets.com/2018/11/data-representation-natural-language-processing.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Self-Service Data Prep Tools vs Enterprise-Level Solutions? 6 Lessons Learned](https://www.kdnuggets.com/2018/08/self-service-data-prep-tools-6-lessons-learned.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Active Learning](https://www.kdnuggets.com/2018/10/introduction-active-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Cleaning and Preprocessing Text Data in Pandas for NLP Tasks](https://www.kdnuggets.com/cleaning-and-preprocessing-text-data-in-pandas-for-nlp-tasks)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering Data Cleaning and Preprocessing Techniques](https://www.kdnuggets.com/2023/08/7-steps-mastering-data-cleaning-preprocessing-techniques.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SQL LIKE Operator Examples](https://www.kdnuggets.com/2022/09/sql-like-operator-examples.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Ensemble Learning with Examples](https://www.kdnuggets.com/2022/10/ensemble-learning-examples.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Picking Examples to Understand Machine Learning Model](https://www.kdnuggets.com/2022/11/picking-examples-understand-machine-learning-model.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Easy Guide To Data Preprocessing In Python](https://www.kdnuggets.com/2020/07/easy-guide-data-preprocessing-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
