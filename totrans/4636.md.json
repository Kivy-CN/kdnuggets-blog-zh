["```py\n\nimport time\n\nstart_time = time.time()\n\nnum_multiplies = 5000000\ndata = range(num_multiplies)\nnumber = 1\n\nfor i in data:\n    number *= 1.0000001\n\nend_time = time.time()\n\nprint(number)\nprint(\"Run time = {}\".format(end_time - start_time))\n\n```", "```py\n\nimport time\nimport numpy as np\n\nstart_time = time.time()\n\ndata = np.ones(shape=(1000, 1000), dtype=np.float)\n\nfor i in range(1000):\n    for j in range(1000):\n        data[i][j] *= 1.0000001\n        data[i][j] *= 1.0000001\n        data[i][j] *= 1.0000001\n        data[i][j] *= 1.0000001\n        data[i][j] *= 1.0000001\n\nend_time = time.time()\n\nprint(\"Run time = {}\".format(end_time - start_time))\n\n```", "```py\n\nimport time\nimport numpy as np\n\nstart_time = time.time()\n\nnum_multiplies = 1000000000\ndata = range(num_multiplies)\nnumber = 1\n\nnumber *= np.power(1.0000001, num_multiplies)\n\nend_time = time.time()\n\nprint(number)\nprint(\"Run time = {}\".format(end_time - start_time))\n\n```", "```py\n\nimport time\nimport numpy as np\n\nstart_time = time.time()\n\ndata = np.ones(shape=(1000, 1000), dtype=np.float)\n\nfor i in range(5):\n    data *= 1.0000001\n\nend_time = time.time()\n\nprint(\"Run time = {}\".format(end_time - start_time))\n\n```"]