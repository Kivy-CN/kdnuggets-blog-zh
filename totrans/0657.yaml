- en: Introduction to Image Segmentation with K-Means clustering
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用K-Means聚类进行图像分割介绍
- en: 原文：[https://www.kdnuggets.com/2019/08/introduction-image-segmentation-k-means-clustering.html](https://www.kdnuggets.com/2019/08/introduction-image-segmentation-k-means-clustering.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/08/introduction-image-segmentation-k-means-clustering.html](https://www.kdnuggets.com/2019/08/introduction-image-segmentation-k-means-clustering.html)
- en: '[comments](#comments)![Figure](../Images/9b0a0b8be42317acaed68988ff8a24df.png)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)![图](../Images/9b0a0b8be42317acaed68988ff8a24df.png)'
- en: 'Pic Credit: [datastuff.tech](http://www.datastuff.tech/machine-learning/k-means-clustering-unsupervised-learning-for-recommender-systems/)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[datastuff.tech](http://www.datastuff.tech/machine-learning/k-means-clustering-unsupervised-learning-for-recommender-systems/)
- en: '* * *'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业道路。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升您的数据分析水平'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持您的组织的IT'
- en: '* * *'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Image segmentation is an important step in image processing, and it seems everywhere
    if we want to analyze what’s inside the image. For example, if we seek to find
    if there is a chair or person inside an indoor image, we may need image segmentation
    to separate objects and analyze each object individually to check what it is.
    Image segmentation usually serves as the pre-processing before pattern recognition,
    feature extraction, and compression of the image.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 图像分割是图像处理中的一个重要步骤，在我们想要分析图像内部内容时几乎无处不在。例如，如果我们希望找出室内图像中是否有椅子或人，我们可能需要图像分割来分离对象，并逐个分析每个对象以检查其是什么。图像分割通常作为模式识别、特征提取和图像压缩的预处理步骤。
- en: Image segmentation is the classification of an image into different groups.
    Many kinds of research have been done in the area of image segmentation using
    clustering. There are different methods and one of the most popular methods is **K-Means
    clustering algorithm**.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 图像分割是将图像分类为不同组的过程。在图像分割领域，已经进行过许多研究。不同的方法中，最流行的方法之一是**K-Means 聚类算法**。
- en: 'So here in this article, we will explore a method to read an image and cluster
    different regions of the image. But before doing lets first talk about:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 所以在这篇文章中，我们将探讨一种读取图像并对图像的不同区域进行聚类的方法。但在开始之前，我们首先讨论一下：
- en: Image Segmentation
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 图像分割
- en: How Image segmentation works
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 图像分割的工作原理
- en: K-Means clustering ML Algorithm
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: K-Means 聚类机器学习算法
- en: Merge K-Means clustering Algorithm with Image Segmentation.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将K-Means聚类算法与图像分割结合。
- en: Canny Edge detection
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Canny边缘检测
- en: Image Segmentation
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图像分割
- en: '![Figure](../Images/f0e25c04eae3b9a998f05ddd691d3292.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/f0e25c04eae3b9a998f05ddd691d3292.png)'
- en: Pic Credit: [omicsonline.org](https://www.omicsonline.org/open-access/image-segmentation-by-using-linear-spectral-clustering-2167-0919-1000143.php?aid=81482&view=mobile)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[omicsonline.org](https://www.omicsonline.org/open-access/image-segmentation-by-using-linear-spectral-clustering-2167-0919-1000143.php?aid=81482&view=mobile)
- en: Image segmentation is the process of partitioning a digital image into multiple
    distinct regions containing each pixel(sets of pixels, also known as superpixels)
    with similar attributes.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图像分割是将数字图像分割为多个不同区域的过程，每个区域包含具有相似属性的像素（像素集，也称为超像素）。
- en: The goal of Image segmentation is to change the representation of an image into
    something that is more meaningful and easier to analyze.
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 图像分割的目标是将图像的表示形式转换为更有意义、更易于分析的形式。
- en: Image segmentation is typically used to locate objects and [boundaries](https://en.wikipedia.org/wiki/Boundary_tracing)(lines,
    curves, etc.) in images. More precisely, Image Segmentation is the process of
    assigning a label to every pixel in an image such that pixels with the same label
    share certain characteristics.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图像分割通常用于定位图像中的对象和[边界](https://en.wikipedia.org/wiki/Boundary_tracing)（线条、曲线等）。更确切地说，图像分割是将标签分配给图像中每个像素的过程，以便具有相同标签的像素共享某些特征。
- en: 'Of course, a common question arises:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，常见的问题是：
- en: '**Why does Image Segmentation even matter?**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**为什么图像分割如此重要？**'
- en: If we take an example of Autonomous Vehicles, they need sensory input devices
    like cameras, radar, and lasers to allow the car to perceive the world around
    it, creating a digital map. Autonomous driving is not even possible without object
    detection which itself involves image classification/segmentation.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 以自主车辆为例，它们需要摄像头、雷达和激光等传感器输入设备，以使汽车能够感知周围的世界，创建数字地图。如果没有目标检测，自主驾驶甚至不可能，而目标检测本身涉及图像分类/分割。
- en: '![Figure](../Images/c5478641b8db1523e1c1f3f781d15fee.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/c5478641b8db1523e1c1f3f781d15fee.png)'
- en: Object detection and Image Classification by an Autonomous Vehicle
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 自主车辆的目标检测与图像分类
- en: Other examples involve Healthcare Industry where if we talk about Cancer, even
    in today’s age of technological advancements, cancer can be fatal if we don’t
    identify it at an early stage. Detecting cancerous cell(s) as quickly as possible
    can potentially save millions of lives. The shape of the cancerous cells plays
    a vital role in determining the severity of cancer which can be identified using
    image classification algorithms.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子是医疗行业，如果谈到癌症，即使在今天的技术进步时代，癌症如果未能在早期识别仍然可能致命。尽可能早地检测癌细胞可以潜在地拯救数百万生命。癌细胞的形状在确定癌症的严重程度方面发挥了重要作用，这可以通过图像分类算法来识别。
- en: '![Figure](../Images/5cd5d39b1ed64885b7c3c1032d66b827.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/5cd5d39b1ed64885b7c3c1032d66b827.png)'
- en: '[Breast cancer cells](https://imgur.com/gallery/QYbhkFH)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[乳腺癌细胞](https://imgur.com/gallery/QYbhkFH)'
- en: Like this, there were several algorithms and techniques for image segmentation
    have been developed over the years using domain-specific knowledge to effectively
    solve segmentation problems in that specific application area which includes [medical
    imaging](https://en.wikipedia.org/wiki/Medical_imaging), [object detection](https://en.wikipedia.org/wiki/Object_detection), [Iris
    recognition](https://en.wikipedia.org/wiki/Iris_recognition), [video surveillance](https://en.wikipedia.org/wiki/Closed-circuit_television), [machine
    vision](https://en.wikipedia.org/wiki/Machine_vision) and many more….
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，已经开发了几种图像分割算法和技术，这些技术使用特定领域的知识来有效解决该特定应用领域的分割问题，包括[医学成像](https://en.wikipedia.org/wiki/Medical_imaging)、[目标检测](https://en.wikipedia.org/wiki/Object_detection)、[虹膜识别](https://en.wikipedia.org/wiki/Iris_recognition)、[视频监控](https://en.wikipedia.org/wiki/Closed-circuit_television)、[机器视觉](https://en.wikipedia.org/wiki/Machine_vision)等。
- en: Let us plot an image in 3D space using python matplotlib library.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用python matplotlib库在三维空间中绘制图像。
- en: Below is the image that we’ll gonna plot in 3D space and we can clearly see
    3 different colors which means 3 clusters/groups should be generated.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是我们将在三维空间中绘制的图像，我们可以清晰地看到3种不同的颜色，这意味着应生成3个簇/组。
- en: '![Figure](../Images/99b2323f5239141a914e6ec9ab099c33.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/99b2323f5239141a914e6ec9ab099c33.png)'
- en: Source: [lightstalking.com](https://www.lightstalking.com/composing-with-color/)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '来源: [lightstalking.com](https://www.lightstalking.com/composing-with-color/)'
- en: '[PRE0]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![Figure](../Images/4465821b34acf5a136a0c9dc831c1381.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/4465821b34acf5a136a0c9dc831c1381.png)'
- en: Image plotting in 3D space
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在三维空间中的图像绘制
- en: From the plot one can easily see that the data points are forming groups — some
    places in a graph are more dense, which we can think as different colors’ dominance
    on the image.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 从图中可以清晰地看到数据点形成了若干组——图表中的某些地方更为密集，这可以看作是图像中不同颜色的主导地位。
- en: How Image Segmentation works
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图像分割如何工作
- en: Image Segmentation involves converting an image into a collection of regions
    of pixels that are represented by a mask or a labeled image. By dividing an image
    into segments, you can process only the important segments of the image instead
    of processing the entire image.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图像分割涉及将图像转换为像素区域的集合，这些区域由掩模或标记图像表示。通过将图像分割为多个部分，你可以只处理图像中的重要部分，而不是处理整个图像。
- en: A common technique is to look for abrupt discontinuities in pixel values, which
    typically indicate edges that define a region.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 一种常见的技术是查找像素值的急剧不连续性，这通常表示定义区域的边缘。
- en: Another common approach is to detect similarities in the regions of an image.
    Some techniques that follow this approach are region growing, clustering, and
    thresholding.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种常见的方法是检测图像区域中的相似性。一些遵循这种方法的技术包括区域生长、聚类和阈值化。
- en: A variety of other approaches to perform image segmentation have been developed
    over the years using domain-specific knowledge to effectively solve segmentation
    problems in specific application areas.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，已经开发出多种其他方法来执行图像分割，利用领域特定的知识在特定应用领域有效地解决分割问题。
- en: So let us start with one of the clustering-based approaches in Image Segmentation
    which is K-Means clustering.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从图像分割中的一种基于聚类的方法开始，即 K-均值聚类。
- en: K-Means clustering algorithm
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: K-均值聚类算法
- en: Ok first What are Clustering algorithms in Machine Learning?
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，什么是机器学习中的聚类算法？
- en: Clustering algorithms are unsupervised algorithms but are similar to Classification
    algorithms but the basis is different.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类算法是无监督算法，但与分类算法类似，只是基础不同。
- en: In Clustering, you don't know what you are looking for, and you are trying to
    identify some segments or clusters in your data. When you use clustering algorithms
    in your dataset, unexpected things can suddenly pop-up like structures, clusters,
    and groupings you would have never thought otherwise.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在聚类中，你不知道你在寻找什么，而是尝试识别数据中的一些分段或簇。当你在数据集中使用聚类算法时，可能会突然出现一些你之前未曾想到的结构、簇和分组。
- en: '***K*-Means clustering** algorithm is an unsupervised algorithm and it is used
    to segment the interest area from the background. It clusters, or partitions the
    given data into K-clusters or parts based on the K-centroids.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '***K*-均值聚类** 算法是一种无监督算法，用于从背景中分割兴趣区域。它将给定数据基于 K-质心分成 K 个簇或部分。'
- en: The algorithm is used when you have unlabeled data(i.e. data without defined
    categories or groups). The goal is to find certain groups based on some kind of
    similarity in the data with the number of groups represented by K.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当你拥有未标记的数据（即没有定义类别或组的数据）时，会使用该算法。目标是根据数据中的某种相似性找到某些组，组的数量由 K 表示。
- en: '![Figure](../Images/37c4f348f6a69fed5102b46d3eda1705.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/37c4f348f6a69fed5102b46d3eda1705.png)'
- en: K-Means clustering example
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: K-均值聚类示例
- en: In the above figure, Customers of a shopping mall have been grouped into 5 clusters
    based on their income and spending score. Yellow dots represent the Centroid of
    each cluster.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述图中，购物中心的顾客根据他们的收入和消费评分被分成了 5 个簇。黄色点代表每个簇的质心。
- en: The objective of K-Means clustering is to minimize the sum of squared distances
    between all points and the cluster center.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: K-均值聚类的目标是最小化所有点与簇中心之间的平方距离之和。
- en: '![Figure](../Images/2266d8cbedb64ea634a1afe60a04cfaf.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/2266d8cbedb64ea634a1afe60a04cfaf.png)'
- en: Pic Credit: [saedsayad.com](https://www.saedsayad.com/clustering_kmeans.htm)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[saedsayad.com](https://www.saedsayad.com/clustering_kmeans.htm)
- en: '**Steps in K-Means algorithm:**'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**K-均值算法的步骤：**'
- en: Choose the number of clusters K.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择簇的数量 K。
- en: Select at random K points, the centroids(not necessarily from your dataset).
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 随机选择 K 个点作为质心（不一定来自你的数据集）。
- en: Assign each data point to the closest centroid → that forms K clusters.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将每个数据点分配到最近的质心 → 这形成 K 个簇。
- en: Compute and place the new centroid of each cluster.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算并放置每个簇的新质心。
- en: Reassign each data point to the new closest centroid. If any reassignment .
    took place, go to step 4, otherwise, the model is ready.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将每个数据点重新分配到新的最近质心。如果发生了任何重新分配，回到第 4 步，否则模型准备好。
- en: '**How to choose the optimal value of K?**'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**如何选择 K 的最优值？**'
- en: For a certain class of clustering algorithms (in particular K-Means, K[-medoids](https://en.wikipedia.org/wiki/K-medoid),
    and [expectation-maximization](https://en.wikipedia.org/wiki/Expectation%E2%80%93maximization_algorithm) algorithm),
    there is a parameter commonly referred to as K that specifies the number of clusters
    to detect. Other algorithms such as [DBSCAN](https://en.wikipedia.org/wiki/DBSCAN) and [OPTICS
    algorithm](https://en.wikipedia.org/wiki/OPTICS_algorithm) do not require the
    specification of this parameter; [Hierarchical Clustering](https://en.wikipedia.org/wiki/Hierarchical_clustering) avoids
    the problem altogether but that's beyond the scope of this article.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 对于某些类的聚类算法（特别是 K-均值、K[-medoids](https://en.wikipedia.org/wiki/K-medoid) 和 [期望最大化](https://en.wikipedia.org/wiki/Expectation%E2%80%93maximization_algorithm)
    算法），有一个常被称为 K 的参数，用于指定要检测的簇的数量。其他算法如 [DBSCAN](https://en.wikipedia.org/wiki/DBSCAN)
    和 [OPTICS 算法](https://en.wikipedia.org/wiki/OPTICS_algorithm) 不需要指定该参数；[层次聚类](https://en.wikipedia.org/wiki/Hierarchical_clustering)
    完全避免了这个问题，但这超出了本文的范围。
- en: If we talk about K-Means then the correct choice of K is often ambiguous, with
    interpretations depending on the shape and scale of the distribution of points
    in a data set and the desired clustering resolution of the user. In addition,
    increasing K without penalty will always reduce the amount of error in the resulting
    clustering, to the extreme case of zero error if each data point is considered
    its own cluster (i.e., when K equals the number of data points, *n*). Intuitively
    then, *the optimal choice of K will strike a balance between maximum compression
    of the data using a single cluster, and maximum accuracy by assigning each data
    point to its own cluster*.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们谈论K-Means，那么K的正确选择通常是模糊的，解释取决于数据集中的点的分布形状和规模以及用户所需的聚类分辨率。此外，增加K而不受惩罚将始终减少结果聚类中的错误量，在每个数据点被视为一个独立聚类（即K等于数据点数量，*n*）的极端情况下，错误量为零。直观上，*K的最佳选择将平衡使用单个聚类的最大数据压缩与将每个数据点分配到其自身聚类的最大准确性*。
- en: If an appropriate value of K is not apparent from prior knowledge of the properties
    of the data set, it must be chosen somehow. There are several categories of methods
    for making this decision and **Elbow method** is one such method.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果从数据集的属性的先验知识中无法明显得出K的适当值，则必须以某种方式选择K。有几种类别的方法用于做出这个决定，**肘部法**就是其中一种方法。
- en: Elbow method
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 肘部法
- en: The basic idea behind partitioning methods, such as K-Means clustering, is to
    define clusters such that the total intra-cluster variation or in other words,
    total within-cluster sum of square (WCSS) is minimized. ***The total WCSS measures
    the compactness of the clustering and we want it to be as small as possible.***
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于K-Means聚类的分区方法的基本思想是定义聚类，使得总的簇内变异性，或总簇内平方和（WCSS）最小化。***总的WCSS衡量了聚类的紧凑性，我们希望它尽可能小。***
- en: '![Figure](../Images/c15401f28d280f1a8b9b62571528e9ac.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/c15401f28d280f1a8b9b62571528e9ac.png)'
- en: 'The Elbow method looks at the total WCSS as a function of the number of clusters:
    One should choose a number of clusters so that adding another cluster doesn’t
    improve much better the total WCSS.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 肘部法将总WCSS作为聚类数的函数：应选择一个聚类数，使得增加另一个聚类不会显著改善总WCSS。
- en: '**Steps to choose the optimal number of clusters K:(Elbow Method)**'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**选择最佳聚类数K的步骤：（肘部法）**'
- en: Compute K-Means clustering for different values of K by varying K from 1 to
    10 clusters.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算不同K值的K-Means聚类，通过将K从1变动到10个聚类。
- en: For each K, calculate the total within-cluster sum of square (WCSS).
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于每个K，计算簇内平方和总和（WCSS）。
- en: Plot the curve of WCSS vs the number of clusters K.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制WCSS与聚类数K的曲线。
- en: The location of a bend (knee) in the plot is generally considered as an indicator
    of the appropriate number of clusters.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 图中的弯点（膝盖）的位置通常被认为是适当聚类数量的指标。
- en: There is a catch!!!
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 有个陷阱！！！
- en: In spite of all the advantages K-Means have got but it fails sometimes due to
    the random choice of centroids which is called **The** **Random Initialization
    Trap.**
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管K-Means具有许多优点，但由于质心的随机选择，它有时会失败，这被称为**随机初始化陷阱**。
- en: To solve this issue we have an initialization procedure for K-Means which is
    called [**K-Means++**](https://en.wikipedia.org/wiki/K-means%2B%2B)(Algorithm
    for choosing the initial values for K-Means clustering).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，我们有一个称为[**K-Means++**](https://en.wikipedia.org/wiki/K-means%2B%2B)的K-Means初始化过程（用于选择K-Means聚类初始值的算法）。
- en: In K-Means++, We pick a point randomly and that's your first centroid, then
    we pick the next point based on the probability that depends upon the distance
    of the first point, the further apart the point is the more probable it is.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在K-Means++中，我们随机选择一个点作为第一个质心，然后基于第一个点的距离选择下一个点，点之间的距离越远，选择的可能性越大。
- en: Then we have two centroids, repeat the process, the probability of each point
    is based on its distance to the closest centroid to that point. Now, ***this introduces
    an overhead in the initialization of the algorithm, but it reduces the probability
    of a bad initialization leading to bad clustering result.***
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们有两个质心，重复过程，每个点的概率基于它到最近质心的距离。现在，***这在算法初始化中引入了额外开销，但它降低了坏初始化导致糟糕聚类结果的概率。***
- en: '**Visual Representation of K-Means Clustering:** Starting with 4 leftmost points.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**K-Means聚类的可视化表示：** 从最左边的4个点开始。'
- en: '![Figure](../Images/73a6666e8af6262bc8673e734728b100.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/73a6666e8af6262bc8673e734728b100.png)'
- en: '[Source](http://shabal.in/visuals/kmeans/5.html): K-Means Clustering in action'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[Source](http://shabal.in/visuals/kmeans/5.html): K-Means 聚类实战'
- en: Enough of theory lets implement what we have discussed in a real-world scenario.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 够了理论，接下来在实际场景中实现我们讨论的内容。
- en: In this section, we will explore a method to read an image and cluster different
    regions of the image using the **K-Means clustering algorithm** and **OpenCV**.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探讨一种方法，通过 **K-Means 聚类算法** 和 **OpenCV** 读取图像并对图像的不同区域进行聚类。
- en: So basically we will perform Color clustering and Canny Edge detection.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 所以基本上我们将执行颜色聚类和 Canny 边缘检测。
- en: '**Color Clustering:**'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**颜色聚类：**'
- en: 'Load all the required libraries:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 加载所有所需的库：
- en: '[PRE1]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Next step is to load the image in RGB color space
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是加载 RGB 色彩空间中的图像
- en: '[PRE2]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Original Image:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 原始图像：
- en: '![Figure](../Images/bbc112394504e9508aec30c6c069201d.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![Figure](../Images/bbc112394504e9508aec30c6c069201d.png)'
- en: 'source: unsplash'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 'source: unsplash'
- en: We need to convert our image from RGB Colours Space to HSV to work ahead.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要将图像从 RGB 色彩空间转换为 HSV 以继续操作。
- en: '**But the question is why ??**'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '**但问题是为什么？？**'
- en: According to [wikipedia](https://en.wikipedia.org/wiki/HSL_and_HSV#Use_in_image_analysis) the
    R, G, and B components of an object’s color in a digital image are all correlated
    with the amount of light hitting the object, and therefore with each other, image
    descriptions in terms of those components make object discrimination difficult.
    Descriptions in terms of hue/lightness/chroma or hue/lightness/saturation are
    often more relevant.
  id: totrans-99
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 根据 [wikipedia](https://en.wikipedia.org/wiki/HSL_and_HSV#Use_in_image_analysis)，数字图像中物体颜色的
    R、G 和 B 分量都与光线的强度相关，因此彼此相关，基于这些分量的图像描述使得物体区分变得困难。基于色调/亮度/饱和度的描述通常更为相关。
- en: 'If you don''t convert your image to HSV, your image will look something like
    this:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不将图像转换为 HSV，图像将会是这样的：
- en: '![Figure](../Images/be1a19424260442f8af5f305c7793fb3.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![Figure](../Images/be1a19424260442f8af5f305c7793fb3.png)'
- en: Our original image in RGB color space
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们原始图像的 RGB 色彩空间
- en: '[PRE3]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Next, converts the MxNx3 image into a Kx3 matrix where K=MxN and each row is
    now a vector in the 3-D space of RGB.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，将 MxNx3 图像转换为 Kx3 矩阵，其中 K=MxN，每一行现在是 RGB 3-D 空间中的一个向量。
- en: '[PRE4]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: We convert the unit8 values to float as it is a requirement of the k-means method
    of OpenCV.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将 `unit8` 值转换为浮点型，这是 OpenCV 的 k-means 方法的要求。
- en: '[PRE5]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: We are going to cluster with k = 3 because if you look at the image above it
    has 3 colors, green-colored grass and forest, blue sea and the greenish-blue seashore.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 k=3 进行聚类，因为如果你查看上面的图像，它有 3 种颜色，绿色的草地和森林，蓝色的海洋和青绿色的海岸。
- en: Define criteria, number of clusters(K) and apply k-means()
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 定义准则、簇的数量（K）并应用 k-means()
- en: '[PRE6]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: OpenCV provides [**cv2.kmeans(**](https://docs.opencv.org/master/d5/d38/group__core__cluster.html#ga9a34dc06c6ec9460e90860f15bcd2f88)**samples,
    nclusters(K), criteria, attempts, flags**[**)**](https://docs.opencv.org/master/d5/d38/group__core__cluster.html#ga9a34dc06c6ec9460e90860f15bcd2f88)function
    for color clustering.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: OpenCV 提供了 [**cv2.kmeans(**](https://docs.opencv.org/master/d5/d38/group__core__cluster.html#ga9a34dc06c6ec9460e90860f15bcd2f88)**samples,
    nclusters(K), criteria, attempts, flags**[**)**](https://docs.opencv.org/master/d5/d38/group__core__cluster.html#ga9a34dc06c6ec9460e90860f15bcd2f88)
    函数用于颜色聚类。
- en: '**1\. samples:** It should be of **np.float32** data type, and each feature
    should be put in a single column.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**1\. samples:** 应为 **np.float32** 数据类型，每个特征应放在单独的列中。'
- en: '**2\. nclusters(K)**: Number of clusters required at the end'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**2\. nclusters(K)**: 最终所需的簇数'
- en: '**3\. criteria:** It is the iteration termination criteria. When this criterion
    is satisfied, the algorithm iteration stops. Actually, it should be a tuple of
    3 parameters. They are `( type, max_iter, epsilon )`:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**3\. criteria:** 这是迭代终止准则。当满足此准则时，算法迭代停止。实际上，它应该是一个包含 3 个参数的元组。它们是 `( type,
    max_iter, epsilon )`：'
- en: 'Type of termination criteria. It has 3 flags as below:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 终止准则的类型。它有如下 3 个标志：
- en: '**cv.TERM_CRITERIA_EPS** — stop the algorithm iteration if specified accuracy, *epsilon*,
    is reached.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**cv.TERM_CRITERIA_EPS** — 当达到指定的精度，即*epsilon*时，停止算法迭代。'
- en: '**cv.TERM_CRITERIA_MAX_ITER** — stop the algorithm after the specified number
    of iterations, *max_iter*.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**cv.TERM_CRITERIA_MAX_ITER** — 在指定的迭代次数后停止算法，*max_iter*。'
- en: '**cv.TERM_CRITERIA_EPS + cv.TERM_CRITERIA_MAX_ITER** — stop the iteration when
    any of the above condition is met.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**cv.TERM_CRITERIA_EPS + cv.TERM_CRITERIA_MAX_ITER** — 当满足以上任何一个条件时，停止迭代。'
- en: '**4\. attempts:** Flag to specify the number of times the algorithm is executed
    using different initial labelings. The algorithm returns the labels that yield
    the best compactness. This compactness is returned as output.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**4\. 尝试次数：** 标志用于指定算法使用不同初始标记进行执行的次数。算法返回产生最佳紧凑度的标签。这个紧凑度作为输出返回。'
- en: '**5\. flags:** This flag is used to specify how initial centers are taken.
    Normally two flags are used for this: [**cv.KMEANS_PP_CENTERS**](https://docs.opencv.org/master/d0/de1/group__core.html#gga276000efe55ee2756e0c471c7b270949a78ddd00a99cd51db10ed63c024eb1e62) and [**cv.KMEANS_RANDOM_CENTERS**](https://docs.opencv.org/master/d0/de1/group__core.html#gga276000efe55ee2756e0c471c7b270949adfa80a38dfc0aef0de888c3164f33faf).'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**5\. 标志：** 此标志用于指定初始中心的选取方式。通常使用两个标志： [**cv.KMEANS_PP_CENTERS**](https://docs.opencv.org/master/d0/de1/group__core.html#gga276000efe55ee2756e0c471c7b270949a78ddd00a99cd51db10ed63c024eb1e62) 和 [**cv.KMEANS_RANDOM_CENTERS**](https://docs.opencv.org/master/d0/de1/group__core.html#gga276000efe55ee2756e0c471c7b270949adfa80a38dfc0aef0de888c3164f33faf)。'
- en: '[PRE7]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now convert back into uint8.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在转换回uint8格式。
- en: '[PRE8]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Next, we have to access the labels to regenerate the clustered image
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要访问标签以重新生成聚类图像。
- en: '[PRE9]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '`result_image` is the result of the frame which has undergone k-means clustering.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '`result_image` 是经过K-means聚类处理的帧结果。'
- en: Now let us visualize the output result with K=3
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们可视化K=3时的输出结果
- en: '[PRE10]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![Figure](../Images/e122ed9b791e75f09b42e30fe5d57809.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/e122ed9b791e75f09b42e30fe5d57809.png)'
- en: Image Segmentation when K=3
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: K=3时的图像分割
- en: So the algorithm has categorized our original image into three dominant colors.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，该算法已将我们的原始图像分为三种主要颜色。
- en: 'Let''s see what happens when we change the value of K=5:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看当K值变为5时会发生什么：
- en: '![Figure](../Images/757897619f800fa4107a94cf459ecd1a.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/757897619f800fa4107a94cf459ecd1a.png)'
- en: Image Segmentation when K=5
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: K=5时的图像分割
- en: 'Change the value of K=7:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 改变K值为7：
- en: '![Figure](../Images/987b393caef9ae0a152d28540c87dafd.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/987b393caef9ae0a152d28540c87dafd.png)'
- en: Image Segmentation when K=7
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: K=7时的图像分割
- en: As you can see with an increase in the value of K, the image becomes clearer
    because the K-means algorithm can classify more classes/cluster of colors.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，随着K值的增加，图像变得更加清晰，因为K-means算法可以对更多的颜色类别/簇进行分类。
- en: 'We can try our code for different images:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以对不同的图像尝试我们的代码：
- en: '![Figure](../Images/95680db4234dcd426ab5cdb840dc8a90.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/95680db4234dcd426ab5cdb840dc8a90.png)'
- en: Image Segmentation when K=6![Figure](../Images/047b4c6eba9cfd996a2acb2024317bd0.png)
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: K=6时的图像分割![图](../Images/047b4c6eba9cfd996a2acb2024317bd0.png)
- en: Image Segmentation when K=6
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: K=6时的图像分割
- en: Let's move to our next part which is Canny Edge detection.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进入下一部分：Canny边缘检测。
- en: '**Canny Edge detection: **It is an image processing method used to detect edges
    in an image while suppressing noise.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '**Canny边缘检测：** 这是一种图像处理方法，用于检测图像中的边缘，同时抑制噪声。'
- en: '**The Canny Edge detection algorithm is composed of 5 steps:**'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '**Canny边缘检测算法由5个步骤组成：**'
- en: <noise reduction="">Gradient calculation</noise>
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <噪声减少="">梯度计算</噪声>
- en: Non-maximum suppression
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 非极大值抑制
- en: Double threshold
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双阈值
- en: Edge Tracking by Hysteresis
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过滞后跟踪边缘
- en: OpenCV provides **cv2.Canny(image, threshold1,threshold2)** function for edge
    detection.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: OpenCV提供了**cv2.Canny(image, threshold1,threshold2)**函数用于边缘检测。
- en: The first argument is our input image. Second and third arguments are our min
    and max threshold respectively.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个参数是我们的输入图像。第二个和第三个参数分别是最小和最大阈值。
- en: The function finds edges in the input image(8-bit input image) and marks them
    in the output map edges using the Canny algorithm. The smallest value between
    threshold1 and threshold2 is used for edge linking. The largest value is used
    to find initial segments of strong edges.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数在输入图像（8位输入图像）中查找边缘，并使用Canny算法在输出图像中标记这些边缘。最小值用于边缘连接。最大值用于找到强边缘的初始段。
- en: '[PRE11]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Figure](../Images/343ca587398f6095595d469d8176a580.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/343ca587398f6095595d469d8176a580.png)'
- en: 'Result-1: Edge detection using the Canny algorithm![Figure](../Images/0a649a64791babd29ae0bf62fb3e9807.png)'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 结果-1：使用Canny算法进行边缘检测![图](../Images/0a649a64791babd29ae0bf62fb3e9807.png)
- en: 'Result-2: Edge detection using the Canny algorithm'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 结果-2：使用Canny算法进行边缘检测
- en: 'Conclusion: What the future holds'
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论：未来会怎样
- en: '![Figure](../Images/40d187193d833bf9f63d02536b0efe73.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/40d187193d833bf9f63d02536b0efe73.png)'
- en: Pic credit: [gehealthcare](http://newsroom.gehealthcare.com/is-the-ai-trend-why-doctors-of-the-future-may-know-code/)
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[gehealthcare](http://newsroom.gehealthcare.com/is-the-ai-trend-why-doctors-of-the-future-may-know-code/)
- en: Due to advancements in Image processing, Machine learning, AI and related technologies,
    there will be millions of robots in the world in a few decades time, transforming
    the way we live our daily lives. These advancements will involve spoken commands,
    anticipating the information requirements of governments, translating languages,
    recognizing and tracking people and things, diagnosing medical conditions, performing
    surgery, reprogramming defects in human DNA, driverless cars and many more applications,
    the count of real-life applications is endless.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 由于图像处理、机器学习、人工智能及相关技术的进步，未来几十年内世界上将出现数百万台机器人，这将改变我们的日常生活方式。这些进步将涉及语音命令、预测政府的信息需求、翻译语言、识别和追踪人员及物品、诊断医疗条件、进行手术、重新编程人类
    DNA 的缺陷、无人驾驶汽车等，现实生活中的应用数不胜数。
- en: Well, this comes to the end of this article. I hope you guys have enjoyed reading
    this article. Share your thoughts/comments/doubts in the comment section.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，这篇文章就到这里。我希望大家喜欢阅读这篇文章。请在评论区分享你的想法/评论/疑问。
- en: You can reach me out over [LinkedIn](https://www.linkedin.com/in/nagesh-singh-chauhan-6936bb13b/?source=post_page---------------------------) for
    any query.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过[LinkedIn](https://www.linkedin.com/in/nagesh-singh-chauhan-6936bb13b/?source=post_page---------------------------)联系我，提出任何问题。
- en: Thanks for reading !!!
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读！！！
- en: '**Bio: [Nagesh Singh Chauhan](https://www.linkedin.com/in/nagesh-singh-chauhan-6936bb13b/)**
    is a Data Science enthusiast. Interested in Big Data, Python, Machine Learning.'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '**个人简介： [Nagesh Singh Chauhan](https://www.linkedin.com/in/nagesh-singh-chauhan-6936bb13b/)**
    是一位数据科学爱好者。对大数据、Python 和机器学习感兴趣。'
- en: '[Original](https://towardsdatascience.com/introduction-to-image-segmentation-with-k-means-clustering-83fd0a9e2fc3).
    Reposted with permission.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/introduction-to-image-segmentation-with-k-means-clustering-83fd0a9e2fc3)。经许可转载。'
- en: '**Related:**'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Predict Age and Gender Using Convolutional Neural Network and OpenCV](/2019/04/predict-age-gender-using-convolutional-neural-network-opencv.html)'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用卷积神经网络和 OpenCV 预测年龄和性别](/2019/04/predict-age-gender-using-convolutional-neural-network-opencv.html)'
- en: '[A Beginner’s Guide to Linear Regression in Python with Scikit-Learn](/2019/03/beginners-guide-linear-regression-python-scikit-learn.html)'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 中使用 Scikit-Learn 进行线性回归的初学者指南](/2019/03/beginners-guide-linear-regression-python-scikit-learn.html)'
- en: '[From Data Pre-processing to Optimizing a Regression Model Performance](/2019/07/data-pre-processing-optimizing-regression-model-performance.html)'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[从数据预处理到优化回归模型性能](/2019/07/data-pre-processing-optimizing-regression-model-performance.html)'
- en: More On This Topic
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Clustering Unleashed: Understanding K-Means Clustering](https://www.kdnuggets.com/2023/07/clustering-unleashed-understanding-kmeans-clustering.html)'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[解放聚类：理解 K 均值聚类](https://www.kdnuggets.com/2023/07/clustering-unleashed-understanding-kmeans-clustering.html)'
- en: '[Centroid Initialization Methods for k-means Clustering](https://www.kdnuggets.com/2020/06/centroid-initialization-k-means-clustering.html)'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[k-means 聚类的质心初始化方法](https://www.kdnuggets.com/2020/06/centroid-initialization-k-means-clustering.html)'
- en: '[What is K-Means Clustering and How Does its Algorithm Work?](https://www.kdnuggets.com/2023/05/kmeans-clustering-algorithm-work.html)'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[什么是 K 均值聚类及其算法是如何工作的？](https://www.kdnuggets.com/2023/05/kmeans-clustering-algorithm-work.html)'
- en: '[Hands-On with Unsupervised Learning: K-Means Clustering](https://www.kdnuggets.com/handson-with-unsupervised-learning-kmeans-clustering)'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[动手实践无监督学习：K均值聚类](https://www.kdnuggets.com/handson-with-unsupervised-learning-kmeans-clustering)'
- en: '[Introduction to Clustering in Python with PyCaret](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 进行 Python 中的聚类简介](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)'
- en: '[Unveiling Hidden Patterns: An Introduction to Hierarchical Clustering](https://www.kdnuggets.com/unveiling-hidden-patterns-an-introduction-to-hierarchical-clustering)'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[揭示隐藏模式：层次聚类简介](https://www.kdnuggets.com/unveiling-hidden-patterns-an-introduction-to-hierarchical-clustering)'
