- en: Mastering TensorFlow Variables in 5 Easy Steps
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 5 个简单步骤中掌握 TensorFlow 变量
- en: 原文：[https://www.kdnuggets.com/2021/01/mastering-tensorflow-variables-5-easy-steps.html](https://www.kdnuggets.com/2021/01/mastering-tensorflow-variables-5-easy-steps.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/01/mastering-tensorflow-variables-5-easy-steps.html](https://www.kdnuggets.com/2021/01/mastering-tensorflow-variables-5-easy-steps.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Orhan G. Yalçın](https://www.linkedin.com/in/orhangaziyalcin/), AI Researcher**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者：[Orhan G. Yalçın](https://www.linkedin.com/in/orhangaziyalcin/)，AI 研究员**'
- en: '**WARNING:** Do not confuse this article with “[Mastering TensorFlow Tensors
    in 5 Easy Steps](https://towardsdatascience.com/mastering-tensorflow-tensors-in-5-easy-steps-35f21998bb86)”!'
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**警告：** 请勿将本文与“[在 5 个简单步骤中掌握 TensorFlow 张量](https://towardsdatascience.com/mastering-tensorflow-tensors-in-5-easy-steps-35f21998bb86)”混淆！'
- en: '*If you are reading this article, I am sure that we share similar interests
    and are/will be in similar industries. So let’s connect via *[*Linkedin*](https://linkedin.com/in/orhangaziyalcin/)*!
    Please do not hesitate to send a contact request! *[*Orhan G. Yalçın — Linkedin*](https://linkedin.com/in/orhangaziyalcin/)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你正在阅读这篇文章，我相信我们有相似的兴趣，并且在相似的行业中工作/将会工作。所以让我们通过*[Linkedin](https://linkedin.com/in/orhangaziyalcin/)*联系吧！请随时发送联系请求！*[Orhan
    G. Yalçın — Linkedin](https://linkedin.com/in/orhangaziyalcin/)*'
- en: '![Figure](../Images/0b30af06d3c609c0bfe7ea3abd49626c.png)Figure 1\. Photo by [Crissy
    Jarvis](https://unsplash.com/@crissyjarvis?utm_source=medium&utm_medium=referral) on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/0b30af06d3c609c0bfe7ea3abd49626c.png)图 1。照片由[Crissy Jarvis](https://unsplash.com/@crissyjarvis?utm_source=medium&utm_medium=referral)提供，发布在[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)'
- en: 'In this tutorial, we will focus on [TensorFlow Variables](https://www.tensorflow.org/api_docs/python/tf/Variable).
    After the tutorial, you will be able to create, update, and manage [TensorFlow
    Variables](https://www.tensorflow.org/api_docs/python/tf/Variable) effectively.
    As usual, our tutorial will deliver code examples with detailed explanations as
    well as conceptual explanations. We will master [TensorFlow Variables](https://www.tensorflow.org/api_docs/python/tf/Variable) in
    5 easy steps:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将重点关注[TensorFlow 变量](https://www.tensorflow.org/api_docs/python/tf/Variable)。教程结束后，你将能够有效地创建、更新和管理[TensorFlow
    变量](https://www.tensorflow.org/api_docs/python/tf/Variable)。像往常一样，我们的教程将提供详细的代码示例以及概念解释。我们将在5个简单步骤中掌握[TensorFlow
    变量](https://www.tensorflow.org/api_docs/python/tf/Variable)：
- en: '**Step 1: Definition of Variables** →A Brief Introduction, Comparison with
    [Tensors](https://www.kdnuggets.com/2018/05/wtf-tensor.html)'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 1：变量定义** → 简要介绍，与[Tensors](https://www.kdnuggets.com/2018/05/wtf-tensor.html)的比较'
- en: '**Step 2: Creation of Variables** → Instantiating tf.Variable Objects'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 2：变量创建** → 实例化 tf.Variable 对象'
- en: '**Step 3:** **Qualifications of Variables** → Characteristics and Features'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 3：** **变量的资格** → 特征和属性'
- en: '**Step 4: Operations with Variables** → Basic Tensor Operations, Indexing,
    Shape Manipulation, and Broadcasting'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 4：变量操作** → 基本张量操作、索引、形状操作和广播'
- en: '**Step 5: Hardware Selection for Variables** → GPUs, CPUs, TPUs'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 5：变量的硬件选择** → GPUs，CPUs，TPUs'
- en: Fasten your belts, and let’s start!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 系好安全带，让我们开始吧！
- en: '**Definition of Variables**'
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**变量定义**'
- en: In this step, we will briefly cover what Variables are and understand the difference
    between plain Tensor objects and Variable objects.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步中，我们将简要介绍变量的概念，并理解普通 Tensor 对象和变量对象之间的区别。
- en: A Brief Introduction
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 简要介绍
- en: A TensorFlow Variable is the preferred object type representing a shared and
    persistent state that you can manipulate with any operation, including TensorFlow
    models. Manipulation refers to any value or parameter update. This characteristic
    is the most distinguishing feature of Variables compared to `tf.Tensor` objects.
    TensorFlow Variables are recorded as `tf.Variable` objects. Let’s make a brief
    comparison between `tf.Tensor` and `tf.Variable` objects to understand their similarities
    and differences.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: TensorFlow 变量是表示共享和持久状态的首选对象类型，你可以通过任何操作（包括 TensorFlow 模型）来操控。操控指的是任何值或参数的更新。这一特性是变量与`tf.Tensor`对象最主要的区别。TensorFlow
    变量被记录为`tf.Variable`对象。让我们简要比较一下`tf.Tensor`和`tf.Variable`对象，以理解它们的相似性和差异。
- en: '![Figure](../Images/6a0d228ab955f80d9f173da4fd88cb10.png)Figure 2\. Variable
    Values can be Updated (Figure by Author)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/6a0d228ab955f80d9f173da4fd88cb10.png)图 2。变量值可以更新（图由作者提供）'
- en: Comparison with Tensors
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 与张量的比较
- en: So, the most important difference between Variables and Tensors is **mutability**.
    The values in a Variable object can be updated (*e.g., with the *`*assign()*`* function*)
    as opposed to Tensors.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，变量和张量之间最重要的区别是**可变性**。与张量不同，变量对象中的值可以被更新（*例如，通过`*assign()*`函数*）。
- en: '[*“The values of tensor objects cannot be updated, and you can only create
    a new Tensor object with the new values.*](https://towardsdatascience.com/mastering-tensorflow-tensors-in-5-easy-steps-35f21998bb86)*”*'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[*“张量对象的值不能被更新，你只能用新的值创建一个新的张量对象。”*](https://towardsdatascience.com/mastering-tensorflow-tensors-in-5-easy-steps-35f21998bb86)*”*'
- en: Variable objects are mainly used to store model parameters, and since these
    values are constantly updated during training, using Variables, instead of Tensors,
    is a necessity rather than a choice.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 变量对象主要用于存储模型参数，由于这些值在训练过程中会不断更新，因此使用变量而不是张量是一种必需而非选择。
- en: The shape of a Variable object can be updated with the `reshape()` instance
    function just like the shape of a Tensor object. Since Variable objects are built
    on top of Tensor objects, they have common attributes such as `.shape` and `.dtype`.
    But, Variables also have unique attributes such as `.trainable`,`.device`, and `.name` attributes
    that the Tensors do not have.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 变量对象的形状可以使用`reshape()`实例函数更新，就像张量对象的形状一样。由于变量对象是基于张量对象构建的，因此它们具有`.shape`和`.dtype`等共同属性。但变量还具有张量所没有的唯一属性，如`.trainable`、`.device`和`.name`。
- en: '![Figure](../Images/088534bdd4c7f38938cabedef685c6b9.png)Figure 3\. A Tensorflow
    Variable is actually a wrapper around a TensorFlow Tensor with additional features
    (Figure by Author)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/088534bdd4c7f38938cabedef685c6b9.png)图 3\. TensorFlow 变量实际上是围绕
    TensorFlow 张量的一个包装器，具有额外的功能（图由作者提供）'
- en: Let’s see how we can create `tf.Variable` objects!
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 让我们来看看如何创建`tf.Variable`对象！
- en: '**Creation of Variables**'
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**变量的创建**'
- en: We can instantiate (*i.e., create*) `tf.Variable`objects with the `tf.Variable()` function.
    The `tf.Variable()` function accepts different data types as parameter such as
    integers, floats, strings, lists, and `tf.Constant` objects.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`tf.Variable()`函数实例化（*即，创建*）`tf.Variable`对象。`tf.Variable()`函数接受不同的数据类型作为参数，如整数、浮点数、字符串、列表和`tf.Constant`对象。
- en: 'Before showing different Variable object examples with these different data
    types, I want you to [start a new Google Colab notebook](https://colab.research.google.com/) and
    import TensorFlow library with the following code:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '在展示不同数据类型的变量对象示例之前，我希望你能[*“打开一个新的 Google Colab 笔记本”](https://colab.research.google.com/)并使用以下代码导入
    TensorFlow 库：* '
- en: Now, we can start creating `tf.Variable` objects.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以开始创建`tf.Variable`对象。
- en: '1 — We can pass a `tf.constant()` object as the `initial_value`:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 1 — 我们可以将一个`tf.constant()`对象作为`initial_value`传递：
- en: '2 — We can pass a single integer as the `initial_value`:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 2 — 我们可以将一个单独的整数作为`initial_value`传递：
- en: '3 — We can pass a list of integers or floats as the `initial_value`:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 3 — 我们可以将一个整数或浮点数列表作为`initial_value`传递：
- en: '4 — We can pass a single string as the `initial_value`:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 4 — 我们可以将一个单独的字符串作为`initial_value`传递：
- en: '5 — We can pass a list of strings as the `initial_value`:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 5 — 我们可以将一个字符串列表作为`initial_value`传递：
- en: As you can see, there are several data types that th e`tf.Variable()` function
    accepts as the `initial_value` argument. Now let’s take a look at the characteristics
    and features of variables.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，`tf.Variable()`函数接受作为`initial_value`参数的几种数据类型。现在让我们看看变量的特征和功能。
- en: '**Qualifications of Variables**'
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**变量的资格**'
- en: Every Variable must have some properties such as value, name, uniform data type,
    shape, rank, size, and more. In this section, we will see what these properties
    are and how we can view these properties in a Colab notebook.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 每个变量必须具有一些属性，如值、名称、统一数据类型、形状、秩、大小等。在这一部分，我们将看到这些属性是什么以及如何在 Colab 笔记本中查看这些属性。
- en: Value
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 值
- en: 'Every Variable must specify an `initial_value`. Otherwise, TensorFlow raises
    an error and says that `Value Error: initial_value must be specified.` Therefore,
    make sure that you pass on an `initial_value`argument when creating Variable objects.
    To be able to view a Variable’s values, we can use the `.value()` function as
    well as the `.numpy()` function. See the example below:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '每个变量必须指定一个`initial_value`。否则，TensorFlow 会引发错误，并提示`Value Error: initial_value
    must be specified.`因此，请确保在创建变量对象时传递`initial_value`参数。为了查看变量的值，我们可以使用`.value()`函数以及`.numpy()`函数。请参见下面的示例：'
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Name
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 名称
- en: 'Name is a Variable attribute which helps developers to track the updates on
    a particular variable. You can pass a `name` argument while creating the Variable
    object. If you don’t specify a name, TensorFlow assigns a default name, as shown
    below:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Name是一个Variable属性，帮助开发者跟踪特定变量的更新。你可以在创建Variable对象时传递`name`参数。如果你没有指定名称，TensorFlow会分配一个默认名称，如下所示：
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Dtype
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Dtype
- en: 'Each Variable must have a uniform data type that it stores. Since there is
    a single type of data stored for every Variable, you can also view this type with
    the `.dtype` attribute. See the example below:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 每个Variable必须有统一的数据类型进行存储。由于每个Variable存储的是单一类型的数据，你也可以通过`.dtype`属性查看这个类型。见下方示例：
- en: '[PRE2]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Shape, Rank, and Size
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 形状、秩和大小
- en: 'The shape property shows the size of each dimension in the form of a list.
    We can view the shape of the Variable object with the `.shape` attribute. Then,
    we can view the number of dimensions that a Variable object has with the `tf.size()` function.
    Finally, Size corresponds to the total number of elements a Variable has. We need
    to use the `tf.size()` function to count the number of elements in a Variable.
    See the code below for all three properties:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 形状属性以列表形式显示每个维度的大小。我们可以使用`.shape`属性查看Variable对象的形状。然后，我们可以使用`tf.size()`函数查看一个Variable对象的维度数量。最后，大小对应于一个Variable拥有的元素总数。我们需要使用`tf.size()`函数来计算Variable中的元素数量。见下方代码了解所有三个属性：
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Operations with Variables**'
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**与变量的操作**'
- en: There are several basic operations you can easily conduct with math operators
    and TensorFlow functions. On top of what we covered in [Part 2 of this tutorial
    series](https://towardsdatascience.com/mastering-tensorflow-tensors-in-5-easy-steps-35f21998bb86),
    you may also use the following math operators for Variable operations.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 使用数学运算符和TensorFlow函数，你可以轻松进行多种基本操作。除了我们在[本教程系列第2部分](https://towardsdatascience.com/mastering-tensorflow-tensors-in-5-easy-steps-35f21998bb86)中介绍的内容，你还可以使用以下数学运算符进行Variable操作。
- en: Basic Tensor Operations
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基本Tensor操作
- en: '![Figure](../Images/37ea09ca244c102f63cb5272a5a60050.png)Figure 4\. You May
    Benefit from Basic Math Operators (Figure by Author)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/37ea09ca244c102f63cb5272a5a60050.png)图4\. 你可能会从基本数学运算符中受益（图示由作者提供）'
- en: '**Addition and Subtraction: **We can conduct addition and subtraction with `+` and `—` signs.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**加法和减法：**我们可以使用`+`和`—`符号进行加法和减法运算。'
- en: '[PRE4]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Multiplication and Division:** We can conduct multiplication and division
    with `*` and `/` signs.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**乘法和除法：**我们可以使用`*`和`/`符号进行乘法和除法运算。'
- en: '[PRE5]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Matmul and Modulo Operations: Finally, you can also do matmul and modulo
    operations with `@` and `%` signs:**'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**矩阵乘法和取模操作：最后，你还可以使用`@`和`%`符号进行矩阵乘法和取模操作：**'
- en: '[PRE6]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: These are elementary examples, but they can be extended into complex calculations,
    which creates the algorithms that we use for deep learning applications.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是基础示例，但它们可以扩展为复杂计算，从而创建我们在深度学习应用中使用的算法。
- en: '[PRE7]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Assignment, Indexing, Broadcasting, and Shape Manipulation
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 赋值、索引、广播和形状操作
- en: Assignment
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 赋值
- en: 'With the `tf.assign()` function, you may assign new values to a Variable object
    without creating a new object. Being able to assign new values is one of the advantages
    of Variables, where value reassignment is required. Here is an example of reassignment
    of values:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`tf.assign()`函数，你可以在不创建新对象的情况下给一个Variable对象赋予新值。赋值是Variables的一个优点，特别是在需要重新赋值的情况下。以下是重新赋值的示例：
- en: '[PRE8]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Indexing
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 索引
- en: 'Just as in Tensors, you may easily access particular elements using index values,
    as shown below:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在Tensors中一样，你可以使用索引值轻松访问特定元素，如下所示：
- en: '[PRE9]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Broadcasting
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 广播
- en: 'Just as with Tensor objects, when we try to do combined operations using multiple
    Variable objects, the smaller Variables can stretch out automatically to fit larger
    Variables, just as NumPy arrays can. For example, when you attempt to multiply
    a scalar Variable with a 2-dimensional Variable, the scalar is stretched to multiply
    every 2-dimensional Variable element. See the example below:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在Tensor对象中一样，当我们尝试使用多个Variable对象进行组合操作时，较小的Variable可以自动扩展以适应较大的Variable，就像NumPy数组一样。例如，当你尝试将一个标量Variable与一个二维Variable相乘时，标量会被扩展以乘以每个二维Variable元素。见下方示例：
- en: '[PRE10]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Shape Manipulation
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 形状操作
- en: 'Just as in Tensor objects, you can reshape Variable objects as well. For the
    reshape operation, we can use the `tf.reshape()` function. Let''s use the `tf.reshape()` function
    in code:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 与Tensor对象一样，你也可以对Variable对象进行重塑操作。对于重塑操作，我们可以使用`tf.reshape()`函数。让我们在代码中使用`tf.reshape()`函数：
- en: '[PRE11]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '**Hardware Selection for Variables**'
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**变量的硬件选择**'
- en: 'As you will see in the upcoming Parts, we will accelerate our model training
    with GPUs and TPUs. To be able to see what type of device (i.e., processor) our
    variable is processed with, we can use `.device` attribute:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在接下来的部分中将看到的，我们将使用 GPU 和 TPU 加速模型训练。为了能够查看我们的变量是在哪种设备（即处理器）上处理的，我们可以使用 `.device`
    属性：
- en: '[PRE12]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We can also set which device should process a particular calculation with the `tf.device()` function
    by passing the device name as an argument. See the example below:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用 `tf.device()` 函数，通过将设备名称作为参数传递来设置处理特定计算的设备。请参见下面的示例：
- en: '[PRE13]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Even though you will not have to set this manually while training a model, there
    might be circumstances where you have to choose a device for a particular calculation
    or data processing work. So, beware of this option.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在训练模型时你不需要手动设置，但在某些情况下，你可能需要为特定的计算或数据处理工作选择一个设备。所以，要注意这个选项。
- en: Congratulations
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 恭喜你
- en: We have successfully covered the basics of TensorFlow’s Variable objects.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经成功覆盖了 TensorFlow 变量对象的基础知识。
- en: '*Give yourself a pat on the back!*'
  id: totrans-83
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*给自己一个奖励吧！*'
- en: This should give you a lot of confidence since you are now much more informed
    about the main mutable Variable object type used for all kinds of operations in
    TensorFlow.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会给你很大的信心，因为你现在对 TensorFlow 中用于各种操作的主要可变变量对象类型有了更多了解。
- en: 'If this is your first post, consider starting from [Part 1 of this tutorial
    series](https://towardsdatascience.com/beginners-guide-to-tensorflow-2-x-for-deep-learning-applications-c7ebd0dcfbee):'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这是你的第一篇文章，考虑从 [本教程系列的第 1 部分](https://towardsdatascience.com/beginners-guide-to-tensorflow-2-x-for-deep-learning-applications-c7ebd0dcfbee)
    开始：
- en: '[**Beginner’s Guide to TensorFlow 2.x for Deep Learning Applications**](https://towardsdatascience.com/beginners-guide-to-tensorflow-2-x-for-deep-learning-applications-c7ebd0dcfbee)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[**TensorFlow 2.x 深度学习应用的初学者指南**](https://towardsdatascience.com/beginners-guide-to-tensorflow-2-x-for-deep-learning-applications-c7ebd0dcfbee)'
- en: Understanding the TensorFlow Platform and What it has to Offer to a Machine
    Learning Expert
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 理解 TensorFlow 平台及其对机器学习专家的价值
- en: 'or [check out Part 2](https://towardsdatascience.com/mastering-tensorflow-tensors-in-5-easy-steps-35f21998bb86):'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 或 [查看第 2 部分](https://towardsdatascience.com/mastering-tensorflow-tensors-in-5-easy-steps-35f21998bb86)：
- en: '[**Mastering TensorFlow Tensors in 5 Easy Steps**](https://towardsdatascience.com/mastering-tensorflow-tensors-in-5-easy-steps-35f21998bb86)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[**在 5 个简单步骤中掌握 TensorFlow 张量**](https://towardsdatascience.com/mastering-tensorflow-tensors-in-5-easy-steps-35f21998bb86)'
- en: Discover how the building blocks of TensorFlow works at the lower level and
    learn how to make the most of Tensor…
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 了解 TensorFlow 的基本构件如何在底层工作，并学习如何充分利用 Tensor…
- en: Subscribe to the Mailing List for the Full Code
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 订阅邮件列表以获取完整代码
- en: 'If you would like to have access to full code on Google Colab and the rest
    of my latest content, consider subscribing to the mailing list:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想访问 Google Colab 上的完整代码以及我最新的内容，考虑订阅邮件列表：
- en: 'Slide to SubscribeFinally, if you are interested in more advanced applied deep
    learning tutorials, check out some of my other articles:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 滑动以订阅最后，如果你对更多高级的应用深度学习教程感兴趣，请查看我的其他文章：
- en: '[**Image Classification in 10 Minutes with MNIST Dataset**](https://towardsdatascience.com/image-classification-in-10-minutes-with-mnist-dataset-54c35b77a38d)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[**用 MNIST 数据集在 10 分钟内进行图像分类**](https://towardsdatascience.com/image-classification-in-10-minutes-with-mnist-dataset-54c35b77a38d)'
- en: Using Convolutional Neural Networks to Classify Handwritten Digits with TensorFlow
    and Keras | Supervised Deep Learning
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 使用卷积神经网络与 TensorFlow 和 Keras 对手写数字进行分类 | 监督深度学习
- en: '[**Image Noise Reduction in 10 Minutes with Convolutional Autoencoders**](https://towardsdatascience.com/image-noise-reduction-in-10-minutes-with-convolutional-autoencoders-d16219d2956a)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[**用卷积自编码器在 10 分钟内减少图像噪声**](https://towardsdatascience.com/image-noise-reduction-in-10-minutes-with-convolutional-autoencoders-d16219d2956a)'
- en: Using Deep Convolutional Autoencoders to Clean (or Denoise) Noisy Images with
    the help of Fashion MNIST | Unsupervised…
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 使用深度卷积自编码器清理（或去噪）带有噪声的图像，借助 Fashion MNIST | 无监督…
- en: '[**Image Generation in 10 Minutes with Generative Adversarial Networks**](https://towardsdatascience.com/image-generation-in-10-minutes-with-generative-adversarial-networks-c2afc56bfa3b)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[**用生成对抗网络在 10 分钟内生成图像**](https://towardsdatascience.com/image-generation-in-10-minutes-with-generative-adversarial-networks-c2afc56bfa3b)'
- en: Using Unsupervised Deep Learning to Generate Handwritten Digits with Deep Convolutional
    GANs using TensorFlow and the…
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 使用无监督深度学习生成手写数字，利用深度卷积 GAN 和 TensorFlow…
- en: '[**Fast Neural Style Transfer in 5 Minutes with TensorFlow Hub & Magenta**](https://towardsdatascience.com/fast-neural-style-transfer-in-5-minutes-with-tensorflow-hub-magenta-110b60431dcc)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: Transferring the van Gogh’s Unique Style to Photos with Magenta’s Arbitrary
    Image Stylization Network and Deep Learning
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Orhan G. Yalçın](https://www.linkedin.com/in/orhangaziyalcin/)** is
    an AI Researcher in the legal domain. He is a qualified lawyer with business development
    and data science skills, and has previously worked as a legal trainee for Allen
    & Overy on capital markets, competition, and corporate law matters.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/mastering-tensorflow-variables-in-5-easy-step-5ba8062a1756).
    Reposted with permission.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '[Mastering TensorFlow Tensors in 5 Easy Steps](/2020/11/mastering-tensorflow-tensors-5-easy-steps.html)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deploying Trained Models to Production with TensorFlow Serving](/2020/11/serving-tensorflow-models.html)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Pruning Machine Learning Models in TensorFlow](/2020/12/pruning-machine-learning-models-tensorflow.html)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[TensorFlow for Computer Vision - Transfer Learning Made Easy](https://www.kdnuggets.com/2022/01/tensorflow-computer-vision-transfer-learning-made-easy.html)'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Build An AI Application with Python in 10 Easy Steps](https://www.kdnuggets.com/build-an-ai-application-with-python-in-10-easy-steps)'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Build a Command-Line App with Python in 7 Easy Steps](https://www.kdnuggets.com/build-a-command-line-app-with-python-in-7-easy-steps)'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Containerize Python Apps with Docker in 5 Easy Steps](https://www.kdnuggets.com/containerize-python-apps-with-docker-in-5-easy-steps)'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering Machine Learning with Python in 2022](https://www.kdnuggets.com/2022/02/7-steps-mastering-machine-learning-python.html)'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets™ News 22:n05, Feb 2: 7 Steps to Mastering Machine…](https://www.kdnuggets.com/2022/n05.html)'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
