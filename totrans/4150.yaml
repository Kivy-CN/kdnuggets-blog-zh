- en: 'Data Ingestion with Pandas: A Beginner Tutorial'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2022/04/data-ingestion-pandas-beginner-tutorial.html](https://www.kdnuggets.com/2022/04/data-ingestion-pandas-beginner-tutorial.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Data Ingestion with Pandas: A Beginner Tutorial](../Images/1ee6bcf1b4fdde28bdbc82763da6ffd9.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: '[Pandas](https://pandas.pydata.org/pandas-docs/stable/index.html) is easy to
    use, open-source data analysis tool which is widely used by data analytics, data
    engineering, data science, and machine learning engineers. It comes with powerful
    functions such as data cleaning & manipulations, supporting popular data formats,
    and data visualization using matplotlib. Most data science students only learn
    to import CSV, but at work, you have to deal with multiple data formats, and things
    can get complicated if you are doing it for the first time. In this guide, we
    will be focusing on importing CSV, Excel, SQL, HTML, and JSON datasets.'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: SQL
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For running SQL queries, we need to download SQLite database for Kaggle [Mental
    Health in the Tech Industry](https://www.kaggle.com/anth7310/mental-health-in-the-tech-industry)
    under the License [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/).
    The database contains three tables; Questions, Answer, and Survey.
  prefs: []
  type: TYPE_NORMAL
- en: '![Data Ingestion with Pandas: A Beginner Tutorial](../Images/fcc3a630e7e5303231d299d03ec017af.png)'
  prefs: []
  type: TYPE_IMG
- en: SQL Schema | [Kaggle](https://www.kaggle.com/anth7310/mental-health-in-the-tech-industry)
  prefs: []
  type: TYPE_NORMAL
- en: 'To import data from any SQL server, we need to create a connection (SQLAlchemy
    connectable / sqlite3), write SQL query, and use Pandas’s **read_sql_query()**
    function to convert output to dataframe. In our case, we will first connect *mental_health.sqlite*
    by using sqlite3 package and then pass the object into the **read_sql_query()**
    function. The last step is to write a query to import all columns from the *Question*
    table. If you are new to SQL, I will suggest you learn the basics by taking a
    free course: [Learn SQL | Codecademy](https://www.codecademy.com/learn/learn-sql).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: We have successfully converted SQL query into Pandas dataframe. It’s that easy.
  prefs: []
  type: TYPE_NORMAL
- en: '![Data Ingestion with Pandas: A Beginner Tutorial](../Images/c5ba35f1464ccb7fe1bfe0724bf589ab.png)'
  prefs: []
  type: TYPE_IMG
- en: HTML
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Web scraping is a complicated and time-consuming job in the tech world. You
    will be using [Beautiful Soup](https://beautiful-soup-4.readthedocs.io/en/latest/),
    [Selenium](https://www.selenium.dev/), and [Scrapy](https://scrapy.org/) to extract
    and clean your HTML data. Using Pandas **read_html()**, you can skip all the steps
    and directly import table data from the website into a dataframe. **It’s that
    easy**. In our case, we will be scraping the [COVID-19 Vaccination Tracker](https://www.pharmaceutical-technology.com/covid-19-vaccination-tracker/)
    website to extract tables containing COVID19 vaccination data.
  prefs: []
  type: TYPE_NORMAL
- en: '![Data Ingestion with Pandas: A Beginner Tutorial](../Images/5a7258252c504ceb3c88b7340462c8eb.png)'
  prefs: []
  type: TYPE_IMG
- en: COVID19 Vaccination Data | [Pharmaceutical Technology](https://www.pharmaceutical-technology.com/covid-19-vaccination-tracker/)
  prefs: []
  type: TYPE_NORMAL
- en: Just by using **pd.read_html()** we were able to extract the data from the website.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Our initial output was list and to convert list into a dataframe we have use
    **[0]** at the end. This will only display the first value in the list.
  prefs: []
  type: TYPE_NORMAL
- en: '**Note:** You need to experiment with your initial result to get the perfect
    result.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Data Ingestion with Pandas: A Beginner Tutorial](../Images/34bebd7afd402c10af4a31cdcfd053d2.png)'
  prefs: []
  type: TYPE_IMG
- en: CSV
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'CSV is the most common file format in data science. It is simple and can be
    accessed by multiple Python packages. The first thing you will learn in a data
    science course is to import a CSV file. In our case, we are using Kaggle’s [Bike
    Sharing Dataset](https://www.kaggle.com/yasserh/bike-sharing-dataset) under [CC0:
    Public Domain](https://creativecommons.org/publicdomain/zero/1.0/) license. The
    values in CSV are separated by commas as shown below.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Data Ingestion with Pandas: A Beginner Tutorial](../Images/b84155762108f436c8280b8294bdbd73.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: We will use the **read_csv()** function to import the dataset into Pandas dataframe.
    This function is quite powerful as we can parse dates, remove missing values and
    do a lot of data cleaning with just one line of code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: We have successfully loaded the CSV file and displayed the first five rows.
  prefs: []
  type: TYPE_NORMAL
- en: '![Data Ingestion with Pandas: A Beginner Tutorial](../Images/19ba1f5d0bb8d671b6cc8f61cc4e6eb8.png)'
  prefs: []
  type: TYPE_IMG
- en: Excel
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Excel sheets are still popular among data and business analytics professionals.
    In our case we will be converting the [U.S. Presidents and Debt](https://data.world/kevinnayar/us-presidents-and-debt)
    dataset by kevinnayar under [CC BY 2.0](https://creativecommons.org/licenses/by/2.0/)
    license into **.xlsx** format by using Microsoft Excel. Our Excel file contains
    two sheets but Pandas dataframe is a flat table, we will use **sheet_name** to
    import selected sheets into Pandas dataframe.
  prefs: []
  type: TYPE_NORMAL
- en: '![Data Ingestion with Pandas: A Beginner Tutorial](../Images/821a0b955235e2d4cbe7152a69d2f3fe.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: 'We will be using **read_excel()** to import our dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: The first parameter is file path.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The second is sheet_name: in our case we are importing the second sheet. The
    sheet numbers start from 0.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Third is index_col: as our dataset contains index columns, to avoid duplication,
    we will provide **index_col=<column_name>.**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![Data Ingestion with Pandas: A Beginner Tutorial](../Images/1418e9de94d6d65f9bc3ddc20a8eb4c5.png)'
  prefs: []
  type: TYPE_IMG
- en: JSON
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Reading JSON files is quite tricky as there are multiple formats that you need
    to understand. Sometimes, Pandas fails to import nested JSON files so we need
    to perform manual steps to import the file perfectly. JSON is the most common
    file format for the tech industry. It is preferred by web developers to data engineers.
    In our case, we are going to download the [Spotify Recommendation](https://www.kaggle.com/bricevergnou/spotify-recommendation)
    dataset under [CC0: Public Domain](https://creativecommons.org/publicdomain/zero/1.0/)
    license. The dataset contains good songs and bad songs JSON files. For this example,
    we will only use the *good.json* file. As we can observe, we are dealing with
    a nested dataset.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Data Ingestion with Pandas: A Beginner Tutorial](../Images/7ab0d0abb065bac0dd87d52b6f0af72e.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: Before doing any data processing let’s import the dataset without parameters
    by using the **read_json()** function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: As we can observe, the dataframe contains only one column, and it's all over
    the place. To debug this issue, we need to import the raw dataset and then parse
    it.
  prefs: []
  type: TYPE_NORMAL
- en: '![Data Ingestion with Pandas: A Beginner Tutorial](../Images/2a3a237fa062aecb33d1cf6604080de6.png)'
  prefs: []
  type: TYPE_IMG
- en: First, we will be importing raw JSON files using the **json** package and only
    selecting the *audio_features* subset. Finally, we will convert the JSON to Pandas
    dataframe by using the **json_normalize()** function.
  prefs: []
  type: TYPE_NORMAL
- en: It’s a success and we have finally parsed the JSON into a dataframe. If you
    are dealing with a multi-layer nested JSON file, try to import the raw data and
    then process the data so that the final output is a flat table.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![Data Ingestion with Pandas: A Beginner Tutorial](../Images/8506a1eb58677611a614320fa5e275ff.png)'
  prefs: []
  type: TYPE_IMG
- en: The code and all datasets are available at [**Deepnote**](https://deepnote.com/@abid/Data-Ingestion-with-Pandas-04Jajb5RSDWQY_RbkaJxjA)**.**
  prefs: []
  type: TYPE_NORMAL
- en: '**[Abid Ali Awan](https://www.polywork.com/kingabzpro)** ([@1abidaliawan](https://twitter.com/1abidaliawan))
    is a certified data scientist professional who loves building machine learning
    models. Currently, he is focusing on content creation and writing technical blogs
    on machine learning and data science technologies. Abid holds a Master''s degree
    in Technology Management and a bachelor''s degree in Telecommunication Engineering.
    His vision is to build an AI product using a graph neural network for students
    struggling with mental illness.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Introductory Pandas Tutorial](https://www.kdnuggets.com/2022/03/introductory-pandas-tutorial.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Beginner''s Guide to Pandas Melt Function](https://www.kdnuggets.com/2023/03/beginner-guide-pandas-melt-function.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Docker Tutorial for Data Scientists](https://www.kdnuggets.com/2023/07/docker-tutorial-data-scientists.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Pydantic Tutorial: Data Validation in Python Made Simple](https://www.kdnuggets.com/pydantic-tutorial-data-validation-in-python-made-simple)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Federated Learning: Collaborative Machine Learning with a Tutorial…](https://www.kdnuggets.com/2021/12/federated-learning-collaborative-machine-learning-tutorial-get-started.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[YOLOv5 PyTorch Tutorial](https://www.kdnuggets.com/2022/12/yolov5-pytorch-tutorial.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
