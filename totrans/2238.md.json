["```py\nimport pandas as pd\n\ntrain = pd.read_csv('DailyDelhiClimateTrain.csv')\ntest = pd.read_csv('DailyDelhiClimateTest.csv')\n\ntrain.head()\n```", "```py\ntrain[\"date\"] = pd.to_datetime(train[\"date\"])\ntest[\"date\"] = pd.to_datetime(test[\"date\"])\n\ntrain = train.set_index(\"date\")\ntest = test.set_index(\"date\")\n\ntrain[\"meantemp\"].plot(style=\"k\", figsize=(10, 5), label=\"train\")\ntest[\"meantemp\"].plot(style=\"b\", figsize=(10, 5), label=\"test\")\nplt.title(\"Mean Temperature Dehli Data\")\nplt.legend()\n```", "```py\npip install xgboost\n```", "```py\ndef create_time_feature(df):\n    df['dayofmonth'] = df['date'].dt.day\n    df['dayofweek'] = df['date'].dt.dayofweek\n    df['quarter'] = df['date'].dt.quarter\n    df['month'] = df['date'].dt.month\n    df['year'] = df['date'].dt.year\n    df['dayofyear'] = df['date'].dt.dayofyear\n    df['weekofyear'] = df['date'].dt.weekofyear\n    return df\n```", "```py\ntrain = create_time_feature(train)\ntest = create_time_feature(test)\n\ntrain.head() \n```", "```py\nX_train = train.drop('meantemp', axis =1)\ny_train = train['meantemp']\n\nX_test = test.drop('meantemp', axis =1)\ny_test = test['meantemp']\n```", "```py\nimport xgboost as xgb\n\nreg = xgb.XGBRegressor(n_estimators=1000)\nreg.fit(X_train, y_train, verbose = False)\n```", "```py\nxgb.plot_importance(reg)\n```", "```py\ntest['meantemp_Prediction'] = reg.predict(X_test)\n\ntrain['meantemp'].plot(style='k', figsize=(10,5), label = 'train')\ntest['meantemp'].plot(style='b', figsize=(10,5), label = 'test')\ntest['meantemp_Prediction'].plot(style='r', figsize=(10,5), label = 'prediction')\nplt.title('Mean Temperature Dehli Data')\nplt.legend()\n```", "```py\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error, mean_absolute_percentage_error\n\nprint('RMSE: ', round(mean_squared_error(y_true=test['meantemp'],y_pred=test['meantemp_Prediction']),3))\nprint('MAE: ', round(mean_absolute_error(y_true=test['meantemp'],y_pred=test['meantemp_Prediction']),3))\nprint('MAPE: ', round(mean_absolute_percentage_error(y_true=test['meantemp'],y_pred=test['meantemp_Prediction']),3))\n```"]