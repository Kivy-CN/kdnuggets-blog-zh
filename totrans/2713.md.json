["```py\npython setup.py install\n```", "```py\nTreatment    Outcome        w0\n0   2.964978   5.858518 -3.173399\n1   3.696709   7.945649 -1.936995\n2   2.125228   4.076005 -3.975566\n3   6.635687  13.471594  0.772480\n4   9.600072  19.577649  3.922406\n```", "```py\nrvar **=** 1 **if** np**.**random**.**uniform() **>**0.5 **else** 0 \ndata_dict **=** dowhy**.**datasets**.**xy_dataset(10000, effect**=**rvar, sd_error**=**0.2) \ndf **=** data_dict['df']\nprint(df[[\"Treatment\", \"Outcome\", \"w0\"]]**.**head())\n```", "```py\nmodel**=** CausalModel(\n        data**=**df,\n        treatment**=**data_dict[\"treatment_name\"],\n        outcome**=**data_dict[\"outcome_name\"],\n        common_causes**=**data_dict[\"common_causes_names\"],\n        instruments**=**data_dict[\"instrument_names\"])\nmodel**.**view_model(layout**=**\"dot\")\n**from** IPython.display **import** Image, display\ndisplay(Image(filename**=**\"causal_model.png\"))\n```", "```py\nidentified_estimand **=** model**.**identify_effect()\n```", "```py\nestimate **=** model**.**estimate_effect(identified_estimand,\n        method_name**=**\"backdoor.linear_regression\")\n*# Plot Slope of line between treamtent and outcome =causal effect*\ndowhy**.**plotter**.**plot_causal_effect(estimate, df[data_dict[\"treatment_name\"]], df[data_dict[\"outcome_name\"]])\n```", "```py\nres_random**=**model**.**refute_estimate(identified_estimand, estimate, method_name**=**\"random_common_cause\")\n```"]