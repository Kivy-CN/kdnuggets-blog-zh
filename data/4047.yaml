- en: Leveraging the Power of GPUs with CuPy in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用 CuPy 在 Python 中发挥 GPU 的威力
- en: 原文：[https://www.kdnuggets.com/leveraging-the-power-of-gpus-with-cupy-in-python](https://www.kdnuggets.com/leveraging-the-power-of-gpus-with-cupy-in-python)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/leveraging-the-power-of-gpus-with-cupy-in-python](https://www.kdnuggets.com/leveraging-the-power-of-gpus-with-cupy-in-python)
- en: '![Leveraging the Power of GPUs with CuPy in Python](../Images/48d4f1f7b5a660a04de8cf337c89a734.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![利用 CuPy 在 Python 中发挥 GPU 的威力](../Images/48d4f1f7b5a660a04de8cf337c89a734.png)'
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: What is CuPy?
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 CuPy？
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[CuPy](https://docs.cupy.dev/en/stable/overview.html) is a Python library that
    is compatible with NumPy and SciPy arrays, designed for GPU-accelerated computing.
    By replacing NumPy with CuPy syntax, you can run your code on NVIDIA CUDA or AMD
    ROCm platforms. This allows you to perform array-related tasks using GPU acceleration,
    which results in faster processing of larger arrays.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[CuPy](https://docs.cupy.dev/en/stable/overview.html) 是一个与 NumPy 和 SciPy 数组兼容的
    Python 库，旨在用于 GPU 加速计算。通过将 NumPy 替换为 CuPy 语法，你可以在 NVIDIA CUDA 或 AMD ROCm 平台上运行代码。这使你能够利用
    GPU 加速执行数组相关的任务，从而更快地处理更大的数组。'
- en: By swapping out just a few lines of code, you can take advantage of the massive
    parallel processing power of GPUs to significantly speed up array operations like
    indexing, normalization, and matrix multiplication.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 通过仅替换几行代码，你可以利用 GPU 的大规模并行处理能力，显著加速数组操作，如索引、归一化和矩阵乘法。
- en: CuPy also enables access to low-level CUDA features. It allows passing of `ndarrays`
    to existing CUDA C/C++ programs using RawKernels, streamlines performance with
    Streams, and enables direct calling of CUDA Runtime APIs.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: CuPy 还使得访问低级 CUDA 功能成为可能。它允许使用 RawKernels 将 `ndarrays` 传递到现有的 CUDA C/C++ 程序，利用
    Streams 简化性能，并直接调用 CUDA Runtime API。
- en: Installing CuPy
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 CuPy
- en: You can install CuPy using pip, but before that you have to find out the right
    CUDA version using the command below.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 pip 安装 CuPy，但在此之前，你需要使用下面的命令找出正确的 CUDA 版本。
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: It seems that the current version of Google Colab is using CUDA version 11.8\.
    Therefore, we will proceed to install the `cupy-cuda11x` version.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 目前 Google Colab 的版本似乎使用的是 CUDA 11.8。因此，我们将继续安装 `cupy-cuda11x` 版本。
- en: If you are running on an older CUDA version, I have provided a table below to
    help you determine the appropriate CuPy package to install.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是较旧的 CUDA 版本，我提供了一个表格来帮助你确定要安装的适当 CuPy 包。
- en: '![Leveraging the Power of GPUs with CuPy in Python](../Images/4aa2dd692a6ddc4b946a5d37a0d62008.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![利用 CuPy 在 Python 中发挥 GPU 的威力](../Images/4aa2dd692a6ddc4b946a5d37a0d62008.png)'
- en: Image from [CuPy 12.2.0](https://docs.cupy.dev/en/stable/install.html)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自 [CuPy 12.2.0](https://docs.cupy.dev/en/stable/install.html)
- en: After selecting the right version, we will install the Python package using
    pip.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 选择正确版本后，我们将使用 pip 安装 Python 包。
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You can also use the `conda` command to automatically detect and install the
    correct version of the CuPy package if you have Anaconda installed.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你安装了 Anaconda，你也可以使用`conda`命令自动检测并安装正确版本的 CuPy 包。
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Basics of CuPy
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CuPy 基础知识
- en: In this section, we will compare the syntax of CuPy with Numpy and they are
    95% similar. Instead of using `np` you will be replacing it with `cp`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将比较 CuPy 和 Numpy 的语法，它们的相似度高达 95%。使用 `np` 的地方，你将用 `cp` 替代。
- en: We will first create a NumPy and CuPy array using the Python list. After that,
    we will calculate the norm of the vector.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先使用 Python 列表创建一个 NumPy 和 CuPy 数组。之后，我们将计算向量的范数。
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: As we can see, we got similar results.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，我们得到了类似的结果。
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: To convert a NumPy to CuPy array, you can simply use `cp.asarray(X)`.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 NumPy 数组转换为 CuPy 数组，你可以简单地使用 `cp.asarray(X)`。
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Or, use `.get()`, to convert CuPy to Numpy array.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，使用 `.get()` 将 CuPy 转换为 NumPy 数组。
- en: '[PRE8]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Performance Comparison
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 性能比较
- en: In this section, we will be comparing the performance of NumPy and CuPy.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将比较 NumPy 和 CuPy 的性能。
- en: We will use `time.time()` to time the code execution time. Then, we will create
    a 3D NumPy array and perform some mathematical functions.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 `time.time()` 来计时代码执行时间。然后，我们将创建一个 3D NumPy 数组并执行一些数学函数。
- en: '[PRE10]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Similarly, we will create a 3D CuPy array, perform mathematical operations,
    and time it for performance.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们将创建一个 3D CuPy 数组，执行数学运算，并对其性能进行计时。
- en: '[PRE12]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: To calculate the difference, we will divide NumPy time with CuPy time and It
    seems like we got above 500X performance boost while using CuPy.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 为了计算差异，我们将 NumPy 时间与 CuPy 时间进行比较，使用 CuPy 时我们似乎得到了超过 500 倍的性能提升。
- en: '[PRE14]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '**Note:**  To achieve better results, it is recommended to conduct a few warm-up
    runs to minimize timing fluctuations.'
  id: totrans-49
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意：** 为了取得更好的效果，建议进行几次热身测试，以减少时间波动。'
- en: Beyond its speed advantage, CuPy offers superior multi-GPU support, enabling
    harnessing of collective power of multiple GPUs.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 除了速度优势外，CuPy 还提供了优越的多 GPU 支持，使得可以利用多个 GPU 的集体力量。
- en: Also, you can check out my [Colab notebook](https://colab.research.google.com/drive/1xhORH4VQr5vuaDVsvKY54JW_dIE5EMUz?usp=sharing),
    if you want to compare the results.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想对比结果，也可以查看我的 [Colab 笔记本](https://colab.research.google.com/drive/1xhORH4VQr5vuaDVsvKY54JW_dIE5EMUz?usp=sharing)。
- en: Conclusion
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In conclusion, CuPy provides a simple way to accelerate NumPy code on NVIDIA
    GPUs. By making just a few modifications to swap out NumPy for CuPy, you can experience
    order-of-magnitude speedups on array computations. This performance boost allows
    you to work with much larger datasets and models, enabling more advanced machine
    learning and scientific computing.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，CuPy 提供了一种简单的方法来加速 NVIDIA GPU 上的 NumPy 代码。通过仅做少量修改将 NumPy 替换为 CuPy，你可以在数组计算中体验数量级的加速。这种性能提升使你能够处理更大规模的数据集和模型，从而实现更高级的机器学习和科学计算。
- en: Resources
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资源
- en: 'Documentation: [CuPy – NumPy & SciPy for GPU — CuPy 12.2.0 documentation](https://docs.cupy.dev/en/stable/index.html)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '文档: [CuPy – NumPy 和 SciPy 的 GPU 实现 — CuPy 12.2.0 文档](https://docs.cupy.dev/en/stable/index.html)'
- en: 'GitHub: [cupy/cupy](https://github.com/cupy/cupy)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'GitHub: [cupy/cupy](https://github.com/cupy/cupy)'
- en: 'Examples: [cupy/examples](https://github.com/cupy/cupy/tree/main/examples)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '示例: [cupy/examples](https://github.com/cupy/cupy/tree/main/examples)'
- en: 'API: [API Reference](https://docs.cupy.dev/en/stable/reference/)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'API: [API 参考](https://docs.cupy.dev/en/stable/reference/)'
- en: '[](https://www.polywork.com/kingabzpro)****[Abid Ali Awan](https://www.polywork.com/kingabzpro)****
    ([@1abidaliawan](https://www.linkedin.com/in/1abidaliawan)) is a certified data
    scientist professional who loves building machine learning models. Currently,
    he is focusing on content creation and writing technical blogs on machine learning
    and data science technologies. Abid holds a Master''s degree in technology management
    and a bachelor''s degree in telecommunication engineering. His vision is to build
    an AI product using a graph neural network for students struggling with mental
    illness.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://www.polywork.com/kingabzpro)****[Abid Ali Awan](https://www.polywork.com/kingabzpro)****
    ([@1abidaliawan](https://www.linkedin.com/in/1abidaliawan)) 是一位认证的数据科学专业人士，热衷于构建机器学习模型。目前，他专注于内容创作，并撰写有关机器学习和数据科学技术的技术博客。Abid
    拥有技术管理硕士学位和电信工程学士学位。他的愿景是利用图神经网络构建一款 AI 产品，帮助那些面临心理健康问题的学生。'
- en: More On This Topic
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Mastering GPUs: A Beginner''s Guide to GPU-Accelerated DataFrames in Python](https://www.kdnuggets.com/2023/07/mastering-gpus-beginners-guide-gpu-accelerated-dataframes-python.html)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[掌握 GPUs：Python 中 GPU 加速数据框的初学者指南](https://www.kdnuggets.com/2023/07/mastering-gpus-beginners-guide-gpu-accelerated-dataframes-python.html)'
- en: '[From Google Colab to a Ploomber Pipeline: ML at Scale with GPUs](https://www.kdnuggets.com/2022/03/google-colab-ploomber-pipeline-ml-scale-gpus.html)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[从 Google Colab 到 Ploomber 流水线：利用 GPUs 实现大规模 ML](https://www.kdnuggets.com/2022/03/google-colab-ploomber-pipeline-ml-scale-gpus.html)'
- en: '[Leveraging Geospatial Data in Python with GeoPandas](https://www.kdnuggets.com/leveraging-geospatial-data-in-python-with-geopandas)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[利用 GeoPandas 在 Python 中处理地理空间数据](https://www.kdnuggets.com/leveraging-geospatial-data-in-python-with-geopandas)'
- en: '[In-Database Analytics: Leveraging SQL''s Analytic Functions](https://www.kdnuggets.com/2023/07/indatabase-analytics-leveraging-sql-analytic-functions.html)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据库内分析：利用 SQL 的分析函数](https://www.kdnuggets.com/2023/07/indatabase-analytics-leveraging-sql-analytic-functions.html)'
- en: '[SQL For Data Science: Understanding and Leveraging Joins](https://www.kdnuggets.com/2023/08/sql-data-science-understanding-leveraging-joins.html)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学中的 SQL：理解和利用连接](https://www.kdnuggets.com/2023/08/sql-data-science-understanding-leveraging-joins.html)'
- en: '[Leveraging XGBoost for Time-Series Forecasting](https://www.kdnuggets.com/2023/08/leveraging-xgboost-timeseries-forecasting.html)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[利用 XGBoost 进行时间序列预测](https://www.kdnuggets.com/2023/08/leveraging-xgboost-timeseries-forecasting.html)'
