- en: SQL-like Query Language for Real-time Streaming Analytics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2015/03/sql-query-language-realtime-streaming-analytics.html](https://www.kdnuggets.com/2015/03/sql-query-language-realtime-streaming-analytics.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: By Srinath Perera ([@srinath_perera](https://twitter.com/srinath_perera)).
  prefs: []
  type: TYPE_NORMAL
- en: I was at [Strata+Hadoop World 2015](http://strataconf.com/big-data-conference-ca-2015)
    last week and certainly interest for realtime analytics was at it’s top.
  prefs: []
  type: TYPE_NORMAL
- en: Realtime analytics, or what people call Realtime Analytics, has two flavors.
  prefs: []
  type: TYPE_NORMAL
- en: Realtime Streaming Analytics ( static queries given once that do not change,
    they process data as they come in without storing. CEP, Apache Strom, Apache Samza
    etc., are examples of this.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Realtime Interactive/Ad-hoc Analytics (user issue ad-hoc dynamic queries and
    system responds). Druid, SAP Hana, VoltDB, MemSQL, Apache Drill are examples of
    this.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In this post, I am focusing on Realtime Streaming Analytics. (Ad-hoc analytics
    uses a SQL like query language anyway.)
  prefs: []
  type: TYPE_NORMAL
- en: '![database size time analytics](../Images/df8caa7ba3c18e86df3a5eb6f177b447.png)'
  prefs: []
  type: TYPE_IMG
- en: Still when thinking about Realtime Analytics, people think only counting use
    cases. However, that is the tip of the iceberg. Due to the time dimension of the
    data inherent in realtime use cases, there are lot more you can do. Lets us look
    at few common patterns.
  prefs: []
  type: TYPE_NORMAL
- en: Simple counting (e.g. failure count)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Counting with Windows ( e.g. failure count every hour)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Preprocessing: filtering, transformations (e.g. data cleanup)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Alerts , thresholds (e.g. Alarm on high temperature)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Data Correlation, Detect missing events, detecting erroneous data (e.g. detecting
    failed sensors)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Joining event streams (e.g. detect a hit on soccer ball)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Merge with data in a database, collect, update data conditionally Detecting
    Event Sequence Patterns (e.g. small transaction followed by large transaction)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tracking - follow some related entity’s state in space, time etc. (e.g. location
    of airline baggage, vehicle, tracking wild life)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Detect trends – Rise, turn, fall, Outliers, Complex trends like triple bottom
    etc., (e.g. algorithmic trading, SLA, load balancing)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Learning a Model (e.g. Predictive maintenance)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Predicting next value and corrective actions (e.g. automated car)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why we need SQL like query language for Realtime Streaming Analytics?
  prefs: []
  type: TYPE_NORMAL
- en: Each of above has come up in use cases, and we have implemented them using SQL
    like CEP query languages. Knowing the internal of implementing the CEP core concepts
    like sliding windows, temporal query patterns, I do not think every Streaming
    use case developer should rewrite those. Algorithms are not trivial, and those
    are very hard to get right!
  prefs: []
  type: TYPE_NORMAL
- en: Instead, we need higher levels of abstractions. We should implement those once
    and for all, and reuse them. Best lesson we can learn from Hive and Hadoop, which
    does exactly that for batch analytics. I have explained Big Data with Hive many
    time, most gets it right away. Hive has become the major programming API most
    Big Data use cases.
  prefs: []
  type: TYPE_NORMAL
- en: Following is list of reasons for SQL like query language.
  prefs: []
  type: TYPE_NORMAL
- en: Realtime analytics are hard. Every developer do not want to hand implement sliding
    windows and temporal event patterns, etc.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Easy to follow and learn for people who knows SQL, which is pretty much everybody
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: SQL like languages are Expressive, short, sweet and fast!!
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: SQL like languages define core operations that covers 90% of problems
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: They experts dig in when they like!
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Realtime analytics runtime can better optimize the executions with SQL like
    model. Most optimisations are already studied, and there is lot you can just borrow
    from database optimisations.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally what are such languages? There are lot defined in world of Complex Event
    processing (e.g. WSO2 Siddhi, Esper, Tibco StreamBase, IBM Infosphere Streams
    etc. SQL stream has fully ANSI SQL comment version of it. Last week I did a talk
    on Strata discussing this problem in detail and how CEP could match the bill.
    Here are the slides
  prefs: []
  type: TYPE_NORMAL
- en: '**[Scalable Realtime Analytics with declarative SQL like Complex Event Processing
    Scripts](http://www.slideshare.net/hemapani/scalable-realtime-analytics-with-declarative-sql-like-complex-event-processing-scripts
    "Scalable Realtime Analytics with declarative SQL like Complex Event Processing
    Scripts")** from **[Srinath Perera](http://www.slideshare.net/hemapani)**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Bio: [Srinath Perera](http://people.apache.org/~hemapani/) is a scientist,
    software architect, and a programmer that works on distributed systems.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Original: [srinathsview.blogspot.com/2015/02/why-we-need-sql-like-query-language-for.html](https://srinathsview.blogspot.com/2015/02/why-we-need-sql-like-query-language-for.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Interview: Ted Dunning, MapR on The Real Meaning of Real-Time in Big Data](/2015/03/interview-ted-dunning-mapr-real-time-big-data.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[8 Trends In Big Data For 2015](/2015/01/recruiter-8-trends-big-data-2015.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Upcoming Webcasts on Analytics, Big Data, Data Science – Mar 10 and beyond](/2015/03/upcoming-webcasts-mar10-analytics-big-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Query Your Pandas DataFrames with SQL](https://www.kdnuggets.com/2021/10/query-pandas-dataframes-sql.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Can We Query a Table with T5?](https://www.kdnuggets.com/2022/05/query-table-t5.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SQL Query Optimization Techniques](https://www.kdnuggets.com/2023/03/sql-query-optimization-techniques.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Tips for Improving SQL Query Performance](https://www.kdnuggets.com/5-tips-for-improving-sql-query-performance)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Build a Streaming Semi-structured Analytics Platform on Snowflake](https://www.kdnuggets.com/2023/07/build-streaming-semistructured-analytics-platform-snowflake.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Simple and Fast Data Streaming for Machine Learning Projects](https://www.kdnuggets.com/2022/11/simple-fast-data-streaming-machine-learning-projects.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
