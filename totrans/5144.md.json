["```py\nDELIMITER $$\n/* creating a trigger whose name is age_checker */\n  CREATE TRIGGER age_checker\n     /* defining when our trigger run before inserting or after inserting\n        in our case we choose before inserting that's why we use BEFORE */\n      BEFORE INSERT ON Voter FOR EACH ROW\n      BEGIN \n     /* Now we are checking the inserted value in our age column if it is \n        less then 18 then show our error message */ \n        IF NEW.age < 18\n        THEN \n           SIGNAL SQLSTATE '45000'\n              /* setting our error message in the MESSAGE_TEXT */\n              SET MESSAGE_TEXT = 'AGE MUST BE >= 18';\n        END IF;\n     END;\nDELIMETER;\n```", "```py\n/* count function used to count number of gender after partition and then \n   show output in no_of_male_female column */\n\nSELECT * , COUNT(gender) OVER (PARTITION BY gender) \nAS no_of_male_female FROM EMPLOYEE;\n```", "```py\n/* This command is used to select first two rows */\n\nSELECT * FROM EMPLOYEE LIMIT 2;\n\n/* This command is used to select 3 rows after eliminating first two rows */\n\nSELECT * FROM EMPLOYEE LIMIT 2,3;\n```", "```py\nCOALESCE(value_1,value_2,......, value_n)\n```", "```py\n/* So we are targeting the location column from our EMPLOYEE table and \n   then replacing the NULL values with Missing_value text */\nSELECT COALESCE(location,\"Missing_value\") as Location\nFROM EMPLOYEE;\n```"]