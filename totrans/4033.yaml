- en: How To Comment Your Python Code as a Data Scientist
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/how-to-comment-your-python-code-as-a-data-scientist](https://www.kdnuggets.com/how-to-comment-your-python-code-as-a-data-scientist)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![How To Comment Your Python Code as a Data Scientist](../Images/5ccfd6e8042e67b15a468c68bb8e8726.png)'
  prefs: []
  type: TYPE_IMG
- en: Image generated by DALL·E 3
  prefs: []
  type: TYPE_NORMAL
- en: Data scientists were placed in an exciting position; while their job in the
    modern era requires them to use the programming language, there are still many
    business aspects their job needs to remember. That’s why the Python code used
    by Data Scientists usually reflects storytelling on how to solve a business problem.
    The environment for data scientists is also remarkable; we use the Jupyter Notebook
    IDE, which allows for an excellent way to experiment with data manipulation and
    model development.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: With a different way of coding activity, data scientists would do things differently
    during the programming activity. It includes the commenting activity, which is
    an activity to explain your code. For data scientists who constantly have changes
    of requirements and work collaboratively, it’s crucial to provide an adequate
    explanation of the code via commenting.
  prefs: []
  type: TYPE_NORMAL
- en: This article will discuss how to perform Python code commenting as a data scientist.
    We would discuss the various points that would improve your activity and bring
    value to anyone who reads your codes. Let’s get into it.
  prefs: []
  type: TYPE_NORMAL
- en: The Types of Comments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we go further, let’s learn a little about two different types of commenting.
    The first one is the single-line commenting, which uses the ‘**#**’ notation in
    the code. It’s usually used for a simple explanation of the code. For example,
    the below code exemplifies the usage of single-line commenting.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The other way to comment is using the multi-line method, which employs triple
    quotes. Technically, they are not comments but string objects, but Python would
    ignore them if we don’t assign them to a variable. We can see them in action with
    the following example.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: General Tips for Commenting
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will discuss some general tips for commenting. It is not
    necessarily applicable for data scientists as these tips are a best practice for
    programmers, but it’s good to remember. The tips are:'
  prefs: []
  type: TYPE_NORMAL
- en: Consider placing the comment in a separate line directly above the code we want
    to explain to increase the readability.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Consistent in the commenting style throughout the code you are working on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Avoid using hard-to-understand jargon and technical terms if you know the audience
    would not understand them.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Only commenting if it’s adding value to avoid explaining something that obvious.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Maintain and update the comment if it is not relevant anymore.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: These are the general guidelines to provide a better-commenting experience.
    Now, let’s move to a more specific one for the data scientist.
  prefs: []
  type: TYPE_NORMAL
- en: Commenting Tips for Data Scientists
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For the data scientist, the coding activity would be different from that of
    a software engineer or web developer. That’s why there would be differences in
    the commenting activity. Here are some tips that are specific to us data scientists.
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Use Commenting to clarify complex processes or activities
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The data science activity would involve many experimental processes that might
    confuse the readers or our future selves if we didn’t explain them. The comment
    on the code would help us explain the intention better, especially if many steps
    are involved. For example, the code below would explain how we remove outliers
    by normalization and scaling.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The comment above explains what was done for each process and the concept behind
    them. Specifying the concepts we used in the code is essential to understand what
    we have done.
  prefs: []
  type: TYPE_NORMAL
- en: It’s not limited to preprocessing but could be commented on in any data science
    steps. From data retrieval to model monitoring, commenting on things for anybody
    to understand is good practice. Remember that as a data scientist, our comment
    could become the bridge between the code and analytical insight.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Having a Commenting Standard
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Data science activity is a collaboration process, so having a standard structure
    that everyone understands is good. It’s also helpful even if you work solo, as
    you have the standard that you would know. For example, you could standardize
    the comment for every function you made.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The above is a standard example, as you can create something independently.
    Don’t forget to use the same style, language, and abbreviations when you have
    a standard like this.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Use Comments to Help the Workflow
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In a collaborative environment, commenting is essential to help the team understand
    the workflow. We can use the comment to help understand when there are new code
    updates or what needs to be done next. For example, an update in another function
    causes bugs in our process, so we need to fix the bugs next.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 4\. Implement the Markdown Notebook Cells
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Data Scientist IDE is quite remarkable as we use the Notebook for experimentation.
    Using the cell in the notebook, we can isolate each code so that it can independently
    run without a need to run the whole code. The notebook cell is not limited to
    the code but can be transformed into a Markdown cell.
  prefs: []
  type: TYPE_NORMAL
- en: Markdown is a formatting language that describes how the text should look like.
    In the cell, markdown could further explain the code below. The advantage of using
    the Markdown is that we can comment in more detail than the standard commenting
    process. You can even add tables, images, LaTeX, and many more.
  prefs: []
  type: TYPE_NORMAL
- en: For example, the image below shows how we use Markdown to explain our project,
    the aim and the steps.
  prefs: []
  type: TYPE_NORMAL
- en: '![How To Comment Your Python Code as a Data Scientist](../Images/0fefe0bfac47688588ce11a0e0d01160.png)'
  prefs: []
  type: TYPE_IMG
- en: You can read further about Jupyter Markdown Cell in their [documentation](https://jupyter-notebook.readthedocs.io/en/stable/examples/Notebook/Working%20With%20Markdown%20Cells.html)
    to understand further what you can do.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Commenting is an integral part of the data scientist activity as it helps the
    reader clarify what happened with the code. For a data scientist, the comment
    process differs slightly from the software engineer or web developer, as our work
    process is different. That’s why this article gives some tips that you can use
    for commenting as a data scientist. The tips are:'
  prefs: []
  type: TYPE_NORMAL
- en: Use Commenting to clarify complex processes or activities
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Having a Commenting Standard
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use Comments to Help the Workflow
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Implement the Markdown Notebook Cells
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: I hope it helps.
  prefs: []
  type: TYPE_NORMAL
- en: '**[](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**[Cornellius Yudha
    Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**** is a data science
    assistant manager and data writer. While working full-time at Allianz Indonesia,
    he loves to share Python and data tips via social media and writing media. Cornellius
    writes on a variety of AI and machine learning topics.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Managing Your Reusable Python Code as a Data Scientist](https://www.kdnuggets.com/2021/06/managing-reusable-python-code-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets™ News 22:n01, Jan 5: 3 Tools to Track and Visualize…](https://www.kdnuggets.com/2022/n01.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[3 Simple Ways to Speed Up Your Python Code](https://www.kdnuggets.com/2022/10/3-simple-ways-speed-python-code.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[3 Tools to Track and Visualize the Execution of Your Python Code](https://www.kdnuggets.com/2021/12/3-tools-track-visualize-execution-python-code.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Speeding Up Your Python Code with NumPy](https://www.kdnuggets.com/speeding-up-your-python-code-with-numpy)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Optimizing Python Code Performance: A Deep Dive into Python Profilers](https://www.kdnuggets.com/2023/02/optimizing-python-code-performance-deep-dive-python-profilers.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
