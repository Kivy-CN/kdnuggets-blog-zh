- en: NumPy for Image Processing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NumPy用于图像处理
- en: 原文：[https://www.kdnuggets.com/numpy-for-image-processing](https://www.kdnuggets.com/numpy-for-image-processing)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/numpy-for-image-processing](https://www.kdnuggets.com/numpy-for-image-processing)
- en: '![NumPy for Image Processing](../Images/94513646e5d024dabc980fa9cecef53a.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![NumPy用于图像处理](../Images/94513646e5d024dabc980fa9cecef53a.png)'
- en: Image by [freepik](https://www.freepik.com/free-photo/combination-facial-features-concept_36029178.htm#fromView=search&page=1&position=19&uuid=e5fa53f4-8eb8-4a51-ac7c-bc74f85aa07d)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图像来源于 [freepik](https://www.freepik.com/free-photo/combination-facial-features-concept_36029178.htm#fromView=search&page=1&position=19&uuid=e5fa53f4-8eb8-4a51-ac7c-bc74f85aa07d)
- en: NumPy is a robust tool for image processing in Python. It lets you manipulate
    images using array operations. This article explores several image processing
    techniques using NumPy.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy是Python中强大的图像处理工具。它允许你使用数组操作来处理图像。本文探讨了使用NumPy的几种图像处理技术。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织进行IT工作'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Importing Libraries
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入库
- en: 'We must import the required libraries: PIL, NumPy, and Matplotlib. PIL is used
    for opening images. NumPy allows for efficient array operations and image processing.
    Matplotlib is used for visualizing images'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须导入所需的库：PIL、NumPy和Matplotlib。PIL用于打开图像。NumPy允许高效的数组操作和图像处理。Matplotlib用于可视化图像。
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Crop Image
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 裁剪图像
- en: We define coordinates to mark the area we want to crop from the image. The new
    image contains only the selected part and discards the rest.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义坐标以标记要从图像中裁剪的区域。新图像仅包含选定部分，丢弃其余部分。
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![Cropped_image](../Images/2fb66f7dbcc3909e72e85a7c6614a37a.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![裁剪图像](../Images/2fb66f7dbcc3909e72e85a7c6614a37a.png)'
- en: Rotate Image
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 旋转图像
- en: We rotate the image array 90 degrees counterclockwise using NumPy's **'rot90'**
    function.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用NumPy的**'rot90'**函数将图像数组逆时针旋转90度。
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![Rotated_image](../Images/a081fe73d36876f650f6c5dc5e6a8bea.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![旋转图像](../Images/a081fe73d36876f650f6c5dc5e6a8bea.png)'
- en: Flip Image
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 翻转图像
- en: We use NumPy's **'fliplr'** function to flip the image array horizontally.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用NumPy的**'fliplr'**函数水平翻转图像数组。
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![Flipped_image](../Images/1a246e242681af3078cf7e7a27046a65.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![翻转图像](../Images/1a246e242681af3078cf7e7a27046a65.png)'
- en: Negative of an Image
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图像的负片
- en: The negative of an image is made by reversing its pixel values. In grayscale
    images, each pixel's value is subtracted from the maximum (255 for 8-bit images).
    In color images, this is done separately for each color channel.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图像的负片是通过反转其像素值来制作的。在灰度图像中，每个像素的值从最大值（8位图像为255）中减去。在彩色图像中，这是为每个颜色通道单独完成的。
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Negative_image](../Images/0e351b24bd7a7621b56296bd353c69e5.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![负片图像](../Images/0e351b24bd7a7621b56296bd353c69e5.png)'
- en: Binarize Image
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 二值化图像
- en: Binarizing an image converts it to black and white. Each pixel is marked black
    or white based on a threshold value. Pixels that are less than the threshold become
    0 (black) and above those above it become 255 (white).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 二值化图像将其转换为黑白图像。每个像素根据阈值标记为黑色或白色。小于阈值的像素变为0（黑色），大于阈值的像素变为255（白色）。
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Binarize_image](../Images/e4b7c0bad77818b6bfd37654d0aa951f.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![二值化图像](../Images/e4b7c0bad77818b6bfd37654d0aa951f.png)'
- en: Color Space Conversion
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 颜色空间转换
- en: Color space conversion changes an image from one color model to another. This
    is done by changing the array of pixel values. We use a weighted sum of the RGB
    channels to convert a color image to a grayscale.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 颜色空间转换将图像从一种颜色模型转换为另一种。这是通过改变像素值的数组来完成的。我们使用RGB通道的加权和将彩色图像转换为灰度图像。
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Color_conversion](../Images/b401b33889ddb0569abcc086abc5e8bf.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![颜色转换](../Images/b401b33889ddb0569abcc086abc5e8bf.png)'
- en: Pixel Intensity Histogram
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 像素强度直方图
- en: The histogram shows the distribution of pixel values in an image. The image
    is flattened into a one-dimensional array to compute the histogram.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 直方图显示了图像中像素值的分布。图像被展平为一维数组以计算直方图。
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![Histogram](../Images/48edb31106b04096721b51cf892eb592.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![直方图](../Images/48edb31106b04096721b51cf892eb592.png)'
- en: Masking Image
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图像掩膜
- en: Masking an image means showing or hiding parts based on rules. Pixels marked
    as 1 are kept while pixels marked as 0 are hidden.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 掩膜图像意味着根据规则显示或隐藏部分内容。标记为 1 的像素被保留，而标记为 0 的像素被隐藏。
- en: '[PRE8]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![Masked_image](../Images/b255bd686a67722dd9d15b6483165418.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![掩膜图像](../Images/b255bd686a67722dd9d15b6483165418.png)'
- en: Wrapping Up
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: This article showed different ways to process images using NumPy. We used PIL,
    NumPy and Matplotlib to crop, rotate, flip, and binarize images. Additionally,
    we learned about creating image negatives, changing color spaces, making histograms,
    and applying masks.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 本文展示了使用 NumPy 处理图像的不同方法。我们使用了 PIL、NumPy 和 Matplotlib 来裁剪、旋转、翻转和二值化图像。此外，我们了解了创建图像负片、改变色彩空间、制作直方图以及应用掩膜。
- en: '**[Jayita Gulati](https://www.linkedin.com/in/jayitagulati1998/)** is a machine
    learning enthusiast and technical writer driven by her passion for building machine
    learning models. She holds a Master''s degree in Computer Science from the University
    of Liverpool.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Jayita Gulati](https://www.linkedin.com/in/jayitagulati1998/)** 是一位对构建机器学习模型充满热情的机器学习爱好者和技术作家。她拥有利物浦大学的计算机科学硕士学位。'
- en: More On This Topic
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Transfer Learning for Image Recognition and Natural Language Processing](https://www.kdnuggets.com/2022/01/transfer-learning-image-recognition-natural-language-processing.html)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[图像识别和自然语言处理的迁移学习](https://www.kdnuggets.com/2022/01/transfer-learning-image-recognition-natural-language-processing.html)'
- en: '[How to Convert an RGB Image to Grayscale](https://www.kdnuggets.com/2019/12/convert-rgb-image-grayscale.html)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何将 RGB 图像转换为灰度图像](https://www.kdnuggets.com/2019/12/convert-rgb-image-grayscale.html)'
- en: '[Image Classification with Convolutional Neural Networks (CNNs)](https://www.kdnuggets.com/2022/05/image-classification-convolutional-neural-networks-cnns.html)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用卷积神经网络 (CNNs) 进行图像分类](https://www.kdnuggets.com/2022/05/image-classification-convolutional-neural-networks-cnns.html)'
- en: '[Find a Picture in an Image Without Marking it Up](https://www.kdnuggets.com/2022/09/find-picture-image-without-marking.html)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在不标记图像的情况下找到图像中的图片](https://www.kdnuggets.com/2022/09/find-picture-image-without-marking.html)'
- en: '[8 Best Python Image Manipulation Tools](https://www.kdnuggets.com/2022/11/8-best-python-image-manipulation-tools.html)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[8 种最佳 Python 图像处理工具](https://www.kdnuggets.com/2022/11/8-best-python-image-manipulation-tools.html)'
- en: '[A Guide to Train an Image Classification Model Using Tensorflow](https://www.kdnuggets.com/2022/12/guide-train-image-classification-model-tensorflow.html)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Tensorflow 训练图像分类模型指南](https://www.kdnuggets.com/2022/12/guide-train-image-classification-model-tensorflow.html)'
