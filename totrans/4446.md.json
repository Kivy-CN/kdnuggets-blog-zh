["```py\ntuned_lda = tune_model(model='lda', supervised_target='status', estimator='xgboost')\n```", "```py\n#tune with default n_iter i.e. 10\ntuned_dt1 = tune_model('dt')\n\n#tune with n_iter = 50\ntuned_dt2 = tune_model('dt', n_iter = 50)\n```", "```py\n# import regression module\nfrom pycaret.regression import *\n\n# init setup\nreg1 = setup(data, target = 'charges', silent=True, \n            categorical_features=['sex', 'smoker', 'region', 'children'], \n            numeric_features=['age', 'bmi'])\n```", "```py\nfrom pycaret.clustering import *\nclu1 = setup(data, ignore_features = ['Country Name', 'Indicator Name'])\n```", "```py\n# Importing dataset\nfrom pycaret.datasets import get_data\n\ncredit = get_data('credit')\n# Importing module and initializing setup\nfrom pycaret.classification import *\nclf1 = setup(data = credit, target = 'default')\n\n# create a model\nxgboost = create_model('xgboost')\n\n# optimize threshold for trained model\noptimize_threshold(xgboost, true_negative = 1500, false_negative = -5000)\n```", "```py\npredict_model(xgboost, probability_threshold=0.2)\n```"]