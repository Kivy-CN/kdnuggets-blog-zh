["```py\nimport numpy as np\nfrom scipy import stats \nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\n```", "```py\nfrom sklearn import datasets\niris = datasets.load_iris()\nsep_length = iris.data[:,0]\na_1, a_2 = train_test_split(sep_length, test_size=0.4, random_state=0)\nb_1, b_2 = train_test_split(sep_length, test_size=0.4, random_state=1)\n```", "```py\nmu1 = np.mean(a_1)\n\nmu2 = np.mean(b_1)\n\nnp.std(a_1)\n\nnp.std(b_1) \n```", "```py\nstats.ttest_ind(a_1, b_1, equal_var = False)\n```", "```py\nTtest_indResult(statistic=0.830066093774641, pvalue=0.4076270841218671)\n```", "```py\nstats.ttest_ind(b_1, a_1, equal_var=False)\n```", "```py\nTtest_indResult(statistic=-0.830066093774641, pvalue=0.4076270841218671)\n```", "```py\nstats.ttest_ind(a_1, b_1, equal_var=True)\n```", "```py\nTtest_indResult(statistic=0.830066093774641, pvalue=0.4076132965045395)\n```", "```py\na_1, a_2 = train_test_split(sep_length, test_size=0.4, random_state=0)\nb_1, b_2 = train_test_split(sep_length, test_size=0.5, random_state=1)\n```", "```py\nmu1 = np.mean(a_1)\n\nmu2 = np.mean(b_1)\n\nnp.std(a_1)\n\nnp.std(b_1) \n```", "```py\nstats.ttest_ind(a_1, b_1, equal_var = False)\n```", "```py\nstats.ttest_ind(a_1, b_1, equal_var = False)\n```"]