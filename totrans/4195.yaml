- en: Deploying Your First Machine Learning API
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署你的第一个机器学习 API
- en: 原文：[https://www.kdnuggets.com/2021/10/deploying-first-machine-learning-api.html](https://www.kdnuggets.com/2021/10/deploying-first-machine-learning-api.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/10/deploying-first-machine-learning-api.html](https://www.kdnuggets.com/2021/10/deploying-first-machine-learning-api.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[comments](#comments)'
- en: '![](../Images/2cbe3b5c834169f5e6ec43685940f6d7.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2cbe3b5c834169f5e6ec43685940f6d7.png)'
- en: Image by Author | Elements by [vectorjuice](https://www.freepik.com/vectorjuice)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片 | 元素来自 [vectorjuice](https://www.freepik.com/vectorjuice)
- en: Introduction
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍
- en: '* * *'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: In this project, we will learn how we can build an application programming interface
    (API) for your machine learning model and then deploy it with simple code. It
    took me one hour to learn FastAPI and five minutes to learn how to deploy it to
    Deta servers. We will also test our API on both local server and remote server
    using Python ***Request***. Let’s go a little bit deeper into the technologies
    that we are going to use in our project.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们将学习如何为你的机器学习模型构建应用程序编程接口（API），然后使用简单的代码进行部署。我花了一个小时来学习 FastAPI，五分钟来学习如何将其部署到
    Deta 服务器。我们还将使用 Python ***Request*** 在本地服务器和远程服务器上测试我们的 API。让我们深入了解一下我们将在项目中使用的技术。
- en: '![](../Images/2cbf7f788c3ca73faca8112f4391667d.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2cbf7f788c3ca73faca8112f4391667d.png)'
- en: Image by Author
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: spaCy
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: spaCy
- en: spaCy is more friendly towards application and deployment as compared to the
    famous NLTK Python library which is used for experimentation and evaluation. spaCy
    comes with prebuild statistical neural network NLP models with powerful features
    that are easy to use and implement in your project [spaCy](https://spacy.io/).
    We will be using quite a simple and small prebuilt English model to extract entities
    from our text.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 相较于用于实验和评估的著名 NLTK Python 库，spaCy 在应用和部署方面更为友好。spaCy 提供了预构建的统计神经网络 NLP 模型，具有强大的功能，易于在你的项目中使用和实施，[spaCy](https://spacy.io/)就是这样一个工具。我们将使用一个相对简单的小型预构建英文模型来从我们的文本中提取实体。
- en: FastAPI
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: FastAPI
- en: FastAPI is a fast web framework for building APIs with python, it comes with
    faster query time, easy and minimize code for you to design your first API within
    few minutes [FastAPI](https://fastapi.tiangolo.com/). In our project we will be
    learning how FastAPI works and how can we use our prebuilt model to get entities
    from the English text.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: FastAPI 是一个用于构建 Python API 的快速 Web 框架，它具有更快的查询时间、简化的代码，使你可以在几分钟内设计你的第一个 API，[FastAPI](https://fastapi.tiangolo.com/)提供了这些功能。在我们的项目中，我们将学习
    FastAPI 的工作原理，以及如何使用我们预构建的模型从英文文本中提取实体。
- en: Deta
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Deta
- en: We will be using Deta Micros service for our API and Deploy our project without
    docker or YAML files. Deta platform comes with easy to deploy CLI, high scalability,
    secure API authentication keys, option to change subdomain, and logging of the
    web traffic. These functions are completely free to use on [Deta.](https://www.deta.sh/) In
    our project, we are going to use Deta CLI to deploy our Fast API with few lines
    of scripts.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 Deta Micros 服务来处理我们的 API，并且在没有 docker 或 YAML 文件的情况下部署我们的项目。Deta 平台提供了易于部署的
    CLI、高可扩展性、安全的 API 认证密钥、更改子域名的选项以及 Web 流量的日志记录。这些功能在[Deta](https://www.deta.sh/)上完全免费。在我们的项目中，我们将使用
    Deta CLI 通过几行脚本来部署我们的 Fast API。
- en: Code
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码
- en: While I was learning FastAPI, I stumble upon the YouTube [video](https://www.youtube.com/watch?v=1zMQBe0l1bM&t=854s&pp=sAQA) that
    motivated me to write this article. [Sebastián Ramírez](https://dev.to/tiangolo) explained
    how the Fast API works and how it’s the fastest python web framework available.
    We will be writing two Python files. One contains a machine learning model, and
    another file contains your API code.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当我学习FastAPI时，我偶然发现了YouTube上的[视频](https://www.youtube.com/watch?v=1zMQBe0l1bM&t=854s&pp=sAQA)，这激励我写了这篇文章。[Sebastián
    Ramírez](https://dev.to/tiangolo)解释了Fast API是如何工作的，以及它是最快的Python网页框架。我们将编写两个Python文件，一个包含机器学习模型，另一个包含你的API代码。
- en: Requirements
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 需求
- en: Before we start, we need to create a new directory with a* requirements.txt* file.
    You can find all the necessary libraries that we are going to use below ????
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，我们需要创建一个新的目录，并添加一个*requirements.txt*文件。你可以在下面找到我们将要使用的所有必要库？？？？
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Either you can install them one by one or use ????
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以逐个安装它们，也可以使用？？？？
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We will be using a pretrained NLP model for this project, so we need to download
    it from the GitHub repository [https://github.com/explosion/spacy-models](https://github.com/explosion/spacy-models) or
    just run the requirement file and it will download and install it automatically.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将为这个项目使用一个预训练的NLP模型，因此我们需要从GitHub仓库[https://github.com/explosion/spacy-models](https://github.com/explosion/spacy-models)下载，或者只需运行需求文件，它将自动下载并安装。
- en: Machine Learning Model
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 机器学习模型
- en: We will be using pretrained [Spacy](https://www.analyticsvidhya.com/blog/2021/07/creating-data-science-python-package-using-jupyter-notebook/) NLP
    model to extract the entities from the text. If you are using Jupyter notebook,
    try using *%%writefile* to create python file in your directory.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用预训练的[Spacy](https://www.analyticsvidhya.com/blog/2021/07/creating-data-science-python-package-using-jupyter-notebook/)
    NLP模型来从文本中提取实体。如果你使用Jupyter notebook，尝试使用*%%writefile*在你的目录中创建Python文件。
- en: First, we loaded NLP model then extracted entities from CBS [News](https://www.cbsnews.com/news/gabby-thomas-womens-200-meter-bronze-medal-olympics/) article.
    With only few lines of code you are able to run your first machine learning model.
    You can also load trained model using same method.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们加载了NLP模型，然后从CBS [News](https://www.cbsnews.com/news/gabby-thomas-womens-200-meter-bronze-medal-olympics/)文章中提取实体。只需几行代码，你就可以运行你的第一个机器学习模型。你也可以使用相同的方法加载训练好的模型。
- en: API file
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: API文件
- en: 'This is your main file which contains:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你的主文件，其中包含：
- en: '**read_main**: use ***GET*, **which requests data from the resource in our
    case it will display a message saying ***Welcome*.**'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**read_main**：使用***GET***，**它从资源请求数据，在我们的例子中，它将显示一条消息，说***欢迎***。**'
- en: '**class Article**: Use *pydantic* ***BaseModel* **to define objects and variables
    that will be used for your API [(helpmanual.io)](https://pydantic-docs.helpmanual.io/usage/models/).
    In our case, we are defining content as string and comments as lists of strings.'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**class Article**：使用*pydantic* ***BaseModel*** **来定义将用于你的API的对象和变量 [(helpmanual.io)](https://pydantic-docs.helpmanual.io/usage/models/)。在我们的例子中，我们将内容定义为字符串，将评论定义为字符串列表。**'
- en: '**analyze_article**: It takes a List of text with comments and displays entities
    using *NLP *objects from ml file.'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**analyze_article**：它接受一个包含评论的文本列表，并使用来自ml文件的*NLP*对象显示实体。'
- en: '*I know it’s quite confusing, so let’s break it down into smaller parts to
    understand it well.*'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '*我知道这很复杂，所以让我们将其分解成更小的部分以便更好地理解。*'
- en: Breaking Down
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 拆解
- en: We have created an object of FastAPI then use it as [decorator](https://www.python.org/dev/peps/pep-0318/) on
    your function using ***@app. get(“/”)***.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了一个FastAPI对象，然后使用它作为[装饰器](https://www.python.org/dev/peps/pep-0318/)在你的函数上，使用***@app.get(“/”)***。
- en: '**@app** is your decorator of FastAPI object'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**@app** 是你FastAPI对象的装饰器'
- en: '**.get or .post** if HTTP methods for returning data or processing inputs'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**.get 或 .post** 是返回数据或处理输入的HTTP方法'
- en: '**(“/”)** is the location on web server. In our case its main page. If you
    want to add another directory, you can use (“/<new_section>/”)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**(“/”)** 是网页服务器上的位置。在我们的例子中，它是主页。如果你想添加另一个目录，你可以使用（"/<new_section>/"）'
- en: we have created **read_main** function to display message on main page, it’s
    that simple.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了**read_main**函数来在主页上显示消息，就这么简单。
- en: Now we will create an ***Article*** class that inherits functions and variables
    from **BaseModel**. This function helps us create the type of argument that we
    are going to use as in the ***POST*** method. In our case, we have created content
    as a string variable and comments as Lists of strings.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将创建一个***Article***类，它继承自**BaseModel**。这个函数帮助我们创建我们将用作***POST***方法的参数类型。在我们的例子中，我们将内容创建为字符串变量，将评论创建为字符串列表。
- en: In the last part, we are creating *a**** POST*** method (“/article/”) for our
    API. This means we will be creating a new section that will take arguments as
    input and return the results after processing them.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一部分，我们正在创建一个***POST*** 方法（“/article/”）作为我们的 API。这意味着我们将创建一个新部分，该部分将接受作为输入的参数，并在处理后返回结果。
- en: '**Article class as Argument: **Creating articles argument using List of Article,
    which will allow us to add multiple entries of texts.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文章类作为参数：**使用文章列表创建文章参数，这将允许我们添加多个文本条目。'
- en: '**Extracting data from articles: **Creating loops to extract data from a list
    of articles and then from lists of comments. It also adds comments to an array.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从文章中提取数据：**创建循环以从文章列表中提取数据，然后从评论列表中提取数据。它还将评论添加到一个数组中。'
- en: '**Loading text into NLP model: **loading content into ***nlp*** pretrained
    model.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**将文本加载到 NLP 模型中：**将内容加载到***nlp*** 预训练模型中。'
- en: '**Extracting entities: **extracting entities from the ***nlp*** object and
    then adding it to ***ents*** array. This will stack the results.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提取实体：**从***nlp*** 对象中提取实体，然后将其添加到***ents*** 数组中。这将堆叠结果。'
- en: '**Display:** The function will return a list of entities and comments.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示：**该函数将返回实体和评论的列表。'
- en: Testing
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试
- en: Fast API was built on Uvicorn so the server also runs on Uvicorn. In Jupyter
    notebook, you can run the app using ???? or in the terminal just type ***uvicorn*** then
    the*** main*** file and with FastAPI object which is ***app*** in our case.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Fast API 是在 Uvicorn 上构建的，因此服务器也在 Uvicorn 上运行。在 Jupyter Notebook 中，你可以使用 ????
    运行应用程序，或者在终端中只需输入***uvicorn*** 然后是***main*** 文件和 FastAPI 对象，在我们的例子中是***app***。
- en: Our server is running smooth so let’s use ***request.get ***method to access
    it. The API is working by showing us “Welcome” message on main page.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的服务器运行平稳，所以让我们使用***request.get***方法来访问它。API 正在通过在主页上显示“欢迎”消息来工作。
- en: now let's try adding single text and comments as dictionary in a list. We will
    be using ***POST*** request method and ***/article/*** to access our NLP model
    function. Convert your output into ***.json() ***to make it easy to extract the
    data.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们尝试将单个文本和评论作为字典添加到列表中。我们将使用***POST*** 请求方法和***/article/***来访问我们的 NLP 模型函数。将输出转换为***.json()***
    以便于提取数据。
- en: we have our dictionary keys: **[‘ents’, ‘comments’]**
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有我们的字典键：**[‘ents’, ‘comments’]**
- en: Let's check how our entire output looks like. It looks like we have ***ents*** with
    list of labels and entities. Same goes for ***comments*** key
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查一下我们整个输出的样子。看起来我们有***ents*** 和标签及实体的列表。***comments*** 键也是如此。
- en: Now let's extract single entity with its text to check the flexibility of our
    output. In our case we are extracting second entity from output.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们提取单个实体及其文本，以检查我们输出的灵活性。在我们的例子中，我们正在提取输出中的第二个实体。
- en: '**The result shows perfection.**'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**结果显示完美。**'
- en: Deployment
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部署
- en: Go to your terminal or you can do same steps with in your Jupyter notebook cell
    but adding “**!**” before any script. First your need to access your directory
    using ***cd*** where your ***main.py ***and ***ml.py*** files are located.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 进入终端，或者你可以在 Jupyter Notebook 单元中执行相同的步骤，但在任何脚本之前添加“**!**”。首先，你需要使用***cd*** 访问包含***main.py***
    和 ***ml.py*** 文件的目录。
- en: '[PRE2]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The three main file that are required by **Deta** are ***ml.py***, ***main.py***,and ***requirments.txt***.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**Deta** 所需的三个主要文件是***ml.py***、***main.py*** 和 ***requirments.txt***。'
- en: '![](../Images/a28c7a037b60b7d3cc2860e2d16fd698.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a28c7a037b60b7d3cc2860e2d16fd698.png)'
- en: Image by Author | Project Directory
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像 | 项目目录
- en: If you are using **Windows** use bellow command in PowerShell to download and
    install Deta CLI
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用**Windows**，请在 PowerShell 中使用以下命令下载并安装 Deta CLI。
- en: '[PRE3]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: for **Linux**
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 对于**Linux**
- en: '[PRE4]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Then use*** deta login***, it will take you to the browser and ask you to enter *username* and *password*.
    If you are already logged in, it will take few seconds to authenticate.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用***deta login***，它会带你到浏览器并要求你输入*用户名*和*密码*。如果你已经登录，它会在几秒钟内完成认证。
- en: '[PRE5]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/b9199c02fe614b513f6be456b2f9490e.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b9199c02fe614b513f6be456b2f9490e.png)'
- en: Deta Authentication | [deta](https://www.deta.sh/)
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Deta 认证 | [deta](https://www.deta.sh/)
- en: These **two words** in your terminal are **magic words**, which will upload
    the files and deploy your app with in 2 minutes.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这些**两个词** 在终端中是**魔法词**，它们将在 2 分钟内上传文件并部署你的应用程序。
- en: '[PRE6]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Your app is uploaded on an end point link. In our case [https://93t2gn.deta.dev/](https://93t2gn.deta.dev/)
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你的应用程序已上传到一个终点链接。在我们的例子中是 [https://93t2gn.deta.dev/](https://93t2gn.deta.dev/)
- en: '[PRE7]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: If you see error check logs using ***deta logs***, make some changes and then
    use ***deta deploy*** to update the changes.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果看到错误，请使用***deta logs*** 检查日志，进行一些更改后使用***deta deploy*** 来更新更改。
- en: As you can see our app is deployed and running on Deta servers.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我们的应用已在 Deta 服务器上部署并运行。
- en: '![](../Images/a8291c87931808399adc386616b0dd5d.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a8291c87931808399adc386616b0dd5d.png)'
- en: Project summary | [deta](https://www.deta.sh/)
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 项目总结 | [deta](https://www.deta.sh/)
- en: You can go to the link provided by **Deta** and check it yourself.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以访问**Deta**提供的链接自行查看。
- en: '![](../Images/d12e8abad67122f1150250b063d9be31.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d12e8abad67122f1150250b063d9be31.png)'
- en: Image by Author
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图像
- en: Testing Web API
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试 Web API
- en: Finally let's test our remote API as a microservice on Deta platform. This time
    instead of adding local IP, we are going to add Deta end point link. We can run
    without header as we don't have API authentications enable. Deta also provide
    Free API keys when authentications are enabled. It means only you or the person
    who have API key can access web server. To learn more on authentication and subdomain
    I suggest you read [documentations](https://docs.deta.sh/docs/home/).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们在 Deta 平台上将我们的远程 API 作为微服务进行测试。这次我们将添加 Deta 端点链接，而不是本地 IP。由于我们没有启用 API
    认证，所以可以在没有头部的情况下运行。Deta 还提供免费的 API 密钥，当启用认证时，仅你或拥有 API 密钥的人可以访问 Web 服务器。要了解更多关于认证和子域名的信息，我建议你阅读
    [文档](https://docs.deta.sh/docs/home/)。
- en: we are going to add same parameter and same code in order to get same result
    and voilà it works magic. You API is online and can be *easily* access by using
    the link.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将添加相同的参数和相同的代码，以获得相同的结果，瞧，它起作用了。你的 API 在线并可以通过链接*轻松*访问。
- en: Conclusion
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: After learning FastAPI, I was thinking about what’s next, so one day while scrolling
    through the web I stumble upon Deta which got my attention. It took me few minutes
    to install **Deta CLI** and deploy my API on a remote server. I am quite impressed
    by their subdomain and Free API key feature. It took me no time to understand
    how the service works and how I will be using it for my future projects.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习 FastAPI 之后，我在思考接下来要做什么，于是一天我在浏览网页时偶然发现了 Deta，这引起了我的注意。安装**Deta CLI**并在远程服务器上部署我的
    API 只用了几分钟。我对他们的子域名和免费 API 密钥功能印象深刻。我很快就理解了服务的工作原理以及我将如何在未来的项目中使用它。
- en: We all ask this question after learning few machines learning models.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在学习了一些机器学习模型后都会问这个问题。
- en: I know how to train my model and get predictions, but what’s next? How do I
    share my model with others? So that they can see what I have built and use these
    features in their projects.
  id: totrans-90
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我知道如何训练我的模型并获取预测，但接下来该怎么办？我如何与他人分享我的模型？以便他们可以查看我所构建的内容，并在他们的项目中使用这些功能。
- en: This is where cloud platform like **Heroku**, **Google**, **Azure** comes in,
    but these platforms are quite complex understand and you need to learn to code
    for **Docker** file which can be frustrating sometimes. **Deta** solves all your
    problems with its simple two-word script which will deploy and run your app in
    seconds.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是像**Heroku**、**Google**、**Azure**这样的云平台的作用所在，但这些平台相当复杂，需要学习**Docker**文件的编码，这有时可能会让人感到沮丧。**Deta**通过其简单的两行脚本解决了所有问题，这将使你的应用在几秒钟内部署和运行。
- en: '*You can also check my GitHub repo on this project: *[*kingabzpro/FastAPI-ML-Project*](https://github.com/kingabzpro/FastAPI-ML-Project)*.*'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '*你还可以查看我关于这个项目的 GitHub 仓库：*[*kingabzpro/FastAPI-ML-Project*](https://github.com/kingabzpro/FastAPI-ML-Project)*。*'
- en: You can follow me on [LinkedIn](https://www.linkedin.com/in/1abidaliawan/) and [Polywork](https://www.polywork.com/kingabzpro) where
    I publish article every week.
  id: totrans-93
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以在 [LinkedIn](https://www.linkedin.com/in/1abidaliawan/) 和 [Polywork](https://www.polywork.com/kingabzpro)
    上关注我，我每周都会发布文章。
- en: '**Bio: [Abid Ali Awan](http://abidaliawan.me/)** is a certified data scientist
    professional, who loves building machine learning models and blogs about the latest
    AI technologies.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**个人简介：[Abid Ali Awan](http://abidaliawan.me/)** 是一名认证的数据科学专家，热爱构建机器学习模型并撰写有关最新
    AI 技术的博客。'
- en: '[Original](https://towardsdatascience.com/deploying-your-first-machine-learning-api-1649236c695e).
    Reposted with permission.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/deploying-your-first-machine-learning-api-1649236c695e)。已获许可转载。'
- en: '**Related:**'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Working with Python APIs For Data Science Project](/2021/09/python-apis-data-science-project.html)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用于数据科学项目的 Python APIs](/2021/09/python-apis-data-science-project.html)'
- en: '[Building RESTful APIs using Flask](/2021/05/building-restful-apis-flask.html)'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Flask 构建 RESTful APIs](/2021/05/building-restful-apis-flask.html)'
- en: '[Production-Ready Machine Learning NLP API with FastAPI and spaCy](/2021/04/production-ready-machine-learning-nlp-api-fastapi-spacy.html)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 FastAPI 和 spaCy 构建生产就绪的机器学习 NLP API](/2021/04/production-ready-machine-learning-nlp-api-fastapi-spacy.html)'
- en: More On This Topic
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[停止学习数据科学以寻找目的，并找到目的去…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习数据科学的顶级资源](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[一桩90亿美元的人工智能失败案例，经过分析](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[成功数据科学家的5个特征](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[是什么让 Python 成为初创公司理想的编程语言](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个数据科学家都应该知道的三个 R 库（即使你使用 Python）](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
