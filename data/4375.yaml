- en: Mastering TensorFlow Tensors in 5 Easy Steps
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过 5 个简单步骤掌握 TensorFlow 张量
- en: 原文：[https://www.kdnuggets.com/2020/11/mastering-tensorflow-tensors-5-easy-steps.html](https://www.kdnuggets.com/2020/11/mastering-tensorflow-tensors-5-easy-steps.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/11/mastering-tensorflow-tensors-5-easy-steps.html](https://www.kdnuggets.com/2020/11/mastering-tensorflow-tensors-5-easy-steps.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Orhan G. Yalçın](https://www.linkedin.com/in/orhangaziyalcin/), AI Researcher**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者 [Orhan G. Yalçın](https://www.linkedin.com/in/orhangaziyalcin/)，AI 研究员**'
- en: '*If you are reading this article, I am sure that we share similar interests
    and are/will be in similar industries. So let’s connect via *[*Linkedin*](https://linkedin.com/in/orhangaziyalcin/)*!
    Please do not hesitate to send a contact request! *[*Orhan G. Yalçın — Linkedin*](https://linkedin.com/in/orhangaziyalcin/)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你正在阅读这篇文章，我相信我们有相似的兴趣，并且在相似的行业中。那就通过* [*Linkedin*](https://linkedin.com/in/orhangaziyalcin/)
    *来联系吧！请不要犹豫发送联系请求！* [*Orhan G. Yalçın — Linkedin*](https://linkedin.com/in/orhangaziyalcin/)'
- en: '![Figure](../Images/d50c55750c8559cd8fd43f07ccdbcffc.png)Photo by [Esther Jiao](https://unsplash.com/@estherrj?utm_source=medium&utm_medium=referral) on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/d50c55750c8559cd8fd43f07ccdbcffc.png)照片由 [Esther Jiao](https://unsplash.com/@estherrj?utm_source=medium&utm_medium=referral)
    提供，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)'
- en: 'In this post, we will dive into the details of TensorFlow [Tensors](https://www.kdnuggets.com/2018/05/wtf-tensor.html).
    We will cover all the topics related to Tensors in Tensorflow in these five simple
    steps:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将深入探讨 TensorFlow [张量](https://www.kdnuggets.com/2018/05/wtf-tensor.html)
    的细节。我们将通过这五个简单步骤涵盖所有与 TensorFlow 张量相关的主题：
- en: '**Step I: Definition of Tensors → **What is a Tensor?'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 I：张量的定义 → ** 张量是什么？'
- en: '**Step II: Creation of Tensors → **Functions to Create Tensor Objects'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 II：张量的创建 → ** 创建张量对象的函数'
- en: '**Step III: Qualifications of Tensors → **Characteristics and Features of Tensor
    Objects'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 III：张量的资格 → ** 张量对象的特征和属性'
- en: '**Step IV: Operations with Tensors → **Indexing, Basic Tensor Operations, Shape
    Manipulation, and Broadcasting'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 IV：与张量的操作 → ** 索引、基本张量操作、形状调整和广播'
- en: '**Step V: Special Types of Tensors → **Special Tensor Types Other than Regular
    Tensors'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**步骤 V：特殊类型的张量 → ** 除了常规张量的特殊张量类型'
- en: Let’s start!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: 'Definition of Tensors: What is a Tensor?'
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 张量的定义：张量是什么？
- en: '![Figure](../Images/d09490d09a2cbcbc2f2e360cc8df63a1.png)Figure 1\. A Visualization
    of Rank-3 Tensors (Figure by Author)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/d09490d09a2cbcbc2f2e360cc8df63a1.png)图 1. 三阶张量的可视化（图由作者提供）'
- en: Tensors are TensorFlow’s multi-dimensional arrays with uniform type. They are
    very similar to NumPy arrays, and they are immutable, which means that they cannot
    be altered once created. You can only create a new copy with the edits.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 张量是 TensorFlow 的多维数组，具有统一的数据类型。它们与 NumPy 数组非常相似，并且是不可变的，这意味着一旦创建后不能被更改。你只能创建一个新的副本并进行编辑。
- en: 'Let’s see how Tensors work with code example. But first, to work with TensorFlow
    objects, we need to import the [TensorFlow](http://tensorflow.org/) library. We
    often use [NumPy](http://numpy.org/) with TensorFlow, so let’s also import NumPy
    with the following lines:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看张量如何通过代码示例工作。但首先，为了处理 TensorFlow 对象，我们需要导入 [TensorFlow](http://tensorflow.org/)
    库。我们经常与 TensorFlow 一起使用 [NumPy](http://numpy.org/)，所以也需要用以下几行导入 NumPy：
- en: 'Creation of Tensors: Creating Tensor Objects'
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 张量的创建：创建张量对象
- en: 'There are several ways to create a `tf.Tensor` object. Let’s start with a few
    examples. You can create Tensor objects with several TensorFlow functions, as
    shown in the below examples:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `tf.Tensor` 对象有几种方法。让我们从几个示例开始。你可以使用多个 TensorFlow 函数来创建张量对象，如下面的示例所示：
- en: tf.constant, tf.ones, tf.zeros, and tf.range are some of the functions you can
    use to create Tensor objects
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: tf.constant、tf.ones、tf.zeros 和 tf.range 是你可以用来创建张量对象的一些函数
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: As you can see, we created Tensor objects with the shape `(1, 5)` with three
    different functions and a fourth Tensor object with the shape `(5, )`using `tf.range()` function.
    Note that `tf.ones` and `tf.zeros` accepts the shape as the required argument
    since their element values are pre-determined.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我们使用三种不同的函数创建了形状为 `（1, 5）` 的张量对象，并使用 `tf.range()` 函数创建了一个形状为 `（5,）` 的第四个张量对象。请注意，`tf.ones`
    和 `tf.zeros` 接受形状作为必需的参数，因为它们的元素值是预先确定的。
- en: 'Qualifications of Tensors: Characteristics and Features of Tensor Objects'
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 张量的资格：张量对象的特征和属性
- en: TensorFlow Tensors are created as `tf.Tensor` objects, and they have several
    characteristic features. First of all, they have a rank based on the number of
    dimensions they have. Secondly, they have a shape, a list that consists of the
    lengths of all their dimensions. All tensors have a size, which is the total number
    of elements within a Tensor. Finally, their elements are all recorded in a uniform
    Dtype (data type). Let’s take a closer look at each of these features.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: TensorFlow 张量被创建为 `tf.Tensor` 对象，它们有几个特征。首先，它们的秩基于维度数量。其次，它们有一个形状，一个由所有维度长度组成的列表。所有张量都有一个大小，即张量内元素的总数。最后，它们的元素都记录在统一的数据类型中。让我们更详细地了解这些特征。
- en: Rank System and Dimension
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 秩系统与维度
- en: 'Tensors are categorized based on the number of dimensions they have:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 张量根据它们的维度数量进行分类：
- en: '**Rank-0 (Scalar) Tensor:** A tensor containing a single value and no axes
    (0-dimension);'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**秩-0（标量）张量：** 一个包含单个值且没有轴（0 维）的张量；'
- en: '**Rank-1 Tensor:** A tensor containing a list of values in a single axis (1-dimension);'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**秩-1 张量：** 一个包含单个轴（1 维）中的值列表的张量；'
- en: '**Rank-2 Tensor:** A tensor containing 2-axes (2-dimensions); and'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**秩-2 张量：** 一个包含 2 个轴（2 维）的张量；以及'
- en: '**Rank-N Tensor: **A tensor containing N-axis (N-dimensions).'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**秩-N 张量：** 一个包含 N 个轴（N 维）的张量。'
- en: '![Figure](../Images/b4dcb40089fec79f7031da9a1f518e49.png)Figure 2\. Rank-1
    Tensor | Rank-2 Tensor| Rank-3 Tensor (Figure by Author)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/b4dcb40089fec79f7031da9a1f518e49.png)图 2\. 秩-1 张量 | 秩-2 张量
    | 秩-3 张量（作者提供的图）'
- en: 'For example, we can create a Rank-3 tensor by passing a three-level nested
    list object to the `tf.constant` function. For this example, we can split the
    numbers into a 3-level nested list with three-element at each level:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以通过将一个三层嵌套列表对象传递给 `tf.constant` 函数来创建一个秩-3 张量。对于这个例子，我们可以将数字分割成一个每层有三个元素的三层嵌套列表：
- en: The code to create a Rank-3 Tensor object
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个秩-3 张量对象的代码
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We can view the number of dimensions that our `rank_3_tensor` object currently
    has with the `.ndim` attribute.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过 `.ndim` 属性查看我们当前的 `rank_3_tensor` 对象的维度数量。
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Shape
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 形状
- en: 'The shape feature is another attribute that every Tensor has. It shows the
    size of each dimension in the form of a list. We can view the shape of the `rank_3_tensor` object
    we created with the `.shape` attribute, as shown below:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 形状特征是每个张量都有的另一个属性。它以列表形式显示每个维度的大小。我们可以通过 `.shape` 属性查看我们创建的 `rank_3_tensor`
    对象的形状，如下所示：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: As you can see, our tensor has 2 elements at the first level, 2 elements in
    the second level, and 3 elements in the third level.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我们的张量在第一层有 2 个元素，在第二层有 2 个元素，在第三层有 3 个元素。
- en: Size
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 大小
- en: 'Size is another feature that Tensors have, and it means the total number of
    elements a Tensor has. We cannot measure the size with an attribute of the Tensor
    object. Instead, we need to use `tf.size()` function. Finally, we will convert
    the output to NumPy with the instance function `.numpy() `to get a more readable
    result:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 大小是张量的另一个特征，意味着张量中的元素总数。我们不能用张量对象的属性来测量大小。相反，我们需要使用 `tf.size()` 函数。最后，我们将输出转换为
    NumPy，以通过实例函数 `.numpy()` 获取更可读的结果：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Dtypes
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据类型
- en: Tensors often contain numerical data types such as floats and ints, but may
    contain many other data types such as complex numbers and strings.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 张量通常包含数值数据类型，如浮点数和整数，但也可能包含许多其他数据类型，如复数和字符串。
- en: 'Each Tensor object, however, must store all its elements in a single uniform
    data type. Therefore, we can also view the type of data selected for a particular
    Tensor object with the `.dtype` attribute, as shown below:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，每个张量对象必须以单一的统一数据类型存储所有元素。因此，我们还可以通过 `.dtype` 属性查看特定张量对象所选择的数据类型，如下所示：
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Operations with Tensors
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 张量操作
- en: Indexing
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 索引
- en: 'An index is a numerical representation of an item’s position in a sequence.
    This sequence can refer to many things: a list, a string of characters, or any
    arbitrary sequence of values.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 索引是项目在序列中的位置的数值表示。这个序列可以指代许多事物：一个列表、一个字符字符串或任何任意的值序列。
- en: TensorFlow also follows standard Python indexing rules, which is similar to
    list indexing or NumPy array indexing.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: TensorFlow 还遵循标准的 Python 索引规则，这与列表索引或 NumPy 数组索引类似。
- en: 'A few rules about indexing:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 关于索引的一些规则：
- en: Indices start at zero (0).
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 索引从零（0）开始。
- en: Negative index (“-n”) value means backward counting from the end.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 负索引（“ -n”）值表示从末尾向后计数。
- en: Colons (“:”) are used for slicing: `start:stop:step`.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 冒号（“：”）用于切片：`start:stop:step`。
- en: Commas (“,”) are used to reach deeper levels.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 逗号（“，”）用于达到更深的层次。
- en: 'Let’s create a `rank_1_tensor` with the following lines:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用以下代码行创建一个 `rank_1_tensor`：
- en: '[PRE6]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'and test out our rules no.1, no.2, and no.3:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 并测试我们的规则第 1 条、第 2 条和第 3 条：
- en: '[PRE7]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now, let’s create our `rank_2_tensor` object with the following code:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们用以下代码创建我们的 `rank_2_tensor` 对象：
- en: '[PRE8]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'and test the 4th rule with several examples:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 并用几个示例测试第四条规则：
- en: '[PRE9]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now, we covered the basics of indexing, so let’s take a look at the basic operations
    we can conduct on Tensors.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经覆盖了索引的基础知识，让我们来看看我们可以对 Tensor 执行的基本操作。
- en: Basic Operations with Tensors
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Tensor 的基本操作
- en: 'You can easily do basic math operations on tensors such as:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以轻松地对 Tensor 执行基本数学操作，例如：
- en: Addition
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加法
- en: Element-wise Multiplication
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 元素级乘法
- en: Matrix Multiplication
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 矩阵乘法
- en: Finding the Maximum or Minimum
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找最大值或最小值
- en: Finding the Index of the Max Element
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找最大元素的索引
- en: Computing Softmax Value
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算 Softmax 值
- en: Let’s see these operations in action. We will create two Tensor objects and
    apply these operations.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这些操作的实际效果。我们将创建两个 Tensor 对象并应用这些操作。
- en: We can start with addition.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从加法开始。
- en: '[PRE10]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Let’s continue with the element-wise multiplication.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续进行元素级乘法。
- en: '[PRE11]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We can also do matrix multiplication:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以进行矩阵乘法：
- en: '[PRE12]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '**NOTE:** Matmul operations lays in the heart of deep learning algorithms.
    Therefore, although you will not use matmul directly, it is crucial to be aware
    of these operations.'
  id: totrans-80
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意：** Matmul 操作是深度学习算法的核心。因此，尽管你不会直接使用 matmul，但了解这些操作至关重要。'
- en: 'Examples of other operations we listed above:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们上面列出的其他操作示例：
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Manipulating Shapes
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 操作形状
- en: Just as in NumPy arrays and pandas DataFrames, you can reshape Tensor objects
    as well.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在 NumPy 数组和 pandas DataFrames 中一样，你也可以重塑 Tensor 对象。
- en: 'The tf.reshape operations are very fast since the underlying data does not
    need to be duplicated. For the reshape operation, we can use the`tf.reshape()` function.
    Let''s use the `tf.reshape` function in code:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: tf.reshape 操作非常快，因为底层数据不需要重复。对于重塑操作，我们可以使用`tf.reshape()` 函数。让我们在代码中使用 `tf.reshape` 函数：
- en: '[PRE14]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: As you can see, we can easily reshape our Tensor objects. But beware that when
    doing reshape operations, a developer must be reasonable. Otherwise, the Tensor
    might get mixed up or can even raise an error. So, look out for that ????.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，我们可以轻松地重塑我们的 Tensor 对象。但要注意，在进行重塑操作时，开发人员必须合理操作。否则，Tensor 可能会混乱或甚至引发错误。因此，留意这一点
    ????。
- en: Broadcasting
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 广播
- en: 'When we try to do combined operations using multiple Tensor objects, the smaller
    Tensors can stretch out automatically to fit larger tensors, just as NumPy arrays
    can. For example, when you attempt to multiply a scalar Tensor with a Rank-2 Tensor,
    the scalar is stretched to multiply every Rank-2 Tensor element. See the example
    below:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们尝试使用多个 Tensor 对象进行组合操作时，较小的 Tensor 可以自动扩展以适应较大的 Tensor，就像 NumPy 数组一样。例如，当你尝试将标量
    Tensor 与二阶 Tensor 相乘时，标量会被扩展以与每个二阶 Tensor 元素相乘。请参见下面的示例：
- en: '[PRE15]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Thanks to broadcasting, you don’t have to worry about matching sizes when doing
    math operations on Tensors.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 由于广播，你在对 Tensor 进行数学操作时无需担心匹配尺寸的问题。
- en: Special Types of Tensors
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 特殊类型的 Tensor
- en: 'We tend to generate Tensors in a rectangular shape and store numerical values
    as elements. However, TensorFlow also supports irregular, or specialized, Tensor
    types, which are:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们倾向于生成矩形形状的 Tensor 并将数值作为元素存储。然而，TensorFlow 也支持不规则或特殊类型的 Tensor，具体包括：
- en: Ragged Tensors
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不规则 Tensor
- en: String Tensors
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 字符串 Tensor
- en: Sparse Tensors
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 稀疏 Tensor
- en: '![Figure](../Images/1dd5906e1bdbb46b2f349c933f730228.png)Figure 3\. Ragged
    Tensor | String Tensor| Sparse Tensor (Figure by Author)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/1dd5906e1bdbb46b2f349c933f730228.png)图 3\. 不规则 Tensor | 字符串
    Tensor | 稀疏 Tensor（图由作者提供）'
- en: Let's take a closer look at what each of them is.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们仔细看看它们每一个是什么。
- en: Ragged Tensors
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 不规则 Tensor
- en: Ragged tensors are tensors with different numbers of elements along the size
    axis, as shown in Figure X.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 不规则 Tensor 是在大小轴上具有不同元素数量的 Tensor，如图 X 所示。
- en: 'You can build a Ragged Tensor, as shown below:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以构建一个不规则 Tensor，如下所示：
- en: '[PRE16]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: String Tensors
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 字符串 Tensor
- en: 'String Tensors are tensors, which stores string objects. We can build a String
    Tensor just as you create a regular Tensor object. But, we pass string objects
    as elements instead of numerical objects, as shown below:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串 Tensor 是存储字符串对象的 Tensor。我们可以像创建普通 Tensor 对象一样创建一个字符串 Tensor。但是，我们传递的是字符串对象作为元素，而不是数值对象，如下所示：
- en: '[PRE17]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Sparse tensors
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 稀疏 Tensor
- en: 'Finally, Sparse Tensors are rectangular Tensors for sparse data. When you have
    holes (i.e., Null values) in your data, Sparse Tensors are to-go objects. Creating
    a sparse Tensor is a bit time consuming and should be more mainstream. But, here
    is an example:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，稀疏张量是用于稀疏数据的矩形张量。当数据中有空洞（即空值）时，稀疏张量是首选对象。创建一个稀疏张量有点耗时，并且应该更为普及。不过，以下是一个示例：
- en: '[PRE18]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Congratulations
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 恭喜
- en: We have successfully covered the basics of TensorFlow’s Tensor objects.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经成功覆盖了 TensorFlow 的 Tensor 对象基础知识。
- en: Give yourself a pat on the back!
  id: totrans-111
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 给自己一个奖励吧！
- en: This should give you a lot of confidence since you are now much more informed
    about the building blocks of the TensorFlow framework.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会让你更有信心，因为你现在对 TensorFlow 框架的构建块有了更多了解。
- en: 'Check [Part 1 of this tutorial series](https://towardsdatascience.com/beginners-guide-to-tensorflow-2-x-for-deep-learning-applications-c7ebd0dcfbee?source=linkShare-ff47ab81282a-1602188004&_branch_match_id=834349989166411892):'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '查看 [本教程系列的第 1 部分](https://towardsdatascience.com/beginners-guide-to-tensorflow-2-x-for-deep-learning-applications-c7ebd0dcfbee?source=linkShare-ff47ab81282a-1602188004&_branch_match_id=834349989166411892):'
- en: '[**Beginner''s Guide to TensorFlow 2.x for Deep Learning Applications**](https://link.medium.com/yJp16uPoqab)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[**TensorFlow 2.x 初学者指南，用于深度学习应用**](https://link.medium.com/yJp16uPoqab)'
- en: Understanding the TensorFlow Platform and What it has to Offer to a Machine
    Learning Expert
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 了解 TensorFlow 平台及其对机器学习专家的提供
- en: 'Continue with [Part 3 of the series](https://towardsdatascience.com/mastering-tensorflow-variables-in-5-easy-step-5ba8062a1756):'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '继续阅读 [系列第 3 部分](https://towardsdatascience.com/mastering-tensorflow-variables-in-5-easy-step-5ba8062a1756):'
- en: '[**Mastering TensorFlow “Variables” in 5 Easy Step**](https://towardsdatascience.com/mastering-tensorflow-variables-in-5-easy-step-5ba8062a1756)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '[**在 5 个简单步骤中掌握 TensorFlow “变量”**](https://towardsdatascience.com/mastering-tensorflow-variables-in-5-easy-step-5ba8062a1756)'
- en: Learn how to use TensorFlow Variables, their differences from plain Tensor objects,
    and when they are preferred over…
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 了解如何使用 TensorFlow 变量，它们与普通 Tensor 对象的区别，以及何时优于…
- en: Subscribe to the Mailing List for the Full Code
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 订阅邮件列表获取完整代码
- en: 'If you would like to have access to full code on Google Colab and the rest
    of my latest content, consider subscribing to the mailing list:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望访问 Google Colab 上的完整代码和我最新的内容，请考虑订阅邮件列表：
- en: Slide to Subscribe to My Newsletter
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 滑动以订阅我的通讯
- en: 'Finally, if you are interested in applied deep learning tutorials, check out
    some of my articles:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果你对应用深度学习教程感兴趣，可以查看我的一些文章：
- en: '[**Image Classification in 10 Minutes with MNIST Dataset**](https://towardsdatascience.com/image-classification-in-10-minutes-with-mnist-dataset-54c35b77a38d)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[**用 MNIST 数据集在 10 分钟内进行图像分类**](https://towardsdatascience.com/image-classification-in-10-minutes-with-mnist-dataset-54c35b77a38d)'
- en: Using Convolutional Neural Networks to Classify Handwritten Digits with TensorFlow
    and Keras | Supervised Deep Learning
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 使用卷积神经网络对手写数字进行分类，采用 TensorFlow 和 Keras | 监督深度学习
- en: '[**Image Generation in 10 Minutes with Generative Adversarial Networks**](https://towardsdatascience.com/image-generation-in-10-minutes-with-generative-adversarial-networks-c2afc56bfa3b)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[**用生成对抗网络在 10 分钟内生成图像**](https://towardsdatascience.com/image-generation-in-10-minutes-with-generative-adversarial-networks-c2afc56bfa3b)'
- en: Using Unsupervised Deep Learning to Generate Handwritten Digits with Deep Convolutional
    GANs using TensorFlow and the…
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 使用无监督深度学习生成手写数字，采用 TensorFlow 和深度卷积 GANs
- en: '[**Image Noise Reduction in 10 Minutes with Convolutional Autoencoders**](https://towardsdatascience.com/image-noise-reduction-in-10-minutes-with-convolutional-autoencoders-d16219d2956a)'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[**用卷积自编码器在 10 分钟内减少图像噪声**](https://towardsdatascience.com/image-noise-reduction-in-10-minutes-with-convolutional-autoencoders-d16219d2956a)'
- en: Using Deep Convolutional Autoencoders to Clean (or Denoise) Noisy Images with
    the help of Fashion MNIST | Unsupervised…
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 使用深度卷积自编码器清洁（或去噪）噪声图像，借助 Fashion MNIST | 无监督…
- en: '[**Using Recurrent Neural Networks to Predict Bitcoin (BTC) Prices**](https://towardsdatascience.com/using-recurrent-neural-networks-to-predict-bitcoin-btc-prices-c4ff70f9f3e4)'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '[**使用递归神经网络预测比特币 (BTC) 价格**](https://towardsdatascience.com/using-recurrent-neural-networks-to-predict-bitcoin-btc-prices-c4ff70f9f3e4)'
- en: Wouldn’t it be awesome if you were, somehow, able to predict tomorrow’s Bitcoin
    (BTC) price? Cryptocurrency market has…
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你能够预测明天的比特币 (BTC) 价格，那不是太棒了吗？加密货币市场有…
- en: '**Bio: [Orhan G. Yalçın](https://www.linkedin.com/in/orhangaziyalcin/)** is
    an AI Researcher in the legal domain. He is a qualified lawyer with business development
    and data science skills, and has previously worked as a legal trainee for Allen
    & Overy on capital markets, competition, and corporate law matters.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：[Orhan G. Yalçın](https://www.linkedin.com/in/orhangaziyalcin/)** 是法律领域的AI研究员。他是一位合格的律师，拥有商业发展和数据科学技能，曾在Allen
    & Overy担任法律实习生，处理资本市场、竞争和公司法事务。'
- en: '[Original](https://towardsdatascience.com/mastering-tensorflow-tensors-in-5-easy-steps-35f21998bb86).
    Reposted with permission.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/mastering-tensorflow-tensors-in-5-easy-steps-35f21998bb86)。已获许可转载。'
- en: '**Related:**'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[WTF is a Tensor?!?](/2018/05/wtf-tensor.html)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[什么是张量？！?](/2018/05/wtf-tensor.html)'
- en: '[Getting Started with TensorFlow 2](/2020/07/getting-started-tensorflow2.html)'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TensorFlow 2 入门](/2020/07/getting-started-tensorflow2.html)'
- en: '[The Most Important Fundamentals of PyTorch you Should Know](/2020/06/fundamentals-pytorch.html)'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[你应该知道的PyTorch最重要基础知识](/2020/06/fundamentals-pytorch.html)'
- en: '* * *'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的IT工作'
- en: '* * *'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关话题
- en: '[Everything You Need to Know About Tensors](https://www.kdnuggets.com/2022/05/everything-need-know-tensors.html)'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[你需要知道的关于张量的所有信息](https://www.kdnuggets.com/2022/05/everything-need-know-tensors.html)'
- en: '[TensorFlow for Computer Vision - Transfer Learning Made Easy](https://www.kdnuggets.com/2022/01/tensorflow-computer-vision-transfer-learning-made-easy.html)'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TensorFlow用于计算机视觉 - 轻松实现迁移学习](https://www.kdnuggets.com/2022/01/tensorflow-computer-vision-transfer-learning-made-easy.html)'
- en: '[Build An AI Application with Python in 10 Easy Steps](https://www.kdnuggets.com/build-an-ai-application-with-python-in-10-easy-steps)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用Python构建AI应用的10个简单步骤](https://www.kdnuggets.com/build-an-ai-application-with-python-in-10-easy-steps)'
- en: '[Build a Command-Line App with Python in 7 Easy Steps](https://www.kdnuggets.com/build-a-command-line-app-with-python-in-7-easy-steps)'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用Python构建命令行应用的7个简单步骤](https://www.kdnuggets.com/build-a-command-line-app-with-python-in-7-easy-steps)'
- en: '[Containerize Python Apps with Docker in 5 Easy Steps](https://www.kdnuggets.com/containerize-python-apps-with-docker-in-5-easy-steps)'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用Docker容器化Python应用的5个简单步骤](https://www.kdnuggets.com/containerize-python-apps-with-docker-in-5-easy-steps)'
- en: '[7 Steps to Mastering Machine Learning with Python in 2022](https://www.kdnuggets.com/2022/02/7-steps-mastering-machine-learning-python.html)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2022年掌握Python机器学习的7个步骤](https://www.kdnuggets.com/2022/02/7-steps-mastering-machine-learning-python.html)'
