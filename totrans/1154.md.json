["```py\n!pip install cleantext\n```", "```py\n#Importing the clean text library\nfrom cleantext import clean# Sample texttext = \"\"\" Zürich, largest city of Switzerland and capital of the canton of 633Zürich. Located in an Al\\u017eupine. ([https://google.com](https://google.com/)). Currency is not ₹\"\"\"# Cleaning the \"text\" with clean textclean(text, \n      fix_unicode=True, \n      to_ascii=True, \n      lower=True, \n      no_urls=True, \n      no_numbers=True, \n      no_digits=True, \n      no_currency_symbols=True, \n      no_punct=True, \n      replace_with_punct=\" \", \n      replace_with_url=\"\", \n      replace_with_number=\"\", \n      replace_with_digit=\" \", \n      replace_with_currency_symbol=\"Rupees\")\n```", "```py\n!pip install drawdata\n```", "```py\n# Importing the drawdata \nfrom drawdata import draw_scatterdraw_scatter()\n```", "```py\n#Reading the clipboardimport pandas as pd \ndf = pd.read_clipboard(sep=\",\")\ndf\n```", "```py\n!pip install autoviz\n```", "```py\n# Importing Autoviz class from the autoviz library\nfrom autoviz.AutoViz_Class import AutoViz_Class#Initialize the Autoviz class in a object called df\ndf = AutoViz_Class()# Using Iris Dataset and passing to the default parametersfilename = \"Iris.csv\"\nsep = \",\"graph = df.AutoViz(\n    filename,\n    sep=\",\",\n    depVar=\"\",\n    dfte=None,\n    header=0,\n    verbose=0,\n    lowess=False,\n    chart_format=\"svg\",\n    max_rows_analyzed=150000,\n    max_cols_analyzed=30,\n)\n```", "```py\n**#First install mitoinstaller in the command prompt** pip install mitoinstaller**# Then, run the installer in the command prompt**\npython -m mitoinstaller install**# Then, launch Jupyter lab or jupyter notebook from the command prompt** python -m jupyter lab\n```", "```py\n**# Importing mitosheet and ruuning this in Jupyter lab**import mitosheet\nmitosheet.sheet()\n```", "```py\nfrom mitosheet import * # Import necessary functions from Mito\nregister_analysis('UUID-119387c0-fc9b-4b04-9053-802c0d428285') # Let Mito know which analysis is being run# Imported C:\\Users\\Dhilip\\Downloads\\archive (29)\\Iris.csv\nimport pandas as pd\nIris_csv = pd.read_csv('C:\\Users\\Dhilip\\Downloads\\archive (29)\\Iris.csv')# Added column G to Iris_csv\nIris_csv.insert(6, 'G', 0)# Set G in Iris_csv to =AVG(SepalLengthCm)\nIris_csv['G'] = AVG(Iris_csv['SepalLengthCm'])# Renamed G to Avg_Sepal in Iris_csv\nIris_csv.rename(columns={\"G\": \"Avg_Sepal\"}, inplace=True)\n```", "```py\n!pip3 install -U git+https://github.com/PrithivirajDamodaran/Gramformer.git\n```", "```py\ngf = Gramformer(models = 1, use_gpu = False) # 1=corrector, 2=detector (presently model 1 is working, 2 has not implemented)\n```", "```py\n#Giving sample text for correction under gf.correctgf.correct(\"\"\" New Zealand is island countrys in southwestern Paciific Ocaen. Country population was 5 million \"\"\")\n```", "```py\n!pip install git+https://github.com/PrithivirajDamodaran/Styleformer.git\n```", "```py\nsf = Styleformer(style = 0)# style = [0=Casual to Formal, 1=Formal to Casual, 2=Active to Passive, 3=Passive to Active etc..]\n```", "```py\n# Converting casual to formal sf.transfer(\"I gotta go\")\n```", "```py\n# Formal to casual \nsf = Styleformer(style = 1)     # 1 -> Formal to casual# Converting formal to casual\nsf.transfer(\"Please leave this place\")\n```", "```py\n# Active to Passive \nsf = Styleformer(style = 2)     # 2-> Active to Passive# Converting active to passive\nsf.transfer(\"We are going to watch a movie tonight.\")\n```", "```py\n# passive to active\nsf = Styleformer(style = 2)     # 2-> Active to Passive# Converting passive to active\nsf.transfer(\"Tenants are protected by leases\")\n```"]