- en: 'Algorithmia Tested: Human vs Automated Tag Generation'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Algorithmia 测试：人工 vs 自动化标签生成
- en: 原文：[https://www.kdnuggets.com/2015/04/algorithmia-tested-automated-tag-generation.html](https://www.kdnuggets.com/2015/04/algorithmia-tested-automated-tag-generation.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2015/04/algorithmia-tested-automated-tag-generation.html](https://www.kdnuggets.com/2015/04/algorithmia-tested-automated-tag-generation.html)
- en: '**By Grant Marshall (ASU).**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者：Grant Marshall (ASU)。**'
- en: Algorithmia is a new platform that acts as a sort of “marketplace for algorithms”.
    We’ve looked at Algorithmia from a high level [previously](/2015/04/algorithmia-marketplace-innovation.html),
    so today we’re going to get hands-on and see how Algorithmia actually works from
    an applications perspective.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Algorithmia 是一个新的平台，充当一种“算法市场”的角色。我们之前从高层次上看过 Algorithmia [这里](/2015/04/algorithmia-marketplace-innovation.html)，所以今天我们将进行实际操作，看看
    Algorithmia 从应用角度实际是如何工作的。
- en: Our goal is to compare KDnuggets tags on articles from 2014 (a subset of [all
    KDnuggets tags](/tags)) to the tags generated by an automatic tagging algorithm
    hosted on Algorithmia. We’ll first use Algorithmia as a client, sending scraped
    articles to the Algorithmia API and receiving generated tags. Then, we will use
    Algorithmia as a developer, writing an algorithm for frequent itemset generation
    to get multi-word tags. Then we will use this algorithm and see how the platform
    works end-to-end. Finally, we’ll look at the resulting tags and see how machine
    generated tags compare to our handmade tags.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的目标是将 2014 年的 KDnuggets 文章标签（[所有 KDnuggets 标签的子集](/tags)）与在 Algorithmia 上托管的自动标记算法生成的标签进行比较。我们首先将
    Algorithmia 作为客户端，发送抓取的文章到 Algorithmia API 并接收生成的标签。然后，我们将 Algorithmia 作为开发者，编写一个频繁项集生成算法以获取多词标签。然后我们将使用这个算法，看看平台的端到端工作方式。最后，我们将查看生成的标签，并比较机器生成标签与我们手工标签的效果。
- en: '![Hand-tagged word cloud](../Images/13d5f5fca84330ee92de324708ccc489.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![手工标记的词云](../Images/13d5f5fca84330ee92de324708ccc489.png)'
- en: 'Fig 1: Word Cloud from KDnuggets 2014 Hand-Generated Tags'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1：KDnuggets 2014 手工生成标签的词云
- en: '**Scraping KDnuggets and Accessing Algorithmia**'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**抓取 KDnuggets 和访问 Algorithmia**'
- en: Before we can generate tags, we need documents to tag. Using `urllib2` and `beautifulsoup`,
    this is a fairly straightforward task in Python. The gist for the code used to
    do this can be found [here](https://gist.github.com/gr-a-m/9ad82833500bb7176dbf).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在生成标签之前，我们需要有待标记的文档。使用 `urllib2` 和 `beautifulsoup`，这在 Python 中是一个相当直接的任务。执行此操作的代码要点可以在[这里](https://gist.github.com/gr-a-m/9ad82833500bb7176dbf)找到。
- en: This code first scrapes the KDnuggets articles, and then passes the article
    to the [AutoTagUrl](https://algorithmia.com/algorithms/tags/AutoTagURL) algorithm
    on Algorithmia using `urllib2`. The same tools you use to write API-aware applications
    in Python are the same things you’d use to target Algorithmia, making this whole
    process very easy if you have any experience writing these kinds of applications.
    Once these tags are generated, a TSV file is outputted with the links, hand-made
    tags, and machine-generated tags.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码首先抓取 KDnuggets 文章，然后使用 `urllib2` 将文章传递给 Algorithmia 上的 [AutoTagUrl](https://algorithmia.com/algorithms/tags/AutoTagURL)
    算法。你用来编写 Python 中 API 友好应用程序的工具也是你用来定位 Algorithmia 的工具，这使得如果你有编写这类应用的经验，整个过程会非常简单。一旦这些标签生成，输出一个
    TSV 文件，其中包含链接、手工标签和机器生成标签。
- en: '**Writing on Algorithmia**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**在 Algorithmia 上写作**'
- en: The resulting tags looked good, but there was one glaring problem – they consisted
    only of single words. The `AutoTagUrl` algorithm depends on Mallet’s implementation
    of LDA, meaning that the output will take the form of the most representative
    word from each topic. What’s nice about Algorithmia is the emphasis on open source,
    which let me see that this is how the algorithm was performed.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的标签看起来不错，但有一个明显的问题——它们仅由单个词组成。`AutoTagUrl` 算法依赖于 Mallet 实现的 LDA，这意味着输出将采用每个主题中最具代表性的词的形式。Algorithmia
    的好处在于强调开源，这让我看到算法的执行方式。
- en: '![Generated-tags cloud](../Images/c9b89d483a6f9a52311742189d3ecc5c.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![生成的标签云](../Images/c9b89d483a6f9a52311742189d3ecc5c.png)'
- en: 'Fig 2: Tag Cloud from Machine-Generated Tags'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2：机器生成标签的标签云
- en: Never fear, by using a frequent itemset algorithm, we can group together co-occurring
    terms to recover multi-word tags like “Data Mining”. To do this task, I simply
    implemented a naïve version of the Apriori algorithm in Python on Algorithmia.
    I used their online editor, which proved to be much more refined than most others
    that I’ve used previously. The way the algorithms act like `[pip](https://pip.pypa.io/en/stable/)`
    projects makes handling dependencies easy as well. You can see my resulting algorithm
    implemented on Algorithmia [here](https://algorithmia.com/algorithms/GrantMarshall/FrequentItemsets).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 不必担心，通过使用频繁项集算法，我们可以将共同出现的术语归类在一起，以恢复多词标签如“数据挖掘”。为此，我在Algorithmia上实现了一个朴素版本的Apriori算法。我使用了他们的在线编辑器，这比我之前使用的大多数编辑器要精细得多。算法像`[pip](https://pip.pypa.io/en/stable/)`项目的方式使得处理依赖关系也变得很简单。你可以在Algorithmia上查看我实现的算法[这里](https://algorithmia.com/algorithms/GrantMarshall/FrequentItemsets)。
- en: '![Generated-tags with itemsets cloud](../Images/20a8a782225d1bb9cb5b2818433ecad4.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![生成的标签与项集云](../Images/20a8a782225d1bb9cb5b2818433ecad4.png)'
- en: 'Fig 3: Tag Cloud from Machine-Generated Tags with Frequent Itemsets'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3：机器生成标签与频繁项集的标签云
- en: '**Adding Itemsets**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**添加项集**'
- en: With our freshly minted algorithm written and published on Algorithmia, we now
    must access the algorithm to add the newer tags. This works in the same way as
    accessing the API provided by `AutoTagUrl`. The script for taking the output from
    our scraping, passing it into the Apriori algorithm, and getting the new itemset-based
    tags, can be found [here](https://gist.github.com/gr-a-m/ed6327966b99dedef365).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 使用我们新发布在Algorithmia上的算法，我们现在必须访问该算法以添加更新的标签。这与访问`AutoTagUrl`提供的API的方式相同。获取从抓取中提取的输出、传递到Apriori算法中，并获得新的基于项集的标签的脚本，可以在[这里](https://gist.github.com/gr-a-m/ed6327966b99dedef365)找到。
- en: '* * *'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你所在组织的IT需求'
- en: '* * *'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Retrieval Augmented Generation: Where Information Retrieval Meets…](https://www.kdnuggets.com/retrieval-augmented-generation-where-information-retrieval-meets-text-generation)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[检索增强生成：信息检索与…的交汇点](https://www.kdnuggets.com/retrieval-augmented-generation-where-information-retrieval-meets-text-generation)'
- en: '[Bark: The Ultimate Audio Generation Model](https://www.kdnuggets.com/2023/05/bark-ultimate-audio-generation-model.html)'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Bark：终极音频生成模型](https://www.kdnuggets.com/2023/05/bark-ultimate-audio-generation-model.html)'
- en: '[The Future of AI: Exploring the Next Generation of Generative Models](https://www.kdnuggets.com/2023/05/future-ai-exploring-next-generation-generative-models.html)'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[AI的未来：探索下一代生成模型](https://www.kdnuggets.com/2023/05/future-ai-exploring-next-generation-generative-models.html)'
- en: '[Unveiling Midjourney 5.2: A Leap Forward in AI Image Generation](https://www.kdnuggets.com/2023/06/unveiling-midjourney-52-leap-forward.html)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[揭开Midjourney 5.2的面纱：AI图像生成的飞跃](https://www.kdnuggets.com/2023/06/unveiling-midjourney-52-leap-forward.html)'
- en: '[Text-2-Video Generation: Step-by-Step Guide](https://www.kdnuggets.com/2023/08/text2video-generation-stepbystep-guide.html)'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[文本到视频生成：逐步指南](https://www.kdnuggets.com/2023/08/text2video-generation-stepbystep-guide.html)'
- en: '[How Retrieval Augment Generation Makes LLMs Smarter](https://www.kdnuggets.com/how-retrieval-augment-generation-makes-llms-smarter)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[检索增强生成如何让LLM变得更聪明](https://www.kdnuggets.com/how-retrieval-augment-generation-makes-llms-smarter)'
