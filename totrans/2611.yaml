- en: The Best Machine Learning Frameworks & Extensions for Scikit-learn
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Scikit-learn 的最佳机器学习框架与扩展
- en: 原文：[https://www.kdnuggets.com/2021/03/best-machine-learning-frameworks-extensions-scikit-learn.html](https://www.kdnuggets.com/2021/03/best-machine-learning-frameworks-extensions-scikit-learn.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/03/best-machine-learning-frameworks-extensions-scikit-learn.html](https://www.kdnuggets.com/2021/03/best-machine-learning-frameworks-extensions-scikit-learn.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: Plenty of packages implement the [Scikit-learn](https://scikit-learn.org/) estimator
    API.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 很多包实现了 [Scikit-learn](https://scikit-learn.org/) 估算器 API。
- en: If you’re already familiar with Scikit-learn, you’ll find the integration of
    these libraries pretty straightforward.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经熟悉 Scikit-learn，你会发现这些库的集成非常简单。
- en: With these packages, we can extend the functionality of Scikit-learn estimators,
    and I’ll show you how to use some of them in this article.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些包，我们可以扩展 Scikit-learn 估算器的功能，我将在本文中展示如何使用其中的一些。
- en: Data formats
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据格式
- en: In this section, we’ll explore libraries that can be used to process and transform
    data.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探讨可以用来处理和转换数据的库。
- en: '[Sklearn-pandas](https://github.com/scikit-learn-contrib/sklearn-pandas)'
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[Sklearn-pandas](https://github.com/scikit-learn-contrib/sklearn-pandas)'
- en: You can use this package to map ‘DataFrame’ columns to Scikit-learn transformations.
    Then you can combine these columns into features.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用这个包将 ‘DataFrame’ 列映射到 Scikit-learn 转换中。然后，你可以将这些列组合成特征。
- en: To start using the package, install ‘sklearn-pandas’ via pip. The ‘DataFrameMapper’
    can be used to map pandas data frame columns into Scikit-learn transformations.
    Let’s see how it’s done.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用这个包，通过 pip 安装 ‘sklearn-pandas’。‘DataFrameMapper’ 可以用于将 pandas 数据框列映射到 Scikit-learn
    转换中。我们来看看怎么做。
- en: 'First, create a dummy DataFrame:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，创建一个虚拟的 DataFrame：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `DataFrameMapper’ accepts a list of tuples – the first item’s name is the
    column name in [Pandas](https://pandas.pydata.org/) DataFrame.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrameMapper` 接受一个元组列表——第一个项的名称是 [Pandas](https://pandas.pydata.org/) DataFrame
    中的列名。'
- en: The second passed item is the kind of transformation that will be applied to
    the column.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个传递的项目是将应用于列的转换类型。
- en: For example, ‘[LabelBinarizer](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.LabelBinarizer.html)’
    can be applied to the ‘Uni’ column, whereas the ‘Age’ column is scaled using a
    ‘[StandardScaler](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.StandardScaler.html)’.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，‘[LabelBinarizer](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.LabelBinarizer.html)’
    可以应用于 ‘Uni’ 列，而 ‘Age’ 列使用 ‘[StandardScaler](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.StandardScaler.html)’
    进行缩放。
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: After defining the mapper, next we use it to fit and transform the data.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义映射器之后，接下来我们使用它来拟合和转换数据。
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `transformed_names_` attribute of the mapper can be used to show resulting
    names after the transformation.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 映射器的 `transformed_names_` 属性可以用来显示转换后的结果名称。
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![scikit-learn extensions](../Images/e20ec6b1d2a971d30cf79b13060e9d58.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![scikit-learn 扩展](../Images/e20ec6b1d2a971d30cf79b13060e9d58.png)'
- en: Passing `df_out=True` to the mapper will return your results as a Pandas DataFrame.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `df_out=True` 传递给映射器将返回你的结果作为 Pandas DataFrame。
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![scikit-learn extensions ](../Images/3af27754b889c66f1b59217310b36c41.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![scikit-learn 扩展 ](../Images/3af27754b889c66f1b59217310b36c41.png)'
- en: '[Sklearn-xarray](https://phausamann.github.io/sklearn-xarray/)'
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[Sklearn-xarray](https://phausamann.github.io/sklearn-xarray/)'
- en: This package combines n-dimensional labeled arrays from [xarray](http://xarray.pydata.org/en/stable/) with [Scikit-learn](http://scikit-learn.org/stable/) tools.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这个包结合了来自 [xarray](http://xarray.pydata.org/en/stable/) 的 n 维标记数组和 [Scikit-learn](http://scikit-learn.org/stable/)
    工具。
- en: 'You can apply Scikit-learn estimators to ‘xarrays’ without losing their labels.
    You can also:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将 Scikit-learn 估算器应用于 ‘xarrays’ 而不丢失它们的标签。你还可以：
- en: ensure compatibility between Sklearn estimators with xarray DataArrays and Datasets,
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保 Sklearn 估算器与 xarray DataArrays 和 Datasets 之间的兼容性，
- en: enable estimators to change the number of samples,
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使估算器能够更改样本数量，
- en: have pre-processing transformers.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有预处理转换器。
- en: Sklearn-xarray is basically a bridge between xarray and Scikit-learn. In order
    to use its functionalities, install ‘sklearn-xarray’ via pip or ‘conda’.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Sklearn-xarray 基本上是 xarray 和 Scikit-learn 之间的桥梁。为了使用它的功能，通过 pip 或 ‘conda’ 安装
    ‘sklearn-xarray’。
- en: The package has wrappers, which let you use sklearn estimators on xarray DataArrays
    and Datasets. To illustrate this, let’s first create a ‘DataArray’.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这个包有封装器，可以让你在 xarray DataArrays 和 Datasets 上使用 sklearn 估算器。为了说明这一点，我们首先创建一个
    ‘DataArray’。
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![scikit-learn extensions ](../Images/72abea9b124f6c109fed33700306eb55.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![scikit-learn 扩展 ](../Images/72abea9b124f6c109fed33700306eb55.png)'
- en: Select one transformation from Sklearn to apply to this ‘DataArray’. In this
    case, [let’s apply](https://phausamann.github.io/sklearn-xarray/content/wrappers.html) the
    ‘StandardScaler’.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Sklearn 中选择一个变换应用于此‘DataArray’。在这种情况下，[让我们应用](https://phausamann.github.io/sklearn-xarray/content/wrappers.html)‘StandardScaler’。
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![scikit-learn extensions ](../Images/0608abb02873fc4fb3286eac01d25fda.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![scikit-learn 扩展](../Images/0608abb02873fc4fb3286eac01d25fda.png)'
- en: Wrapped estimators can be used in Sklearn pipelines seamlessly.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 包装的估算器可以无缝地在 Sklearn 管道中使用。
- en: '[PRE7]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: When fitting this pipeline, you will just pass in the DataArray.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在拟合该管道时，你只需传入 DataArray。
- en: Similarly, DataArrays can be used in a cross-validated grid search.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，DataArrays 可以用于交叉验证的网格搜索。
- en: For this, you need to create a ‘CrossValidatorWrapper’ instance from ‘sklearn-xarray’.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，你需要从 ‘sklearn-xarray’ 创建一个 ‘CrossValidatorWrapper’ 实例。
- en: '[PRE8]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: After that, you will fit the ‘gridsearch’ to X and y in the ‘DataArray’ data
    type.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，你将把‘gridsearch’拟合到‘DataArray’ 数据类型中的 X 和 y。
- en: Auto-ML
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自动机器学习
- en: Are there tools and libraries that integrate Sklearn for better Auto-ML? Yes
    there are, and here are some examples.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 有没有将 Sklearn 集成到 Auto-ML 中以获得更好效果的工具和库？有的，以下是一些示例。
- en: '[Auto-sklearn](https://automl.github.io/auto-sklearn/master/)'
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[Auto-sklearn](https://automl.github.io/auto-sklearn/master/)'
- en: With this, you can perform automated machine learning with Scikit-learn. For
    the setup you need to [install](https://automl.github.io/auto-sklearn/master/installation.html) some
    dependencies manually.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个，你可以通过 Scikit-learn 执行自动化机器学习。对于设置，你需要手动[安装](https://automl.github.io/auto-sklearn/master/installation.html)一些依赖项。
- en: '[PRE9]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Next, install ‘auto-sklearn’ via pip.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，通过 pip 安装‘auto-sklearn’。
- en: When using this tool, you don’t need to worry about algorithm selection and
    hyper-parameter tuning. Auto-sklearn does all that for you.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个工具时，你无需担心算法选择和超参数调整。Auto-sklearn 会为你完成这些工作。
- en: It does this thanks to the [latest advances](https://proceedings.neurips.cc/paper/2015/file/11d0e6287202fced83f79975ec59a3a6-Paper.pdf) in
    Bayesian optimization, meta-learning, and ensemble construction.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这得益于[最新的进展](https://proceedings.neurips.cc/paper/2015/file/11d0e6287202fced83f79975ec59a3a6-Paper.pdf)在贝叶斯优化、元学习和集成构建方面。
- en: To use it, you need to select a classifier or regressor, and fit it to the training
    set.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 使用时，你需要选择一个分类器或回归器，并将其拟合到训练集上。
- en: '[PRE10]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[Auto_ViML](https://github.com/AutoViML) – Automatic Variant Interpretable
    Machine Learning” (pronounced “Auto_Vimal”)'
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[Auto_ViML](https://github.com/AutoViML) – 自动变体可解释机器学习（发音为“Auto_Vimal”）'
- en: Given a certain dataset, Auto_ViML tries out different models with varying features.
    It eventually settles on the best performing model.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个特定的数据集，Auto_ViML 尝试不同的模型和特征。最终它会选择表现最佳的模型。
- en: 'The package also selects the least number of features possible in building
    the model. This gives you a less complex and interpretable model. This package
    also:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 该包还在构建模型时选择尽可能少的特征。这为你提供了一个较少复杂且更易解释的模型。该包还：
- en: helps you clean data by suggesting changes to missing values, formatting, and
    adding variables;
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帮助你通过建议对缺失值、格式化和添加变量进行数据清理；
- en: classifies variables automatically, whether it’s text, data, or numerical;
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动分类变量，无论是文本、数据还是数值；
- en: generates model performance graphs automatically when verbose is set to 1 or
    2;
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当详细程度设置为 1 或 2 时，自动生成模型性能图；
- en: lets you use of ‘featuretools’ for feature engineering;
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许你使用‘featuretools’进行特征工程；
- en: handles imbalance data when ‘Imbalanced_Flag’ is set to ‘True’
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当‘Imbalanced_Flag’设置为‘True’时，处理不平衡数据
- en: To see it in action, install ‘autoviml’ via pip.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看其实际效果，可以通过 pip 安装‘autoviml’。
- en: '[PRE11]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[TPOT –](http://proceedings.mlr.press/v64/olson_tpot_2016.pdf) Tree-based Pipeline
    Optimization Tool'
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[TPOT –](http://proceedings.mlr.press/v64/olson_tpot_2016.pdf) 基于树的管道优化工具'
- en: This is a Python-based auto-ml tool. It uses genetic programming to optimize
    machine learning pipelines.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个基于 Python 的自动机器学习工具。它使用遗传编程来优化机器学习管道。
- en: It explores multiple pipelines in order to settle on the best one for your dataset.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 它探索多个管道以确定最适合你的数据集的管道。
- en: Install ‘tpot’ via pip to start tinkering with it. After running ‘tpot’, you
    can save the resulting pipeline in a file. The file will be exported once the
    exploration process is completed or when you terminate the process.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 pip 安装‘tpot’来开始使用它。运行‘tpot’后，你可以将生成的管道保存在文件中。探索过程完成或终止时，文件将被导出。
- en: The snippet below shows how you can create a classification pipeline on the
    digits dataset.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码片段展示了如何在数字数据集上创建分类管道。
- en: '[PRE12]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[Feature Tools](https://github.com/alteryx/featuretools)'
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[Feature Tools](https://github.com/alteryx/featuretools)'
- en: This is a tool for automated feature engineering. It works by transforming temporal
    and relational datasets into feature matrices.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个自动特征工程工具。它通过将时间序列和关系数据集转化为特征矩阵来工作。
- en: Install ‘featuretools[complete]’ via pip to start using it.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 通过pip安装‘featuretools[complete]’以开始使用它。
- en: Deep Feature Synthesis (DFS) can be used for automated feature engineering.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 深度特征合成（DFS）可用于自动特征工程。
- en: First, you define a dictionary containing all entities in a dataset. In ‘featuretools’,
    an entity is a single table. After that, the relationship between the different
    entities is defined.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，定义一个包含数据集中所有实体的字典。在‘featuretools’中，实体是单个表。之后，定义不同实体之间的关系。
- en: The next step is to pass the entities, list of relationships, and the target
    entity to DFS. This will get you the feature matrix and the corresponding list
    of feature definitions.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将实体、关系列表和目标实体传递给DFS。这将为你提供特征矩阵及相应的特征定义列表。
- en: '[PRE13]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[Neuraxle](https://www.neuraxle.org/)'
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[Neuraxle](https://www.neuraxle.org/)'
- en: You can use Neuraxle for hyperparameter tuning and AutoML. Install ‘neuraxle’
    via pip to start using it.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用Neuraxle进行超参数调整和AutoML。通过pip安装‘neuraxle’以开始使用它。
- en: 'Apart from Scikit-learn, Neuraxle is also compatible with Keras, TensorFlow,
    and PyTorch. It also has:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 除了Scikit-learn，Neuraxle还兼容Keras、TensorFlow和PyTorch。它还具有：
- en: parallel computation and serialization,
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并行计算和序列化，
- en: time series processing through the provision of abstractions key to such projects.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过提供关键抽象进行时间序列处理。
- en: 'To do auto-ml with Neuraxle, you need:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Neuraxle进行Auto-ml，你需要：
- en: a defined pipeline
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个定义的管道
- en: a validation splitter
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个验证分割器
- en: definition of a scoring metric via the ‘ScoringCallback’
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过‘ScoringCallback’定义评分指标
- en: a selected ‘hyperparams’ repository
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个选择的‘hyperparams’仓库
- en: a selected ‘hyperparams’ optimizer
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个选择的‘hyperparams’优化器
- en: an ‘AutoML’ loop
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个‘AutoML’循环
- en: Check out a complete [example here](https://www.neuraxle.org/stable/hyperparameter_tuning.html).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里查看完整[示例](https://www.neuraxle.org/stable/hyperparameter_tuning.html)。
- en: Experimentation frameworks
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实验框架
- en: Now it’s time for a couple of SciKit tools that you can use for machine learning
    experimentation.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是一些你可以用于机器学习实验的SciKit工具。
- en: '[SciKit-Learn Laboratory](https://scikit-learn-laboratory.readthedocs.io/en/latest/)'
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[SciKit-Learn实验室](https://scikit-learn-laboratory.readthedocs.io/en/latest/)'
- en: SciKit-Learn Laboratory is a command-line tool you can use to run machine learning
    experiments. To start using it, install `skll` via pip.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: SciKit-Learn实验室是一个你可以用来运行机器学习实验的命令行工具。要开始使用它，通过pip安装`skll`。
- en: After that, you need to obtain a dataset in the `SKLL` format.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你需要获得一个`SKLL`格式的数据集。
- en: Next, create a [configuration file](https://skll.readthedocs.io/en/latest/run_experiment.html#create-config) for
    the experiment, and run the experiment in the terminal.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为实验创建一个[配置文件](https://skll.readthedocs.io/en/latest/run_experiment.html#create-config)，然后在终端中运行实验。
- en: '[PRE14]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: When the experiment is complete, multiple files will be stored in the [results](https://skll.readthedocs.io/en/latest/run_experiment.html#results) folder.
    You can use these files to examine the experiment.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 实验完成后，多个文件将存储在[结果](https://skll.readthedocs.io/en/latest/run_experiment.html#results)文件夹中。你可以使用这些文件来检查实验。
- en: Neptune
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Neptune
- en: The [Scikit-learn integration of Neptune](https://docs.neptune.ai/integrations/sklearn.html) lets
    you log your experiments using Neptune. For instance, you can log the summary
    of your Scikit-learn regressor.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[Scikit-learn与Neptune的集成](https://docs.neptune.ai/integrations/sklearn.html)
    允许你使用Neptune记录实验。例如，你可以记录Scikit-learn回归器的总结。'
- en: '[PRE15]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Check out this [notebook](https://colab.research.google.com/github/neptune-ai/neptune-examples/blob/master/integrations/sklearn/docs/Neptune-Scikit-learn.ipynb#scrollTo=GvDSBSrOx-R4) for
    the complete example.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 查看这个[笔记本](https://colab.research.google.com/github/neptune-ai/neptune-examples/blob/master/integrations/sklearn/docs/Neptune-Scikit-learn.ipynb#scrollTo=GvDSBSrOx-R4)获取完整示例。
- en: Model selection
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模型选择
- en: Let’s now shift gears, and look at SciKit libraries that are focused on model
    selection and optimization.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们转到专注于模型选择和优化的SciKit库。
- en: '[Scikit-optimize](https://scikit-optimize.github.io/stable/)'
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[Scikit-optimize](https://scikit-optimize.github.io/stable/)'
- en: This library implements methods for sequential model-based optimization. Install
    ‘scikit-optimize’ via pip to start using these functions.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 该库实现了用于序列模型优化的方法。通过pip安装‘scikit-optimize’以开始使用这些功能。
- en: Scikit-optimize can be used to perform hyper-parameter tuning via Bayesian optimization
    based on the Bayes theorem.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: Scikit-optimize可以通过基于贝叶斯定理的贝叶斯优化来执行超参数调整。
- en: You use ‘BayesSearchCV’ to obtain the best parameters using this theorem. A
    Scikit-learn model is passed to it as the first argument.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 ‘BayesSearchCV’ 来利用这个定理获得最佳参数。一个 Scikit-learn 模型作为第一个参数传递给它。
- en: '[PRE16]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: After fitting, you can get the best parameters of the model via the ‘best_params_’
    attribute.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 拟合后，你可以通过 ‘best_params_’ 属性获取模型的最佳参数。
- en: '[Sklearn-deap](https://github.com/rsteca/sklearn-deap)'
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[Sklearn-deap](https://github.com/rsteca/sklearn-deap)'
- en: Sklearn-deap is a package used to implement [evolutionary algorithms](https://en.wikipedia.org/wiki/Evolutionary_algorithm).
    It reduces the time you need to find the best parameters for the model.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: Sklearn-deap 是一个用于实现 [进化算法](https://en.wikipedia.org/wiki/Evolutionary_algorithm)
    的包。它减少了你找到模型最佳参数所需的时间。
- en: It doesn’t try out every possible combination, but only evolves the combination
    that results in the best performance. Install ‘sklearn-deap’ via pip.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 它不会尝试每一种可能的组合，而是只演化出最佳性能的组合。通过 pip 安装 ‘sklearn-deap’。
- en: '[PRE17]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Model export for production
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 生产模型导出
- en: Moving on, let’s now look at Scikit tools that you can use to export your models
    for production.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看可以用来将模型导出到生产环境的 Scikit 工具。
- en: '[sklearn-onnx](https://github.com/onnx/sklearn-onnx/)'
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[sklearn-onnx](https://github.com/onnx/sklearn-onnx/)'
- en: sklearn-onnx enables the conversion of Sklearn models to [ONNX](https://onnx.ai/).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: sklearn-onnx 使得将 Sklearn 模型转换为 [ONNX](https://onnx.ai/) 成为可能。
- en: To use it, you need to get ‘skl2onnx’ via pip. Once your pipeline is ready,
    you can use the ‘to_onnx’ function to [convert](http://onnx.ai/sklearn-onnx/auto_tutorial/plot_abegin_convert_pipeline.html) the
    model to ONNX.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用它，你需要通过 pip 安装 ‘skl2onnx’。一旦你的管道准备好，你可以使用 ‘to_onnx’ 函数来 [转换](http://onnx.ai/sklearn-onnx/auto_tutorial/plot_abegin_convert_pipeline.html)
    模型为 ONNX。
- en: '[PRE18]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[Treelite](https://treelite.readthedocs.io/en/latest/)'
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[Treelite](https://treelite.readthedocs.io/en/latest/)'
- en: This is a model compiler for decision tree ensembles.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个用于决策树集成的模型编译器。
- en: It handles various tree-based models, such as random forests and gradient boosted
    trees.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 它处理各种基于树的模型，如随机森林和梯度提升树。
- en: You can use it to import Scikit-learn models. Here, ‘model’ is a scikit-learn
    model object.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以用它来导入 Scikit-learn 模型。在这里，‘model’ 是一个 Scikit-learn 模型对象。
- en: '[PRE19]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Model inspection and visualization
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模型检查和可视化
- en: In this section, let’s look at libraries that can be used for model visualization
    and inspection.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，让我们看看可以用于模型可视化和检查的库。
- en: '[Dtreeviz](https://github.com/parrt/dtreeviz/)'
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[Dtreeviz](https://github.com/parrt/dtreeviz/)'
- en: dtreeviz is used for decision tree visualization and model interpretation.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: dtreeviz 用于决策树可视化和模型解释。
- en: '[PRE20]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![](../Images/d12bd6f8518cbf2053f0378db032cb43.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d12bd6f8518cbf2053f0378db032cb43.png)'
- en: '[Eli5](https://github.com/TeamHG-Memex/eli5/)'
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[Eli5](https://github.com/TeamHG-Memex/eli5/)'
- en: eli5 is a package that can be used for debugging and inspecting machine learning
    classifiers. You can also use it to explain their predictions.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: eli5 是一个可以用于调试和检查机器学习分类器的包。你还可以用它来解释它们的预测。
- en: 'For example, an explanation of Scikit-learn estimator weights can be shown
    as follows:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，Scikit-learn 估计器权重的解释可以如下所示：
- en: '[PRE21]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![scikit-learn extensions ](../Images/2f9114ee1b717a317a3ddf58fa13bfc1.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![scikit-learn 扩展 ](../Images/2f9114ee1b717a317a3ddf58fa13bfc1.png)'
- en: Other SciKit tools
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他 SciKit 工具
- en: '[dabl ](https://github.com/amueller/dabl)– Data Analysis Baseline Library'
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[dabl](https://github.com/amueller/dabl)– 数据分析基线库'
- en: dabl provides boilerplate code for common machine learning tasks. It’s still
    in active development, so it’s not recommended for production systems.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: dabl 提供了常见机器学习任务的样板代码。它仍在积极开发中，因此不建议用于生产系统。
- en: '[PRE22]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[skorch](https://github.com/skorch-dev/skorch)'
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[skorch](https://github.com/skorch-dev/skorch)'
- en: Skorch is a Scikit-learn wrapper for PyTorch.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: Skorch 是一个用于 PyTorch 的 Scikit-learn 包装器。
- en: It lets you use PyTorch in Scikit-learn. It supports numerous data types, like
    PyTorch Tensors, NumPy arrays and Python dictionaries.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 它让你在 Scikit-learn 中使用 PyTorch。它支持多种数据类型，如 PyTorch Tensors、NumPy 数组和 Python 字典。
- en: '[PRE23]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Final thoughts
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最后的想法
- en: In this article, we explored some of the popular tools and libraries that extend
    the Scikit-learn ecosystem.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们深入探讨了一些扩展 Scikit-learn 生态系统的流行工具和库。
- en: 'As you see, these tools can be used to:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，这些工具可以用来：
- en: process and transform data,
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理和转换数据，
- en: implement automated machine learning,
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现自动化机器学习，
- en: perform automatic feature selection,
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行自动特征选择，
- en: run machine learning experimentation,
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进行机器学习实验，
- en: select the best models and pipelines for your problem,
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择适合你问题的最佳模型和管道，
- en: export models for production…
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出模型以用于生产……
- en: …and much more!
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: ……还有更多！
- en: Try out these packages in your Scikit-learn workflow, and you might be surprised
    how convenient they are.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的 Scikit-learn 工作流中试试这些包，您可能会惊讶于它们的便利性。
- en: '**Bio: Derrick Mwiti** is a data scientist who has a great passion for sharing
    knowledge. He is an avid contributor to the data science community via blogs such
    as Heartbeat, Towards Data Science, Datacamp, Neptune AI, KDnuggets just to mention
    a few. His content has been viewed over a million times on the internet. Derrick
    is also an author and online instructor. He also trains and works with various
    institutions to implement data science solutions as well as to upskill their staff.
    You might want to check his [Complete Data Science & Machine Learning Bootcamp
    in Python course](https://www.udemy.com/course/data-science-bootcamp-in-python/?referralCode=9F6DFBC3F92C44E8C7F4).'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：德里克·姆维提** 是一位数据科学家，对分享知识充满热情。他是数据科学社区的积极贡献者，常在 Heartbeat、Towards Data
    Science、Datacamp、Neptune AI、KDnuggets 等博客上发布内容。他的内容在互联网上的浏览量已超过一百万次。德里克还是一名作者和在线讲师。他还与多个机构合作，实施数据科学解决方案并提升其员工技能。您可能会对他的[Python
    完整数据科学与机器学习训练营课程](https://www.udemy.com/course/data-science-bootcamp-in-python/?referralCode=9F6DFBC3F92C44E8C7F4)感兴趣。'
- en: '[Original](https://neptune.ai/blog/the-best-ml-framework-extensions-for-scikit-learn).
    Reposted with permission.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://neptune.ai/blog/the-best-ml-framework-extensions-for-scikit-learn)。经许可转载。'
- en: '**Related:**'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关内容：**'
- en: '[Top Python Libraries for Data Science, Data Visualization & Machine Learning](/2020/11/top-python-libraries-data-science-data-visualization-machine-learning.html)'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学、数据可视化和机器学习的顶级 Python 库](/2020/11/top-python-libraries-data-science-data-visualization-machine-learning.html)'
- en: '[Top Python Libraries for Deep Learning, Natural Language Processing & Computer
    Vision](/2020/11/top-python-libraries-deep-learning-natural-language-processing-computer-vision.html)'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[深度学习、自然语言处理和计算机视觉的顶级 Python 库](/2020/11/top-python-libraries-deep-learning-natural-language-processing-computer-vision.html)'
- en: '[Pruning Machine Learning Models in TensorFlow](/2020/12/pruning-machine-learning-models-tensorflow.html)'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 TensorFlow 中修剪机器学习模型](/2020/12/pruning-machine-learning-models-tensorflow.html)'
- en: '* * *'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业道路。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升您的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持您的组织进行 IT 支持'
- en: '* * *'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[停止学习数据科学以寻找目的，并寻找目的去…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习数据科学的统计学顶级资源](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[一项 90 亿美元的人工智能失败，深度剖析](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[成功数据科学家的 5 个特征](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[是什么让 Python 成为初创公司的理想编程语言](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个数据科学家都应该了解的三个 R 库（即使你使用 Python）](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
