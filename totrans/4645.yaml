- en: 'PyViz: Simplifying the Data Visualisation Process in Python'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/06/pyviz-data-visualisation-python.html](https://www.kdnuggets.com/2019/06/pyviz-data-visualisation-python.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '**By [Parul Pandey](https://www.linkedin.com/in/parul-pandey-a5498975/), Data
    Science Enthusiast**'
  prefs: []
  type: TYPE_NORMAL
- en: The purpose of visualization is insight, not pictures.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ―Ben Shneiderman
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: If you work with data, then Data Visualisation is a vital part of your daily
    routine. And if you use Python for your analysis, you ought to be overwhelmed
    by the sheer amount of choices present in form of Data Visualisation libraries.
    Some libraries like Matplotlib are used for initial basic exploration but are
    not so useful for showing complex relationships in data. There are some which
    work well with large datasets while there are still others which mainly focus
    on 3D renderings. In fact, there isn’t a single visualisation library which can
    be referred to as the best one. There are certain features in one that is better
    than the other and vice versa. In short, there are a lot of options and it is
    impossible to learn and try them all or maybe, get them all to work together.
    So how do we get our job done? PyViz may have an answer.
  prefs: []
  type: TYPE_NORMAL
- en: Python’s Current Visualisation Landscape
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The existing Python Data Visualisation system appears to be a confusing Mesh.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/27489845e7199d0bd1c90d77cb52c567.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Source](http://pyviz.org/tutorial/01_Workflow_Introduction.html)'
  prefs: []
  type: TYPE_NORMAL
- en: Now, to choose the best tool for our job from amongst all of these is a bit
    tricky and confusing. PyViz tries to plug this situation. It helps to streamline
    the process of working with small and large datasets (from a few points to billions)
    in a web browser, whether doing exploratory analysis, making simple widget-based
    tools or building full-featured dashboards.
  prefs: []
  type: TYPE_NORMAL
- en: PyViz Ecosystem
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PyViz](http://pyviz.org/) is a coordinated effort to make data visualization
    in Python easier to use, learn and more powerful. PyViz consists of a set of open-source
    Python packages to work effortlessly with both small and large datasets right
    in the web browsers. PyViz is just the choice for something as simple as mere
    EDA or something as complex as creating a widget enabled dashboard.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Here is the Python’s visualisation landscape with PyViz.**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Python’s visualisation landscape with PyViz.](../Images/a831c55e528b8bb66bed02795e43ead6.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Source](http://pyviz.org/tutorial/01_Workflow_Introduction.html)'
  prefs: []
  type: TYPE_NORMAL
- en: PyViz Goals
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Some of the important goals of Pyviz are:'
  prefs: []
  type: TYPE_NORMAL
- en: Emphasis should be on data of any size not coding
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Full functionality and interactivity should be available right in the browsers(not
    desktops)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The focus should be more on people who are Python users and not web programmers.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Again focus should be more on 2D viz more than 3D.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploitation of general -purpose SciPy/PyData tools with which the Python users
    are already familiar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Libraries
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The open source [libraries](http://pyviz.org/background.html) which constitute
    PyViz are:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/18677c51bc84cd86b6ac162149548f1c.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](../Images/765a5c8e55fc50fcda48c268c989b007.png)'
  prefs: []
  type: TYPE_IMG
- en: '[**HoloViews** ](http://holoviews.org/): Declarative objects for instantly
    visualizable data, building Bokeh plots from convenient high-level specifications'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**GeoViews** ](http://geo.holoviews.org/): Visualizable geographic data that
    that can be mixed and matched with HoloViews objects'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Bokeh** ](http://bokeh.pydata.org/): Interactive plotting in web browsers,
    running JavaScript but controlled by Python'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Panel** ](http://panel.pyviz.org/): Assembling objects from many different
    libraries into a layout or app, whether in a Jupyter notebook or in a standalone
    serveable dashboard'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Datashader** ](http://datashader.org/): Rasterizing huge datasets quickly
    as fixed-size images'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**hvPlot** ](http://hvplot.pyviz.org/): Quickly return interactive HoloViews
    or GeoViews objects from your Pandas, Xarray, or other data structures'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Param** ](http://param.pyviz.org/): Declaring user-relevant parameters,
    making it simple to work with widgets inside and outside of a notebook context'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apart from this, PyViz core tools can work seamlessly with the following libraries.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/56a5d7549a531177559b06d2c88375a2.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](../Images/545550091b111de208200cf88f94da4c.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](../Images/b2eac12dddc9b91b672a900cde72701e.png)'
  prefs: []
  type: TYPE_IMG
- en: Also, Objects from nearly every other plotting library can be used with [**Panel** ](https://panel.pyviz.org/),
    including specific support for all those listed here plus anything that can generate
    HTML, PNG, or SVG. **HoloViews** also supports [**Plotly** ](https://plot.ly/)for
    3D visualizations.
  prefs: []
  type: TYPE_NORMAL
- en: Resources
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: PyViz provides examples, demos and training materials documenting how to solve
    visualization problems. This tutorial provides starting points for solving your
    own visualization problems. The entire tutorial material is also hosted at their[ Github
    Repository](https://github.com/pyviz/pyviz).
  prefs: []
  type: TYPE_NORMAL
- en: Installation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Please consult [pyviz.org ](http://pyviz.org/installation.html)for full instructions
    on installation of the software used in these tutorials. Here is the condensed
    version of those instructions, assuming you have already downloaded and installed [Anaconda ](https://www.anaconda.com/download)or [Miniconda ](https://conda.io/miniconda.html):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Once everything is installed, the following cell should print ‘1.11.0a4’ or
    later:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: If it completes without errors your environment should be ready to go.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring Data with PyViz
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this section, we will see how different libraries are effective in bringing
    out different insights from data and their conjunction can really help to analyse
    data in a better way.
  prefs: []
  type: TYPE_NORMAL
- en: '**Dataset**'
  prefs: []
  type: TYPE_NORMAL
- en: The dataset being used pertains to the number of [cases of measles and pertussis
    recorded](http://graphics.wsj.com/infectious-diseases-and-vaccines/#b02g20t20w15) per,
    100,000 people over time in each state of the US. The dataset comes pre-installed
    with the PyViz tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: '**Data Exploration with Pandas**'
  prefs: []
  type: TYPE_NORMAL
- en: In any Data Science project, it is but natural to begin the exploration with
    pandas. Let us import and display the first few rows of our dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/319c1858c1ff6b833f2427dc22e1783f.png)'
  prefs: []
  type: TYPE_IMG
- en: Numbers are good but a plot would give us a better idea about the patterns in
    the data.
  prefs: []
  type: TYPE_NORMAL
- en: '**Data Exploration with Matplotlib**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/e83fb97312cf103486b62752ef31c456.png)'
  prefs: []
  type: TYPE_IMG
- en: This doesn’t convey much. Let’s do some manipulations with pandas to get meaningful
    results.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/0b2c2ad5b4effed9811d7b7b51dcb0a3.png)'
  prefs: []
  type: TYPE_IMG
- en: This makes much more sense. Here we can clearly infer that around 1970, something
    happened which brought down the rate of measles to almost nil. This is true since
    measles vaccines were introduced in the US around 1963 [[Wikipedia](https://en.wikipedia.org/wiki/Measles_vaccine)]
  prefs: []
  type: TYPE_NORMAL
- en: '**Data Exploration with HVPlot and Bokeh**'
  prefs: []
  type: TYPE_NORMAL
- en: The plots above convey the right information but provide no interactivity. This
    is because they are static plots without the functionalities of the pan, hover
    or zoom in a web browser. However, we can achieve this interactive functionality
    by a mere import of the`** hvplot**` package.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/275fc8c22d85f1cdeaa0ed355756f083.png)'
  prefs: []
  type: TYPE_IMG
- en: What is returned by the call is called a [**HoloViews**](http://holoviews.org/) object
    (here Holoviews [Curve](http://holoviews.org/reference/elements/bokeh/Curve.html))which *displays* as
    a Bokeh plot. Holoviews plots are much richer and make it easy to capture your
    understanding while exploring the data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s see what else can be done with HoloViews:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Capturing important points on the Plot itself**'
  prefs: []
  type: TYPE_NORMAL
- en: 1963 was important with respect to measles and how about we record this point
    on the graph itself. This will also help us to compare the number of measles cases
    before and after the vaccine introduction.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/c0bffa04f10ce31d0f62f7a9b5c605b7.png)'
  prefs: []
  type: TYPE_IMG
- en: Holoviews objects preserve the original data as opposed to other plotting libraries.
    For instance, it is possible to access the original data in tabular format.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/64582432bf292870cede1ecee10e8cc4.png)'
  prefs: []
  type: TYPE_IMG
- en: Here we were able to use the data that was used for making the plot. Also, it
    is now very easy to break data in many different ways.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/e8cc8b167576881bb62ce8ee47ac4a89.png)'
  prefs: []
  type: TYPE_IMG
- en: Instead of a dropdown, we can place charts side by side for better comparison.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/793732d49a2711dcea19f5b26e636304.png)'
  prefs: []
  type: TYPE_IMG
- en: We can also change the type of plots, say to a bar chart. Let us compare the
    measles pattern from 1980 to 1985 across four states.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/fb6aaa4a69096c3ca9b9db1ffd57c756.png)'
  prefs: []
  type: TYPE_IMG
- en: It is quite evident from the examples above that by choosing **HoloViews+Bokeh **plots,
    we get the ability to explore data in our browser itself, with full interactivity
    and minimal code.
  prefs: []
  type: TYPE_NORMAL
- en: '**Visualising large datasets with PyViz**'
  prefs: []
  type: TYPE_NORMAL
- en: PyViz also enables working on very large datasets with ease. For such datasets,
    other members of PyViz suite come into the picture.
  prefs: []
  type: TYPE_NORMAL
- en: '[**GeoViews**](http://geoviews.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Datashader**](http://datashader.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Panel**](https://panel.pyviz.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Param**](https://param.pyviz.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Colorcet **](https://colorcet.pyviz.org/)**for **perceptually uniform colormaps
    for big data'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To show you the capabilities of these libraries when handling voluminous amount
    of data, let’s work with the NYC taxi dataset which consists of data pertaining
    to a whopping 10 million taxi trips. Again this data is already provided in the
    tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '[**Dask**](http://docs.dask.org/en/latest/) is a flexible library for parallel
    computing in Python. A Dask DataFrame is a large parallel DataFrame composed of
    many smaller Pandas DataFrames, split along the index. These Pandas DataFrames
    may live on disk for larger-than-memory computing on a single machine, or on many
    different machines in a cluster. One Dask DataFrame operation triggers many operations
    on the constituent Pandas DataFrames.'
  prefs: []
  type: TYPE_NORMAL
- en: '[**Cartopy**](https://scitools.org.uk/cartopy/docs/latest/) is a Python package
    designed for geospatial data processing in order to produce maps and other geospatial
    data analyses.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Reading in and plotting the data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/ed57941c710831220406025436a02947.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can also add[ widgets](http://pyviz.org/tutorial/01_Workflow_Introduction.html) to
    control the selections. This can be either done in the notebook or in a standalone
    server by marking the servable objects with `.servable()` then running the .ipynb
    file through Bokeh Server or extracting the code to a separate .py file and doing
    the same thing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '**Taxi explorer**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9cabd372c826098738ab75c89c7c3b0d.png)'
  prefs: []
  type: TYPE_IMG
- en: The Notebook with all the running code can be accessed from [here](https://github.com/parulnith/Data-Visualisation-libraries/tree/master/Data%20Visualisation%20with%20PyViz).
    However, the interactiveness does not render on GitHub but you can still access
    the notebook and run locally.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The PyViz tools help us to create beautiful visualisations even with a small
    amount of code. The PyViz tools bundle up together to build high-performance,
    scalable, flexible, and deployable visualizations, apps, and dashboards, without
    having to use JavaScript or other web technologies explicitly. This article is
    just a mere introduction to the multi useful PyViz ecosystem. Go through the entire
    tutorial to understand the intricacies and its usage for different types of data.
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Parul Pandey](https://www.linkedin.com/in/parul-pandey-a5498975/)**
    is a Data Science enthusiast who frequently writes for Data Science publications
    such as Towards Data Science.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/pyviz-simplifying-the-data-visualisation-process-in-python-1b6d2cb728f1).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[5 Quick and Easy Data Visualizations in Python with Code](/2018/07/5-quick-easy-data-visualizations-python-code.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Python Graph Gallery](/2017/11/python-graph-gallery.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Visualising Geospatial data with Python using Folium](/2018/09/visualising-geospatial-data-python-folium.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
