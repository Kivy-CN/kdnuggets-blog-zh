- en: 5 Step Guide to Scalable Deep Learning Pipelines with d6tflow
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用d6tflow构建可扩展深度学习管道的5步指南
- en: 原文：[https://www.kdnuggets.com/2019/09/5-step-guide-scalable-deep-learning-pipelines-d6tflow.html](https://www.kdnuggets.com/2019/09/5-step-guide-scalable-deep-learning-pipelines-d6tflow.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/09/5-step-guide-scalable-deep-learning-pipelines-d6tflow.html](https://www.kdnuggets.com/2019/09/5-step-guide-scalable-deep-learning-pipelines-d6tflow.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Norman Niemer](https://www.linkedin.com/in/normanniemer/), Chief Data
    Scientist & [Samuel Showalter](https://www.linkedin.com/in/samuelrshowalter/),
    Technology Consultant**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者 [Norman Niemer](https://www.linkedin.com/in/normanniemer/)，首席数据科学家 & [Samuel
    Showalter](https://www.linkedin.com/in/samuelrshowalter/)，技术顾问**'
- en: 'Introduction: Why bother?'
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 介绍：为什么要这样做？
- en: Building deep learning models typically involves complex data pipelines as well
    as a lot of trial and error, tweaking model architecture and parameters whose
    performance needs to be compared. It is often difficult to keep track of all the
    experiments, leading at best to confusion and at worst wrong conclusions.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 构建深度学习模型通常涉及复杂的数据管道，以及大量的试错过程、调整模型架构和参数，这些参数的性能需要进行比较。通常很难跟踪所有实验，这往往会导致困惑，最糟糕的情况则是得出错误结论。
- en: In [4 reasons why your ML code is bad](https://www.kdnuggets.com/2019/02/4-reasons-machine-learning-code-probably-bad.html) we
    explored how to organize ML code as DAG workflows to solve that problem. In this
    guide we will go through a practical case study on turning an existing pytorch
    script into a scalable deep learning pipeline with [d6tflow](https://github.com/d6t/d6tflow).
    The starting point is [a pytorch deep recommender model by Facebook](https://github.com/facebookresearch/dlrm) and
    we will go through the 5 steps of migrating the code into a scalable deep learning
    pipeline. The steps below are written in partial pseudo code to illustrate concepts,
    the full code is available also, see instructions at the end of the article.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [4个原因说明为什么你的机器学习代码很糟糕](https://www.kdnuggets.com/2019/02/4-reasons-machine-learning-code-probably-bad.html) 中，我们探讨了如何将机器学习代码组织为DAG工作流以解决这个问题。在本指南中，我们将通过一个实际案例研究，将现有的pytorch脚本转换为使用 [d6tflow](https://github.com/d6t/d6tflow) 的可扩展深度学习管道。起点是 [Facebook的pytorch深度推荐模型](https://github.com/facebookresearch/dlrm)，我们将经过将代码迁移到可扩展深度学习管道的5个步骤。下面的步骤以部分伪代码形式编写以说明概念，完整代码也可用，详见文章末尾的说明。
- en: Lets get started!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 开始吧！
- en: 'Step 1: Plan your DAG'
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 1：规划你的DAG
- en: To plan your work and help others understand how your pipeline fits together,
    you want to start by thinking about the data flow, dependencies between tasks
    and task parameters. This helps you organize your workflow into logical components.
    You might want to draw a diagram such as this
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了规划你的工作并帮助他人理解你的管道如何整合在一起，你需要首先考虑数据流、任务之间的依赖关系和任务参数。这有助于你将工作流组织成逻辑组件。你可能会想绘制一个类似这样的图示
- en: '![Figure](../Images/2189cbf5f8c337089b4f91bc52b9fc1a.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/2189cbf5f8c337089b4f91bc52b9fc1a.png)'
- en: Below is the pytorch model training DAG for FB DLRM. It shows the training task
    `TaskModelTrain` with all its dependencies and how the dependencies relate to
    each other. If you write functional code it is difficult see how your workflow
    fits together like this.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是FB DLRM的pytorch模型训练DAG。它展示了训练任务`TaskModelTrain`及其所有依赖项，以及这些依赖项之间的关系。如果你编写的是函数式代码，很难看到你的工作流如何像这样整合在一起。
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Step 2: Write Tasks instead of functions'
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 2：编写任务而不是函数
- en: 'Data science code is typically organized in functions which leads to a lot
    of problems as explained in [4 reasons why your ML code is bad](https://www.kdnuggets.com/2019/02/4-reasons-machine-learning-code-probably-bad.html).
    Instead you want to write d6tflow tasks. The benefits are that you can:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学代码通常以函数的形式组织，这会导致很多问题，具体见 [4个原因说明为什么你的机器学习代码很糟糕](https://www.kdnuggets.com/2019/02/4-reasons-machine-learning-code-probably-bad.html)。相反，你应该编写d6tflow任务。这样做的好处包括：
- en: chain tasks into a DAG so that required dependencies run automatically
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将任务链入DAG，以便所需的依赖项自动运行
- en: easily load task input data from dependencies
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻松从依赖项中加载任务输入数据
- en: easily save task output such as preprocessed data and trained models. That way
    you don’t accidentally rerun long-running training tasks
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻松保存任务输出，如预处理数据和训练模型。这样你就不会意外地重新运行长时间运行的训练任务
- en: parameterize tasks so they can be intelligently managed (see next step)
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参数化任务，以便可以智能地管理（见下一步）
- en: save output to [d6tpipe](https://github.com/d6t/d6tpipe) to separate data from
    code and easily share the data, see [Top 10 Coding Mistakes Made by Data Scientists](https://www.kdnuggets.com/2019/04/top-10-coding-mistakes-data-scientists.html)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将输出保存到 [d6tpipe](https://github.com/d6t/d6tpipe)，以将数据与代码分开并轻松共享数据，参见 [数据科学家的十大编码错误](https://www.kdnuggets.com/2019/04/top-10-coding-mistakes-data-scientists.html)
- en: Here is what the before/after looks like for the FB DLRM code after you convert
    functional code into d6tflow tasks.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是将功能代码转换为 d6tflow 任务后的 FB DLRM 代码的前后对比。
- en: 'Typical pytorch functional code that does not scale well:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的 pytorch 功能代码扩展性差：
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Same logic written using scalable d6tflow tasks:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 使用可扩展的 d6tflow 任务编写的相同逻辑：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Step 3: Parameterize tasks'
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第 3 步：参数化任务
- en: 'To improve model performance, you will try different models, parameters and
    preprocessing settings. To keep track of all this, you can add parameters to tasks.
    That way you can:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高模型性能，你将尝试不同的模型、参数和预处理设置。为了跟踪这些，你可以将参数添加到任务中。这样你可以：
- en: keep track which models have been trained with which parameters
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跟踪哪些模型使用了哪些参数进行训练
- en: intelligently rerun tasks as parameters change
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 智能地重新运行任务以应对参数变化
- en: help others understand where in workflow parameters are introduced
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帮助他人理解工作流中引入参数的位置
- en: Below sets up FB DLRM model training task with parameters. Note how you no longer
    have to manually specify where to save the trained model and data.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 下面设置了 FB DLRM 模型训练任务及其参数。请注意，你不再需要手动指定保存训练模型和数据的位置。
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Compare trained models
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 比较训练模型
- en: 'Now you can use that parameter to easily compare output from different models.
    Make sure you run the workflow with that parameter before you load task output
    (see Step #4).'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '现在你可以使用该参数轻松比较不同模型的输出。确保在加载任务输出之前运行带有该参数的工作流（参见第 #4 步）。'
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Inherit parameters
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 继承参数
- en: Often you need to have a parameter cascade downstream through the workflow.
    If you write functional code, you have to keep repeating the parameter in each
    function. With d6tflow you can inherit parameters so the terminal task can pass
    the parameter to upstream tasks as needed.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你需要让参数通过工作流向下级传递。如果你编写功能代码，你必须在每个函数中重复参数。使用 d6tflow，你可以继承参数，这样终端任务可以根据需要将参数传递给上游任务。
- en: In the FB DLRM workflow, `TaskModelTrain` inherits parameters from `TaskGetTrainDataset`.
    This way you can run `TaskModelTrain(mini_batch_size=2)` and it will pass the
    parameter to upstream tasks ie `TaskGetTrainDataset` and all other tasks that
    depend on it. In the actual code, note the use of `self.clone(TaskName)` and `@d6tflow.clone_parent`.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在 FB DLRM 工作流中，`TaskModelTrain` 从 `TaskGetTrainDataset` 继承参数。这样你可以运行 `TaskModelTrain(mini_batch_size=2)`，它会将参数传递给上游任务，即
    `TaskGetTrainDataset` 和所有依赖于它的其他任务。在实际代码中，请注意使用了 `self.clone(TaskName)` 和 `@d6tflow.clone_parent`。
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Step 4: Run DAG to process data and train model'
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第 4 步：运行 DAG 以处理数据和训练模型
- en: To kick off data processing and model training, you run the DAG. You only need
    to run the terminal task which automatically runs all dependencies. Before actually
    running the DAG, you can preview what will be run. This is especially helpful
    if you have made any changes to code or data because it will only run the tasks
    that have changed not the full workflow.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动数据处理和模型训练，你需要运行 DAG。你只需运行终端任务，它会自动运行所有依赖项。在实际运行 DAG 之前，你可以预览将要运行的内容。如果你对代码或数据进行了任何更改，这尤其有用，因为它只会运行已更改的任务，而不是完整的工作流。
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Step 5: Evaluate model performance'
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第 5 步：评估模型性能
- en: Now that the workflow has run and all tasks are complete, you can load predictions
    and other model output to compare and visualize output. Because the tasks knows
    where each output it saved, you can directly load output from the task instead
    of having to remember the file paths or variable names. It also makes your code
    a lot more readable.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在工作流已经运行完毕，所有任务都已完成，你可以加载预测结果和其他模型输出进行比较和可视化。因为任务知道每个输出保存的位置，你可以直接从任务中加载输出，而不必记住文件路径或变量名。这也使你的代码更具可读性。
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Compare models
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 比较模型
- en: You can easily compare output from different models with different parameters.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以轻松比较不同模型和不同参数的输出。
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Keep iterating
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 不断迭代
- en: As you iterate, changing parameters, code and data, you will want to rerun tasks.
    d6tflow intelligently figures out which tasks need to be rerun which makes iterating
    very efficient. If you have changed parameters, you don’t need to do anything,
    it will know what to run automatically. If you have changed code or data, you
    have to mark the task as incomplete using `.invalidate()` and d6tflow will figure
    out the rest.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 当您迭代、更改参数、代码和数据时，您将需要重新运行任务。d6tflow 智能地判断哪些任务需要重新运行，这使得迭代变得非常高效。如果您更改了参数，您无需做任何操作，它会自动知道需要运行什么。如果您更改了代码或数据，您需要使用
    `.invalidate()` 将任务标记为未完成，d6tflow 会处理其余的部分。
- en: In the FB DLRM workflow, say for example you changed training data or made changes
    to the training preprocessing.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在 FB DLRM 工作流中，例如，您更改了训练数据或对训练预处理进行了更改。
- en: '[PRE10]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Full source code
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 完整源代码
- en: 'All code is provided at [https://github.com/d6tdev/dlrm](https://github.com/d6tdev/dlrm).
    It is the same as [https://github.com/facebook/dlrm](https://github.com/facebook/dlrm) with
    d6tflow files added:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 所有代码都提供在 [https://github.com/d6tdev/dlrm](https://github.com/d6tdev/dlrm)。它与
    [https://github.com/facebook/dlrm](https://github.com/facebook/dlrm) 相同，只是添加了
    d6tflow 文件：
- en: 'flow_run.py: run flow => run this file'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'flow_run.py: 运行 flow => 运行此文件'
- en: 'flow_task.py: tasks code'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'flow_task.py: 任务代码'
- en: 'flow_viz.py: show model output'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'flow_viz.py: 显示模型输出'
- en: 'flow_cfg.py: default parameters'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'flow_cfg.py: 默认参数'
- en: 'dlrm_d6t_pytorch.py: dlrm_data_pytorch.py adopted for d6tflow'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'dlrm_d6t_pytorch.py: 为 d6tflow 采用的 dlrm_data_pytorch.py'
- en: Try yourself!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 亲自尝试！
- en: For your next project
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对于您的下一个项目
- en: In this guide we showed how to build scalable deep learning workflows. We used
    an existing code base and showed how to turn linear deep learning code into d6tflow
    DAGs and the benefits of doing so.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在本指南中，我们展示了如何构建可扩展的深度学习工作流。我们使用了现有的代码库，并展示了如何将线性深度学习代码转换为 d6tflow DAG 以及这样做的好处。
- en: 'For new projects, you can start with a scalable project template from [https://github.com/d6t/d6tflow-template](https://github.com/d6t/d6tflow-template).
    The structure is very similar:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 对于新项目，您可以从 [https://github.com/d6t/d6tflow-template](https://github.com/d6t/d6tflow-template)
    开始一个可扩展的项目模板。结构非常相似：
- en: 'run.py: run workflow'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'run.py: 运行工作流'
- en: 'task.py: task code'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'task.py: 任务代码'
- en: 'cfg.py: manage parameters'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'cfg.py: 管理参数'
- en: '**[Norman Niemer](https://www.linkedin.com/in/normanniemer/)** is the Chief
    Data Scientist at a large asset manager where he delivers data-driven investment
    insights. He holds a MS Financial Engineering from Columbia University and a BS
    in Banking and Finance from Cass Business School (London).'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Norman Niemer](https://www.linkedin.com/in/normanniemer/)** 是一家大型资产管理公司的首席数据科学家，他提供数据驱动的投资洞察。他拥有哥伦比亚大学的金融工程硕士学位和卡斯商学院（伦敦）的银行与金融学士学位。'
- en: '**[Samuel Showalter](https://www.linkedin.com/in/samuelrshowalter/)** is a
    Technology Consultant. He is a recent graduate passionate about data science,
    software development, and the value it can add to personal and professional life.
    He has worked in very different roles, but all of them share a focus of data management
    and analysis.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Samuel Showalter](https://www.linkedin.com/in/samuelrshowalter/)** 是一名技术顾问。他是近期毕业生，对数据科学、软件开发以及这些领域对个人和职业生活的价值充满热情。他曾在多个不同的角色中工作，但所有这些角色都专注于数据管理和分析。'
- en: '[Original](https://htmlpreview.github.io/?https://github.com/citynorman/blogs-datasci/blob/master/blog-20190813-d6tflow-pytorch.html).
    Reposted with permission.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://htmlpreview.github.io/?https://github.com/citynorman/blogs-datasci/blob/master/blog-20190813-d6tflow-pytorch.html)。已获授权转载。'
- en: '**Related:**'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Top 10 Coding Mistakes Made by Data Scientists](/2019/04/top-10-coding-mistakes-data-scientists.html)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家犯的 10 个编码错误](/2019/04/top-10-coding-mistakes-data-scientists.html)'
- en: '[4 Reasons Why Your Machine Learning Code is Probably Bad](/2019/02/4-reasons-machine-learning-code-probably-bad.html)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[4 个原因说明你的机器学习代码可能不好](/2019/02/4-reasons-machine-learning-code-probably-bad.html)'
- en: '[Data Pipelines, Luigi, Airflow: Everything you need to know](/2019/03/data-pipelines-luigi-airflow-everything-need-know.html)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据管道、Luigi、Airflow：您需要知道的一切](/2019/03/data-pipelines-luigi-airflow-everything-need-know.html)'
- en: '* * *'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的 Top 3 课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业的快车道。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升您的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持您的组织进行 IT 工作'
- en: '* * *'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关主题
- en: '[A Guide On How To Become A Data Scientist (Step By Step Approach)](https://www.kdnuggets.com/2021/05/guide-become-data-scientist.html)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[成为数据科学家的指南（逐步方法）](https://www.kdnuggets.com/2021/05/guide-become-data-scientist.html)'
- en: '[How To Structure a Data Science Project: A Step-by-Step Guide](https://www.kdnuggets.com/2022/05/structure-data-science-project-stepbystep-guide.html)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何结构化数据科学项目：逐步指南](https://www.kdnuggets.com/2022/05/structure-data-science-project-stepbystep-guide.html)'
- en: '[A Step-by-Step Guide to Web Scraping with Python and Beautiful Soup](https://www.kdnuggets.com/2023/04/stepbystep-guide-web-scraping-python-beautiful-soup.html)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 和 Beautiful Soup 进行网络爬取的逐步指南](https://www.kdnuggets.com/2023/04/stepbystep-guide-web-scraping-python-beautiful-soup.html)'
- en: '[Text-2-Video Generation: Step-by-Step Guide](https://www.kdnuggets.com/2023/08/text2video-generation-stepbystep-guide.html)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[文本到视频生成：逐步指南](https://www.kdnuggets.com/2023/08/text2video-generation-stepbystep-guide.html)'
- en: '[A Step by Step Guide to Reading and Understanding SQL Queries](https://www.kdnuggets.com/a-step-by-step-guide-to-reading-and-understanding-sql-queries)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[逐步指南：阅读和理解 SQL 查询](https://www.kdnuggets.com/a-step-by-step-guide-to-reading-and-understanding-sql-queries)'
- en: '[Breaking Down DENSE_RANK(): A Step-by-Step Guide for SQL Enthusiasts](https://www.kdnuggets.com/breaking-down-denserank-a-step-by-step-guide-for-sql-enthusiasts)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[拆解 DENSE_RANK()：SQL 爱好者的逐步指南](https://www.kdnuggets.com/breaking-down-denserank-a-step-by-step-guide-for-sql-enthusiasts)'
