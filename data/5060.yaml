- en: Implementing Your Own k-Nearest Neighbor Algorithm Using Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现你自己的 k-最近邻算法使用 Python
- en: 原文：[https://www.kdnuggets.com/2016/01/implementing-your-own-knn-using-python.html/2](https://www.kdnuggets.com/2016/01/implementing-your-own-knn-using-python.html/2)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2016/01/implementing-your-own-knn-using-python.html/2](https://www.kdnuggets.com/2016/01/implementing-your-own-knn-using-python.html/2)
- en: '**Measuring distance between all cases**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**测量所有案例之间的距离**'
- en: Given a new flower from an unknown species, you want to assign it a species
    based on what other flowers it is most similar to. For this, you need a measure
    of similarity. One such measure is the Euclidean distance, where distance d between
    two points (a1, a2) and (b1, b2) is given by d = sqrt((a1-b1)^2 + (a2-b2)^2).
    Each flower in the iris dataset has 4 dimensions (i.e. 4 features), and so you
    write a function to find the distance between each flower. The previous distance
    formula generalises to higher dimensions, such that the distance between two points
    (a1, a2, a3, a4) and (b1, b2, b3, b4) is simply
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个来自未知物种的新花朵，你希望根据它与其他花朵的相似度来分配一个物种。为此，你需要一种相似度测量方法。其中一种测量方法是欧几里得距离，其中两点 (a1,
    a2) 和 (b1, b2) 之间的距离 d 由 d = sqrt((a1-b1)^2 + (a2-b2)^2) 给出。每朵花在鸢尾花数据集中有 4 个维度（即
    4 个特征），因此你需要编写一个函数来找出每朵花之间的距离。之前的距离公式可以推广到更高的维度，例如两点 (a1, a2, a3, a4) 和 (b1, b2,
    b3, b4) 之间的距离就是
- en: We’ll be making use of the zip function and list comprehensions. The zip function
    aggregates elements from lists (or other iterables, like strings) to return a
    list of tuples, such that zip([1,2,3], [4,5,6]) will return [(1,4), (2,5), (3,6)].
    List comprehensions are a powerful Pythonic construct that facilitate quick computations
    on lists. For example, you could quickly get the square of all numbers 1 to 100
    with [pow(x, 2) for x in range(101)], or double the values of odd numbers from
    1 to 10 with [x*2 for x in range(11) if x%2==1]. Here, you are iterating over
    values from the corresponding dimensions in the two data points, calculating the
    differences squared, and storing each dimension's differences squared in diffs_squared_distance.
    These are then summed and returned.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 zip 函数和列表推导式。zip 函数将来自列表（或其他可迭代对象，如字符串）的元素聚合起来，返回一个元组列表，例如 zip([1,2,3],
    [4,5,6]) 将返回 [(1,4), (2,5), (3,6)]。列表推导式是一个强大的 Pythonic 构造，可以快速对列表进行计算。例如，你可以用
    [pow(x, 2) for x in range(101)] 快速获取从 1 到 100 的所有数字的平方，或者用 [x*2 for x in range(11)
    if x%2==1] 将 1 到 10 的奇数值翻倍。在这里，你将遍历两个数据点中对应维度的值，计算平方差，并将每个维度的平方差存储在 diffs_squared_distance
    中。这些平方差会被求和并返回。
- en: '![Euclidean distance equation](../Images/90c059417c1578146bbf2fc73cf08172.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![欧几里得距离方程](../Images/90c059417c1578146bbf2fc73cf08172.png)'
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'For example, you can now get the distance between the first two training data
    instances:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你现在可以获取前两个训练数据实例之间的距离：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Or any other tuple you''d like:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 或者你喜欢的任何其他元组：
- en: '[PRE2]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Getting the distances to all neighbours**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**获取所有邻居的距离**'
- en: 'Next, a function that returns sorted distances between a test case and all
    training cases is needed. One solution is the following:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，需要一个返回测试用例与所有训练用例之间的排序距离的函数。一个解决方案是：
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Let''s unpack these function: first, you need to calculate the distances from
    any given test data point to all the instances in the training sets. This can
    be done by iterating over each training_instance in training_set, and using the
    helper function _get_tuple_distance (the leading underscore indicates the function
    is intended for internal use only) to calculate the distance between it and the
    test instance. It also handily returns the training instance it''s working on
    (the usefulness of this will become apparent later). To test this function, try:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来解剖这些函数：首先，你需要计算从任何给定测试数据点到训练集中的所有实例的距离。这可以通过对每个 training_instance 进行迭代来完成，并使用辅助函数
    _get_tuple_distance（前导下划线表示该函数仅用于内部使用）来计算它与测试实例之间的距离。它还方便地返回它正在处理的训练实例（这一点的有用性稍后会显现）。要测试这个函数，可以尝试：
- en: '[PRE4]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This returns the train instances train[0] itself, followed by the distance (1.23)
    between it and the test[0] instance.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回训练实例 train[0] 本身，随后是它与 test[0] 实例之间的距离 (1.23)。
- en: 'This pairwise calculation is done for every train instance and the given test
    instance. You can get a feel for what is happening with this command:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这种逐对计算会对每个训练实例和给定测试实例进行。你可以通过这个命令来了解发生了什么：
- en: '[PRE5]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Next, the distances (e.g. like the 1.23, 4.47, 4.26 here) are sorted in order
    to find the k closest neighbours to the test instance. To understand how we can
    return the sorted distances, play with:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，距离（例如这里的 1.23、4.47、4.26）被排序以找到与测试实例最接近的 k 个邻居。要了解如何返回排序后的距离，请尝试：
- en: '[PRE6]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Which are the training instances ranked from closest to furthest from our test
    instance, as desired. The function takes the k parameter, which controls how many
    nearest neighbours are returned.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 训练实例按照距离测试实例的远近排序。该函数接受 k 参数，用于控制返回多少个最近邻。
- en: As a side note, instead of using a sort to order the distances from a test case
    in decreasing order, it would be computationally cheaper to find the maximum in
    the list of distances - specifically, the sort here has complexity n log(n) while
    passing through an array to find the maximum is O(n). If you were optimising our
    script for efficiency (rather than focusing on doing an educational demo), these
    types of considerations would become quite important.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，相比于使用排序将测试案例的距离按递减顺序排列，计算上更便宜的是在距离列表中找到最大值——具体来说，排序的复杂度是 n log(n)，而遍历数组找最大值的复杂度是
    O(n)。如果你在优化我们的脚本以提高效率（而不是专注于做教育演示），这些考虑将变得非常重要。
- en: '* * *'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你所在的组织的 IT 需求'
- en: '* * *'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[From Theory to Practice: Building a k-Nearest Neighbors Classifier](https://www.kdnuggets.com/2023/06/theory-practice-building-knearest-neighbors-classifier.html)'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[从理论到实践：构建 k 最近邻分类器](https://www.kdnuggets.com/2023/06/theory-practice-building-knearest-neighbors-classifier.html)'
- en: '[Nearest Neighbors for Classification](https://www.kdnuggets.com/2022/04/nearest-neighbors-classification.html)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[分类中的最近邻算法](https://www.kdnuggets.com/2022/04/nearest-neighbors-classification.html)'
- en: '[K-nearest Neighbors in Scikit-learn](https://www.kdnuggets.com/2022/07/knearest-neighbors-scikitlearn.html)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Scikit-learn 中的 K 最近邻算法](https://www.kdnuggets.com/2022/07/knearest-neighbors-scikitlearn.html)'
- en: '[LangChain 101: Build Your Own GPT-Powered Applications](https://www.kdnuggets.com/2023/04/langchain-101-build-gptpowered-applications.html)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[LangChain 101：构建自己的 GPT 驱动应用](https://www.kdnuggets.com/2023/04/langchain-101-build-gptpowered-applications.html)'
- en: '[Build Your Own PandasAI with LlamaIndex](https://www.kdnuggets.com/build-your-own-pandasai-with-llamaindex)'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 LlamaIndex 构建自己的 PandasAI](https://www.kdnuggets.com/build-your-own-pandasai-with-llamaindex)'
- en: '[Make Your Own GPTs with ChatGPT''s GPTs!](https://www.kdnuggets.com/make-your-own-gpts-with-chatgpts-gpts)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 ChatGPT 的 GPTs 创建自己的 GPT！](https://www.kdnuggets.com/make-your-own-gpts-with-chatgpts-gpts)'
