["```py\ntitanic_df.count()\n\n```", "```py\npclass       1309\nsurvived     1309\nname         1309\nsex          1309\nage          1046\nsibsp        1309\nparch        1309\nticket       1309\nfare         1308\ncabin         295\nembarked     1307\nboat          486\nbody          121\nhome.dest     745\ndtype: int64\n```", "```py\ntitanic_df = titanic_df.drop(['body','cabin','boat'], axis=1)\ntitanic_df[\"home.dest\"] = titanic_df[\"home.dest\"].fillna(\"NA\")\ntitanic_df = titanic_df.dropna()\ntitanic_df.count()\n\n```", "```py\npclass       1043\nsurvived     1043\nname         1043\nsex          1043\nage          1043\nsibsp        1043\nparch        1043\nticket       1043\nfare         1043\nembarked     1043\nhome.dest    1043\ndtype: int64\n\n```", "```py\ndef preprocess_titanic_df(df):\n    processed_df = df.copy()\n    le = preprocessing.LabelEncoder()\n    processed_df.sex = le.fit_transform(processed_df.sex)\n    processed_df.embarked = le.fit_transform(processed_df.embarked)\n    processed_df = processed_df.drop(['name','ticket','home.dest'],axis=1)\n    return processed_df\n\nprocessed_df = preprocess_titanic_df(titanic_df)\n\n```", "```py\nX = processed_df.drop(['survived'], axis=1).values\ny = processed_df['survived'].values\n\nX_train, X_test, y_train, y_test = cross_validation.train_test_split(X,y,test_size=0.2)\n\n```"]