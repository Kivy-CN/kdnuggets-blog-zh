- en: Getting Started with ReactPy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/06/getting-started-reactpy.html](https://www.kdnuggets.com/2023/06/getting-started-reactpy.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Getting Started with ReactPy](../Images/a5550b7a42893d105bcc0661298ce886.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: With the surging popularity of ReactJS in web development, there is an increasing
    demand for a similar framework in Python for building production-ready machine
    learning, AI, and data science applications. This is where ReactPy comes in, providing
    beginners, data scientists, and engineers the ability to create ReactJS-like applications
    in Python. ReactPy gives users a simple, declarative view framework that efficiently
    scales applications to complex use cases.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this blog post, we will explore ReactPy, learning how to build a simple
    application and run it both within a web browser and a Jupyter Notebook. Specifically,
    we will cover:'
  prefs: []
  type: TYPE_NORMAL
- en: Running a ReactPy on a web browser using various backends API.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Running ReactPy in Jupyter Notebook using Jupyter widgets.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is ReactPy?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[**ReactPy**](https://github.com/reactive-python/reactpy) is a Python library
    for building user interfaces without using JavaScript. The interfaces of ReactPy
    are built using [components](https://reactpy.dev/docs/guides/creating-interfaces/your-first-components/index.html#your-first-components)
    that offer a similar experience to that found in ReactJS.'
  prefs: []
  type: TYPE_NORMAL
- en: Designed for simplicity, ReactPy has a gentle learning curve and a minimal API
    surface. This makes it accessible to those without web development experience,
    yet it can also scale to support sophisticated applications.
  prefs: []
  type: TYPE_NORMAL
- en: Setting Up
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'It is quite easy to install ReactPy by using pip:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: After installing, try running a sample application using the script below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Our application with the `starlette` backend is running on a local address.
    Just copy it and paste it into the web browser.
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting Started with ReactPy](../Images/53a608ae4788fd356d648cdc50541ecc.png)'
  prefs: []
  type: TYPE_IMG
- en: As we can observe that ReactPy is running perfectly.
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting Started with ReactPy](../Images/7dc72bf4bfec2ad8301fd6eac0dc4969.png)'
  prefs: []
  type: TYPE_IMG
- en: You can also install with the backend of your choice. In our case, we will install
    ReactPy with the [fastapi](https://fastapi.tiangolo.com/) backend.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is the list of the most popular Python backends that comes with ReactPy:'
  prefs: []
  type: TYPE_NORMAL
- en: '`fastapi`: [https://fastapi.tiangolo.com](https://fastapi.tiangolo.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`flask`: [https://palletsprojects.com/p/flask/](https://palletsprojects.com/p/flask/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sanic`: [https://sanicframework.org](https://sanicframework.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`starlette`: [https://www.starlette.io/](https://www.starlette.io/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tornado`: [https://www.tornadoweb.org/en/stable/](https://www.tornadoweb.org/en/stable/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Running a ReactPy on Web Browser
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will now try to build a simple app with the heading 1 and a paragraph and
    run it on the default backend (`starlette`).
  prefs: []
  type: TYPE_NORMAL
- en: When you create a new component function, try to add a magic function `@componnet`
    above a function.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'After that, create a skeleton of a web page with different HTML elements like:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`html.h1` for heading 1.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`html.b` for bold.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`html.ul` and `html.li` for bullet points.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`html.img` for images.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Save the above code in a `reactpy_simple.py` file and run the following command
    in the terminal.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![Getting Started with ReactPy](../Images/7491feff5665e9abe9d58e236cc4d09b.png)'
  prefs: []
  type: TYPE_IMG
- en: Our simple web application is running smoothly.
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting Started with ReactPy](../Images/1754c33783c74eea04f657796448347a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let’s try to add more html components like image and list, and run the application
    using `fastapi` backend. For that:'
  prefs: []
  type: TYPE_NORMAL
- en: Import `FastAPI` class and `configure` from `reactpy.backend.fastapi`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a component function called `Photo()` and add all of the HTML elements.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create an app object using `FastAPI` object and configure it with the ReactPy
    component.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Save the file with the name `reactpy_advance.py` and run the application like
    you run any FastAPI application using unicorn.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![Getting Started with ReactPy](../Images/0975b9b6b2923b15670e8a04ea791a36.png)'
  prefs: []
  type: TYPE_IMG
- en: As we can observe, our app is running with additional HTML elements.
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting Started with ReactPy](../Images/9b4276f37e041595ac178d33af1033ea.png)'
  prefs: []
  type: TYPE_IMG
- en: To confirm that it is running FastAPI as a backend, we will add `/docs` to the
    link.
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting Started with ReactPy](../Images/a18341204b79131e88b6f87d649d4703.png)'
  prefs: []
  type: TYPE_IMG
- en: Running ReactPy in Jupyter Notebook
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Running and Testing ReactPy in Jupyter Notebook requires installing a Jupyter
    widget called `reactpy_jupyter`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Before running anything, run the following command first to activate the widget.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '**Or** use `%config` magic function to register `reactpy_jupyter` as a permanent
    IPython extension in your config file.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: We will now run the ReactPy component in the Jupyter Notebook. Instead of using
    `run()`, we will directly run a component function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Similarly to previous examples, we will run an advanced example by running `Photo()`
    function.
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting Started with ReactPy](../Images/e10b8b4e2ac4027b71070ae84d52f905.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '![Getting Started with ReactPy](../Images/badadbb242a30114eac9147bfc4936f5.png)'
  prefs: []
  type: TYPE_IMG
- en: We can also create an interactive app using buttons and input, as shown below.
    You can read ReactPy [documentation](https://reactpy.dev/docs/guides/adding-interactivity/index.html)
    for creating the user interface, interactivity, managing state, API hooks, and
    escape hatches.
  prefs: []
  type: TYPE_NORMAL
- en: '![Getting Started with ReactPy](../Images/f7cbde3c7a6710600a09eb9e1c9e8ab2.png)'
  prefs: []
  type: TYPE_IMG
- en: Gif from [ReactPy on Binder](https://mybinder.org/v2/gh/reactive-python/reactpy-jupyter/main?urlpath=lab/tree/notebooks/introduction.ipynb)
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In summary, this blog post has provided an introduction to ReactPy, demonstrating
    how to create simple ReactPy applications. By running ReactPy within a web browser
    using different API backends as well as within Jupyter Notebooks using Jupyter
    widgets, we have seen the flexibility of ReactPy in allowing developers to build
    applications for both web and notebook environments.
  prefs: []
  type: TYPE_NORMAL
- en: ReactPy shows promise as a Python library for creating reactive user interfaces
    that can reach a wide audience. With continued development, ReactPy may become
    a compelling alternative to JavaScript-based React for machine learning and AI
    Python applications.
  prefs: []
  type: TYPE_NORMAL
- en: '[Try ReactPy on Binder](https://mybinder.org/v2/gh/reactive-python/reactpy-jupyter/main?urlpath=lab/tree/notebooks/introduction.ipynb)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ReactPy Documentation](https://reactpy.dev/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[GitHub Repository](https://github.com/reactive-python/reactpy)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Abid Ali Awan](https://www.polywork.com/kingabzpro)** ([@1abidaliawan](https://twitter.com/1abidaliawan))
    is a certified data scientist professional who loves building machine learning
    models. Currently, he is focusing on content creation and writing technical blogs
    on machine learning and data science technologies. Abid holds a Master''s degree
    in Technology Management and a bachelor''s degree in Telecommunication Engineering.
    His vision is to build an AI product using a graph neural network for students
    struggling with mental illness.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Getting Started with Automated Text Summarization](https://www.kdnuggets.com/2019/11/getting-started-automated-text-summarization.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Started Cleaning Data](https://www.kdnuggets.com/2022/01/getting-started-cleaning-data.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Started with SQL Cheatsheet](https://www.kdnuggets.com/2022/08/getting-started-sql-cheatsheet.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Started with spaCy for NLP](https://www.kdnuggets.com/2022/11/getting-started-spacy-nlp.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Started with PyCaret](https://www.kdnuggets.com/2022/11/getting-started-pycaret.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Started with PyTorch Lightning](https://www.kdnuggets.com/2022/12/getting-started-pytorch-lightning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
