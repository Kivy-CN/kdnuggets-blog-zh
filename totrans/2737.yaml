- en: 5 Things You Don’t Know About PyCaret
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/07/5-things-pycaret.html](https://www.kdnuggets.com/2020/07/5-things-pycaret.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Moez Ali](https://www.linkedin.com/in/profile-moez/), Founder & Author
    of PyCaret**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/ebe1d00ab7e647b9fac4941e0624ce7e.png)'
  prefs: []
  type: TYPE_IMG
- en: From the author of PyCaret
  prefs: []
  type: TYPE_NORMAL
- en: PyCaret
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: PyCaret is an open source machine learning library in Python to train and deploy
    supervised and unsupervised machine learning models in a **low-code** environment.
    It is known for its ease of use and efficiency.
  prefs: []
  type: TYPE_NORMAL
- en: In comparison with the other open source machine learning libraries, PyCaret
    is an alternate low-code library that can be used to replace hundreds of lines
    of code with a few words only.
  prefs: []
  type: TYPE_NORMAL
- en: If you haven’t used PyCaret before or would like to learn more, a good place
    to start is [here](https://towardsdatascience.com/announcing-pycaret-an-open-source-low-code-machine-learning-library-in-python-4a1f1aad8d46).
  prefs: []
  type: TYPE_NORMAL
- en: “After talking to many data scientists who use PyCaret on a daily basis, I have
    shortlisted 5 features of PyCaret that are lesser known but they extremely powerful.”
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: — Moez Ali
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ????You can tune “n parameter” in unsupervised experiments
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In unsupervised machine learning the “n parameter” i.e. the number of clusters
    for clustering experiments, the fraction of the outliers in anomaly detection,
    and the number of topics in topic modeling, is of fundamental importance.
  prefs: []
  type: TYPE_NORMAL
- en: When the eventual objective of the experiment is to predict an outcome (classification
    or regression) using the results from the unsupervised experiments, then the tune_model()
    function in the **pycaret.clustering** module **,** the **pycaret.anomaly** module**,**
    and the **pycaret.nlp **modulecomes in very handy.
  prefs: []
  type: TYPE_NORMAL
- en: To understand this, let’s see an example using the “[Kiva](https://raw.githubusercontent.com/pycaret/pycaret/master/datasets/kiva.csv)”
    dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/cf2fbf90f653d414d4542d4ce365277a.png)'
  prefs: []
  type: TYPE_IMG
- en: This is a micro-banking loan dataset where each row represents a borrower with
    their relevant information. Column ‘en’ captures the loan application text of
    each borrower, and the column ‘status’ represents whether the borrower defaulted
    or not (default = 1 or no default = 0).
  prefs: []
  type: TYPE_NORMAL
- en: You can use **tune_model **function in **pycaret.nlp **to optimize **num_topics **parameter
    based on the target variable of supervised experiment (i.e. predicting the optimum
    number of topics required to improve the prediction of the final target variable).
    You can define the model for training using **estimator** parameter (‘xgboost’
    in this case). This function returns a trained topic model and a visual showing
    supervised metrics at each iteration.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![Image for post](../Images/0dcd5a48ab6ba3673f3517d1476aaec8.png)'
  prefs: []
  type: TYPE_IMG
- en: ????You can improve results from hyperparameter tuning by increasing “n_iter”
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The **tune_model **function in the **pycaret.classification **module and the **pycaret.regression** module
    employs random grid search over pre-defined grid search for hyper-parameter tuning.
    Here the default number of iterations is set to 10.
  prefs: []
  type: TYPE_NORMAL
- en: 'Results from **tune_model **may not necessarily be an improvement on the results
    from the base models created using **create_model. **Since the grid search is
    random, you can increase the **n_iter **parameter to improve the performance.
    See example below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![Image for post](../Images/419349ba2fe64b47b4ebbf2ad7a4482a.png)'
  prefs: []
  type: TYPE_IMG
- en: ????You can programmatically define data types in the setup function
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you initialize the **setup **function**, **you will be asked to confirm
    data types through a user input. More often when you run the scripts as a part
    of workflows or execute it as remote kernels (for e.g. Kaggle Notebooks), then
    in such case, it is required to provide the data types programmatically rather
    than through the user input box.
  prefs: []
  type: TYPE_NORMAL
- en: See example below using “[insurance](https://raw.githubusercontent.com/pycaret/pycaret/master/datasets/insurance.csv)”
    dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/96153d70772bd9c1964a099dfd293feb.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The** silent** parameter is set to True to avoid input, **categorical_features **parameter
    takes the name of categorical columns as string, and **numeric_features **parameter
    takes the name of numeric columns as a string.
  prefs: []
  type: TYPE_NORMAL
- en: ????You can ignore certain columns for model building
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: On many occasions, you have features in dataset that you do not necessarily
    want to remove but want to ignore for training a machine learning model. A good
    example would be a clustering problem where you want to ignore certain features
    during cluster creation but later you need those columns for analysis of cluster
    labels. In such cases, you can use the **ignore_features **parameter within the **setup **to
    ignore such features.
  prefs: []
  type: TYPE_NORMAL
- en: In the example below, we will perform a clustering experiment and we want to
    ignore **‘Country Name’** and **‘Indicator Name’**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/1508bbeca2aa1782cfef2c432a60d20c.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: ????You can optimize the probability threshold % in binary classification
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In classification problems, the cost of **false positives** is almost never
    the same as the cost of **false negatives**. As such, if you are optimizing a
    solution for a business problem where **Type 1** and **Type 2** errors have a
    different impact, you can optimize your classifier for a probability threshold
    value to optimize the custom loss function simply by defining the cost of true
    positives, true negatives, false positives and false negatives separately. By
    default, all classifiers have a threshold of 0.5.
  prefs: []
  type: TYPE_NORMAL
- en: See example below using “[credit](https://raw.githubusercontent.com/pycaret/pycaret/master/datasets/credit.csv)”
    dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![Image for post](../Images/5c0584b9974d758c1fcd8d123dc8f8f9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You can then pass **0.2 **as **probability_threshold **parameter in **predict_model **function
    to use 0.2 as a threshold for classifying positive class. See example below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: PyCaret 2.0.0 is coming!
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We have received overwhelming support and feedback from the data science community.
    We are actively working on improving PyCaret and preparing for our next release. **PyCaret
    2.0.0 will be bigger and better**. If you would like to share your feedback and
    help us improve further, you may [fill this form](https://www.pycaret.org/feedback) on
    the website or leave a comment on our [GitHub ](https://www.github.com/pycaret/)or [LinkedIn](https://www.linkedin.com/company/pycaret/) page.
  prefs: []
  type: TYPE_NORMAL
- en: Follow our [LinkedIn](https://www.linkedin.com/company/pycaret/) and subscribe
    to our [YouTube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g) channel
    to learn more about PyCaret.
  prefs: []
  type: TYPE_NORMAL
- en: Want to learn about a specific module?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As of the first release 1.0.0, PyCaret has the following modules available for
    use. Click on the links below to see the documentation and working examples in
    Python.
  prefs: []
  type: TYPE_NORMAL
- en: '[Classification](https://www.pycaret.org/classification)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Regression](https://www.pycaret.org/regression)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Clustering](https://www.pycaret.org/clustering)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Anomaly Detection](https://www.pycaret.org/anomaly-detection)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Natural Language Processing](https://www.pycaret.org/nlp)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Association Rule Mining](https://www.pycaret.org/association-rules)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Also see:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'PyCaret getting started tutorials in Notebook:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Classification](https://www.pycaret.org/clf101)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Regression](https://www.pycaret.org/reg101)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Clustering](https://www.pycaret.org/clu101)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Anomaly Detection](https://www.pycaret.org/anom101)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Natural Language Processing](https://www.pycaret.org/nlp101)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Association Rule Mining](https://www.pycaret.org/arul101)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Would you like to contribute?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: PyCaret is an open source project. Everybody is welcome to contribute. If you
    would like to contribute, please feel free to work on [open issues](https://github.com/pycaret/pycaret/issues).
    Pull requests are accepted with unit tests on dev-1.0.1 branch.
  prefs: []
  type: TYPE_NORMAL
- en: Please give us ⭐️ on our [GitHub repo](https://www.github.com/pycaret/pycaret) if
    you like PyCaret.
  prefs: []
  type: TYPE_NORMAL
- en: Medium: [https://medium.com/@moez_62905/](https://medium.com/@moez_62905/machine-learning-in-power-bi-using-pycaret-34307f09394a)
  prefs: []
  type: TYPE_NORMAL
- en: LinkedIn: [https://www.linkedin.com/in/profile-moez/](https://www.linkedin.com/in/profile-moez/)
  prefs: []
  type: TYPE_NORMAL
- en: Twitter: [https://twitter.com/moezpycaretorg1](https://twitter.com/moezpycaretorg1)
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Moez Ali](https://www.linkedin.com/in/profile-moez/)** is a Data Scientist,
    and is Founder & Author of PyCaret.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/5-things-you-dont-know-about-pycaret-528db0436eec).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Announcing PyCaret 1.0.0](/2020/04/announcing-pycaret.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Machine Learning in Power BI using PyCaret](/2020/05/machine-learning-power-bi-pycaret.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deploy Machine Learning Pipeline on AWS Fargate](/2020/07/deploy-machine-learning-pipeline-aws-fargate.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[7 Things You Didn''t Know You Could do with a Low Code Tool](https://www.kdnuggets.com/2022/09/7-things-didnt-know-could-low-code-tool.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 Things You Need To Know About Data Management And Why It Matters…](https://www.kdnuggets.com/2022/05/6-things-need-know-data-management-matters-computer-vision.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[3 things you didn’t know about the SAS Academy for Data Science](https://www.kdnuggets.com/2022/07/sas-3-things-didnt-know-sas-academy-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Things You Should Know When Scaling Your Web Data-Driven Product](https://www.kdnuggets.com/2023/08/things-know-scaling-web-datadriven-product.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Things You Need to Know When Building LLM Applications](https://www.kdnuggets.com/2023/08/5-things-need-know-building-llm-applications.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Get Into Data Analytics If You Don''t Have the Right Degree](https://www.kdnuggets.com/2021/12/how-to-get-into-data-analytics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
