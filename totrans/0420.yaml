- en: 15 Python Coding Interview Questions You Must Know For Data Science
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你必须了解的 15 个 Python 编码面试问题
- en: 原文：[https://www.kdnuggets.com/2022/04/15-python-coding-interview-questions-must-know-data-science.html](https://www.kdnuggets.com/2022/04/15-python-coding-interview-questions-must-know-data-science.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2022/04/15-python-coding-interview-questions-must-know-data-science.html](https://www.kdnuggets.com/2022/04/15-python-coding-interview-questions-must-know-data-science.html)
- en: '![15 Python Coding Interview Questions You Must Know For Data Science](../Images/d4c36c3de48535d18dcecf1ef108b33a.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![你必须了解的 15 个 Python 编码面试问题](../Images/d4c36c3de48535d18dcecf1ef108b33a.png)'
- en: Knowing Python is one of the [crucial skills every data scientist should hone](https://www.stratascratch.com/blog/what-skills-do-you-need-as-a-data-scientist/).
    And it’s not without reason. Python’s ability, combined with Pandas library, to
    manipulate and analyze data in a number of different ways makes it an ideal tool
    for a data science job.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 了解 Python 是每个数据科学家应掌握的[关键技能之一](https://www.stratascratch.com/blog/what-skills-do-you-need-as-a-data-scientist/)。这并非没有理由。Python
    的能力，加上 Pandas 库，能够以多种不同方式操控和分析数据，使其成为数据科学工作的理想工具。
- en: '* * *'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前 3 个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT'
- en: '* * *'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: It comes as no surprise that all the companies looking for data scientists will
    test their Python skills on a job interview.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 不足为奇的是，所有寻求数据科学家的公司都会在面试中测试他们的 Python 技能。
- en: We’ll have a look at what technical concepts, along with Python/Pandas functions,
    you should be familiar with to [land a data science job](https://www.stratascratch.com/blog/how-to-get-a-data-science-job-the-ultimate-guide/).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将探讨你应熟悉的技术概念以及 Python/Pandas 函数，以[获得数据科学职位](https://www.stratascratch.com/blog/how-to-get-a-data-science-job-the-ultimate-guide/)。
- en: 'These are the five topics we’ll talk about:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们将讨论的五个主题：
- en: Aggregation, Grouping, and Ordering Data
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聚合、分组和排序数据
- en: Joining Tables
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 联接表
- en: Filtering Data
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据过滤
- en: Text Manipulation
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本操作
- en: Datetime Manipulation
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日期时间操作
- en: It goes without saying that these concepts are rarely tested separately, so
    by solving one question you’ll have to showcase your knowledge of multiple Python
    topics.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 毋庸置疑，这些概念很少单独测试，因此通过解决一个问题，你将展示你对多个 Python 主题的知识。
- en: Aggregation, Grouping & Ordering Data
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 聚合、分组和排序数据
- en: '![Aggregation, Grouping, and Ordering Data](../Images/8682af063b3c39a5c89747f9700d7ddd.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![聚合、分组和排序数据](../Images/8682af063b3c39a5c89747f9700d7ddd.png)'
- en: These three technical topics often come all together and they are fundamental
    to creating reports and doing any kind of data analysis.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这三个技术主题通常一起出现，它们是创建报告和进行任何数据分析的基础。
- en: They allow you to perform some mathematical operations and present your findings
    in a representable and user-friendly way.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 它们允许你执行一些数学操作，并以可表示和用户友好的方式展示你的发现。
- en: We'll show you several practical examples to ensure you know what we’re talking
    about.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将向你展示几个实际示例，以确保你了解我们所讨论的内容。
- en: 'Python Coding Interview Question #1: Class Performance'
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'Python 编码面试问题 #1：类性能'
- en: 'This Box interview question asks you:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 Box 面试问题问你：
- en: '*“You are given a table containing assignment scores of students in a class.
    Write a query that identifies the largest difference in total score of all assignments.
    Output just the difference in total score between the two students.”*'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '*“给定一个表，包含班级学生的作业分数。写一个查询，识别所有作业总分的最大差异。输出两个学生之间总分的差异。”*'
- en: 'Link to the question: [https://platform.stratascratch.com/coding/10310-class-performance?python=1](https://platform.stratascratch.com/coding/10310-class-performance?python=1)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 问题链接：[https://platform.stratascratch.com/coding/10310-class-performance?python=1](https://platform.stratascratch.com/coding/10310-class-performance?python=1)
- en: 'Table you need to use is box_scores, which has the following columns:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要使用的表是box_scores，它有以下列：
- en: '| id | int64 |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| id | int64 |'
- en: '| student | object |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| student | object |'
- en: '| assignment1 | int64 |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| assignment1 | int64 |'
- en: '| assignment2 | int64 |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| assignment2 | int64 |'
- en: '| assignment3 | int64 |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| assignment3 | int64 |'
- en: 'Data from the table look like this:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 表中的数据如下所示：
- en: '![Class Performance](../Images/70e254985482c539cf3cd2c8ec1428a8.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![Class Performance](../Images/70e254985482c539cf3cd2c8ec1428a8.png)'
- en: 'As a first step towards answering the question, you should sum the scores from
    all assignments:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 作为回答问题的第一步，你应该汇总所有作业的评分：
- en: '[PRE0]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This part of the code will give you this:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分代码将给你如下结果：
- en: '![output](../Images/85d6d898993a2218a404bc9b3b65ac89.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![output](../Images/85d6d898993a2218a404bc9b3b65ac89.png)'
- en: 'Now that you know that, the next step is to find the largest difference between
    the total scores. You need to use the max() and min() functions to do that. Or,
    to be more specific, a difference between these two functions’ output. Add this
    to the above code, and you’ve got a final answer:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你知道了，下一步是找到总分之间的最大差异。你需要使用`max()`和`min()`函数来实现这一点。或者，更具体地说，就是这两个函数输出之间的差异。将这部分代码添加到上面的代码中，你就得到了最终答案：
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This is the output you’re looking for:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你要找的输出：
- en: '![output](../Images/9f3d2336ba1690a74f35a49e8bf7643f.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![output](../Images/9f3d2336ba1690a74f35a49e8bf7643f.png)'
- en: The question asked to output only this difference, so no other columns are needed.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 问题要求只输出这个差异，所以不需要其他列。
- en: 'Python Coding Interview Question #2: Inspection Scores For Businesses'
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'Python 编码面试题 #2：企业检查评分'
- en: 'The previous question didn’t require any data grouping and ordering, unlike
    the following question by the City of San Francisco:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 前一个问题不需要任何数据分组和排序，这与旧金山城市提出的以下问题不同：
- en: 'Here’s a question by the City of San Francisco:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这是旧金山城市提出的一个问题：
- en: '*“Find the median inspection score of each business and output the result along
    with the business name. Order records based on the inspection score in descending
    order. Try to come up with your own precise median calculation. In Postgres there
    is `percentile_disc` function available, however it''s only approximation.”*'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '*“找出每个企业的检查评分中位数，并输出结果以及企业名称。根据检查评分的降序排列记录。尽量用你自己精确的中位数计算方法。在Postgres中有`percentile_disc`函数可用，但它只是一个近似值。”*'
- en: 'Link to the question: [https://platform.stratascratch.com/coding/9741-inspection-scores-for-businesses?python=1](https://platform.stratascratch.com/coding/9741-inspection-scores-for-businesses?python=1)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 问题链接：[https://platform.stratascratch.com/coding/9741-inspection-scores-for-businesses?python=1](https://platform.stratascratch.com/coding/9741-inspection-scores-for-businesses?python=1)
- en: Here, you should use the notnull() function to make sure you get only businesses
    that have the inspection score. Additionally, you have to group data on business_name
    and calculate the median for the inspection_score. Use the median() function.
    Also, use the sort_values() to sort the output in descending order.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你应该使用`notnull()`函数来确保只获取那些有检查评分的企业。此外，你还需要按企业名称分组数据，并计算检查评分的中位数。使用`median()`函数。此外，使用`sort_values()`按降序排序输出。
- en: 'Python Coding Interview Question #3: Number Of Records By Variety'
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'Python 编码面试题 #3：按种类的记录数'
- en: 'Take a look at this Microsoft question:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 看看这个微软的问题：
- en: '*“Find the total number of records that belong to each variety in the dataset.
    Output the variety along with the corresponding number of records. Order records
    by the variety in ascending order.” *'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '*“找出数据集中每种类别的记录总数。输出类别及其对应的记录数量。按类别的升序排列记录。”*'
- en: Link to the question:  [https://platform.stratascratch.com/coding/10168-number-of-records-by-variety?python=1](https://platform.stratascratch.com/coding/10168-number-of-records-by-variety?python=1)
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 问题链接：[https://platform.stratascratch.com/coding/10168-number-of-records-by-variety?python=1](https://platform.stratascratch.com/coding/10168-number-of-records-by-variety?python=1)
- en: This shouldn’t be hard to solve after the first two examples. First, you should
    group by the columns variety and sepal_length. To find the number of records per
    variety, use the count() function. Finally, use the sort_values to sort by variety
    in alphabetical order.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在前两个示例之后，这个问题应该不难解决。首先，你应该按列的种类和萼片长度进行分组。要查找每种类的记录数，请使用`count()`函数。最后，使用`sort_values`按字母顺序对种类进行排序。
- en: Joining Tables
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表连接
- en: In all the previous examples, we were given only one table. We selected these
    examples, so it’s easier for you to understand how aggregation, grouping, and
    ordering data in Python work.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有之前的示例中，我们只给出了一张表。我们选择这些示例，以便你更容易理解Python中如何进行聚合、分组和排序。
- en: However, as a data scientist, you’ll more often than not have to know how to
    write a query that pulls data from several tables.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，作为数据科学家，你通常需要知道如何编写查询来从多个表格中提取数据。
- en: 'Python Coding Interview Question #4: Lowest Priced Orders'
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'Python 编程面试题 #4：最低价格订单'
- en: 'One of the easiest ways to join two tables in Python is by using the merge()
    function. We’ll do that to solve the Amazon question:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中连接两个表格的最简单方法之一是使用 merge() 函数。我们将使用它来解决亚马逊问题：
- en: '*“Find the lowest order cost of each customer. Output the customer id along
    with the first name and the lowest order price.”*'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '*“查找每个客户的最低订单成本。输出客户 id 以及名字和最低订单价格。”*'
- en: 'Link to the question: [https://platform.stratascratch.com/coding/9912-lowest-priced-orders?python=1](https://platform.stratascratch.com/coding/9912-lowest-priced-orders?python=1)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 链接到问题：[https://platform.stratascratch.com/coding/9912-lowest-priced-orders?python=1](https://platform.stratascratch.com/coding/9912-lowest-priced-orders?python=1)
- en: 'You’re given two tables to work with. The first table is customers:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要处理两个表格。第一个表格是 customers：
- en: '| id | int64 |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| id | int64 |'
- en: '| first_name | object |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| first_name | object |'
- en: '| last_name | object |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| last_name | object |'
- en: '| city | object |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| city | object |'
- en: '| address | object |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| address | object |'
- en: '| phone_number | object |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| phone_number | object |'
- en: 'Here’s the data:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这是数据：
- en: '![output](../Images/46618178abdffd50379ac2679d4a5b5b.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![output](../Images/46618178abdffd50379ac2679d4a5b5b.png)'
- en: 'The second table is named orders with the following columns:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个表格名为 orders，包含以下列：
- en: '| id | int64 |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| id | int64 |'
- en: '| cust_id | int64 |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| cust_id | int64 |'
- en: '| order_date | datetime64[ns] |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| order_date | datetime64[ns] |'
- en: '| order_details | object |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| order_details | object |'
- en: '| total_order_cost | int64 |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| total_order_cost | int64 |'
- en: 'And the data is:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 数据如下：
- en: '![output](../Images/32c3c082072c691fe6f75ac78f88c892.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![output](../Images/32c3c082072c691fe6f75ac78f88c892.png)'
- en: 'Since you need the data from both tables, you’ll have to merge or inner join
    them:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 由于你需要两个表格中的数据，因此你必须合并或进行内连接：
- en: '[PRE2]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You do that on the column id from the table customers, and the column cust_id
    from the table orders. The result shows two tables as one:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 customers 表的 id 列和 orders 表的 cust_id 列上进行此操作。结果显示为两个表格合并成一个：
- en: '![output table](../Images/ff5f54f7fbada8e3b0bc75aa8404eed9.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![output table](../Images/ff5f54f7fbada8e3b0bc75aa8404eed9.png)'
- en: Once you’ve done that, use the groupby() function to group the output by cust_id
    and first_name. These are the columns the question asks you to show. You need
    to show the lowest order cost for each customer, too. You do that using the min()
    function.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成，使用 groupby() 函数按 cust_id 和 first_name 分组输出。这些是问题要求你展示的列。你还需要显示每个客户的最低订单成本，这可以通过
    min() 函数来实现。
- en: 'The complete answer is thus:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的答案如下：
- en: '[PRE3]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This code returns the desired output.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 该代码返回所需的输出。
- en: '![desired output](../Images/132c067b64162ddf86697fd1ca44463a.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![desired output](../Images/132c067b64162ddf86697fd1ca44463a.png)'
- en: 'Python Coding Interview Question #5: Income By Title and Gender'
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'Python 编程面试题 #5：按职位和性别统计收入'
- en: 'Here, we have another question from the City of San Francisco:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们还有一个来自旧金山的问题：
- en: '*“Find the average total compensation based on employee titles and gender.
    Total compensation is calculated by adding both the salary and bonus of each employee. *'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '*“根据员工的职位和性别计算平均总薪酬。总薪酬通过将每个员工的工资和奖金相加来计算。”*'
- en: '*However, not every employee receives a bonus so disregard employees without
    bonuses in your calculation. Employee can receive more than one bonus.*'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '*然而，并非每个员工都会收到奖金，因此在计算时忽略没有奖金的员工。员工可以收到多个奖金。*'
- en: '*Output the employee title, gender (i.e., sex), along with the average total
    compensation.”*'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '*输出员工职位、性别（即 sex）以及平均总薪酬。*'
- en: 'Link to the question: [https://platform.stratascratch.com/coding/10077-income-by-title-and-gender?python=1](https://platform.stratascratch.com/coding/10077-income-by-title-and-gender?python=1)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 链接到问题：[https://platform.stratascratch.com/coding/10077-income-by-title-and-gender?python=1](https://platform.stratascratch.com/coding/10077-income-by-title-and-gender?python=1)
- en: When answering this question, the first step should be to group by worker and
    bonus while using the sum() function to get the bonus per worker id. Then you
    should merge the tables you have at your disposal. This is again an inner join.
    Once you do that, you can get the total compensation by adding salary and bonus.
    The last step is to output the employee title, gender, and average total compensation,
    which you get by using the mean() function.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 回答这个问题时，第一步应是按工人和奖金进行分组，同时使用 sum() 函数获取每个工人 id 的奖金。然后你应该合并你拥有的表格。这也是内连接。完成后，你可以通过将工资和奖金相加来获得总薪酬。最后一步是输出员工职位、性别和平均总薪酬，这可以通过使用
    mean() 函数获得。
- en: 'Python Coding Interview Question #6: Product Transaction Count'
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'Python 编程面试问题 #6：产品交易数量'
- en: 'Here’s a question by Microsoft:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这是微软的问题：
- en: '*“Find the number of transactions that occurred for each product. Output the
    product name along with the corresponding number of transactions and order records
    by the product id in ascending order. You can ignore products without transactions.” *'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '*“找出每个产品发生的交易数量。输出产品名称以及相应的交易数量，并按产品 ID 升序排列记录。你可以忽略没有交易的产品。”*'
- en: 'Link to the question: [https://platform.stratascratch.com/coding/10163-product-transaction-count?python=1](https://platform.stratascratch.com/coding/10163-product-transaction-count?python=1)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 问题链接：[https://platform.stratascratch.com/coding/10163-product-transaction-count?python=1](https://platform.stratascratch.com/coding/10163-product-transaction-count?python=1)
- en: Here are some tips on writing a code. First, you should use the notnull() function
    to get the products with at least one transaction. Next, inner join this table
    with the table excel_sql_inventory_data using the merge() function. Use groupby()
    and transform() to get the number of transactions. Then get rid of the duplicate
    products and show the number of transactions for every product. Finally, sort
    the output by the product_id.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些编写代码的提示。首先，你应该使用 notnull() 函数获取至少有一笔交易的产品。接下来，使用 merge() 函数将该表与 excel_sql_inventory_data
    表进行内连接。使用 groupby() 和 transform() 函数获取交易数量。然后，去除重复的产品，并显示每个产品的交易数量。最后，按 product_id
    排序输出。
- en: Data Filtering
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据过滤
- en: '![XXXXX](../Images/0f74aef6fa4d6e808bae6e9ca934e0f8.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![XXXXX](../Images/0f74aef6fa4d6e808bae6e9ca934e0f8.png)'
- en: When you use Python, you’ll usually use it on huge amounts of data. However,
    you won’t be required to output all data because that is simply pointless.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用 Python 时，通常会处理大量数据。然而，你不需要输出所有数据，因为那样做没有意义。
- en: Analyzing data also includes setting certain criteria to pull only data you
    want to see in your output. For that, you should use certain ways of filtering
    data.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 数据分析还包括设置某些标准以仅提取你想在输出中看到的数据。为此，你应该使用某些数据过滤方法。
- en: While merge() also filters data in a way, here we’re talking about using the
    comparison operators (==, <, >, <=, >=), between(), or some other ways to limit
    the number of rows in the output. Let’s see how this is done in Python!
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 merge() 也以某种方式过滤数据，但这里我们讨论的是使用比较操作符（==、<、>、<=、>=）、between() 或其他方法来限制输出中的行数。让我们看看在
    Python 中是如何做到的！
- en: 'Python Coding Interview Question #7: Find the Top 10 Ranked Songs in 2010'
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'Python 编程面试问题 #7：找到 2010 年排名前 10 的歌曲'
- en: 'This is a question you could be asked at the Spotify interview:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你在 Spotify 面试中可能会被问到的问题：
- en: '*“What were the top 10 ranked songs in 2010? Output the rank, group name, and
    song name but do not show the same song twice. Sort the result based on the year_rank
    in ascending order.”*'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '*“2010年排名前10的歌曲是什么？输出排名、组合名称和歌曲名称，但不要重复显示相同的歌曲。根据 year_rank 升序排列结果。”*'
- en: 'Link to the question: [https://platform.stratascratch.com/coding/9650-find-the-top-10-ranked-songs-in-2010?python=1](https://platform.stratascratch.com/coding/9650-find-the-top-10-ranked-songs-in-2010?python=1)'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 问题链接：[https://platform.stratascratch.com/coding/9650-find-the-top-10-ranked-songs-in-2010?python=1](https://platform.stratascratch.com/coding/9650-find-the-top-10-ranked-songs-in-2010?python=1)
- en: 'To solve the problem, you need only the table billboard_top_100_year_end:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 解决问题时，你只需要表 billboard_top_100_year_end：
- en: '| id | int64 |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| id | int64 |'
- en: '| year | int64 |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| year | int64 |'
- en: '| year_rank | int64 |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| year_rank | int64 |'
- en: '| group_name | object |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| group_name | object |'
- en: '| artist | object |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| artist | object |'
- en: '| song_name | object |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| song_name | object |'
- en: 'The data from the table looks like this:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 表中的数据如下：
- en: '![data from the table](../Images/826fb5d5ff9cb7038fc60e32c9d56ae1.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![表中的数据](../Images/826fb5d5ff9cb7038fc60e32c9d56ae1.png)'
- en: Here’s how we approach answering the question.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们解答问题的方法。
- en: '[PRE4]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The above code sets up two conditions. The first one is using the ‘==’ operator.
    By using it, we select only songs appearing in 2010\. The second condition selects
    only songs that had a ranking between 1 and 10.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码设置了两个条件。第一个是使用 ‘==’ 操作符，通过它我们选择 2010 年出现的歌曲。第二个条件选择排名在 1 到 10 之间的歌曲。
- en: 'Running this code returns:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此代码的结果为：
- en: '![Running this code returns](../Images/18c5130e76b89ab15d5d8d7dd0aa3eee.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![运行此代码的结果](../Images/18c5130e76b89ab15d5d8d7dd0aa3eee.png)'
- en: 'After that, we need to select only three columns: year_rank, group_name, and
    song_name. We will also remove duplicates using the drop_duplicates() function.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们只需要选择三列：year_rank、group_name 和 song_name。我们还将使用 drop_duplicates() 函数删除重复项。
- en: 'That makes the code complete:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得代码完整：
- en: '[PRE5]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'It will give you the top 10 ranked songs in 2010:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 它将给你2010年排名前10的歌曲：
- en: '![top 10 ranked songs in 2010](../Images/a1ae271fd507b589e20f53c0c48d084f.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![2010年排名前10的歌曲](../Images/a1ae271fd507b589e20f53c0c48d084f.png)'
- en: 'Python Coding Interview Question #8: Apartments in New York City and Harlem'
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'Python编码面试问题 #8：纽约市和哈莱姆区的公寓'
- en: 'Try and solve the question by Airbnb:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试解决Airbnb的问题：
- en: '*“Find the search details of 50 apartment searches the Harlem neighborhood
    of New York City.”*'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '*“找到纽约市哈莱姆区50个公寓搜索的详细信息。”*'
- en: 'Link to the question: [https://platform.stratascratch.com/coding/9616-apartments-in-new-york-city-and-harlem?python=1](https://platform.stratascratch.com/coding/9616-apartments-in-new-york-city-and-harlem?python=1)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 问题链接：[https://platform.stratascratch.com/coding/9616-apartments-in-new-york-city-and-harlem?python=1](https://platform.stratascratch.com/coding/9616-apartments-in-new-york-city-and-harlem?python=1)
- en: Here are some hints. You need to set three conditions that will get you only
    apartment category, only those in Harlem, and the city has to be NYC. All three
    conditions will be set using the ‘==’ operator. You don’t need to show all apartments,
    so use the head() function to limit the number of rows in the output.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些提示。你需要设置三个条件，只获取公寓类别，只包含哈莱姆区的公寓，且城市必须是纽约市。所有三个条件将使用‘==’操作符设置。你不需要展示所有公寓，因此使用head()函数限制输出的行数。
- en: 'Python Coding Interview Question #9: Duplicate Emails'
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'Python编码面试问题 #9：重复邮箱'
- en: 'The last question focused on filtering data is by Salesforce:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 上一个问题集中于数据筛选，出自Salesforce：
- en: '*“Find all emails with duplicates.”*'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '*“找到所有有重复的邮箱。”*'
- en: 'Link to the question: [https://platform.stratascratch.com/coding/9895-duplicate-emails?python=1](https://platform.stratascratch.com/coding/9895-duplicate-emails?python=1)'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 问题链接：[https://platform.stratascratch.com/coding/9895-duplicate-emails?python=1](https://platform.stratascratch.com/coding/9895-duplicate-emails?python=1)
- en: This question is rather simple. You need to use the groupby() function to group
    by email and find how many times each email address appears. Then use the ‘>’
    operator on the number of email addresses to get duplicates.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题相对简单。你需要使用groupby()函数按邮箱分组，并找出每个邮箱地址出现的次数。然后对邮箱地址数量使用‘>’操作符，以获取重复项。
- en: Manipulating Text
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作文本
- en: When working with data, you’ll have to manipulate it to make it more suitable
    for your analysis. This is often the case with text data. It includes allocating
    new values to data according to the text stored, parsing and merging text, or
    finding its length, position of a certain letter, sign, etc.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理数据时，你需要对数据进行操作，以使其更适合你的分析。这通常适用于文本数据。它包括根据存储的文本分配新的值，解析和合并文本，或查找其长度、特定字母的位置、符号等。
- en: 'Python Coding Interview Question #10: Reviews Bins on Reviews Number'
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'Python编码面试问题 #10：评论数量的分类'
- en: 'The next question is by Airbnb:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个问题出自Airbnb：
- en: '*“To better understand the effect of the review count on the price of accommodation,
    categorize the number of reviews into the following groups along with the price.*'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '*“为了更好地理解评论数量对住宿价格的影响，将评论数量分为以下几个组别，并考虑价格。”*'
- en: '*    0 reviews: NO*'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '*    0条评论：没有*'
- en: '*    1 to 5 reviews: FEW*'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '*    1到5条评论：少量*'
- en: '*    6 to 15 reviews: SOME*'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '*    6到15条评论：一些*'
- en: '*    16 to 40 reviews: MANY*'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '*    16到40条评论：许多*'
- en: '*    more than 40 reviews: A LOT*'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '*    超过40条评论：很多*'
- en: '*Output the price and its categorization. Perform the categorization on accommodation
    level.**“*'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '*输出价格及其分类。按住宿级别进行分类。**“*'
- en: 'Link to the question: [https://platform.stratascratch.com/coding/9628-reviews-bins-on-reviews-number?python=1](https://platform.stratascratch.com/coding/9628-reviews-bins-on-reviews-number?python=1)'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 问题链接：[https://platform.stratascratch.com/coding/9628-reviews-bins-on-reviews-number?python=1](https://platform.stratascratch.com/coding/9628-reviews-bins-on-reviews-number?python=1)
- en: 'You’re working with only one table, but the one with quite a lot of columns.
    The table is airbnb_search_details, and the columns are:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 你正在处理的只有一个表，但列相当多。该表是airbnb_search_details，列有：
- en: '| id | int64 |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| id | int64 |'
- en: '| price | float64 |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| price | float64 |'
- en: '| property_type | object |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| property_type | object |'
- en: '| room_type | object |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| room_type | object |'
- en: '| amenities | object |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| amenities | object |'
- en: '| accommodates | int64 |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| accommodates | int64 |'
- en: '| bathrooms | int64 |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| bathrooms | int64 |'
- en: '| bed_type | object |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| bed_type | object |'
- en: '| cancellation_policy | object |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| cancellation_policy | object |'
- en: '| cleaning_fee | bool |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| cleaning_fee | bool |'
- en: '| city | object |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| city | object |'
- en: '| host_identity_verified | object |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| host_identity_verified | object |'
- en: '| host_response_rate | object |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| host_response_rate | object |'
- en: '| host_since | datetime64[ns] |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| host_since | datetime64[ns] |'
- en: '| neighbourhood | object |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| neighbourhood | object |'
- en: '| number_of_reviews | int64 |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| number_of_reviews | int64 |'
- en: '| review_scores_rating | float64 |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| review_scores_rating | float64 |'
- en: '| zipcode | int64 |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| zipcode | int64 |'
- en: '| bedrooms | int64 |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| bedrooms | int64 |'
- en: '| beds | int64 |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| beds | int64 |'
- en: 'Here are several first rows from the table:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 这是表格中的几行前几条数据：
- en: '![several first rows from the table](../Images/a6aab6ed41cdda541b0eb8d2eba4b4f5.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![表格中的几行前几条数据](../Images/a6aab6ed41cdda541b0eb8d2eba4b4f5.png)'
- en: The first step in writing the code should be getting the number of reviews.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 编写代码的第一步应该是获取评论数量。
- en: '[PRE6]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You get this:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 你得到的是：
- en: '![output](../Images/32ebee564e5e091cd76904040d1fa25e.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![输出](../Images/32ebee564e5e091cd76904040d1fa25e.png)'
- en: Next, you’d want to get the accommodation with 0 reviews, then with 1-5, 6-15,
    16-40, and more than 40 reviews. To get that, you’ll need the combination of the
    ‘==’ and ‘>’ operators, and the between() function.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你需要获取评论数为0的住宿，然后是1-5，6-15，16-40和超过40条评论的住宿。为了实现这一点，你需要‘==’和‘>’运算符的组合，以及between()函数。
- en: '[PRE7]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Here’s what your current output should look like:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你当前的输出应如下所示：
- en: '![current output should look](../Images/935e631a876a7fbd7a812ba9813c2531.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![当前输出应如下所示](../Images/935e631a876a7fbd7a812ba9813c2531.png)'
- en: 'Now comes working with text in the shape of assigning the categories. And these
    are: NO, FEW, SOME, MANY, A LOT. Your code up until now is:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 现在开始处理文本，以分配类别。这些类别包括：NO、FEW、SOME、MANY、A LOT。到目前为止，你的代码是：
- en: '[PRE8]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'OK, here are your categories:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，这是你的类别：
- en: '![here are your categories](../Images/272f90665350ac3448c085b669a97e90.png)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![这是你的类别](../Images/272f90665350ac3448c085b669a97e90.png)'
- en: 'The final step is to allocate these categories to the accommodation and list
    its price:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是将这些类别分配给住宿，并列出其价格：
- en: '[PRE9]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This code will get you the desired output:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码将为你提供所需的输出：
- en: '![code will get you the desired output](../Images/771f381414a9765b404084e14de97961.png)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![代码将为你提供所需的输出](../Images/771f381414a9765b404084e14de97961.png)'
- en: 'Python Coding Interview Question #11: Business Name Lengths'
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'Python 编程面试题 #11: 商业名称长度'
- en: 'The next question is by the City of San Francisco:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个问题是由旧金山市提出的：
- en: '*“Find the number of words in each business name. Avoid counting special symbols
    as words (e.g. &). Output the business name and its count of words.”*'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '*“找出每个商业名称中的单词数量。避免将特殊符号计入单词（例如 &）。输出商业名称及其单词数量。”*'
- en: 'Link to the question: [https://platform.stratascratch.com/coding/10131-business-name-lengths?python=1](https://platform.stratascratch.com/coding/10131-business-name-lengths?python=1)'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '问题链接: [https://platform.stratascratch.com/coding/10131-business-name-lengths?python=1](https://platform.stratascratch.com/coding/10131-business-name-lengths?python=1)'
- en: When answering the question, you should first find only distinct businesses
    using the drop_duplicates() function. Then use the replace() function to replace
    all the special symbols with blank, so you don’t count them later. Use the split()
    function to split the text into a list, and then use the len() function to count
    the number of words.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在回答问题时，你应该首先使用drop_duplicates()函数找到唯一的商业名称。然后使用replace()函数将所有特殊符号替换为空白，这样你就不会在后续计算中计入这些符号。使用split()函数将文本拆分为列表，然后使用len()函数计算单词数量。
- en: 'Python Coding Interview Question #12: Positions Of Letter ''a'''
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'Python 编程面试题 #12: 字母''a''的位置'
- en: 'This question by Amazon asks you to:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题由亚马逊提出，要求你：
- en: '*“Find the position of the letter ''a'' in the first name of the worker ''Amitah''.
    Use 1-based indexing, e.g. position of the second letter is 2.”*'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '*“找到工人''Amitah''名字中字母''a''的位置。使用基于1的索引，例如第二个字母的位置是2。”*'
- en: 'Link to the question: [https://platform.stratascratch.com/coding/9829-positions-of-letter-a?python=1](https://platform.stratascratch.com/coding/9829-positions-of-letter-a?python=1)'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '问题链接: [https://platform.stratascratch.com/coding/9829-positions-of-letter-a?python=1](https://platform.stratascratch.com/coding/9829-positions-of-letter-a?python=1)'
- en: There are two main concepts in the solution. The first is filtering the worker
    ‘Amitah’ using the ‘==’ operator. The second one is using the find() function
    on a string to get the position of the letter ‘a’.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案中有两个主要概念。第一个是使用‘==’运算符过滤工人‘Amitah’。第二个是对字符串使用find()函数以获取字母‘a’的位置。
- en: Manipulating Datetime
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作日期时间
- en: '![Manipulating Datetime](../Images/8915930f1ce1bea9fae59e19e3feb81e.png)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![操作日期时间](../Images/8915930f1ce1bea9fae59e19e3feb81e.png)'
- en: As a data scientist, you’ll be working with dates a lot. Depending on the data
    available, you could be asked to convert data to datetime, extract a certain period
    of time (such as month or year), or manipulate datetime in any other way that’s
    suitable.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 作为数据科学家，你将经常处理日期。根据可用的数据，你可能需要将数据转换为日期时间格式，提取某个时间段（如月份或年份），或以其他适当的方式操作日期时间。
- en: 'Python Coding Interview Question #13: Number of Comments Per User in Past 30
    days'
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python编码面试题#13：过去30天每个用户的评论数量
- en: 'Here’s a question by Meta/Facebook:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: Meta/Facebook提出的问题如下：
- en: '*“Return the total number of comments received for each user in the last 30
    days. Don''t output users who haven''t received any comment in the defined time
    period. Assume today is 2020-02-10.” *'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '*“返回每位用户在过去30天内收到的评论总数。不输出在定义时间段内未收到任何评论的用户。假设今天是2020年2月10日。”*'
- en: 'Link to the question: [https://platform.stratascratch.com/coding/2004-number-of-comments-per-user-in-past-30-days?python=1](https://platform.stratascratch.com/coding/2004-number-of-comments-per-user-in-past-30-days?python=1)'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '问题链接: [https://platform.stratascratch.com/coding/2004-number-of-comments-per-user-in-past-30-days?python=1](https://platform.stratascratch.com/coding/2004-number-of-comments-per-user-in-past-30-days?python=1)'
- en: 'You can find data in the table fb_comments_count:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在表格fb_comments_count中找到数据。
- en: '| user_id | int64 |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| user_id | int64 |'
- en: '| created_at | datetime64[ns] |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| created_at | datetime64[ns] |'
- en: '| number_of_comments | int64 |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| number_of_comments | int64 |'
- en: 'Data is here, too:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 数据也在这里：
- en: '![Data is here](../Images/9b5177a01ffd61cde052c1513cc079a9.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![数据在这里](../Images/9b5177a01ffd61cde052c1513cc079a9.png)'
- en: 'Have a look at the solution, and then we’ll explain it below:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 查看解决方案，然后我们将下面解释：
- en: '[PRE10]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: To find the comments not older than thirty days from 2020-02-10, you first need
    to convert this date to datetime using the to_datetime() function. To get the
    latest date of the comments you’re interested in, subtract 30 days from today
    using the timedelta() function. All the comments you’re interested in have date
    equal to or greater than this difference. Also, you want to exclude all the comments
    that are posted after 2020-02-10\. That’s why there’s a second condition. Finally,
    group by the user_id and use the sum() function to get the comments per user.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找2020年2月10日不超过三十天的评论，首先需要使用`to_datetime()`函数将日期转换为datetime格式。为了得到你感兴趣的评论的最新日期，使用`timedelta()`函数从今天的日期中减去30天。所有你感兴趣的评论日期都等于或大于这个差值。此外，你还需要排除所有在2020年2月10日之后发布的评论。这就是为什么有第二个条件。最后，根据`user_id`进行分组，并使用`sum()`函数得到每个用户的评论数量。
- en: 'If you did everything right, you’d get this output:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你做对了所有的步骤，你会得到如下输出：
- en: '![you’d get this output](../Images/6a0d16e7687bd4d8db8891383d976939.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![你会得到这个输出](../Images/6a0d16e7687bd4d8db8891383d976939.png)'
- en: 'Python Coding Interview Question #14: Finding User Purchases'
  id: totrans-218
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python编码面试题#14：查找用户购买记录
- en: 'This is the question by Amazon:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Amazon提出的问题：
- en: '*“Write a query that''ll identify returning active users. A returning active
    user is a user that has made a second purchase within 7 days of any other of their
    purchases. Output a list of user_ids of these returning active users.”*'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '*“编写一个查询以识别回访的活跃用户。回访活跃用户是指在任何其他购买后的7天内进行了第二次购买的用户。输出这些回访活跃用户的user_ids列表。”*'
- en: 'Link to the question: [https://platform.stratascratch.com/coding/10322-finding-user-purchases?python=1](https://platform.stratascratch.com/coding/10322-finding-user-purchases?python=1)'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '问题链接: [https://platform.stratascratch.com/coding/10322-finding-user-purchases?python=1](https://platform.stratascratch.com/coding/10322-finding-user-purchases?python=1)'
- en: To solve it, you need to use the strftime() function to get the date of purchase
    in an MM-DD-YYYY format. Then use the sort_values() to sort the output in ascending
    order according to the user’s ID and the date of purchase. To get the previous
    order, apply the shift() function, group by the user_id, and show the purchase
    dates.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，你需要使用`strftime()`函数将购买日期格式化为MM-DD-YYYY格式。然后使用`sort_values()`按照用户ID和购买日期的升序排序输出。要得到前一个订单，应用`shift()`函数，按`user_id`分组，并显示购买日期。
- en: Use the to_datetime to convert the order’s and the previous order’s date, and
    then find the difference between the two dates. Finally, filter the result so
    it outputs only users with seven days or less between the first and the second
    purchase, and use the unique() function to get only the distinct users.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`to_datetime`将订单及前一订单的日期转换为datetime格式，然后找出两个日期之间的差异。最后，过滤结果，使其只输出在第一次和第二次购买之间相差七天或更少的用户，并使用`unique()`函数得到唯一用户。
- en: 'Python Coding Interview Question #15: Customer Revenue In March'
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python编码面试题#15：3月份客户收入
- en: 'The last question is by Meta/Facebook:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的问题由Meta/Facebook提出：
- en: '*“Calculate the total revenue from each customer in March 2019\. Include only
    customers who were active in March 2019. *'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '*“计算2019年3月每位客户的总收入。仅包括2019年3月活跃的客户。”*'
- en: '*Output the revenue along with the customer id and sort the results based on
    the revenue in descending order.” *'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '*“输出收入及客户ID，并根据收入按降序排列结果。”*'
- en: 'Link to the question: [https://platform.stratascratch.com/coding/9782-customer-revenue-in-march?python=1](https://platform.stratascratch.com/coding/9782-customer-revenue-in-march?python=1)'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 问题链接：[https://platform.stratascratch.com/coding/9782-customer-revenue-in-march?python=1](https://platform.stratascratch.com/coding/9782-customer-revenue-in-march?python=1)
- en: You’ll need to_datetime() on the column order_date. Then extract March and the
    year 2019 from the same column. Finally, group by the cust_id and sum the column
    total_order_cost, which will be the revenue you’re looking for. Use the sort_values()
    to sort the output according to revenue in descending order.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要对列 order_date 使用 to_datetime()。然后从同一列中提取 2019 年 3 月。最后，按 cust_id 分组并对列 total_order_cost
    求和，这将是你要找的收入。使用 sort_values() 根据收入降序排列输出结果。
- en: Conclusion
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: By showing you 15 interview questions from top companies, we covered five main
    topics interviewers are interested in when testing your Python skills.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 通过展示来自顶级公司的 15 个面试问题，我们涵盖了面试官在测试你的 Python 技能时感兴趣的五个主要话题。
- en: We kicked off with aggregation, grouping, and ordering of data. Then we showed
    you how to join tables and filter your output. Finally, you learned how to manipulate
    text and datetime data.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从数据的聚合、分组和排序开始。然后我们展示了如何连接表格和过滤输出。最后，你学会了如何操作文本和日期时间数据。
- en: These are not the only concepts you should know, of course. But it should give
    you a sound basis for interview preparation and answering some [more python interview
    questions](https://www.stratascratch.com/blog/top-30-python-interview-questions-and-answers/?utm_source=blog&utm_medium=click&utm_campaign=kdnuggets).
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 这些当然不是你应该知道的唯一概念。但它应该为你的面试准备和回答一些 [更多 Python 面试问题](https://www.stratascratch.com/blog/top-30-python-interview-questions-and-answers/?utm_source=blog&utm_medium=click&utm_campaign=kdnuggets)
    提供一个良好的基础。
- en: To practice more Python Pandas functions, check out our post “[*Python Pandas
    Interview Questions for Data Science*](https://www.stratascratch.com/blog/python-pandas-interview-questions-for-data-science/)”
    that will give you an overview of the data manipulation with Pandas and the types
    of Pandas questions asked in [Data Science Interviews](https://www.stratascratch.com/blog/data-science-interview-guide-questions-from-80-different-companies/).
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 要练习更多的 Python Pandas 函数，请查看我们的帖子“[*Python Pandas 面试问题*](https://www.stratascratch.com/blog/python-pandas-interview-questions-for-data-science/)”，它将为你提供
    Pandas 数据操作的概述以及在 [数据科学面试](https://www.stratascratch.com/blog/data-science-interview-guide-questions-from-80-different-companies/)
    中常见的 Pandas 问题类型。
- en: '**[Nate Rosidi](https://www.stratascratch.com)** is a data scientist and in
    product strategy. He''s also an adjunct professor teaching analytics, and is the
    founder of [StrataScratch](https://www.stratascratch.com/), a platform helping
    data scientists prepare for their interviews with real interview questions from
    top companies. Connect with him on [Twitter: StrataScratch](https://twitter.com/StrataScratch)
    or [LinkedIn](https://www.linkedin.com/in/nathanrosidi/).'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '**[内特·罗西迪](https://www.stratascratch.com)** 是一名数据科学家和产品战略专家。他还是一位兼职教授，教授分析课程，并且是
    [StrataScratch](https://www.stratascratch.com/) 的创始人，这个平台帮助数据科学家准备面试，提供来自顶级公司的真实面试问题。你可以在
    [Twitter: StrataScratch](https://twitter.com/StrataScratch) 或 [LinkedIn](https://www.linkedin.com/in/nathanrosidi/)
    上与他联系。'
- en: More On This Topic
  id: totrans-236
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[KDnuggets News, May 4: 9 Free Harvard Courses to Learn Data…](https://www.kdnuggets.com/2022/n18.html)'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻，5 月 4 日：9 门免费哈佛课程以学习数据…](https://www.kdnuggets.com/2022/n18.html)'
- en: '[Top 10 Advanced Data Science SQL Interview Questions You Must Know…](https://www.kdnuggets.com/2023/01/top-10-advanced-data-science-sql-interview-questions-must-know-answer.html)'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[你必须知道的 10 个高级数据科学 SQL 面试问题…](https://www.kdnuggets.com/2023/01/top-10-advanced-data-science-sql-interview-questions-must-know-answer.html)'
- en: '[3 Hard Python Coding Interview Questions For Data Science](https://www.kdnuggets.com/2023/03/3-hard-python-coding-interview-questions-data-science.html)'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[3 个难度较大的 Python 编码面试问题（适用于数据科学）](https://www.kdnuggets.com/2023/03/3-hard-python-coding-interview-questions-data-science.html)'
- en: '[How to Answer Data Science Coding Interview Questions](https://www.kdnuggets.com/2022/01/answer-data-science-coding-interview-questions.html)'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何回答数据科学编码面试问题](https://www.kdnuggets.com/2022/01/answer-data-science-coding-interview-questions.html)'
- en: '[7 Must-Know Python Tips for Coding Interviews](https://www.kdnuggets.com/2023/03/7-mustknow-python-tips-coding-interviews.html)'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[7 个必须知道的 Python 编码面试技巧](https://www.kdnuggets.com/2023/03/7-mustknow-python-tips-coding-interviews.html)'
- en: '[26 Data Science Interview Questions You Should Know](https://www.kdnuggets.com/26-data-science-interview-questions-you-should-know)'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[你应该知道的 26 个数据科学面试问题](https://www.kdnuggets.com/26-data-science-interview-questions-you-should-know)'
