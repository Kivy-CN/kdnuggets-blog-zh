- en: Testing Your Machine Learning Pipelines
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/11/testing-machine-learning-pipelines.html](https://www.kdnuggets.com/2019/11/testing-machine-learning-pipelines.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Kristina Young](https://www.linkedin.com/in/kristina-georgieva/), Senior
    Data Scientist**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to data products, a lot of the time there is a misconception that
    these cannot be put through automated testing. Although some parts of the pipeline
    can not go through *traditional* testing methodologies due to their experimental
    and stochastic nature, most of the pipeline can. In addition to this, the more
    unpredictable algorithms can be put through specialised validation processes.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take a look at traditional testing methodologies and how we can apply
    these to our data/ML pipelines.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: Testing Pyramid
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Your standard simplified testing pyramid looks like this:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing pyramid](../Images/c91452a8dddea3d572e7c48be6b02998.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
- en: This pyramid is a representation of the types of tests that you would write
    for an application. We start with a lot of Unit Tests, which test a single piece
    of functionality in isolation of others. Then we write Integration Tests which
    check whether bringing our isolated components together works as expected. Lastly
    we write UI or acceptance tests, which check that the application works as expected
    from the user’s perspective.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to data products, the pyramid is not so different. We have more
    or less the same levels.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing pyramid.png](../Images/73bc12f0b893c1efe5ad944fee1ddaa8.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
- en: Note that the UI tests would still take place for the product, but this blog
    post focuses on tests most relevant to the data pipeline.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take a closer look at what each of these means in the context of Machine
    Learning, and with the help fo some sci-fi authors.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Unit tests
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*“It’s a system for testing your thoughts against the universe, and seeing
    whether they match” Isaac Asimov.*'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 'Most of the code in a data pipeline consists of a data cleaning process. Each
    of the functions used to do data cleaning has a clear goal. Let’s say, for example,
    that one of the features that we have chosen for out model is the change of a
    value between the previous and current day. Our code might look somewhat like
    this:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here we know that for a given input we expect a certain output, therefore,
    we can test this with the following code:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: For each piece of independent functionality, you would write a unit test, making
    sure that each part of the data transformation process has the expected effect
    on the data. For each piece of functionality you should also consider different
    scenarios (is there an if statement? then all conditionals should be tested).
    These would then be ran as part of your continuous integration (CI) pipeline on
    every commit.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: In addition to checking that the code does what is intended, unit tests also
    give us a hand when debugging a problem. By adding a test that reproduces a newly
    discovered bug, we can ensure that the bug is fixed when we think that is fixed,
    and we can ensure that the bug does not happen again.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 除了检查代码是否按预期工作外，单元测试还在调试问题时给予我们帮助。通过添加一个能够重现新发现的错误的测试，我们可以确保在我们认为错误已经修复时，该错误已经被修复，并且我们可以确保该错误不会再次发生。
- en: Lastly, these tests not only check that the code does what is intended, but
    also help us document the expectations that we had when creating the functionality.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这些测试不仅检查代码是否按预期工作，还帮助我们记录创建功能时的期望。
- en: Integration tests
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 集成测试
- en: '*Because “The unclouded eye was better, no matter what it saw.” Frank Herbert*.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*因为 “无云的眼睛更好，不管它看到什么。” Frank Herbert*'
- en: 'These tests aim to determine whether modules that have been developed separately
    work as expected when brought together. In terms of a data pipeline, these can
    check that:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这些测试旨在确定单独开发的模块在结合在一起时是否按预期工作。就数据管道而言，这些测试可以检查：
- en: The data cleaning process results in a dataset appropriate for the model
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据清理过程产生了适合模型的数据集
- en: The model training can handle the data provided to it and outputs results (ensurign
    that code can be refactored in the future)
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型训练能够处理提供给它的数据并输出结果（确保代码在未来可以重构）
- en: 'So if we take the unit tested function above and we add the following two functions:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果我们拿上面的单元测试函数，并添加以下两个函数：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then we can test that combining the functions inside *clean_data* will yield
    the expected result with the following code:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以测试将*clean_data*内部的函数组合起来是否会产生预期的结果，代码如下：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now let’s say that the next thing we do is feed the above data to a logistic
    regression model.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在假设我们要做的下一步是将上述数据输入到逻辑回归模型中。
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Although we don’t know the expectation, we can ensure that we always result
    in the same value. It is useful for us to test this integration to ensure that:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们不知道期望值，但我们可以确保总是得到相同的值。测试这种集成对我们很有用，以确保：
- en: The data is consumable by the model (a label exists for every input, the types
    of the data are accepted by the type of model chosen, etc)
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据可以被模型使用（每个输入都有标签，数据类型被选择的模型接受等）
- en: We are able to refactor our code in the future, without breaking the end to
    end functionality.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们能够在未来重构我们的代码，而不会破坏端到端的功能。
- en: 'We can ensure that the results are always the same by providing the same seed
    for the random generator. All major libraries allow you to set the seed (Tensorflow
    is a bit special, as it requires you to set the seed via numpy, so keep this in
    mind). The test could look as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 通过为随机生成器提供相同的种子，我们可以确保结果始终相同。所有主要的库都允许你设置种子（Tensorflow 有点特殊，因为它要求你通过 numpy 设置种子，请记住这一点）。测试可以如下所示：
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: There won’t be as many of these kinds of tests as unit tests, but they would
    still be part of your CI pipeline. You would use these to check the end to end
    functionality for a component and would therefore test more major scenarios.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这类测试不会像单元测试那样多，但它们仍会成为你 CI 管道的一部分。你会使用这些测试来检查组件的端到端功能，因此会测试更主要的场景。
- en: ML Validation
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 机器学习验证
- en: '*Why? “To exhibit the perfect uselessness of knowing the answer to the wrong
    question.” Ursula K. Le Guin.*'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '*为什么？“展现了知道错误问题答案的完美无用性。” Ursula K. Le Guin.*'
- en: Now that we have tested our code, we need to also test that the ML component
    is solving the problem that we are trying to solve. When we talk about product
    development, the raw results of an ML model (however accurate based on statistical
    methods) are almost never the desired end outputs. These results are usually combined
    with other business rules before consumed by a user or another application. For
    this reason, we need to validate that the model solves the user problem, and not
    only that the accuracy/f1-score/other statistical measure is high enough.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经测试了我们的代码，我们还需要测试机器学习组件是否解决了我们要解决的问题。当我们谈论产品开发时，机器学习模型的原始结果（无论基于统计方法的准确度如何）几乎从来不是期望的最终输出。这些结果通常会与其他业务规则结合，然后才会被用户或其他应用程序使用。因此，我们需要验证模型是否解决了用户的问题，而不仅仅是准确度/F1
    分数/其他统计指标是否足够高。
- en: How does this help us?
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这对我们有什么帮助？
- en: It ensures that the model actually helps the product solve the problem at hand
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它确保模型实际帮助产品解决当前的问题
- en: For example, a model that classifies a snake bite as deadly or not with 80%
    accuracy is not a good model if the 20% that is incorrect leads to patients not
    getting the treatment that they need.
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，一个将蛇咬伤分类为致命或非致命的模型，如果20%的错误导致患者未能得到所需治疗，那么这个模型并不好。
- en: It ensures that the values produced by the model make sense in terms of the
    industry
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保模型产生的值在行业中是合理的
- en: For example, a model that predicts changes in price with 70% accuracy is not
    a good model, if the end price displayed to the user has a value that’s too low/high
    to make sense in that industry/market.
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，一个以70%准确率预测价格变化的模型，如果最终显示给用户的价格值在该行业/市场中过低或过高，则不是一个好的模型。
- en: It provides an extra layer of documentation of the decisions made, helping engineers
    joining the team later in the process.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供了决策记录的额外文档层次，帮助后来加入团队的工程师。
- en: It provides visibility of the ML components of the product in a common language
    understood by clients, product managers and engineers in the same way.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它以一种客户、产品经理和工程师都能理解的共同语言提供了产品中机器学习组件的可见性。
- en: This kind of validation should be ran periodically (either through the CI pipeline
    or a cron job), and its results should be made visible to the organisation. This
    ensures that progress in the data science components is visible to the organisation,
    and ensures that issues caused by changes or stale data are caught early.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这种验证应定期进行（通过CI管道或cron作业），其结果应向组织公开。这确保数据科学组件的进展对组织可见，并确保由于更改或陈旧数据引起的问题能尽早被发现。
- en: Conclusion
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论
- en: '*After all “Magic’s just science that we don’t understand yet” Arthur C. Clarke.*'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '*毕竟，“魔法只是我们尚未理解的科学”——阿瑟·克拉克。*'
- en: 'ML components can be tested in various ways, bringing us the following advantages:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习组件可以通过各种方式进行测试，带来以下优势：
- en: Resulting in a data driven approach to ensure that the code does what is expected
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 采用数据驱动的方法，以确保代码的行为符合预期
- en: Ensuring that we can refactor and cleanup code without breaking the functionality
    of the product
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保我们能够重构和清理代码，而不破坏产品的功能
- en: Documenting functionality, decisions and previous bugs
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录功能、决策和以前的错误
- en: Providing visibility of the progress and state of the ML components of a product
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供产品中机器学习组件的进展和状态的可见性
- en: So don’t be afraid, if you have the skillset to write the code, you have the
    skillset to write the test and gain all of the above advantages ????.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 所以不要害怕，如果你有编写代码的技能，你也具备编写测试的技能，并获得上述所有优势????。
- en: So long and thanks for all the testing!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 再见，谢谢你的所有测试！
- en: '**Bio: [Kristina Young](https://www.linkedin.com/in/kristina-georgieva/)**
    is a Senior Data Scientist at BCG Digital Ventures. She has previously worked
    at SoundCloud as a Backend and Data Engineer in the Recommendations team. Her
    previous experience is as a consultant and researcher. She has worked as a back
    end, web and mobile developer in the past on a variety of technologies.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**个人简介：[Kristina Young](https://www.linkedin.com/in/kristina-georgieva/)**
    是BCG Digital Ventures的高级数据科学家。她曾在SoundCloud担任推荐团队的后端和数据工程师。她的以往经验包括顾问和研究员。她在过去曾担任过后端、网页和移动开发人员，涉及各种技术。'
- en: '[Original](https://intothedepthsofdataengineering.wordpress.com/2019/07/18/testing-your-machine-learning-ml-pipelines/).
    Reposted with permission.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://intothedepthsofdataengineering.wordpress.com/2019/07/18/testing-your-machine-learning-ml-pipelines/)。经许可转载。'
- en: '**Related:**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[5 Step Guide to Scalable Deep Learning Pipelines with d6tflow](/2019/09/5-step-guide-scalable-deep-learning-pipelines-d6tflow.html)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5步指南：使用d6tflow构建可扩展的深度学习管道](/2019/09/5-step-guide-scalable-deep-learning-pipelines-d6tflow.html)'
- en: '[How I Got Better at Machine Learning](/2019/11/better-machine-learning.html)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[我如何在机器学习中变得更好](/2019/11/better-machine-learning.html)'
- en: '[Data Pipelines, Luigi, Airflow: Everything you need to know](/2019/03/data-pipelines-luigi-airflow-everything-need-know.html)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据管道、Luigi、Airflow：你需要知道的一切](/2019/03/data-pipelines-luigi-airflow-everything-need-know.html)'
- en: '* * *'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Hypothesis Testing and A/B Testing](https://www.kdnuggets.com/hypothesis-testing-and-ab-testing)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[假设测试和 A/B 测试](https://www.kdnuggets.com/hypothesis-testing-and-ab-testing)'
- en: '[Streamline Your Machine Learning Workflow with Scikit-learn Pipelines](https://www.kdnuggets.com/streamline-your-machine-learning-workflow-with-scikit-learn-pipelines)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通过 Scikit-learn Pipelines 简化你的机器学习工作流程](https://www.kdnuggets.com/streamline-your-machine-learning-workflow-with-scikit-learn-pipelines)'
- en: '[Effective Testing for Machine Learning](https://www.kdnuggets.com/2022/01/effective-testing-machine-learning.html)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[机器学习的有效测试](https://www.kdnuggets.com/2022/01/effective-testing-machine-learning.html)'
- en: '[The Difference Between Training and Testing Data in Machine Learning](https://www.kdnuggets.com/2022/08/difference-training-testing-data-machine-learning.html)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[机器学习中训练数据和测试数据的区别](https://www.kdnuggets.com/2022/08/difference-training-testing-data-machine-learning.html)'
- en: '[Beginner’s Guide to Machine Learning Testing With DeepChecks](https://www.kdnuggets.com/beginners-guide-to-machine-learning-testing-with-deepchecks)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 DeepChecks 的机器学习测试初学者指南](https://www.kdnuggets.com/beginners-guide-to-machine-learning-testing-with-deepchecks)'
- en: '[Answering Questions with HuggingFace Pipelines and Streamlit](https://www.kdnuggets.com/2021/10/simple-question-answering-web-app-hugging-face-pipelines.html)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 HuggingFace Pipelines 和 Streamlit 回答问题](https://www.kdnuggets.com/2021/10/simple-question-answering-web-app-hugging-face-pipelines.html)'
