["```py\nIn [1]: import torch \n\nIn [2]: import numpy as np\n\nIn [3]: arr = np.random.randn((3,5))\n\nIn [4]: arr\n\nOut[4]:\narray([[-1.00034281, -0.07042071,  0.81870386],\n       [-0.86401346, -1.4290267 , -1.12398822],\n       [-1.14619856,  0.39963316, -1.11038695],\n       [ 0.00215314,  0.68790149, -0.55967659]])\n\nIn [5]: tens = torch.from_numpy(arr)\n\nIn [6]: tens\n\nOut[6]:\n\n-1.0003 -0.0704  0.8187\n-0.8640 -1.4290 -1.1240\n-1.1462  0.3996 -1.1104\n0.0022  0.6879 -0.5597\n[torch.DoubleTensor of size 4x3]\n\nIn [7]: another_tensor = torch.LongTensor([[2,4],[5,6]])\n\nIn [7]: another_tensor\n\nOut[13]: \n 2  4\n 5  6\n[torch.LongTensor of size 2x2]\n\nIn [8]: random_tensor = torch.randn((4,3))\n\nIn [9]: random_tensor\n\nOut[9]:\n1.0070 -0.6404  1.2707\n-0.7767  0.1075  0.4539\n-0.1782 -0.0091 -1.0463\n 0.4164 -1.1172 -0.2888\n[torch.FloatTensor of size 4x3]\n```", "```py\n*b = w1 * a\nc = w2 * a \nd = (w3 * b) + (w4 * c)\nL = f(d)*\n```"]