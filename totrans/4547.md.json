["```py\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom kerastuner.tuners import RandomSearch\n\ndef build_model(hp):\n    model = keras.Sequential()\n    model.add(layers.Dense(units=hp.Int('units',\n                                        min_value=32,\n                                        max_value=512,\n                                        step=32),\n                           activation='relu'))\n    model.add(layers.Dense(10, activation='softmax'))\n    model.compile(\n        optimizer=keras.optimizers.Adam(\n            hp.Choice('learning_rate',\n                      values=[1e-2, 1e-3, 1e-4])),\n        loss='sparse_categorical_crossentropy',\n        metrics=['accuracy'])\n    return model\n```", "```py\ntuner = RandomSearch(\n    build_model,\n    objective='val_accuracy',\n    max_trials=5,\n    executions_per_trial=3,\n    directory='my_dir',\n    project_name='helloworld')\n```", "```py\ntuner.search(x, y,\n             epochs=5,\n             validation_data=(val_x, val_y))\n```", "```py\n# Best model(s)\nmodels = tuner.get_best_models(num_models=2)\n\n# Summary of results\ntuner.results_summary()\n```", "```py\nimport autokeras as ak\n\nclf = ak.ImageClassifier()\nclf.fit(x_train, y_train)\nresults = clf.predict(x_test)\n```", "```py\nautoml_gs titanic.csv Survived\n```", "```py\nfrom automl_gs import automl_grid_search\nautoml_grid_search('titanic.csv', 'Survived')\n```"]