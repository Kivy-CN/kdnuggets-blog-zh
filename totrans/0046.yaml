- en: 3 Crucial Challenges in Conversational AI Development and How to Avoid Them
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/3-crucial-challenges-in-conversational-ai-development-and-how-to-avoid-them](https://www.kdnuggets.com/3-crucial-challenges-in-conversational-ai-development-and-how-to-avoid-them)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/b19209ac90f0bb6c7a52366d0e1df830.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by [Freepik](https://www.freepik.com/free-vector/hand-drawn-flat-design-npl-illustration_22379569.htm#query=Conversational%20AI&position=8&from_view=search&track=ais&uuid=d808c694-ede6-4be4-b65b-f42080e496fc)
  prefs: []
  type: TYPE_NORMAL
- en: Conversational AI refers to virtual agents and chatbots that mimic human interactions
    and can engage human beings in conversation. Using conversational AI is fast becoming
    a way of life - from asking Alexa to “*find the nearest restaurant”* to asking
    Siri to “*create a reminder,”* virtual assistants and chatbots are often used
    to answer consumers’ questions, resolve complaints, make reservations, and much
    more.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Developing these virtual assistants requires substantial effort. However, understanding
    and addressing the key challenges can streamline the development process. I have
    used my first-hand experience in creating a mature chatbot for a recruitment platform
    as a reference point to explain key challenges and their corresponding solutions.
  prefs: []
  type: TYPE_NORMAL
- en: To build a conversational AI chatbot, developers can use frameworks like RASA,
    Amazon’s Lex, or Google’s Dialogflow to build chatbots. Most prefer RASA when
    they plan custom changes or the bot is in the mature stage as it is an open-source
    framework. Other frameworks are also suitable as a starting point.
  prefs: []
  type: TYPE_NORMAL
- en: The challenges can be classified as three major components of a chatbot.
  prefs: []
  type: TYPE_NORMAL
- en: '**Natural Language Understanding (NLU)** is the ability of a bot to comprehend
    human dialogue. It performs intent classification, entity extraction, and retrieving
    responses.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dialogue Manager** is responsible for a set of actions to be performed based
    on the current and previous set of user inputs. It takes intent and entities as
    input (as part of the previous conversation) and identifies the next response.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Natural Language Generation (NLG)** is the process of generating written
    or spoken sentences from given data. It frames the response, which is then presented
    to the user.'
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/5a66517deff8242279377ebc0a4c4392.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from Talentica Software
  prefs: []
  type: TYPE_NORMAL
- en: Challenges in Natural Language Understanding
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Insufficient data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When developers replace FAQs or other support systems with a chatbot, they get
    a decent amount of training data. But the same doesn’t happen when they create
    the bot from scratch. In such cases, developers generate training data synthetically.
  prefs: []
  type: TYPE_NORMAL
- en: What to do?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A template-based data generator can generate a decent amount of user queries
    for training. Once the chatbot is ready, project owners can expose it to a limited
    number of users to enhance training data and upgrade it over a period.
  prefs: []
  type: TYPE_NORMAL
- en: Unfitting model selection
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Appropriate model selection and training data are crucial to get the best intent
    and entity extraction results. Developers usually train chatbots in a specific
    language and domain, and most of the available pre-trained models are often domain-specific
    and trained in a single language.
  prefs: []
  type: TYPE_NORMAL
- en: There can be cases of mixed languages as well where people are polyglot. They
    might enter queries in a mixed language. For instance, in a French-dominated region,
    people may use a type of English that is a mix of both French and English.
  prefs: []
  type: TYPE_NORMAL
- en: What to do?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Using models trained in multiple languages could reduce the problem. A pre-trained
    model like LaBSE (Language-agnostic Bert sentence embedding) can be helpful in
    such cases. LaBSE is trained in more than 109 languages on a sentence similarity
    task. The model already knows similar words in a different language. In our project,
    it worked really well.
  prefs: []
  type: TYPE_NORMAL
- en: Improper entity extraction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Chatbots require entities to identify what kind of data the user is searching.
    These entities include time, place, person, item, date, etc. However, bots can
    fail to identify an entity from natural language:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Same context but different entities*. For instance, bots can confuse a place
    as an entity when a user types “Name of students from IIT Delhi” and then “Name
    of students from Bengaluru.”'
  prefs: []
  type: TYPE_NORMAL
- en: '*Scenarios where the entities are mispredicted with low confidence.* For example,
    a bot can identify IIT Delhi as a city with low confidence.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Partial entity extraction by machine learning model.* If a user types “students
    from IIT Delhi,” the model can only identify “IIT” only as an entity instead of
    “IIT Delhi.”'
  prefs: []
  type: TYPE_NORMAL
- en: '*Single-word inputs having no context can confuse the machine learning models.*
    For example, a word like “Rishikesh” can mean both the name of a person as well
    as a city.'
  prefs: []
  type: TYPE_NORMAL
- en: What to do?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Adding more training examples could be a solution. But there is a limit after
    which adding more would not help. Moreover, it’s an endless process. Another solution
    could be to define regex patterns using pre-defined words to help extract entities
    with a known set of possible values, like city, country, etc.
  prefs: []
  type: TYPE_NORMAL
- en: Models share lower confidence whenever they are not sure about entity prediction.
    Developers can use this as a trigger to call a custom component that can rectify
    the low-confident entity. Let’s consider the above example. If *IIT Delhi* is
    predicted as a city with low confidence, then the user can always search for it
    in the database. After failing to find the predicted entity in the *City* table,
    the model would proceed to other tables and, eventually, find it in the *Institute*
    table, resulting in entity correction.
  prefs: []
  type: TYPE_NORMAL
- en: Wrong intent classification
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Every user message has some intent associated with it. Since intents derive
    the next course of actions of a bot, correctly classifying user queries with intent
    is crucial. However, developers must identify intents with minimal confusion across
    intents. Otherwise, there can be cases bugged by confusion. For example, “*Show
    me open positions”* vs. “*Show me open position candidates”.*
  prefs: []
  type: TYPE_NORMAL
- en: What to do?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There are two ways to differentiate confusing queries. Firstly, a developer
    can introduce sub-intent. Secondly, models can handle queries based on entities
    identified.
  prefs: []
  type: TYPE_NORMAL
- en: A domain-specific chatbot should be a closed system where it should clearly
    identify what it is capable of and what it is not. Developers must do the development
    in phases while planning for domain-specific chatbots. In each phase, they can
    identify the chatbot’s unsupported features (via unsupported intent).
  prefs: []
  type: TYPE_NORMAL
- en: They can also identify what the chatbot cannot handle in “out of scope” intent.
    But there could be cases where the bot is confused w.r.t unsupported and out-of-scope
    intent. For such scenarios, a fallback mechanism should be in place where, if
    the intent confidence is below a threshold, the model can work gracefully with
    a fallback intent to handle confusion cases.
  prefs: []
  type: TYPE_NORMAL
- en: Challenges with Dialogue Management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once the bot identifies the intent of a user’s message, it must send a response
    back. Bot decides the response based on a certain set of defined rules and stories.
    For example, a rule can be as simple as utter *“good morning”* when the user greets
    *“Hi”.* However, most often, conversations with chatbots comprise follow-up interaction,
    and their responses depend on the overall context of the conversation.
  prefs: []
  type: TYPE_NORMAL
- en: What to do?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To handle this, chatbots are fed with real conversation examples called Stories.
    However, users don’t always interact as intended. A mature chatbot should handle
    all such deviations gracefully. Designers and developers can guarantee this if
    they don’t just focus on a happy path while writing stories but also work on unhappy
    paths.
  prefs: []
  type: TYPE_NORMAL
- en: Challenges in Natural Language Generation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: User engagement with chatbots rely heavily on the chatbot responses. Users might
    lose interest if the responses are too robotic or too familiar. For instance,
    a user may not like an answer like “You have typed a wrong query” for a wrong
    input even though the response is correct. The answer here doesn’t match the persona
    of an assistant.
  prefs: []
  type: TYPE_NORMAL
- en: What to do?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The chatbot serves as an assistant and should possess a specific persona and
    tone of voice. They should be welcoming and humble, and developers should design
    conversations and utterances accordingly. The responses should not sound robotic
    or mechanical. For instance, the bot could say, “*Sorry, it seems like I don’t
    have any details. Could you please re-type your query?”* to address a wrong input.
  prefs: []
  type: TYPE_NORMAL
- en: Adding LLMs to a Chatbot System
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: LLM (Large Language Model) based chatbots like ChatGPT and Bard are game-changing
    innovations and have improved the capabilities of conversational AIs. They are
    not only good at making open-ended human-like conversations but can perform different
    tasks like text summarization, paragraph writing, etc., which could be earlier
    achieved only by specific models.
  prefs: []
  type: TYPE_NORMAL
- en: One of the challenges with traditional chatbot systems is categorizing each
    sentence into intents and deciding the response accordingly. This approach is
    not practical. Responses like “Sorry, I couldn’t get you” are often irritating.
    Intentless chatbot systems are the way forward, and LLMs can make this a reality.
  prefs: []
  type: TYPE_NORMAL
- en: LLMs can easily achieve state-of-the-art results in general named entity recognition
    barring certain domain-specific entity recognition. A mixed approach to using
    LLMs with any chatbot framework can inspire a more mature and robust chatbot system.
  prefs: []
  type: TYPE_NORMAL
- en: With the latest advancements and continuous research in conversational AI, chatbots
    are getting better every day. Areas like handling complex tasks with multiple
    intents, such as “Book a flight to Mumbai and arrange for a cab to Dadar,” are
    getting much attention.
  prefs: []
  type: TYPE_NORMAL
- en: Soon personalized conversations will take place based on the characteristics
    of the user to keep the user engaged. For example, if a bot finds the user is
    unhappy, it redirects the conversation to a real agent. Additionally, with ever-increasing
    chatbot data, deep learning techniques like ChatGPT can automatically generate
    responses for queries using a knowledge base.
  prefs: []
  type: TYPE_NORMAL
- en: '**[](https://www.linkedin.com/in/suman-saurav-ssd/)**[Suman Saurav](https://www.linkedin.com/in/suman-saurav-ssd/)****
    is a Data Scientist at Talentica Software, a software product development company.
    He is an alumnus of NIT Agartala with over 8 years of experience designing and
    implementing revolutionary AI solutions using NLP, Conversational AI, and Generative
    AI.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[5 Common Python Gotchas (And How To Avoid Them)](https://www.kdnuggets.com/5-common-python-gotchas-and-how-to-avoid-them)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Common Data Science Mistakes and How to Avoid Them](https://www.kdnuggets.com/5-common-data-science-mistakes-and-how-to-avoid-them)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Big Data Analytics: Why Is It So Crucial For Business Intelligence?](https://www.kdnuggets.com/2023/06/big-data-analytics-crucial-business-intelligence.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Crucial Steps to Develop an Effective Coding Routine](https://www.kdnuggets.com/2023/08/5-crucial-steps-develop-effective-coding-routine.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[LangChain + Streamlit + Llama: Bringing Conversational AI to Your…](https://www.kdnuggets.com/2023/08/langchain-streamlit-llama-bringing-conversational-ai-local-machine.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Open Assistant: Explore the Possibilities of Open and Collaborative…](https://www.kdnuggets.com/2023/04/open-assistant-explore-possibilities-open-collaborative-chatbot-development.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
