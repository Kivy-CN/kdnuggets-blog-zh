["```py\nimport pandas as pddf = pd.read_csv(‘heart.csv’)df.head()\n```", "```py\nX = df.drop([‘target’],axis=1)\ny = df[‘target’]\n```", "```py\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y,random_state=0)\n```", "```py\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import RepeatedStratifiedKFold\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.feature_selection import RFE\nimport numpy as np\nfrom sklearn.ensemble import GradientBoostingClassifier\n```", "```py\nrfe = RFE(estimator=GradientBoostingClassifier(), n_features_to_select=6)\n```", "```py\nmodel = GradientBoostingClassifier()\n```", "```py\npipe = Pipeline([(‘Feature Selection’, rfe), (‘Model’, model)])\ncv = RepeatedStratifiedKFold(n_splits=10, n_repeats=5, random_state=36851234)\nn_scores = cross_val_score(pipe, X_train, y_train, scoring=’accuracy’, cv=cv, n_jobs=-1)\nnp.mean(n_scores)\n```", "```py\npipe.fit(X_train, y_train)\n```", "```py\nrfe.support_\narray([ True, False,  True, False,  True, False, False,  True, False,True, False,  True,  True])\n```", "```py\npd.DataFrame(rfe.support_,index=X.columns,columns=[‘Rank’])\n```", "```py\nrf_df = pd.DataFrame(rfe.ranking_,index=X.columns,columns=[‘Rank’]).sort_values(by=’Rank’,ascending=True)rf_df.head()\n```", "```py\nfrom sklearn.feature_selection import RFECVrfecv = RFECV(estimator=GradientBoostingClassifier())\n```", "```py\npipeline = Pipeline([(‘Feature Selection’, rfecv), (‘Model’, model)])\ncv = RepeatedStratifiedKFold(n_splits=10, n_repeats=5, random_state=36851234)\nn_scores = cross_val_score(pipeline, X_train, y_train, scoring=’accuracy’, cv=cv, n_jobs=-1)\nnp.mean(n_scores)\n```", "```py\npipeline.fit(X_train,y_train)\n```", "```py\nprint(“Optimal number of features : %d” % rfecv.n_features_)Optimal number of features : 7\n```", "```py\nrfecv.support_rfecv_df = pd.DataFrame(rfecv.ranking_,index=X.columns,columns=[‘Rank’]).sort_values(by=’Rank’,ascending=True)\nrfecv_df.head()\n```", "```py\nimport matplotlib.pyplot as plt\nplt.figure(figsize=(12,6))\nplt.xlabel(“Number of features selected”)\nplt.ylabel(“Cross validation score (nb of correct classifications)”)\nplt.plot(range(1, len(rfecv.grid_scores_) + 1), rfecv.grid_scores_)\nplt.show()\n```"]