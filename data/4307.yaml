- en: Beautiful decision tree visualizations with dtreeviz
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用dtreeviz创建美丽的决策树可视化
- en: 原文：[https://www.kdnuggets.com/2021/03/beautiful-decision-tree-visualizations-dtreeviz.html](https://www.kdnuggets.com/2021/03/beautiful-decision-tree-visualizations-dtreeviz.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/03/beautiful-decision-tree-visualizations-dtreeviz.html](https://www.kdnuggets.com/2021/03/beautiful-decision-tree-visualizations-dtreeviz.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Eryk Lewinson](https://www.linkedin.com/in/eryklewinson/), Senior Data
    Scientist**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由[埃里克·刘文森](https://www.linkedin.com/in/eryklewinson/)，高级数据科学家**'
- en: Decision trees are a very important class of machine learning models and they
    are also building blocks of many more advanced algorithms, such as Random Forest
    or the famous XGBoost. The trees are also a good starting point for a baseline
    model, which we subsequently try to improve upon with more complex algorithms.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 决策树是机器学习模型中非常重要的一类，它们也是许多更高级算法的构建模块，例如随机森林或著名的XGBoost。这些树也是基准模型的良好起点，我们随后尝试通过更复杂的算法来改进。
- en: One of the biggest advantages of the decision trees is their interpretability
    — after fitting the model, it is effectively a set of rules that can be used to
    predict the target variable. That is also why it is easy to plot the rules and
    show them to stakeholders, so they can easily understand the model’s underlying
    logic. Of course, provided that the tree is not too deep.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 决策树最大的优点之一是它们的可解释性——在拟合模型后，它实际上是一组可以用来预测目标变量的规则。这也是为什么可以轻松绘制规则并向利益相关者展示它们，以便他们能轻松理解模型的基本逻辑。当然，前提是树不太深。
- en: Visualizing the decision trees can be really simple using a combination of `scikit-learn` and `matplotlib`.
    However, there is a nice library called `dtreeviz`, which brings much more to
    the table and creates visualizations that are not only prettier but also convey
    more information about the decision process.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`scikit-learn`和`matplotlib`的组合可以非常简单地可视化决策树。然而，还有一个很棒的库叫做`dtreeviz`，它提供了更多功能，创建的可视化不仅更美观，还能传达更多有关决策过程的信息。
- en: In this article, I will first show the “old way” of plotting the decision trees
    and then introduce the improved approach using `dtreeviz`.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我将首先展示“旧方式”绘制决策树，然后介绍使用`dtreeviz`的改进方法。
- en: Setup
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置
- en: As always, we need to start by importing the required libraries.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 一如既往，我们需要首先导入所需的库。
- en: Then, we load the Iris data set from `scikit-learn`. We will also go over a
    regression example, but we will load the Boston housing data set for this later
    on.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们从`scikit-learn`加载Iris数据集。我们还会讨论一个回归示例，但稍后我们会加载波士顿住房数据集。
- en: The “old way”
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: “旧方式”
- en: The next step involves creating the training/test sets and fitting the decision
    tree classifier to the Iris data set. In this article, we focus purely on visualizing
    the decision trees. Thus, we do not pay any attention to fitting the model or
    finding a good set of hyperparameters (there are a lot of articles on these topics).
    The only thing that we will “tune” is the maximum depth of the tree — we constraint
    it to 3, so the trees can still fit in the image and remain readable.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是创建训练/测试集，并将决策树分类器拟合到Iris数据集上。在本文中，我们纯粹关注于决策树的可视化。因此，我们不会关注模型拟合或寻找合适的超参数（这些主题有很多文章）。我们将“调整”的唯一内容是树的最大深度——我们将其限制为3，以便树可以适应图像并保持可读。
- en: Now that we have a fitted decision tree model and we can proceed to visualize
    the tree. We start with the easiest approach — using the `plot_tree` function
    from `scikit-learn`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经有了一个拟合的决策树模型，可以继续可视化这棵树。我们从最简单的方法开始——使用`scikit-learn`中的`plot_tree`函数。
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![Image for post](../Images/c628a204d662b003dad0f3a2e9047064.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![文章图片](../Images/c628a204d662b003dad0f3a2e9047064.png)'
- en: '*Image by author*'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*图片由作者提供*'
- en: OK, not bad for a one-liner. But it is not very readable, for example, there
    are no feature names (only their column indices) or class labels. We can easily
    improve that by running the following snippet.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，对于一行代码来说还不错。但它不是很易读，例如，没有特征名称（只有它们的列索引）或类别标签。我们可以通过运行以下代码轻松改进这一点。
- en: '![Image for post](../Images/88cd8dfcea8e9720056788398375f35c.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![文章图片](../Images/88cd8dfcea8e9720056788398375f35c.png)'
- en: '*Image by author*'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '*图片由作者提供*'
- en: Much better! Now, we can quite easily interpret the decision tree. It is also
    possible to use the `graphviz` library for visualizing the decision trees, however,
    the outcome is very similar, with the same set of elements as the graph above.
    That is why we will skip it here, but you can find the implementation in the [Notebook
    on GitHub](https://github.com/erykml/medium_articles/blob/master/Machine%20Learning/decision_tree_visualization.ipynb).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 好多了！现在，我们可以相对容易地解读决策树。也可以使用`graphviz`库来可视化决策树，不过，结果非常相似，包含与上图相同的元素。因此，我们在这里跳过这部分，但你可以在[GitHub
    上的 Notebook](https://github.com/erykml/medium_articles/blob/master/Machine%20Learning/decision_tree_visualization.ipynb)中找到实现。
- en: dtreeviz in action
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: dtreeviz 的实际应用
- en: Having seen the old way of plotting the decision trees, let’s jump right into
    the `dtreeviz` approach.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 既然已经看到旧的决策树绘制方法，现在让我们直接进入`dtreeviz`的方法。
- en: The code snippet is pretty much self-explanatory, so we can move on to the outcome.
    First of all, let’s take a moment to acknowledge how big of an improvement it
    is, especially given that the function call is very similar.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 代码片段几乎可以自我解释，因此我们可以继续讨论结果。首先，让我们花一点时间来承认这是一项多么巨大的改进，尤其是考虑到函数调用非常相似。
- en: '![Image for post](../Images/b940a631153481dff76d4419bc69303c.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图片](../Images/b940a631153481dff76d4419bc69303c.png)'
- en: '*Image by author*'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '*作者提供的图片*'
- en: Let’s go over the plot step by step. At each node, we can see a stacked histogram
    of the feature that is used for splitting the observations, colored by class.
    This way, we can see how the classes are segregated by each split. The small triangle
    with the value at the x-axis is the splitting point. In the first histogram, we
    can clearly see that all observations of the *setosa* class have petal length
    smaller than 2.45 cm.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐步查看这个图表。在每个节点，我们可以看到用于分裂观察结果的特征的堆叠直方图，以类别颜色标记。这样，我们可以看到各个类别是如何通过每次分裂进行分隔的。x
    轴上的值和小三角形是分裂点。在第一个直方图中，我们可以清楚地看到所有*setosa*类别的观察数据的花瓣长度小于 2.45 cm。
- en: The right branches of the tree indicate selecting the values larger or equal
    to the splitting value, while the left one lesser than the splitting value. The
    leaf nodes are represented as pie charts, which show what fraction of the observations
    within the leaf belongs to which class. This way, we easily see which class is
    the majority one, so also the model’s prediction.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 树的右侧分支表示选择大于或等于分裂值的值，而左侧分支则表示小于分裂值的值。叶节点用饼图表示，显示叶节点内观察结果属于哪个类别的比例。这样，我们可以轻松看出哪个类别是多数，从而也能了解模型的预测。
- en: One thing we do not see at this plot is the value of the Gini coefficient at
    each node. In my opinion, the histogram provides more intuition about the split
    and the value of the coefficient might not be that relevant in case of a presentation
    for the stakeholders either way.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个图表中，我们没有看到每个节点的基尼系数值。在我看来，直方图提供了更多关于分裂的直观信息，而系数的值在向利益相关者展示时可能也并不是那么重要。
- en: '**Note:** We can also create a similar visualization for the test set, we just
    need to replace the `x_data` and `y_data` arguments while calling the function.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：**我们还可以为测试集创建类似的可视化，只需在调用函数时替换`x_data`和`y_data`参数即可。'
- en: If you are not a fan of the histograms and want to simplify the plot, you can
    specify `fancy=False` to receive the following simplified plot.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不喜欢直方图并且想简化图表，可以指定`fancy=False`来获得以下简化的图表。
- en: '![Image for post](../Images/4a0c17d474a5532dda274b357497050a.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图片](../Images/4a0c17d474a5532dda274b357497050a.png)'
- en: '*Image by author*'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '*作者提供的图片*'
- en: Another handy feature of `dtreeviz` which improves the model’s interpretability
    is path highlighting of a particular observation on the plot. This way, we clearly
    see which features contributed to the class prediction.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`dtreeviz`的另一个有用功能是对图中的特定观察结果进行路径高亮显示，从而提高模型的可解释性。这样，我们可以清楚地看到哪些特征对类别预测有贡献。'
- en: Using the snippet below, we highlight the path of the first observation of the
    test set.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 使用下面的代码片段，我们高亮显示了测试集第一条观察数据的路径。
- en: The plot is very similar to the previous one, however, the orange highlight
    clearly shows which path the observation followed. Additionally, we can see the
    orange triangle at each of the histograms. It represents the indicated observation’s
    value of the given feature. At the very end, we see the values of all the features
    of this observation, with the ones used for decision highlighted in orange. In
    this case, only two features were used for predicting that the observation belongs
    to the *versicolor* class.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 该图与之前的非常相似，但橙色高亮清楚地显示了观察值遵循的路径。此外，我们可以在每个直方图中看到橙色三角形。它代表了所示观察值的特征值。在最后，我们看到该观察值的所有特征值，其中用于决策的特征用橙色突出显示。在这种情况下，只有两个特征被用来预测该观察值属于*versicolor*类别。
- en: '![Image for post](../Images/b1f5afb934a51c111e0d8d14a5d9e5d4.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图片](../Images/b1f5afb934a51c111e0d8d14a5d9e5d4.png)'
- en: '*Image by author*'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '*图片由作者提供*'
- en: '**Tip:** We can also change the orientation of the plots from top-to-bottom
    to left-to-right by setting `orientation=”LR”`. We do not show it in this article,
    as the charts will not be scaled that nicely for devices with a narrower screen.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示：** 我们还可以通过设置`orientation=”LR”`将图表的方向从自上而下更改为自左而右。由于图表在较窄屏幕的设备上显示效果不佳，因此本文未展示此选项。'
- en: Lastly, we can print the decisions used for this observation’s prediction in
    plain English. To do so, we run the following command.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以用简单的英语打印出用于该观察值预测的决策。为此，我们运行以下命令。
- en: This way, we can clearly see the conditions that this observation fulfills.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，我们可以清楚地看到该观察值满足的条件。
- en: Regression example
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 回归示例
- en: We have already covered a classification example, which showed most of the interesting
    functionalities of the library. But for completeness’ sake, we also go over an
    example of a regression problem, to show how the plots differ. We use another
    popular data set — the Boston housing one. It’s a problem in which we use a set
    of different areas to predict the median housing price within certain areas of
    Boston.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经介绍了一个分类示例，这展示了库的大多数有趣功能。但为了完整性，我们还讨论了回归问题的示例，以展示图表的不同。我们使用了另一个流行的数据集——波士顿住房数据集。这是一个问题，其中我们使用一组不同的区域来预测波士顿某些区域的中位数房价。
- en: The code already feels similar. The only change is that we added `show_node_labels
    = True`. It can be especially handy for larger decision trees. So while discussing
    the plot with a group, it is very easy to indicate which split we are discussing
    by the node’s number.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 代码已经相似。唯一的变化是我们添加了`show_node_labels = True`。这对于较大的决策树特别有用。因此，在与小组讨论图表时，很容易通过节点编号来指示我们讨论的分割。
- en: '![Image for post](../Images/f0f3638ad84bae7580c236826eff4e17.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图片](../Images/f0f3638ad84bae7580c236826eff4e17.png)'
- en: '*Image by author*'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '*图片由作者提供*'
- en: 'Let’s dive into the differences between classification trees and regression
    ones. This time, instead of looking at histograms, we inspect scatterplots of
    the feature used for the split vs. the target. On those scatterplots, we see some
    dashed lines. Their interpretation is as follows:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入探讨分类树和回归树之间的差异。这一次，我们不看直方图，而是检查用于分割的特征与目标的散点图。在这些散点图上，我们看到了一些虚线。它们的解释如下：
- en: horizontal lines are the target’s mean for the left and right buckets in decision
    nodes.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 水平线是决策节点中左侧和右侧桶的目标均值。
- en: vertical lines are the split point. It is the very same information as represented
    by the black triangle, however, it makes comparing the horizontal lines easier
    -> easy separation between the sides.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 垂直线是分割点。这与黑色三角形表示的信息完全相同，但它使得比较水平线更容易 -> 便于分隔两侧。
- en: In the leaf nodes, the dashed line shows the mean of the target within the leaf,
    which is also the model’s prediction.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在叶子节点中，虚线表示叶子中的目标均值，这也是模型的预测。
- en: We already showed that we can highlight the decision path for a certain observation.
    We can take it a step further and only plot the nodes used for that prediction.
    We do so by specifying `show_just_path=True`. The following plot shows only the
    selected nodes from the tree above.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经展示了如何突出显示某个观察值的决策路径。我们可以更进一步，只绘制用于该预测的节点。我们通过指定`show_just_path=True`来实现这一点。以下图只显示了上面树中的选定节点。
- en: '![Image for post](../Images/787192a49f95ad9c45d9c20bedc5ab6d.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![帖子图片](../Images/787192a49f95ad9c45d9c20bedc5ab6d.png)'
- en: '*Image by author*'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '*图片由作者提供*'
- en: Conclusions
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论
- en: In this article, I showed how to use the `dtreeviz` library for creating elegant
    and insightful visualizations of decision trees. Having played around with it
    for a bit, I will definitely keep on using it as the go-to tool for visualizing
    decision trees. I do believe that the plots created using this library are much
    easier to understand for people who do not work with ML on a daily basis and can
    help in conveying the model’s logic to the stakeholders.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我展示了如何使用`dtreeviz`库来创建优雅且富有洞察力的决策树可视化。经过一段时间的使用，我将继续把它作为可视化决策树的首选工具。我确实相信，使用这个库创建的图表对于那些不日常从事机器学习的人来说更容易理解，并且有助于向利益相关者传达模型的逻辑。
- en: It is also worth mentioning that `dtreeviz` supports some visualizations for
    XGBoost and Spark MLlib trees.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 还值得一提的是，`dtreeviz`支持一些XGBoost和Spark MLlib树的可视化。
- en: You can find the code used for this article on my [GitHub](https://github.com/erykml/medium_articles/blob/master/Machine%20Learning/decision_tree_visualization.ipynb).
    As always, any constructive feedback is welcome. You can reach out to me on [Twitter](https://twitter.com/erykml1?source=post_page---------------------------) or
    in the comments.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在我的[GitHub](https://github.com/erykml/medium_articles/blob/master/Machine%20Learning/decision_tree_visualization.ipynb)上找到这篇文章中使用的代码。像往常一样，欢迎任何建设性的反馈。你可以在[Twitter](https://twitter.com/erykml1?source=post_page---------------------------)上或在评论中联系我。
- en: 'If you liked this article, you might also be interested in one of the following:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢这篇文章，你也许会对以下内容感兴趣：
- en: '[**Improve the train-test split with the hashing function**](https://towardsdatascience.com/improve-the-train-test-split-with-the-hashing-function-f38f32b721fb)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[**利用哈希函数改进训练-测试分割**](https://towardsdatascience.com/improve-the-train-test-split-with-the-hashing-function-f38f32b721fb)'
- en: The best way to make sure the training and test sets are never mixed while updating
    the data set
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在更新数据集时训练集和测试集从未混合的最佳方法
- en: '[**Lazy Predict: fit and evaluate all the models from scikit-learn with a single
    line of code**](https://towardsdatascience.com/lazy-predict-fit-and-evaluate-all-the-models-from-scikit-learn-with-a-single-line-of-code-7fe510c7281)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[**Lazy Predict：用一行代码拟合和评估scikit-learn中的所有模型**](https://towardsdatascience.com/lazy-predict-fit-and-evaluate-all-the-models-from-scikit-learn-with-a-single-line-of-code-7fe510c7281)'
- en: The easiest way to see which models work best for your dataset!
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的方法来查看哪些模型最适合你的数据集！
- en: '[**Explaining Feature Importance by example of a Random Forest**](https://towardsdatascience.com/explaining-feature-importance-by-example-of-a-random-forest-d9166011959e)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[**通过随机森林示例解释特征重要性**](https://towardsdatascience.com/explaining-feature-importance-by-example-of-a-random-forest-d9166011959e)'
- en: Learn the most popular methods of determining feature importance in Python
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 学习在Python中确定特征重要性的最流行方法
- en: '**References**'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**参考文献**'
- en: '[https://github.com/parrt/dtreeviz](https://github.com/parrt/dtreeviz)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/parrt/dtreeviz](https://github.com/parrt/dtreeviz)'
- en: '[https://explained.ai/decision-tree-viz/index.html](https://explained.ai/decision-tree-viz/index.html#sec:1.5.1)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://explained.ai/decision-tree-viz/index.html](https://explained.ai/decision-tree-viz/index.html#sec:1.5.1)'
- en: '**Bio: [Eryk Lewinson](https://www.linkedin.com/in/eryklewinson/)** is currently
    working as a senior data scientist in the Netherlands'' biggest e-commerce platform.
    In his professional career, he gained experience in the practical application
    of data science methods while working for two Big 4 companies and a Dutch FinTech
    scale-up. In his work, he focuses on using machine learning to provide business
    value to his company.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**个人简介：[Eryk Lewinson](https://www.linkedin.com/in/eryklewinson/)** 目前在荷兰最大的电子商务平台担任高级数据科学家。在他的职业生涯中，他在为两家四大会计师事务所和一家荷兰金融科技初创公司工作时获得了数据科学方法的实际应用经验。在工作中，他专注于使用机器学习为公司提供商业价值。'
- en: '[Original](https://towardsdatascience.com/beautiful-decision-tree-visualizations-with-dtreeviz-af1a66c1c180).
    Reposted with permission.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[原始文章](https://towardsdatascience.com/beautiful-decision-tree-visualizations-with-dtreeviz-af1a66c1c180)。经许可转载。'
- en: '**Related:**'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[All Machine Learning Algorithms You Should Know in 2021](/2021/01/machine-learning-algorithms-2021.html)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2021年你应该知道的所有机器学习算法](/2021/01/machine-learning-algorithms-2021.html)'
- en: '[11 Essential Code Blocks for Complete EDA (Exploratory Data Analysis)](/2021/03/11-essential-code-blocks-exploratory-data-analysis.html)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[11个完整EDA（探索性数据分析）的必要代码块](/2021/03/11-essential-code-blocks-exploratory-data-analysis.html)'
- en: '[Telling a Great Data Story: A Visualization Decision Tree](/2021/02/telling-great-data-story-visualization-decision-tree.html)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[讲述精彩的数据故事：可视化决策树](/2021/02/telling-great-data-story-visualization-decision-tree.html)'
- en: '* * *'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前 3 个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT 工作'
- en: '* * *'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 了解更多相关主题
- en: '[The Easiest Way to Make Beautiful Interactive Visualizations With Pandas](https://www.kdnuggets.com/2021/12/easiest-way-make-beautiful-interactive-visualizations-pandas.html)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 Pandas 制作美观互动可视化的最简单方法](https://www.kdnuggets.com/2021/12/easiest-way-make-beautiful-interactive-visualizations-pandas.html)'
- en: '[Simplifying Decision Tree Interpretability with Python & Scikit-learn](https://www.kdnuggets.com/2017/05/simplifying-decision-tree-interpretation-decision-rules-python.html)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通过 Python 和 Scikit-learn 简化决策树解释](https://www.kdnuggets.com/2017/05/simplifying-decision-tree-interpretation-decision-rules-python.html)'
- en: '[Decision Tree Algorithm, Explained](https://www.kdnuggets.com/2020/01/decision-tree-algorithm-explained.html)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[决策树算法解析](https://www.kdnuggets.com/2020/01/decision-tree-algorithm-explained.html)'
- en: '[Understanding by Implementing: Decision Tree](https://www.kdnuggets.com/2023/02/understanding-implementing-decision-tree.html)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通过实现理解：决策树](https://www.kdnuggets.com/2023/02/understanding-implementing-decision-tree.html)'
- en: '[Telling a Great Data Story: A Visualization Decision Tree](https://www.kdnuggets.com/2021/02/telling-great-data-story-visualization-decision-tree.html)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[讲述精彩数据故事：可视化决策树](https://www.kdnuggets.com/2021/02/telling-great-data-story-visualization-decision-tree.html)'
- en: '[Random Forest vs Decision Tree: Key Differences](https://www.kdnuggets.com/2022/02/random-forest-decision-tree-key-differences.html)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[随机森林与决策树：关键区别](https://www.kdnuggets.com/2022/02/random-forest-decision-tree-key-differences.html)'
