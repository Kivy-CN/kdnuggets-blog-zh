- en: 'Novice to Ninja: Why Your Python Skills Matter in Data Science'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从初学者到高手：为什么你的 Python 技能在数据科学中至关重要
- en: 原文：[https://www.kdnuggets.com/novice-to-ninja-why-your-python-skills-matter-in-data-science](https://www.kdnuggets.com/novice-to-ninja-why-your-python-skills-matter-in-data-science)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/novice-to-ninja-why-your-python-skills-matter-in-data-science](https://www.kdnuggets.com/novice-to-ninja-why-your-python-skills-matter-in-data-science)
- en: '![Novice to Ninja: Why Your Python Skills Matter in Data Science](../Images/a4cffc335f288d4f1586a1f59a275653.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![从初学者到高手：为什么你的 Python 技能在数据科学中至关重要](../Images/a4cffc335f288d4f1586a1f59a275653.png)'
- en: Image created by Author with DALL•E 3
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 由作者使用 DALL•E 3 创建的图像
- en: Introduction
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: We know that programming is a useful (essential?) skill for data scientists
    to possess. But what level of programming skill is necessary? Should a data scientist
    aim to be "good enough," or instead desire to become an expert level programmer?
    Should we aspire to be coding ninjas?
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道编程是数据科学家需要具备的有用（必要？）技能。但是需要什么程度的编程技能呢？数据科学家是否应该目标是“足够好”，还是应当期望成为高级程序员？我们是否应该追求成为编程高手？
- en: If we are going to explore this topic, we should first get an idea of what a
    beginner, intermediate, and expert level programmer look like $mdash; or at least
    what their *code* looks like.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们要探讨这个话题，我们应该首先了解初学者、中级和高级程序员的情况——或者至少了解他们的 *代码* 看起来如何。
- en: Below you will find 2 programming tasks, each with 3 code snippets; one each
    for potential beginner, intermediate, and expert level programmer approaches to
    completing that tasks, with some explanation as to the differences. This should
    give us a foundations on which to build a discussion about the importance of programming
    abilities.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面，你将找到 2 个编程任务，每个任务包括 3 个代码片段；分别展示了初学者、中级程序员和高级程序员完成这些任务的方法，并附有一些关于差异的解释。这将为我们讨论编程能力的重要性奠定基础。
- en: Remember, these are concocted approaches meant to imitate programming at these
    different levels. All the scripts are functional and get the job done, but they
    do so with varying degrees of elegance, efficiency, and Pythonic-ness.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这些都是为了模仿不同级别编程而构造的方法。所有的脚本都是功能性代码并能完成任务，但它们在优雅性、效率和 Python 规范性方面各有不同。
- en: 'Task: Find the Factorial of a Number'
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 任务：求一个数的阶乘
- en: Let's first take a task that is simple but can be approached in multiple ways,
    finding the factorial of a given number. Let's implement this task for hypothetical
    beginner, intermediate, and expert Python programmers, and compare differences
    in the code.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们考虑一个简单但可以用多种方式解决的任务：计算给定数的阶乘。我们将为假设中的初学者、中级和高级 Python 程序员实现这个任务，并比较代码中的差异。
- en: Beginner's Approach
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 初学者的方法
- en: A beginner may use a straightforward approach using a `for` loop to calculate
    the factorial. Here's how they might do it.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 初学者可能使用直接的方法，通过 `for` 循环来计算阶乘。以下是他们可能的做法。
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Intermediate's Approach
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 中级程序员的方法
- en: An intermediate programmer might use a function to improve code reuse and readability,
    and also use the `math` library for basic checks.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 中级程序员可能使用函数来提高代码的重用性和可读性，并且还会使用 `math` 库进行基本检查。
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Expert's Approach
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高级程序员的方法
- en: An expert programmer might use recursion and add type hints for better maintainability.
    They may also make use of Python's terse and expressive syntax.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 高级程序员可能会使用递归并添加类型提示以便于维护。他们还可能会利用 Python 的简洁且富有表现力的语法。
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Summary
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: Let's have a look at the differences in code and what stands out most between
    the levels of expertise.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看不同级别之间的代码差异以及最突出的特点。
- en: 'Beginner: Uses longer overall code, no use of functions or libraries, straightforward
    logic'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初学者：使用较长的整体代码，不使用函数或库，逻辑直接
- en: 'Intermediate: Uses a function for better structure, uses `math.prod` for calculating
    the product'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中级程序员：使用函数以改善结构，使用 `math.prod` 计算乘积
- en: 'Expert: Uses recursion for elegance, adds type hints, and uses Python''s conditional
    expression for conciseness'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级程序员：使用递归以保持优雅，添加类型提示，并使用 Python 的条件表达式以提高简洁性
- en: 'Task: Generate Fibonacci Numbers'
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 任务：生成斐波那契数
- en: For a second example, let's consider the task of finding the Fibonacci sequence
    up to *n* numbers. Here's how programmers at different levels might tackle this
    task.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 作为第二个例子，我们来考虑一个任务：找到前 *n* 个斐波那契数列。以下是不同级别的程序员可能如何解决这个任务。
- en: Beginner's Approach
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 初学者的方法
- en: A beginner might use a basic `for` loop and a list to collect the Fibonacci
    numbers.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 初学者可能使用基本的 `for` 循环和列表来收集斐波那契数。
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Intermediate's Approach
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 中级程序员的方法
- en: An intermediate programmer might use list comprehensions and the `zip` function
    for a more Pythonic approach.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 中级程序员可能会使用列表推导式和`zip`函数实现更具Python风格的处理。
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Expert's Approach
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 专家的方法
- en: An expert might use generators for a more memory-efficient approach, along with
    Python's unpacking feature to swap variables in a single line.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 专家可能会使用生成器实现更高效的内存管理，并利用Python的解包特性在一行中交换变量。
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Summary
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: Let's see what the major differences are and what major programmatic differences
    separate the expertise levels.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看主要的差异是什么，以及哪些编程差异将专业水平区分开来。
- en: 'Beginner: Uses basic control structures and lists, straightforward but a bit
    verbose'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初学者：使用基本控制结构和列表，简单但略显冗长
- en: 'Intermediate: Utilizes list comprehensions and `zip` for a more Pythonic and
    concise solution'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中级：利用列表推导式和`zip`实现更具Python风格和简洁的解决方案
- en: 'Expert: Employs a generator for a memory-efficient solution and uses unpacking
    for elegant variable swapping'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 专家：使用生成器实现内存高效的解决方案，并使用解包进行优雅的变量交换
- en: The Benefits of "Ninja" Coding
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: “忍者”编码的好处
- en: If all of the example code works and ultimately gets the job done, *why should
    we strive to become the best coders that we can be?* Great question!
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有示例代码都能正常工作并最终完成任务，*为什么我们还要努力成为最优秀的程序员？* 很好的问题！
- en: 'Becoming a proficient programmer is about more than just getting code to work.
    Here are some reasons why striving to be a better coder is beneficial:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 成为熟练的程序员不仅仅是让代码工作。以下是为什么努力成为更好的程序员是有益的几个原因：
- en: 1\. Efficiency
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 效率
- en: 'Time: Writing more efficient code means tasks are completed faster, which is
    beneficial both for the programmer and for anyone using the software'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间：编写更高效的代码意味着任务完成得更快，这对程序员和使用软件的任何人都是有益的
- en: 'Resource Utilization: Efficient code uses less CPU and memory, which can be
    crucial for applications running on limited resources or at a large scale'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源利用：高效的代码使用更少的CPU和内存，这对在有限资源或大规模运行的应用程序至关重要
- en: 2\. Readability and Maintainability
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 可读性和可维护性
- en: 'Collaboration: Code is often written and maintained by teams. Clean, well-structured,
    and well-commented code is much easier for others to understand and collaborate
    on'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合作：代码通常由团队编写和维护。干净、结构良好且注释充分的代码更容易让其他人理解和合作
- en: 'Longevity: As projects grow or evolve, maintainable code is easier to extend,
    debug, and refactor, saving time and effort in the long run'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 长期性：随着项目的发展或演变，可维护的代码更容易扩展、调试和重构，从长远来看节省时间和精力
- en: 3\. Reusability
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 可重用性
- en: 'Modularity: Writing functions or modules that solve a problem well means that
    you can easily reuse that code in other projects or contexts'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块化：编写解决问题效果好的函数或模块意味着你可以轻松地在其他项目或上下文中重用这些代码
- en: 'Community Contributions: High-quality code can be open-sourced and benefit
    a wider community of developers'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 社区贡献：高质量的代码可以开源，并惠及更广泛的开发者社区
- en: 4\. Robustness and Reliability
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 稳健性和可靠性
- en: 'Error Handling: Advanced programmers often write code that can not only solve
    problems but also handle errors gracefully, making the software more reliable'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误处理：高级程序员通常编写不仅能解决问题而且能优雅地处理错误的代码，使软件更加可靠
- en: 'Testing: Understanding how to write testable code and actual tests ensures
    that the code works as expected in various scenarios'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试：了解如何编写可测试的代码和实际的测试，确保代码在各种场景中按预期工作
- en: 5\. Skill Recognition
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. 技能认可
- en: 'Career Advancement: Being recognized as a skilled coder can lead to promotions,
    job opportunities, and higher pay'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 职业发展：被认定为熟练的程序员可以带来晋升、工作机会和更高的薪水
- en: 'Personal Satisfaction: There''s a sense of accomplishment and pride in knowing
    that you''re capable of writing high-quality code'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 个人满足感：知道自己能够编写高质量代码带来成就感和自豪感
- en: 6\. Adaptability
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6\. 适应性
- en: 'New Technologies: Strong foundational skills make it easier to adapt to new
    languages, libraries, or paradigms'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新技术：扎实的基础技能使得适应新语言、库或范式变得更加容易
- en: 'Problem-Solving: A deeper understanding of programming concepts enhances your
    ability to approach problems creatively and effectively'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题解决：对编程概念的深入理解增强了你创造性和有效性地解决问题的能力
- en: 7\. Cost-Effectiveness
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 7\. 成本效益
- en: 'Less Debugging: Well-written code is often less prone to bugs, reducing the
    amount of time and resources spent on debugging'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 较少的调试：编写良好的代码通常更不容易出错，从而减少调试所花费的时间和资源
- en: 'Scalability: Good code can be more easily scaled up or down, making it more
    cost-effective in the long run'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可扩展性：优秀的代码可以更容易地扩展或缩减，从长远来看更具成本效益
- en: So, while getting the job done is certainly important, how you get it done can
    have wide-ranging implications for your personal development, your team, and your
    organization. We should all strive to become the best programmers that we can
    be, and that goes for data scientists as well.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，尽管完成工作确实很重要，但完成工作的方式可以对个人发展、团队和组织产生广泛的影响。我们都应该努力成为最好的程序员，这同样适用于数据科学家。
- en: '[](https://www.linkedin.com/in/mattmayo13/)****[Matthew Mayo](https://www.kdnuggets.com/wp-content/uploads/./profile-pic.jpg)****
    ([**@mattmayo13**](https://twitter.com/mattmayo13)) holds a master''s degree in
    computer science and a graduate diploma in data mining. As managing editor of
    [KDnuggets](https://www.kdnuggets.com/) & [Statology](https://www.statology.org/),
    and contributing editor at [Machine Learning Mastery](https://machinelearningmastery.com/),
    Matthew aims to make complex data science concepts accessible. His professional
    interests include natural language processing, language models, machine learning
    algorithms, and exploring emerging AI. He is driven by a mission to democratize
    knowledge in the data science community. Matthew has been coding since he was
    6 years old.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://www.linkedin.com/in/mattmayo13/)****[Matthew Mayo](https://www.kdnuggets.com/wp-content/uploads/./profile-pic.jpg)****
    ([**@mattmayo13**](https://twitter.com/mattmayo13)) 拥有计算机科学硕士学位和数据挖掘研究生文凭。作为 [KDnuggets](https://www.kdnuggets.com/)
    和 [Statology](https://www.statology.org/) 的主编，以及 [Machine Learning Mastery](https://machinelearningmastery.com/)
    的特约编辑，Matthew 旨在使复杂的数据科学概念变得易于理解。他的专业兴趣包括自然语言处理、语言模型、机器学习算法以及探索新兴的 AI。他致力于在数据科学社区中普及知识。Matthew
    从 6 岁起就开始编程。'
- en: '* * *'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析水平'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织在 IT 方面'
- en: '* * *'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[What Is Data Lineage, And Why Does It Matter?](https://www.kdnuggets.com/what-is-data-lineage-and-why-does-it-matter)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[什么是数据血缘，为什么它很重要？](https://www.kdnuggets.com/what-is-data-lineage-and-why-does-it-matter)'
- en: '[Why Humbling Yourself Will Improve Your Data Science Skills](https://www.kdnuggets.com/2022/01/humbling-improve-data-science-skills.html)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[为何谦逊会提升你的数据科学技能](https://www.kdnuggets.com/2022/01/humbling-improve-data-science-skills.html)'
- en: '[Avoid These 5 Common Mistakes Every Novice in AI Makes](https://www.kdnuggets.com/avoid-these-5-common-mistakes-every-novice-in-ai-makes)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[避免这 5 个每个 AI 新手常犯的错误](https://www.kdnuggets.com/avoid-these-5-common-mistakes-every-novice-in-ai-makes)'
- en: '[Top Data Science Projects to Build Your Skills](https://www.kdnuggets.com/2022/04/top-data-science-projects-build-skills.html)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[顶级数据科学项目来提升你的技能](https://www.kdnuggets.com/2022/04/top-data-science-projects-build-skills.html)'
- en: '[Use your Data Science Skills to Create 5 Streams of Income](https://www.kdnuggets.com/2023/03/data-science-skills-create-5-streams-income.html)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[运用你的数据科学技能创建 5 种收入来源](https://www.kdnuggets.com/2023/03/data-science-skills-create-5-streams-income.html)'
- en: '[How to Use ChatGPT to Improve Your Data Science Skills](https://www.kdnuggets.com/2023/03/chatgpt-improve-data-science-skills.html)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何使用 ChatGPT 提升你的数据科学技能](https://www.kdnuggets.com/2023/03/chatgpt-improve-data-science-skills.html)'
