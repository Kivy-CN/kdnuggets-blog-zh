- en: How to do “Limitless” Math in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在 Python 中进行“无限制”数学运算
- en: 原文：[https://www.kdnuggets.com/2021/10/limitless-math-python.html](https://www.kdnuggets.com/2021/10/limitless-math-python.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/10/limitless-math-python.html](https://www.kdnuggets.com/2021/10/limitless-math-python.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '![](../Images/418f1da603edd720a002262c0db00ee0.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/418f1da603edd720a002262c0db00ee0.png)'
- en: '**Image source**: [Pixabay](https://pixabay.com/photos/steelwool-fire-infinite-firespin-458842/) (Free
    to use)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**图片来源**: [Pixabay](https://pixabay.com/photos/steelwool-fire-infinite-firespin-458842/)（免费使用）'
- en: Limitless math?
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 无限数学？
- en: Sounds like a catchy title? Well, what we really meant by that term is **arbitrary-precision
    computation** i.e. breaking away from the **restriction of 32-bit or 64-bit arithmetic** that
    we are normally familiar with.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 听起来像个吸引人的标题？好吧，我们真正指的是 **任意精度计算**，即突破我们通常熟悉的 **32 位或 64 位算术的限制**。
- en: Here is a quick example.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个快速的例子。
- en: '![](../Images/38b45d0cdc8ef9f67786e226adfd4fe6.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/38b45d0cdc8ef9f67786e226adfd4fe6.png)'
- en: This is what you will get as the value for the square-root of 2 if you just
    import from the standard `math` module of Python.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你直接从 Python 的标准 `math` 模块中导入，你将获得平方根 2 的值。
- en: You can use Numpy to choose if you want the result to be 32-bit or 64-bit floating-point
    number.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 Numpy 来选择结果是 32 位还是 64 位浮点数。
- en: '![](../Images/518f161f6fbca038f07629993195c0d4.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/518f161f6fbca038f07629993195c0d4.png)'
- en: But what if you wanted the result up to 25 decimal places…
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果你想要精确到 25 位小数的结果呢…
- en: '1.414213562373095048801689'
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '1.414213562373095048801689'
- en: Or, 50 decimal places?
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 还是 50 位小数？
- en: '1.4142135623730950488016887242096980785696718753769'
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '1.4142135623730950488016887242096980785696718753769'
- en: How are we getting these results?
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们是如何得到这些结果的？
- en: Just by using a neat little package called `**mpmath**`. Let’s examine it in
    detail.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 仅使用一个名为 `**mpmath**` 的整洁小包。让我们详细检查一下它。
- en: Arbitrary-precision computation with `mpmath`
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 `mpmath` 进行任意精度计算
- en: '`Mpmath` is a Python library for arbitrary-precision floating-point arithmetic.
    For general information about `mpmath`, see the [project website](http://mpmath.org/).'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`Mpmath` 是一个用于任意精度浮点算术的 Python 库。有关 `mpmath` 的一般信息，请参见 [项目网站](http://mpmath.org/)。'
- en: From its [website](https://mpmath.org/doc/current/#advanced-mathematics), apart
    from arbitrary-precision arithmetic, “`*mpmath*`* provides extensive support for
    transcendental functions, evaluation of sums, integrals, limits, roots, and so
    on”*. It also does many standard mathematical tasks like,
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 从其 [网站](https://mpmath.org/doc/current/#advanced-mathematics) 上看，除了任意精度算术，“`*mpmath*`*
    提供了广泛的超越函数、求和、积分、极限、根等的支持”。它还执行许多标准数学任务，例如，
- en: Polynomials
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多项式
- en: Root-finding and optimization
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根求解和优化
- en: Sums, products, limits, and extrapolation
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 求和、乘积、极限和外推
- en: Differentiation
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微分
- en: Numerical integration (quadrature)
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数值积分（求积）
- en: Solving ordinary differential equations
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 求解常微分方程
- en: Function approximation
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数逼近
- en: Numerical inverse Laplace transform
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数值逆拉普拉斯变换
- en: In short, it’s a power-packed math library with limitless possibilities! We
    will explore some of the features in this article.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，它是一个功能强大的数学库，具有无限的可能性！我们将在本文中探讨一些功能。
- en: '**arbitrary-precision computation is **breaking away from the **restriction
    of 32-bit or 64-bit arithmetic** that we are normally familiar with…'
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**任意精度计算是** 从我们通常熟悉的 **32 位或 64 位算术的限制中突破出来**…'
- en: Installing and choosing a fast backend engine
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装和选择一个快速的后端引擎
- en: Just pip.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 只需使用 pip。
- en: '[PRE0]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: By default, `mpmath` uses Python integers internally. If `[gmpy](https://code.google.com/p/gmpy/)` version
    1.03 or later is installed in the system, `mpmath` will automatically detect it
    and use `gmpy` integers w/o any change to the high-level user experience. Using
    this backend makes its operations much faster, especially at high precision.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`mpmath` 在内部使用 Python 整数。如果系统中安装了 `*[gmpy](https://code.google.com/p/gmpy/)*`
    1.03 版或更高版本，`mpmath` 会自动检测并使用 `gmpy` 整数，而不会改变高级用户体验。使用这个后端使得其操作速度更快，特别是在高精度下。
- en: '`gmpy2` is a **C-coded Python extension module** that supports multiple-precision
    arithmetic. [**Here is how to install it**](https://gmpy2.readthedocs.io/en/latest/intro.html#installation).'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`gmpy2` 是一个 **用 C 编写的 Python 扩展模块**，支持多精度算术。[**这是安装它的方法**](https://gmpy2.readthedocs.io/en/latest/intro.html#installation)。'
- en: Code
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码
- en: Here is the [Notebook with all the code](https://github.com/tirthajyoti/Stats-Maths-with-Python/blob/master/mpmath-1.ipynb) shown
    in this article.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本文中展示的 [包含所有代码的 Notebook](https://github.com/tirthajyoti/Stats-Maths-with-Python/blob/master/mpmath-1.ipynb)。
- en: Choosing Precision
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择精度
- en: There is a whole lot of material about choosing and controlling precision with `mpmath`.
    Readers are encouraged to consult [this reference directly](https://mpmath.org/doc/current/basics.html).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 关于如何选择和控制 `mpmath` 的精度有大量的资料。鼓励读者直接查阅 [这个参考资料](https://mpmath.org/doc/current/basics.html)。
- en: I am just going to show you the quick way to set precision as you work along.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我将向你展示在工作中设置精度的快捷方法。
- en: '![](../Images/f731fd70fab5a4f8a23193bfd8ef6726.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f731fd70fab5a4f8a23193bfd8ef6726.png)'
- en: You can print the `mp` context anytime to see the current global precision settings.
    The `mp.prec` shows the precision in bits and `mp.dps` shows in decimal.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以随时打印 `mp` 上下文以查看当前的全局精度设置。`mp.prec` 显示的是位精度，`mp.dps` 显示的是小数精度。
- en: '![](../Images/a8839e3bc1ad8113bfe8e9654f7623c7.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a8839e3bc1ad8113bfe8e9654f7623c7.png)'
- en: Use ``mpf`` instances instead of regular float
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 ``mpf`` 实例代替普通浮点数
- en: In the code snippets above you might have noticed a function `mpf`. An `mpf` instance
    holds a real-valued floating-point number. They work analogously to Python floats,
    but support arbitrary-precision arithmetic.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码片段中，你可能注意到了一个函数 `mpf`。一个 `mpf` 实例保存了一个实值浮点数。它们与 Python 浮点数类似，但支持任意精度的算术运算。
- en: You should define `mpf` using strings (and not Python floats) as arguments to
    get true accuracy. You can also set `mp.pretty` to `True` for rounding w/o losing
    the internal accuracy.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该使用字符串（而不是 Python 浮点数）来定义 `mpf` ，以获得真正的准确性。你也可以将 `mp.pretty` 设置为 `True` 来进行舍入而不失去内部准确性。
- en: '![](../Images/be7d7c7fa4663b3f81d27aeb4c9c7f82.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/be7d7c7fa4663b3f81d27aeb4c9c7f82.png)'
- en: '![](../Images/7108f7ae37a7395070b9181bd836683d.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7108f7ae37a7395070b9181bd836683d.png)'
- en: Now some magic! Factorial calculation 11,000 times faster
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 现在有些魔法！阶乘计算速度提升 11,000 倍
- en: The `mpmath` can do large calculations using smart tricks whenever applicable.
    One example is factorial. For large numbers, it can use approximations appropriately
    without being instructed and give us the result much faster than the default Python
    math module.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`mpmath` 可以利用智能技巧进行大规模计算。一个例子是阶乘。对于大数，它可以适当地使用近似值，而无需指导，给出比默认 Python 数学模块更快的结果。'
- en: Here is what happens when we attempt to calculate the factorial of 100,000. `mpmath` is **11,333X
    faster**.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们尝试计算 100,000 的阶乘时，发生了什么。`mpmath` 的速度是**11,333 倍**。
- en: '![](../Images/6cef4d5219e16dc5e367ec78b38e050d.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6cef4d5219e16dc5e367ec78b38e050d.png)'
- en: Rational and complex numbers are native citizens
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 有理数和复数是原生支持的
- en: We can throw in rational or complex numbers as easily as floating-point numbers
    into the mix. For this, we need to use a magic function `**mpmathify**` which
    works with `**sympy**` internals to interpret those quantities.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以像处理浮点数一样轻松地将有理数或复数混入计算中。为此，我们需要使用一个神奇的函数 `**mpmathify**` ，它与 `**sympy**` 内部配合工作来解释这些量。
- en: '![](../Images/63db5f296a89cb4e3b382a59092b2446.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/63db5f296a89cb4e3b382a59092b2446.png)'
- en: We don’t have to import Python modules like `[**fraction**](https://docs.python.org/3/library/fractions.html)` or `[**cmath**](https://docs.python.org/3/library/cmath.html)` to
    work with such quantities at a precision of our choice.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不必导入像 `[**fraction**](https://docs.python.org/3/library/fractions.html)` 或 `[**cmath**](https://docs.python.org/3/library/cmath.html)` 这样的
    Python 模块来处理这些量，以选择我们需要的精度。
- en: Learn about all other [general utility functions that ](https://mpmath.org/doc/current/general.html)`[mpmath](https://mpmath.org/doc/current/general.html)`[ offers
    here](https://mpmath.org/doc/current/general.html).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 了解所有其他的 [通用工具函数](https://mpmath.org/doc/current/general.html)`[mpmath](https://mpmath.org/doc/current/general.html)`[ 提供的信息](https://mpmath.org/doc/current/general.html)。
- en: Quick plotting
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速绘图
- en: If Matplotlib is available on the system, `mpmath` offers a fast and easy plotting
    choice just by passing a list of functions and the corresponding ranges.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果系统上可用 Matplotlib，`mpmath` 提供了一种快速且简单的绘图选择，只需传递函数列表及其对应范围。
- en: Here is a single-line code example,
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个单行代码示例，
- en: '![](../Images/9cdc119df497a054554836b11075afe5.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9cdc119df497a054554836b11075afe5.png)'
- en: '**Image source**: Generated by the author'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**图片来源**：由作者生成'
- en: Another example with [Fresnel functions](https://en.wikipedia.org/wiki/Fresnel_integral),
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子是 [Fresnel 函数](https://en.wikipedia.org/wiki/Fresnel_integral)，
- en: '![](../Images/9d7383e601178bd033d5d79d0e7be8b7.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9d7383e601178bd033d5d79d0e7be8b7.png)'
- en: '**Image source**: Generated by the author'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**图片来源**：由作者生成'
- en: Complex quantities can be plotted as easily with `cplot`. By default, the complex
    argument (phase) is shown as color (hue) and the magnitude is shown as brightness.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 复数量可以通过 `cplot` 轻松绘制。默认情况下，复数参数（相位）显示为颜色（色调），而幅度显示为亮度。
- en: '![](../Images/0e600123b97fa9d5021df5db1212ac48.png)![](../Images/efc1545296ece318cf8e9a04fd9eeed0.png)**Image
    source**: Generated by the author'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0e600123b97fa9d5021df5db1212ac48.png)![](../Images/efc1545296ece318cf8e9a04fd9eeed0.png)**图片来源**：作者生成'
- en: Surface plots are also game,
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 表面图也是一个好选择，
- en: '![](../Images/d936db770139f81e14bdd6da30c38581.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d936db770139f81e14bdd6da30c38581.png)'
- en: '**Image source**: Generated by the author'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**图片来源**：作者生成'
- en: Special functions
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特殊函数
- en: '`mpmath` supports hundreds of special functions out-of-the-box. Here is a partial
    screenshot of that list. Refer to this documentation for details.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '`mpmath` 支持数百种特殊函数。以下是该列表的部分截图。有关详细信息，请参阅此文档。'
- en: '![](../Images/5bb0d1bfbd8ebf4bcd96093dd493696b.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5bb0d1bfbd8ebf4bcd96093dd493696b.png)'
- en: '![](../Images/2937704eaefc538e246628f69b258538.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2937704eaefc538e246628f69b258538.png)'
- en: '![](../Images/f86daf22f90b8e6b1eb813960f3fb25e.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f86daf22f90b8e6b1eb813960f3fb25e.png)'
- en: '**Image source**: Generated by the author'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**图片来源**：作者生成'
- en: Binomial coefficients
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 二项式系数
- en: Fast and easy computation of binomial coefficients for statistics and combinatorial
    math with `binomial` function,
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `binomial` 函数快速而轻松地计算统计学和组合数学中的二项式系数，
- en: '![](../Images/67608c71757f619c61f0713f340834f0.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/67608c71757f619c61f0713f340834f0.png)'
- en: '![](../Images/2d619ef98c4b0913498d584de3b5cbec.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2d619ef98c4b0913498d584de3b5cbec.png)'
- en: This function supports **massively large arguments, which is where this really
    shines**. Scipy calculation is faster but for large numbers, Scipy does not even
    run!
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数支持 **巨大的参数，这正是它真正出色的地方**。Scipy 的计算速度更快，但对于大数字，Scipy 甚至无法运行！
- en: '![](../Images/f71a76a939b65c7358f2be5d4a3f6a6d.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f71a76a939b65c7358f2be5d4a3f6a6d.png)'
- en: And, extensions to non-integers and negative arguments are natural (using Gamma
    function),
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 而且，扩展到非整数和负参数是自然的（使用 Gamma 函数），
- en: '![](../Images/b8adf27f87e432e8768bc84649e8d3ee.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b8adf27f87e432e8768bc84649e8d3ee.png)'
- en: '![](../Images/bb9454a828a3c7119ff0ae06499c65b0.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bb9454a828a3c7119ff0ae06499c65b0.png)'
- en: Hyperfactorials
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 超阶乘
- en: For integers, hyperfactorials are defined as,
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 对于整数，超阶乘定义为，
- en: '![](../Images/65bf3558a90616d6434a19f7cded40ac.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/65bf3558a90616d6434a19f7cded40ac.png)'
- en: They are really large. Can you think of an easy way to calculate this kind of
    number?
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 它们非常大。你能想到一种简单的方法来计算这种数字吗？
- en: '![](../Images/8853e4e7575bdfe3f3ecb0e0bf7c1725.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8853e4e7575bdfe3f3ecb0e0bf7c1725.png)'
- en: This number is 1.1425…something followed by 41908 zeroes! To get an idea about
    that, just consider this fact — there are roughly [10⁸⁰ atoms in the universe](https://www.thoughtco.com/number-of-atoms-in-the-universe-603795) i.e.
    1 followed by 80 zeros.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数字是 1.1425…后面跟着 41908 个零！为了理解这一点，可以考虑这个事实——宇宙中大约有 [10⁸⁰ 个原子](https://www.thoughtco.com/number-of-atoms-in-the-universe-603795)，即
    1 后面跟着 80 个零。
- en: Limitless math (in a fast manner), isn’t it?
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 无限的数学（以快速的方式），不是吗？
- en: Fibonacci number
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 斐波那契数
- en: Calculating the Fibonacci sequence with naive Python (recursive function) is
    a popular interview question because it can be done in a few different ways which
    differ dramatically in efficiencies.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 计算斐波那契数列的朴素 Python（递归函数）是一个流行的面试问题，因为它可以通过几种不同的方法完成，而这些方法在效率上差异巨大。
- en: However, calculating approximate solutions with large arguments or non-integer
    (even complex) arguments is natural and easy for `mpmath`. This is not so straightforward
    to achieve using native Python coding.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，使用大参数或非整数（甚至复数）参数计算近似解对于 `mpmath` 来说是自然且简单的。这在使用原生 Python 编码时并不那么简单。
- en: '![](../Images/d621a23a7d0264ebc8f91298d003658d.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d621a23a7d0264ebc8f91298d003658d.png)'
- en: Polynomial evaluation and roots
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式评估和根
- en: Easy and fast evaluation of polynomials of any order and root finding using `polyeval` and `polyroots` functions.
    Of course, `polyroots` evaluates all real and complex roots at one go.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `polyeval` 和 `polyroots` 函数快速且轻松地评估任意阶数的多项式并求解根。当然，`polyroots` 可以一次性评估所有实数和复数根。
- en: '![](../Images/4e47e25465d0fae02a57739228b119a6.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4e47e25465d0fae02a57739228b119a6.png)'
- en: Root-finding of arbitrary functions
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 任意函数的根求解
- en: We can use the `rootfind` function to search for roots of any arbitrary function.
    Here is an example,
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `rootfind` 函数来搜索任何任意函数的根。这里是一个例子，
- en: '![](../Images/37a1dfab44e93c99922c8fce069c15a2.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/37a1dfab44e93c99922c8fce069c15a2.png)'
- en: '**Image source**: Generated by the author'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**图片来源**：作者生成'
- en: Then, we look for solutions near all the integers from -2 to 5 and it finds
    multiple solutions corresponding to all the values of x at which the function
    crosses zero.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们在 -2 到 5 之间寻找所有整数附近的解，发现多个解对应于函数过零的所有 x 值。
- en: '![](../Images/38d0ed8ab7cb18156d98355b2b019a00.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/38d0ed8ab7cb18156d98355b2b019a00.png)'
- en: Numerical calculus
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数值微积分
- en: Evaluate derivatives of any order and any function,
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 计算任何阶数和任何函数的导数，
- en: '![](../Images/610ea28d82304333574bf52b5b7eaa81.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/610ea28d82304333574bf52b5b7eaa81.png)'
- en: Partial derivatives are easy,
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 偏导数很简单，
- en: '![](../Images/72fef53fb77c38febf39fa09dd374c9c.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/72fef53fb77c38febf39fa09dd374c9c.png)'
- en: Look at [this reference](https://mpmath.org/doc/current/calculus/differentiation.html) to
    see other advanced examples and functions related to derivatives.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 查看[这个参考资料](https://mpmath.org/doc/current/calculus/differentiation.html)以了解其他与导数相关的高级示例和函数。
- en: 1-D integrals
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1-D 积分
- en: Simple and fast evaluation to arbitrary precision,
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 简单快速的任意精度评估，
- en: '![](../Images/662bdb6ffaaedc141262138212378317.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/662bdb6ffaaedc141262138212378317.png)'
- en: 2-D or 3-D integrals
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2-D 或 3-D 积分
- en: Two- or three-dimensional integrals are also game!
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 二维或三维积分也可以处理！
- en: '![](../Images/f078a7c0d85a8bdfa994fdb42f52e40d.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f078a7c0d85a8bdfa994fdb42f52e40d.png)'
- en: Read more [details here](https://mpmath.org/doc/current/calculus/integration.html).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读更多[详细信息](https://mpmath.org/doc/current/calculus/integration.html)。
- en: Ordinary differential equation
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常微分方程
- en: We can use `odefun` to solve for ordinary differential equations with known
    boundary conditions.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`odefun`来求解已知边界条件的常微分方程。
- en: '![](../Images/ca6855e9b70af69d2a87803d8dc25931.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ca6855e9b70af69d2a87803d8dc25931.png)'
- en: Or, a more difficult one,
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，更困难一些，
- en: '![](../Images/af3bfcab740e3e1ec6837cce2ce1464e.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/af3bfcab740e3e1ec6837cce2ce1464e.png)'
- en: Matrix and linear algebra
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 矩阵和线性代数
- en: The `mpmath` package also offers all the standard operations involving matrices
    and linear algebra. For brevity, we just [refer to the documentation](https://mpmath.org/doc/current/matrices.html) here
    instead of showing examples.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`mpmath` 包还提供了所有涉及矩阵和线性代数的标准操作。为了简洁起见，我们在这里[参考文档](https://mpmath.org/doc/current/matrices.html)而不是展示示例。'
- en: Summary
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: In this article, we showed a powerful Python library and its capabilities for
    performing arbitrary-precision numerical computation involving all kinds of numbers
    and functions. Basically, the main advantage of this library is that it covers
    a very large swath of mathematical domains (algebraic, number-theory, calculus,
    special functions, etc.) and **everything is available under a single roof without
    loading multiple libraries**.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们展示了一个强大的Python库及其执行任意精度数值计算的能力，涉及各种数字和函数。基本上，这个库的主要优点是它涵盖了非常广泛的数学领域（代数、数论、微积分、特殊函数等），而且**一切都在一个屋檐下，不需要加载多个库**。
- en: Many of the usages of this library are in complex scientific/ technological
    domains such as finite-element simulations or cryptography, but as a number-enthusiast,
    you can always pick up useful functions from this package whenever you need for
    your data science or machine learning work.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这个库的许多应用领域涉及复杂的科学/技术领域，如有限元模拟或密码学，但作为一个数字爱好者，你总能从这个包中挑选出对你的数据科学或机器学习工作有用的函数。
- en: Again, here is the [Notebook with all the code](https://github.com/tirthajyoti/Stats-Maths-with-Python/blob/master/mpmath-1.ipynb) shown
    in this article.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，这里是[本文中展示的所有代码的Notebook](https://github.com/tirthajyoti/Stats-Maths-with-Python/blob/master/mpmath-1.ipynb)。
- en: Happy number crunching!
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 祝你数据处理愉快！
- en: You can check the author’s [**GitHub**](https://github.com/tirthajyoti?tab=repositories)** repositories **for
    code, ideas, and resources in machine learning and data science. If you are, like
    me, passionate about AI/machine learning/data science, please feel free to [add
    me on LinkedIn](https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/) or [follow
    me on Twitter](https://twitter.com/tirthajyotiS).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以查看作者的[**GitHub**](https://github.com/tirthajyoti?tab=repositories)**库**，以获取机器学习和数据科学方面的代码、创意和资源。如果你和我一样，对AI/机器学习/数据科学充满热情，请随时[在LinkedIn上添加我](https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/)或[在Twitter上关注我](https://twitter.com/tirthajyotiS)。
- en: '**Bio: [Tirthajyoti Sarkar](https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/)**
    is a Data Science/ML Manager at Adapdix Corp. He contributes regularly to publications
    such as KDnuggets and TDS on diverse topics related to data science and machine
    learning. He has authored data science books and contributes to open source software.
    Tirthajyoti holds a Ph.D. in EE and is working on an M.S. degree in Computational
    Data Analytics. Email him at tirthajyoti at gmail[dot]com.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介: [Tirthajyoti Sarkar](https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/)**
    是 Adapdix Corp 的数据科学/机器学习经理。他定期为 KDnuggets 和 TDS 等出版物撰写有关数据科学和机器学习的多样化话题。他编著了数据科学书籍，并参与开源软件开发。Tirthajyoti
    拥有电气工程博士学位，并正在攻读计算数据分析硕士学位。可以通过 tirthajyoti at gmail[dot]com 联系他。'
- en: '**Related:**'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Essential Math for Data Science:  ‘Why’ and ‘How’](/2018/09/essential-math-data-science.html)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学中的基础数学：‘为什么’和‘如何’](/2018/09/essential-math-data-science.html)'
- en: '[Why and how should you learn “Productive Data Science”?](/2021/07/learn-productive-data-science.html)'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[为什么以及如何学习“高效的数据科学”？](/2021/07/learn-productive-data-science.html)'
- en: '[Teaching AI to Classify Time-series Patterns with Synthetic Data](/2021/10/teaching-ai-classify-time-series-patterns-synthetic-data.html)'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[教AI分类时间序列模式的合成数据](/2021/10/teaching-ai-classify-time-series-patterns-synthetic-data.html)'
- en: '* * *'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织IT工作'
- en: '* * *'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[How To Overcome The Fear of Math and Learn Math For Data Science](https://www.kdnuggets.com/2021/03/overcome-fear-learn-math-data-science.html)'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何克服对数学的恐惧并为数据科学学习数学](https://www.kdnuggets.com/2021/03/overcome-fear-learn-math-data-science.html)'
- en: '[Essential Math for Data Science: Visual Introduction to Singular…](https://www.kdnuggets.com/2022/06/essential-math-data-science-visual-introduction-singular-value-decomposition.html)'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学中的基础数学：奇异值分解的视觉介绍](https://www.kdnuggets.com/2022/06/essential-math-data-science-visual-introduction-singular-value-decomposition.html)'
- en: '[Essential Math for Data Science: Eigenvectors and Application to PCA](https://www.kdnuggets.com/2022/06/essential-math-data-science-eigenvectors-application-pca.html)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学中的基础数学：特征向量及其在 PCA 中的应用](https://www.kdnuggets.com/2022/06/essential-math-data-science-eigenvectors-application-pca.html)'
- en: '[How Much Math Do You Need in Data Science?](https://www.kdnuggets.com/2020/06/math-data-science.html)'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在数据科学中需要多少数学？](https://www.kdnuggets.com/2020/06/math-data-science.html)'
- en: '[How to Learn Math for Machine Learning](https://www.kdnuggets.com/2022/02/learn-math-machine-learning.html)'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何为机器学习学习数学](https://www.kdnuggets.com/2022/02/learn-math-machine-learning.html)'
- en: '[KDnuggets™ News 22:n07, Feb 16: How to Learn Math for Machine…](https://www.kdnuggets.com/2022/n07.html)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets™ 新闻 22:n07，2月16日：如何为机器学习学习数学](https://www.kdnuggets.com/2022/n07.html)'
