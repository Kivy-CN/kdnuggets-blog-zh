- en: A Beginner’s Guide to PyTorch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/a-beginners-guide-to-pytorch](https://www.kdnuggets.com/a-beginners-guide-to-pytorch)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![A Beginner''s Guide to PyTorch](../Images/de78123b8b7e42a4ca8e1e0143a58f88.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Editor | Midjourney & Canva
  prefs: []
  type: TYPE_NORMAL
- en: Deep Learning is widely used in many areas of Artificial Intelligence research
    and has contributed to technological advancements. For example, text generation,
    facial recognition, and voice synthesis applications are based on deep learning
    research.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: One of the most used Deep Learning packages is [PyTorch](https://pytorch.org/).
    It is an open-source package created by Meta AI in 2016 and has since been used
    by many.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a lot of PyTorch advantages, including:'
  prefs: []
  type: TYPE_NORMAL
- en: Flexible model architecture
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Native Support for CUDA (Can use GPU)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Python-based
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Providing lower-level controls, which are useful for research and many use cases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Active development by the developer and community
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's explore PyTorch with this article to help you get started.
  prefs: []
  type: TYPE_NORMAL
- en: Preparation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You should visit their installation webpage and select the one that suits your
    environment's requirements. The below code is the installation example.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: With the PyTorch ready, let's get into the central part.
  prefs: []
  type: TYPE_NORMAL
- en: PyTorch Tensor
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Tensor is the building block in PyTorch. It is similar to the NumPy array but
    has access to a GPU. We can try to create a PyTorch Tensor using the following
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Like the NumPy array Tensor, it allows matrix operations.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: It’s also possible to perform the matrix multiplication.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: We can access the Tensor information by using the code below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Neural Network Training with PyTorch
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By defining the NN using the nn.Module class, we can develop a simple model.
    Let’s try it out with the code below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: The above code defines a `SimpleNet` class that inherits from `nn.Module`, which
    sets up the layers. We use `nn.Linear` is for the layers, and `relu` as the activation
    function.
  prefs: []
  type: TYPE_NORMAL
- en: We can add more layers or use different layers like Conv2D or CNN. But we would
    not use that.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we would train the `SimpleNet` we developed with sample Tensor data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: During the training above, we use random Tensor data and initiate the loss function
    called `CrossEntropyLoss`. Also, we initiate the SGD optimizer to manage the model
    parameters to minimize the loss.
  prefs: []
  type: TYPE_NORMAL
- en: The training process runs multiple times according to the epoch numbers and
    then performs the optimization process. This is the usual deep-learning process.
  prefs: []
  type: TYPE_NORMAL
- en: We can add several steps to more complex training to improve training, like
    early stopping, learning rate, and other techniques.
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, we can evaluate the model we have trained with the unseen data. The
    following code allows us to do that.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: What happened above is that we switched the model into the evaluation mode,
    which turned off dropout and batch normalization updates. Additionally, we disable
    the gradient computation process to speed up the process.
  prefs: []
  type: TYPE_NORMAL
- en: You can visit the [PyTorch documentation](https://pytorch.org/docs/stable/index.html)
    to learn further about what you can do.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this article, we will go through the basics of PyTorch. From tensor creation
    to tensor operations and developing a simple NN model. The article is an introductory
    level that every beginner should be able to follow quickly.
  prefs: []
  type: TYPE_NORMAL
- en: '**[](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**[Cornellius Yudha
    Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**** is a data science
    assistant manager and data writer. While working full-time at Allianz Indonesia,
    he loves to share Python and data tips via social media and writing media. Cornellius
    writes on a variety of AI and machine learning topics.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[A Practical Guide to Transfer Learning using PyTorch](https://www.kdnuggets.com/2023/06/practical-guide-transfer-learning-pytorch.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Beginner''s Guide to End to End Machine Learning](https://www.kdnuggets.com/2021/12/beginner-guide-end-end-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Essential Machine Learning Algorithms: A Beginner''s Guide](https://www.kdnuggets.com/2021/05/essential-machine-learning-algorithms-beginners.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Beginner''s Guide to Q Learning](https://www.kdnuggets.com/2022/06/beginner-guide-q-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Beginner’s Guide to Web Scraping Using Python](https://www.kdnuggets.com/2022/10/beginner-guide-web-scraping-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Beginner''s Guide to Cloud Computing](https://www.kdnuggets.com/2023/01/beginner-guide-cloud-computing.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
