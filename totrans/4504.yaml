- en: Python Pandas For Data Discovery in 7 Simple Steps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/03/python-pandas-data-discovery.html](https://www.kdnuggets.com/2020/03/python-pandas-data-discovery.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e8c474e839709536e29a8b4e888302e0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'When I first started using Python to analyze data, the first line of code that
    I wrote was ‘import **pandas** as pd’. I was very confused about what **pandas** was
    and struggled a lot with the code. Many questions were in my mind: Why does everyone
    apply ‘import **pandas** as pd’ in their first line on Python? What does **pandas** do
    that is so valuable?'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: I believed it would be better if I could have an understanding of its background.
    Because of my curiosity, I have done some research through different sources,
    for example; online courses, Google, teachers, etc. Eventually, I got an answer.
    Let me share that answer with you in this article.
  prefs: []
  type: TYPE_NORMAL
- en: Background
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Pandas**, the short form from Panel Data, was first released on 11 Jan 2008
    by a well-known developer called [Wes McKinney](https://en.wikipedia.org/wiki/Wes_McKinney).
    Wes McKinney hated the idea of researchers wasting their time. I eventually understood
    the importance of **pandas **fromwhat he said in his [interview](https://qz.com/1126615/the-story-of-the-most-important-tool-in-data-science/).'
  prefs: []
  type: TYPE_NORMAL
- en: '*“Scientists unnecessarily dealing with the drudgery of simple data manipulation
    tasks makes me feel terrible,”*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*“I tell people that it enables people to analyze and work with data who are
    not expert computer scientists,”*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Pandas** is one of the main tools used by data analysts nowadays and has
    been instrumental in boosting Python’s usage in the data scientist community.
    Python has been growing rapidly in terms of users over the last decade or so,
    based on traffic to the [StackOverflow](https://stackoverflow.com/) question and
    answer site. The graph below shows the huge growth of **Pandas** compared to some
    other Python software libraries!'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4753b43455f38bb34987de932b2ca110.png)'
  prefs: []
  type: TYPE_IMG
- en: reference: [coding club](https://ourcodingclub.github.io/2018/04/18/pandas-python-intro.html)
  prefs: []
  type: TYPE_NORMAL
- en: It’s time to start! Let’s get your hands dirty with some coding! It’s not difficult
    and is suitable for any beginner. There are 7 steps in total.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 1: Importing library'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Step 2: Reading data'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Method 1: load in a text file containing tabular data'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Method 2: create a DataFrame in Pandas from a [Python dictionary](https://www.kdnuggets.com/2019/12/python-dictionary-methods.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d4688b36cad9c1366af3df1823172cfd.png)'
  prefs: []
  type: TYPE_IMG
- en: '*Here, I used: df.head() Remark: python lists are 0-indexed so the first element
    is 0, second is 1, so on.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 3: Understanding the data types, number of rows and columns'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '(10,3) #(row, column)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Number of variables: 3'
  prefs: []
  type: TYPE_NORMAL
- en: 'Number of rows: 10'
  prefs: []
  type: TYPE_NORMAL
- en: The data type is an important concept in programming, it contains classification
    or categorization of data items.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5a0610b46b334c64463dee7d7de889d2.png)'
  prefs: []
  type: TYPE_IMG
- en: If you are not familiar with data types, this table may be useful for you.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1645d297b31f6c7d3acb9a55dff00599.png)'
  prefs: []
  type: TYPE_IMG
- en: '*Data Types*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/06cf00f25d6c8a383741c8c31f316f41.png)'
  prefs: []
  type: TYPE_IMG
- en: '*From the output, we know there are 3 columns, taking 153MB of memory.*'
  prefs: []
  type: TYPE_NORMAL
- en: Step 4: Observing categorical data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a7cf997c9319c8a1e40fb86759fe168d.png)'
  prefs: []
  type: TYPE_IMG
- en: The table above highlights the unique values of each column that could allow
    you to determine which values may be potentially categorical. For example, the
    unique number of sex is 2 (which makes sense [M/F]). It is less likely that name
    and year_born are categorical variables because the number of unique is pretty
    large.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9423b8fd7d62866c5cdf6df67168368f.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/07851ca3c3caa06733d605527f3780c9.png)'
  prefs: []
  type: TYPE_IMG
- en: '*6 females and 4 males*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 5: Exploring data'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2f2c7fa59a0cb0cee5186c12ba4222af.png)'
  prefs: []
  type: TYPE_IMG
- en: '*To use & (AND), ~ (NOT) and | (OR), you have to add “(“ and “)” before and
    after the logical operation.*'
  prefs: []
  type: TYPE_NORMAL
- en: Besides, with [**loc**](http://pandas.pydata.org/pandas-docs/stable/indexing.html#different-choices-for-indexing) and [**iloc**](http://pandas.pydata.org/pandas-docs/stable/indexing.html#different-choices-for-indexing) you
    can do practically any data selection operation on DataFrames you can think of.
    Let me give you some examples.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ba2d6ef341f64e0618a39183cda700ac.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '1984'
  prefs: []
  type: TYPE_NORMAL
- en: Next, I’ll use ***loc*** to do the data selection.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/25dc97a41f7fc247dea4df3c53195845.png)'
  prefs: []
  type: TYPE_IMG
- en: '*2nd row*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: ‘M’
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0ab1cd79a60c9ca8ff65071241c763a5.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b4083be3525ea6602c14b46c46baa2ac.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '1984.0'
  prefs: []
  type: TYPE_NORMAL
- en: other aggregations: ***min(), max(),sum(), mean(), std()***
  prefs: []
  type: TYPE_NORMAL
- en: From the above examples, you should know how to use the function of **iloc**
    and **loc**. **iloc** is short for “**i**nteger **loc**ation”. **iloc** gives
    us access to the DataFrame in ‘matrix’ style notation, i.e., **[row, column]** notation. **loc** is
    label-based, which means that you have to specify rows and columns based on their
    row and column labels (names).
  prefs: []
  type: TYPE_NORMAL
- en: From my experience, people would easily mix up with the usage of ***loc*** and ***iloc***.
    Therefore I would prefer to stick on one — ***loc***.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 6: Finding the missing values'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d6b1b9b824cc5bd8de8c7f93316e9b3b.png)'
  prefs: []
  type: TYPE_IMG
- en: '*2 missing values in the column of ‘year_born’.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 7: Handling missing values'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When *inplace=True* is passed, the data is renamed in place.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8fd11f72c6d0a3ba29a3ede14f796ea6.png)'
  prefs: []
  type: TYPE_IMG
- en: '*The year_born of Julie and Albert is 1982.25 (replaced by mean).*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/58e99bb4199a40c77a4a868af652ed85.png)'
  prefs: []
  type: TYPE_IMG
- en: '*4th and 9th rows are dropped.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 8: Visualising data'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Matplotlib is a Python 2D plotting library. You can easily generate plots, histograms,
    power spectra, bar charts, scatterplots, etc., with just a few lines of code.
    The example here is plotting a histogram. The “%matplotlib inline” will make your
    plot outputs appear and be stored within the notebook, but it is not related to
    how pandas.hist() works.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a5358a6dc3a307821ed74de996a857b1.png)'
  prefs: []
  type: TYPE_IMG
- en: '*The year_born where sex=’W’.*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '*Output*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/50d2846e0baef4a002dee53799c85ff2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Great! I have already gone through all 7steps on data discovery using **pandas** library.
    Let me sum up what functions that I have used:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2d3cf5bc4f8ec79ce919fb01aa12ab66.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Bonus**: Let me introduce the fastest way to do exploratory data analysis
    (EDA) with only two lines of code: **pandas_profiling**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bbdb8f7d3557bc88a47527fd12e7c35e.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/bdf96030a7f174ec754bfc7c81c80fc8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'It covers:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Overview:**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Dataset info: Number of variables, Number of observations, Missing cells, Duplicate
    rows 0, Total size in memory and Average record size in memory'
  prefs: []
  type: TYPE_NORMAL
- en: '**Variables: **Missing values and its percentage, Distinct count, Unique'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Correlations**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Missing Values: **‘Matrix’ and ‘Count’'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Sample: **First 10 rows and Last 10 rows'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Original](https://medium.com/datadriveninvestor/python-pandas-in-7-simple-steps-no-coding-needed-eb980b633392).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Data Cleaning and Preprocessing for Beginners](https://www.kdnuggets.com/2019/11/data-cleaning-preprocessing-beginners.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Advanced Features of Pandas and How to Use Them](https://www.kdnuggets.com/2019/10/5-advanced-features-pandas.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Speed up Pandas by 4x with one line of code](https://www.kdnuggets.com/2019/11/speed-up-pandas-4x.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[5 Simple Steps to Automate Data Cleaning with Python](https://www.kdnuggets.com/5-simple-steps-to-automate-data-cleaning-with-python)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Simple Steps Series: Master Python, SQL, Scikit-learn, PyTorch &…](https://www.kdnuggets.com/5-simple-steps-series-master-python-sql-scikit-learn-pytorch-google-cloud)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Combining Pandas DataFrames Made Simple](https://www.kdnuggets.com/2022/09/combining-pandas-dataframes-made-simple.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[From CSV to Complete Analytical Report with ChatGPT in 5 Simple Steps](https://www.kdnuggets.com/from-csv-to-complete-analytical-report-with-chatgpt-in-5-simple-steps)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Distribute and Run LLMs with llamafile in 5 Simple Steps](https://www.kdnuggets.com/distribute-and-run-llms-with-llamafile-in-5-simple-steps)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Llama, Llama, Llama: 3 Simple Steps to Local RAG with Your Content](https://www.kdnuggets.com/3-simple-steps-to-local-rag-with-your-content)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
