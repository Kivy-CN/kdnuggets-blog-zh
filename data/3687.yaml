- en: 'Text Summarization Development: A Python Tutorial with GPT-3.5'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文本摘要开发：带有 GPT-3.5 的 Python 教程
- en: 原文：[https://www.kdnuggets.com/2023/04/text-summarization-development-python-tutorial-gpt35.html](https://www.kdnuggets.com/2023/04/text-summarization-development-python-tutorial-gpt35.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2023/04/text-summarization-development-python-tutorial-gpt35.html](https://www.kdnuggets.com/2023/04/text-summarization-development-python-tutorial-gpt35.html)
- en: '![Text Summarization Development: A Python Tutorial with GPT-3.5](../Images/e90954496b2af8e6bb05cee51d68e352.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![文本摘要开发：带有 GPT-3.5 的 Python 教程](../Images/e90954496b2af8e6bb05cee51d68e352.png)'
- en: Image by [frimufilms](https://www.freepik.com/free-photo/opened-ai-chat-laptop_38259334.htm#query=chatgpt&position=0&from_view=search&track=sph)
    on [Freepik](https://www.freepik.com/)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [frimufilms](https://www.freepik.com/free-photo/opened-ai-chat-laptop_38259334.htm#query=chatgpt&position=0&from_view=search&track=sph)
    提供，来源于 [Freepik](https://www.freepik.com/)
- en: This is an era where AI breakthrough is coming daily. We didn’t have many AI-generated
    in public a few years ago, but now the technology is accessible to everyone. It’s
    excellent for many individual creators or companies that want to significantly
    take advantage of the technology to develop something complex, which might take
    a long time.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个 AI 突破日新月异的时代。几年前，我们在公共领域中看到的 AI 生成内容不多，但现在技术对每个人都可及。对于许多希望显著利用这一技术来开发复杂项目的个人创作者或公司来说，这是一项绝佳的选择，可能需要较长时间。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前 3 名课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速入门网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: One of the most incredible breakthroughs that change how we work is the release
    of the [GPT-3.5 model by OpenAI](https://platform.openai.com/docs/models/gpt-3-5).
    What is the GPT-3.5 model? If I let the model talk for themselves. In that case,
    the answer is “**a highly advanced AI model in the field of natural language processing,
    with vast improvements in generating contextually accurate and relevant tex**t”.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一个改变我们工作方式的重大突破是 [OpenAI 发布的 GPT-3.5 模型](https://platform.openai.com/docs/models/gpt-3-5)。GPT-3.5
    模型是什么？如果让模型自己回答的话，答案是“**在自然语言处理领域中高度先进的 AI 模型，在生成上下文相关和准确的文本方面有着显著改进**”。
- en: OpenAI provides an API for the GPT-3.5 model that we can use to develop a simple
    app, such as a text summarizer. To do that, we can use Python to integrate the
    model API into our intended application seamlessly. What does the process look
    like? Let’s get into it.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: OpenAI 提供了一个用于 GPT-3.5 模型的 API，我们可以用来开发一个简单的应用程序，例如文本摘要器。为此，我们可以使用 Python 将模型
    API 无缝集成到我们的应用程序中。这个过程是什么样的呢？让我们深入了解一下。
- en: Prerequisite
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前提条件
- en: 'There are a few prerequisites before following this tutorial, including:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在跟随本教程之前，有几个前提条件，包括：
- en: '- Knowledge of Python, including knowledge of using external libraries and
    IDE'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '- Python 知识，包括使用外部库和 IDE 的知识'
- en: '- Understanding of APIs and handling the endpoint with Python'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '- 理解 APIs 和使用 Python 处理端点'
- en: '- Having access to the OpenAI APIs'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '- 拥有访问 OpenAI APIs 的权限'
- en: To obtain OpenAI APIs access, we must register on the [OpenAI Developer Platform](https://platform.openai.com/overview)
    and visit the View API keys within your profile. On the web, click the “Create
    new secret key” button to acquire API access (See image below). Remember to save
    the keys, as they will not be shown the keys after that.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取 OpenAI APIs 访问权限，我们必须在 [OpenAI 开发者平台](https://platform.openai.com/overview)
    注册，并访问您个人资料中的查看 API 密钥。在网页上，点击“创建新秘密密钥”按钮以获取 API 访问权限（见下图）。请记得保存密钥，因为之后将不会再显示。
- en: '![Text Summarization Development: A Python Tutorial with GPT-3.5](../Images/7978f98c4ae019e66b98f06f9b76c9f2.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![文本摘要开发：带有 GPT-3.5 的 Python 教程](../Images/7978f98c4ae019e66b98f06f9b76c9f2.png)'
- en: Image by Author
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: With all the preparation ready, let’s try to understand the basic of the OpenAI
    APIs model.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 准备工作就绪后，让我们尝试理解 OpenAI APIs 模型的基础知识。
- en: Understanding GPT-3.5 OpenAI API
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 GPT-3.5 OpenAI API
- en: The [GPT-3.5 family model](https://platform.openai.com/docs/models/gpt-3-5)
    was specified for many language tasks, and each model in the family excels in
    some tasks. For this tutorial example, we would use the `gpt-3.5-turbo` as it
    was the recommended current model when this article was written for its capability
    and cost-efficiency.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[GPT-3.5 系列模型](https://platform.openai.com/docs/models/gpt-3-5)被指定用于许多语言任务，每个系列中的模型在某些任务中表现出色。在这个教程示例中，我们将使用
    `gpt-3.5-turbo`，因为它是本文撰写时推荐的当前模型，具有良好的能力和性价比。'
- en: We often use the `text-davinci-003` in the OpenAI tutorial, but we would use
    the current model for this tutorial. We would rely on the [ChatCompletion](https://platform.openai.com/docs/api-reference/chat/create)
    endpoint instead of Completion because the current recommended model is a chat
    model. Even if the name was a chat model, it works for any language task.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 OpenAI 教程中通常使用 `text-davinci-003`，但本教程中我们将使用当前模型。我们将依赖 [ChatCompletion](https://platform.openai.com/docs/api-reference/chat/create)
    端点，而不是 Completion，因为当前推荐的模型是聊天模型。即使名字是聊天模型，它也适用于任何语言任务。
- en: Let’s try to understand how the API works. First, we need to install the current
    OpenAI packages.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试理解 API 的工作原理。首先，我们需要安装当前的 OpenAI 包。
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After we have finished installing the package, we will try to use the API by
    connecting via the ChatCompletion endpoint. However, we need to set the environment
    before we continue.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 完成包的安装后，我们将尝试通过 ChatCompletion 端点连接并使用 API。不过，在继续之前，我们需要设置环境。
- en: In your favorite IDE (for me, it’s VS Code), create two files called `.env`
    and `summarizer_app.py`, similar to the image below.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在你最喜欢的 IDE（对我来说是 VS Code）中，创建两个文件，分别命名为 `.env` 和 `summarizer_app.py`，类似于下图。
- en: '![Text Summarization Development: A Python Tutorial with GPT-3.5](../Images/74073bce3a80f216eb7daf5aabb43fad.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![文本总结开发：使用 GPT-3.5 的 Python 教程](../Images/74073bce3a80f216eb7daf5aabb43fad.png)'
- en: Image by Author
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: The `summarizer_app.py` is where we would build our simple summarizer application,
    and the `.env` file is where we would store our API Key. For security reasons,
    it is always advised to separate our API key in another file rather than hard-code
    them in the Python file.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`summarizer_app.py` 是我们将构建简单总结应用程序的地方，而 `.env` 文件是我们存储 API 密钥的地方。出于安全原因，建议将
    API 密钥分开存储在另一个文件中，而不是硬编码在 Python 文件中。'
- en: In the `.env` file put the following syntax and save the file. Replace your_api_key_here
    with your actual API key. Don’t change the API key into a string object; let them
    as it is.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `.env` 文件中放入以下语法并保存文件。将 `your_api_key_here` 替换为你的实际 API 密钥。不要将 API 密钥更改为字符串对象；保持原样。
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: To understand the GPT-3.5 API better; we would use the following code to generate
    the word summarizer.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解 GPT-3.5 API，我们将使用以下代码生成词汇总结器。
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The above code is how we interact with the OpenAI APIs GPT-3.5 model. Using
    the ChatCompletion API, we create a conversation and will get the intended result
    after passing the prompt.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码展示了我们如何与 OpenAI API 的 GPT-3.5 模型进行交互。通过使用 ChatCompletion API，我们创建了一个对话，并在传递提示后获得预期的结果。
- en: Let’s break down each part to understand them better. In the first line, we
    use the `openai.ChatCompletion.create` code to create the response from the prompt
    we would pass into the API.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐步解析每个部分以更好地理解。在第一行，我们使用 `openai.ChatCompletion.create` 代码从我们将传递给 API 的提示中创建响应。
- en: 'In the next line, we have our hyperparameters that we use to improve our text
    tasks. Here is the summary of each hyperparameter function:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一行，我们有用来改善文本任务的超参数。以下是每个超参数功能的总结：
- en: '`model`: The model family we want to use. In this tutorial, we use the current
    recommended model (`gpt-3.5-turbo`).'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model`：我们要使用的模型系列。在本教程中，我们使用当前推荐的模型（`gpt-3.5-turbo`）。'
- en: '`max_tokens`: The upper limit of the generated words by the model. It helps
    to limit the length of the generated text.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_tokens`：模型生成的单词上限。它有助于限制生成文本的长度。'
- en: '`temperature`: The randomness of the model output, with a higher temperature,
    means a more diverse and creative result. The value range is between 0 to infinity,
    although values more than 2 are not common.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`temperature`：模型输出的随机性，温度越高，结果越多样和创造性。值的范围是从 0 到无限，虽然值大于 2 并不常见。'
- en: '`top_p`: Top P or top-k sampling or nucleus sampling is a parameter to control
    the sampling pool from the output distribution. For example, value 0.1 means the
    model only samples the output from the top 10% of the distribution. The value
    range was between 0 and 1; higher values mean a more diverse result.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`top_p`：Top P 或 top-k 采样或核采样是一个控制输出分布中采样池的参数。例如，值为 0.1 表示模型仅从分布的前 10% 中进行采样。该值范围在
    0 到 1 之间；较高的值意味着结果更具多样性。'
- en: '`frequency_penalty`: The penalty for the repetition token from the output.
    The value range between -2 to 2, where positive values would suppress the model
    from repeating token while negative values encourage the model to use more repetitive
    words. 0 means no penalty.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`frequency_penalty`：输出中重复词的惩罚。值范围在 -2 到 2 之间，其中正值会抑制模型重复词，而负值则鼓励模型使用更多重复的词。0
    表示没有惩罚。'
- en: '`messages`: The parameter where we pass our text prompt to be processed with
    the model. We pass a list of dictionaries where the key is the role object (either
    "system", "user", or "assistant") that helps the model to understand the context
    and structure while the values are the context.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`messages`：我们将文本提示传递给模型进行处理的参数。我们传递一个字典列表，其中键是角色对象（“system”、“user”或“assistant”），帮助模型理解上下文和结构，而值是上下文。'
- en: The role “system” is the set guidelines for the model “assistant” behavior,
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 角色“system”是对模型“assistant”行为的设定准则。
- en: The role “user” represents the prompt from the person interacting with the model,
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 角色“user”表示与模型交互的人的提示。
- en: The role “assistant” is the response to the “user” prompt
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 角色“assistant”是对“user”提示的回应。
- en: Having explained the parameter above, we can see that the `messages` parameter
    above has two dictionary object. The first dictionary is how we set the model
    as a text summarizer. The second is where we would pass our text and get the summarization
    output.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 解释完上述参数后，我们可以看到上面的 `messages` 参数包含两个字典对象。第一个字典是我们如何将模型设置为文本摘要器。第二个是我们传递文本并获取摘要输出的地方。
- en: In the second dictionary, you will also see the variable `person_type` and `prompt`.
    The `person_type` is a variable I used to control the summarized style, which
    I will show in the tutorial. While the `prompt` is where we would pass our text
    to be summarized.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个字典中，你还会看到变量 `person_type` 和 `prompt`。`person_type` 是我用来控制摘要风格的变量，在教程中会展示。而
    `prompt` 是我们传递待总结文本的地方。
- en: Continuing with the tutorial, place the below code in the `summarizer_app.py`
    file and we will try to run through how the function below works.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 继续教程，将以下代码放入 `summarizer_app.py` 文件中，我们将尝试运行下面的函数。
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The code above is where we create a Python function that would accept various
    parameters that we have discussed previously and return the text summary output.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的代码是我们创建一个 Python 函数的地方，该函数接受我们之前讨论过的各种参数，并返回文本摘要输出。
- en: Try the function above with your parameter and see the output. Then let’s continue
    the tutorial to create a simple application with the streamlit package.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 使用你的参数尝试上述功能并查看输出。然后继续本教程，使用 streamlit 包创建一个简单的应用程序。
- en: Text Summarization Application with Streamlit
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Streamlit 的文本摘要应用程序
- en: '[Streamlit](https://docs.streamlit.io/) is an open-source Python package designed
    for creating machine learning and data science web apps. It’s easy to use and
    intuitive, so it is recommended for many beginners.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[Streamlit](https://docs.streamlit.io/) 是一个开源 Python 包，旨在创建机器学习和数据科学网页应用。它易于使用且直观，因此推荐给许多初学者。'
- en: Let’s install the streamlit package before we continue with the tutorial.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续教程之前，让我们先安装 streamlit 包。
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: After the installation is finished, put the following code into the `summarizer_app.py`.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，将以下代码放入 `summarizer_app.py` 中。
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Try to run the following code in your command prompt to initiate the application.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试在命令提示符中运行以下代码以启动应用程序。
- en: '[PRE6]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: If everything works well, you will see the following application in your default
    browser.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切正常，你会在默认浏览器中看到以下应用程序。
- en: '![Text Summarization Development: A Python Tutorial with GPT-3.5](../Images/c7cc819309edb8f6b8a59183bcb7dafd.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![文本摘要开发：使用 GPT-3.5 的 Python 教程](../Images/c7cc819309edb8f6b8a59183bcb7dafd.png)'
- en: Image by Author
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: 'So, what happened in the code above? Let me briefly explain each function we
    used:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，上面的代码发生了什么？让我简要解释一下我们使用的每个函数：
- en: '`.st.title`: Provide the title text of the web application.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.st.title`：提供网页应用程序的标题文本。'
- en: '`.st.write`: Writes the argument into the application; it could be anything
    but mainly a string text.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.st.write`：将参数写入应用程序中；可以是任何内容，但主要是字符串文本。'
- en: '`.st.text_area`: Provide an area for text input that can be stored in the variable
    and used for the prompt for our text summarizer'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.st.text_area`：提供一个文本输入区域，可以存储在变量中并用于我们的文本摘要提示。'
- en: '`.st.columns`: Object containers to provide side-by-side interaction.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.st.columns`：对象容器，用于提供并排互动。'
- en: '`.st.slider`: Provide a slider widget with set values that the user can interact
    with. The value is stored on a variable used as the model parameter.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.st.slider`：提供一个具有设定值的滑块小部件，用户可以进行交互。该值存储在用作模型参数的变量中。'
- en: '`.st.selectbox`: Provide a selection widget for users to select the summarization
    style they want. In the example above, we use five different styles.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.st.selectbox`：提供一个选择小部件，让用户选择他们想要的摘要样式。在上面的示例中，我们使用了五种不同的样式。'
- en: '`.st.expander`: Provide a container that users can expand and hold multiple
    objects.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.st.expander`：提供一个容器，用户可以展开并容纳多个对象。'
- en: '`.st.button`: Provide a button that runs the intended function when the user
    presses it.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.st.button`：提供一个按钮，用户按下时运行预期的功能。'
- en: As streamlit would automatically design the UI following the given code from
    top to bottom, we could focus more on the interaction.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 streamlit 会自动根据从上到下给定的代码设计 UI，我们可以更多地关注互动。
- en: With all the pieces in place, let’s try our summarization application with a
    text example. For our example, I would use the [Theory of Relativity Wikipedia
    page](https://en.wikipedia.org/wiki/Theory_of_relativity) text to be summarized.
    With a default parameter and second-grader style, we obtain the following result.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当所有组件准备好后，让我们尝试使用文本示例来测试我们的摘要应用程序。对于我们的示例，我将使用 [相对论 Wikipedia 页面](https://en.wikipedia.org/wiki/Theory_of_relativity)
    的文本进行摘要。使用默认参数和二年级风格，我们得到以下结果。
- en: '[PRE7]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: You might obtain a different result than the above one. Let’s try the Housewives
    style and tweak the parameter a bit (Token 100, Temperature 0.5, Nucleus Sampling
    0.5, Frequency Penalty 0.3).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会获得与上述不同的结果。让我们尝试“家庭主妇”风格，并稍微调整参数（Token 100，Temperature 0.5，Nucleus Sampling
    0.5，Frequency Penalty 0.3）。
- en: '[PRE8]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: As we can see, there is a difference in style for the same text we provide.
    With a change prompt and parameter, our application can be more functional.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，相同文本的样式存在差异。通过更改提示和参数，我们的应用程序可以更具功能性。
- en: The overall look of our text summarizer application can be seen in the image
    below.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的文本摘要应用程序的整体外观可以从下图中看到。
- en: '![Text Summarization Development: A Python Tutorial with GPT-3.5](../Images/175fe28b77724fddeb13f214e08bf433.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![文本摘要开发：使用 GPT-3.5 的 Python 教程](../Images/175fe28b77724fddeb13f214e08bf433.png)'
- en: Image by Author
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: That is the tutorial on creating text summarizer application development with
    GPT-3.5\. You could tweak the application even further and deploy the application.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是关于使用 GPT-3.5 创建文本摘要应用程序的教程。你可以进一步调整应用程序并部署它。
- en: Conclusion
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Generative AI is rising, and we should utilize the opportunity by creating a
    fantastic application. In this tutorial, we will learn how the GPT-3.5 OpenAI
    APIs work and how to use them to create a text summarizer application with the
    help of Python and streamlit package.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 生成式 AI 正在崛起，我们应该利用这个机会创建一个精彩的应用程序。在本教程中，我们将了解 GPT-3.5 OpenAI API 的工作原理，以及如何借助
    Python 和 streamlit 包来创建一个文本摘要应用程序。
- en: '**[Cornellius Yudha Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**
    is a data science assistant manager and data writer. While working full-time at
    Allianz Indonesia, he loves to share Python and Data tips via social media and
    writing media.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Cornellius Yudha Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**
    是数据科学助理经理和数据撰稿人。他在全职工作于 Allianz Indonesia 的同时，喜欢通过社交媒体和写作媒体分享 Python 和数据技巧。'
- en: More On This Topic
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[5 Free Tools For Detecting ChatGPT, GPT3, and GPT2](https://www.kdnuggets.com/2023/02/5-free-tools-detecting-chatgpt-gpt3-gpt2.html)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[检测 ChatGPT、GPT3 和 GPT2 的 5 个免费工具](https://www.kdnuggets.com/2023/02/5-free-tools-detecting-chatgpt-gpt3-gpt2.html)'
- en: '[Approaches to Text Summarization: An Overview](https://www.kdnuggets.com/2019/01/approaches-text-summarization-overview.html)'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[文本摘要方法概述](https://www.kdnuggets.com/2019/01/approaches-text-summarization-overview.html)'
- en: '[Getting Started with Automated Text Summarization](https://www.kdnuggets.com/2019/11/getting-started-automated-text-summarization.html)'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[自动化文本摘要入门](https://www.kdnuggets.com/2019/11/getting-started-automated-text-summarization.html)'
- en: '[Summarization with GPT-3](https://www.kdnuggets.com/2022/04/packt-summarization-gpt3.html)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 GPT-3 进行摘要](https://www.kdnuggets.com/2022/04/packt-summarization-gpt3.html)'
- en: '[Unlocking GPT-4 Summarization with Chain of Density Prompting](https://www.kdnuggets.com/unlocking-gpt-4-summarization-with-chain-of-density-prompting)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[解锁 GPT-4 摘要生成的密度链提示方法](https://www.kdnuggets.com/unlocking-gpt-4-summarization-with-chain-of-density-prompting)'
- en: '[Extractive Summarization with LLM using BERT](https://www.kdnuggets.com/extractive-summarization-with-llm-using-bert)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 BERT 的 LLM 提取式摘要生成](https://www.kdnuggets.com/extractive-summarization-with-llm-using-bert)'
