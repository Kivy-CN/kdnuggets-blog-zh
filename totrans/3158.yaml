- en: Top 15 Scala Libraries for Data Science in 2018
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2018/02/top-15-scala-libraries-data-science-2018.html](https://www.kdnuggets.com/2018/02/top-15-scala-libraries-data-science-2018.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '**By [Igor Bobriakov](https://medium.com/@ibobriakov), ActiveWizards**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Top 15 Scala Libraries for Data Science in 2018](../Images/b287610e48299e0a92035b8c47803d9c.png)'
  prefs: []
  type: TYPE_IMG
- en: In our previous articles, we have discussed the [top Python libraries for data
    science](https://activewizards.com/blog/top-15-libraries-for-data-science-in-python/).
    This time we will focus on Scala, which has recently become another prominent
    language for data scientists. It has gained popularity mostly due to the rise
    of Spark, a big data processing engine of choice, which is written in Scala and
    thus provides native API in Scala.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: We will not go into an in-depth comparison of Scala vs. Python here, but it’s
    important to note, that, unlike Python, Scala is a compiled language. Hence the
    code written in it gets executed much faster (comparing to pure Python, and not
    specialized libraries like NumPy).
  prefs: []
  type: TYPE_NORMAL
- en: In contrast to Java, writing in Scala is much more enjoyable, since the same
    logic can usually be expressed with the significantly smaller number of lines.
    Scala’s functionality is in no way inferior to that of Java and even has some
    properties that are more advanced. Java-old-timers could provide a lot of counter-arguments
    here, but there is no doubt that Scala is much better suited for data science
    tasks.
  prefs: []
  type: TYPE_NORMAL
- en: Currently, Python and R remain the leading languages for rapid data analysis,
    as well as building, exploring, and manipulating powerful models, while Scala
    is becoming the key language in the development of functional products that work
    with big data, as the latter need stability, flexibility, high speed, scalability,
    etc. Often, in a research phase, analysis and models are done in Python and then
    implemented in Scala during production.
  prefs: []
  type: TYPE_NORMAL
- en: For your convenience, we have prepared a comprehensive overview of the most
    important libraries used to perform machine learning and Data Science tasks in
    Scala. We will use analogies with the corresponding Python tools for better understanding
    of some important aspects. In fact, there is just one top-level comprehensive
    tool that forms the basis for the development of data science and big data solutions
    in Scala, known as Apache Spark, that is supplemented by a wide range of libraries
    and instruments written in both Scala and Java. Let's take a closer look at it.
  prefs: []
  type: TYPE_NORMAL
- en: '**Data analysis and math**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**[Breeze](http://www.scalanlp.org/) (Commits: 3316, Contributors: 84)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Breeze is known as the primary scientific computing library for Scala. It scoops
    up ideas from MATLAB''s data structures and the NumPy classes for Python. Breeze
    provides fast and efficient  manipulations with data arrays, and enables the implementation
    of many other operations, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Matrix and vector operations** for creating, transposing, filling with numbers,
    conducting element-wise operations, inversion, calculating determinants, and much
    more other options to meet almost every need.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Probability and statistic functions,** that vary from statistical distributions
    and calculating descriptive statistics (such as mean, variance and standard deviation)
    to Markov chain models.  The primary packages for statistics are `breeze.stats` and `breeze.stats.distributions`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Optimization,** which implies investigation of the function for a local or
    global minimum. Optimization methods are stored in the `breeze.optimize package. `'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Linear algebra:** all basic operations rely on the netlib-java library, making
    Breeze extremely fast for algebraic computations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Signal processing operations,** necessary for work with digital signals.
    The examples of important operations in Breeze are convolution and Fourier transformation,
    which decomposes the given function into a sum of sine and cosine components.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Breeze also provides plotting possibilities which we will discuss below.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Saddle ](https://saddle.github.io/)(Commits: 184, Contributors: 10)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Another data manipulation toolkit for Scala is Saddle. It is a Scala analog
    of R and Python's pandas library. Like the dataframes in pandas or R, Saddle is
    based on the Frame structure (2D indexed matrix).
  prefs: []
  type: TYPE_NORMAL
- en: 'In total, there are five major data structures, namely:'
  prefs: []
  type: TYPE_NORMAL
- en: Vec (1D vector)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/3ee46085715b7f21c0763a21c9fbb3c7.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Mat (2D matrix)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/2f7061b11192098f184b4940fea16a72.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Series (1D indexed matrix)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/de1753148e1b89c1e7e4771c15d2f1f1.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Frame (2D indexed matrix)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/d72029b765138435ac4ce5a70a6e027c.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Index (hashmap-like)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/ed4b44af4d247bfa6796ac23b47bbcc4.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: The Vec and Mat classes are at the base of Series and Frame. You can implement
    different manipulations on these data structures, and use them for basic data
    analysis. Another great thing about Saddle is its robustness to missing values.
    /span>
  prefs: []
  type: TYPE_NORMAL
- en: '**[Scalalab ](https://github.com/sterglee/scalalab)(Commits: 23, Contributors:
    1)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: ScalaLab is a Scala’s interpretation of MATLAB computing functionality. Moreover,
    ScalaLab can directly call and access the results of MATLAB scripts.
  prefs: []
  type: TYPE_NORMAL
- en: The main difference from the previous computation libraries is that ScalaLab
    uses its own domain-specific language called ScalaSci. Conveniently, Scalalab
    gets access to the variety of scientific Java and Scala libraries, so you can
    easily import your data and then use different methods to make manipulations and
    computations. Most of the techniques are similar to Breeze and Saddle. In addition,
    as in Breeze, there are plotting opportunities which allow further interpretation
    of the resulting data.
  prefs: []
  type: TYPE_NORMAL
- en: '**NLP**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**[Epic ](http://www.scalanlp.org/)(Commits: 1790, Contributors: 15) & Puck
    (Commits: 536, Contributors: 1)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Scala has some great natural language processing libraries as a part of ScalaNLP,
    including Epic and Puck. These libraries are mostly used as text parsers, with
    Puck being more convenient if you need to parse thousands of sentences due to
    its high-speed and GPU usage. Also, Epic is known as a prediction framework which
    employs structured prediction for building complex systems.
  prefs: []
  type: TYPE_NORMAL
- en: '**Visualization**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**[Breeze-vis](https://github.com/scalanlp/breeze/tree/master/viz) (Commits:
    29, Contributors: 3)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As the name suggests, Breeze-viz is the plotting library developed by Breeze
    for Scala. It is based on the prominent Java charting library JFreeChart and has
    a MATLAB-like syntax. Although Breeze-viz has much fewer opportunities than MATLAB,
    matplotlib in Python, or R, it is still very helpful in the process of developing
    and establishing new models.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7e4816a19280745f613df9eb29217cd7.png)'
  prefs: []
  type: TYPE_IMG
- en: '**[Vegas ](https://www.vegas-viz.org/)(Commits: 210, Contributors: 14)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Another Scala lib for data visualization is Vegas. It is much more functional
    than Breeze-viz and allows to make some plotting specifications such as filtering,
    transformations, and aggregations. It is similar in structure to Python’s Bokeh
    and Plotly.
  prefs: []
  type: TYPE_NORMAL
- en: Vegas provides declarative visualization that allows you to focus mainly on
    specifying what needs to be done with the data and conducting further analysis
    of the visualizations, without having to worry about the code implementation.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/08e7c8e55717bf06849dc012d606ecdd.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Machine Learning**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**[Smile ](https://haifengl.github.io/smile/)(Commits: 1019, Contributors:
    21)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Statistical Machine Intelligence and Learning Engine, or shortly Smile, is a
    promising modern machine learning system in some ways similar to Python’s scikit-learn.
    It is developed in Java and offers an API for Scala too. The library will amaze
    you with fast and extensive applications, efficient memory usage and a large set
    of machine learning algorithms for Classification, Regression, Nearest Neighbor
    Search, Feature Selection, etc.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3d412b1bd73341b08fe2cf3cdba304c2.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](../Images/6009473d6743e7259c7434a71c5f43cf.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Apache Spark MLlib & ML **'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Built on top of Spark, MLlib library provides a vast variety of machine learning
    algorithms. Being written in Scala, it also provides highly functional API for
    Java, Python, and R, but opportunities for Scala are more flexible. The library
    consists of two separate packages: MLlib and ML. Let’s look at them in more detail
    one by one.'
  prefs: []
  type: TYPE_NORMAL
- en: MLlib is an RDD-based library that contains core machine learning algorithms
    for classification, clustering, unsupervised learning techniques supported by
    tools for implementing basic statistics such as correlations, hypothesis testing,
    and random data generation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ML is a newer library which, unlike MLlib, operates on data frames and datasets.
    The main purpose of the library is to give the ability to construct pipelines
    of different transformations on your data. The pipeline can be considered as a
    sequence of stages, where each stage is either a Transformer, that transforms
    one data frame into another data frame or an Estimator, an algorithm that can
    fit on a data frame to produce a Transformer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each package has its pros and cons and, in practice, it often proves more effective
    to apply both.
  prefs: []
  type: TYPE_NORMAL
- en: '**[DeepLearning.scala](http://deeplearning.thoughtworks.school/) (Commits:
    1647, Contributors: 14)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: DeepLearning.scala is an alternative machine learning toolkit that provides
    efficient solutions for deep learning. It utilizes mathematical formulas to create
    complex dynamic neural networks through a combination of object-oriented and functional
    programming. The library uses a wide range of types, as well as applicative type
    classes. The latter allows commencing multiple calculations simultaneously, which
    we consider crucial to have in a data scientist’s disposal. It’s worth mentioning
    that the library’s neural networks are programs and support all of Scala features.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Summing Bird](https://github.com/twitter/summingbird) (Commits: 1772, Contributors:
    31)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Summingbird is a domain-specific data processing framework which allows integration
    of batch and online MapReduce computations as well as the hybrid batch/online
    processing mode. The main catalyzer for designing the language came from Twitter
    developers who were often dealing with writing the same code twice: first for
    batch processing, then once more for online processing.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Summingbird consumes and generates two types of data: streams (infinite sequences
    of tuples), and snapshots regarded as the complete state of a dataset at some
    point in time. Finally, Summingbird provides platform implementations for Storm,
    Scalding, and an in-memory execution engine for testing purposes.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[PredictionIO](http://predictionio.incubator.apache.org/index.html) (Commits:
    4343, Contributors: 125)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Of course, we can not ignore a machine learning server for constructing and
    deploying predictive engines called PredictionIO. It is built on Apache Spark,
    MLlib, and HBase and was even ranked on Github as the most popular Apache Spark-based
    machine learning product. It enables you to easily and efficiently build, evaluate
    and deploy engines, implement your own machine learning models, and incorporate
    them into your engine.
  prefs: []
  type: TYPE_NORMAL
- en: '**Additional**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**[Akka](https://akka.io/) (Commits: 21430, Contributors: 467)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Developed by the Scala’s creator company, Akka is a concurrent framework for
    building distributed applications on a JVM. It uses an actor-based model, where
    an actor represents an object that receives messages and takes appropriate actions.
    Akka replaces the functionality of the Actor class that was available in the previous
    Scala versions.
  prefs: []
  type: TYPE_NORMAL
- en: The main difference, also considered as the most significant improvement, is
    the additional layer between the actors and the underlying system which only requires
    the actors to process messages, while the framework handles all other complications.
    All actors are hierarchically arranged, thus creating an Actor System which helps
    actors to interact with each other more efficiently and solve complex problems
    by dividing them into smaller tasks.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Spray](http://spray.io/) (Commits: 2663, Contributors: 74)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now let’s take a look at Spray -  a suite of Scala libraries for constructing
    REST/HTTP web services built on top of Akka. It assures asynchronous, non-blocking
    actor-based high-performance request processing, while the internal Scala DSL
    provides a defining web service behavior, as well as efficient and convenient
    testing capabilities.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Slick ](http://slick.lightbend.com/)(Commits: 1940, Contributors: 92)**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Last but not least on our list is Slick, which stands for Scala Language-Integrated
    Connection Kit. It is a library for creating and executing database queries that
    offer a variety of supported databases such as H2, MySQL, PostgreSQL, etc. Some
    databases are available via slick-extensions.
  prefs: []
  type: TYPE_NORMAL
- en: To build queries, Slick provides a powerful DSL, which makes the code look as
    if you were using the Scala collections. Slick supports both simple SQL queries,
    and strongly-typed joins of several tables. Moreover, simple subqueries can be
    used to construct more complex ones.
  prefs: []
  type: TYPE_NORMAL
- en: '**Conclusion**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this article, we have outlined some of the Scala libraries that can be very
    useful while performing major data scientific tasks. They have proved to be highly
    helpful and effective for achieving the best results. You can also view the activity
    statistics taken from GitHub on every provided library below.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f26b046cd20e2cb81a19e7f0722850c3.png)'
  prefs: []
  type: TYPE_IMG
- en: Source: [Google Spreadsheet](https://docs.google.com/spreadsheets/d/1wLOtLLJ65QMbLumc3F2Mop_4uPIFbyJ6iDZwOp0cXrQ)
  prefs: []
  type: TYPE_NORMAL
- en: Please note, that the list mentioned above is not comprehensive, and a lot of
    other tools suitable for different use cases are available on the market. If you
    have some positive experience with any other useful Scala libraries or frameworks
    that are worth adding to this list, please feel free to share them in the comment
    section below.
  prefs: []
  type: TYPE_NORMAL
- en: Thank you very much for your attention and cooperation!
  prefs: []
  type: TYPE_NORMAL
- en: '&nbsp'
  prefs: []
  type: TYPE_NORMAL
- en: '![Author](../Images/141918280a7bec080378e3b4edaefcf7.png)**Bio: [Igor Bobriakov](https://medium.com/@ibobriakov)**
    is data scientist and technology entrepreneur. He helps innovative startups to
    implement data science initiatives serving as advisor for [ActiveWizards](http://activewizards.com)
    machine learning company. Also he helps to develop educational programs for [Data
    Science School](http://datascience-school.com).'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://activewizards.com/blog/top-15-scala-libraries-for-data-science/).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Top 15 Python Libraries for Data Science in 2017](/2017/06/top-15-python-libraries-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Best Python Packages for Data Science](/2017/05/best-python-packages-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top 20 Python Machine Learning Open Source Projects, updated](/2016/11/top-20-python-machine-learning-open-source-updated.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Top 38 Python Libraries for Data Science, Data Visualization &…](https://www.kdnuggets.com/2020/11/top-python-libraries-data-science-data-visualization-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Hyperparameter Optimization: 10 Top Python Libraries](https://www.kdnuggets.com/2023/01/hyperparameter-optimization-10-top-python-libraries.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Guide to Top Natural Language Processing Libraries](https://www.kdnuggets.com/2023/04/guide-top-natural-language-processing-libraries.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python Libraries Data Scientists Should Know in 2022](https://www.kdnuggets.com/2022/04/python-libraries-data-scientists-know-2022.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Python Libraries for Data Cleaning](https://www.kdnuggets.com/2023/03/introduction-python-libraries-data-cleaning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Level 50 Data Scientist: Python Libraries to Know](https://www.kdnuggets.com/level-50-data-scientist-python-libraries-to-know)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
