["```py\n**Output:**\nThe values stored in the variables:\ntf.Tensor( [[1\\. 2.]  \n            [1\\. 2.]], shape=(2, 2), dtype=float32)The values stored in the variables:\n[[1\\. 2.]\n[1\\. 2.]]\n```", "```py\n**Output:**\nThe name of the variable:  Variable:0\n```", "```py\n**Output:**\nThe selected datatype for the variable:  <dtype: 'float32'>\n```", "```py\n**Output:**\nThe shape of the variable:  (2, 2)\nThe number of dimensions in the variable: 2\nThe number of dimensions in the variable: 4\n```", "```py\nAddition by 2:\ntf.Tensor( [[3\\. 4.]  [3\\. 4.]], shape=(2, 2), dtype=float32)Substraction by 2:\ntf.Tensor( [[-1\\.  0.]  [-1\\.  0.]], shape=(2, 2), dtype=float32)\n```", "```py\nMultiplication by 2:\ntf.Tensor( [[2\\. 4.]  [2\\. 4.]], shape=(2, 2), dtype=float32)Division by 2:\ntf.Tensor( [[0.5 1\\. ]  [0.5 1\\. ]], shape=(2, 2), dtype=float32)\n```", "```py\nMatmul operation with itself:\ntf.Tensor( [[3\\. 6.]  [3\\. 6.]], shape=(2, 2), dtype=float32)Modulo operation by 2:\ntf.Tensor( [[1\\. 0.]  [1\\. 0.]], shape=(2, 2), dtype=float32)\n```", "```py\n**Note:** These operators also work on regular Tensor objects.\n```", "```py\n**Output:**\n...array([[  2., 100.],\n          [  1.,  10.]],...\n```", "```py\n**Output:**\nThe 1st element of the first level is: [1\\. 2.]\nThe 2nd element of the first level is: [1\\. 2.]\nThe 1st element of the second level is: 1.0\nThe 3rd element of the second level is: 2.0\n```", "```py\ntf.Tensor([[ 5 10]\n           [15 20]], shape=(2, 2), dtype=int32)\n```", "```py\ntf.Tensor( [[1.]\n            [2.]\n            [1.]\n            [2.]], shape=(4, 1), dtype=float32)\n```", "```py\nThe device which process the variable:   /job:localhost/replica:0/task:0/device:GPU:0\n```", "```py\n**Output:**\nThe device which processes the variable a: /job:localhost/replica:0/task:0/device:CPU:0The device which processes the variable b: /job:localhost/replica:0/task:0/device:CPU:0The device which processes the calculation: /job:localhost/replica:0/task:0/device:GPU:0\n```"]