- en: Using FastAPI for Building ML-Powered Web Apps
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 FastAPI 构建机器学习驱动的 Web 应用程序
- en: 原文：[https://www.kdnuggets.com/using-fastapi-for-building-ml-powered-web-apps](https://www.kdnuggets.com/using-fastapi-for-building-ml-powered-web-apps)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/using-fastapi-for-building-ml-powered-web-apps](https://www.kdnuggets.com/using-fastapi-for-building-ml-powered-web-apps)
- en: '![Using FastAPI for Building ML-Powered Web Apps](../Images/5b448008c0130c7f814d58853423007f.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![使用 FastAPI 构建机器学习驱动的 Web 应用程序](../Images/5b448008c0130c7f814d58853423007f.png)'
- en: Image by Author | Canva
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供 | Canva
- en: In this tutorial, we will learn a little bit about FastAPI and use it to build
    an API for Machine Learning (ML) model inference. We will then use Jinja2 templates
    to create a proper web interface. This is a short but fun project that you can
    build on your own with limited knowledge about APIs and web development.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将学习一些关于 FastAPI 的知识，并用它来构建机器学习（ML）模型推理的 API。然后，我们将使用 Jinja2 模板创建一个合适的
    web 界面。这是一个简短但有趣的项目，你可以在有限的 API 和 web 开发知识的基础上自行构建。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业的快车道。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 在 IT 领域支持你的组织'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: What is FastAPI?
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是 FastAPI？
- en: '[FastAPI](https://fastapi.tiangolo.com/#installation) is a popular and modern
    web framework used for building APIs with Python. It is designed to be fast and
    efficient, leveraging Python''s standard type hints to provide the best development
    experience. It is easy to learn and requires only a few lines of code to develop
    high-performance APIs. FastAPI is widely used by companies such as Uber, Netflix,
    and Microsoft to build APIs and applications. Its design makes it particularly
    suitable for creating API endpoints for machine learning model inference and testing.
    We can even build a proper web application by integrating Jinja2 templates.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[FastAPI](https://fastapi.tiangolo.com/#installation) 是一个流行且现代的 web 框架，用于用
    Python 构建 API。它旨在快速高效地利用 Python 的标准类型提示来提供最佳的开发体验。它易于学习，只需少量代码即可开发高性能的 API。FastAPI
    被 Uber、Netflix 和微软等公司广泛使用来构建 API 和应用程序。其设计使其特别适合创建机器学习模型推理和测试的 API 端点。我们甚至可以通过集成
    Jinja2 模板来构建一个合适的 web 应用程序。'
- en: Model Training
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型训练
- en: We will train the Random Forest classifier on the most popular Iris dataset.
    After training is complete, we will display model evaluation metrics and save
    the model in pickle format.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将对最受欢迎的 Iris 数据集进行随机森林分类器的训练。训练完成后，我们将显示模型评估指标并将模型保存为 pickle 格式。
- en: '**train_model.py:**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**train_model.py:**'
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Building the ML API using the FastAPI
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 FastAPI 构建机器学习 API
- en: Next, we will install FastAPI and the Unicorn library, which we are going to
    use to build a model inference API.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将安装 FastAPI 和 Unicorn 库，我们将使用它们来构建模型推理 API。
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In the `app.py` file, we will:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `app.py` 文件中，我们将：
- en: Load the saved model from the previous step.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从上一步加载保存的模型。
- en: Create the Python class for inputs and prediction. Make sure you specify the
    dtype.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建用于输入和预测的 Python 类。确保指定数据类型。
- en: Then, we will create the predict function and use the `@app.post` decorator.
    The decorator defines a POST endpoint at the URL path `/predict`. The function
    will be executed when a client sends a POST request to this endpoint.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将创建预测函数并使用 `@app.post` 装饰器。这个装饰器在 URL 路径 `/predict` 定义了一个 POST 端点。当客户端向此端点发送
    POST 请求时，该函数将被执行。
- en: The predict function takes the values from the `IrisInput` class and returns
    them as the `IrisPrediction` class.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预测函数从 `IrisInput` 类中获取值，并将其作为 `IrisPrediction` 类返回。
- en: Run the app using the `uvicorn.run` function and provide it with the host IP
    and port number as shown below.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `uvicorn.run` 函数运行应用程序，并提供主机 IP 和端口号，如下所示。
- en: '**app.py: **'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**app.py:**'
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Run the Python file.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 Python 文件。
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The FastAPI server is running, and we can access it by clicking on the link.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: FastAPI 服务器正在运行，我们可以通过点击链接访问它。
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: It will take us to the browsers with the index page. We have nothing on the
    index page, just on the `/predict` POST request. That’s why nothing is shown.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 它将带我们到包含首页的浏览器。首页上没有任何内容，只有 `/predict` POST 请求。因此没有显示任何内容。
- en: '![Using FastAPI for Building ML-Powered Web Apps](../Images/63ba9e5daeb413a42543816bf9c46e5c.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![使用 FastAPI 构建 ML 驱动的 Web 应用](../Images/63ba9e5daeb413a42543816bf9c46e5c.png)'
- en: We can test our API by using the SwaggerUI interface. We can access it by adding
    “/docs” after the link.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过 SwaggerUI 界面测试我们的 API。我们可以通过在链接后添加 “/docs” 来访问它。
- en: '![Using FastAPI for Building ML-Powered Web Apps](../Images/15c7f9263685e74877f042bb2f24a4a1.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![使用 FastAPI 构建 ML 驱动的 Web 应用](../Images/15c7f9263685e74877f042bb2f24a4a1.png)'
- en: We can click the “/predict” option, edit the value, and run the prediction.
    In the end, we will get the response in the response body section. As we can see,
    we got “Virginica” as a result. We can test our model with direct values within
    the SwaggerUI and ensure it is working properly before deploying it to production.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以点击“/predict”选项，编辑值并运行预测。最后，我们将在响应体部分获得响应。如我们所见，结果是“Virginica”。我们可以通过 SwaggerUI
    直接测试模型，并确保它在部署到生产环境之前正常工作。
- en: '![Using FastAPI for Building ML-Powered Web Apps](../Images/7328411b610ea66be27e54d1ed066fad.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![使用 FastAPI 构建 ML 驱动的 Web 应用](../Images/7328411b610ea66be27e54d1ed066fad.png)'
- en: Build a UI for the Web Application
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为 Web 应用构建用户界面
- en: Instead of using Swagger UI, we will create our own user interface that is simple
    and displays results like any other web application. To achieve this, we need
    to integrate Jinja2Templates within our app. Jinja2Templates allows us to build
    a proper web interface using HTML files, enabling us to customize various components
    of the webpage.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建自己的用户界面，简单易用，像其他 Web 应用一样显示结果，而不是使用 Swagger UI。为此，我们需要在应用中集成 Jinja2Templates。Jinja2Templates
    允许我们使用 HTML 文件构建一个合适的 Web 界面，使我们能够自定义网页的各种组件。
- en: Initiate Jinja2Templates by providing it the directory where HTML files will
    be.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过提供 HTML 文件所在的目录来初始化 Jinja2Templates。
- en: Define an asynchronous route that serves the "index.html" template as an HTML
    response for the root URL ("/").
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义一个异步路由，作为对根 URL ("/") 的 HTML 响应服务 "index.html" 模板。
- en: Making changes to the input argument of the `predict` function using Request
    and Form.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改 `predict` 函数的输入参数，使用 Request 和 Form。
- en: Defines an asynchronous POST endpoint "/predict" that accepts form data for
    iris flower measurements, uses a machine learning model to predict the iris species,
    and returns the prediction results rendered in "result.html" using TemplateResponse.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义了一个异步 POST 端点 "/predict"，接受用于鸢尾花测量的表单数据，使用机器学习模型预测鸢尾花种类，并返回使用 TemplateResponse
    渲染的 "result.html" 预测结果。
- en: The rest of the code is similar.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 其余的代码类似。
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Next, we will create a directory named `templates` in the same directory as
    `app.py`. Inside the `templates` directory, create two HTML files: `index.html`
    and `result.html`.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将在与 `app.py` 相同的目录下创建一个名为 `templates` 的目录。在 `templates` 目录下创建两个 HTML 文件：`index.html`
    和 `result.html`。
- en: If you are a web developer, you will easily understand the HTML code. For beginners,
    I will explain what is happening. This HTML code creates a web page with a form
    for predicting iris flower species. It allows users to input "Sepal" and "Petal"
    measurements and submit them via a POST request to the "/predict" endpoint.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是 Web 开发人员，你将很容易理解 HTML 代码。对于初学者，我会解释发生了什么。这段 HTML 代码创建了一个用于预测鸢尾花种类的网页，允许用户输入
    "Sepal" 和 "Petal" 的测量值，并通过 POST 请求将其提交到 "/predict" 端点。
- en: '**index.html:**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**index.html:**'
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The `result.html` code defines a web page that displays the prediction results,
    showing the inputted sepal and petal measurements and the predicted iris species.
    It also displays the prediction class name with class ID and has a button that
    will take you to the index page.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`result.html` 代码定义了一个显示预测结果的网页，展示输入的花萼和花瓣测量值以及预测的鸢尾花种类。它还显示了预测的类别名称和类别 ID，并有一个按钮可以带你回到首页。'
- en: '**result.html:**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**result.html:**'
- en: '[PRE9]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Run the Python app file again.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行 Python 应用文件。
- en: '[PRE10]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: When you click on the link, you won't see the empty screen; instead, you will
    see the user interface where you can enter the "Sepal" and "Petal" length and
    width.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当你点击链接时，你不会看到空白屏幕；相反，你将看到用户界面，你可以在其中输入 "Sepal" 和 "Petal" 的长度和宽度。
- en: '![Using FastAPI for Building ML-Powered Web Apps](../Images/d5a557758d45dd147d7fed0798c59073.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![使用 FastAPI 构建 ML 驱动的 Web 应用](../Images/d5a557758d45dd147d7fed0798c59073.png)'
- en: After clicking the "Predict" button, you will be taken to the next page, where
    the results will be displayed. You can click on the "Predict Again" button to
    test your model with different values.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“预测”按钮后，你将被带到下一页，在那里结果将会显示。你可以点击“再次预测”按钮来用不同的值测试你的模型。
- en: '![Using FastAPI for Building ML-Powered Web Apps](../Images/3ea7ae08af0ae0c1b872a15a209ae326.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![使用 FastAPI 构建 ML 驱动的 Web 应用](../Images/3ea7ae08af0ae0c1b872a15a209ae326.png)'
- en: All the source code, data, model, and information are available at the [kingabzpro/FastAPI-for-ML](https://github.com/kingabzpro/FastAPI-for-ML)
    GitHub repository. Please don't forget to star ⭐ it.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 所有源代码、数据、模型和信息都可以在 [kingabzpro/FastAPI-for-ML](https://github.com/kingabzpro/FastAPI-for-ML)
    GitHub 仓库中找到。请不要忘记给它加星 ⭐。
- en: Conclusion
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: Many large companies are now using FastAPI to create endpoints for their models,
    allowing them to deploy and integrate these models seamlessly across their systems.
    FastAPI is fast, easy to code, and comes with a variety of features that meet
    the demands of the modern data stack. The key to landing a job in this area is
    to build and document as many projects as possible. This will help you gain the
    experience and knowledge necessary for the initial screening sessions. Recruiters
    will evaluate your profile and portfolio to determine if you are a good fit for
    their team. So, why not start building projects using FastAPI today?
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 许多大公司现在使用 FastAPI 为他们的模型创建端点，使他们能够在系统中无缝地部署和集成这些模型。FastAPI 快速、易于编写代码，并且提供了各种功能以满足现代数据堆栈的需求。在这个领域获得工作的关键是尽可能多地构建和记录项目。这将帮助你获得进行初步筛选所需的经验和知识。招聘人员将评估你的个人资料和作品集，以确定你是否适合他们的团队。那么，为什么不从今天开始使用
    FastAPI 构建项目呢？
- en: '[](https://www.polywork.com/kingabzpro)****[Abid Ali Awan](https://www.polywork.com/kingabzpro)****
    ([@1abidaliawan](https://www.linkedin.com/in/1abidaliawan)) is a certified data
    scientist professional who loves building machine learning models. Currently,
    he is focusing on content creation and writing technical blogs on machine learning
    and data science technologies. Abid holds a Master''s degree in technology management
    and a bachelor''s degree in telecommunication engineering. His vision is to build
    an AI product using a graph neural network for students struggling with mental
    illness.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://www.polywork.com/kingabzpro)****[Abid Ali Awan](https://www.polywork.com/kingabzpro)****
    ([@1abidaliawan](https://www.linkedin.com/in/1abidaliawan)) 是一名认证的数据科学专业人士，热衷于构建机器学习模型。目前，他专注于内容创作和撰写关于机器学习和数据科学技术的技术博客。Abid
    拥有技术管理硕士学位和电信工程学士学位。他的愿景是使用图神经网络构建一个 AI 产品，帮助那些在心理健康方面遇到困难的学生。'
- en: More On This Topic
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Meet MetaGPT: The ChatGPT-Powered AI Assistant That Turns Text Into…](https://www.kdnuggets.com/meet-metagpt-the-chatgptpowered-ai-assistant-that-turns-text-into-web-apps)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[认识 MetaGPT：将文本转换为…的 ChatGPT 驱动 AI 助手](https://www.kdnuggets.com/meet-metagpt-the-chatgptpowered-ai-assistant-that-turns-text-into-web-apps)'
- en: '[Building Data Pipelines to Create Apps with Large Language Models](https://www.kdnuggets.com/building-data-pipelines-to-create-apps-with-large-language-models)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[构建数据管道以创建大型语言模型应用](https://www.kdnuggets.com/building-data-pipelines-to-create-apps-with-large-language-models)'
- en: '[Beginner’s Guide to Building LLM Apps with Python](https://www.kdnuggets.com/beginners-guide-to-building-llm-apps-with-python)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[初学者的 Python 构建 LLM 应用指南](https://www.kdnuggets.com/beginners-guide-to-building-llm-apps-with-python)'
- en: '[A Beginner’s Guide to Web Scraping Using Python](https://www.kdnuggets.com/2022/10/beginner-guide-web-scraping-python.html)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 的网页抓取初学者指南](https://www.kdnuggets.com/2022/10/beginner-guide-web-scraping-python.html)'
- en: '[FastAPI Tutorial: Build APIs with Python in Minutes](https://www.kdnuggets.com/fastapi-tutorial-build-apis-with-python-in-minutes)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[FastAPI 教程：几分钟内使用 Python 构建 API](https://www.kdnuggets.com/fastapi-tutorial-build-apis-with-python-in-minutes)'
- en: '[Python Vector Databases and Vector Indexes: Architecting LLM Apps](https://www.kdnuggets.com/2023/08/python-vector-databases-vector-indexes-architecting-llm-apps.html)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 向量数据库与向量索引：LLM 应用架构](https://www.kdnuggets.com/2023/08/python-vector-databases-vector-indexes-architecting-llm-apps.html)'
