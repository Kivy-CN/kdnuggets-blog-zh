- en: NumPy with Pandas for More Efficient Data Analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/numpy-with-pandas-for-more-efficient-data-analysis](https://www.kdnuggets.com/numpy-with-pandas-for-more-efficient-data-analysis)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![NumPy with Pandas for More Efficient Data Analysis](../Images/966f0eb71db7a03f3a0f947532966a6a.png)[Image
    by jcomp on Freepik](https://www.freepik.com/free-vector/big-isolated-employee-working-office-workplace-flat-illustration_13744784.htm#fromView=search&page=1&position=26&uuid=c476a51c-f7d1-4d92-91d6-9107c4785ea2)'
  prefs: []
  type: TYPE_IMG
- en: As a data person, Pandas is a go-to package for any data manipulation activity
    because it’s intuitive and easy to use. That’s why many data science education
    include Pandas in their learning curriculum.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Pandas are built on the NumPy package, especially the NumPy array. Many NumPy
    functions and methodologies still work well with them, so we can use NumPy to
    effectively improve our data analysis with Pandas.
  prefs: []
  type: TYPE_NORMAL
- en: This article will explore several examples of how NumPy can help our Pandas
    data analysis experience.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s get into it.
  prefs: []
  type: TYPE_NORMAL
- en: Pandas Data Analysis Improvement with NumPy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before proceeding with the tutorial, we should have all the required packages
    installed. If you haven’t done so, you can install Pandas and NumPy using the
    following code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: We can start by explaining how Pandas and NumPy are connected. As mentioned
    above, Pandas is built on the NumPy package. Let’s see how they could complement
    each other to improve our data analysis.
  prefs: []
  type: TYPE_NORMAL
- en: First, let’s try to create a NumPy array and Pandas DataFrame with the respective
    packages.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: As you can see in the code above, we can create Pandas DataFrame with a NumPy
    array with the same dimension structure.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we can use NumPy in the Pandas data processing and cleaning steps. For
    example, we can use the NumPy NaN object as the missing data placeholder.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: As you can see in the result above, the NumPy NaN object becomes a synonym with
    any missing data in Pandas.
  prefs: []
  type: TYPE_NORMAL
- en: This code can examine the number of NaN objects in each Pandas DataFrame column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The data collector may represent the missing data values in the DataFrame column
    as strings. If that happens, we can try to replace that string value with a NumPy
    NaN object.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: NumPy can also used for outlier detection. Let’s see how we can do that.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: In the code above, we generate random numbers with NumPy and then create a function
    that detects outliers using the Z-score and sigma rules. The result is the DataFrame
    containing the outlier.
  prefs: []
  type: TYPE_NORMAL
- en: We can perform statistical analysis with Pandas. NumPy could help facilitate
    more efficient analysis during the aggregation process. For example, here is statistical
    aggregation with Pandas and NumPy.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Using NumPy, we can use the statistical analysis function to the Pandas DataFrame
    and acquire aggregate statistics similar to the above output.
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, we will talk about vectorized operations using Pandas and NumPy. Vectorized
    operations are a method of performing operations on the data simultaneously rather
    than looping them individually. The result would be faster and memory-optimized.
  prefs: []
  type: TYPE_NORMAL
- en: For example, we can perform element-wise addition operations between DataFrame
    columns using NumPy.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: We can also transform the DataFrame column via the NumPy mathematical function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: There is also the possibility of conditional replacement with NumPy for Pandas
    DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Those are all the examples we have explored. These functions from NumPy would
    undoubtedly help to improve your Data Analysis process.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This article discusses how NumPy can help improve efficient data analysis using
    Pandas. We have tried to perform data preprocessing, data cleaning, statistical
    analysis, and vectorized operations with Pandas and NumPy.
  prefs: []
  type: TYPE_NORMAL
- en: I hope it helps!
  prefs: []
  type: TYPE_NORMAL
- en: '**[](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**[Cornellius Yudha
    Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**** is a data science
    assistant manager and data writer. While working full-time at Allianz Indonesia,
    he loves to share Python and data tips via social media and writing media. Cornellius
    writes on a variety of AI and machine learning topics.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[How to Perform Memory-Efficient Operations on Large Datasets with Pandas](https://www.kdnuggets.com/how-to-perform-memory-efficient-operations-on-large-datasets-with-pandas)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Create Efficient Combined Data Sources with Tableau](https://www.kdnuggets.com/2022/05/create-efficient-combined-data-sources-tableau.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Use Hugging Face’s Datasets Library for Efficient Data Loading](https://www.kdnuggets.com/how-to-use-hugging-faces-datasets-library-for-efficient-data-loading)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Overview of PEFT: State-of-the-art Parameter-Efficient Fine-Tuning](https://www.kdnuggets.com/overview-of-peft-stateoftheart-parameterefficient-finetuning)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How To Write Efficient Python Code: A Tutorial for Beginners](https://www.kdnuggets.com/how-to-write-efficient-python-code-a-tutorial-for-beginners)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Free MIT Course: TinyML and Efficient Deep Learning Computing](https://www.kdnuggets.com/free-mit-course-tinyml-and-efficient-deep-learning-computing)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
