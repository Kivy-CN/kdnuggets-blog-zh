- en: 10 Useful Machine Learning Practices For Python Developers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/05/10-useful-machine-learning-practices-python-developers.html](https://www.kdnuggets.com/2020/05/10-useful-machine-learning-practices-python-developers.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Pratik Bhavsar](https://www.linkedin.com/in/bhavsarpratik/), Remote NLP
    engineer**.'
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes as a data scientist, we forget what we are paid for. We are primarily
    developers, then researchers, and then maybe mathematicians. Our first responsibility
    is to quickly develop solutions that are bug-free.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_BQ
  - PREF_H2
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '* * *'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Just because we can make models doesn't mean we are gods. It doesn't give us
    the freedom to write crap code.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Since my start, I have made tremendous mistakes and thought of sharing what
    I see to be the most common skills for** ML engineering**. In my opinion, it's
    also the ***most lacking skill*** in the industry right now.
  prefs: []
  type: TYPE_NORMAL
- en: '*I call them **software-illiterate **data scientists because a lot of them
    are non-CS Coursera baptized engineers. And, I myself have been that.* *????*'
  prefs: []
  type: TYPE_NORMAL
- en: If it came to hiring between a great data scientist and a great ML engineer,
    I would hire the latter.
  prefs: []
  type: TYPE_NORMAL
- en: Let's get started.
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Learn to write abstract classes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Once you start writing abstract classes, you will know how much clarity it can
    bring to your codebase. They enforce the same methods and method names. If many
    people are working on the same project, everyone starts making different methods.
    This can create unproductive chaos.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Fix your seed at the top
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Reproducibility of experiments is a very important thing, and seed is our enemy.
    Catch hold of it. Otherwise, it leads to different splitting of train/test data
    and different initialisation of weights in the neural network. This leads to inconsistent
    results.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Get started with a few rows
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If your data is too big and you are working in the later part of the code, like
    cleaning data or modeling, use **nrows** to avoid loading the huge data every
    time. Use this when you want to only test code and not actually run the whole
    thing.
  prefs: []
  type: TYPE_NORMAL
- en: '*This is very applicable when your local PC config is not enough to work with
    the datasize, but you like doing development on local on Jupyter/VS code/Atom.*'
  prefs: []
  type: TYPE_NORMAL
- en: df_train = pd.read_csv(‘train.csv’, ***nrows=1000****)*
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 4\. Anticipate failures (the sign of a mature developer)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Always check for NA in the data because these will cause you problems later.
    Even if your current data doesn't have any, it doesn't mean it will not happen
    in the future retraining loops. So keep checks anyway. ????
  prefs: []
  type: TYPE_NORMAL
- en: '*print(len(df))*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*df.isna().sum()*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*df.dropna()*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*print(len(df))*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 5. Show the progress of processing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you are working with big data, it definitely feels good to know how much
    time is it going to take and where we are in the whole processing.
  prefs: []
  type: TYPE_NORMAL
- en: Option 1 — tqdm
  prefs: []
  type: TYPE_NORMAL
- en: Option 2 — fastprogress
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8fffa61e7c05e72079c7455b78f715ef.png)'
  prefs: []
  type: TYPE_IMG
- en: 6\. Pandas can be slow
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have worked with pandas, you know how slow it can get some times — especially
    groupby. Rather than breaking our heads to find 'great' solutions for speedup,
    just use modin by changing one line of code.
  prefs: []
  type: TYPE_NORMAL
- en: '*import modin.pandas as pd*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 7\. Time the functions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Not all functions are created equal.
  prefs: []
  type: TYPE_NORMAL
- en: Even if the whole code works, it doesn't mean you wrote great code. Some soft-bugs
    can actually make your code slower, and it's necessary to find them. Use this
    decorator to log the time of functions.
  prefs: []
  type: TYPE_NORMAL
- en: 8\. Don't burn money on cloud
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Nobody likes an engineer who wastes cloud resources.
  prefs: []
  type: TYPE_NORMAL
- en: Some of our experiments can run for hours. It's difficult to keep track of it
    and shut down the cloud instance when it's done. I have made mistakes myself and
    have also seen people leaving instances on for days.
  prefs: []
  type: TYPE_NORMAL
- en: '*This happens when we work on Fridays and leave something running and realise
    it on Monday.* *????*'
  prefs: []
  type: TYPE_NORMAL
- en: Just call this function at the end of execution, and your ass will never be
    on fire again!
  prefs: []
  type: TYPE_NORMAL
- en: But wrap the main code in ***try*** and this method again in ***except*** as
    well — so that if an error happens, the server is not left running. Yes, I have
    dealt with these cases too. ????
  prefs: []
  type: TYPE_NORMAL
- en: Let's be a bit responsible and not generate CO2\. ????
  prefs: []
  type: TYPE_NORMAL
- en: 9\. Create and save reports
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: After a particular point in modeling, all great insights come only from error
    and metric analysis. Make sure to create and save well-formatted reports for yourself
    and your manager.
  prefs: []
  type: TYPE_NORMAL
- en: Anyway, management loves reports, right? ????
  prefs: []
  type: TYPE_NORMAL
- en: 10\. Write great APIs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: All that ends bad is bad.
  prefs: []
  type: TYPE_NORMAL
- en: You can do great data cleaning and modeling, but still, you can create huge
    chaos at the end. My experience with people tells me many are not clear about
    how to write good APIs, documentation, and server setup.
  prefs: []
  type: TYPE_NORMAL
- en: '*Below is a good methodology for a classical ML and DL deployment under not
    too high load — like 1000/min.*'
  prefs: []
  type: TYPE_NORMAL
- en: Meet the combo — Fastapi + uvicorn
  prefs: []
  type: TYPE_NORMAL
- en: '**Fastest**— Write the API in **fastapi** because its the fastest for I/O bound
    as per [this](https://www.techempower.com/benchmarks/#section=test&runid=7464e520-0dc2-473d-bd34-dbdfd7e85911&hw=ph&test=query&l=zijzen-7),
    and the reason is explained [here](https://fastapi.tiangolo.com/benchmarks/).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Documentation**— Writing API in fastapi gives us **free documentation** and
    test endpoints at http:url/docs → autogenerated and updated by fastapi as we change
    the code'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Workers**— Deploy the API using **uvicorn**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Run these commands to deploy using 4 workers. Optimise the number of workers
    by load testing.
  prefs: []
  type: TYPE_NORMAL
- en: '*pip install fastapi uvicorn*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*uvicorn main:app --workers 4 --host 0.0.0.0 --port 8000*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/adfb99e05cdbe7f2c47a07e63475684e.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Original](https://medium.com/modern-nlp/10-great-ml-practices-for-python-developers-b089eefc18fc).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Coding habits for data scientists](https://www.kdnuggets.com/2020/05/coding-habits-data-scientists.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[12 Things I Learned During My First Year as a Machine Learning Engineer](https://www.kdnuggets.com/2019/07/12-things-learned-machine-learning-engineer.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Programming Best Practices For Data Science](https://www.kdnuggets.com/2018/08/programming-best-practices-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Why are More Developers Using Python for Their Machine Learning Projects?](https://www.kdnuggets.com/2022/01/developers-python-machine-learning-projects.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Low Code: Are Developers Still Needed?](https://www.kdnuggets.com/2022/04/low-code-developers-still-needed.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[3 Useful Python Automation Scripts](https://www.kdnuggets.com/2022/11/3-useful-python-automation-scripts.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[4 Useful Intermediate SQL Queries for Data Science](https://www.kdnuggets.com/2022/12/4-useful-intermediate-sql-queries-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News, December 7: Top 10 Data Science Myths Busted • 4…](https://www.kdnuggets.com/2022/n47.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Genuinely Useful Bash Scripts for Data Science](https://www.kdnuggets.com/2023/02/bash-scripts-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
