- en: Developing an Open Standard for Analytics Tracking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2022/07/developing-open-standard-analytics-tracking.html](https://www.kdnuggets.com/2022/07/developing-open-standard-analytics-tracking.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'In early 2021, our team of long-time data geeks started on the development
    of [**an open analytics taxonomy**](https://github.com/objectiv/objectiv-analytics).
    The goal: to come up with a generic way to structure analytics data, so models
    built on one data set can be deployed and run on another.'
  prefs: []
  type: TYPE_NORMAL
- en: A Brief History
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: We used to spend our days building models and running in-depth user behavior
    analyses on raw datasets for enterprise clients. Those datasets were mostly collected
    with popular analytics tools like Google Analytics, Mixpanel and Adobe Analytics.
  prefs: []
  type: TYPE_NORMAL
- en: 'Having done this for 50+ clients, one thing in particular started to stand
    out: most clients had very similar analytics goals, but their data sets all looked
    different.'
  prefs: []
  type: TYPE_NORMAL
- en: They all wanted to prevent churn, increase engagement or conversion, personalize
    user experiences, and predict behavior, but every in-house team had made up their
    own event types, naming conventions and ways to structure data. As a result, nothing
    could be reused. Pipelines and models all needed to be built from scratch, and
    significant time was spent to get data into a clean, model-ready state.
  prefs: []
  type: TYPE_NORMAL
- en: At this point in time, we became intrigued with the idea of developing an open
    analytics taxonomy. If goals are so similar, isn’t there a generic way we can
    structure analytics data so that all these common analytics use cases are covered?
    And what would that mean for more specific needs? And, if possible at all, what
    would that look like?
  prefs: []
  type: TYPE_NORMAL
- en: Fast forward to today. After spending countless hours of drafting ideas on whiteboards,
    gathering feedback from fellow data scientists and engineers and running experiments
    with real-life use cases, we’ve come to the point that we’re confident enough
    to start involving a broader audience.
  prefs: []
  type: TYPE_NORMAL
- en: Allow me to show you what we think it could look like, and explain some of the
    design choices that were made.
  prefs: []
  type: TYPE_NORMAL
- en: The Anatomy of the Open Analytics Taxonomy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The [open analytics taxonomy](https://github.com/objectiv/objectiv-analytics)
    is a generic classification of common event types and the contexts in which they
    can happen. It is hierarchical and each event and context type has its own properties,
    requirements and relations.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Anatomy of the Open Analytics Taxonomy](../Images/e5417cbcdbf32ca3a8ca1b5c17927be9.png)'
  prefs: []
  type: TYPE_IMG
- en: Events
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s take a closer look at one of the event classes, the **PressEvent**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![PressEvent](../Images/2241e1a35045acba94b51af0602037a8.png)'
  prefs: []
  type: TYPE_IMG
- en: The **PressEvent** is used to describe when a user clicks or taps (device agnostic)
    an element in a UI. It is a child of the **InteractiveEvent** class, the parent
    of all interactive events.
  prefs: []
  type: TYPE_NORMAL
- en: 'Events are separated into two subclasses: Interactive events and non-interactive
    events. The first type gets triggered by a user, the second type typically gets
    triggered by the application. An example of a **NonInteractiveEvent** is the **MediaStartEvent**,
    which is triggered when audio or video starts playing:'
  prefs: []
  type: TYPE_NORMAL
- en: '![MediaStartEvent](../Images/b9e8c4e2dc23467bf29c7e893674d0f7.png)'
  prefs: []
  type: TYPE_IMG
- en: Contexts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You may have noticed that **Events** require **Contexts**. These contexts provide
    additional information to help you pinpoint from where and in which situation
    an event happened.
  prefs: []
  type: TYPE_NORMAL
- en: 'Like events, contexts are divided into two subclasses: **global contexts**
    and **location contexts**.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Global contexts** contain general information. Examples include user session
    information, app information or details of a marketing campaign an event is related
    to.'
  prefs: []
  type: TYPE_NORMAL
- en: '![ data-lazy-src=](../Images/5a77fefe77fbb5990b30d0115f8180cc.png)'
  prefs: []
  type: TYPE_IMG
- en: Secondly, **location contexts** contain information about *where* an event happened
    in the UI. For example, the **MediaStartEvent** mentioned earlier required a **MediaPlayerContext**
    to pinpoint from where the event originated. In this case, a media player to be
    specific, because of its event class.
  prefs: []
  type: TYPE_NORMAL
- en: '![MediaStartEvent](../Images/4b7a519605a55276b6b2059d3923438c.png)'
  prefs: []
  type: TYPE_IMG
- en: Use Cases & Design Choices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let’s take a look at how it can be used and why we made certain design choices.
  prefs: []
  type: TYPE_NORMAL
- en: Data validation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Having strictly defined classes for event and context types means you can validate
    data at a very early stage. For example, if a **MediaPlayEvent** lacks a **MediaPlayerContext**,
    you can throw an error and choose not to store it (or better: store it somewhere
    else). This will allow you to prevent collection of incomplete or faulty data,
    saving you a lot of time on prepwork for the analysis stage.'
  prefs: []
  type: TYPE_NORMAL
- en: Instrumentation validation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The same principle applies when a front-end developer is instrumenting a tracker
    to collect data. You can validate the tracking instrumentation against the open
    taxonomy to ensure it is set up to capture events as intended, and throw errors
    when conditions aren’t met.
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, our own tracking SDK does this by throwing errors at runtime
    in the browser console, and points you to the documentation to show you how to
    fix it:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Instrumentation validation](../Images/e2063f29889106f2f0640d2d4d340ba0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We also use it to provide inline documentation & linting for validation issues
    in your IDE through TypeScript definitions:'
  prefs: []
  type: TYPE_NORMAL
- en: '![validation issues in your IDE through TypeScript definitions](../Images/ca2ce5be9c0c49a2bb57ef328b732586.png)'
  prefs: []
  type: TYPE_IMG
- en: Feature selection
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: At the analysis stage, having hierarchy and strict typing in your data is very
    useful for feature selection. Sub- and superclasses enable you to quickly select
    events of the type and level you require without manually mapping them first.
  prefs: []
  type: TYPE_NORMAL
- en: 'Want all interactive events? You can do that with one command in your notebook:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Getting only the PressEvents is even simpler:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This is especially powerful in combination with **location contexts**. Let me
    demonstrate how we use them to enable fast feature selection based on the hierarchy
    of your UI.
  prefs: []
  type: TYPE_NORMAL
- en: We ask the instrumenting engineer to enrich the tracking instrumentation by
    tagging logical sections of the UI with **location contexts**. Our tracker then
    generates a **location stack** for each event. It captures the exact location
    where an event was triggered in a hierarchical stack of **location contexts**.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '*An example of an Event’s location stack, captured in the modeling section
    of our Docs*![Objective.io docs](../Images/b31b7bf19675503991ffc75fe06f1459.png)'
  prefs: []
  type: TYPE_NORMAL
- en: The event above was captured when the user clicked the is_new_user tab in the
    sidebar
  prefs: []
  type: TYPE_NORMAL
- en: As your dataset now carries the logical structure of your product, you can use
    it to slice events on a very granular level.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, you can easily select all events with a NavigationContext:'
  prefs: []
  type: TYPE_NORMAL
- en: '![NavigationContext](../Images/6ae947f7527c424985ba99d6e086fbf4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Or to be more specific, those that occurred on the docs sidebar:'
  prefs: []
  type: TYPE_NORMAL
- en: '![docs sidebar](../Images/5ff461aa60caf3ea3ad484e3bb327c51.png)'
  prefs: []
  type: TYPE_IMG
- en: …and so on.
  prefs: []
  type: TYPE_NORMAL
- en: '**The big one: re-use models & tools**'
  prefs: []
  type: TYPE_NORMAL
- en: For us, this is what started it all. Having a strict, common way to structure
    analytics data would mean all data sets become consistent and generic, and as
    a result, models built on one data set can be deployed and run on another.
  prefs: []
  type: TYPE_NORMAL
- en: That user segmentation model you've developed for your Android app? You can
    share that with the team responsible for the iOS app or web app, and they can
    deploy and run it without making changes.
  prefs: []
  type: TYPE_NORMAL
- en: '![They can be run on any dataset that embraces the open analytics taxonomy](../Images/659c137a4aeadea3bcfc7ac0f9f0443c.png)'
  prefs: []
  type: TYPE_IMG
- en: An excerpt from one of our[example notebooks](https://objectiv.io/docs/modeling/example-notebooks/).
    They can be run on any dataset that embraces the open analytics taxonomy.
  prefs: []
  type: TYPE_NORMAL
- en: 'But we think it’s bigger than that. Every day, someone at another company is
    solving the exact same problem in a slightly different way. We would like for
    that to end, and to enable the data space to progress through collaborative effort:
    by enabling you to take what others have already built, improve it, deploy it,
    and if possible, hand it back for someone else to do the same.'
  prefs: []
  type: TYPE_NORMAL
- en: It's early days and we still have a long way to go, but the foundation is here
    and we’re seeing adoption ramp up quickly.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to learn more or get involved, check out the [open analytics taxonomy
    docs](https://objectiv.io/docs/taxonomy/) and the [Objectiv repo on Github](https://github.com/objectiv/objectiv-analytics).
    You can also [join the Objectiv slack channel](https://objectiv.io/join-slack)
    if you have questions or ideas about it.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Ivar Pruijn](https://www.linkedin.com/in/ivarpruijn/)** is co-founder &
    CPO at Objectiv, open-source product analytics infrastructure. He holds an MSc.
    in Telematics from the University of Twente. He spent the majority of his career
    in tech startups and scaleups, and he''s particularly interested in advancing
    the future of the data cloud.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Versioning Machine Learning Experiments vs Tracking Them](https://www.kdnuggets.com/2021/12/versioning-machine-learning-experiments-tracking.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Best Tools for Machine Learning Experiment Tracking](https://www.kdnuggets.com/2023/02/7-best-tools-machine-learning-experiment-tracking.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Removing Outliers Using Standard Deviation in Python](https://www.kdnuggets.com/2017/02/removing-outliers-standard-deviation-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Expert Insights on Developing Safe, Secure, and Trustworthy AI Frameworks](https://www.kdnuggets.com/expert-insights-on-developing-safe-secure-and-trustworthy-ai-frameworks)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A community developing a Hugging Face for customer data modeling](https://www.kdnuggets.com/2022/08/objectiv-community-developing-hugging-face-customer-data-modeling.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Open Assistant: Explore the Possibilities of Open and Collaborative…](https://www.kdnuggets.com/2023/04/open-assistant-explore-possibilities-open-collaborative-chatbot-development.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
