- en: An NLP Approach to Analyzing Twitter, Trump, and Profanity
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NLP 方法分析 Twitter、特朗普与粗俗语言
- en: 原文：[https://www.kdnuggets.com/2016/11/nlp-approach-analyzing-twitter-trump-profanity.html](https://www.kdnuggets.com/2016/11/nlp-approach-analyzing-twitter-trump-profanity.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2016/11/nlp-approach-analyzing-twitter-trump-profanity.html](https://www.kdnuggets.com/2016/11/nlp-approach-analyzing-twitter-trump-profanity.html)
- en: '**By Stephanie Kim, [Algorithmia](https://algorithmia.com/)**.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 Stephanie Kim， [Algorithmia](https://algorithmia.com/)**。'
- en: '![Analyzing Twitter for Profanity](../Images/bb1ea3b1d18c17c34e8ee5cefb33f914.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![分析 Twitter 中的粗俗语言](../Images/bb1ea3b1d18c17c34e8ee5cefb33f914.png)'
- en: Who swears more? Do Twitter users who mention Donald Trump swear more than those
    who mention Hillary Clinton? Let’s find out by taking a natural language processing
    approach (or, NLP for short) to analyzing tweets.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 谁更喜欢骂人？提到特朗普的 Twitter 用户是否比提到希拉里的用户更喜欢使用粗俗语言？让我们通过自然语言处理（简称 NLP）的方法来分析推文，看看结果吧。
- en: This walkthrough will provide a basic introduction to help developers of all
    background and abilities get started with the [NLP microservices](https://algorithmia.com/tags/nlp) available
    on Algorithmia. We’ll show you how to chain them together to perform light analysis
    on unstructured text. Unfamiliar with NLP? Our [gentle introduction to NLP](http://blog.algorithmia.com/2015/09/getting-started-with-natural-language-processing/) will
    help you get started.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本指南将提供基本介绍，帮助所有背景和能力的开发者开始使用 Algorithmia 上的[NLP 微服务](https://algorithmia.com/tags/nlp)。我们将展示如何将它们串联起来，对非结构化文本进行轻度分析。不熟悉
    NLP？我们的[温和 NLP 入门](http://blog.algorithmia.com/2015/09/getting-started-with-natural-language-processing/)将帮助你入门。
- en: We know that getting started with a new platform or developer tool is an investment
    in time and energy. Sometimes it can be hard to find the information you need
    in order to start exploring on your own. That’s why we’ve centralized all our information
    in the [Algorithmia Developer Center](http://developers.algorithmia.com/) and [API
    Docs](http://docs.algorithmia.com/), where users will find helpful hints, code
    snippets, and getting started guides. These guides are designed to help developers
    integrate algorithms into applications and projects, learn how to host their trained
    machine learning models, or build their own algorithms for others to use via an
    API endpoint.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道，开始使用新的平台或开发工具是时间和精力的投资。有时很难找到开始自己探索所需的信息。这就是为什么我们将所有信息集中在[Algorithmia 开发者中心](http://developers.algorithmia.com/)和[API
    文档](http://docs.algorithmia.com/)中，用户可以在这里找到有用的提示、代码片段和入门指南。这些指南旨在帮助开发者将算法集成到应用程序和项目中，学习如何托管他们训练的机器学习模型，或构建自己的算法以供他人通过
    API 端点使用。
- en: Now, let’s tackle a project using some algorithms to retrieve content, and analyze
    it using NLP. What better place to start than Twitter, and analyzing our favorite
    presidential candidates?
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用一些算法来检索内容，并使用 NLP 进行分析。还有什么比 Twitter 更好的起点，以及分析我们最喜爱的总统候选人呢？
- en: 'Twitter, Trump, and Profanity: An NLP Approach'
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Twitter、特朗普与粗俗语言：一种 NLP 方法
- en: 'First, let’s find the Twitter-related algorithms on Algorithmia. Go to the
    search bar on top of the navigation and type in “Twitter”:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们在 Algorithmia 上找到与 Twitter 相关的算法。到导航栏顶部的搜索框中输入“Twitter”：
- en: '[![Search for algorithms.](../Images/22da7c9cc026ec0a5aac0f568af93d9e.png)](http://blog.algorithmia.com/wp-content/uploads/2016/07/search_box.png)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[![搜索算法。](../Images/22da7c9cc026ec0a5aac0f568af93d9e.png)](http://blog.algorithmia.com/wp-content/uploads/2016/07/search_box.png)'
- en: 'You’ll get quite a few results, but find the one called [Retrieve Tweets with
    Keyword](https://algorithmia.com/algorithms/twitter/RetrieveTweetsWithKeyword), and
    check out the algorithm page where it will tell you such information as the algorithm’s
    description, pricing, and the permissions set for this algorithm:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你会得到很多结果，但找到名为[根据关键词检索推文](https://algorithmia.com/algorithms/twitter/RetrieveTweetsWithKeyword)的算法，并查看算法页面，它将告诉你算法的描述、定价以及此算法的权限设置：
- en: '[![Retrieve Tweets With Keyword algorithm](../Images/08d4e6edcf8ba1c7a9e15ed584c8f1f8.png)](http://blog.algorithmia.com/wp-content/uploads/2016/07/twitter_algo_page-1.png)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[![根据关键词检索推文算法](../Images/08d4e6edcf8ba1c7a9e15ed584c8f1f8.png)](http://blog.algorithmia.com/wp-content/uploads/2016/07/twitter_algo_page-1.png)'
- en: The algorithm description provides information about the input and output data
    structures expected, as well as the details regarding any other requirements.
    For instance, Retrieve Tweets with Keyword requires your [Twitter API authentication
    keys](https://dev.twitter.com/oauth/overview).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 算法描述提供了关于期望的输入和输出数据结构的信息，以及任何其他要求的详细信息。例如，按关键字检索推文需要你的[Twitter API 认证密钥](https://dev.twitter.com/oauth/overview)。
- en: At the bottom section of every algorithm page we provide the code samples for
    your input, output, and how to call the algorithm in Python, Rust, Ruby, JavaScript,
    NodeJS, cURL, CLI, Java, or Scala. If you have questions about the details of
    using the Algorithmia API check out the [API docs](http://docs.algorithmia.com/).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个算法页面的底部，我们提供了输入、输出的代码示例，以及如何在 Python、Rust、Ruby、JavaScript、NodeJS、cURL、CLI、Java
    或 Scala 中调用算法。如果你对使用 Algorithmia API 的细节有疑问，请查看[API 文档](http://docs.algorithmia.com/)。
- en: Alright, let’s get started!
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，我们开始吧！
- en: 'Here’s the overall structure of our project:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们项目的整体结构：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You’ll need a free Algorithmia account to complete this project. [Sign up for
    free and receive an extra 10,000 credits](https://algorithmia.com/signup?invite=onTwitter).
    Overall, the project will consist of processing around 700 tweets or so with emoticons
    and other special characters stripped out. This means if a tweet only contained
    URL’s and emoticons then it won’t be analyzed. Once we pull our data from the
    Twitter API, we’ll clean it up with some regex, remove stop words, and then find
    our swear words.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要一个免费的 Algorithmia 账户来完成这个项目。[免费注册并获得额外 10,000 个积分](https://algorithmia.com/signup?invite=onTwitter)。总体而言，该项目将处理大约
    700 条推文，去除表情符号和其他特殊字符。这意味着如果一条推文仅包含 URL 和表情符号，则不会被分析。一旦我们从 Twitter API 中提取数据，我们将使用正则表达式进行清理，去除停用词，然后找到我们的脏话。
- en: 'Step One: Retrieve Tweets by Keyword'
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤一：按关键字检索推文
- en: 'We’ll use the [Retrieve Tweets by Keyword](https://algorithmia.com/algorithms/twitter/RetrieveTweetsWithKeyword) algorithm
    first in order to query tweets from the[Twitter Search API](https://dev.twitter.com/rest/public/search):'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先使用[按关键字检索推文](https://algorithmia.com/algorithms/twitter/RetrieveTweetsWithKeyword)算法来查询来自[Twitter
    搜索 API](https://dev.twitter.com/rest/public/search)的推文：
- en: 'Okay, let’s go over the obvious parts of the code snippet. This algorithm takes
    a nested dictionary called ‘input’ that contains the keys: ‘query’, ‘numTweets’
    and ‘auth’ which is a dictionary itself. The key ‘query’ is set as a global variable
    called q_input and holds the system argument that is passed when executing the
    script. In our case it will hold a presidential nominee name. The key ‘numTweets’
    is set to the number of tweets you want to extract and the dictionary ‘auth’ holds
    the [Twitter authentication keys and tokens](https://dev.twitter.com/oauth/overview) that
    you got from Twitter.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们来看看代码片段中显而易见的部分。这个算法接受一个名为‘input’的嵌套字典，包含键：‘query’，‘numTweets’ 和 ‘auth’，其中‘auth’本身也是一个字典。键‘query’设置为名为
    q_input 的全局变量，并保存执行脚本时传入的系统参数。在我们的例子中，它将保存一个总统候选人的名字。键‘numTweets’设置为你想提取的推文数量，而字典‘auth’保存[Twitter
    认证密钥和令牌](https://dev.twitter.com/oauth/overview)，这些是你从 Twitter 获得的。
- en: As you write the pull_tweets() function, pay attention to the line that sets
    the variable ‘client’ to ‘Algorithmia.client(algorithmia_api_key)’. This is where
    you pass in your API key that you were assigned when you signed up for an account
    with Algorithmia. If you don’t recall where to find that it is in the My Profile page
    in the Credentials section.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当你编写 pull_tweets() 函数时，请注意将变量‘client’设置为‘Algorithmia.client(algorithmia_api_key)’的那一行。在这里，你传入了注册
    Algorithmia 账户时分配给你的 API 密钥。如果你不记得在哪里找到，可以在 My Profile 页面中的 Credentials 部分找到。
- en: Next notice the variable ‘algo.’ This is where we pass in the path to the algorithm
    we’re using. Each algorithm’s documentation will give you the appropriate path
    in the code examples section at the bottom of the algorithm page.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来注意变量‘algo’。这里是我们传递算法路径的位置。每个算法的文档会在算法页面底部的代码示例部分提供适当的路径。
- en: And last, the list comprehension ‘tweet_list’ holds our data after looping through
    the result of the algorithm by passing in our input variable to algo.pipe(input).result.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，列表推导式‘tweet_list’在通过将输入变量传递给 algo.pipe(input).result 循环算法结果后保存我们的数据。
- en: 'Now, you simply write your data to a CSV file that is named after your query.
    Note: if your query is a space separated string, then the script will join the
    query with a dash.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你只需将数据写入一个以你的查询命名的 CSV 文件。注意：如果你的查询是一个空格分隔的字符串，脚本将用短横线连接查询。
- en: '* * *'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全领域的职业道路。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持组织的 IT 需求'
- en: '* * *'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Analyzing Scientific Articles with fine-tuned SciBERT NER Model and Neo4j](https://www.kdnuggets.com/2021/12/analyzing-scientific-articles-finetuned-scibert-ner-model-neo4j.html)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用微调的 SciBERT NER 模型和 Neo4j 分析科学文章](https://www.kdnuggets.com/2021/12/analyzing-scientific-articles-finetuned-scibert-ner-model-neo4j.html)'
- en: '[Data Analytics: The Four Approaches to Analyzing Data and How To…](https://www.kdnuggets.com/2023/04/data-analytics-four-approaches-analyzing-data-effectively.html)'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据分析：四种数据分析方法及其应用……](https://www.kdnuggets.com/2023/04/data-analytics-four-approaches-analyzing-data-effectively.html)'
- en: '[Analyzing the Probability of Future Success with Intelligence…](https://www.kdnuggets.com/2022/02/analyzing-probability-future-success-intelligence-node-attributes-evolution-model.html)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[分析未来成功概率的智能方法……](https://www.kdnuggets.com/2022/02/analyzing-probability-future-success-intelligence-node-attributes-evolution-model.html)'
- en: '[Analyzing Diversity & Inclusion with SQL](https://www.kdnuggets.com/2022/11/analyzing-diversity-inclusion-sql.html)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 SQL 分析多样性和包容性](https://www.kdnuggets.com/2022/11/analyzing-diversity-inclusion-sql.html)'
- en: '[Master the Power of Data Analytics: The Four Approaches to Analyzing Data](https://www.kdnuggets.com/2023/03/master-power-data-analytics-four-approaches-analyzing-data.html)'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[掌握数据分析的力量：四种数据分析方法](https://www.kdnuggets.com/2023/03/master-power-data-analytics-four-approaches-analyzing-data.html)'
- en: '[A Guide On How To Become A Data Scientist (Step By Step Approach)](https://www.kdnuggets.com/2021/05/guide-become-data-scientist.html)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[成为数据科学家的指南（逐步方法）](https://www.kdnuggets.com/2021/05/guide-become-data-scientist.html)'
