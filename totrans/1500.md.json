["```py\n\nconda install -c conda-forge jupyter_contrib_nbextensions\nconda install -c conda-forge jupyter_nbextensions_configurator\n\n```", "```py\n\npip install jupyter_nbextensions_configurator jupyter_contrib_nbextensions\njupyter contrib nbextension install --user\njupyter nbextensions_configurator enable --user\n\n```", "```py\n\n The simplest way to use nbconvert is\n\n    > jupyter nbconvert mynotebook.ipynb\n\n    which will convert mynotebook.ipynb to the default format (probably HTML).\n\n    You can specify the export format with `--to`.\n    Options include ['asciidoc', 'custom', 'hide_code_html', 'hide_code_latex', 'hide_code_pdf', 'hide_code_slides', 'html', 'html_ch', 'html_embed', 'html_toc', 'html_with_lenvs', 'html_with_toclenvs', 'latex', 'latex_with_lenvs', 'markdown', 'notebook', 'pdf', 'python', 'rst', 'script', 'selectLanguage', 'slides', 'slides_with_lenvs']\n\n    > jupyter nbconvert --to latex mynotebook.ipynb\n\n    Both HTML and LaTeX support multiple output templates. LaTeX includes\n    'base', 'article' and 'report'.  HTML includes 'basic' and 'full'. You\n    can specify the flavor of the format used.\n\n    > jupyter nbconvert --to html --template basic mynotebook.ipynb\n\n    You can also pipe the output to stdout, rather than a file\n\n    > jupyter nbconvert mynotebook.ipynb --stdout\n\n    PDF is generated via latex\n\n    > jupyter nbconvert mynotebook.ipynb --to pdf\n\n    You can get (and serve) a Reveal.js-powered slideshow\n\n    > jupyter nbconvert myslides.ipynb --to slides --post serve\n\n    Multiple notebooks can be given at the command line in a couple of\n    different ways:\n\n    > jupyter nbconvert notebook*.ipynb\n    > jupyter nbconvert notebook1.ipynb notebook2.ipynb\n\n    or you can specify the notebooks list in a config file, containing::\n\n        c.NbConvertApp.notebooks = [\"my_notebook.ipynb\"]\n\n    > jupyter nbconvert --config mycfg.py\n\n```"]