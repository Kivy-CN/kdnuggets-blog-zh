- en: How to Perform Matrix Operations with NumPy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/how-to-perform-matrix-operations-with-numpy](https://www.kdnuggets.com/how-to-perform-matrix-operations-with-numpy)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![How to Perform Matrix Operations with NumPy](../Images/9bd1f47928182ebd9c497268f612cfd6.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Vlado Paunovic](https://unsplash.com/photos/black-and-white-checkered-illustration-iBG594vhR1k)
  prefs: []
  type: TYPE_NORMAL
- en: NumPy is a powerful Python library that contains a large collection of mathematical
    functions, and supports the creation of matrices and multi-dimensional arrays
    to which these mathematical functions can be applied.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: In this short tutorial, you will learn how to perform several of the most basic
    matrix operations with NumPy.
  prefs: []
  type: TYPE_NORMAL
- en: Matrices and Arrays in NumPy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In NumPy, a matrix is defined as a specialised array that is strictly 2-dimensional,
    and which retains its 2-dimensionality following the application of mathematical
    operations. A matrix of this type can be implemented using the `np.matrix` class,
    however NumPy no longer recommends use of this class as it may be removed in the
    future. The alternative option that is recommended by NumPy is to use the N-dimensional
    array type, `ndarray`.
  prefs: []
  type: TYPE_NORMAL
- en: The key difference between an ndarray and a matrix in NumPy is that the former
    can be of any dimensionality, and its use is not restricted to 2-dimensional operations.
  prefs: []
  type: TYPE_NORMAL
- en: Hence, in this tutorial we shall be focusing on implementing several basic matrix
    operations on 2-dimensional arrays, created using `np.ndarray`
  prefs: []
  type: TYPE_NORMAL
- en: Creating NumPy Arrays
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s first import the NumPy package and then proceed to create two, 2-dimensional
    arrays that are composed of two rows and three columns each. These arrays will
    be used in the ensuing examples of this tutorial:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The `shape` attribute lets us confirm the array’s dimensions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Basic Array Operations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: NumPy provides its own functions to perform element-wise addition, subtraction,
    division and multiplication of arrays. In addition, Numpy also leverages Python’s
    arithmetic operators by extending their functionality to handle element-wise array
    operations.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s start with element-wise addition between the arrays `a1` and `a2` as an
    example.
  prefs: []
  type: TYPE_NORMAL
- en: 'Element-wise addition of two arrays can be achieved by making use of the `np.add`
    function or the overloaded `+` operator:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'By printing out the results, it may be confirmed that they both produce the
    same output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'However, if we had to time them, we can notice a small difference:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Here it may be seen that the NumPy `np.add` function performs slightly slower
    than the `+` operator. This is mainly because the add function introduces type-checking
    to convert any *array_like* inputs (such as lists) into arrays before performing
    the addition operation. This, in turn, introduces an extra computational overhead
    over the `+` operator.
  prefs: []
  type: TYPE_NORMAL
- en: However, such measure also makes the `np.add` function less prone to error.
    For instance, applying `np.add` to inputs of type `list` still works (e.g. `np.add([1,
    1], [2, 2])`), whereas applying the `+` operator results in list concatenation.
  prefs: []
  type: TYPE_NORMAL
- en: Similarly for element-wise subtraction (using `np.subtract` or `-`), division
    (using `np.divide` or `/`) and multiplication (using `np.multiply` or `*`), the
    NumPy functions perform type-checking, introducing a small computational overhead.
  prefs: []
  type: TYPE_NORMAL
- en: Several other operations that may come in handy include transposing and multiplying
    arrays.
  prefs: []
  type: TYPE_NORMAL
- en: 'Matrix transposition results in an orthogonal rotation of the matrix, and can
    be achieved using the `np.transpose` function (which includes type-checking) or
    the `.T` attribute:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Matrix multiplication can be performed using the `np.dot` function or the `@`
    operator (the latter implements the `np.matmul` function from Python 3.5 onwards):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: When working with 2-dimensional arrays, `np.dot` and `np.matmul` perform identically
    and both include type-checking.
  prefs: []
  type: TYPE_NORMAL
- en: Additional Resources
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[NumPy Array Objects](https://numpy.org/doc/stable/reference/arrays.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Gentle Introduction to NumPy Arrays in Python](https://machinelearningmastery.com/gentle-introduction-n-dimensional-arrays-python-numpy/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Stefania Cristina](https://www.linkedin.com/in/stefania-cristina-b3b7aa57)**,
    PhD, is a Senior Lecturer with the Department of Systems and Control Engineering
    at the University of Malta. Her research interests lie within the domains of computer
    vision and machine learning.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[How to Perform Memory-Efficient Operations on Large Datasets with Pandas](https://www.kdnuggets.com/how-to-perform-memory-efficient-operations-on-large-datasets-with-pandas)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Vector and Matrix Norms with NumPy Linalg Norm](https://www.kdnuggets.com/2023/05/vector-matrix-norms-numpy-linalg-norm.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Elevate Math Efficiency: Navigating Numpy Array Operations](https://www.kdnuggets.com/elevate-math-efficiency-navigating-numpy-array-operations)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using NumPy to Perform Date and Time Calculations](https://www.kdnuggets.com/using-numpy-to-perform-date-and-time-calculations)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Sparse Matrix Representation in Python](https://www.kdnuggets.com/2020/05/sparse-matrix-representation-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Idiot''s Guide to Precision, Recall, and Confusion Matrix](https://www.kdnuggets.com/2020/01/guide-precision-recall-confusion-matrix.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
