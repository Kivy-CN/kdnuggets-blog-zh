- en: Choosing Between Model Candidates
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/05/choosing-between-model-candidates.html](https://www.kdnuggets.com/2019/05/choosing-between-model-candidates.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: For all the content, including video and code, [visit the course page for How
    Modeling Works](https://end-to-end-machine-learning.teachable.com/p/building-blocks-choosing-a-model).
  prefs: []
  type: TYPE_NORMAL
- en: Choosing between models
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s fit a model to some data. These are the annual temperatures for the last
    120 years in a fictional Midwestern town. There’s one point per year, the annual
    median of the daily high temperatures. When we look at it, our eye is really good
    at pulling out a pattern. There’s a clear lift toward the right hand side. We
    would like to capture that in a model.
  prefs: []
  type: TYPE_NORMAL
- en: '![figure-name](../Images/2c2c19ee6b8ca96ce1a808eab055a8cc.png)'
  prefs: []
  type: TYPE_IMG
- en: There are a lot of models that can represent this. A really nice starting point,
    because it's so simple, is a straight line. Here’s what the best fit straight
    line looks like. It does a pretty good job. We can see that it definitely captures
    the upward tilt of the data, but it doesn’t capture the bend in it. It’s clear
    when we examine it, that a straight line doesn’t do quite as well as we would
    like.
  prefs: []
  type: TYPE_NORMAL
- en: '![figure-name](../Images/286562c93de7cefd90899158658dd17d.png)'
  prefs: []
  type: TYPE_IMG
- en: Luckily, we have a lot of other options. A reasonable next candidate is a quadratic,
    a polynomial with a squared term instead of just a linear term. These have curvature
    to them. We can see that the best fit quadratic clearly captures the lift at the
    right hand side of the plot and the bend in the middle, but it also imposes a
    little lift on the left-hand side of the plot which is not obviously reflected
    in the data.
  prefs: []
  type: TYPE_NORMAL
- en: '![figure-name](../Images/dddf647a6e105ce11a24a8e3e6c551ae.png)'
  prefs: []
  type: TYPE_IMG
- en: So, we can try other options. We can try polynomials with cubic terms, powers
    of three.
  prefs: []
  type: TYPE_NORMAL
- en: '![figure-name](../Images/bcd5a114fe033c8cb892259b38d6492c.png)'
  prefs: []
  type: TYPE_IMG
- en: Or we can look at a polynomial with quartic terms, powers of four.
  prefs: []
  type: TYPE_NORMAL
- en: '![figure-name](../Images/3b02d59284c94bb7400340d2b253b577.png)'
  prefs: []
  type: TYPE_IMG
- en: We can also fit polynomial models of order five,
  prefs: []
  type: TYPE_NORMAL
- en: '![figure-name](../Images/1dd2e738e0990397f62acf6431403383.png)'
  prefs: []
  type: TYPE_IMG
- en: polynomials of order six,
  prefs: []
  type: TYPE_NORMAL
- en: '![figure-name](../Images/cc4e1acb0d4eb569972b08a1caffd448.png)'
  prefs: []
  type: TYPE_IMG
- en: seventh order polynomials,
  prefs: []
  type: TYPE_NORMAL
- en: '![figure-name](../Images/f1a73cb61be7d35e9a48d34c3dbe38f5.png)'
  prefs: []
  type: TYPE_IMG
- en: and eighth order polynomials, also called *octic polynomials* (a useful tidbit
    for filling lulls in conversation at parties).
  prefs: []
  type: TYPE_NORMAL
- en: '![figure-name](../Images/b9f886b2fc11c10f8edc3ae1bf14cc1f.png)'
  prefs: []
  type: TYPE_IMG
- en: Now the fit appears to be getting better, but the line is taking on extra personality.
    It’s adopting wiggles. If we take this to an extreme, we can imagine a model that
    passes through every single data point perfectly. This model would have zero error,
    zero deviation from our measured data. So does that make it the best fit model?
  prefs: []
  type: TYPE_NORMAL
- en: '![figure-name](../Images/cb1d224dfe9543e18411fec487334aca.png)'
  prefs: []
  type: TYPE_IMG
- en: Models are useful because they allow us to generalize from one situation to
    another. When we use a model, we’re working under the assumption that there is
    some underlying pattern we want to measure, but it has some error on top of it.
    The goal of a good model is to look through the error and find the pattern.
  prefs: []
  type: TYPE_NORMAL
- en: The most common way to do this is to split our data into two groups. We can
    use one group to train our model, and then we can test it to see how closely it
    fits the second group. The first group is the training data set, and the second
    group is the testing data set. There are lots of ways to do this, and we will
    revisit them later, but for now, we will randomly sort our years into two bins.
    We’ll put 70% of them into our training data set, and 30% of them into our testing
    data set.
  prefs: []
  type: TYPE_NORMAL
- en: Then, we can go back to our collection of model candidates and try them one
    by one. Here are a few of the models, trained on the training data, plotted with
    the testing data.
  prefs: []
  type: TYPE_NORMAL
- en: '![figure-name](../Images/344f82f4110421007dbd66643e8e91dd.png)![figure-name](../Images/52473f33c9c350493341881534630384.png)![figure-name](../Images/0d4bb4700aef3d3f0467ffb5c1f42608.png)![figure-name](../Images/d4a05d59231f89193684d64501e34a9d.png)![figure-name](../Images/67956250e78ba96ce946c3c432ed4674.png)'
  prefs: []
  type: TYPE_IMG
- en: As the models get higher order, we can see that the wiggles they have developed
    may have been helpful for fitting the training data, but don't necessarily help
    them fit the testing data better. We can see an extreme example of this in the
    full interpolation model, where we just connect all the training data points with
    straight lines. It really struggles to match the testing data points
  prefs: []
  type: TYPE_NORMAL
- en: '![figure-name](../Images/93497c652cd576ef66234ad54e9f3a6f.png)'
  prefs: []
  type: TYPE_IMG
- en: It's helpful to look at the error on the training and testing data sets for
    each model lined up side by side.
  prefs: []
  type: TYPE_NORMAL
- en: '![figure-name](../Images/f2666b78669724fadf4ff8d75ef46305.png)'
  prefs: []
  type: TYPE_IMG
- en: Looking at the errors on the training data set, a few things jump right out.
    First is the wide gap between the training errors (hollow circles) and testing
    errors (solid circles). Right away we can see that there is a substantial difference
    between the two data sets.
  prefs: []
  type: TYPE_NORMAL
- en: Second, there is a precipitous drop in error going from a linear to a quadratic
    model (order-1 to order-2 polynomial). This makes sense. When we were eyeballing
    it, we could see that the linear fit failed to capture the curvature of the data,
    one of its most prominent features.
  prefs: []
  type: TYPE_NORMAL
- en: So which model fits best? When we look carefully at the errors on the training
    data, it appears that the error on the fifth order polynomial model is the lowest.
    The differences are subtle so you might have to squint. All the higher order models
    have low error too, but they are just a little higher than an order-5 polynomial.
    But as we mentioned, that's not the ultimate test. It's the error on the testing
    data that we really care about.
  prefs: []
  type: TYPE_NORMAL
- en: Careful inspection of testing error (solid circles) shows that the fourth-order
    model does the best job. At higher orders of polynomials, the error on the test
    data set goes up. The more wiggly the line gets in fifth-and-higher order polynomial
    models, the more it captures the quirks of the training data, rather than the
    underlying pattern of the testing data that we are interested in.
  prefs: []
  type: TYPE_NORMAL
- en: 'Based on this train-and-test approach we have a clear winner: of all the models
    we tried, the fourth-order polynomial is best.'
  prefs: []
  type: TYPE_NORMAL
- en: Congratulations to us! We chose a pretty good model for our data. But don't
    leave just yet! There still some important ideas we need to discuss. [Join me
    for part 2](https://brohrer.github.io/how_modeling_works_2.html) where we'll talk
    in more depth about what we want in a model.
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://brohrer.github.io/how_modeling_works_1.html). Reposted with
    permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[How (not) to use Machine Learning for time series forecasting: Avoiding the
    pitfalls](/2019/05/machine-learning-time-series-forecasting.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How To Fine Tune Your Machine Learning Models To Improve Forecasting Accuracy](/2019/01/fine-tune-machine-learning-models-forecasting.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Time Series for Dummies – The 3 Step Process](/2018/03/time-series-dummies-3-step-process.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Unlock the Secrets to Choosing the Perfect Machine Learning Algorithm!](https://www.kdnuggets.com/2023/07/ml-algorithm-choose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Choosing the Right Clustering Algorithm for Your Dataset](https://www.kdnuggets.com/2019/10/right-clustering-algorithm.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What’s the Difference Between Data Analysts and Data Scientists?](https://www.kdnuggets.com/2022/03/difference-data-analysts-data-scientists.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Full Stack Everything? Organizational Intersections Between Data…](https://www.kdnuggets.com/2022/08/full-stack-everything-organizational-intersections-data-science-dev-tech.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Difference Between Training and Testing Data in Machine Learning](https://www.kdnuggets.com/2022/08/difference-training-testing-data-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Gap Between Deep Learning and Human Cognitive Abilities](https://www.kdnuggets.com/2022/10/gap-deep-learning-human-cognitive-abilities.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
