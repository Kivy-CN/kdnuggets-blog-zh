- en: 'Testing Like a Pro: A Step-by-Step Guide to Python’s Mock Library'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 专业测试：Python Mock 库的逐步指南
- en: 原文：[https://www.kdnuggets.com/testing-like-a-pro-a-step-by-step-guide-to-pythons-mock-library](https://www.kdnuggets.com/testing-like-a-pro-a-step-by-step-guide-to-pythons-mock-library)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 译文：[https://www.kdnuggets.com/testing-like-a-pro-a-step-by-step-guide-to-pythons-mock-library](https://www.kdnuggets.com/testing-like-a-pro-a-step-by-step-guide-to-pythons-mock-library)
- en: '![Python''s Mock Library](../Images/73848bdfb2a79aaa807a8fb6a07d8705.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Python 的 Mock 库](../Images/73848bdfb2a79aaa807a8fb6a07d8705.png)'
- en: Image by Author | DALLE-3 & Canva
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片 | DALLE-3 & Canva
- en: Testing software is crucial for ensuring reliability and functionality across
    different scenarios. However, if the code implementation depends on external services,
    it becomes quite a challenge. This is where mocking comes in. Python’s mock library
    provides tools to create mock objects to replace real objects, making your tests
    easier to maintain. Mocking facilitates focused testing of components and quicker
    testing cycles.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 测试软件对于确保在不同场景下的可靠性和功能性至关重要。然而，如果代码实现依赖于外部服务，这就会变成一个相当大的挑战。这时，模拟技术就派上用场了。Python
    的 mock 库提供了创建模拟对象以替代真实对象的工具，使你的测试更容易维护。模拟技术有助于专注于组件的测试并加快测试周期。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业道路。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持组织的 IT 需求'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: What is Mocking?
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是模拟？
- en: Mocking is a technique used in software testing to simulate real objects. Real
    objects are replaced by mock objects to simulate their functionality, allowing
    you to test code in different scenarios and isolation. Mocking is especially useful
    to test specific parts of the codebase without relying on the interaction with
    external systems, databases, or other complex services.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟是一种在软件测试中用来模拟真实对象的技术。真实对象被模拟对象替代，以模拟它们的功能，允许你在不同场景和隔离下测试代码。模拟特别适用于测试代码库的特定部分，而无需依赖与外部系统、数据库或其他复杂服务的交互。
- en: Let me explain this concept with an example. Consider that you have a web application
    that uses an external API to retrieve data. To test without depending on the real
    API, you can make a mock object that mimics the answers of the API. This way,
    you can test your application's functionality without being dependent on the real
    API, which might be slow, unreliable, or not even available during development.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我通过一个例子来解释这个概念。假设你有一个使用外部 API 来检索数据的 web 应用程序。为了在不依赖真实 API 的情况下进行测试，你可以创建一个模拟对象，模仿
    API 的回答。这样，你可以测试应用程序的功能，而不必依赖可能在开发过程中缓慢、不可靠或根本不可用的真实 API。
- en: Sounds interesting, right? Let's now go over a detailed how-to for actually
    using this library.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 听起来很有趣，对吧？现在我们来详细探讨一下如何实际使用这个库。
- en: Step-by-Step Guide to Using Mock
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Mock 的逐步指南
- en: 'Step 1: Importing the Mock Library'
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第 1 步：导入 Mock 库
- en: The `unittest.mock` is the standard library in Python (3.3 and in all newer
    versions) that provides mock objects to control the behavior of real objects.
    First you need to import it the `unittest.mock` library.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`unittest.mock` 是 Python 的标准库（3.3 及更新版本），提供了模拟对象以控制真实对象的行为。首先你需要导入 `unittest.mock`
    库。'
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Step 2: Creating a Mock Object'
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第 2 步：创建模拟对象
- en: 'Creating a mock object is straightforward. Once imported, you can instantiate
    a mock object like this:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 创建模拟对象很简单。导入后，你可以像这样实例化一个模拟对象：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now, `my_mock` is a mock object that you can configure to simulate the behavior
    of a real object.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，`my_mock` 是一个模拟对象，你可以配置它以模拟真实对象的行为。
- en: 'Step 3: Setting Return Values'
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第 3 步：设置返回值
- en: 'The Mock library provides various ways to configure mock objects and control
    their behavior. For instance, you can specify what a method should return when
    called:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Mock 库提供了多种配置模拟对象和控制其行为的方法。例如，你可以指定一个方法在被调用时应该返回什么：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Output:**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Step 4: Setting Side Effects'
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第4步：设置副作用
- en: 'Side effects are additional actions or behaviors triggered when a method of
    a mock object is called, such as raising exceptions or executing functions. Besides
    return values, you can also define attributes or specify side effects like this:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 副作用是当模拟对象的方法被调用时触发的额外动作或行为，例如引发异常或执行函数。除了返回值之外，你还可以像这样定义属性或指定副作用。
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Output:**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In this example, `ValueError` raises whenever `some_method()` is called.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，每当`some_method()`被调用时，`ValueError`会被引发。
- en: 'Step 5: Asserting Calls'
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第5步：断言调用
- en: Verifying the method calls is crucial for thorough testing. You can use assertions
    to specify whether a method was called, when, and with what arguments.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 验证方法调用对于彻底测试至关重要。你可以使用断言来指定方法是否被调用、何时调用以及使用了什么参数。
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '`assert_called()`: Returns True if calculate_length was called at least once'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`assert_called()`: 如果calculate_length至少被调用一次，则返回True'
- en: '`assert_called_once()`: Returns True if calculate_length was called exactly
    once'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`assert_called_once()`: 如果calculate_length仅被调用一次，则返回True'
- en: '`assert_called_with(''foo'', ''bar'')`: Returns True if calculate_length was
    called with the same arguments'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`assert_called_with(''foo'', ''bar'')`：如果calculate_length以相同的参数被调用，则返回True'
- en: '`assert_called_once_with(''foo'', ''bar'')`: Returns True if calculate_length
    was called exactly once with the same arguments'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`assert_called_once_with(''foo'', ''bar'')`：如果calculate_length以相同的参数被调用且仅被调用一次，则返回True'
- en: If any of these assertions fail on the mock object, an `AssertionError` will
    be raised, indicating that the expected behavior did not match the actual behavior
    of the mock.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这些断言在模拟对象上失败，将会引发`AssertionError`，表示期望的行为与模拟的实际行为不符。
- en: 'Step 6: Using Patch'
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第6步：使用修补
- en: The `patch` function allows you to replace real objects with mock objects during
    tests. As discussed earlier, this is particularly useful for simulating third-party
    libraries or APIs, ensuring your tests remain isolated from actual implementations.
    To demonstrate patching, consider the following example function that fetches
    data from the URL.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`patch`函数允许你在测试期间用模拟对象替换真实对象。如前所述，这对于模拟第三方库或API特别有用，确保你的测试与实际实现保持隔离。为了演示修补，请考虑以下从URL获取数据的示例函数。'
- en: '[PRE7]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'You can avoid making real `HTTP` requests by patching the ‘requests.get’ like
    this:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 通过像这样修补‘requests.get’，你可以避免发出真正的`HTTP`请求：
- en: '[PRE8]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The patch decorator is added just above the `test_fetch_data function` to replace
    the `requests.get` function with a mock.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 修补装饰器被添加在`test_fetch_data function`的上方，以用模拟对象替换`requests.get`函数。
- en: 'Step 7: Mocking Classes'
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第7步：模拟类
- en: 'You can mock entire classes and their methods to simulate interactions between
    objects. For instance, you can mock a database class to test your application''s
    interaction with the database without the need to set up a real database connection
    like this:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以模拟整个类及其方法，以模拟对象之间的交互。例如，你可以模拟一个数据库类来测试应用程序与数据库的交互，而不需要像这样设置真实的数据库连接：
- en: '[PRE9]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Wrapping Up
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: That's it for today's article on `unittest.mock`, a powerful library for testing
    in Python. It enables developers to test code, ensuring smooth interactions between
    objects. With advanced features like specifying side effects, asserting calls,
    mocking classes, and using context managers, testing various scenarios becomes
    easier. Start using mocks in your tests today to ensure higher-quality code and
    smoother deployments.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是今天关于`unittest.mock`的文章，它是Python中一个强大的测试库。它使开发人员能够测试代码，确保对象之间的平稳交互。通过指定副作用、断言调用、模拟类和使用上下文管理器等高级功能，测试各种场景变得更加容易。今天就开始在你的测试中使用模拟对象，以确保更高质量的代码和更顺畅的部署。
- en: '**[](https://www.linkedin.com/in/kanwal-mehreen1/)**[Kanwal Mehreen](https://www.linkedin.com/in/kanwal-mehreen1/)****
    Kanwal is a machine learning engineer and a technical writer with a profound passion
    for data science and the intersection of AI with medicine. She co-authored the
    ebook "Maximizing Productivity with ChatGPT". As a Google Generation Scholar 2022
    for APAC, she champions diversity and academic excellence. She''s also recognized
    as a Teradata Diversity in Tech Scholar, Mitacs Globalink Research Scholar, and
    Harvard WeCode Scholar. Kanwal is an ardent advocate for change, having founded
    FEMCodes to empower women in STEM fields.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**[](https://www.linkedin.com/in/kanwal-mehreen1/)**[Kanwal Mehreen](https://www.linkedin.com/in/kanwal-mehreen1/)****
    Kanwal 是一名机器学习工程师和技术作家，对数据科学及人工智能与医学的交汇处充满热情。她共同撰写了电子书《用 ChatGPT 最大化生产力》。作为 2022
    年亚太地区 Google 未来学者，她致力于推动多样性和学术卓越。她还被认可为 Teradata 多样性科技学者、Mitacs 全球研究学者和哈佛 WeCode
    学者。Kanwal 是变革的坚定倡导者，创立了 FEMCodes 以赋能 STEM 领域的女性。'
- en: More On This Topic
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Hypothesis Testing and A/B Testing](https://www.kdnuggets.com/hypothesis-testing-and-ab-testing)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[假设检验与 A/B 测试](https://www.kdnuggets.com/hypothesis-testing-and-ab-testing)'
- en: '[Introducing the Testing Library for Natural Language Processing](https://www.kdnuggets.com/2023/04/introducing-testing-library-natural-language-processing.html)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[介绍自然语言处理的测试库](https://www.kdnuggets.com/2023/04/introducing-testing-library-natural-language-processing.html)'
- en: '[Free Python Resources That Can Help You Become a Pro](https://www.kdnuggets.com/free-python-resources-that-can-help-you-become-a-pro)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[帮助你成为专家的免费 Python 资源](https://www.kdnuggets.com/free-python-resources-that-can-help-you-become-a-pro)'
- en: '[A Step-by-Step Guide to Web Scraping with Python and Beautiful Soup](https://www.kdnuggets.com/2023/04/stepbystep-guide-web-scraping-python-beautiful-soup.html)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[逐步指南：使用 Python 和 Beautiful Soup 进行网络爬虫](https://www.kdnuggets.com/2023/04/stepbystep-guide-web-scraping-python-beautiful-soup.html)'
- en: '[How to MLOps like a Boss: A Guide to Machine Learning without Tears](https://www.kdnuggets.com/2023/06/mlops-like-boss-guide-machine-learning-without-tears.html)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何像专家一样进行 MLOps：一份无泪的机器学习指南](https://www.kdnuggets.com/2023/06/mlops-like-boss-guide-machine-learning-without-tears.html)'
- en: '[A Guide On How To Become A Data Scientist (Step By Step Approach)](https://www.kdnuggets.com/2021/05/guide-become-data-scientist.html)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何成为数据科学家的指南（逐步方法）](https://www.kdnuggets.com/2021/05/guide-become-data-scientist.html)'
