- en: 'Time Series Analysis: ARIMA Models in Python'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/08/times-series-analysis-arima-models-python.html](https://www.kdnuggets.com/2023/08/times-series-analysis-arima-models-python.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Time series analysis is widely used for forecasting and predicting future points
    in a time series. AutoRegressive Integrated Moving Average (ARIMA) models are
    widely used for time series forecasting and are considered one of the most popular
    approaches.  In this tutorial, we will learn how to build and evaluate ARIMA models
    for time series forecasting in Python.
  prefs: []
  type: TYPE_NORMAL
- en: What is an ARIMA Model?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: The ARIMA model is a statistical model utilized for analyzing and predicting
    time series data. The ARIMA approach explicitly caters to standard structures
    found in time series, providing a simple yet powerful method for making skillful
    time series forecasts.
  prefs: []
  type: TYPE_NORMAL
- en: 'ARIMA stands for AutoRegressive Integrated Moving Average. It combines three
    key aspects:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Autoregression (AR)**: A model that uses the correlation between the current
    observation and lagged observations. The number of lagged observations is referred
    to as the lag order or p.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Integrated (I)**: The use of differencing of raw observations to make the
    time series stationary. The number of differencing operations is referred to as
    d.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Moving Average (MA)**: A model takes into account the relationship between
    the current observation and the residual errors from a moving average model applied
    to past observations. The size of the moving average window is the order or q.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The ARIMA model is defined with the notation ARIMA(p,d,q) where p, d, and q
    are substituted with integer values to specify the exact model being used.
  prefs: []
  type: TYPE_NORMAL
- en: '**Key assumptions when adopting an ARIMA model:**'
  prefs: []
  type: TYPE_NORMAL
- en: The time series was generated from an underlying ARIMA process.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The parameters p, d, q must be appropriately specified based on the raw observations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The time series data must be made stationary via differencing before fitting
    the ARIMA model.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The residuals should be uncorrelated and normally distributed if the model fits
    well.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In summary, the ARIMA model provides a structured and configurable approach
    for modeling time series data for purposes like forecasting. Next we will look
    at fitting ARIMA models in Python.
  prefs: []
  type: TYPE_NORMAL
- en: Python Code Example
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this tutorial, we will use [Netflix Stock Data](https://www.kaggle.com/datasets/kalilurrahman/netflix-stock-data-live-and-latest)
    from Kaggle to forecast the Netflix stock price using the ARIMA model.
  prefs: []
  type: TYPE_NORMAL
- en: Data Loading
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will  load our stock price dataset with the “Date” column as index.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![Times Series Analysis: ARIMA Models in Python](../Images/45c613ce2720f21ecdc32e2c936dabcd.png)'
  prefs: []
  type: TYPE_IMG
- en: Data Visualization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We can use pandas 'plot' function to visualize the changes in stock price and
    volume over time. It's clear that the stock prices are increasing exponentially.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![Times Series Analysis: ARIMA Models in Python](../Images/2935f68cac64230c4f58e3577f7e0735.png)'
  prefs: []
  type: TYPE_IMG
- en: Rolling Forecast ARIMA Model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Our dataset has been split into training and test sets, and we proceeded to
    train an ARIMA model. The first prediction was then forecasted.
  prefs: []
  type: TYPE_NORMAL
- en: We received a poor outcome with the generic ARIMA model, as it produced a flat
    line. Therefore, we have decided to try a rolling forecast method.
  prefs: []
  type: TYPE_NORMAL
- en: '**Note:** The code example is a modified version of the [notebook](https://www.kaggle.com/code/bogdanbaraban/ar-arima-lstm#ARIMA-model)
    by BOGDAN IVANYUK.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: When dealing with time series data, a rolling forecast is often necessary due
    to the dependence on prior observations. One way to do this is to re-create the
    model after each new observation is received.
  prefs: []
  type: TYPE_NORMAL
- en: To keep track of all observations, we can manually maintain a list called history,
    which initially contains training data and to which new observations are appended
    each iteration. This approach can help us get an accurate forecasting model.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Model Evaluation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Our rolling forecast ARIMA model showed a 100% improvement over simple implementation,
    yielding impressive results.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Let's visualize and compare the actual results to the predicted ones . It's
    clear that our model has made highly accurate predictions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![Times Series Analysis: ARIMA Models in Python](../Images/07908ed7c232efb467982449a7642896.png)'
  prefs: []
  type: TYPE_IMG
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this short tutorial, we provided an overview of ARIMA models and how to implement
    them in Python for time series forecasting. The ARIMA approach provides a flexible
    and structured way to model time series data that relies on prior observations
    as well as past prediction errors. If you're interested in a comprehensive analysis
    of the ARIMA model and Time Series analysis, I recommend taking a look at [Stock
    Market Forecasting Using Time Series Analysis](/2020/01/stock-market-forecasting-time-series-analysis.html).
  prefs: []
  type: TYPE_NORMAL
- en: '**[Abid Ali Awan](https://www.polywork.com/kingabzpro)** ([@1abidaliawan](https://www.linkedin.com/in/1abidaliawan/))
    is a certified data scientist professional who loves building machine learning
    models. Currently, he is focusing on content creation and writing technical blogs
    on machine learning and data science technologies. Abid holds a Master''s degree
    in Technology Management and a bachelor''s degree in Telecommunication Engineering.
    His vision is to build an AI product using a graph neural network for students
    struggling with mental illness.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Time Series Forecasting with Ploomber, Arima, Python, and Slurm](https://www.kdnuggets.com/2022/03/time-series-forecasting-ploomber-arima-python-slurm.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Market Data and News: A Time Series Analysis](https://www.kdnuggets.com/2022/06/market-data-news-time-series-analysis.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Codeless Time Series Analysis with KNIME](https://www.kdnuggets.com/2022/10/packt-codeless-time-series-analysis-knime.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Create a Time Series Ratio Analysis Dashboard](https://www.kdnuggets.com/2023/06/wolfer-create-time-series-ratio-analysis-dashboard.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News, June 29: 20 Basic Linux Commands for Data Science…](https://www.kdnuggets.com/2022/n26.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Conduct Time Series Analysis in R](https://www.kdnuggets.com/how-to-conduct-time-series-analysis-in-r)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
