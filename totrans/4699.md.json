["```py\n\nimport tensorflow as tf\nfrom tensorflow.python.keras.layers import Input, LSTM, Bidirectional, Dense, Embedding\n\ndef make_model(batch_size=None):\n    source = Input(shape=(maxlen,), batch_size=batch_size,\n                   dtype=tf.int32, name='Input')\n    embedding = Embedding(input_dim=max_features,\n                          output_dim=128, name='Embedding')(source)\n    lstm = LSTM(32, name='LSTM')(embedding)\n    predicted_var = Dense(1, activation='sigmoid', name='Output')(lstm)\n    model = tf.keras.Model(inputs=[source], outputs=[predicted_var])\n    model.compile(\n        optimizer=tf.train.RMSPropOptimizer(learning_rate=0.01),\n        loss='binary_crossentropy',\n        metrics=['acc'])\n    return model\n\ntraining_model = make_model(batch_size=128)\n\n```", "```py\n\nimport os\nimport tensorflow as tf\n# This address identifies the TPU we'll use when configuring TensorFlow.\nTPU_WORKER = 'grpc://' + os.environ['COLAB_TPU_ADDR']\ntf.logging.set_verbosity(tf.logging.INFO)\n\ntpu_model = tf.contrib.tpu.keras_to_tpu_model(\n    training_model,\n    strategy=tf.contrib.tpu.TPUDistributionStrategy(\n        tf.contrib.cluster_resolver.TPUClusterResolver(TPU_WORKER)))\n\n```", "```py\n\nhistory = tpu_model.fit(x_train, y_train,\n                        epochs=20,\n                        batch_size=128 * 8,\n                        validation_split=0.2)\ntpu_model.save_weights('./tpu_model.h5', overwrite=True)\ntpu_model.evaluate(x_test, y_test, batch_size=128 * 8)\n\n```", "```py\n\ninferencing_model = make_model(batch_size=None)\ninferencing_model.load_weights('./tpu_model.h5')\ninferencing_model.summary()\n\n```", "```py\n_________________________________________________________________\nLayer (type) Output Shape Param #\n=================================================================\nInput (InputLayer) (None, 500) 0\n_________________________________________________________________\nEmbedding (Embedding) (None, 500, 128) 1280000\n_________________________________________________________________\nLSTM (LSTM) (None, 32) 20608\n_________________________________________________________________\nOutput (Dense) (None, 1) 33\n=================================================================\n```"]