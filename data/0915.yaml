- en: The Optimal Way to Input Missing Data with Pandas fillna()
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Pandas fillna() 输入缺失数据的最佳方式
- en: 原文：[https://www.kdnuggets.com/2023/02/optimal-way-input-missing-data-pandas-fillna.html](https://www.kdnuggets.com/2023/02/optimal-way-input-missing-data-pandas-fillna.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2023/02/optimal-way-input-missing-data-pandas-fillna.html](https://www.kdnuggets.com/2023/02/optimal-way-input-missing-data-pandas-fillna.html)
- en: '![The Optimal Way to Input Missing Data with Pandas fillna()](../Images/8daea57e9d8d577dea9eba6c35e5fbc6.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Pandas fillna() 输入缺失数据的最佳方式](../Images/8daea57e9d8d577dea9eba6c35e5fbc6.png)'
- en: Image by [catalyststuff](https://www.freepik.com/free-vector/cute-panda-doughnut-cartoon-vector-icon-illustration-animal-food-icon-concept-isolated-premium-vector-flat-cartoon-style_23006622.htm#page=2&query=pandas&position=40&from_view=search&track=sph)
    on Freepik
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [catalyststuff](https://www.freepik.com/free-vector/cute-panda-doughnut-cartoon-vector-icon-illustration-animal-food-icon-concept-isolated-premium-vector-flat-cartoon-style_23006622.htm#page=2&query=pandas&position=40&from_view=search&track=sph)
    提供，来源于 Freepik
- en: During the data exploration phase, we often encounter variables with missing
    data. The missing data could exist for various reasons; sampling mistakes, deliberately
    missing, or a random reason. Whatever the cause, **we need to analyse the missing
    data reasons**. An article regarding missing data type by [Yogita Kinha](/2020/06/missing-values-dataset.html)
    is a good start.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据探索阶段，我们经常会遇到缺失数据的变量。缺失数据可能由于各种原因存在；采样错误、故意遗漏或随机原因。无论原因是什么，**我们需要分析缺失数据的原因**。关于缺失数据类型的文章由
    [Yogita Kinha](/2020/06/missing-values-dataset.html) 提供，是一个很好的起点。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速入门网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升您的数据分析技能。'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持您组织的 IT 事务。'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: After appropriate analysis, one way to solve the missing data problem is by
    filling in the data. Luckily, Pandas allow easy missing data input. How do we
    do that, and what is the optimal way to fill in the missing data? Let’s learn
    together.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 经过适当的分析，解决缺失数据问题的一种方法是填充数据。幸运的是，Pandas 允许轻松输入缺失数据。我们怎么做呢？填补缺失数据的最佳方式是什么？让我们一起学习。
- en: Pandas Fillna Function
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pandas Fillna 函数
- en: According to the Pandas' [documentation](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.fillna.html),
    Fillna is a Pandas function to fill the NA/NaN values with the specified method.
    In the Pandas DataFrame, we specify the missing data object as the NaN object.
    Using Fillna, we would replace these NaN values with another value we had analysed.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 Pandas 的 [文档](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.fillna.html)，Fillna
    是一个 Pandas 函数，用于用指定的方法填充 NA/NaN 值。在 Pandas DataFrame 中，我们将缺失的数据对象指定为 NaN 对象。使用
    Fillna，我们将用我们分析过的其他值替换这些 NaN 值。
- en: 'Let’s try out the function with a dataset example. This article will use the
    [Local Epidemics of Dengue Fever train dataset from Kaggle](https://www.kaggle.com/datasets/arashnic/epidemy?select=dengue_features_train.csv)
    (License: CC0: Public Domain).'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们试用一个数据集示例来尝试这个函数。本文将使用 [Kaggle 上的地方性登革热训练数据集](https://www.kaggle.com/datasets/arashnic/epidemy?select=dengue_features_train.csv)（许可证：CC0：公共领域）。
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![The Optimal Way to Input Missing Data with Pandas fillna()](../Images/97cb5ec2a97a423dea43c3660c7f1386.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Pandas fillna() 输入缺失数据的最佳方式](../Images/97cb5ec2a97a423dea43c3660c7f1386.png)'
- en: As we see in the dataset above, there are missing data in the ‘ndvi_ne’ column.
    Using the Pandas `fillna` function, we can easily replace the missing data with
    another value. Let me give you an example.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在上述数据集中所看到的，‘ndvi_ne’ 列中存在缺失数据。使用 Pandas 的 `fillna` 函数，我们可以轻松地用其他值替换缺失数据。让我给你一个例子。
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![The Optimal Way to Input Missing Data with Pandas fillna()](../Images/eab59bc53c8af0bd4117e668dd6e8817.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Pandas fillna() 输入缺失数据的最佳方式](../Images/eab59bc53c8af0bd4117e668dd6e8817.png)'
- en: With the `fillna` function, we replace the missing data with the value 0\. You
    can replace it with any kind of value when using the `fillna` function. For example,
    I replace the missing values with the string ‘zero’.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`fillna`函数，我们用值0替换了缺失的数据。使用`fillna`函数时，你可以用任何值来替换它。例如，我用字符串‘zero’替换了缺失值。
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![The Optimal Way to Input Missing Data with Pandas fillna()](../Images/961f90afc98e8ef8cd12890137262c16.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Pandas fillna() 填充缺失数据的最佳方法](../Images/961f90afc98e8ef8cd12890137262c16.png)'
- en: Or I could even replace the missing values with function, which you could do
    but was not useful.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 或者我甚至可以使用函数来替换缺失值，这虽然可以做到，但并不实用。
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![The Optimal Way to Input Missing Data with Pandas fillna()](../Images/5b2545d9a10314b7affdf99cf73a0b4a.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Pandas fillna() 填充缺失数据的最佳方法](../Images/5b2545d9a10314b7affdf99cf73a0b4a.png)'
- en: On a side note, the `fillna` function would not change the actual dataset when
    you execute them. You could run the following code if you want the DataFrame to
    be replaced when you execute the function.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，`fillna`函数在执行时不会改变实际的数据集。如果你希望 DataFrame 在执行函数时被替换，可以运行以下代码。
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: There would be no output when you run the code above but your DataFrame would
    be affected. Don’t use the parameter inplace if you are still experimenting with
    the data.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行上述代码时不会有输出，但你的 DataFrame 会受到影响。如果你还在实验数据中，请不要使用参数 inplace。
- en: Replace missing values on multiple columns
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在多个列上替换缺失值
- en: You must be careful when using the `fillna` function. If we run the function
    while using the whole DataFrame, it would fill every missing data with the passed
    values, even if it is not your intention. Let’s see what I am talking about by
    using the data example.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`fillna`函数时必须小心。如果我们在整个 DataFrame 上运行该函数，它会用传入的值填充所有缺失的数据，即使这不是你的意图。通过使用数据示例来看看我在说什么。
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![The Optimal Way to Input Missing Data with Pandas fillna()](../Images/17842afef8a916a6142e36de03a8b50b.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Pandas fillna() 填充缺失数据的最佳方法](../Images/17842afef8a916a6142e36de03a8b50b.png)'
- en: I tried to take all the observations where the ‘ndvi_ne’ column was missing.
    If we see the output above, we can see that several columns also contain missing
    data. Let’s try to use the `fillna` function to fill them up.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我尝试获取所有‘ndvi_ne’列缺失的观察值。如果我们查看上面的输出，可以看到几个列也包含缺失数据。让我们尝试使用`fillna`函数来填充它们。
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![The Optimal Way to Input Missing Data with Pandas fillna()](../Images/1bb751e8ff344e91a7b50996cb2767e7.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Pandas fillna() 填充缺失数据的最佳方法](../Images/1bb751e8ff344e91a7b50996cb2767e7.png)'
- en: All the missing data is now replaced with the string ‘zero’ values. Often time,
    this is not what we want. If we want to replace the missing data on certain columns,
    we could take the column first before using the `fillna` function.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的缺失数据现在都被字符串‘zero’值替换了。通常，这不是我们想要的。如果我们只想替换某些列的缺失数据，我们可以在使用`fillna`函数之前先选择这些列。
- en: '[PRE7]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![The Optimal Way to Input Missing Data with Pandas fillna()](../Images/cbe4521dbe53bda8771e3804179a55c7.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Pandas fillna() 填充缺失数据的最佳方法](../Images/cbe4521dbe53bda8771e3804179a55c7.png)'
- en: There is also an optimal way to fill the missing data by passing a dictionary
    containing the column's name as the key and what to replace as the values. Let’s
    try it out with the code example.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一种优化的方法来填充缺失数据，即通过传递一个包含列名作为键和替换值的字典。让我们通过代码示例来尝试一下。
- en: '[PRE8]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![The Optimal Way to Input Missing Data with Pandas fillna()](../Images/0883bc501dce5104283e83e52bdb7888.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Pandas fillna() 填充缺失数据的最佳方法](../Images/0883bc501dce5104283e83e52bdb7888.png)'
- en: With the code above, we replace the column ‘ndvi_ne’ with 0, ‘ndvi_nw’ with
    ‘zero’ and ‘ndvi_se’ with the column mean. The rest were untouched as we didn’t
    specify them in the function.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 使用上述代码，我们将列‘ndvi_ne’替换为0，将‘ndvi_nw’替换为‘zero’，将‘ndvi_se’替换为列均值。其余部分未被修改，因为我们没有在函数中指定它们。
- en: Fill n-th consecutive missing data
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 填充第 n 个连续缺失的数据
- en: The Pandas `fillna` function also allowed the user to specify the number of
    missing data to be replaced. By using the limit parameter, we can fill in the
    missing data to the n-th missing data consecutively. Let’s try with the code example.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas `fillna`函数还允许用户指定要替换的缺失数据的数量。通过使用 limit 参数，我们可以连续填充到第 n 个缺失数据。让我们通过代码示例尝试一下。
- en: '[PRE9]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![The Optimal Way to Input Missing Data with Pandas fillna()](../Images/8b1a00cbf7f409a322d65e10bbd54ccd.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Pandas fillna() 填充缺失数据的最佳方法](../Images/8b1a00cbf7f409a322d65e10bbd54ccd.png)'
- en: We can see from the above output that only three out of five missing data rows
    were replaced. If we change the limit parameter, we can see a different result.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 从上述输出中，我们可以看到只有五行缺失数据中的三行被替换了。如果我们更改限制参数，可能会看到不同的结果。
- en: '[PRE10]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![The Optimal Way to Input Missing Data with Pandas fillna()](../Images/ee1dafd7b793d1a674fd59fea254469a.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![使用Pandas fillna()输入缺失数据的最佳方法](../Images/ee1dafd7b793d1a674fd59fea254469a.png)'
- en: Only two out of five data shown were replaced. The missing data do not need
    to be on top of each other. They can be in different rows, and the limit parameter
    would only replace the first two missing data if the limit parameter is set to
    two.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 显示的数据中只有两行被替换。缺失数据不需要彼此相邻。它们可以在不同的行中，限制参数只会替换前两个缺失数据（如果限制参数设置为两）。
- en: Forward and backward fill
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 前向填充和后向填充
- en: What is good about the Pandas `fillna` function is that we can fill in the missing
    data from the preceding or the succession observation. Let’s try to fill in the
    data from the preceding observation. As a reminder, we have missing data in the
    following column.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas `fillna`函数的优点在于，我们可以从前一个观测值或后续观测值中填充缺失数据。让我们尝试从前一个观测值中填充数据。提醒一下，我们在以下列中有缺失数据。
- en: '[PRE11]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![The Optimal Way to Input Missing Data with Pandas fillna()](../Images/c49205466688d5e94379789314079493.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![使用Pandas fillna()输入缺失数据的最佳方法](../Images/c49205466688d5e94379789314079493.png)'
- en: Then, we would use the `fillna` function to replace the missing data from the
    previous row.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将使用`fillna`函数用前一行的数据替代缺失的数据。
- en: '[PRE12]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![The Optimal Way to Input Missing Data with Pandas fillna()](../Images/9fda920d41a77001146fc6e1c44556c1.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![使用Pandas fillna()输入缺失数据的最佳方法](../Images/9fda920d41a77001146fc6e1c44556c1.png)'
- en: 'The missing data is now replaced with values from the previous rows, or we
    could call it forward fill. Let’s try the reverse: the backward fill or filling
    up missing data from the succession rows.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 缺失数据现在已被前一行的数据替代，或者我们可以称之为前向填充。让我们尝试反向操作：后向填充或从后续行填充缺失数据。
- en: '[PRE13]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![The Optimal Way to Input Missing Data with Pandas fillna()](../Images/148115d7703fd6fe1c101d01a33917e2.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![使用Pandas fillna()输入缺失数据的最佳方法](../Images/148115d7703fd6fe1c101d01a33917e2.png)'
- en: We can see from the output above that the last data is still missing. Because
    we don’t have any observation after the missing data row, the function keeps it
    as it is.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 从上面的输出中，我们可以看到最后的数据仍然缺失。由于在缺失数据行之后没有任何观测值，函数将其保持原样。
- en: The forward and backward fill method is a good function if you know the previous
    and the data after are still related, such as in the time series data. Imagine
    stock data; the previous day's data might still be applicable the day after.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 前向填充和后向填充方法在知道前后数据仍然相关时非常有效，例如在时间序列数据中。假设股票数据；前一天的数据可能在第二天仍然适用。
- en: Conclusion
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Missing data is a typical occurrence during data preprocessing and exploration.
    One thing to do with the missing data is to replace it with another value. To
    do that, we can use the Pandas function called `fillna`. Using the function is
    simple, but there are a few methods to optimally fill up our data, including replacing
    missing data in multiple columns, limiting the imputation, and using other rows
    to fill the data.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 缺失数据是数据预处理和探索中的典型情况。处理缺失数据的一种方法是用另一个值替代它。为此，我们可以使用名为`fillna`的Pandas函数。使用该函数很简单，但有几种方法可以最佳地填充数据，包括在多个列中替换缺失数据、限制填充范围以及使用其他行填充数据。
- en: '**[Cornellius Yudha Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**
    is a data science assistant manager and data writer. While working full-time at
    Allianz Indonesia, he loves to share Python and Data tips via social media and
    writing media.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Cornellius Yudha Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**
    是一名数据科学助理经理和数据撰稿人。在全职工作于印尼安联期间，他喜欢通过社交媒体和写作媒体分享Python和数据技巧。'
- en: More On This Topic
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Generalized and Scalable Optimal Sparse Decision Trees(GOSDT)](https://www.kdnuggets.com/2023/02/generalized-scalable-optimal-sparse-decision-treesgosdt.html)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[广义可扩展的最优稀疏决策树（GOSDT）](https://www.kdnuggets.com/2023/02/generalized-scalable-optimal-sparse-decision-treesgosdt.html)'
- en: '[Reinforcement Learning: Teaching Computers to Make Optimal Decisions](https://www.kdnuggets.com/2023/07/reinforcement-learning-teaching-computers-make-optimal-decisions.html)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[强化学习：教计算机做出最佳决策](https://www.kdnuggets.com/2023/07/reinforcement-learning-teaching-computers-make-optimal-decisions.html)'
- en: '[How to Deal with Missing Data Using Interpolation Techniques in Pandas](https://www.kdnuggets.com/how-to-deal-with-missing-data-using-interpolation-techniques-in-pandas)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何使用 Pandas 中的插值技术处理缺失数据](https://www.kdnuggets.com/how-to-deal-with-missing-data-using-interpolation-techniques-in-pandas)'
- en: '[The Easiest Way to Make Beautiful Interactive Visualizations With Pandas](https://www.kdnuggets.com/2021/12/easiest-way-make-beautiful-interactive-visualizations-pandas.html)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Pandas 制作美观的交互式可视化的最简单方法](https://www.kdnuggets.com/2021/12/easiest-way-make-beautiful-interactive-visualizations-pandas.html)'
- en: '[Converting JSONs to Pandas DataFrames: Parsing Them the Right Way](https://www.kdnuggets.com/converting-jsons-to-pandas-dataframes-parsing-them-the-right-way)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将 JSON 转换为 Pandas DataFrames：正确解析的方法](https://www.kdnuggets.com/converting-jsons-to-pandas-dataframes-parsing-them-the-right-way)'
- en: '[How to Identify Missing Data in Time-Series Datasets](https://www.kdnuggets.com/how-to-identify-missing-data-in-timeseries-datasets)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何识别时间序列数据集中的缺失数据](https://www.kdnuggets.com/how-to-identify-missing-data-in-timeseries-datasets)'
