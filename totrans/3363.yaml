- en: 5 Machine Learning Projects You Can No Longer Overlook, January
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2017/01/five-machine-learning-projects-cant-overlook-january.html](https://www.kdnuggets.com/2017/01/five-machine-learning-projects-cant-overlook-january.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Previous instalments of "[5 Machine Learning Projects You Can No Longer Overlook](/tag/overlook)"
    brought to light a number of lesser-known machine learning projects, and included
    both general purpose and specialized machine learning libraries and deep learning
    libraries, along with auxiliary support, data cleaning, and automation tools.
    After a hiatus, we thought the idea deserved another follow-up.
  prefs: []
  type: TYPE_NORMAL
- en: This post will showcase 5 machine learning projects that you may not yet have
    heard of, including those from across a number of different ecosystems and programming
    languages. You may find that, even if you have no requirement for any of these
    particular tools, inspecting their broad implementation details or their specific
    code may help in generating some ideas of your own. Like the previous iteration,
    there is no formal criteria for inclusion beyond projects that have caught my
    eye over time spent online, and the projects have Github repositories. Subjective,
    to be sure.
  prefs: []
  type: TYPE_NORMAL
- en: 'Without further ado, here they are: yet another 5 machine learning projects
    you should consider having a look at. They are presented in no particular order,
    but are numbered for convenience, and because numbering things brings me an inner
    peace that I still don''t fully understand.'
  prefs: []
  type: TYPE_NORMAL
- en: '**1\. [Hyperopt-sklearn](https://github.com/hyperopt/hyperopt-sklearn)**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Hyperopt-sklearn is Hyperopt-based model selection for machine learning algorithms
    in the [scikit-learn](http://scikit-learn.org/) project. Directly from the project''s
    [documentation](http://hyperopt.github.io/hyperopt-sklearn/):'
  prefs: []
  type: TYPE_NORMAL
- en: Finding the right classifier to use for your data can be hard. Once you have
    chosen a classifier, tuning all of the parameters to get the best results is tedious
    and time consuming. Even after all of your hard work, you may have chosen the
    wrong classifier to begin with. Hyperopt-sklearn provides a solution to this problem.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Hyperopt-sklearn uses a variety of search algorithms, can search all (supported)
    classifiers or only within the parameter space of a given classifier, and supports
    a number of preprocessing steps such as PCA, TfidfVectorizer, Normalzier, and
    OneHotEncoder.
  prefs: []
  type: TYPE_NORMAL
- en: Does it work?
  prefs: []
  type: TYPE_NORMAL
- en: The table below shows the [F1 scores](https://en.wikipedia.org/wiki/F1_score)
    obtained by classifiers run with scikit-learn's default parameters and with hyperopt-sklearn's
    optimized parameters on the 20 newsgroups dataset. The results from hyperopt-sklearn
    were obtained from a single run with 25 evaluations.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Hyperopt-sklearn F1 results](../Images/f41f03f92bf2aa317f3a26aeb9b893c5.png)'
  prefs: []
  type: TYPE_IMG
- en: Hyperopt-sklearn rquires very little additional code to get working, and has
    some handy [quick start code](https://github.com/hyperopt/hyperopt-sklearn/blob/master/notebooks/skdata_quick_intro.ipynb)
    to get going with.
  prefs: []
  type: TYPE_NORMAL
- en: '**2\. [Dlib](https://github.com/davisking/dlib)**'
  prefs: []
  type: TYPE_NORMAL
- en: Dlib is a general purpose toolkit for making machine learning and data analysis
    applications in C++. As in, it's written in C++. But fret not; it also has a [Python
    API](http://dlib.net/python/index.html).
  prefs: []
  type: TYPE_NORMAL
- en: '[![Dlib machine learning guide](../Images/8634b03a490abe48617051203343822a.png)](https://i.imgur.com/7c3f2H1.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'From the [official website](http://dlib.net/):'
  prefs: []
  type: TYPE_NORMAL
- en: Dlib is a modern C++ toolkit containing machine learning algorithms and tools
    for creating complex software in C++ to solve real world problems. It is used
    in both industry and academia in a wide range of domains including robotics, embedded
    devices, mobile phones, and large high performance computing environments.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The documentation is up to par, the API is well explained, and the project comes
    with a [concise introduction](http://dlib.net/intro.html). A [blog](http://blog.dlib.net/)
    is also active, overviewing some interesting projects using the library. Dlib
    is not new either; it has been under development since 2002.
  prefs: []
  type: TYPE_NORMAL
- en: Given its wide array of available algorithms, I would be quite interested in
    seeing a side by side comparison of execution times with scikit-learn. Anyone?
    Anyone?
  prefs: []
  type: TYPE_NORMAL
- en: '**3\. [NN++](https://github.com/stagadish/NNplusplus)**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Staying with C++ for a moment, NN++ is a tiny and easy to use neural net implementation
    for said language. No installation is necessary; just download and #include.'
  prefs: []
  type: TYPE_NORMAL
- en: 'From its repo:'
  prefs: []
  type: TYPE_NORMAL
- en: A short, self-contained, and easy-to-use neural net implementation for C++.
    It includes the neural net implementation and a Matrix class for basic linear
    algebra operations. This project is mostly for learning purposes, but preliminary
    testing results over the MNIST dataset show some promise.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Its documentation is sparse, but it does take some extra care to explain the
    accompanying Matrix class usage. A few snippets of code explain setting up and
    querying a neural net. The code is minimal, and so those looking to understand
    either simple neural networks under the hood or make a move from another language
    directly to implementing nets in C++, this project is a good place to look.
  prefs: []
  type: TYPE_NORMAL
- en: '**4\. [LightGBM](https://github.com/Microsoft/LightGBM)**'
  prefs: []
  type: TYPE_NORMAL
- en: 'LightGBM is a Microsoft gradient boosted tree algorithm implementation. From
    the repo:'
  prefs: []
  type: TYPE_NORMAL
- en: A fast, distributed, high performance gradient boosting (GBDT, GBRT, GBM or
    MART) framework based on decision tree algorithms, used for ranking, classification
    and many other machine learning tasks. It is under the umbrella of the DMTK([http://github.com/microsoft/dmtk](https://github.com/microsoft/dmtk))
    project of Microsoft.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Written in C++ and [Python](https://github.com/Microsoft/LightGBM/tree/master/examples/python-guide),
    LightGBM has a [quick start guide](https://github.com/Microsoft/LightGBM/tree/master/examples/python-guide),
    a [parallel learning guide](https://github.com/Microsoft/LightGBM/wiki/Parallel-Learning-Guide),
    and a quality [overview of its features](https://github.com/Microsoft/LightGBM/wiki/Features).
  prefs: []
  type: TYPE_NORMAL
- en: '![Leaf-wise growth](../Images/bb1ab62df362606acecd8219277af037.png)'
  prefs: []
  type: TYPE_IMG
- en: But how does it perform?
  prefs: []
  type: TYPE_NORMAL
- en: '[Experiments](https://github.com/Microsoft/LightGBM/wiki/Experiments#comparison-experiment)
    on public datasets show that LightGBM can outperform other existing boosting framework
    on both efficiency and accuracy, with significant lower memory consumption. What''s
    more, the [experiments](https://github.com/Microsoft/LightGBM/wiki/Experiments#parallel-experiment)
    show that LightGBM can achieve a linear speed-up by using multiple machines for
    training in specific settings.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: LightGBM, like the rest of the Microsoft Distributed Machine Learning Toolkit,
    has a number of features that make it seemingly worth checking out.
  prefs: []
  type: TYPE_NORMAL
- en: '**5\. [Sklearn-pandas](https://github.com/paulgb/sklearn-pandas)**'
  prefs: []
  type: TYPE_NORMAL
- en: The projects thus far have been general purpose machine learning toolkits, or
    implementations of specific algorithms. This project is a bit different, and plays
    a supportive role for machine learning tasks.
  prefs: []
  type: TYPE_NORMAL
- en: Sklearn-pandas an actively-developed module which "provides a bridge between
    Scikit-Learn's machine learning methods and pandas-style Data Frames."
  prefs: []
  type: TYPE_NORMAL
- en: 'More from the repo:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In particular, it provides:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A way to map DataFrame columns to transformations, which are later recombined
    into features.
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
- en: A compatibility shim for old scikit-learn versions to cross-validate a pipeline
    that takes a pandas DataFrame as input. This is only needed for scikit-learn<0.16.0
    (see [#11](https://github.com/paulgb/sklearn-pandas/issues/11) for details). It
    is deprecated and will likely be dropped in skearn-pandas==2.0.
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The real use here is mapping columns to transformations. Here is a snippet
    from the Gitub repo to demonstrate:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Note that the first three columns are the output of the LabelBinarizer (corresponding
    to _cat_, _dog_, and _fish_ respectively) and the fourth column is the standardized
    value for the number of children. In general, the columns are ordered according
    to the order given when the DataFrameMapper is constructed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Hopefully you have found something of interest in these projects. Happy machine
    learning!
  prefs: []
  type: TYPE_NORMAL
- en: '**Related**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[5 Machine Learning Projects You Can No Longer Overlook](/2016/05/five-machine-learning-projects-cant-overlook.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 More Machine Learning Projects You Can No Longer Overlook](/2016/06/five-more-machine-learning-projects-cant-overlook.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Deep Learning Projects You Can No Longer Overlook](/2016/07/five-deep-learning-projects-cant-overlook.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Best ETL Tools in 2021](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
