- en: 'Introduction to Trainspotting: Computer Vision, Caltrain, and Predictive Analytics'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2016/11/introduction-trainspotting.html](https://www.kdnuggets.com/2016/11/introduction-trainspotting.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**By Chloe Mawer, Colin Higgins & Matthew Rubashkin, [Silicon Valley Data Science](http://svds.com/)**.'
  prefs: []
  type: TYPE_NORMAL
- en: Here at Silicon Valley Data Science, we have a slight obsession with the Caltrain.
    Our interest stems from the fact that half of our employees rely on the Caltrain
    to get to work each day. We also want to give back to the community, and we love
    when we can do that with data. In addition to helping clients [build robust data
    systems](http://www.svds.com/building-data-systems-what-do-you-need/?utm_source=kdnuggets&utm_medium=referral) or [use
    data to solve business challenges](http://www.svds.com/five-business-challenges-data-can-solve/?utm_source=kdnuggets&utm_medium=referral),
    we like to work on R&D projects to explore technologies and experiment with new
    algorithms, hypotheses, and ideas. We previously [analyzed delays](http://www.svds.com/the-trains-project-analyzing-caltrain-delays/?utm_source=kdnuggets&utm_medium=referral)
    using Caltrain’s real-time API to improve arrival predictions, and we have [modeled
    the sounds](http://www.svds.com/listening-caltrain/?utm_source=kdnuggets&utm_medium=referral) of
    passing trains to tell them apart. In this post we’ll start looking at the nuts
    and bolts of making our Caltrain work possible.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: <http://www.svds.com/wp-content/uploads/2016/09/side-by-side.mp4?_=1>
  prefs: []
  type: TYPE_NORMAL
- en: If you have ever ridden the train, you know that the delay estimates Caltrain
    provides can be a bit... off. Sometimes a train will remain “two minutes delayed”
    for ten minutes after the train was already supposed to have departed, or delays
    will be reported when the train is on time. The idea for Trainspotting came from
    our desire to integrate new data sources for delay prediction beyond scraping
    Caltrain’s API . Since we had previously set up a Raspberry Pi to analyze train
    whistles, we thought it would be fun to validate the data coming from the Caltrain
    API by capturing real-time video and audio of trains passing by our office near
    the Mountain View station.
  prefs: []
  type: TYPE_NORMAL
- en: 'There were several questions we wanted our IoT Raspberry Pi train detector
    to answer:'
  prefs: []
  type: TYPE_NORMAL
- en: Is there a train passing?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which direction is it going?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How fast is the train moving?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Sound alone is pretty good at answering the first question because trains are
    rather loud. To help answer the rest of the questions, we added a camera to our
    Raspberry Pi to capture video.
  prefs: []
  type: TYPE_NORMAL
- en: 'We’ll describe this process in a series of posts. They will focus on:'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to Trainspotting (you are here)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Image Processing in Python](http://www.svds.com/image-processing-python/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Streaming Video Analysis with Python](http://www.svds.com/streaming-video-analysis-python/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Streaming Audio Analysis and Sensor Fusion
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Recognizing Images on a Raspberry Pi
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connecting an IoT device to the Cloud
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Building a Deployable IoT Device
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Let’s quickly look at what these pieces will cover.
  prefs: []
  type: TYPE_NORMAL
- en: Walking through Trainspotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the upcoming “Image Processing in Python” post, Data Scientist Chloe Mawer
    demonstrates how to use open-source Python libraries to process images and videos
    for detecting trains and their direction using OpenCV. You can also see her recent
    talk from [PyCon 2016](https://www.youtube.com/watch?v=MC00XWdl-ms).
  prefs: []
  type: TYPE_NORMAL
- en: 'In “Streaming Video Analysis with Python,” Data Scientist Colin Higgins and
    Data Engineer Matt Rubashkin describe the steps to take the video analysis to
    the next level: implementing streaming, on-Pi video analysis with multithreading,
    and light/dark adaptation. The figure below gives a peek into some of the challenges
    in detecting trains in varied light conditions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[![Challenges in detecting trains in varied light conditions](../Images/bb086b83b9de10013d770d92663f6561.png)](http://www.svds.com/wp-content/uploads/2016/09/Trainspotting_variedlight.png)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Challenges in detecting trains in varied light conditions**'
  prefs: []
  type: TYPE_NORMAL
- en: In a previous post mentioned above, [Listening to Caltrain](http://www.svds.com/listening-caltrain/),
    we analyzed frequency profiles to discriminate between local and express trains
    passing our Sunnyvale office. Since that post, SVDS has grown and moved to Mountain
    View. Since the move, we found that the pattern of train sounds was different
    in the new location, so we needed a more flexible approach. In “Streaming Audio
    Analysis and Sensor Fusion,” Colin describes the audio processing and a custom
    sensor fusion architecture that controls both video and audio.
  prefs: []
  type: TYPE_NORMAL
- en: '[![](../Images/1fcec7d9aee0e355d38eb427c4dc20c9.png)](http://www.svds.com/wp-content/uploads/2016/09/Pasted-image-at-2016_09_09-12_01-PM.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'After we were able to detect trains, their speed and their direction, we ran
    into a new problem: our Pi was not only detecting Caltrains (true positive), but
    also detecting Union Pacific freight trains and the VTA light rail (false positive).
    In order to boost our detector’s false positive rate, we used convolutional neural
    networks implemented in Google’s machine learning [TensorFlow library](https://www.tensorflow.org/versions/r0.9/tutorials/image_recognition/index.html).
    We implemented a [custom Inception-V3 model](https://www.tensorflow.org/versions/r0.8/how_tos/image_retraining/index.html) trained
    on thousands of images of vehicles to identify different types of trains with
    >95% accuracy. Matt details this solution in “Recognizing Images on a Raspberry
    Pi.”'
  prefs: []
  type: TYPE_NORMAL
- en: '[![Trainspotting_tensorflow](../Images/9fe6d3b5514d8e048d0586b01579554f.png)](http://www.svds.com/wp-content/uploads/2016/09/Trainspotting_tensorflow.png)'
  prefs: []
  type: TYPE_NORMAL
- en: In “Connecting an IoT Device to the Cloud,” Matt shows how we connected our
    Pi to the cloud using Kafka, allowing monitoring with Grafana and persistence
    in HBase.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Monitoring our Pi with Grafana](../Images/2b07f5193a5f2914c5807134d46d1c80.png)](http://www.svds.com/wp-content/uploads/2016/09/Trainspotting_grafana.png)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Monitoring our Pi with Grafana**'
  prefs: []
  type: TYPE_NORMAL
- en: The tools and next steps
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Before we even finished the development on our first device, we wanted to set
    up more of these devices to get ground truth at other points along the track.
    With this in mind, we realized that we couldn’t always guarantee that we’d have
    a speedy internet connection, and we wanted to keep the devices themselves affordable.
    These requirements make the the Raspberry Pi a great choice. The Pi has enough
    horsepower to do on-device stream processing so that we could send smaller, processed
    data streams over internet connections, and the parts are cheap. The total cost
    of our hardware for this sensor is $130, and the code relies only on open source
    libraries. In “Building a Deployable IoT Device,” we’ll walk through the device
    hardware and setup in detail and show you where you can get the code so you can
    start Trainspotting for yourself.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Device and hardware setup supplies](../Images/19032c6e2f399c4a3bd05f7b0a998f2b.png)](http://www.svds.com/wp-content/uploads/2016/09/Trainspotting_supplies.png)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Device and hardware setup supplies**'
  prefs: []
  type: TYPE_NORMAL
- en: If you want to learn more about Trainspotting and Data Science at SVDS, stay
    tuned for our future Trainspotting blog posts, and you can sign up for our newsletter [here](http://www.svds.com/newsletter/?utm_source=kdnuggets&utm_medium=referral). Let
    us know which pieces of this series you’re most interested in.
  prefs: []
  type: TYPE_NORMAL
- en: You can also find our “Caltrain Rider” in the [Android](https://play.google.com/store/apps/details?id=interprone.caltrain&hl=en) and [Apple](https://itunes.apple.com/us/app/caltrain-rider/id897315176?mt=8) app
    stores. Our app is built upon the Hadoop Ecosystem including HBase and Spark,
    and relies on Kafka and Spark Streaming for ingestion and processing of Twitter
    sentiment and Caltrain API data.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chloe Mawer](https://www.linkedin.com/in/chloemawer)** comes from a background
    in geophysics and hydrology, and is well-versed in leveraging data to make predictions
    and provide valuable insights. Her experience in both academic research and engineering
    makes her capable of tackling novel problems and creating practical, effective
    solutions.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Colin Higgins](https://www.linkedin.com/in/colinahiggins)**'' background
    is in early-phase Parkinson’s disease drug discovery, wherein he used high-dimensional
    biophysical datasets to model the effects of dynamic protein structures on drug
    selectivity. Prior to joining SVDS, he consulted for a startup, developing a user-matching
    algorithm based on natural language processing.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Matthew Bubashkin](https://www.linkedin.com/in/mrubash1)** comes from a
    background in optical physics and biomedical research, and has a broad range of
    experiences in software development, database engineering, and data analytics.
    He enjoys working closely with clients to develop straightforward and robust solutions
    to difficult problems.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](http://svds.com/introduction-to-trainspotting/?utm_source=kdnuggets&utm_medium=referral).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[7 Steps to Understanding Computer Vision](/2016/08/seven-steps-understanding-computer-vision.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Predicting Future Human Behavior with Deep Learning](/2016/09/predicting-future-human-behavior-deep-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 More Machine Learning Projects You Can No Longer Overlook](/2016/06/five-more-machine-learning-projects-cant-overlook.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[6 Things You Need To Know About Data Management And Why It Matters…](https://www.kdnuggets.com/2022/05/6-things-need-know-data-management-matters-computer-vision.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[TensorFlow for Computer Vision - Transfer Learning Made Easy](https://www.kdnuggets.com/2022/01/tensorflow-computer-vision-transfer-learning-made-easy.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Discover the World of Computer Vision: Introducing MLM''s Latest…](https://www.kdnuggets.com/2024/01/mlm-discover-the-world-of-computer-vision-ebook)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Applications of Computer Vision](https://www.kdnuggets.com/2022/03/5-applications-computer-vision.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[DINOv2: Self-Supervised Computer Vision Models by Meta AI](https://www.kdnuggets.com/2023/05/dinov2-selfsupervised-computer-vision-models-meta-ai.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News March 9, 2022: Build a Machine Learning Web App in 5…](https://www.kdnuggets.com/2022/n10.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
