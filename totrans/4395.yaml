- en: Getting Started with PyTorch
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyTorch 入门
- en: 原文：[https://www.kdnuggets.com/2020/10/getting-started-pytorch.html](https://www.kdnuggets.com/2020/10/getting-started-pytorch.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/10/getting-started-pytorch.html](https://www.kdnuggets.com/2020/10/getting-started-pytorch.html)
- en: '[comments](#comments)![Figure](../Images/0a89ffdfb417c456d45d0bf297c1c911.png)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[comments](#comments) ![Figure](../Images/0a89ffdfb417c456d45d0bf297c1c911.png)'
- en: Photo by [Ihor Malytskyi](https://unsplash.com/@ihor_malytskyi?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Ihor Malytskyi](https://unsplash.com/@ihor_malytskyi?utm_source=medium&utm_medium=referral)
    提供，拍摄于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)。
- en: Introduction
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 介绍
- en: 'PyTorch is nowadays one of the fastest-growing Python frameworks for Deep Learning.
    This library was in fact first used mainly by researchers in order to create new
    models, but thanks to recent advancements is gaining lots of interests also from
    many companies. Some of the reasons for the interest in this framework are:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: PyTorch 现如今是增长最快的 Python 深度学习框架之一。这个库最初主要由研究人员使用来创建新模型，但由于最近的进展，它也引起了许多公司的关注。对这个框架的兴趣有以下原因：
- en: GPU optimized tensor computation (matrix-like data structures) using an interface
    closely resembling Numpy in order to facilitate adoption.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GPU 优化的张量计算（类似矩阵的数据结构），使用与 Numpy 类似的接口以促进采纳。
- en: Neural Networks training using [Automatic Differentiation](https://pytorch.org/tutorials/beginner/blitz/autograd_tutorial.html#sphx-glr-beginner-blitz-autograd-tutorial-py) (to
    keep track of all the operations which happened to a tensor and automatically
    calculate gradients).
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 [自动微分](https://pytorch.org/tutorials/beginner/blitz/autograd_tutorial.html#sphx-glr-beginner-blitz-autograd-tutorial-py)
    进行神经网络训练（跟踪张量上的所有操作并自动计算梯度）。
- en: Dynamic Computation Graph (using PyTorch it is not necessary in order to run
    a model to define first the entire computational graph like in Tensorflow).
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动态计算图（使用 PyTorch 时，不必像在 Tensorflow 中那样首先定义整个计算图来运行模型）。
- en: 'PyTorch is freely available to be installed on any operating system following
    the [documentation instructions](https://pytorch.org/get-started/locally/). Some
    of the main elements which compose this library are the:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: PyTorch 可以在任何操作系统上自由安装，按照 [文档说明](https://pytorch.org/get-started/locally/) 即可。这个库的主要组成部分有：
- en: '***Autograd*** module: is used to record the operations performed on a tensor
    and perform them backwards to compute gradients (this property can be extremely
    useful to speed up neural networks operations and to allow PyTorch to follow the [imperative
    programming](https://en.wikipedia.org/wiki/Imperative_programming) paradigm).'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***Autograd*** 模块：用于记录对张量执行的操作，并向后执行这些操作以计算梯度（这个属性对加速神经网络操作非常有用，并允许 PyTorch
    遵循 [命令式编程](https://en.wikipedia.org/wiki/Imperative_programming) 范式）。'
- en: '***Optim*** module: is used in order to easily import and apply various optimization
    algorithms for neural networks training such as Adam, Stochastic Gradient Descent,etc..'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***Optim*** 模块：用于轻松导入和应用各种优化算法，例如 Adam、随机梯度下降等，以进行神经网络训练。'
- en: '***nn*** module: provides a set of functions which can help us to quickly design
    any type of neural network layer by layer.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***nn*** 模块：提供了一组函数，可以帮助我们快速逐层设计任何类型的神经网络。'
- en: Demonstration
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 演示
- en: In this article, I will walk you through a practical example in order to get
    started using PyTorch. All the code used throughout this article (and more!) is
    available on my [GitHub](https://github.com/pierpaolo28/Kaggle-Challenges/blob/master/rain-prediction.ipynb) and [Kaggle](https://www.kaggle.com/pierpaolo28/rain-prediction) accounts.
    For this example, we are going to use the [Kaggle Rain in Australia](https://www.kaggle.com/jsphyg/weather-dataset-rattle-package) dataset
    in order to predict if tomorrow is going to rain or not.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我将带你通过一个实用的例子开始使用 PyTorch。本文中使用的所有代码（还有更多！）都可以在我的 [GitHub](https://github.com/pierpaolo28/Kaggle-Challenges/blob/master/rain-prediction.ipynb)
    和 [Kaggle](https://www.kaggle.com/pierpaolo28/rain-prediction) 账户中找到。我们将使用 [Kaggle
    Rain in Australia](https://www.kaggle.com/jsphyg/weather-dataset-rattle-package)
    数据集来预测明天是否会下雨。
- en: Importing Libraries
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 导入库
- en: First of all, we need to import all the necessary libraries.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要导入所有必要的库。
- en: Data Preprocessing
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据预处理
- en: For this example, we will focus to just use the ***RISK_MM*** and ***Location*** indicators
    as our model features (Figure 1). Once divided our data into training and test
    sets, we can then convert our Numpy arrays into PyTorch tensors and create a training
    and test data-loader to use in order to fed in data to our neural network.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个例子，我们将重点使用***RISK_MM***和***Location***指示符作为我们的模型特征（图 1）。将数据分为训练集和测试集后，我们可以将
    Numpy 数组转换为 PyTorch 张量，并创建训练和测试数据加载器，以便将数据输入到神经网络中。
- en: '![Figure](../Images/d045070e0bdc58ec3061c5afd523698e.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![Figure](../Images/d045070e0bdc58ec3061c5afd523698e.png)'
- en: 'Figure 1: Reduced Dataframe'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1：减少的数据框
- en: Modelling
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 建模
- en: At this point, using PyTorch ***nn*** module, we can then design our Artificial
    Neural Network (ANN). In PyTorch, neural networks can be defined as classes constituted
    by two main functions: ***__inti__()*** and ***forward()***.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，使用 PyTorch 的***nn***模块，我们可以设计我们的人工神经网络（ANN）。在 PyTorch 中，神经网络可以定义为由两个主要函数组成的类：***__inti__()***
    和 ***forward()***。
- en: In the ***__inti__() ***function, we can set up our network layers while in
    the ***forward()*** function we decide how to stack the different elements of
    our network together. In this way, debugging and experimenting can take place
    relatively easily by just adding print statements in the ***forward()*** function
    to inspect any part of the network at any point in time.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在***__inti__()***函数中，我们可以设置我们的网络层，而在***forward()***函数中，我们决定如何将网络的不同元素堆叠在一起。通过这种方式，可以相对轻松地进行调试和实验，只需在***forward()***函数中添加打印语句即可随时检查网络的任何部分。
- en: Additionally, PyTorch provides also a [Sequential Interface](https://pytorch.org/docs/stable/nn.html#sequential) which
    can be used in order to create models in a similar way to how they are constructed
    using Keras Tensorflow API.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，PyTorch 还提供了一个[Sequential Interface](https://pytorch.org/docs/stable/nn.html#sequential)，可以用来以类似于使用
    Keras Tensorflow API 的方式构建模型。
- en: In this simple network, we are taking as input 50 features since that we previously
    converted our input categorical variables into dummy/indicator variables using
    the Pandas **get_dummies() **functionality. Therefore, our network will be composed
    of 50 neurons at the input, a hidden layer of 20 neurons and an output layer of
    a single neuron. The size of the hidden layer can certainly be varied and more
    hidden layer can be easily added, but this would probably lead to risking overfitting
    to our data, considering the limited amount of data available. When staking together
    successive layers, we then just need to make sure the number of output features
    of one layer is equal to the number of input features in the successive layer.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个简单的网络中，我们输入了50个特征，因为我们之前使用Pandas的**get_dummies()**功能将输入的分类变量转换为了虚拟变量/指示变量。因此，我们的网络将由50个输入神经元、一个包含20个神经元的隐藏层和一个单神经元的输出层组成。隐藏层的大小可以根据需要进行调整，也可以很容易地添加更多的隐藏层，但这可能会导致过拟合风险，因为数据量有限。将连续层堆叠在一起时，我们只需确保一层的输出特征数量等于下一层的输入特征数量。
- en: Once instantiated our model, we can then also print out the network architecture.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 实例化模型后，我们还可以打印出网络架构。
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: ANN Training
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ANN 训练
- en: We are now finally ready to train our model. In the following code snippet,
    we first define Binary Cross Entropy as our loss function and Adam as the optimiser
    for our model parameters. Finally, we create a training loop of 7 iterations and
    store some key metrics parameters such as the overall loss and model accuracy
    for each iteration.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在终于准备好训练我们的模型。在下面的代码片段中，我们首先定义 Binary Cross Entropy 作为我们的损失函数，并将 Adam 作为优化器来调整模型参数。最后，我们创建一个包含7次迭代的训练循环，并存储一些关键指标参数，如每次迭代的总体损失和模型准确性。
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As can be summarised in Figure 2, our model successfully managed to achieve
    a good accuracy without risking to overfit the original data (both the training
    loss and accuracy are just about to reach a plateau). This can be furthermore
    validated by implementing also a train/validation split to train our model and
    tune its parameters (as demonstrated in this [GitHub](https://github.com/pierpaolo28/Kaggle-Challenges/blob/master/rain-prediction.ipynb) notebook).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如图 2 所示，我们的模型成功地实现了良好的准确性，而没有过度拟合原始数据（训练损失和准确性都接近饱和）。这还可以通过实施训练/验证拆分来进一步验证，以训练我们的模型并调整其参数（如在这个[GitHub](https://github.com/pierpaolo28/Kaggle-Challenges/blob/master/rain-prediction.ipynb)笔记本中演示的那样）。
- en: '![Figure](../Images/251310b5154f3cd2c8cb1777febd7c9b.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![Figure](../Images/251310b5154f3cd2c8cb1777febd7c9b.png)'
- en: 'Figure 2: Training Report'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2：训练报告
- en: Evaluation
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评估
- en: Finally, we can now create a second loop to test our model against some brand
    new data (in order to ensure our model is not training anymore and can be used
    just for inference, please note the ***model.eval()*** statement).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以创建第二个循环来测试我们的模型对一些全新数据的表现（为了确保我们的模型不再训练，只能用于推理，请注意***model.eval()***语句）。
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: As can be seen from the printed output, our model testing accuracy closely matched
    our final training accuracy (74.66 % vs 74.13%).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 从打印输出中可以看到，我们的模型测试准确率与最终训练准确率非常接近（74.66%对74.13%）。
- en: Conclusion
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论
- en: In case you are interested in finding out more about PyTorch potentialities,
    [PyTorch Lighting](https://pytorch-lightning.readthedocs.io/en/latest/) and [Livelossplot](https://github.com/stared/livelossplot)
    are two great packages which can help you in developing, debugging and evaluating
    your PyTorch models.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有兴趣了解更多关于PyTorch的潜力，[PyTorch Lighting](https://pytorch-lightning.readthedocs.io/en/latest/)和[Livlossplot](https://github.com/stared/livelossplot)是两个很好的工具，可以帮助你开发、调试和评估你的PyTorch模型。
- en: '*I hope you enjoyed this article, thank you for reading!*'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*希望你喜欢这篇文章，谢谢阅读！*'
- en: Contacts
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 联系方式
- en: 'If you want to keep updated with my latest articles and projects [follow me
    on Medium](https://medium.com/@pierpaoloippolito28?source=post_page---------------------------) and
    subscribe to my [mailing list](http://eepurl.com/gwO-Dr?source=post_page---------------------------).
    These are some of my contacts details:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想跟进我的最新文章和项目，*请[在Medium上关注我](https://medium.com/@pierpaoloippolito28?source=post_page---------------------------)*，并订阅我的*[邮件列表](http://eepurl.com/gwO-Dr?source=post_page---------------------------)*。以下是我的一些联系方式：
- en: '[Linkedin](https://uk.linkedin.com/in/pier-paolo-ippolito-202917146?source=post_page---------------------------)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Linkedin](https://uk.linkedin.com/in/pier-paolo-ippolito-202917146?source=post_page---------------------------)'
- en: '[Personal Blog](https://pierpaolo28.github.io/blog/?source=post_page---------------------------)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[个人博客](https://pierpaolo28.github.io/blog/?source=post_page---------------------------)'
- en: '[Personal Website](https://pierpaolo28.github.io/?source=post_page---------------------------)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[个人网站](https://pierpaolo28.github.io/?source=post_page---------------------------)'
- en: '[Medium Profile](https://towardsdatascience.com/@pierpaoloippolito28?source=post_page---------------------------)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Medium个人资料](https://towardsdatascience.com/@pierpaoloippolito28?source=post_page---------------------------)'
- en: '[GitHub](https://github.com/pierpaolo28?source=post_page---------------------------)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GitHub](https://github.com/pierpaolo28?source=post_page---------------------------)'
- en: '[Kaggle](https://www.kaggle.com/pierpaolo28?source=post_page---------------------------)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Kaggle](https://www.kaggle.com/pierpaolo28?source=post_page---------------------------)'
- en: '**Bio: [Pier Paolo Ippolito](https://www.linkedin.com/in/pierpaolo28/)** is
    a Data Scientist and MSc in Artificial Intelligence graduate from the University
    of Southampton. He has a strong interest in AI advancements and machine learning
    applications (such as finance and medicine). Connect with him on [Linkedin](https://www.linkedin.com/in/pierpaolo28/).'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介: [Pier Paolo Ippolito](https://www.linkedin.com/in/pierpaolo28/)** 是一名数据科学家，拥有南安普顿大学人工智能硕士学位。他对AI进展和机器学习应用（如金融和医学）有浓厚兴趣。可以在[Linkedin](https://www.linkedin.com/in/pierpaolo28/)上与他联系。'
- en: '[Original](https://towardsdatascience.com/getting-started-with-pytorch-9bae16926744).
    Reposted with permission.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/getting-started-with-pytorch-9bae16926744)。经许可转载。'
- en: '**Related:**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关内容:**'
- en: '[The Most Complete Guide to PyTorch for Data Scientists](/2020/09/most-complete-guide-pytorch-data-scientists.html)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家用的最完整PyTorch指南](/2020/09/most-complete-guide-pytorch-data-scientists.html)'
- en: '[PyTorch LSTM: Text Generation Tutorial](/2020/07/pytorch-lstm-text-generation-tutorial.html)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyTorch LSTM：文本生成教程](/2020/07/pytorch-lstm-text-generation-tutorial.html)'
- en: '[PyTorch for Deep Learning: The Free eBook](/2020/07/pytorch-deep-learning-free-ebook.html)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyTorch深度学习：免费电子书](/2020/07/pytorch-deep-learning-free-ebook.html)'
- en: '* * *'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三名课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织进行IT工作'
- en: '* * *'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Getting Started with PyTorch Lightning](https://www.kdnuggets.com/2022/12/getting-started-pytorch-lightning.html)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开始使用PyTorch Lightning](https://www.kdnuggets.com/2022/12/getting-started-pytorch-lightning.html)'
- en: '[Getting Started with PyTorch in 5 Steps](https://www.kdnuggets.com/5-steps-getting-started-pytorch)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用5步开始使用PyTorch](https://www.kdnuggets.com/5-steps-getting-started-pytorch)'
- en: '[Getting Started with Automated Text Summarization](https://www.kdnuggets.com/2019/11/getting-started-automated-text-summarization.html)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开始使用自动文本摘要](https://www.kdnuggets.com/2019/11/getting-started-automated-text-summarization.html)'
- en: '[Getting Started Cleaning Data](https://www.kdnuggets.com/2022/01/getting-started-cleaning-data.html)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开始清理数据](https://www.kdnuggets.com/2022/01/getting-started-cleaning-data.html)'
- en: '[Getting Started with SQL Cheatsheet](https://www.kdnuggets.com/2022/08/getting-started-sql-cheatsheet.html)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQL速查表入门指南](https://www.kdnuggets.com/2022/08/getting-started-sql-cheatsheet.html)'
- en: '[Getting Started with spaCy for NLP](https://www.kdnuggets.com/2022/11/getting-started-spacy-nlp.html)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用spaCy进行NLP的入门指南](https://www.kdnuggets.com/2022/11/getting-started-spacy-nlp.html)'
