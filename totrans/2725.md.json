["```py\npip install wefe\n\n```", "```py\nconda install -c pbadilla wefe\n\n```", "```py\nfrom wefe import WordEmbeddingModel, Query, WEAT\nimport gensim.downloader as api\n\nword2vec_model = WordEmbeddingModel(api.load('word2vec-google-news-300'),\n                                    'word2vec-google-news-300')\n\n```", "```py\n# target sets (sets of popular names in the US)\nmale_names = ['John', 'Paul', 'Mike', 'Kevin', 'Steve', 'Greg', 'Jeff', 'Bill']\nfemale_names = ['Amy', 'Joan', 'Lisa', 'Sarah', 'Diana', 'Kate', 'Ann', 'Donna']\n\n#attribute sets\ncareer = ['executive', 'management', 'professional', 'corporation',\n         'salary', 'office', 'business', 'career']\nfamily = ['home', 'parents', 'children', 'family', 'cousins', 'marriage',\n         'wedding', 'relatives']\n\ngender_occupation_query = Query([male_names, female_names],\n                                [career, family],\n                                ['Male names', 'Female names'],\n                                ['Career', 'Family'])\n\n```", "```py\nweat = WEAT()\nresults = weat.run_query(gender_occupation_query, word2vec_model)\n\nprint(results\n\n```", "```py\n{'query_name': 'Male names and Female names wrt Career and Family',\n 'result': 1.251}\n\n```", "```py\nfrom wefe.utils import run_queries\nfrom wefe.datasets import load_weat\n\n# Load the sets used in the weat case study\nweat_wordsets = load_weat()\n\ngender_math_arts_query = Query(\n    [male_names, female_names],\n    [weat_wordsets['math'], weat_wordsets['arts']],\n    ['Male names', 'Female names'],\n    ['Math', 'Arts'])\n\ngender_science_arts_query = Query(\n    [male_names, female_names],\n    [weat_wordsets['science'], weat_wordsets['arts_2']],\n    ['Male names', 'Female names'],\n    ['Science', 'Arts'])\n\n```", "```py\nqueries = [\n    gender_occupation_query,\n    gender_math_arts_query,\n    gender_science_arts_query,\n]\n\n```", "```py\nweat_results = run_queries(WEAT, queries, [word2vec_model])\nweat_results\n\n```", "```py\n# load the models.\nglove_wiki = WordEmbeddingModel(api.load('glove-wiki-gigaword-300'),\n                                'glove-wiki-gigaword-300')\nglove_twitter = WordEmbeddingModel(api.load('glove-twitter-200'),\n                                'glove-twitter-200')\n\n# add the models to an array.\nmodels = [word2vec_model, glove_wiki, glove_twitter]\n\n# run the queries.\nresults = run_queries(WEAT, queries, models)\nresults\n\n```", "```py\nfrom wefe.utils import plot_queries_results\nplot_queries_results(results)\n\n```", "```py\nweat_results = run_queries(WEAT,\n                        queries,\n                        models,\n                        aggregate_results=True,\n                        return_only_aggregation=True,\n                        queries_set_name='Gender bias')\nweat_results\n\n```", "```py\nfrom wefe.utils import create_ranking\n\nranking = create_ranking([weat_results])\nranking\n\n```"]