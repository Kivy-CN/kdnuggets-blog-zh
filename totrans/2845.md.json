["```py```", "``` app.py  HTML files/  homepage.html  output.html  style/  design.css ```", "````` ```py app = Flask(__name__) ```      **Step 6:**    To furnish the web page, flask will look for html files present in the subdirectory called html files. In this case, we have two create 2 html files: homepage.html and output.html.      **Step 7:**    CSS can be used to design the look of 2 html documents.  Don’t forget to save design.css file in a subdirectory called style, which happens to be the default directory of Flask.      **Step 8:**    Next use the route decorator (@app.route('/')) url to activate the execution of homepage function. On the back of which homepage function will simply provision homepage.html file available in the sub category.    ![Figure](../Images/57430ef9739a3b907f33bbc63fb7a635.png)        **Step 9:**    Thereafter, we define predict function, wherein we read messages.csv set, pre-process the text, make estimations, and store the model.    ![Figure](../Images/5245a7b61b83b3da1217558417d4196d.png)        **Step 10:**    Next, we access the new message inputted by the user and make a prediction. Afterwards, make use of the POST method to transfer the form data to the server.    ![Figure](../Images/28016e58470791e2a254766acbd5a479.png)        **Step 11:**    Post which output.html file can be activated through the render_htmlfiles function inside the predict function which we defined in the app.py script.    ![Figure](../Images/05c90d4806d1b9ea9afab42525f833a3.png)        **Step 12:**    Finally, use the run function to only run the application on the server, by using if statement with __name__ == '__main__'. Later, set the debug=True argument inside the app.run method, to trigger flask's debugger.    ![Figure](../Images/876e1daadac7086724d0d73fc53be2e2.png)        **Step 13:**    For running the model , you can start running the API either by double clicking app.py, or executing the command from the terminal as follows:   ```py` ``` cd -Spam Identifier  Python app.py ```py      **Step 14:**    Next, open a web browser and navigate to http://127.0.0.1:5000/, where you should see a simple website which is similar to the one below  ![Figure](../Images/b0aae6a00972d2e411ac2d0d6f0b37fd.png)  Congratulations! You have now created an end-to-end NLP application at zero cost and little effort. Hosting and sharing data science models can be uncomplicated. Developing android apps, chatbots and many more applications dependent on machine learning algorithms back-end can be created with no difficulty. When you have time, I recommend to start reading about deployment in machine learning. That’s it for flask. Thanks for reading.    For More Information related to [Data Science Course](https://www.excelr.com/data-science-course-training-in-bangalore) Follow us @ExcelR     * * *      ## Our Top 3 Course Recommendations      ![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\\. [Google Cybersecurity Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast track to a career in cybersecurity.    ![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\\. [Google Data Analytics Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up your data analytics game    ![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\\. [Google IT Support Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support your organization in IT    * * *      ### More On This Topic    *   [A Full End-to-End Deployment of a Machine Learning Algorithm into a…](https://www.kdnuggets.com/2021/12/deployment-machine-learning-algorithm-live-production-environment.html) *   [From Data Collection to Model Deployment: 6 Stages of a Data…](https://www.kdnuggets.com/2023/01/data-collection-model-deployment-6-stages-data-science-project.html) *   [Back to Basics Week 4: Advanced Topics and Deployment](https://www.kdnuggets.com/back-to-basics-week-4-advanced-topics-and-deployment) *   [Top 7 Model Deployment and Serving Tools](https://www.kdnuggets.com/top-7-model-deployment-and-serving-tools) *   [Predicting Cryptocurrency Prices Using Regression Models](https://www.kdnuggets.com/2022/05/predicting-cryptocurrency-prices-regression-models.html) *   [How to Make Large Language Models Play Nice with Your Software…](https://www.kdnuggets.com/how-to-make-large-language-models-play-nice-with-your-software-using-langchain) ```` ```py`` `````"]