- en: 'Keras 3.0: Everything You Need To Know'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/07/keras-30-everything-need-know.html](https://www.kdnuggets.com/2023/07/keras-30-everything-need-know.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Keras 3.0: Everything You Need To Know](../Images/7b824424c35c725d8c30d2656e25f025.png)'
  prefs: []
  type: TYPE_IMG
- en: Image Created by Author with Playground AI
  prefs: []
  type: TYPE_NORMAL
- en: Before we dive into the details of this exciting development, let's explore
    a scenario to understand it better. Picture yourself as a Senior Data Scientist
    leading a sophisticated image classification project. Your TensorFlow-based model
    is performing remarkably well. However, as you add more functionalities, you notice
    that some team members prefer JAX for scalability, while others favor PyTorch
    for its user-friendly nature. As a team lead, how can you ensure seamless collaboration
    while maintaining the model's efficiency across various deep-learning frameworks?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Recognizing this challenge, the Keras team introduces Keras Core—an innovative
    multi-backend implementation of the Keras API with support for TensorFlow, JAX,
    and PyTorch. This library will evolve into Keras 3.0 by Fall 2023\. But before
    we jump straight to Keras 3.0, let's first take a brief look at Keras' history.
  prefs: []
  type: TYPE_NORMAL
- en: A Brief History of Keras and the Road to 3.0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In 2015, François Chollet introduced Keras, an open-source deep-learning library
    written in Python. This simple yet powerful API quickly gained popularity among
    researchers, students, and professionals by streamlining complex neural network
    building. Over time, Keras received significant enhancements, making it even more
    appealing to the deep-learning community. Eventually, Keras became an integral
    part of TensorFlow, Google's cutting-edge deep learning framework. Around the
    same time, Facebook's AI Research lab developed PyTorch, known for its intuitive
    and flexible model building. At the same time, JAX emerged as another powerful
    framework for high-performance machine learning research. As these frameworks
    gained momentum, developers started to experience the dilemma of choosing between
    the frameworks. This led to further fragmentation in the deep learning community.
  prefs: []
  type: TYPE_NORMAL
- en: Acknowledging the challenges faced posed by the fragmented frameworks, the developers
    of Keras decided to revolutionize the library once again, giving rise to Keras
    3.0.
  prefs: []
  type: TYPE_NORMAL
- en: Salient Features of Keras 3.0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Keras 3.0 empowers you to collaborate with your team effectively. You can develop
    sophisticated models with a unified front end by combining the strengths of TensorFlow,
    JAX, and PyTorch. Here are some of the features due to which Keras 3.0 is an absolute
    game changer:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Multi-Backend Support
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Keras 3.0 acts as a super-connector, enabling seamless use of TensorFlow, JAX,
    and PyTorch together. Developers have the freedom to mix and match the best tool
    for their specific tasks without changing the code.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Performance Optimization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Performance Optimization is the key feature of Keras 3.0\. By default, Keras
    3.0 leverages the XLA (Accelerated Linear Algebra) compilation. XLA Compilation
    optimizes your mathematical computations making them run much faster on hardware
    like GPUs and TPUs. It also allows you to dynamically select the best backend
    for your AI model ensuring optimal efficiency. Such performance optimization features
    are a big deal allowing you to train more models, experiment more, and get results
    much quicker.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Expanded Ecosystem Surface
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Your Keras models can be used as the PyTorch Modules, TensorFlow SavedModels,
    or part of JAX's large-scale TPU training infrastructure. This means that you
    can take advantage of the strengths of each framework. So, with Keras 3.0’s expanded
    ecosystem you are not locked into a single ecosystem. It is just like a universal
    adapter that lets you connect your favorite device to any machine.
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Cross-Framework Low-Level Language
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The introduction of the **keras_core.ops** namespace is a groundbreaking feature
    that allows you to write custom operations once and use them across different
    deep-learning frameworks effortlessly. The **keras_core.ops** provide a set of
    tools and functions that resemble the popular NumPy API, which is a widely used
    library for numerical computations in Python. This level of cross-framework compatibility
    fosters code reusability and encourages collaboration.
  prefs: []
  type: TYPE_NORMAL
- en: 5\. Progressive Disclosure of Complexity
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This design approach of Keras 3.0 sets it apart from other deep learning frameworks.
    Imagine that you are a beginner and you want to build a simple neural network
    using Keras 3.0\. It presents you with the most straightforward workflows at the
    start. Once you get comfortable with the basics, you can access all the advanced
    features and the low-level functionalities. It doesn’t restrict you to predefined
    workflows only. The beauty of this approach lies in its adaptability and is welcoming
    for both beginners and seasoned deep learning practitioners.
  prefs: []
  type: TYPE_NORMAL
- en: 6\. Stateless API for Layers, Models, Metrics, and Optimizers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the context of deep learning, state refers to the internal variables and
    parameters that change during the training process. However, JAX operates on the
    principle of statelessness meaning that the functions do not have mutable variables
    or internal states. Keras 3.0 embraces the statelessness of JAX via a **Stateless
    API**. It allows the essential component of deep learning i.e. layers, models,
    metrics and optimizers to be designed in a stateless manner. This unique compatibility
    makes Keras 3.0 an indispensable tool in modern AI development.
  prefs: []
  type: TYPE_NORMAL
- en: Getting Started with Keras 3.0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Keras Core is compatible with Linux and MacOS systems. Setting up Keras 3.0
    is a straightforward process. Here is the step-by-step guide for you to follow:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Clone and Navigate to the Repository
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Clone the repository into your local system using the following command
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Change your root directory to the clone keras-core using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 2\. Install Dependencies
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Open your interval and run the following command to install the required dependencies.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 4\. Run the Installation Command
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Run the following script to handle the installation process:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 5\. Configure the Backend
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'By default, Keras Core strictly requires TensorFlow as the backend framework
    but you can configure it using the following two ways:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Option 01:** You can set the KERAS_BACKEND environment variable to your preferred
    backend option.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '**Option 02:** You can edit the local Keras configuration file located at ~/.keras/keras.json.
    Open the file in a text editor and change the "backend" option to your preferred
    backend.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 6\. Verify the Installation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To ensure that Keras Core is correctly installed with your chosen backend,
    you can test it by importing the library. Open a Python interpreter or a Jupyter
    Notebook and run the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Ending Notes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While Keras 3.0 has some limitations, such as its current TensorFlow dependency
    and limited tf.data support with other backends, the future potential of this
    framework is promising. Keras has released the beta version as of now and they
    encourage the developers to provide their valuable feedback. If you are interested
    to explore more about it, you can find the documentation of Keras Core (Keras
    3.0) [here](https://keras.io/api/). Don’t be afraid to try new ideas. Keras 3.0
    is a powerful tool and it's an exciting time to be part of the evolution.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Kanwal Mehreen](https://www.linkedin.com/in/kanwal-mehreen1)** is an aspiring
    software developer with a keen interest in data science and applications of AI
    in medicine. Kanwal was selected as the Google Generation Scholar 2022 for the
    APAC region. Kanwal loves to share technical knowledge by writing articles on
    trending topics, and is passionate about improving the representation of women
    in tech industry.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[KDnuggets News, April 13: Python Libraries Data Scientists Should…](https://www.kdnuggets.com/2022/n15.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Naïve Bayes Algorithm: Everything You Need to Know](https://www.kdnuggets.com/2020/06/naive-bayes-algorithm-everything.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Everything You Need to Know About Tensors](https://www.kdnuggets.com/2022/05/everything-need-know-tensors.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Everything You Need to Know About Data Lakehouses](https://www.kdnuggets.com/2022/09/everything-need-know-data-lakehouses.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Everything You Need to Know About MLOps: A KDnuggets Tech Brief](https://www.kdnuggets.com/tech-brief-everything-you-need-to-know-about-mlops)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ChatGPT: Everything You Need to Know](https://www.kdnuggets.com/2023/01/chatgpt-everything-need-know.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
