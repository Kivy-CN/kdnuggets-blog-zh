- en: Learning SQL the Hard Way
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/01/learning-sql-hard-way.html](https://www.kdnuggets.com/2020/01/learning-sql-hard-way.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)![Figure](../Images/13db05514298ed074e5db11a883f6d74.png)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Source](https://pixabay.com/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=1246836)'
  prefs: []
  type: TYPE_NORMAL
- en: '***A Data Scientist who doesn’t know SQL is not worth his salt****.*'
  prefs: []
  type: TYPE_NORMAL
- en: And that seems correct to me in every sense of the world. While we feel much
    more accomplished creating models and coming up with the different hypotheses,
    the role of data munging can’t be understated.
  prefs: []
  type: TYPE_NORMAL
- en: And with the ubiquitousness of SQL when it comes to ETL and data preparation
    tasks, everyone should know a little bit of it to at least be useful.
  prefs: []
  type: TYPE_NORMAL
- en: I still remember the first time I got my hands on SQL. It was the first language
    (if you can call it that) I learned. And it made an impact on me. I was able to
    automate things, and that was something I hadn’t thought of before.
  prefs: []
  type: TYPE_NORMAL
- en: Before SQL, I used to work with Excel — VLOOKUPs and pivots. I was creating
    reporting systems, doing the same work again and again. SQL made it all go away.
    Now I could write a big script, and everything would be automated — all the crosstabs
    and analysis generated on the fly.
  prefs: []
  type: TYPE_NORMAL
- en: That is the power of SQL. And though you could do anything that you do with
    SQL using [Pandas](https://towardsdatascience.com/minimal-pandas-subset-for-data-scientists-6355059629ae),
    you still need to learn SQL to deal with systems like HIVE, Teradata and sometimes [Spark](https://towardsdatascience.com/the-hitchhikers-guide-to-handle-big-data-using-spark-90b9be0fe89a) too.
  prefs: []
  type: TYPE_NORMAL
- en: '***This post is about installing SQL, explaining SQL and running SQL.***'
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the SQL Environment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now the best way to learn SQL is to get your hands dirty with it(Same I can
    say for any other thing you want to learn)
  prefs: []
  type: TYPE_NORMAL
- en: I will advise against using the web-based recipes like w3schools/tutorialspoint
    for SQL since you cannot use your data with those.
  prefs: []
  type: TYPE_NORMAL
- en: Also, I will advise you to go with learning the MySQL flavour of SQL as it is
    Open Source, easy to set up in your laptop and has a great client named MySQL
    Workbench to make your life easier.
  prefs: []
  type: TYPE_NORMAL
- en: 'As we have gotten these points out of the way, here is a step by step to get
    set up with MySQL:'
  prefs: []
  type: TYPE_NORMAL
- en: You can download MySQL for your particular system (MACOSX, Linux, Windows) from [Download
    MySQL Community Server](http://dev.mysql.com/downloads/mysql/). In my case, I
    downloaded the DMG Archive. After that, double click and install the file. ***You
    might need to set up a password. Remember this password as it would be required
    to connect to the MySQL instance later.***
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/3c4eed91fd996402626030cb61854b7d.png)'
  prefs: []
  type: TYPE_IMG
- en: Create a file named `my.cnf` and put the following in it. This is needed to
    give Local file read permissions to your SQL database.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Open up `System Preferences>MySQL`. Go to `Configuration` and browse to the `my.cnf` file
    using the select button.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/dbdba9b4617492492975cdbe43db35cd.png)'
  prefs: []
  type: TYPE_IMG
- en: Restart the server from `Instances` tab by clicking stop and start.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/5c14873af530f6d27fc8d40a7a750dd8.png)'
  prefs: []
  type: TYPE_IMG
- en: Once you get that server running, download and install the MySQL Workbench: [Download
    MySQL Workbench](https://dev.mysql.com/downloads/workbench/). The workbench gives
    you an editor to write your SQL Queries and get the results in a structured way.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/9e29b2c92b14ad7944239e656b8e742d.png)'
  prefs: []
  type: TYPE_IMG
- en: Open up the MySQL workbench now and connect to SQL through it. You will see
    something like below.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/11ce893e1e9a7772636dabdffeada7ee.png)'
  prefs: []
  type: TYPE_IMG
- en: You can see that the Local Instance connection has been set up for you beforehand.
    Now, you just need to click on that connection and get started using the password
    that we set up before for the MySQL server(You can also create a connection to
    an existing SQL server that might not be on your machine if you have the address,
    port number, username and password).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/d802212164a29bc8fb09306e11796c66.png)'
  prefs: []
  type: TYPE_IMG
- en: And you get an editor to write your queries on the particular database.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/663f54d0f39e89de06eeb028f11ba03d.png)'
  prefs: []
  type: TYPE_IMG
- en: Check the `Schemas` tab on the top left to see the tables that are present.
    There is just a `sys` schema present with the table `sys_config`. Not an interesting
    data source to learn SQL. So let’s install some data to practice.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you have your own data to work. Then good and fine. You can create a new
    schema(database) and upload it into tables using these following commands. (You
    can run the commands by using `Cmd+Enter` or by clicking the ⚡️lightning button)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/8e1326c4743f556367d0b7fa53d7b255.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In this tutorial, however, I am going to use the Sakila Movie database which
    you can install using the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to [MySQL Documentation](https://dev.mysql.com/doc/index-other.html) and
    download the Sakila ZIP file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unzip the file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now go to MySQL Workbench and select File>Run SQL Script>select location `sakila-db/sakila-schema.sql`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Go to MySQL Workbench and select File >Run SQL Script >select location `sakila-db/sakila-data.sql`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once you do that, you will see a new database added in the SCHEMA list.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/991e5cf0916018acdb5f0fdd212bc8e1.png)'
  prefs: []
  type: TYPE_IMG
- en: Playing with Data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now we have some data with us. Finally.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s start with writing some queries.
  prefs: []
  type: TYPE_NORMAL
- en: You can try to understand the Schema of the Sakila Database in detail using
    the [Sakila Sample Database](https://dev.mysql.com/doc/sakila/en/sakila-structure.html) document.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/43d77ee6e78931b44af4b8cfcb57ca88.png)'
  prefs: []
  type: TYPE_IMG
- en: Schema Diagram
  prefs: []
  type: TYPE_NORMAL
- en: 'Now the basic syntax of any SQL query is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'There are four elements in this query:'
  prefs: []
  type: TYPE_NORMAL
- en: '**SELECT**: Which Columns to select? Here we choose `col1` and do SUM aggregation
    on `col2` and AVG aggregation on `col3`. We also give a new name to `SUM(col2)` by
    using the `as` keyword. This is known as aliasing.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**FROM**: From which table should we SELECT?'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**WHERE**: We can filter data using WHERE statements.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**GROUP BY**: All selected columns that are not in aggregation should be in
    GROUP BY.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**ORDER BY**: Sort on `col2sum`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The above query will help you with most of the simple things you want to find
    in a database.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, we can find out how differently censored rated movies are timed
    differently using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/b4d8c6f364a0761c7610379a26aee215.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Exercise: Frame a Question'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You should now come up with some questions of your own.
  prefs: []
  type: TYPE_NORMAL
- en: For Example, you can try to find out all the movies released in the year 2006\.
    Or try to find all of the movies which have a rating of PG and length greater
    than 50 minutes.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can do this by running the following on MySQL Workbench:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Joins in SQL
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Till now, we have learned how we can work with single tables. But in reality,
    we need to work with multiple tables.
  prefs: []
  type: TYPE_NORMAL
- en: So, the next thing we would want to learn is how to do joins.
  prefs: []
  type: TYPE_NORMAL
- en: Now joins are an integral and an essential part of a MySQL Database and understanding
    them is necessary. The below visual talks about most of the joins that exist in
    SQL. I usually end up using just the LEFT JOIN, and INNER JOIN, so I will start
    with LEFT JOIN.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9f7d5a2f96baaabc9eb8c393ad920260.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The LEFT JOIN is used when you want to keep all the records in the left table(A)
    and merge B on the matching records. The records of A where B is not merged are
    kept as NULL in the resulting table. The MySQL Syntax is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Here we select col1 and col2 from table A and col3 and col4 from table B. We
    also specify which common columns to join on using the ON statement.
  prefs: []
  type: TYPE_NORMAL
- en: The INNER JOIN is used when you want to merge A and B and only to keep the common
    records in A and B.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To give you a use case lets go back to our Sakila database. Suppose we wanted
    to find out how many copies of each movie we do have in our inventory. You can
    get that by using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/85fd177569d265e448ae8c633002fe7d.png)'
  prefs: []
  type: TYPE_IMG
- en: Does this result look interesting? Not really. IDs don’t make sense to us humans,
    and if we can get the names of the movies, we would be able to process the information
    better. So we snoop around and see that the table `film` has got `film_id` as
    well as the `title` of the film.
  prefs: []
  type: TYPE_NORMAL
- en: So we have all the data, but how do we get it in a single view?
  prefs: []
  type: TYPE_NORMAL
- en: Come Joins to the rescue. We need to add the `title` to our inventory table
    information. We can do this using —
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/d70bfc61f0adbfb45d1ffad053b0035c.png)'
  prefs: []
  type: TYPE_IMG
- en: This will add another column to your inventory table information. As you might
    notice some films are in the `film` table that we don’t have in the `inventory`.
    We used a left join since we wanted to keep whatever is in the inventory table
    and join it with its corresponding counterpart in the `film` table and not everything
    in the `film` table.
  prefs: []
  type: TYPE_NORMAL
- en: So now we have got the title as another field in the data. This is just what
    we wanted, but we haven’t solved the whole puzzle yet. We want `title` and `num_copies` of
    the title in the inventory.
  prefs: []
  type: TYPE_NORMAL
- en: But before we can go any further, we should understand the concept of inner
    queries first.
  prefs: []
  type: TYPE_NORMAL
- en: 'Inner Query:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now you have a query that can give you the above result. One thing you can do
    is create a new table using
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'And then use a simple group by operation using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/4cce562f2edff7c3641fe21d0e113b21.png)'
  prefs: []
  type: TYPE_IMG
- en: But this is one step too many. And we have to create a temporary table that
    ends up taking space on the system.
  prefs: []
  type: TYPE_NORMAL
- en: 'SQL provides us with the concept of the inner query just for these sort of
    issues. You can instead write all this in a single query using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/7363abc55e8eacc55ebd2e9bf786bdc8.png)'
  prefs: []
  type: TYPE_IMG
- en: What we did here was sandwich our first query in parenthesis and gave that table
    an alias `temp`. We then did the group by operations considering `temp` just as
    we would consider any table. It is because of the inner query concept that we
    can write SQL queries that span multiple pages at some times.
  prefs: []
  type: TYPE_NORMAL
- en: The HAVING Clause
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: HAVING is yet another SQL construct that is useful to understand. So we have
    got the results, and now we want to get the films whose number of copies are less
    than or equal to 2.
  prefs: []
  type: TYPE_NORMAL
- en: We can do this by using the inner query concept and the WHERE clause. Here we
    nest one inner query inside another. Pretty neat.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bb399d38acd4af4db2d8993f1118ffb5.png)'
  prefs: []
  type: TYPE_IMG
- en: Or, we can use the HAVING Clause.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/66954520e84bf07ab159b5dd7dbad670.png)'
  prefs: []
  type: TYPE_IMG
- en: The HAVING clause is used to filter on the final aggregated result. It is different
    from WHERE as where is used to filter the table that is used in the FROM statement.
    HAVING filters the final result after the GROUP BY happens.
  prefs: []
  type: TYPE_NORMAL
- en: There are a lot of ways to do the same thing with SQL as you have already seen
    in the above example. We need to try to come up with the least verbose and thus
    HAVING makes sense in many cases.
  prefs: []
  type: TYPE_NORMAL
- en: If you can follow this far, you already know more SQL than most people.
  prefs: []
  type: TYPE_NORMAL
- en: Next thing to do: ***Practice***.
  prefs: []
  type: TYPE_NORMAL
- en: Try to come up with your questions on your dataset and try to find out the answers
    you have using SQL.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some questions I could provide for a start:'
  prefs: []
  type: TYPE_NORMAL
- en: '***Which Actor has the most distinct films in our inventory?***'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '***Which Genre films are the most rented in our inventory?***'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Continue Learning
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This was just a simple tutorial on how to use SQL. If you want to learn more
    about SQL, I would like to call out an excellent course on [SQL for Data Science](https://click.linksynergy.com/link?id=lVarvwc5BD0&offerid=467035.11605513096&type=2&murl=https%3A%2F%2Fwww.coursera.org%2Flearn%2Fsql-for-data-science) from
    the University of California. Do check it out as it talks about other SQL concepts
    like UNION, String Manipulation, functions, Date Handling, etc.
  prefs: []
  type: TYPE_NORMAL
- en: I am going to be writing more beginner-friendly posts in the future too. Follow
    me up at [**Medium**](https://medium.com/@rahul_agarwal) or Subscribe to my [**blog**](http://eepurl.com/dbQnuX) to
    be informed about them. As always, I welcome feedback and constructive criticism
    and can be reached on Twitter [@mlwhiz](https://twitter.com/MLWhiz).
  prefs: []
  type: TYPE_NORMAL
- en: Also, a small disclaimer — There might be some affiliate links in this post
    to relevant resources, as sharing knowledge is never a bad idea.
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Rahul Agarwal](https://www.linkedin.com/in/rahulagwl/)** is Senior
    Statistical Analyst at WalmartLabs. Follow him on Twitter [@mlwhiz](https://twitter.com/MLWhiz).'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/learning-sql-the-hard-way-4173f11b26f1).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering SQL for Data Science — 2019 Edition](/2019/05/7-steps-mastering-sql-data-science-2019-edition.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Last SQL Guide for Data Analysis You’ll Ever Need](/2019/10/last-sql-guide-data-analysis-ever-need.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 bits of advice for Data Scientists](/2019/09/advice-data-scientists.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
