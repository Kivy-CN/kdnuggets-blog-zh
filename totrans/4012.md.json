["```py\nclass File:\n\tdef __init__(self, file_path: str) -> None:\n    \t    self.file_path = file_path\n\nclass Directory:\n\tdef __init__(self, files: List[File]) -> None:\n    \t    self._files = files \n```", "```py\ndirectory = Directory(\n\tfiles=[File(f\"file_{i}\") for i in range(10)]\n)\nfor _file in directory:\n\tprint(_file) \n```", "```py\nclass FileIterator:\n    def __init__(self, files: List[File]) -> None:\n        self.files = files\n        self._index = 0\n\n    def __next__(self):\n        if self._index >= len(self.files):\n        \traise StopIteration\n        value = self.files[self._index]\n        self._index += 1\n        return value\n```", "```py\nclass Directory:\n    def __init__(self, files: List[File]) -> None:\n        self._files = files\n\n    def __iter__(self):\n        return FileIterator(self._files)\n```", "```py\n directory = Directory(\n\tfiles=[File(f\"file_{i}\") for i in range(10)]\n)\nfor _file in directory:\n\tprint(_file, end=\", \")\n\n# Output: file_0, file_1, file_2, file_3, file_4, file_5, file_6, file_7, file_8, file_9,\n```", "```py\ndirectory = Directory(\n\tfiles=[File(f\"file_{i}\") for i in range(10)]\n)\n\niterator = iter(directory)\nwhile True:\n    try:\n        # Get the next item if available. Will raise StopIteration error if no item is left.\n        item = next(iterator)   \n        print(item, end=', ')\n    except StopIteration as e:\n        break   # Catch error and exit the while loop\n\n# Output: file_0, file_1, file_2, file_3, file_4, file_5, file_6, file_7, file_8, file_9,\n```", "```py\nprint(0 in [1,2,3,4,5]) # False\nprint(1 in [1,2,3,4,5]) # True\n```", "```py\nprint(\"file_1\" in directory)  # False\nprint(\"file_12\" in directory) # False\n```", "```py\nclass Directory:\n    def __init__(self, files: List[File]) -> None:\n        self._files = files\n\n    def __iter__(self):\n        return FileIterator(self._files)\n\n    def __contains__(self, item):\n        for _file in self._files:\n        \t# Check if file_path matches the item being checked\n        \tif item == _file.file_path:\n            \treturn True\n    \treturn False\n```", "```py\ndirectory = Directory(\n\tfiles=[File(f\"file_{i}\") for i in range(10)]\n)\n\nprint(\"file_1\" in directory)\t# True\nprint(\"file_12\" in directory) # False \n```"]