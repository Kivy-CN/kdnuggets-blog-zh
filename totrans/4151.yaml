- en: Introductory Pandas Tutorial
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2022/03/introductory-pandas-tutorial.html](https://www.kdnuggets.com/2022/03/introductory-pandas-tutorial.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Introductory Pandas Tutorial](../Images/b9663d8e3475040f36514d2a8056485c.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: What is the Pandas?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Pandas](https://pandas.pydata.org/) is a flexible and easy-to-use tool for
    performing data analysis and data manipulation. It is widely used among data scientists
    for preparing data, cleaning data, and running data science experiments. Pandas
    is an open-source library that helps you solve complex statistical problems with
    simple and easy-to-use syntax.'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: I have created a simple guide for a gentle introduction to Pandas functions.
    In this guide we will learn about data importing, data exporting, exploring data,
    data summary, selecting & filtering, sorting, renaming, dropping data, applying
    functions, and visualization.
  prefs: []
  type: TYPE_NORMAL
- en: Importing Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For importing, we are going to use Kaggle’s open-source dataset [Social Network
    Advertisements](https://www.kaggle.com/rishidamarla/social-network-advertisements).
    This dataset contains three columns and 400 samples. To get started, let’s import
    our CSV (Comma Separated Values) file using **read_csv()**.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: As we can see our **CSV** file has been successfully loaded and converted to
    Pandas Dataframes. To see the first five rows we will use **head()**.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![Introductory Pandas Tutorial](../Images/40c0a465cc7d1dd5526c4b8b2ef1bda1.png)'
  prefs: []
  type: TYPE_IMG
- en: The Pandas dataframe contains **Age**, **EstimatedSalary**, and **Purchased**
    columns.
  prefs: []
  type: TYPE_NORMAL
- en: Other Formats
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Apart from csv files we can import Excel files, import files from any SQL server,
    read and parse json files, import tables from websites using HTML parsing, and
    creating dataframe using dictionary.  Pandas makes importing any type of data
    simple.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Exporting Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For exporting DataFrame into CSV we will use **to_csv()**.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Similarly, we can export the dataframe into excel, send to sql, to json, and
    create an HTML table with one line of code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Data Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To generate a simple data summary we will use the **info()** function. The summary
    includes dtypes, number of samples, and memory usage.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Similarly, to get specific information about dataframe we can use **.shape**
    for numbers of columns and rows, **.index** for index range, and **.columns**
    for the names of the columns. These small utilities can come handy in solving
    larger data problems.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '**describe()** will give us a summary of the distribution of numerical columns.
    It includes mean, standard deviation, minimum/ maximum values, and inter quartile
    range.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: To check the missing values we can simile use **isnull()** function which will
    return values in boolean and we can sum them up to get exact numbers. Our dataset
    have zero missing values.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '**corr()** will generate correlation matrix between numeric columns. There
    are no high correlation between columns.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Selecting and Filtering
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are various ways to select columns. The example below is direct selection.
  prefs: []
  type: TYPE_NORMAL
- en: Use **data[“<column_name>”]** or **data.<column_name>**
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: We can also use **iloc** and **loc** to select columns and rows as shown below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: To count the number of categories in a column we will use the **value_counts()**
    function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Filtering values is easy. We just need to give simple Python conditions. In
    our case, we are filtering only **1’s** from the Purchased column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: For a more complex demonstration, we have added a second condition by using
    **&**.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Data sorting
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For sorting index we use **sort_values()**. It takes multiple arguments, first
    is the column by which we want to sort  and the second is the direction of sorting.
    In our case, we are sorting by **Purchased** columns in descending order.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '![Introductory Pandas Tutorial](../Images/b6905956f43a9ed79038eb648901243b.png)'
  prefs: []
  type: TYPE_IMG
- en: '**sort_index()** is similar to sort index but it will sort the dataframe using
    index numbers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Renaming Columns
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To rename a column we need a dictionary of the current  and modified column
    name. We are changing names from ‘EstimatedSalary` to `Salary` using the **rename()**
    function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '![Introductory Pandas Tutorial](../Images/8529672f5179c044edc44214a8e9826d.png)'
  prefs: []
  type: TYPE_IMG
- en: Drop Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can simply use the **drop** function to drop a column or a row. In this example,
    we have successfully dropped the `Salary` column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '![Introductory Pandas Tutorial](../Images/7aa6e6a25ff489088a20736ed17297ef.png)'
  prefs: []
  type: TYPE_IMG
- en: For dropping a row you can simply write a row number.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Converting Data Types
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have three columns and all of them are integers. Let’s change “Purchased”
    to boolean as it contains only ones and zero.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Use the **astype()** function and change the data type.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: We have successfully changed the ‘Purchased’ column to boolean type.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Apply Functions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Applying a Python function to a column or on a whole dataset has come simpler
    with Pandas **apply()** function. In this section, we will create a simple function
    of doubling the values and apply it to the ‘Salary’ column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: As we can observe that the newly created columns contain double the salary.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: We can also use the Python **lambda** function inside the apply function to
    get similar results.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: Visualization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pandas uses **matplotlib** library to visualize the data. We can use this function
    to generate bar charts, line charts, pie charts, box plot, histogram, KDE plot
    and much more. We can also customize our plots similarly to the matplotlib library.
    By simply changing the **kind** of graph we can generate any type of graph using
    **plot()** function.
  prefs: []
  type: TYPE_NORMAL
- en: The box plot shows the distribution of three numerical columns.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: '![Introductory Pandas Tutorial](../Images/e9a8a0427d4037eb8ec30109b3274b7a.png)'
  prefs: []
  type: TYPE_IMG
- en: To plot density plots, we need x and y arguments and kind. In this example,
    we have plotted, **Age** versus **Salary** density graph.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '![Introductory Pandas Tutorial](../Images/d2be3c029a74e74c8e288dabe669d798.png)'
  prefs: []
  type: TYPE_IMG
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There is so much to Pandas that we haven't covered. It is the most used library
    among data scientists and data practitioners. If you are interested in learning
    more then check out [Python Pandas Tutorial](https://www.learndatasci.com/tutorials/python-pandas-tutorial-complete-introduction-for-beginners/)
    or take a proper data analytics course to learn use cases of Pandas. In this guide,
    we have learned about Pandas Python library and how we can use it to perform various
    data manipulation and analytics tasks. I hope you liked it and if you have questions
    related to the topics, please type them in the comment section and I will do my
    best to answer.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Abid Ali Awan](https://www.polywork.com/kingabzpro)** ([@1abidaliawan](https://twitter.com/1abidaliawan))
    is a certified data scientist professional who loves building machine learning
    models. Currently, he is focusing on content creation and writing technical blogs
    on machine learning and data science technologies. Abid holds a Master''s degree
    in Technology Management and a bachelor''s degree in Telecommunication Engineering.
    His vision is to build an AI product using a graph neural network for students
    struggling with mental illness.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Data Ingestion with Pandas: A Beginner Tutorial](https://www.kdnuggets.com/2022/04/data-ingestion-pandas-beginner-tutorial.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Federated Learning: Collaborative Machine Learning with a Tutorial…](https://www.kdnuggets.com/2021/12/federated-learning-collaborative-machine-learning-tutorial-get-started.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[YOLOv5 PyTorch Tutorial](https://www.kdnuggets.com/2022/12/yolov5-pytorch-tutorial.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Text Summarization Development: A Python Tutorial with GPT-3.5](https://www.kdnuggets.com/2023/04/text-summarization-development-python-tutorial-gpt35.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Clustering with scikit-learn: A Tutorial on Unsupervised Learning](https://www.kdnuggets.com/2023/05/clustering-scikitlearn-tutorial-unsupervised-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Docker Tutorial for Data Scientists](https://www.kdnuggets.com/2023/07/docker-tutorial-data-scientists.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
