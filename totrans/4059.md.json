["```py\nprint(\"Hello, World!\")\n```", "```py\n# Get user input\nuser_name = input(\"Please enter your name: \")\n\n# Greet the user\nprint(f\"Hello, {user_name}! Nice to meet you!\")\n```", "```py\nPlease enter your name: Bala\nHello, Bala! Nice to meet you!\n```", "```py\nage = 25\ndiscount= 10\n```", "```py\nnumber = 1\nnumber = 'one'\n```", "```py\nnumber = 1\nprint(type(number))\n```", "```py\nOutput >>> <class 'int'>\n```", "```py\nnumber = 'one'\nprint(type(number))\n```", "```py\nOutput >>> <class 'str'>\n```", "```py\nheight = 5.8\npi = 3.14159\n```", "```py\n# Define numeric variables\nx = 10\ny = 5\n\n# Addition\nadd_result = x + y\nprint(\"Addition:\", add_result)  # Output: 15\n\n# Subtraction\nsub_result = x - y\nprint(\"Subtraction:\", sub_result)  # Output: 5\n\n# Multiplication\nmul_result = x * y\nprint(\"Multiplication:\", mul_result)  # Output: 50\n\n# Division (floating-point result)\ndiv_result = x / y\nprint(\"Division:\", div_result)  # Output: 2.0\n\n# Integer Division (floor division)\nint_div_result = x // y\nprint(\"Integer Division:\", int_div_result)  # Output: 2\n\n# Modulo (remainder of division)\nmod_result = x % y\nprint(\"Modulo:\", mod_result)  # Output: 0\n\n# Exponentiation\nexp_result = x ** y\nprint(\"Exponentiation:\", exp_result)  # Output: 100000\n```", "```py\nname = \"Alice\"\nquote = 'Hello, world!'\n```", "```py\nis_student = True\nhas_license = False\n```", "```py\n# Using different data types together\nage = 30\nscore = 89.5\nname = \"Bob\"\nis_student = True\n\n# Checking if score is above passing threshold\npassing_threshold = 60.0\nis_passing = score >= passing_threshold\n\nprint(f\"{name=}\")\nprint(f\"{age=}\")\nprint(f\"{is_student=}\")\nprint(f\"{score=}\")\nprint(f\"{is_passing=}\")\n```", "```py\nOutput >>>\n\nname='Bob'\nage=30\nis_student=True\nscore=89.5\nis_passing=True\n```", "```py\n# List\nstudent_names = [\"Alice\", \"Bob\", \"Charlie\", \"David\"]\n```", "```py\n# Tuple\nstudent_scores = (85, 92, 78, 88)\n```", "```py\nstudent_info = {'Alice': 85, 'Bob': 92, 'Charlie': 78, 'David': 88}\n```", "```py\n# Using a dictionary comprehension to create the student_info dictionary\nstudent_info = {name: score for name, score in zip(student_names, student_scores)}\n\nprint(student_info)\n```", "```py\nOutput >>>\n\n{'Alice': 85, 'Bob': 92, 'Charlie': 78, 'David': 88}\n```", "```py\nscore = 75\n\nif score >= 60:\n    print(\"Congratulations! You passed the exam.\")\n```", "```py\nOutput >>> Congratulations! You passed the exam.\n```", "```py\nscore = 45\n\nif score >= 60:\n    print(\"Congratulations! You passed the exam.\")\nelse:\n    print(\"Sorry, you did not pass the exam.\")\n```", "```py\nOutput >>> Sorry, you did not pass the exam.\n```", "```py\nscore = 82\n\nif score >= 90:\n    print(\"Excellent! You got an A.\")\nelif score >= 80:\n    print(\"Good job! You got a B.\")\nelif score >= 70:\n    print(\"Not bad! You got a C.\")\nelse:\n    print(\"You need to improve. You got an F.\")\n```", "```py\nOutput >>> Good job! You got a B.\n```", "```py\nname = \"Alice\"\nscore = 78\n\nif name == \"Alice\":\n    if score >= 80:\n        print(\"Great job, Alice! You got an A.\")\n    else:\n        print(\"Good effort, Alice! Keep it up.\")\nelse:\n    print(\"You're doing well, but this message is for Alice.\")\n```", "```py\nOutput >>> Good effort, Alice! Keep it up.\n```", "```py\nstudent_names = [\"Alice\", \"Bob\", \"Charlie\", \"David\"]\n\nfor name in student_names:\n    print(\"Student:\", name)\n```", "```py\nOutput >>>\n\nStudent: Alice\nStudent: Bob\nStudent: Charlie\nStudent: David\n```", "```py\n# Using a while loop with an existing iterable\n\nstudent_names = [\"Alice\", \"Bob\", \"Charlie\", \"David\"]\nindex = 0\n\nwhile index < len(student_names):\n    print(\"Student:\", student_names[index])\n    index += 1\n```", "```py\nOutput >>>\n\nStudent: Alice\nStudent: Bob\nStudent: Charlie\nStudent: David\n```", "```py\nstudent_names = [\"Alice\", \"Bob\", \"Charlie\", \"David\"]\n\nwhile student_names:\n    current_student = student_names.pop()\n    print(\"Current Student:\", current_student)\n\nprint(\"All students have been processed.\")\n```", "```py\nOutput >>>\n\nCurrent Student: David\nCurrent Student: Charlie\nCurrent Student: Bob\nCurrent Student: Alice\nAll students have been processed.\n```", "```py\nstudent_names = [\"Alice\", \"Bob\", \"Charlie\", \"David\"]\n\nfor name in student_names:\n    if name == \"Charlie\":\n        break\n    print(name)\n```", "```py\nOutput >>>\nAlice\nBob\n```", "```py\nwhile True:\n    user_input = input(\"Enter 'exit' to stop: \")\n    if user_input == 'exit':\n        break\n```", "```py\nOutput >>>\nEnter 'exit' to stop: hi\nEnter 'exit' to stop: hello\nEnter 'exit' to stop: bye\nEnter 'exit' to stop: try harder!\nEnter 'exit' to stop: exit\n```"]