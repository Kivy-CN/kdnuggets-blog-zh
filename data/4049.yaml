- en: 'Python f-Strings Magic: 5 Game-Changing Tricks Every Coder Needs to Know'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python f-Strings 魔法：每个编码人员都需要知道的 5 个改变游戏规则的技巧
- en: 原文：[https://www.kdnuggets.com/python-fstrings-magic-5-gamechanging-tricks-every-coder-needs-to-know](https://www.kdnuggets.com/python-fstrings-magic-5-gamechanging-tricks-every-coder-needs-to-know)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/python-fstrings-magic-5-gamechanging-tricks-every-coder-needs-to-know](https://www.kdnuggets.com/python-fstrings-magic-5-gamechanging-tricks-every-coder-needs-to-know)
- en: '![Python f-Strings Magic: 5 Game-Changing Tricks Every Coder Needs to Know](../Images/ceb44b82bcbd901b125f1a00424a8c94.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Python f-Strings 魔法：每个编码人员都需要知道的 5 个改变游戏规则的技巧](../Images/ceb44b82bcbd901b125f1a00424a8c94.png)'
- en: Image by Editor
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑器提供的图片
- en: If you’ve been using Python for a while, you’ll have likely stopped using the
    old-school `format()` method to format strings. And switched to the more concise
    and easy-to-maintain f-Strings [introduced in Python 3.6](https://peps.python.org/pep-0498/).
    But there is more.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用 Python 已有一段时间，你可能已经停止使用传统的 `format()` 方法来格式化字符串，并转而使用更简洁、更易于维护的 f-Strings
    [自 Python 3.6 引入](https://peps.python.org/pep-0498/)。但这还不是全部。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT 需求'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Since Python 3.8 there are some nifty f-string features you can use for debugging,
    formatting datetime objects and floating point numbers, and much more. We’ll explore
    these use cases in this tutorial.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Python 3.8 开始，你可以使用一些巧妙的 f-string 特性进行调试、格式化日期时间对象和浮点数等。我们将在本教程中深入探讨这些使用案例。
- en: '**Note**: To run the code examples you need to have Python 3.8 or a later version
    installed.'
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意**：要运行代码示例，你需要安装 Python 3.8 或更高版本。'
- en: 1\. Easier Debugging
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 更轻松的调试
- en: When you’re coding, you might use `print()` statements to print out variables
    to verify if their values are what you expect them to be. With f-strings, you
    can include variable names *and* their values for easier debugging.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当你编写代码时，你可能会使用 `print()` 语句来打印变量，以验证它们的值是否如你所预期。使用 f-strings，你可以包含变量名 *以及* 它们的值，从而更轻松地调试。
- en: 'Consider the following example:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 请考虑以下示例：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This outputs:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这会输出：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This feature is especially helpful when you want to understand the state of
    your variables during debugging. For production code, however, you should set
    up logging with the required log levels.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想了解调试过程中变量的状态时，这一特性尤其有用。然而，对于生产代码，你应该设置所需的日志级别。
- en: 2\. Pretty Formatting Floats and Dates
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 优雅地格式化浮点数和日期
- en: 'When printing out floating point numbers and datetime objects in Python, you’ll
    have to:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中打印浮点数和日期时间对象时，你需要：
- en: Format floating point numbers to include a fixed number of digits after the
    decimal point
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将浮点数格式化为在小数点后包含固定数量的数字
- en: Format dates in a particular consistent format
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以特定的统一格式格式化日期
- en: F-strings provide a straightforward way to format floats and dates according
    to your requirements.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: f-strings 提供了一种直接的方式来根据你的需求格式化浮点数和日期。
- en: 'In this example, you format the `price` variable to display two places after
    the decimal point by specifying `{price:.2f}` like so:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，你可以通过指定 `{price:.2f}` 来格式化 `price` 变量，以显示小数点后两位：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You’d have used the [strftime()](https://docs.python.org/3/library/datetime.html#datetime.date.strftime)
    method to format datetime objects in Python. But you can also do it with f-strings.
    Here’s an example:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会使用 [strftime()](https://docs.python.org/3/library/datetime.html#datetime.date.strftime)
    方法来格式化 Python 中的日期时间对象。但你也可以使用 f-strings 来完成。以下是一个示例：
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Let''s code a simple example that include both date and float formatting:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们编写一个简单的示例，包括日期和浮点数格式化：
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 3\. Base Conversions in Numeric Values
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 数值中的基数转换
- en: F-strings support base conversion for numeric data types, allowing you to convert
    numbers from one base to another. So you don’t have to write separate base conversion
    functions or lambdas to view the number in a different base.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: F-strings 支持数值数据类型的进制转换，允许你将数字从一个进制转换到另一个进制。因此，你无需编写单独的进制转换函数或 lambda 来查看不同进制的数字。
- en: 'To print out the binary and hexadecimal equivalents of the decimal number 42
    you can use f-string as shown:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要打印十进制数字 42 的二进制和十六进制等效值，你可以使用 f-string，如下所示：
- en: '[PRE8]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'As seen, this is helpful when you need to print out numbers in different bases,
    like binary or hexadecimal. Let’s take another example for decimal to octal conversion:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如所见，当你需要以不同进制（如二进制或十六进制）打印数字时，这非常有用。我们再来看一个从十进制到八进制转换的例子：
- en: '[PRE10]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Remember Oct 31 = Dec 25? Yes, this example is inspired by *“Why do developers
    confuse Halloween with Christmas?”* memes.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 记得 10 月 31 日 = 12 月 25 日吗？是的，这个例子灵感来源于 *“为什么开发者会把万圣节和圣诞节搞混？”* 的 meme。
- en: 4\. Useful ASCII and repr Conversions
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 有用的 ASCII 和 repr 转换
- en: You can use the **!a** and **!r** conversion flags within f-strings to format
    strings as ASCII and `repr` strings, respectively.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 f-strings 中使用 **!a** 和 **!r** 转换标志，将字符串格式化为 ASCII 和 `repr` 字符串。
- en: 'Sometimes you may need to convert a string to its ASCII notation . Here is
    how you can do it using the **!a** flag:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 有时你可能需要将字符串转换为 ASCII 表示法。这里是如何使用 **!a** 标志来做到这一点：
- en: '[PRE12]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'To access the `repr` of any object you can use f-strings with the **!r** flag:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问任何对象的 `repr`，你可以使用带有 **!r** 标志的 f-strings：
- en: '[PRE14]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[Python dataclasses](https://docs.python.org/3/library/dataclasses.html) come
    with the default implementation of `__repr__` so we don''t have to explicitly
    write one.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[Python 数据类](https://docs.python.org/3/library/dataclasses.html) 默认实现了 `__repr__`，因此我们不必显式地编写一个。'
- en: '[PRE15]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 5\. Formatting LLM Prompt Templates
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 格式化 LLM 提示模板
- en: When working with large language models like Llama and GPT-4, f-strings are
    helpful for creating prompt templates.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理大型语言模型如 Llama 和 GPT-4 时，f-strings 对于创建提示模板非常有用。
- en: Instead of hardcoding prompt strings, you can create r*eusable and composable
    prompt templates* using f-strings. You can then insert variables, questions, or
    context as needed.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 不需要硬编码提示字符串，你可以使用 f-strings 创建 *可重用且可组合的提示模板*。然后你可以根据需要插入变量、问题或上下文。
- en: If you’re using a framework like [LangChain](/2023/04/langchain-101-build-gptpowered-applications.html)
    you can use the [PromptTemplate](https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates)
    features of the framework. But even if not, you can always use f-string-based
    prompt templates.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用像 [LangChain](/2023/04/langchain-101-build-gptpowered-applications.html)
    这样的框架，你可以使用该框架的 [PromptTemplate](https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates)
    功能。但即使没有，你仍然可以使用基于 f-string 的提示模板。
- en: 'Prompts can be as simple as:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 提示可以简单到：
- en: '[PRE16]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Or a slightly more flexible (but super simple still):'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 或者一个稍微更灵活（但仍然非常简单）的：
- en: '[PRE17]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: In some cases it's helpful to provide context and a few examples in your prompt.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，在提示中提供上下文和一些示例是很有帮助的。
- en: 'Consider this example:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一下这个例子：
- en: '[PRE18]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Here’s a reusable prompt template using f-strings. Which you can use for any
    context, example, query use case:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个使用 f-strings 的可重用提示模板。你可以在任何上下文、示例、查询用例中使用：
- en: '[PRE19]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Here’s our prompt for this example:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们这个例子的提示：
- en: '[PRE20]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Wrapping Up
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: And that's a wrap. I hope you found a few Python f-string features to add to
    your programmer’s toolbox. If you’re interested in learning Python, check out
    our compilation of  [5 Free Books to Help You Master Python](/5-free-books-to-help-you-master-python).
    Happy learning!
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样。我希望你能发现一些可以添加到你的程序员工具箱中的 Python f-string 特性。如果你有兴趣学习 Python，可以查看我们编纂的 [5
    本免费书籍助你掌握 Python](/5-free-books-to-help-you-master-python)。祝学习愉快！
- en: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)****
    is a developer and technical writer from India. She likes working at the intersection
    of math, programming, data science, and content creation. Her areas of interest
    and expertise include DevOps, data science, and natural language processing. She
    enjoys reading, writing, coding, and coffee! Currently, she''s working on learning
    and sharing her knowledge with the developer community by authoring tutorials,
    how-to guides, opinion pieces, and more. Bala also creates engaging resource overviews
    and coding tutorials.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)****
    是来自印度的开发者和技术作家。她喜欢在数学、编程、数据科学和内容创作的交汇处工作。她的兴趣和专长领域包括DevOps、数据科学和自然语言处理。她喜欢阅读、写作、编程和喝咖啡！目前，她致力于通过撰写教程、操作指南、观点文章等与开发者社区分享她的知识。Bala还创建了有趣的资源概述和编码教程。'
- en: More On This Topic
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[11 Python Magic Methods Every Programmer Should Know](https://www.kdnuggets.com/11-python-magic-methods-every-programmer-should-know)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每位程序员都应该知道的11个Python魔法方法](https://www.kdnuggets.com/11-python-magic-methods-every-programmer-should-know)'
- en: '[Soft Skills Every Data Scientist Needs](https://www.kdnuggets.com/soft-skills-every-data-scientist-needs)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每位数据科学家需要的软技能](https://www.kdnuggets.com/soft-skills-every-data-scientist-needs)'
- en: '[5 Essential Skills Every Data Scientist Needs in 2024](https://www.kdnuggets.com/5-essential-skills-every-data-scientist-needs-in-2024)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2024年每位数据科学家需要的5项核心技能](https://www.kdnuggets.com/5-essential-skills-every-data-scientist-needs-in-2024)'
- en: '[Future-Proof Your Data Game: Top Skills Every Data Scientist Needs in 2023](https://www.kdnuggets.com/futureproof-your-data-game-top-skills-every-data-scientist-needs-in-2023)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[未来证明你的数据游戏：2023年每位数据科学家需要的顶级技能](https://www.kdnuggets.com/futureproof-your-data-game-top-skills-every-data-scientist-needs-in-2023)'
- en: '[5 Tools Every Data Scientist Needs in Their Toolbox in 2024](https://www.kdnuggets.com/5-tools-every-data-scientist-needs-in-their-toolbox-in-2024)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2024年每位数据科学家工具箱中需要的5个工具](https://www.kdnuggets.com/5-tools-every-data-scientist-needs-in-their-toolbox-in-2024)'
- en: '[Free eBook: 10 Practical Python Programming Tricks](https://www.kdnuggets.com/2023/04/free-ebook-10-practical-python-programming-tricks.html)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[免费电子书：10个实用的Python编程技巧](https://www.kdnuggets.com/2023/04/free-ebook-10-practical-python-programming-tricks.html)'
