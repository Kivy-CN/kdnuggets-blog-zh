["```py\n# A simple Hello World! using TensorFlow\nimport tensorflow as tf\n\nhello = tf.constant('Hello, TensorFlow!')\nsess = tf.Session()\nsess.run(hello)\n\n# -> Hello, TensorFlow!\n\n```", "```py\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import datasets, metrics\n\niris = datasets.load_iris()\nclassifier = LogisticRegression()\nclassifier.fit(iris.data, iris.target)\nscore = metrics.accuracy_score(iris.target, classifier.predict(iris.data))\nprint(\"Accuracy: %f\" % score)\n\n```", "```py\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn import datasets, metrics\n\niris = datasets.load_iris()\nclassifier = GaussianNB()\nclassifier.fit(iris.data, iris.target)\nscore = metrics.accuracy_score(iris.target, classifier.predict(iris.data))\nprint(\"Accuracy: %f\" % score)\n\n```", "```py\n>>> pip install git+git://github.com/tensorflow/skflow.git\n\n```", "```py\nimport skflow\nfrom sklearn import datasets, metrics\n\niris = datasets.load_iris()\nclassifier = skflow.TensorFlowLinearClassifier(n_classes=3)\nclassifier.fit(iris.data, iris.target)\nscore = metrics.accuracy_score(iris.target, classifier.predict(iris.data))\nprint(\"Accuracy: %f\" % score)\n\n```", "```py\nimport skflow\nfrom sklearn import datasets, metrics\n\niris = datasets.load_iris()\nclassifier = skflow.TensorFlowDNNClassifier(hidden_units=[10, 20, 10], n_classes=3)\nclassifier.fit(iris.data, iris.target)\nscore = metrics.accuracy_score(iris.target, classifier.predict(iris.data))\nprint(\"Accuracy: %f\" % score)\n\n```"]