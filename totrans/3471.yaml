- en: 5 Machine Learning Projects You Can No Longer Overlook
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2016/05/five-machine-learning-projects-cant-overlook.html](https://www.kdnuggets.com/2016/05/five-machine-learning-projects-cant-overlook.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The **popular** machine learning projects, in general, are popular because they
    either provide a wide range of needed services or they were the first (or possibly
    best) to provide a particular niche service to users. These popular projects include
    Scikit-learn, TensorFlow, Theano, MXNet (maybe?), Weka (formerly), and so on.
    Depending on the particular ecosystem(s) you work in, and on your machine learning
    goals, the projects which you consider popular may differ slightly; however, they
    all share the similarity that they provide services to a large base of users.
  prefs: []
  type: TYPE_NORMAL
- en: 'But there are all sorts of smaller [machine learning projects](https://www.kdnuggets.com/2020/03/20-machine-learning-datasets-project-ideas.html)
    out there that people are building and using: pipelines, wrappers, high-level
    APIs, cleaners, etc. They provide both niche and flexible services, usually for
    smaller numbers of users, for all sorts of reasons. This post will present 5 such
    smaller projects for readers to familiarize themselves with.'
  prefs: []
  type: TYPE_NORMAL
- en: 'I''m not necessarily suggesting you go out and try all (or any) of these; if
    there is some particular requirement you are looking to fill which you happen
    to find a corresponding tool for in this list, then by all means give it a try.
    The real value here, however, at least in my view, is checking out what the projects
    offer, how they are implemented, and what others are building to fit into their
    ecosystems. You might get some good ideas of where to take your own projects.
    But best case: something here fills a need perfectly and you solve a problem,
    thanks to the work the developers listed herein are doing.'
  prefs: []
  type: TYPE_NORMAL
- en: There is no real criteria for these items, I'm sorry to report. They are simply
    a collection of interesting projects I have noted over the past few months and
    thought were promising enough to share with readers. Also note that I am firmly
    invested in the Python ecosystem, and so these tools have been discovered accordingly.
    I don't have any bias against any of the projects that R or C++ or any other particular
    environment has to offer (and may discover and share such projects in future posts);
    this list came together generically, however, based on my internet wanderings
    as I searched for useful tools.
  prefs: []
  type: TYPE_NORMAL
- en: 'So here they are: 5 machine learning projects you should definitely have a
    look at, in no particular order (but numbered like they **are** in order, because
    I like numbering things):'
  prefs: []
  type: TYPE_NORMAL
- en: '**1\. [Deepy](https://github.com/zomux/deepy)**'
  prefs: []
  type: TYPE_NORMAL
- en: Deepy is an extensible deep learning framework based on Theano. It provides
    a clean, high-level interface for components such as LSTMs, Batch Normalization,
    and Auto Encoders. Deepy clearly aims for simplicity, and its [documentation](http://deepy.readthedocs.io/en/latest/)
    and examples aim for the same. It also has a sister project, which uses Deepy
    to implement [Deep Recurrent Attentive Writer](http://arxiv.org/pdf/1502.04623.pdf)
    (DRAW) generative models.
  prefs: []
  type: TYPE_NORMAL
- en: 'For an example of Deepy''s simplicity and cleanliness, here''s an example of
    a multi-layer model with dropout, from the project''s Github:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: </br class="blank" />
  prefs: []
  type: TYPE_NORMAL
- en: You may have even heard of Deepy already; its Github repo has 305 stars and
    has been forked 51 times, as of this writing. The project is a decent exemplar
    of high-level deep learning APIs and wrappers that are becoming widespread (or
    seem to be). Deepy is authored by [Raphael Shu](http://raphael.uaca.com/).
  prefs: []
  type: TYPE_NORMAL
- en: '**2\. [MLxtend](https://github.com/rasbt/mlxtend)**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Sebastian Raschka](https://twitter.com/rasbt) has put together MLxtend, something
    he is quick to point out is a work in progress, but is also something which attempts
    to tick a number of different boxes. MLxtend is a collection of useful tools and
    extensions for machine learning tasks.'
  prefs: []
  type: TYPE_NORMAL
- en: '![MLxtend](../Images/a1803f039bb3a49863e5f0c86669d426.png)Sebastian shared
    the following with me, regarding the project, how it came to be, and its goals:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Essentially, it''s just a collection of useful tools and reference implementations
    related to ML and data science in general. Why did I come up with it? There are
    a couple of reasons:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Implementations of algorithms that I couldn't find anywhere else (e.g., the
    Sequential Feature Selection algorithms, the Majority Voting Classifier, the Stacking
    estimators, plotting decision regions, ...)
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
- en: Implementations for teaching purposes (logistic regression, softmax regression,
    multi-layer perceptron, PCA, kernel PCA...); these impl. focus on code readability
    rather than pure efficiency
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Wrappers for convenience: tensorflow softmax regression and multi-layer perceptrons,
    column-wise standardization for pandas data frames'
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
- en: This is essentially a library of commonly-used general machine learning functions
    that Sebastian has written and frequently uses. Additionally, Sebastian really
    likes to code, and thought that if he were to offer this "zoo" of different things
    (as he refers to it) up to others that he may keep the code "tidier" than usual.
  prefs: []
  type: TYPE_NORMAL
- en: 'Many of the implemented functions share similarities with scikit-learn''s API,
    but future addition functionality will not necessarily be restricted by this.
    The big takeaway here: Sebastian promises that there is much more to come... so
    stay tuned. There''s a good chance that any feature or novel algorithm that Sebastian
    plays with will end up being packaged in MLxtend.'
  prefs: []
  type: TYPE_NORMAL
- en: '**3\. [datacleaner](https://github.com/rhiever/datacleaner)**'
  prefs: []
  type: TYPE_NORMAL
- en: 'datacleaner is the work of researcher [Randal Olson](http://www.randalolson.com/blog/),
    who is also responsible for the fantastic [TPOT machine learning pipeline](/2016/05/tpot-python-automating-data-science.html)
    project. Olson bills Data Cleaner as a "Python tool that automatically cleans
    data sets and readies them for analysis." He is quick to declare that it is not
    magic, but also points out what it *can* do:'
  prefs: []
  type: TYPE_NORMAL
- en: What datacleaner will do is save you a ton of time encoding and cleaning your
    data once it's already in a format that pandas DataFrames can handle.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'datacleaner is a work in progress, but is currently capable of handling the
    following regular (and time-consuming) data cleaning operations: optionally drops
    rows with missing values; replaces missing values with either mode or median,
    on a column by column basis; encodes non-numerical variables with numerical equivalents.
    Randal tells us that he is looking for contributors, especially from those with
    more ideas on what data cleaning operations datacleaner could perform in an automated
    fashion.'
  prefs: []
  type: TYPE_NORMAL
- en: Randal has an attention to detail that anyone who reads his blog or his Github
    repos already knows, and the concise documentation for this project is no exception.
    I have been using datacleaner recently, and so far it delivers on its promises.
  prefs: []
  type: TYPE_NORMAL
- en: '**4\. [auto-sklearn](https://github.com/automl/auto-sklearn)**'
  prefs: []
  type: TYPE_NORMAL
- en: auto-sklearn is automated machine learning for the Scikit-learn environment.
  prefs: []
  type: TYPE_NORMAL
- en: auto-sklearn frees a machine learning user from algorithm selection and hyperparameter
    tuning. It leverages recent advantages in Bayesian optimization, meta-learning
    and ensemble construction. Learn more about the technology behind auto-sklearn
    by reading this paper published at the [NIPS 2015](http://papers.nips.cc/paper/5872-efficient-and-robust-automated-machine-learning.pdf).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![auto-sklearn](../Images/4aafb75cd73f71f8b37f7d7bc31f4e70.png)'
  prefs: []
  type: TYPE_IMG
- en: Its [documentation](http://automl.github.io/auto-sklearn/stable/) is quite thorough,
    and the repo includes a [few concise examples](https://github.com/automl/auto-sklearn/tree/master/example).
    I have, admittedly, not used it yet, but many others have; it has collected nearly
    400 stars on Github. Given my propensity for Scikit-learn, I imagine I will try
    this out in the near future.
  prefs: []
  type: TYPE_NORMAL
- en: auto-sklearn is developed mainly by the [Machine Learning for Automated Algorithm
    Design](http://aad.informatik.uni-freiburg.de/) group at the University of Freiburg.
  prefs: []
  type: TYPE_NORMAL
- en: '**5\. [Deep Mining](https://github.com/HDI-Project/DeepMining)**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Deep Mining is a machine learning pipeline auto-tuner, coming to us from [Sebastien
    Dubois](http://sds-dubois.github.io/) of the CSAIL lab at MIT. From the repo:'
  prefs: []
  type: TYPE_NORMAL
- en: This software will test iteratively, and smartly, some hyperparameter sets in
    order to find as quickly as possible the best ones to achieve the best classification
    accuracy that a pipeline can offer.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Deep Mining](../Images/320d6937c084938979886b791a91e8dd.png)'
  prefs: []
  type: TYPE_IMG
- en: Deep Mining does not seem to be a well-known project, given its relatively modest
    number of repo stars; however, given that it comes out of CSAIL, and has development
    activity within the past month, it may be worth benchmarking this against other
    similar automated pipeline tools. It comes with a [few examples](https://github.com/HDI-Project/DeepMining/tree/master/gcp_hpo/examples),
    and its usage seems to be straightforward.
  prefs: []
  type: TYPE_NORMAL
- en: 'More on the methods used:'
  prefs: []
  type: TYPE_NORMAL
- en: The folder GCP-HPO contains all the code implementing the Gaussian Copula Process
    (GCP) and a hyperparameter optimization (HPO) technique based on it. Gaussian
    Copula Process can be seen as an improved version of the Gaussian Process, that
    does not assume a Gaussian prior for the marginal distributions but lies on a
    more complex prior. This new technique is proved to outperform GP-based hyperparameter
    optimization, which is already far better than the randomized search.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A paper on the GCP approach is forthcoming.
  prefs: []
  type: TYPE_NORMAL
- en: '**Related**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Top 10 Machine Learning Projects on Github](/2015/12/top-10-machine-learning-github.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[TPOT: A Python Tool for Automating Data Science](/2016/05/tpot-python-automating-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top 10 IPython Notebook Tutorials for Data Science and Machine Learning](/2016/04/top-10-ipython-nb-tutorials.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Data Science Projects That Can Help You Solve Real World Problems](https://www.kdnuggets.com/2022/11/data-science-projects-help-solve-real-world-problems.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[9 Professional Certificates That Can Take You Onto a Degree... If…](https://www.kdnuggets.com/9-professional-certificates-that-can-take-you-onto-a-degree-if-you-really-want-to)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How You Can Use Machine Learning to Automatically Label Data](https://www.kdnuggets.com/2022/02/machine-learning-automatically-label-data.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Machine Learning Algorithms You Can''t Miss](https://www.kdnuggets.com/7-machine-learning-algorithms-you-cant-miss)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Top Machine Learning Courses You Can Take in 2024](https://www.kdnuggets.com/5-top-machine-learning-courses-you-can-take-in-2024)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top 5 AI Podcasts You Can''t Miss in 2024](https://www.kdnuggets.com/top-5-ai-podcasts-you-cant-miss-in-2024)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
