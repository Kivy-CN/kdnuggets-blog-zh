- en: Would You Survive the Titanic? A Guide to Machine Learning in Python Part 2
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你会在泰坦尼克号上生存吗？Python机器学习指南第二部分
- en: 原文：[https://www.kdnuggets.com/2016/07/titanic-machine-learning-guide-part-2.html/2](https://www.kdnuggets.com/2016/07/titanic-machine-learning-guide-part-2.html/2)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2016/07/titanic-machine-learning-guide-part-2.html/2](https://www.kdnuggets.com/2016/07/titanic-machine-learning-guide-part-2.html/2)
- en: '**Classification - The Fun Part**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**分类 - 有趣的部分**'
- en: We will start off with a simple decision tree classifier. A decision tree examines
    one variable at a time, and splits into one of two branches based on the result
    of that value, at which point it does the same for the next variable. A fantasic
    visual explanation of how decision trees work can be found [here](http://www.r2d3.us/visual-intro-to-machine-learning-part-1/).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从一个简单的决策树分类器开始。决策树一次检查一个变量，并根据该值的结果分裂成两个分支之一，然后对下一个变量执行相同的操作。关于决策树如何工作的精彩可视化解释可以在[这里](http://www.r2d3.us/visual-intro-to-machine-learning-part-1/)找到。
- en: 'This is what a trained decision tree for the Titanic dataset looks like, if
    we set the maximum number of levels to 3:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将最大层数设置为3，这就是经过训练的泰坦尼克号数据集的决策树的样子：
- en: '[![Decision tree](../Images/ba8a5a296a46ba87dcc053bdef4ff8e7.png)](/wp-content/uploads/socialcops-tree.jpg)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[![决策树](../Images/ba8a5a296a46ba87dcc053bdef4ff8e7.png)](/wp-content/uploads/socialcops-tree.jpg)'
- en: The tree first splits by sex, and then by class, since it has learned during
    the training phase that these are the two most important features for determining
    survival. The dark blue boxes indicate passengers who are likely to survive, and
    the dark orange boxes represent passengers who are almost certainly doomed. Interestingly,
    after splitting by class, the main deciding factor determining the survival of
    women is the ticket fare that they paid, while the deciding factor for men is
    their age(with children being much more likely to survive).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 树首先按性别分裂，然后按类别分裂，因为它在训练阶段了解到这些是决定生存的两个最重要的特征。深蓝色框表示可能生存的乘客，而深橙色框则代表几乎肯定会遇难的乘客。有趣的是，在按类别分裂后，决定女性生存的主要因素是她们支付的票价，而男性的决定因素是他们的年龄（儿童更有可能生存）。
- en: To create this tree, first we initialize an instance of an untrained decision
    tree classifier(here we will set the maximum depth of the tree to 10). Next we
    “fit” this classifier to our training set, enabling it to learn about how different
    factors affect the survivability of a passenger. Now that the decision tree is
    ready, we can “score” it using our test data to determine how accurate it is.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建这个树，首先我们初始化一个未训练的决策树分类器（这里我们将树的最大深度设置为10）。接下来，我们将这个分类器“拟合”到我们的训练集上，使其能够学习不同因素如何影响乘客的生存率。现在决策树已经准备好了，我们可以使用测试数据对其进行“评分”，以确定它的准确性。
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '*[Click here for the gist.](https://gist.github.com/triestpa/5858dc07caab1e33af10178fd1f236d5)*'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*[点击这里查看要点。](https://gist.github.com/triestpa/5858dc07caab1e33af10178fd1f236d5)*'
- en: The resulting reading, 0.7703, means that the model correctly predicted the
    survival of 77% of the test set. Not bad for our first model!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 结果为0.7703，意味着模型正确预测了77%的测试集生存情况。对于我们的第一个模型来说，表现不错！
- en: If you are being an attentive, skeptical reader(as you should be), you might
    be thinking that the accuracy of the model could vary somewhat depending on which
    rows were selected for the training and test sets. We will get around this problem
    by using a shuffle validator.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是一个细心、怀疑的读者（你应该这样），你可能会想到模型的准确性可能会根据选择的训练和测试集的行而有所不同。我们将通过使用洗牌验证器来解决这个问题。
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '*[Click here for the gist.](https://gist.github.com/triestpa/e326db921a5400428aeb33130fb3152b)*'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*[点击这里查看要点。](https://gist.github.com/triestpa/e326db921a5400428aeb33130fb3152b)*'
- en: This shuffle validator applies the same random 20:80 split as before, but this
    time generates 20 unique permutations of this split. By passing this shuffle validator
    as a parameter to the “cross_val_score” function, we can score our classifier
    against each of the different splits, and compute the average accuracy and standard
    deviation from the results.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这个洗牌验证器应用了与之前相同的随机20:80拆分，但这次生成了20个独特的拆分排列。通过将此洗牌验证器作为参数传递给“cross_val_score”函数，我们可以针对每个不同的拆分对分类器进行评分，并计算结果的平均准确性和标准差。
- en: The result shows that our decision tree classifier has an overall accuracy of
    77.34%, although it can go up to 80% and down to 75% depending on the training/test
    split. Using scikit-learn, we can easily test other machine learning algorithms
    using the exact same syntax.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 结果显示我们的决策树分类器的总体准确率为77.34%，虽然根据训练/测试拆分，准确率可能会高达80%或降到75%。使用scikit-learn，我们可以轻松地用完全相同的语法测试其他机器学习算法。
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '*[Click here for the gist.](https://gist.github.com/triestpa/b6b3db3ac3424b664b59fbbf48d19859)*'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*[点击这里查看概要。](https://gist.github.com/triestpa/b6b3db3ac3424b664b59fbbf48d19859)*'
- en: The “Random Forest” classification algorithm will create a multitude of (generally
    very poor) trees for the dataset using different random subsets of the input variables,
    and will return whichever prediction was returned by the most trees. This helps
    to avoid “overfitting”, a problem that occurs when a model is so tightly fitted
    to arbitrary correlations in the training data that it performs poorly on test
    data.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: “随机森林”分类算法将创建大量（通常质量较差的）树，使用输入变量的不同随机子集，并返回最多树所返回的预测。这有助于避免“过拟合”，这是一种当模型过于紧密地拟合训练数据中的任意相关性，以至于在测试数据上表现不佳的问题。
- en: The “Gradient Boosting” classifier will generate many weak, shallow prediction
    trees, and will combine, or “boost”, them into a strong model. This model performs
    very well on our dataset, but has the drawback of being relatively slow and difficult
    to optimize, as the model construction happens sequentially so cannot be parallelized.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: “梯度提升”分类器将生成许多弱小、浅层的预测树，并将它们组合或“提升”成一个强大的模型。该模型在我们的数据集上表现非常好，但缺点是相对较慢且难以优化，因为模型构建是顺序进行的，因此不能并行化。
- en: A “Voting” classifier can be used to apply multiple conceptually divergent classification
    models to the same dataset, and will return the majority vote from all of the
    classifiers. For instance, if the gradient boosting classifier predicts that a
    passenger will not survive, but the decision tree and random forest classifiers
    predict that they will live, the voting classifier will chose the later.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: “投票”分类器可以用来将多个概念上不同的分类模型应用于同一数据集，并返回所有分类器中的多数票。例如，如果梯度提升分类器预测乘客将不会生存，而决策树和随机森林分类器预测他们将生存，则投票分类器将选择后者。
- en: This has been a very brief and non-technical overview of each technique, so
    I encourage you to learn more about the mathematical implementations of all of
    these algorithms to obtain a deeper understanding of their relative strengths
    and weaknesses. Many more classification algorithms are available “out-of-the-box”
    in scikit-learn and can be explored [here](http://scikit-learn.org/stable/modules/ensemble.html).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这是对每种技术的非常简要和非技术性概述，因此我鼓励你深入了解所有这些算法的数学实现，以获得对它们相对优缺点的更深入理解。更多分类算法可以在scikit-learn中“开箱即用”，可以在[这里](http://scikit-learn.org/stable/modules/ensemble.html)探索。
- en: '![Patrick Triest](../Images/58fde3736bd01dbcfdf3fd2657ea5996.png)**Bio: [Patrick
    Triest](https://www.linkedin.com/in/triestpa)** is a 23 year old Android Developer
    / IoT Engineer / Data Scientist / wannabe pioneer, originally from Boston and
    now working at SocialCops. He’s addicted to learning, and sometimes after figuring
    out something particularly cool he gets really excited and writes about it.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '![Patrick Triest](../Images/58fde3736bd01dbcfdf3fd2657ea5996.png)**简介：[Patrick
    Triest](https://www.linkedin.com/in/triestpa)** 是一位23岁的Android开发者/物联网工程师/数据科学家/有志成为先驱者，来自波士顿，现在在SocialCops工作。他热衷于学习，有时在发现一些特别酷的东西后会非常兴奋并写下自己的见解。'
- en: '[Original](http://blog.socialcops.com/engineering/machine-learning-python).
    Reposted with permission.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](http://blog.socialcops.com/engineering/machine-learning-python)。经许可转载。'
- en: '**Related:**'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[7 Steps to Mastering Machine Learning With Python](/2015/11/seven-steps-machine-learning-python.html)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[掌握Python机器学习的7个步骤](/2015/11/seven-steps-machine-learning-python.html)'
- en: '[Top 10 IPython Notebook Tutorials for Data Science and Machine Learning](/2016/04/top-10-ipython-nb-tutorials.html)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学和机器学习的前10大IPython笔记本教程](/2016/04/top-10-ipython-nb-tutorials.html)'
- en: '[R Learning Path: From beginner to expert in R in 7 steps](/2016/03/datacamp-r-learning-path-7-steps.html)'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[R学习路径：从R初学者到专家的7个步骤](/2016/03/datacamp-r-learning-path-7-steps.html)'
- en: '* * *'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业轨道'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织在IT领域'
- en: '* * *'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Data Scientists Need to Specialize to Survive the Tech Winter](https://www.kdnuggets.com/2023/08/data-scientists-need-specialize-survive-tech-winter.html)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家需要专门化以应对技术冬季](https://www.kdnuggets.com/2023/08/data-scientists-need-specialize-survive-tech-winter.html)'
- en: '[If I Had To Start Learning Data Science Again, How Would I Do It?](https://www.kdnuggets.com/2020/08/start-learning-data-science-again.html)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如果我重新开始学习数据科学，我会怎么做？](https://www.kdnuggets.com/2020/08/start-learning-data-science-again.html)'
- en: '[When Would Ensemble Techniques be a Good Choice?](https://www.kdnuggets.com/2022/07/would-ensemble-techniques-good-choice.html)'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[什么时候集成技术是一个好选择？](https://www.kdnuggets.com/2022/07/would-ensemble-techniques-good-choice.html)'
- en: '[Data Science Interview Guide - Part 2: Interview Resources](https://www.kdnuggets.com/2022/04/data-science-interview-guide-part-2-interview-resources.html)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学面试指南 - 第2部分：面试资源](https://www.kdnuggets.com/2022/04/data-science-interview-guide-part-2-interview-resources.html)'
- en: '[Data Science Interview Guide - Part 1: The Structure](https://www.kdnuggets.com/2022/04/data-science-interview-guide-part-1-structure.html)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学面试指南 - 第1部分：结构](https://www.kdnuggets.com/2022/04/data-science-interview-guide-part-1-structure.html)'
- en: '[Want to Become a Data Scientist? Part 1: 10 Hard Skills You Need](https://www.kdnuggets.com/want-to-become-a-data-scientist-part-1-10-hard-skills-you-need)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[想成为数据科学家？第1部分：你需要的10项硬技能](https://www.kdnuggets.com/want-to-become-a-data-scientist-part-1-10-hard-skills-you-need)'
