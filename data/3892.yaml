- en: 4 Tricks to Effectively Use JSON in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Python 中有效使用 JSON 的 4 个技巧
- en: 原文：[https://www.kdnuggets.com/2020/09/4-tricks-effectively-use-json-python.html](https://www.kdnuggets.com/2020/09/4-tricks-effectively-use-json-python.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/09/4-tricks-effectively-use-json-python.html](https://www.kdnuggets.com/2020/09/4-tricks-effectively-use-json-python.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Erik van Baaren](https://medium.com/@eriky), [Python 3 Guide](https://python3.guide/)**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Erik van Baaren](https://medium.com/@eriky), [Python 3 指南](https://python3.guide/)**'
- en: '![Figure](../Images/126e2354b612ada101cd10cb652dc896.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/126e2354b612ada101cd10cb652dc896.png)'
- en: Illustration by author
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 作者插图
- en: 'Python has two data types that, together, form the perfect tool for working
    with JSON: **dictionaries** and **lists**. Let''s explore how to:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Python 有两种数据类型，它们共同构成了处理 JSON 的完美工具：**字典**和**列表**。让我们来探讨如何：
- en: load and write JSON
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加载和写入 JSON
- en: Pretty-print and validate JSON on the command line
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在命令行上美化和验证 JSON
- en: Do advanced queries on JSON docs by using JMESPath
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 JMESPath 对 JSON 文档进行高级查询
- en: 1\. Decoding JSON
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1\. 解码 JSON
- en: 'Python ships with a powerful and elegant [JSON library](https://docs.python.org/3.8/library/json.html).
    It can be imported with:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Python 附带了一个强大且优雅的 [JSON 库](https://docs.python.org/3.8/library/json.html)。可以用以下方式导入：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Decoding a string of JSON is as simple as `json.loads(…)` (short for load string).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 解码 JSON 字符串就像 `json.loads(…)`（缩写为加载字符串）一样简单。
- en: 'It converts:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 它转换为：
- en: objects to dictionaries
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对象转为字典
- en: arrays to lists,
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数组转为列表，
- en: booleans, integers, floats, and strings are recognized for what they are and
    will be converted into the correct types in Python
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔值、整数、浮点数和字符串将按它们的实际类型被识别，并在 Python 中转换为正确的类型
- en: Any `null` will be converted into Python’s `None` type
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何 `null` 将被转换为 Python 的 `None` 类型
- en: 'Here’s an example of `json.loads` in action:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 `json.loads` 的一个示例：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 2\. Encoding JSON
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2\. 编码 JSON
- en: 'The other way around is just as easy. Use `json.dumps(…)` (short for ‘dump
    to string) to convert a Python object consisting of dictionaries, lists, and other
    native types into a string:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法同样简单。使用 `json.dumps(…)`（缩写为‘转储到字符串’）将一个包含字典、列表和其他原生类型的 Python 对象转换为字符串：
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This is the exact same document, converted back to a string! If you want to
    make your JSON document more readable for humans, use the indent option:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这是完全相同的文档，转换回字符串！如果你想让你的 JSON 文档对人类更易读，可以使用缩进选项：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 3\. Command-line usage
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3\. 命令行使用
- en: 'The JSON library can also be used from the command-line, to **validate** and **pretty-print** your
    JSON:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: JSON 库也可以通过命令行使用，用于**验证**和**美化**你的 JSON：
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'As a side note: if you’re on a Mac or Linux and get the chance to install it,
    look into the `jq` command-line tool too. It’s easy to remember, colorizes your
    output, and has loads of extra features as explained in [my article on becoming
    a command-line ninja](https://towardsdatascience.com/this-will-make-you-a-command-line-ninja-93a51cdb16b1).'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 附带说明：如果你使用 Mac 或 Linux 并有机会安装它，也可以查看 `jq` 命令行工具。它容易记住，输出有颜色，并且有很多额外的功能，如 [我关于成为命令行高手的文章](https://towardsdatascience.com/this-will-make-you-a-command-line-ninja-93a51cdb16b1)
    中所述。
- en: '![Figure](../Images/bd9c87b19426c42e16f3b2c85aa24f45.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/bd9c87b19426c42e16f3b2c85aa24f45.png)'
- en: jq will pretty-print your JSON by default
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: jq 默认会美化你的 JSON
- en: 4\. Searching through JSON with JMESPath
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4\. 使用 JMESPath 在 JSON 中搜索
- en: '![Figure](../Images/f3ce0370cfbe428e42c7aa78e160af16.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/f3ce0370cfbe428e42c7aa78e160af16.png)'
- en: '[Screenshot](http://jmespath.org/) by author'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[截图](http://jmespath.org/) 作者'
- en: JMESPath is a query language for JSON. It allows you to easily obtain the data
    you need from a JSON document. If you ever worked with JSON before, you probably
    know that it’s easy to get a nested value.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: JMESPath 是一种用于 JSON 的查询语言。它允许你轻松获取 JSON 文档中的所需数据。如果你以前使用过 JSON，你可能知道获取嵌套值很简单。
- en: 'For example: `doc["person"]["age"]` will get you the nested value for age in
    a document that looks like this:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：`doc["person"]["age"]` 将为你提供一个文档中年龄的嵌套值：
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'But what if you want to extract all the age-fields from an array of persons,
    in a document like this:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果你想从一个包含多个人的数组中提取所有年龄字段，如下所示的文档：
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We could write a simple loop and loop over all the persons. Easy peasy. But
    loops are slow and introduce complexity to your code. This is where JMESPath comes
    in!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以写一个简单的循环来遍历所有人员。很简单。但循环很慢，并给你的代码引入复杂性。这就是 JMESPath 的用武之地！
- en: 'This JMESPath expression will get the job done:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 JMESPath 表达式将完成任务：
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: It will return an array with all the ages: `[38, 45, 14]`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 它将返回一个包含所有年龄的数组：`[38, 45, 14]`。
- en: 'Say you want to filter the list, and only get the ages for people named ‘erik’.
    You can do so with a filter:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你想过滤列表，只获取名字为 'erik' 的人的年龄。你可以通过过滤器实现：
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: See how natural and quick this is?
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 你看这有多自然和快速？
- en: 'JMESPath is not part of the Python standard library, meaning you’ll need to
    install it with `pip` or `[pipenv](https://medium.com/better-programming/improve-your-python-package-management-with-pipenv-28093c007955)`.
    For example, when [using ](https://medium.com/better-programming/stop-installing-python-packages-globally-use-virtual-environments-a31dee9fb2de)`[pip](https://medium.com/better-programming/stop-installing-python-packages-globally-use-virtual-environments-a31dee9fb2de)`[ in
    in virtual environment](https://medium.com/better-programming/stop-installing-python-packages-globally-use-virtual-environments-a31dee9fb2de):'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: JMESPath 并不是 Python 标准库的一部分，这意味着你需要通过 `pip` 或 `[pipenv](https://medium.com/better-programming/improve-your-python-package-management-with-pipenv-28093c007955)`
    来安装它。例如，当 [使用](https://medium.com/better-programming/stop-installing-python-packages-globally-use-virtual-environments-a31dee9fb2de)`[pip](https://medium.com/better-programming/stop-installing-python-packages-globally-use-virtual-environments-a31dee9fb2de)`[
    在虚拟环境中](https://medium.com/better-programming/stop-installing-python-packages-globally-use-virtual-environments-a31dee9fb2de)：
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: You’re now ready to start experimenting! Make sure to try the [interactive tutorial](https://jmespath.org/tutorial.html) and
    view the [examples](https://jmespath.org/examples.html) on the JMESPath site!
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以开始尝试了！一定要试试 [互动教程](https://jmespath.org/tutorial.html) 并查看 JMESPath 网站上的
    [示例](https://jmespath.org/examples.html)！
- en: If you have more JSON tips or tricks, please share them in the comments!
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有更多的 JSON 提示或技巧，请在评论中分享！
- en: '**Follow me** on [Twitter](https://twitter.com/erikyan) to get my latest articles
    first and make sure to **visit my **[**Python 3 Guide**](https://python3.guide/).
    This article was originally published [there](https://python3.guide/data-processing/working-with-json) as
    well.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**关注我** 在 [Twitter](https://twitter.com/erikyan) 上以获取我的最新文章，并确保 **访问我的** [**Python
    3 指南**](https://python3.guide/)。这篇文章最初也发布在 [那里](https://python3.guide/data-processing/working-with-json)。'
- en: '[**The Most Important Python Concept That You Need to Understand**](https://towardsdatascience.com/the-most-important-python-concept-that-you-need-to-understand-985b98bbb84)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[**你需要理解的最重要的 Python 概念**](https://towardsdatascience.com/the-most-important-python-concept-that-you-need-to-understand-985b98bbb84)'
- en: Learn all about the building blocks of the Python language
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 了解 Python 语言的所有基础构件
- en: '**Bio: [Erik van Baaren](https://medium.com/@eriky)** is a software engineer
    and the webmaster of [Python 3 Guide](https://python3.guide/), where you can learn
    both beginner and advanced Python topics. He''s also a writer of tech articles
    on [Medium.com](https://medium.com/@eriky).'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**个人简介：[Erik van Baaren](https://medium.com/@eriky)** 是一名软件工程师及 [Python 3 指南](https://python3.guide/)
    的站长，你可以在这里学习初学者和高级的 Python 话题。他也是 [Medium.com](https://medium.com/@eriky) 上技术文章的作者。'
- en: '[Original](https://towardsdatascience.com/4-tricks-to-effectively-use-json-in-python-4ca18c3f91d0).
    Reposted with permission.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/4-tricks-to-effectively-use-json-in-python-4ca18c3f91d0)。经许可转载。'
- en: '**Related:**'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[3 Advanced Python Features You Should Know](/2020/07/3-advanced-python-features.html)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[你应该知道的 3 个高级 Python 特性](/2020/07/3-advanced-python-features.html)'
- en: '[Why Learn Python? Here Are 8 Data-Driven Reasons](/2020/07/learn-python-8-data-driven-reasons.html)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[为什么学习 Python？这里有 8 个数据驱动的理由](/2020/07/learn-python-8-data-driven-reasons.html)'
- en: '[10 Things You Didn’t Know About Scikit-Learn](/2020/09/10-things-know-scikit-learn.html)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[你不知道的 10 件关于 Scikit-Learn 的事](/2020/09/10-things-know-scikit-learn.html)'
- en: '* * *'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速通道进入网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[How to Effectively Use Pandas GroupBy](https://www.kdnuggets.com/2023/01/effectively-pandas-groupby.html)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何有效使用 Pandas GroupBy](https://www.kdnuggets.com/2023/01/effectively-pandas-groupby.html)'
- en: '[Data Analytics: The Four Approaches to Analyzing Data and How To…](https://www.kdnuggets.com/2023/04/data-analytics-four-approaches-analyzing-data-effectively.html)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据分析：分析数据的四种方法及其应用…](https://www.kdnuggets.com/2023/04/data-analytics-four-approaches-analyzing-data-effectively.html)'
- en: '[How To Use Docker Tags to Manage Image Versions Effectively](https://www.kdnuggets.com/how-to-use-docker-tags-to-manage-image-versions-effectively)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何有效管理镜像版本的 Docker 标签使用方法](https://www.kdnuggets.com/how-to-use-docker-tags-to-manage-image-versions-effectively)'
- en: '[Free eBook: 10 Practical Python Programming Tricks](https://www.kdnuggets.com/2023/04/free-ebook-10-practical-python-programming-tricks.html)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[免费下载电子书：10 个实用的 Python 编程技巧](https://www.kdnuggets.com/2023/04/free-ebook-10-practical-python-programming-tricks.html)'
- en: '[12 VSCode Tips and Tricks for Python Development](https://www.kdnuggets.com/2023/05/12-vscode-tips-tricks-python-development.html)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[12 个针对 Python 开发的 VSCode 提示和技巧](https://www.kdnuggets.com/2023/05/12-vscode-tips-tricks-python-development.html)'
- en: '[Python f-Strings Magic: 5 Game-Changing Tricks Every Coder Needs to Know](https://www.kdnuggets.com/python-fstrings-magic-5-gamechanging-tricks-every-coder-needs-to-know)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python f-Strings 魔法：每个程序员都需要知道的 5 个颠覆性技巧](https://www.kdnuggets.com/python-fstrings-magic-5-gamechanging-tricks-every-coder-needs-to-know)'
