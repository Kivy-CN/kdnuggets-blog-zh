["```py\npip3 install pycocotools\n```", "```py\npip3 install pixellib\n```", "```py\npip3 install pixellib -upgrade\n```", "```py\nimport pixellib\nfrom pixellib.torchbackend.instance import instanceSegmentation\n\nins = instanceSegmentation()\nins.load_model(\"pointrend_resnet50.pkl\")\nins.segmentImage(\"image.jpg\", show_bboxes=True, output_image_name=\"output_image.jpg\")\n```", "```py\nins.segmentImage(\"image.jpg\", show_bboxes = True, output_image_name=\"output.jpg\")\n```", "```py\nThe checkpoint state_dict contains keys that are not used by the model:\nproposal_generator.anchor_generator.cell_anchors.{0, 1, 2, 3, 4}\n\n```", "```py\nresults, output = ins.segmentImage(\"image.jpg\", show_bboxes=True, output_image_name=\"result.jpg\")\nprint(results)\n```", "```py\n{'boxes':  array([[ 579,  462, 1105,  704],\n       [   1,  486,  321,  734],\n       [ 321,  371,  423,  742],\n       [ 436,  369,  565,  788],\n       [ 191,  397,  270,  532],\n       [1138,  357, 1197,  482],\n       [ 877,  382,  969,  477],),\n'class_ids': array([ 2,  2,  0,  0,  0,  0,  0,  2,  0,  0,  0,  0,  2, 24, 24,2,  2,2,  0,  0,  0,  0,  0,  0], dtype=int64), \n'class_names': ['car', 'car', 'person', 'person', 'person', 'person', 'person', 'car', 'person', 'person', 'person', 'person', 'car', 'backpack', 'backpack', 'car', 'car', 'car', 'person', 'person', 'person', 'person', 'person', 'person'],\n 'object_counts': Counter({'person': 15, 'car': 7, 'backpack': 2}), \n'scores': array([100., 100., 100., 100.,  99.,  99.,  98.,  98.,  97.,  96.,  95.,95.,  95.,  95.,  94.,  94.,  93.,  91.,  90.,  88.,  82.,  72.,69.,  66.], dtype=float32), \n'masks': array([[[False, False, False, ..., False, False, False],\n[False, False, False, ..., False, False, False],\n'extracted_objects': []\n```", "```py\nins.load_model(\"pointrend_resnet50.pkl\", confidence = 0.3)\n```", "```py\nins.load_model(\"pointrend_resnet50.pkl\", detection_speed = \"fast\")\n```", "```py\nimport pixellib\nfrom pixellib.torchbackend.instance import instanceSegmentation\n\nins = instanceSegmentation()\nins.load_model(\"pointrend_resnet50.pkl\", detection_speed = \"fast\")\nins.segmentImage(\"image.jpg\", show_bboxes=True, output_image_name=\"output_image.jpg\")\n```", "```py\nins.load_model(\"pointrend_resnet50.pkl\", detection_speed = \"rapid\")\n```", "```py\nimport pixellib\nfrom pixellib.torchbackend.instance import instanceSegmentation\n\nins = instanceSegmentation()\nins.load_model(\"pointrend_resnet50.pkl\", detection_speed = \"rapid\")\nins.segmentImage(\"image.jpg\", show_bboxes=True, output_image_name=\"output_image.jpg\")\n```", "```py\nimport pixellib\nfrom pixellib.torchbackend.instance import instanceSegmentation\n\nins = instanceSegmentation()\nins.load_model(\"pointrend_resnet101.pkl\", network_backbone=\"resnet101\")\nins.segmentImage(\"sample.jpg\",  show_bboxes = True, output_image_name=\"output.jpg\")\n```", "```py\nperson, bicycle, car, motorcycle, airplane,\nbus, train, truck, boat, traffic_light, fire_hydrant, stop_sign,\nparking_meter, bench, bird, cat, dog, horse, sheep, cow, elephant, bear, zebra,\ngiraffe, backpack, umbrella, handbag, tie, suitcase, frisbee, skis, snowboard,\nsports_ball, kite, baseball_bat, baseball_glove, skateboard, surfboard, tennis_racket,\nbottle, wine_glass, cup, fork, knife, spoon, bowl, banana, apple, sandwich, orange,\nbroccoli, carrot, hot_dog, pizza, donut, cake, chair, couch, potted_plant, bed,\ndining_table, toilet, tv, laptop, mouse, remote, keyboard, cell_phone, microwave,\noven, toaster, sink, refrigerator, book, clock, vase, scissors, teddy_bear, hair_dryer,\ntoothbrush.\n```", "```py\nimport pixellib\nfrom pixellib.torchbackend.instance import instanceSegmentation\n\nins = instanceSegmentation()\nins.load_model(\"pointrend_resnet50.pkl\")\ntarget_classes = ins.select_target_classes(person = True)\nins.segmentImage(\"image.jpg\", show_bboxes=True, segment_target_classes = target_classes, output_image_name=\"output_image.jpg\")\n```", "```py\nimport pixellib\nfrom pixellib.torchbackend.instance import instanceSegmentation\n\nins = instanceSegmentation()\nins.load_model(\"pointrend_resnet50.pkl\")\nins.segmentImage(\"image.jpg\", show_bboxes=True, extract_segmented_objects=True,\nsave_extracted_objects=True, output_image_name=\"output_image.jpg\" )\n```", "```py\nsegmented_object_1.jpg\nsegmented_object_2.jpg\nsegmented_object_3.jpg\nsegmented_object_4.jpg\nsegmented_object_5.jpg\nsegmented_object_6.jpg\n```", "```py\nimport pixellib\nfrom pixellib.torchbackend.instance import instanceSegmentation\n\nins = instanceSegmentation()\nins.load_model(\"pointrend_resnet50.pkl\")\nins.segmentImage(\"image.jpg\", show_bboxes=True, extract_segmented_objects=True, extract_from_box = True,\nsave_extracted_objects=True, output_image_name=\"output_image.jpg\" )\n```", "```py\nins.segmentImage(\"sample.jpg\", show_bboxes=True, output_image_name= \"output.jpg\")\n```", "```py\nins.segmentImage(“sample.jpg”, show_bboxes=True, text_size=5, text_thickness=4, box_thickness=10, output_image_name=”output.jpg”)\n```"]