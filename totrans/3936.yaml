- en: Data Structures Related to Machine Learning Algorithms
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2018/01/data-structures-related-machine-learning-algorithms.html](https://www.kdnuggets.com/2018/01/data-structures-related-machine-learning-algorithms.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](/2018/01/data-structures-related-machine-learning-algorithms.html?page=2#comments)'
  prefs: []
  type: TYPE_IMG
- en: '**By Peter Mills, Statsbot**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Header image](../Images/9e07d08a07a2dbe643f904f1aab5d3f0.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Illustration source](http://gph.is/24jTEfV)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '*The *[***Statsbot***](http://statsbot.co/?utm_source=blog&utm_campaign=structures_ml)* team
    has invited Peter Mills to tell you about data structures for machine learning
    approaches.*'
  prefs: []
  type: TYPE_NORMAL
- en: So you’ve decided to move beyond canned algorithms and start to code your own
    machine learning methods. Maybe you’ve got an idea for a cool new way of clustering
    data, or maybe you are frustrated by the limitations in your favorite statistical
    classification package.
  prefs: []
  type: TYPE_NORMAL
- en: '*In either case, the better your knowledge of data structures and algorithms,
    the easier time you’ll have when it comes time to code up.*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I don’t think the data structures used in machine learning are significantly
    different than those used in other areas of software development. Because of the
    size and difficulty of many of the problems, however, having a really solid handle
    on the basics is essential.
  prefs: []
  type: TYPE_NORMAL
- en: Also, because machine learning is a very mathematical field, one should have
    in mind how data structures can be used to solve mathematical problems and as
    mathematical objects in their own right.
  prefs: []
  type: TYPE_NORMAL
- en: '*There are two ways to classify data structures: by their implementation and
    by their operation.*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'By implementation, I mean the nuts and bolts of how they are programmed and
    the actual storage patterns. How they look on the outside is less important than
    what’s going on under the hood. For data structures classed by operation or *abstract
    data types*, it is the opposite: their external appearance and operation is more
    important than how they are implemented, and in fact they can usually be implemented
    using a number of different internal representations.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Array**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'I’m not kidding when I say that the basic array is the most important data
    structure in machine learning, and there is more to this bread-and-butter type
    than you might think. Arrays are important because they are used in linear algebra:
    the most useful and powerful mathematical tool at your disposal.'
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, the most common types will be the one- and two-dimensional variety,
    corresponding to vectors and matrices respectively, but you will occasionally
    encounter three- or four-dimensional arrays either for higher ranked tensors or
    to group examples of the former.
  prefs: []
  type: TYPE_NORMAL
- en: When doing **matrix arithmetic**, you will have to choose from a dizzying variety
    of libraries, data types, and even languages. Many scientific programming languages
    such as Matlab, Interactive Data Language (IDL), and Python with the Numpy extension
    are designed primarily for working with vectors and matrices.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ba05818a1013181d4f7ac23ca67e9061.png)'
  prefs: []
  type: TYPE_IMG
- en: 'But the nice thing about these data structures is that, even in more general-purpose
    programming languages, implementing vectors and matrices is straightforward right
    next to the metal, assuming the language has any Fortran DNA in it at all. Consider
    the translation of matrix-vector multiplication:'
  prefs: []
  type: TYPE_NORMAL
- en: 'into C++:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Extensible array**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In most cases, arrays can be allocated to a fixed size at run time, or you can
    calculate a reliable upper bound. In those cases where you need your arrays to
    expand indefinitely, you can use an extensible array such as the vector class
    in the C++ standard template library (STL). Regular arrays in Matlab are similarly
    extensible, and extensible arrays are the basis of the entire Python language.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6965a8e250b390bfb150513c0f5d9059.png)'
  prefs: []
  type: TYPE_IMG
- en: In this data structure, there are two pieces of “meta-data” stored alongside
    the actual data values. These are the amount of storage space allocated to the
    data structure and the actual size of the array. As soon as the size of the array
    exceeds the storage space, a new space is allocated that’s twice the size, the
    values copied into it, and the old array deleted.
  prefs: []
  type: TYPE_NORMAL
- en: This is an O(*n*) operation, where *n* is the size of the array, but since it
    only happens occasionally, time to add a new value onto the end actually amortizes
    to constant time, O(1). It is a very flexible data structure with fast average
    insertions and fast access.
  prefs: []
  type: TYPE_NORMAL
- en: 'Extensible arrays are excellent for composing other, more complex data structures
    and making them extensible. For example, to store **a sparse matrix**: any number
    of new elements can be added onto the end and they are then sorted by position
    to make location faster. More on this later.'
  prefs: []
  type: TYPE_NORMAL
- en: Sparse matrix can be used in [text classification problems](https://blog.statsbot.co/text-classifier-algorithms-in-machine-learning-acc115293278).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Linked list**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A linked list consists of several separately allocated *nodes*. Each node contains
    a data value plus a *pointer* to the next node in the list. Insertions, at constant
    time, are very efficient, but accessing a value is slow and often requires scanning
    through much of the list.
  prefs: []
  type: TYPE_NORMAL
- en: 'Linked lists are easy to splice together and split apart. There are many variations:
    for instance, insertions can be done at either the head or the tail; the list
    can be doubly-linked and there are many similar data structures based on the same
    principle such as the binary tree, below.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/88c00d33f0c9d8d0c68deee14b835b0a.png)'
  prefs: []
  type: TYPE_IMG
- en: Mainly, I find linked lists useful **for parsing lists of indeterminate length**.
    Afterwards, they can be converted to fixed-length arrays for fast access. For
    this reason, I use a linked list class that includes a method for conversion to
    an array.
  prefs: []
  type: TYPE_NORMAL
- en: '**Binary tree**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A binary tree is similar to a linked list except that each node has two pointers
    to subsequent nodes instead of just one. The value in the *left child* is always
    less than the value in the *parent node,* which in turn is smaller than that of
    the *right child*. Thus, data in binary trees is automatically sorted. Both insertion
    and access are efficient at O(log *n*) on average. Like linked lists, they are
    easy to transform into arrays and this is the basis for a *tree-sort*.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/224a4ae1fad78452e45b02fe25213f66.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Balanced tree**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If the data is already already sorted, binary trees are less efficient at O(*n*)
    worst case since the data will be laid out linearly as if it were a linked list.
    While the ordering in a binary tree is constrained, it is by no means unique and
    the same list can be arranged in many different configurations depending on the
    order in which it is inserted.
  prefs: []
  type: TYPE_NORMAL
- en: There are several transformations that can be applied to a tree in order to
    make it more balanced. *Self-balancing trees* perform these operations automatically
    in order to keep access and insertion at an optimal average.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/dffc59fb38eafc901356e3c241f27e3b.png)'
  prefs: []
  type: TYPE_IMG
- en: A widespread problem in machine learning is **finding the nearest neighbor to
    a particular point**. This problem is needed for NN algorithm. KD tree, a type
    of binary tree, provides an efficient solution for that.
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
