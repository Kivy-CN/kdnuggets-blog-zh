["```py\nfibs = [0, 1, 1, 2, 3, 5, 8, 13, 21]\n```", "```py\nmixed_list = [42, \"Hello World!\", False, 3.14159]\n```", "```py\n# Access 2nd element (indexing begins at '0')\nprint(mixed_list[1])\n\n# Append element \nmixed_list.append(\"This is new\")\n\n# Change element\nmixed_list[0] = 5\n\n# Remove last element\nmixed_list.pop(0)\n```", "```py\n# Create shopping cart as a list\ncart = [\"apples\", \"oranges\", \"grapes\"]\n\n# Sort the list \ncart.sort()\n\n# Add new item \ncart.append(\"blueberries\") \n\n# Remove first item\ncart.pop(0)\n\nprint(cart)\n```", "```py\n['grapes', 'oranges', 'blueberries']\n```", "```py\n# Defining a tuple\nmy_tuple = (1, 2, 3, 4)\n```", "```py\n# Accessing elements\nfirst_element = my_tuple[0]\nsliced_tuple = my_tuple[1:3]\n```", "```py\nconcatenated_tuple = my_tuple + (5, 6)\n```", "```py\nrepeated_tuple = my_tuple * 2\n```", "```py\nexists = 1 in my_tuple\n```", "```py\ncount_of_ones = my_tuple.count(1)\n```", "```py\nindex_of_first_one = my_tuple.index(1)\n```", "```py\npacked_tuple = 1, 2, 3\n```", "```py\na, b, c = packed_tuple\n```", "```py\n# Tuple with mutable list\ncomplex_tuple = (1, 2, [3, 4])\n```", "```py\nstudent = {\"name\": \"Michael\", \"age\": 22, \"city\": \"Chicago\"}\n```", "```py\nstudent = {\"name\": \"Susan\", \"age\": 23}\n\nprices = {\"milk\": 4.99, \"bread\": 2.89}\n```", "```py\n# Access value by key\nprint(student[\"name\"])\n\n# Add new key-value \nstudent[\"major\"] = \"computer science\"  \n\n# Change value\nstudent[\"age\"] = 25\n\n# Remove key-value\ndel student[\"city\"]\n```", "```py\nscores = {\"Francis\": 95, \"John\": 88, \"Daniel\": 82}\n\n# Add new score\nscores[\"Zoey\"] = 97\n\n# Remove John's score\nscores.pop(\"John\")  \n\n# Get Daniel's score\nprint(scores.get(\"Daniel\"))\n\n# Print all student names \nprint(scores.keys())\n```", "```py\nnumbers = {1, 2, 3, 4}\n```", "```py\nmy_list = [1, 2, 3, 3, 4]\nmy_set = set(my_list) # {1, 2, 3, 4}\n```", "```py\nnumbers.add(5) \n\nnumbers.remove(1)\n```", "```py\nA = {1, 2, 3, 4}\nB = {2, 3, 5, 6}\n\n# Union - combines sets \nprint(A | B) \n\n# Intersection \nprint(A & B)\n\n# Difference  \nprint(A - B)\n\n# Symmetric difference\nprint(A ^ B)\n```", "```py\n# Make a list of person names\nnames = [\"John\", \"Mary\", \"Bob\", \"Mary\", \"Sarah\"]\n\n# Make a tuple of additional information (e.g., email)\nadditional_info = (\"john@example.com\", \"mary@example.com\", \"bob@example.com\", \"mary@example.com\", \"sarah@example.com\")\n\n# Make set to remove duplicates\nunique_names = set(names)\n\n# Make dictionary of name-age pairs\npersons = {}\nfor name in unique_names:\n  persons[name] = random.randint(20,40)\n\nprint(persons)\n```", "```py\n{'John': 34, 'Bob': 29, 'Sarah': 25, 'Mary': 21}\n```"]