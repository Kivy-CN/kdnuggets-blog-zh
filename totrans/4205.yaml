- en: How To Build A Database Using Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2021/09/build-database-using-python.html](https://www.kdnuggets.com/2021/09/build-database-using-python.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Irfan Alghani Khalid](https://www.linkedin.com/in/alghaniirfan/), Computer
    Science Student**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ce52fd46adf211dce1be3d55a04ee65c.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Taylor Vick](https://unsplash.com/@tvick?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/server?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SQLAlchemy is a Python library for implementing SQL databases without using
    the SQL language itself. In other words, all you need to do is to implement your
    database using the Python language.
  prefs: []
  type: TYPE_NORMAL
- en: Flask-SQLAlchemy is a library for connecting the SQLAlchemy library inside your
    Flask project, and it makes your database implementation easier than ever. This
    article will show you how to build your database using the Flask-SQLAlchemy library.
  prefs: []
  type: TYPE_NORMAL
- en: Without further, let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: Database
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before we get into the implementation, let me explain to you about the database.
    What is a database? The database is a collection of data that is integrated by
    each other, where we can access it using our computer.
  prefs: []
  type: TYPE_NORMAL
- en: In data science, you probably will insert and analyze the data in a form like
    a spreadsheet. In the software development field, it’s a bit different. Let’s
    take a look at this spreadsheet.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6e533ae64100beee9b91915fe965f58d.png)'
  prefs: []
  type: TYPE_IMG
- en: The image is captured by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Inside the spreadsheet, we can see there are two columns. There are the book’s
    title and the author’s name. If you look at the author column, you will see that
    some values are repeated several times. This condition we called redundancy.
  prefs: []
  type: TYPE_NORMAL
- en: It’s not a best practice to use the whole dataset as one table, especially for
    those who want to build a website or an app. Instead, we have to separate the
    table, where we called it normalization.
  prefs: []
  type: TYPE_NORMAL
- en: 'In summary, the normalization process will separate the dataset into several
    tables, and each table contains their unique identifier to it. We will call each
    of the identifiers as the primary key. If we separate the dataset above, we will
    have a dataset that looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/50d8ae1eb5820bbc625bca7eae4307c1.png)'
  prefs: []
  type: TYPE_IMG
- en: The image is captured by the author.
  prefs: []
  type: TYPE_NORMAL
- en: As you can see from above, the dataset is already separated into two tables.
    There are the Book table and the Author table. The author’s name is on the Author
    table. Therefore, we cannot access the name directly like what we’ve done on the
    spreadsheet.
  prefs: []
  type: TYPE_NORMAL
- en: To retrieve the author’s name, we must connect the Book table with the Author
    table by taking the id from the author table. We treat the author’s id as the
    foreign key of the Book table.
  prefs: []
  type: TYPE_NORMAL
- en: Maybe it is complicated, but if you start implementing a database for building
    apps, it will improve your app’s performance.
  prefs: []
  type: TYPE_NORMAL
- en: Implementation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Install the library
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Before we get into the implementation, the first thing that we need to do is
    to install the library inside our computer. To install it, we can use pip for
    doing that. Here is the syntax for installing the library:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To load the library, we can call the syntax below:'
  prefs: []
  type: TYPE_NORMAL
- en: As you know from the library’s name, we also need to load the Flask library.
  prefs: []
  type: TYPE_NORMAL
- en: Starting the database engine
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After we load the library, the next step is to set up our SQLAlchemy object
    and the path to our database. By default, SQLAlchemy comes with SQLite software.
  prefs: []
  type: TYPE_NORMAL
- en: 'SQLite is a database management system where we can build and analyze databases
    that we have build. You can use another DBMS, such as MySQL, PostgreSQL, or any
    DBMS that you prefer. To set up our database, Please add these lines of code:'
  prefs: []
  type: TYPE_NORMAL
- en: This code will initialize the Flask and the SQLAlchemy object, and we set a
    parameter that contains the path to our database. In this case, the database path
    is sqlite:///C:\\sqlite\\library.db.
  prefs: []
  type: TYPE_NORMAL
- en: Implement the database
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'After we set up objects and parameters, we can start to implement the database.
    Let’s recall our database tables above:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7b9c4c9111b45a12f0401e85f8eff70b.png)'
  prefs: []
  type: TYPE_IMG
- en: The image is captured by the author.
  prefs: []
  type: TYPE_NORMAL
- en: 'As you can see from above, there are two tables on it. Each table will have
    its class, where we can initialize the column’s name and the relationship between
    tables. We will inherit a class called Model for implementing our tables. Based
    on the figure above, the code looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: Insert the value
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'After we create the class, we can build our database. To build the database,
    you can access your terminal and run this command:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let’s try to insert values on our tables. For this example, let’s input
    the data from the previous spreadsheet above. You can follow this code below for
    inserting values:'
  prefs: []
  type: TYPE_NORMAL
- en: Query the table
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'After you insert values inside the tables, now let’s run the query to see if
    the data exist. Here is the code for doing that:'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see from above, our submission is successful. Well, it’s still an
    introduction, but I hope you can grasp the concept and implement it on a larger
    project.
  prefs: []
  type: TYPE_NORMAL
- en: 'Addition: The SQL Query'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In addition to the Flask-SQLAlchemy library, I will demonstrate to you how
    to access the database using the native SQLite. We do this for making sure that
    our database has already been created on it. For accessing SQLite, you can open
    your terminal and write this script:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'After that, It will show the interface of SQLite like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1d9e8b3434bc88c1343b334ec12dc725.png)'
  prefs: []
  type: TYPE_IMG
- en: The image is captured by the author.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next step, you can open your database by using the .open command and
    add the path to the database like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'To make sure that we have opened the database, please write .tables on the
    terminal like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'And it will generate this result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4875eeee1a17496754dd8de667edd35b.png)'
  prefs: []
  type: TYPE_IMG
- en: The image is captured by the author.
  prefs: []
  type: TYPE_NORMAL
- en: 'Nice, It works. Now let’s try the SQL language for querying our database:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'And here is the result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9b320fb36608d78b40b98eebc96c8044.png)'
  prefs: []
  type: TYPE_IMG
- en: The image is captured by the author.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let’s try to combine both tables as one. You can write this line of code
    on your terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'And here is the result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/89026163943c619d7c977e4804f93a21.png)'
  prefs: []
  type: TYPE_IMG
- en: The image is captured by the author.
  prefs: []
  type: TYPE_NORMAL
- en: Final Remarks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Well done! Now you have implemented your database using the Flask-SQLAlchemy
    library. I hope this article helps you for implementing a database in your projects,
    especially when you want to build a web application using Flask.
  prefs: []
  type: TYPE_NORMAL
- en: In case that you are interested in my article, you can follow me on Medium or
    you can subscribe to my newsletter. Also, if you have any questions or just want
    to say hi, you can follow me on [**LinkedIn**](https://www.linkedin.com/in/alghaniirfan/).
  prefs: []
  type: TYPE_NORMAL
- en: Thank you for reading my article!
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Irfan Alghani Khalid](https://www.linkedin.com/in/alghaniirfan/)**
    is a Computer Science Student @ IPB University, interested in Data Science, Machine
    Learning, and Open Source.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/how-to-build-a-database-using-python-f4b62a19d190).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[How to Build An Image Classifier in Few Lines of Code with Flash](/2021/07/build-image-classifier-in-few-lines-of-code-with-flash.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Easy SQL in Native Python](/2021/09/easy-sql-native-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Query Your Pandas Dataframe](/2021/08/query-pandas-dataframe.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
