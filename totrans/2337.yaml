- en: Confusion Matrix, Precision, and Recall Explained
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 混淆矩阵、精确度和召回率解释
- en: 原文：[https://www.kdnuggets.com/2022/11/confusion-matrix-precision-recall-explained.html](https://www.kdnuggets.com/2022/11/confusion-matrix-precision-recall-explained.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2022/11/confusion-matrix-precision-recall-explained.html](https://www.kdnuggets.com/2022/11/confusion-matrix-precision-recall-explained.html)
- en: '![Confusion Matrix, Precision, and Recall Explained](../Images/3191041ede59abdf48e678202c6b93b3.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![混淆矩阵、精确度和召回率解释](../Images/3191041ede59abdf48e678202c6b93b3.png)'
- en: Image by Editor
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由编辑提供
- en: A confusion matrix is a table used to summarize the performance of a classification
    model.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 混淆矩阵是用于总结分类模型性能的表格。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持组织的 IT 部门'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: In case you aren’t familiar, classification models are machine learning algorithms
    used to solve problems that have a categorical outcome, such as predicting whether
    an email is a spam or not.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不太熟悉，分类模型是用于解决具有分类结果的问题的机器学习算法，例如预测电子邮件是否为垃圾邮件。
- en: '**Accuracy** is the most popular metric used to evaluate classification models.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**准确率**是评估分类模型最常用的指标。'
- en: However, it isn’t always the most reliable, which is why data scientists generate
    **confusion matrices** and use metrics like **precision** and **recall** instead.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，它并不总是最可靠的，这就是为什么数据科学家生成**混淆矩阵**并使用如**精确度**和**召回率**等指标的原因。
- en: Confusion matrices are one of the most frequently tested concepts by data science
    interviewers. Hiring managers often ask candidates to interpret confusion matrices,
    or provide them with a use case and ask them to calculate a model’s precision
    and recall by hand.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 混淆矩阵是数据科学面试中最常测试的概念之一。招聘经理经常要求候选人解释混淆矩阵，或者提供一个用例并要求他们手动计算模型的精确度和召回率。
- en: Due to this, it is important to thoroughly understand how these techniques work
    and when they should be used in place of accuracy.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，彻底了解这些技术如何工作以及何时应使用这些技术来代替准确率是非常重要的。
- en: 'In this article, we will cover the following concepts to solidify your understanding
    of classification metrics:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将涵盖以下概念，以巩固你对分类指标的理解：
- en: The limitations of classification accuracy
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 分类准确率的局限性
- en: What is a confusion matrix, and why is it used?
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是混淆矩阵，为什么要使用它？
- en: How to read a confusion matrix
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何读取混淆矩阵
- en: What are precision and recall, and how do they overcome the limitations of classification
    accuracy?
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是精确度和召回率，它们如何克服分类准确率的局限性？
- en: How to generate a confusion matrix in Python
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何在 Python 中生成混淆矩阵
- en: Limitations of Classification Accuracy
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分类准确率的局限性
- en: 'Let us look at a simple example to understand where classification accuracy
    fails:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个简单的例子来理解分类准确率失败的地方：
- en: '![Confusion Matrix, Precision, and Recall Explained](../Images/7c6fefe7e8cbe00f947ac17fb4589bbe.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![混淆矩阵、精确度和召回率解释](../Images/7c6fefe7e8cbe00f947ac17fb4589bbe.png)'
- en: The table above contains data related to 10 patients. 8 out of 10 patients do
    not have a rare disease, while 2 of them do.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 上表包含与10名患者相关的数据。10名患者中有8名没有罕见疾病，而2名有。
- en: This is an example of an **imbalanced classification problem**.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个**不平衡分类问题**的例子。
- en: If your dataset has skewed proportions, i.e. there is an over-representation
    of one class and an under-representation of another, then the dataset is imbalanced.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的数据集具有不平衡的比例，即一个类别的过度代表和另一个类别的不足代表，那么数据集是不平衡的。
- en: In this case, even if the classification model that you build always predicts
    the majority class, the accuracy will be high.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，即使你构建的分类模型总是预测多数类，准确率也会很高。
- en: 'In this example, if the model always predicts that the patient does not have
    the disease, it will be correct 8 out of 10 times and will have an 80% accuracy:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，如果模型总是预测患者没有疾病，它会在10次中有8次预测正确，准确度为80%：
- en: '![Confusion Matrix, Precision, and Recall Explained](../Images/c2ed76eeaae54bab59e4795643302210.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![混淆矩阵、精确度和召回率解释](../Images/c2ed76eeaae54bab59e4795643302210.png)'
- en: This is a bad model as it always predicts the majority class, but its high accuracy
    can trick us into thinking that the model is performing well.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个糟糕的模型，因为它总是预测多数类别，但其高准确度可能会欺骗我们，让我们认为模型表现良好。
- en: Since accuracy does not always show us the full picture, we can use a confusion
    matrix instead to tell us how well the model is actually performing.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 由于准确度并不总是显示出完整的情况，我们可以使用混淆矩阵来告诉我们模型的实际表现如何。
- en: What is a Confusion Matrix?
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是混淆矩阵？
- en: A confusion matrix summarizes the performance of a classifier and allows us
    to identify details that accuracy does not tell us.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 混淆矩阵总结了分类器的性能，并使我们能够识别准确度无法告诉我们的细节。
- en: 'To better understand how it works, let’s build a confusion matrix based on
    the table above:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解它是如何工作的，让我们基于上表构建一个混淆矩阵：
- en: '![Confusion Matrix, Precision, and Recall Explained](../Images/870e01cf5b86f91a4694511470a6a22f.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![混淆矩阵、精确度和召回率解释](../Images/870e01cf5b86f91a4694511470a6a22f.png)'
- en: 'The above image displays the structure of a confusion matrix. Here is how it
    can be interpreted:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的图显示了混淆矩阵的结构。以下是如何解读它：
- en: The columns represent actual values, and rows represent predictions.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列表示实际值，行表示预测。
- en: If a person actually has a disease and the model accurately predicts that they
    have the disease, then it is called a **true** **positive**.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果一个人实际上有疾病，而模型准确地预测出他们有疾病，那么这称为**真正的** **阳性**。
- en: If a person does not have the disease and the model predicts “no,” then this
    is a **true** **negative**.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果一个人没有疾病而模型预测为“否”，那么这就是**真正的** **阴性**。
- en: 'True positives and true negatives form a diagonal in the confusion matrix.
    We can calculate a model’s accuracy with the following formula:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真阳性和真阴性在混淆矩阵中形成对角线。我们可以用以下公式计算模型的准确度：
- en: '![Confusion Matrix, Precision, and Recall Explained](../Images/dc0ef3a8055a6ad71edaae53c356e54d.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![混淆矩阵、精确度和召回率解释](../Images/dc0ef3a8055a6ad71edaae53c356e54d.png)'
- en: If a person has the disease (yes) but the model predicts “no,” this is a **false
    negative**.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果一个人有疾病（是）但模型预测为“否”，这就是**假阴性**。
- en: Finally, if a person does not have the disease (no) but the model predicts “yes”,
    then this is a **false positive**.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，如果一个人没有疾病（否），但模型预测为“是”，那么这就是**假阳性**。
- en: Now, let’s fill out the confusion matrix based on the disease prediction data.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们根据疾病预测数据填写混淆矩阵。
- en: '![Confusion Matrix, Precision, and Recall Explained](../Images/c2ed76eeaae54bab59e4795643302210.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![混淆矩阵、精确度和召回率解释](../Images/c2ed76eeaae54bab59e4795643302210.png)'
- en: 'Step 1: True Positives'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤1：真阳性
- en: Recall that this means the number of people accurately predicted to have the
    disease. Since the model has predicted “No” for every patient, there are **0 true
    positives** in this dataset.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这表示准确预测为有疾病的人数。由于模型对每位患者的预测都是“没有”，所以数据集中有**0个真阳性**。
- en: 'Step 2: True Negatives'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤2：真阴性
- en: There are 8 patients who do not have the disease, and the model managed to identify
    all of them. So there are **8 true negatives**.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 有8名没有疾病的患者，模型成功识别了他们所有人。所以有**8个真阴性**。
- en: '![Confusion Matrix, Precision, and Recall Explained](../Images/938021662a87d1a62510db6580767620.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![混淆矩阵、精确度和召回率解释](../Images/938021662a87d1a62510db6580767620.png)'
- en: 'Step 3: False Positives'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤3：假阳性
- en: These are the people who do not have the disease, but the model predicted “Yes.”
    Since our model has never predicted “Yes,” there are **0 false positives**.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这些人没有疾病，但模型预测为“是”。由于我们的模型从未预测“是”，所以有**0个假阳性**。
- en: 'Step 4: False Negatives'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤4：假阴性
- en: These are people who do have the disease, but the model predicted “No.” There
    are **2 false negatives** in the dataset.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这些人确实有疾病，但模型预测为“没有”。数据集中有**2个假阴性**。
- en: '![Confusion Matrix, Precision, and Recall Explained](../Images/fa6205492ec172812cc642f61817d590.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![混淆矩阵、精确度和召回率解释](../Images/fa6205492ec172812cc642f61817d590.png)'
- en: Now, although we know that this model has an 80% accuracy, we can tell that
    there is something wrong with it by just looking at its confusion matrix.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，虽然我们知道这个模型的准确度是80%，但通过观察其混淆矩阵，我们可以看出模型存在一些问题。
- en: 'The entire “*Predicted: Yes*” column of the confusion matrix has zeros in it,
    which tells us that the model has not predicted that even one person has the disease.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '混淆矩阵中“*预测: 是*”这一列全是零，这表明模型没有预测出任何一个人有疾病。'
- en: The model is only predicting the majority class “*No”*, indicating that it’s
    doing a poor job at disease classification and must be refined.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 该模型仅预测了多数类“*否*”，表明其在疾病分类方面表现不佳，需要进一步改进。
- en: Precision and Recall
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 精确度和召回率
- en: Now that you understand how a confusion matrix works, let’s dive into two more
    metrics that can be computed from it.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你了解了混淆矩阵的工作原理，让我们深入探讨两个可以从中计算的指标。
- en: Precision and recall are two popular classification metrics that data scientists
    use to optimize model performance. They give us insight into model performance
    that accuracy does not tell us.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 精确度和召回率是数据科学家用来优化模型性能的两个流行分类指标。它们提供了准确率无法告诉我们的模型性能洞察。
- en: Precision
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 精确度
- en: Precision is a metric that tells us about the quality of positive predictions.
    Out of everyone predicted to have the disease, how many of them actually have
    it?
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 精确度是一个指标，用于衡量正面预测的质量。在所有被预测有疾病的人中，有多少人实际上有这种疾病？
- en: 'It is calculated using the following formula:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 计算公式如下：
- en: '![Confusion Matrix, Precision, and Recall Explained](../Images/18680bee59e4a78359b75f0b0c205201.png)![Confusion
    Matrix, Precision, and Recall Explained](../Images/b84268472f0746a193a1353034b37dbe.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![混淆矩阵、精确度和召回率解释](../Images/18680bee59e4a78359b75f0b0c205201.png)![混淆矩阵、精确度和召回率解释](../Images/b84268472f0746a193a1353034b37dbe.png)'
- en: In this case, we only look at the left hand side of the confusion matrix.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们只关注混淆矩阵的左侧。
- en: The number of **true positives** is 0.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**真正阳性**的数量是0。'
- en: All predicted positives include the sum of **true positives** and **false positives**,
    which is also 0.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 所有预测的正面包括**真正阳性**和**虚假阳性**的总和，也为0。
- en: Hence, the model’s precision is 0/0+0 = 0.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，模型的精确度是0/0+0 = 0。
- en: Recall
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 召回率
- en: Recall tells us about how well the model identifies true positives. Out of all
    the patients who have the disease, how many were correctly identified?
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 召回率告诉我们模型识别真正阳性的能力。所有有疾病的患者中，有多少被正确识别？
- en: '![Confusion Matrix, Precision, and Recall Explained](../Images/453b672f985a50e7161da55f25757e9d.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![混淆矩阵、精确度和召回率解释](../Images/453b672f985a50e7161da55f25757e9d.png)'
- en: '![Confusion Matrix, Precision, and Recall Explained](../Images/172006f01c0fe6e56c37087b44dae8ad.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![混淆矩阵、精确度和召回率解释](../Images/172006f01c0fe6e56c37087b44dae8ad.png)'
- en: In this case, the number of true positives is 0\. The number of false negatives
    is 2.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，真正阳性的数量是0。虚假阴性的数量是2。
- en: Hence, the model’s recall is 0/2+0 = 0.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，模型的召回率是0/2+0 = 0。
- en: Notice that both precision and recall are zero in this example. This is because
    the model has no true positives, marking the classifier as useless as it was unable
    to make even one correct positive prediction.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这个例子中精确度和召回率都为零。这是因为模型没有真正阳性，使得分类器无用，因为它无法做出一个正确的正面预测。
- en: What is a “good” classification model?
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是“好的”分类模型？
- en: A good classifier should have high accuracy, precision, and recall.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的分类器应具备高准确率、精确度和召回率。
- en: In some use-cases, data scientists optimize their model to have higher precision
    or recall depending on the scenario.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些用例中，数据科学家会根据场景优化其模型以提高精确度或召回率。
- en: A model with higher recall than precision often makes more positive predictions.
    A model like this comes with higher false positives and low false negatives.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 一种召回率高于精确度的模型通常会做出更多的正面预测。这种模型会带来更多的虚假阳性和较低的虚假阴性。
- en: In scenarios like disease prediction, models should always be optimized for
    recall. False positives are better than false negatives in the healthcare industry.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在疾病预测这类场景中，模型应始终优化召回率。与虚假阴性相比，虚假阳性在医疗行业中更为可接受。
- en: On the other hand, a model with higher precision will have fewer false positives
    and more false negatives. If you were to build a bot detection machine learning
    model for an online store, you may want to optimize for higher precision, since
    banning legitimate users from the website will lead to a decline in sales.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，精确度较高的模型会有较少的虚假阳性和更多的虚假阴性。如果你要为在线商店构建一个机器人检测机器学习模型，你可能会希望优化较高的精确度，因为禁止合法用户访问网站将导致销售下降。
- en: It is important to properly understand this concept, as data science interviewers
    often present use-cases like the ones above and ask candidates whether to optimize
    for precision or recall.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 正确理解这一概念很重要，因为数据科学面试官经常会提出如上所述的使用案例，并询问候选人是否优化精确度还是召回率。
- en: How to Build a Confusion Matrix in Python
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在 Python 中构建混淆矩阵
- en: 'You can run the following lines of code to build a confusion matrix using Scikit-Learn
    in Python:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以运行以下代码行来使用 Python 中的 Scikit-Learn 构建混淆矩阵：
- en: '[PRE0]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**[Natassha Selvaraj](https://www.natasshaselvaraj.com/)** is a self-taught
    data scientist with a passion for writing. You can connect with her on [LinkedIn](https://www.linkedin.com/in/natassha-selvaraj-33430717a/).'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Natassha Selvaraj](https://www.natasshaselvaraj.com/)** 是一位自学成才的数据科学家，热衷于写作。你可以在[LinkedIn](https://www.linkedin.com/in/natassha-selvaraj-33430717a/)上与她联系。'
- en: More On This Topic
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 主题更多信息
- en: '[KDnuggets News, November 16: How LinkedIn Uses Machine Learning •…](https://www.kdnuggets.com/2022/n45.html)'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻，11月16日：LinkedIn 如何使用机器学习 •…](https://www.kdnuggets.com/2022/n45.html)'
- en: '[Idiot''s Guide to Precision, Recall, and Confusion Matrix](https://www.kdnuggets.com/2020/01/guide-precision-recall-confusion-matrix.html)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[精确度、召回率与混淆矩阵的白痴指南](https://www.kdnuggets.com/2020/01/guide-precision-recall-confusion-matrix.html)'
- en: '[Classification Metrics Walkthrough: Logistic Regression with…](https://www.kdnuggets.com/2022/10/classification-metrics-walkthrough-logistic-regression-accuracy-precision-recall-roc.html)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[分类指标教程：逻辑回归与…](https://www.kdnuggets.com/2022/10/classification-metrics-walkthrough-logistic-regression-accuracy-precision-recall-roc.html)'
- en: '[Visualizing Your Confusion Matrix in Scikit-learn](https://www.kdnuggets.com/2022/09/visualizing-confusion-matrix-scikitlearn.html)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Scikit-learn 中可视化混淆矩阵](https://www.kdnuggets.com/2022/09/visualizing-confusion-matrix-scikitlearn.html)'
- en: '[Vector and Matrix Norms with NumPy Linalg Norm](https://www.kdnuggets.com/2023/05/vector-matrix-norms-numpy-linalg-norm.html)'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[NumPy Linalg Norm 中的向量和矩阵范数](https://www.kdnuggets.com/2023/05/vector-matrix-norms-numpy-linalg-norm.html)'
- en: '[Sparse Matrix Representation in Python](https://www.kdnuggets.com/2020/05/sparse-matrix-representation-python.html)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 中的稀疏矩阵表示](https://www.kdnuggets.com/2020/05/sparse-matrix-representation-python.html)'
