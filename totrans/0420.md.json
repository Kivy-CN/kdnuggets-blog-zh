["```py\nimport pandas as pd\nimport numpy as np\nbox_scores['total_score'] = box_scores['assignment1']+box_scores['assignment2']+box_scores['assignment3']\n```", "```py\nimport pandas as pd\nimport numpy as np\nbox_scores['total_score'] = box_scores['assignment1']+box_scores['assignment2']+box_scores['assignment3']\nbox_scores['total_score'].max() - box_scores['total_score'].min()\n```", "```py\nimport pandas as pd\nimport numpy as np\nmerge = pd.merge(customers, orders, left_on=\"id\", right_on=\"cust_id\")\n```", "```py\nimport pandas as pd\nimport numpy as np\nmerge = pd.merge(customers, orders, left_on=\"id\", right_on=\"cust_id\")\nresult = merge.groupby([\"cust_id\", \"first_name\"])[\"total_order_cost\"].min().reset_index()\n```", "```py\nimport pandas as pd\nimport numpy as np\nconditions = billboard_top_100_year_end[(billboard_top_100_year_end['year'] == 2010) & (billboard_top_100_year_end['year_rank'].between(1,10))]\n```", "```py\nimport pandas as pd\nimport numpy as np\nconditions = billboard_top_100_year_end[(billboard_top_100_year_end['year'] == 2010) & (billboard_top_100_year_end['year_rank'].between(1,10))]\nresult = conditions[['year_rank','group_name','song_name']].drop_duplicates()\n```", "```py\nimport pandas as pd\nimport numpy as np\nnum_reviews = airbnb_search_details['number_of_reviews']\n```", "```py\nimport pandas as pd\nimport numpy as np\nnum_reviews = airbnb_search_details['number_of_reviews']\ncondlist = [num_reviews == 0, num_reviews.between(1,5),num_reviews.between(5,15),num_reviews.between(15,40),num_reviews>40]\n```", "```py\nimport pandas as pd\nimport numpy as np\nnum_reviews = airbnb_search_details['number_of_reviews']\ncondlist = [num_reviews == 0, num_reviews.between(1,5),num_reviews.between(5,15),num_reviews.between(15,40),num_reviews>40]\nchoicelist = ['NO','FEW','SOME','MANY','A LOT']\n```", "```py\nimport pandas as pd\nimport numpy as np\nnum_reviews = airbnb_search_details['number_of_reviews']\ncondlist = [num_reviews == 0, num_reviews.between(1,5),num_reviews.between(5,15),num_reviews.between(15,40),num_reviews>40]\nchoicelist = ['NO','FEW','SOME','MANY','A LOT']\nairbnb_search_details['reviews_qualification'] = np.select(condlist,choicelist)\nresult = airbnb_search_details[['reviews_qualification','price']]\n```", "```py\nimport pandas as pd\nfrom datetime import timedelta\nresult = fb_comments_count[(fb_comments_count['created_at'] >= pd.to_datetime('2020-02-10') - timedelta(days=30)) & (\nfb_comments_count['created_at'] <= pd.to_datetime('2020-02-10'))].groupby('user_id')[\n'number_of_comments'].sum().reset_index()\n```"]