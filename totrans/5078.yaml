- en: Integrating Python and R into a Data Analysis Pipeline, Part 1
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2015/10/integrating-python-r-data-analysis-part1.html/2](https://www.kdnuggets.com/2015/10/integrating-python-r-data-analysis-part1.html/2)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Command Line Scripting
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Running scripts from the command line via a Windows/Linux-like terminal environment
    is similar in both R and Python. The command to be run is broken down into the
    following parts,
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: '`<command_to_run> <path_to_script> <any_additional_arguments>`'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: 'where:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '`<command>` is the executable to run (`Rscript` for R code and `Python` for
    Python code),'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<path_to_script>` is the full or relative file path to the script being executed.
    Note that if there are any spaces in the path name, the whole file path must me
    enclosed in double quotes.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<any_additional_arguments>` This is a list of space delimited arguments parsed
    to the script itself. Note that these will be passed in as strings.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'So for example, an R script is executed by opening up a terminal environment
    and running the following:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: '`Rscript path/to/myscript.R arg1 arg2 arg3`'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '**A Few Gotchas**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: For the commands `Rscript` and `Python` to be found, these executables must
    already be on your path. Otherwise the full path to their location on your file
    system must be supplied.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Path names with spaces create problems, especially on Windows, and so must be
    enclosed in double quotes so they are recognised as a single file path.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accessing Command Line Arguments in R
  id: totrans-14
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In the above example where `arg1`, `arg2` and `arg3` are the arguments parsed
    to the R script being executed, these are accessible using the `commandArgs` function.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: '`## myscript.R`'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '`# Fetch command line arguments myArgs <- commandArgs(trailingOnly = TRUE)`'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '`# myArgs is a character vector of all arguments print(myArgs) print(class(myArgs))`'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: By setting `trailingOnly = TRUE`, the vector `myArgs` only contains arguments
    that you added on the command line. If left as `FALSE` (by default), there will
    be other arguments included in the vector, such as the path to the script that
    was just executed.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: Accessing Command Line Arguments in Python
  id: totrans-20
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: For a Python script executed by running the following on the command line
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '`python path/to/myscript.py arg1 arg2 arg3`'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: the arguments `arg1`, `arg2` and `arg3` can be accessed from within the Python
    script by first importing the `sys` module. This module holds parameters and functions
    that are system specific, however we are only interested here in the `argv` attribute.
    This `argv` attribute is a list of all the arguments passed to the script currently
    being executed. The first element in this list is always the full file path to
    the script being executed.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '`# myscript.py import sys`'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '`# Fetch command line arguments my_args = sys.argv`'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '`# my_args is a list where the first element is the file executed. print(type(my_args))
    print(my_args)`'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: If you only wished to keep the arguments parsed into the script, you can use
    list slicing to select all but the first element.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '`# Using a slice, selects all but the first element my_args = sys.argv[1:]`'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`# 使用切片，选择除第一个元素之外的所有元素 my_args = sys.argv[1:]`'
- en: As with the above example for R, recall that all arguments are parsed in as
    strings, and so will need converting to the expected types as necessary.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 与上述R的例子类似，记住所有参数都作为字符串解析，因此需要根据需要转换为预期的类型。
- en: Writing Outputs to a File
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将输出写入文件
- en: You have a few options when sharing data between R and Python via an intermediate
    file. In general for flat files, CSVs are a good format for tabular data, while
    JSON or YAML are best if you are dealing with more unstructured data (or metadata),
    which could contain a variable number of fields or more nested data structures.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在通过中间文件在R和Python之间共享数据时，你有几种选择。通常，对于平面文件，CSV是一种适合表格数据的好格式，而JSON或YAML则更适合处理结构化较少的数据（或元数据），这些数据可能包含可变数量的字段或更多嵌套的数据结构。
- en: 'All these are very common [data serialisation formats](https://en.wikipedia.org/wiki/Serialization),
    and parsers already exist in both languages. In R the following packages are recommended
    for each format:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都是非常常见的 [数据序列化格式](https://en.wikipedia.org/wiki/Serialization)，并且两种语言中都已有解析器。在R中，推荐使用以下包来处理每种格式：
- en: '[readr](https://cran.r-project.org/web/packages/readr/index.html) for CSV files'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[readr](https://cran.r-project.org/web/packages/readr/index.html) 用于CSV文件'
- en: '[jsonlite](https://cran.r-project.org/web/packages/jsonlite/index.html) for
    JSON files'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[jsonlite](https://cran.r-project.org/web/packages/jsonlite/index.html) 用于JSON文件'
- en: '[yaml](http://cran.fhcrc.org/web/packages/yaml/index.html) for YAML files'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[yaml](http://cran.fhcrc.org/web/packages/yaml/index.html) 用于YAML文件'
- en: 'And in Python:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 而在Python中：
- en: '[csv](https://docs.Python.org/3/library/csv.html) for CSV files'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[csv](https://docs.Python.org/3/library/csv.html) 用于CSV文件'
- en: '[json](https://docs.Python.org/3/library/json.html) for JSON files'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[json](https://docs.Python.org/3/library/json.html) 用于JSON文件'
- en: '[PyYAML](http://pyyaml.org/wiki/PyYAMLDocumentation) for YAML files'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyYAML](http://pyyaml.org/wiki/PyYAMLDocumentation) 用于YAML文件'
- en: The csv and json modules are part of the Python standard library, distributed
    with Python itself, whereas PyYAML will need installing separately. All R packages
    will also need installing in the usual way.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: csv和json模块是Python标准库的一部分，随Python本身分发，而PyYAML需要单独安装。所有R包也需要以通常的方式安装。
- en: Summary
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结
- en: 'So passing data between R and Python (and vice-versa) can be done in a single
    pipeline by:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在R和Python之间（以及反向）传递数据可以通过以下单一管道完成：
- en: using the command line to transfer arguments, and
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用命令行传递参数，以及
- en: transferring data through a commonly-structured flat file.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过结构化一致的平面文件传输数据。
- en: However, in some instances, having to use a flat file as an intermediate data
    store can be both cumbersome and detrimental to performance. In the next post,
    we will look at how R and Python can directly call each other and return the output
    in memory.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在某些情况下，使用平面文件作为中间数据存储既麻烦又对性能有害。在下一篇文章中，我们将探讨如何让R和Python直接调用对方并在内存中返回输出。
- en: '[Original](http://www.mango-solutions.com/wp/2015/10/integrating-python-and-r-into-a-data-analysis-pipeline-part-1/).'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](http://www.mango-solutions.com/wp/2015/10/integrating-python-and-r-into-a-data-analysis-pipeline-part-1/)。'
- en: '**Related:**'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[R vs Python: head to head data analysis](/2015/10/r-vs-python-data-analysis.html)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[R与Python：面对面的数据分析](/2015/10/r-vs-python-data-analysis.html)'
- en: '[Data Science Programming: Python vs R](/2015/10/data-science-programming-python-vs-r.html)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学编程：Python与R的对比](/2015/10/data-science-programming-python-vs-r.html)'
- en: '[R vs Python for Data Science: The Winner is …](/2015/05/r-vs-python-data-science.html)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[R与Python的数据科学：赢家是……](/2015/05/r-vs-python-data-science.html)'
- en: '[R, Python users show surprising stability, but strong regional differences](/2015/07/poll-primary-analytics-language-r-python.html)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[R，Python用户表现出令人惊讶的稳定性，但存在显著的区域差异](/2015/07/poll-primary-analytics-language-r-python.html)'
- en: '* * *'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速通道进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析水平'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT'
- en: '* * *'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Integrating ChatGPT Into Data Science Workflows: Tips and Best Practices](https://www.kdnuggets.com/2023/05/integrating-chatgpt-data-science-workflows-tips-best-practices.html)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将 ChatGPT 集成到数据科学工作流：技巧与最佳实践](https://www.kdnuggets.com/2023/05/integrating-chatgpt-data-science-workflows-tips-best-practices.html)'
- en: '[Cutting Down Implementation Time by Integrating Jupyter and KNIME](https://www.kdnuggets.com/2021/12/cutting-implementation-time-integrating-jupyter-knime.html)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通过集成 Jupyter 和 KNIME 减少实施时间](https://www.kdnuggets.com/2021/12/cutting-implementation-time-integrating-jupyter-knime.html)'
- en: '[Optimizing Data Analytics: Integrating GitHub Copilot in Databricks](https://www.kdnuggets.com/optimizing-data-analytics-integrating-github-copilot-in-databricks)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[优化数据分析：在 Databricks 中集成 GitHub Copilot](https://www.kdnuggets.com/optimizing-data-analytics-integrating-github-copilot-in-databricks)'
- en: '[Integrating Generative AI in Content Creation](https://www.kdnuggets.com/integrating-generative-ai-in-content-creation)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将生成式 AI 集成到内容创作中](https://www.kdnuggets.com/integrating-generative-ai-in-content-creation)'
- en: '[Monitor Model Performance in the MLOps Pipeline with Python](https://www.kdnuggets.com/2023/05/monitor-model-performance-mlops-pipeline-python.html)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 监控 MLOps 管道中的模型性能](https://www.kdnuggets.com/2023/05/monitor-model-performance-mlops-pipeline-python.html)'
- en: '[Building a Formula 1 Streaming Data Pipeline With Kafka and Risingwave](https://www.kdnuggets.com/building-a-formula-1-streaming-data-pipeline-with-kafka-and-risingwave)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Kafka 和 Risingwave 构建 Formula 1 实时数据管道](https://www.kdnuggets.com/building-a-formula-1-streaming-data-pipeline-with-kafka-and-risingwave)'
