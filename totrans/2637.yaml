- en: Support Vector Machine for Hand Written Alphabet Recognition in R
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2021/01/support-vector-machine-hand-written-alphabet-r.html](https://www.kdnuggets.com/2021/01/support-vector-machine-hand-written-alphabet-r.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Mohan Rai](https://www.linkedin.com/in/mohan-rai-83499924/), Director
    at Simple & Real Analytics**'
  prefs: []
  type: TYPE_NORMAL
- en: The objective of writing this article is to use very crude approach of doing
    image classification, in this case images of hand written text. While we use Convolutional
    Neural Network models from scratch or use pre trained model on MNIST data sets,
    its more preconditioned for this job. We use transfer learning and in that process
    as a student myself, I miss out on the very basics. Its like I am driving a automatic
    car, wherein I know what the drivetrain, the clutch, the accelerator and brakes
    do, but I don’t know anything beyond these. We attempt to break down a problem
    of hand written alphabet image recognition into a simple process rather than using
    heavy packages. This is an attempt to create the data and then build a model using
    Support Vector Machines for Classification.
  prefs: []
  type: TYPE_NORMAL
- en: Preparing the Data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We are going to manually prepare the data rather then download if from the web.
    This would allow us to understand our data from an initial stage. We are going
    to write a few alphabets manually on a white sheet and take images from our camera
    phone. We would then port it to our hard drive. Since its an experiment wherein,
    I don’t want to spend a lot of time in the initial run, I would create data for
    may be two or three distinct alphabets for demonstration. Its recommended that
    you try this mechanism for all the alphabets and see the efficiency. You may need
    to modify your code when you add more class of alphabets, but that’s where the
    learning part will start. We are right now just in the training phase.
  prefs: []
  type: TYPE_NORMAL
- en: Structure of data storage
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We can either write the alphabets on white paper and then extract it using a
    phone camera or directly use a graphics tool like paint to write using the pen
    tool. I have created two folders train and test. In the train folder we can save
    folders with alphabet name while in the test folder we can dump the images for
    which we want to finally classify the instances. The training sub folders have
    been kept with an intention to have the sub folder name as the training tags.
    The Testing folder has not been kept in the same form as here we intend to do
    the classification.
  prefs: []
  type: TYPE_NORMAL
- en: '[![](../Images/d62488d42fefce1dbbc5833562a889ee.png)](/wp-content/uploads/svm-hand-written-r-data-strucutre.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Alternatively if you want to download the data which I have used, right click
    on this [download data](http://www.imurgence.com//uploads/thumbnails/sample_data/alphabet_folder.zip) link
    and open in new tab or window. Then unzip the folders and you should be able to
    see the same structure and data as above in your downloads folder.
  prefs: []
  type: TYPE_NORMAL
- en: Later you should create your own data and do the whole process again. This would
    give exposure to the complete cycle.
  prefs: []
  type: TYPE_NORMAL
- en: Download the Dependency Packages in RStudio
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We will be using the jpeg package in R for Image handling and the Support vector
    machine implementation from kernlab package. This would be a one time install.
    Also we have made sure the image data has dimension’s of 200 x 200 pixels, with
    a horizontal and vertical resolution of 120dpi. You can try variations in the
    color channels and resolution later once you have implemented it in the current
    form.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Loading the training data set
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Feature engineering
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Since our intention is to not use typical CNN aprroach we are going to use the
    white, grey and black pixel values for new feature creation. We intend to use
    the summation of all the pixel values of a image instance and save it in a feature
    called as “sum”, the count of all pixels evaluating to zero as “zero”, the count
    of all pixels evaluating to “ones” and the sum of all pixels evaluating to values
    other than zero’s and one’s as “in_between”. The “label” feature is extracted
    from the folder name.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Build the Support Vector Machine model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Loading the testing data set
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: I would encourage you to learn concepts of Support Vector Machine which couldn’t
    be explored completely in this article by clicking on this link for my [free Data
    Science and Machine Learning video courses](https://www.imurgence.com/home/courses).
    While we have used the kernlab package and created the classifier, there is a
    lot of mathematics involved starting from vector space to kernel tricks. We have
    worked on the implementation of the classifier but you should certainly learn
    the conceptual part of Support Vector Machine and other interesting algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Mohan Rai](https://www.linkedin.com/in/mohan-rai-83499924/)** is Director
    at Simple & Real Analytics responsible for Analytics Deliverable''s of Clients
    for the Consulting Division. Simple & Real Analytics is into Analytics Consulting
    and Product Development, Machine Learning and Big Data Solutions for Enterprise.
    Simple & Real Analytics has clients in the Financial, Life Sciences, Logistics,Data
    Acquisition, Market Research, Manufacturing and Banking Domain. Along with this,
    Mohan works as contributor for his edtech startup [Imurgence](https://www.imurgence.com/).
    He provides advisory services to a few other companies.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://datascienceplus.com/support-vector-machine-for-hand-written-alphabet-recognition/).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[A Top Machine Learning Algorithm Explained: Support Vector Machines (SVM)](/2020/03/machine-learning-algorithm-svm-explained.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Simple & Intuitive Ensemble Learning in R](/2020/12/simple-intuitive-meta-learning-r.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Friendly Introduction to Support Vector Machines](/2019/09/friendly-introduction-support-vector-machines.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[90% of Today''s Code is Written to Prevent Failure, and That''s a Problem](https://www.kdnuggets.com/2022/07/90-today-code-written-prevent-failure-problem.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Support Vector Machines: An Intuitive Approach](https://www.kdnuggets.com/2022/08/support-vector-machines-intuitive-approach.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Gentle Introduction to Support Vector Machines](https://www.kdnuggets.com/2023/07/gentle-introduction-support-vector-machines.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How Semantic Vector Search Transforms Customer Support Interactions](https://www.kdnuggets.com/how-semantic-vector-search-transforms-customer-support-interactions)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python Vector Databases and Vector Indexes: Architecting LLM Apps](https://www.kdnuggets.com/2023/08/python-vector-databases-vector-indexes-architecting-llm-apps.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Transfer Learning for Image Recognition and Natural Language Processing](https://www.kdnuggets.com/2022/01/transfer-learning-image-recognition-natural-language-processing.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
