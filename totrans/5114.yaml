- en: The Essential Guide to SQL’s Execution Order
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/the-essential-guide-to-sql-execution-order](https://www.kdnuggets.com/the-essential-guide-to-sql-execution-order)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![The Essential Guide to SQL’s Execution Order](../Images/4df5e29a889174c6f93c2c6175d256c5.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: SQL has become a must-have language for any data professional.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Most of us use SQL in our daily work, and after writing many queries, we all
    get our own style and have our habits, both good and bad.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: SQL is usually learned by use, and in most cases, people do not usually understand
    the logic behind it.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: This is why, today, we're diving into the intriguing world of SQL’s execution
    order, where the sequence of events can sometimes feel like a puzzle.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: So, let's fine-tune our understanding with a spotlight on the most common SQL
    query structure.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: SQL as a declarative language
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first thing to understand is that SQL is a declarative programming language,
    which means that we specify the desired result but not what steps are required
    to achieve it.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: This is quite the opposite of procedural languages, which define each step that
    needs to be performed to achieve our desired output.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: But what does this mean?
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: It means that SQL requires commands to be coded in a certain syntax. Yet the
    order in which we write these commands doesn't mirror the order in which SQL processes
    them.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: 'Typically, a query unfolds with a structure like this:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '![The Essential Guide to SQL’s Execution Order](../Images/6d28ace4db36e78dc8c55fa7dfa3a4c1.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: Even though a person would read and code, following the previous structure,
    when considering how this code is executed, the order changes completely.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '![The Essential Guide to SQL’s Execution Order](../Images/b9b1c383746d8f1b61b4d20f393ef3a7.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: For instance, though written as the first command, the SELECT clause isn’t evaluated
    until almost the end.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: Visual representation of the execution order
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To further understand this execution order, let’s go step by step and see what
    SQL does with every command we code.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '![The Essential Guide to SQL’s Execution Order](../Images/9d01702d7b4b51c9139f78b82c78cce4.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: Step 1 - FROM and JOIN
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The journey of a SQL query begins with the FROM clause, which points to the
    data's origin. While straightforward queries might tap into just one table, the
    data we seek frequently is contained across several tables.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: SQL 查询的旅程始于 FROM 子句，它指向数据的来源。虽然简单查询可能只涉及一个表，但我们所需的数据通常分布在多个表中。
- en: That's where the JOIN command steps in, hand in hand with FROM, to merge together
    the data strands.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这时，JOIN 命令与 FROM 一起，介入数据的合并工作。
- en: This pairing always takes the lead, setting the stage by pinpointing the data
    that will play a role in our query.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这一配对总是引领开场，通过明确数据的角色来设定查询的基础。
- en: Step 2 - WHERE
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第2步 - WHERE
- en: Following the initial selection, the WHERE clause takes center stage.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在初步选择后，WHERE 子句成为焦点。
- en: Its primary role is to sift through the foundational table or the merged output
    from the join, ensuring only the rows that satisfy a specific condition are kept.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 它的主要作用是筛选基础表或连接操作后的合并结果，确保只保留满足特定条件的行。
- en: Step 3 - GROUP BY
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第3步 - GROUP BY
- en: The GROUP BY clause steps in to orchestrate the data, arranging it into clusters
    according to the values in one or more columns. This enables us to perform aggregations
    or summaries.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: GROUP BY 子句介入以组织数据，将其按一个或多个列中的值分组。这使我们能够执行聚合或汇总。
- en: Consider it the maestro of data, reducing the multitude of variables to a singular
    value for each unique element or combination of elements.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 把它看作数据的指挥家，将众多变量减少为每个唯一元素或元素组合的单一值。
- en: This clause is the core command behind data aggregation, setting the stage for
    summary performances with functions like COUNT(), SUM(), MIN() and MAX() among
    others.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这个子句是数据聚合的核心命令，为使用如 COUNT()、SUM()、MIN() 和 MAX() 等函数进行汇总表演奠定了基础。
- en: Step 4 - HAVING
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第4步 - HAVING
- en: The HAVING clause comes into play as a discerning filter, eliminating those
    groupings that fail to meet the set criteria.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: HAVING 子句作为筛选器，去除那些未能满足设定标准的分组。
- en: Imagine it as a gatekeeper, ensuring that only the groups that align with our
    aggregate conditions are allowed to proceed. It steps in after the GROUP BY clause
    has done its part, allowing us to apply filters on the now aggregated data.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 想象它作为一个守门员，确保只有符合我们聚合条件的分组被允许继续。它在 GROUP BY 子句完成后介入，使我们能够对现在的聚合数据应用过滤器。
- en: At this juncture, the database is already aware of the computed aggregations,
    which means we can use these aggregated values in subsequent statements.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，数据库已经知道计算后的聚合结果，这意味着我们可以在后续的语句中使用这些聚合值。
- en: 'To address the common misconception of why the WHERE clause can’t call aggregated
    variables while HAVE can:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 解决 WHERE 子句为何不能调用聚合变量而 HAVING 子句可以的问题：
- en: It's because WHERE takes the stage before the GROUP BY clause, at a time when
    individual data points haven't yet been compiled into groups. On the other hand,
    HAVING takes place when the GROUP BY has already been computed.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为 WHERE 在 GROUP BY 子句之前出现，那时单个数据点尚未被编组。而 HAVING 则在 GROUP BY 已经计算完成后进行。
- en: Step 5 - SELECT
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第5步 - SELECT
- en: The SELECT clause defines the columns we want to keep in our table, along with
    any grouped or aggregated fields - that have been computed during the execution
    process.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: SELECT 子句定义了我们希望在表中保留的列，以及在执行过程中计算出的任何分组或聚合字段。
- en: Here, we can apply column aliases using the AS operator.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以使用 AS 运算符应用列别名。
- en: The SELECT command is usually used together with the DISTINCT, which allows
    us to discard any row with duplicate values in all columns marked as DISTINCT.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: SELECT 命令通常与 DISTINCT 一起使用，这样可以丢弃所有标记为 DISTINCT 的列中具有重复值的行。
- en: Step 6 - ORDER BY
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第6步 - ORDER BY
- en: With the foundational tasks completed, the ORDER BY clause steps in, orchestrating
    the sorted presentation of values in either ascending (ASC) or descending (DESC)
    order.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在基础任务完成后，ORDER BY 子句介入，安排值的排序展示，按升序 (ASC) 或降序 (DESC) 排列。
- en: Picture this as the final act in our query.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 想象这作为查询的最终阶段。
- en: We've gathered the data from our source tables, refined it with filters, crafted
    meaningful groups and summaries, and pinpointed the columns to showcase in our
    final output.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从源表中收集了数据，通过过滤器进行精炼，创建了有意义的分组和汇总，并确定了在最终输出中展示的列。
- en: Step 7 - LIMIT
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第7步 - LIMIT
- en: Finally, the LIMIT clause helps define the number of rows we want back.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，LIMIT 子句帮助定义我们希望返回的行数。
- en: It is particularly useful when dealing with large tables, especially during
    the development and testing stages.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理大型表格时尤其有用，特别是在开发和测试阶段。
- en: Why is this important?
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么这很重要？
- en: Understanding the sequence of SQL's execution order might seem trivial at the
    outset, especially when queries are yielding the correct results.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 理解 SQL 的执行顺序一开始可能显得微不足道，特别是当查询结果正确时。
- en: Why fuss over the mechanics if the engine runs fine, right?
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果引擎运行良好，为什么要过分纠结于机制呢？
- en: Yet, for those diving into the deeper waters of complex queries, knowledge of
    this order isn't just useful—it's crucial.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，对于那些深入复杂查询的研究者来说，了解这种顺序不仅有用——而且至关重要。
- en: 'Without this insight, troubleshooting becomes a maze of confusion, with errors
    lurking like all around. For adept debugging and smoother query crafting, a solid
    grasp of how SQL processes its clauses is indispensable. Two common mistakes are:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 没有这种洞察力，故障排除就会变成一片混乱，错误像四处潜伏的陷阱。为了熟练调试和更顺利地编写查询，掌握 SQL 如何处理其子句至关重要。两个常见的错误是：
- en: Mistake 1
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 错误 1
- en: A typical pitfall in SQL is the attempt to filter aggregated data using the
    WHERE clause—a misstep that leads to an error.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: SQL 中的一个常见陷阱是尝试使用 WHERE 子句来过滤聚合数据，这是一个会导致错误的误步骤。
- en: '![The Essential Guide to SQL’s Execution Order](../Images/25dce99fe8a7428141cb87ba177a2a81.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![SQL 执行顺序的基本指南](../Images/25dce99fe8a7428141cb87ba177a2a81.png)'
- en: Image by Author
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: As we have already seen throughout this article, the WHERE clause is computed
    before the GROUP BY one, therefore, we cannot use aggregated values during the
    WHERE step.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在本文中所见，WHERE 子句是在 GROUP BY 子句之前计算的，因此，我们不能在 WHERE 步骤中使用聚合值。
- en: Mistake 2
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 错误 2
- en: Referencing column aliases of aggregated values that have not been set yet.
    In this case, we cannot use an alias that has been defined in the very same SELECT,
    as the computation phase is the same.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 引用尚未设置的聚合值的列别名。在这种情况下，我们不能使用在同一 SELECT 中定义的别名，因为计算阶段是相同的。
- en: Therefore, SQL is not aware of this new alias yet.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，SQL 目前还不知晓这个新别名。
- en: '![The Essential Guide to SQL’s Execution Order](../Images/61a6fb9fcbd7723510f8140106e01ae1.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![SQL 执行顺序的基本指南](../Images/61a6fb9fcbd7723510f8140106e01ae1.png)'
- en: Image by Author
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Final Conclusions
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最终结论
- en: Understanding SQL's execution order is crucial for data professionals to craft
    effective, efficient queries.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 理解 SQL 的执行顺序对数据专业人士编写有效、高效的查询至关重要。
- en: This insight allows one to anticipate query behavior, especially in complex
    datasets.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这种洞察力使我们能够预测查询行为，特别是在复杂数据集的情况下。
- en: Mastering SQL involves moving beyond syntax and embracing its logic for strategic
    data manipulation.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 精通 SQL 不仅涉及语法，还需要掌握其逻辑以进行战略性数据操作。
- en: The journey we have performed together, from the FROM clause to LIMIT, is a
    strategic blueprint for data handling and shaping information to fit specific
    needs.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们一起经历的旅程，从 FROM 子句到 LIMIT，是处理数据和将信息塑造成特定需求的战略蓝图。
- en: Hope next time you are coding SQL, you keep this execution order in mind!
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 希望下次你编写 SQL 代码时，能记住这一执行顺序！
- en: '**[](https://www.linkedin.com/in/josep-ferrer-sanchez/)**[Josep Ferrer](https://www.linkedin.com/in/josep-ferrer-sanchez)****
    is an analytics engineer from Barcelona. He graduated in physics engineering and
    is currently working in the data science field applied to human mobility. He is
    a part-time content creator focused on data science and technology. Josep writes
    on all things AI, covering the application of the ongoing explosion in the field.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**[](https://www.linkedin.com/in/josep-ferrer-sanchez/)**[Josep Ferrer](https://www.linkedin.com/in/josep-ferrer-sanchez)****
    是一位来自巴塞罗那的分析工程师。他毕业于物理工程专业，目前从事应用于人类流动性的数据显示科学工作。他还是一名兼职内容创作者，专注于数据科学和技术。Josep
    涵盖了 AI 领域的所有内容，关注领域中的持续爆炸性应用。'
- en: More On This Topic
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[3 Tools to Track and Visualize the Execution of Your Python Code](https://www.kdnuggets.com/2021/12/3-tools-track-visualize-execution-python-code.html)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[跟踪和可视化 Python 代码执行的 3 个工具](https://www.kdnuggets.com/2021/12/3-tools-track-visualize-execution-python-code.html)'
- en: '[KDnuggets™ News 22:n01, Jan 5: 3 Tools to Track and Visualize…](https://www.kdnuggets.com/2022/n01.html)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets™ 新闻 22:n01, 1 月 5 日: 3 个工具跟踪和可视化…](https://www.kdnuggets.com/2022/n01.html)'
- en: '[10 Essential SQL Commands for Data Science](https://www.kdnuggets.com/2022/10/10-essential-sql-commands-data-science.html)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学的 10 个基本 SQL 命令](https://www.kdnuggets.com/2022/10/10-essential-sql-commands-data-science.html)'
- en: '[Boost Your Data Science Skills: The Essential SQL Certifications You Need](https://www.kdnuggets.com/boost-your-data-science-skills-the-essential-sql-certifications-you-need)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Essential Machine Learning Algorithms: A Beginner''s Guide](https://www.kdnuggets.com/2021/05/essential-machine-learning-algorithms-beginners.html)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Data Scientist’s Essential Guide to Exploratory Data Analysis](https://www.kdnuggets.com/2023/06/data-scientist-essential-guide-exploratory-data-analysis.html)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
