["```py\nSELECT * FROM customer;\n```", "```py\nSELECT customer_id, \n       age, \n       country \nFROM customer;\n```", "```py\nSELECT DISTINCT segment \nFROM customer;\n```", "```py\nSELECT segment\nFROM customer\nGROUP BY segment;\n```", "```py\nCREATE OR REPLACE FUNCTION sum_ages_with_loop() RETURNS TABLE (country_name TEXT, sum_age INTEGER) AS $$\nDECLARE\n    country_record RECORD;\n    age_sum INTEGER;\nBEGIN\n    FOR country_record IN SELECT DISTINCT country FROM customer WHERE segment = 'Corporate'\n    LOOP\n        SELECT SUM(age) INTO age_sum FROM customer WHERE country = country_record.country AND segment = 'Corporate';\n        country_name := country_record.country;\n        sum_age := age_sum;\n        RETURN NEXT;\n    END LOOP;\nEND;\n$$ LANGUAGE plpgsql;\n```", "```py\nSELECT * \nFROM sum_ages_with_loop()\n```", "```py\nSELECT country, \n       SUM(age) AS sum_age\nFROM customer\nWHERE segment = 'Corporate'\nGROUP BY country;\n```", "```py\nSELECT customer_name\nFROM customer\nWHERE RIGHT(customer_name, 3) = 'son';\n```", "```py\nSELECT customer_name\nFROM customer\nWHERE customer_name LIKE '%son';\n```", "```py\nSELECT *\nFROM customer\n```", "```py\nSELECT *\nFROM customer\nLIMIT 10;\n```", "```py\nSELECT customer_id, \n       customer_name\nFROM customer\nWHERE segment = 'Corporate';\n```", "```py\nCREATE INDEX idx_segment ON customer (segment);\n```", "```py\nSELECT customer_id, \n       customer_name\nFROM customer WITH (INDEX(idx_segment))\nWHERE segment = 'Corporate';\n```"]