- en: 'Graph Machine Learning Meets UX: An uncharted love affair'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/01/graph-machine-learning-ux.html](https://www.kdnuggets.com/2020/01/graph-machine-learning-ux.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Nhung Nguyen](https://www.linkedin.com/in/nhungnguyenux/), CSIRO Data61**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/2d085cd8f893ac55e29d40aaead456f3.png)'
  prefs: []
  type: TYPE_IMG
- en: Designed using resources from Freepik.com and The Noun Project
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: I am a User Experience (UX) designer. Folks like me look into all aspects of
    the end-user’s interaction with a company, its services, its product. What drives
    us is designing meaningful products that are intuitive, meet user needs, and delight.
  prefs: []
  type: TYPE_NORMAL
- en: While I have these drivers, I’m certainly not playing in a space well-paved
    by other UX designers.
  prefs: []
  type: TYPE_NORMAL
- en: Day to day I work with a bunch of incredible humans who build [machine learning
    algorithms](https://github.com/stellargraph/stellargraph) for [large-scale graph
    networks](https://www.stellargraph.io/?gclid=CjwKCAjw-vjqBRA6EiwAe8TCk5nRIrvVnZ8tVTBEvbmBE9mtrWJGfKf2C14miBHtD9QziXe-nuf7ohoCwFAQAvD_BwE).
    We’re also building a [visualisation tool](https://www.stellargraph.io/visualisation) so
    people can* see* the hidden insights from these models and make data-informed
    decisions in often high-risk scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: For me, it’s fast, exciting, fascinating, uncharted, *difficult.* A steep learning
    curve? Absolutely. But compounding that, I’ve found very few case studies of other
    UX designers working with machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: For others like me who may be equally as bedazzled by this rapidly emerging
    technology, and just as drawn to its budding relationship with UX; this article
    is for you!
  prefs: []
  type: TYPE_NORMAL
- en: We’ll first explore what machine learning on graphs is, then build an end-to-end
    story to define the users, their relationships, and their different needs. I’ll
    also share three key challenges I faced in the task of designing visualisation
    solutions for graph machine learning, but how returning to UX design 101 resulted
    in an accessible, purposeful outcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**Building the scenario**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I quickly discovered that once you learn about graphs, you’ll start to see them
    everywhere. Many real-world datasets can be naturally represented as networks
    or graphs, with nodes representing entities and links representing relationships
    or interactions between them.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/b9224d6ff6155c136318f3790ed252f1.png)'
  prefs: []
  type: TYPE_IMG
- en: My work — represented as a graph
  prefs: []
  type: TYPE_NORMAL
- en: As for managing the vast, ever-increasing amount of connected data being generated
    in this data-driven age, this is when machine learning comes into play. Machine
    learning on graphs can draw powerful insights from connected data, like predicting
    relationships between entities that are missing from the data or resolving unknown
    entities across different networks (read [‘Knowing Your Neighbours; Machine Learning
    on Graphs’ ](https://medium.com/stellargraph/knowing-your-neighbours-machine-learning-on-graphs-9b7c3d0d5896)to
    delve deeper).
  prefs: []
  type: TYPE_NORMAL
- en: '[**Knowing Your Neighbours: Machine Learning on Graphs**](https://medium.com/stellargraph/knowing-your-neighbours-machine-learning-on-graphs-9b7c3d0d5896)'
  prefs: []
  type: TYPE_NORMAL
- en: We live in a deeply connected world. Graph Machine Learning provides Data Scientists
    with the tools to extract insights…
  prefs: []
  type: TYPE_NORMAL
- en: My job as a UX designer is to question what problems our users can solve with
    graph machine learning. Graphs have proven to be well suited to crime investigation,
    and the potential of using machine learning on graphs for investigative analytics
    in law enforcement is immense. The trouble is, understandable security restrictions
    in this domain make access to data impossible.
  prefs: []
  type: TYPE_NORMAL
- en: In the absence of data, it’s difficult to develop a tool that can analyse or
    visualise it. When products are developed by technology first, they risk failing
    to deliver on what the user actually needs. It can also be difficult for teams
    to establish a meaningful direction, ending up with something like this: *“Let’s
    cater for all types of tasks, data and scenarios…!”*
  prefs: []
  type: TYPE_NORMAL
- en: In mapping our product we ended up with a long list of features on a roadmap,
    which is a great start. But we needed something to connect these features in a
    meaningful way to demonstrate the ***value*** of the product and help us prioritise.
    We needed to build a scenario.
  prefs: []
  type: TYPE_NORMAL
- en: By scenario, I mean an end-to-end story of users with a data challenge, how
    they might use our machine learning on graph algorithms to solve that challenge,
    and how they could then use the visualisation tool to leverage further insight.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d830ba803328c3931a098507db2c7d70.png)'
  prefs: []
  type: TYPE_IMG
- en: We found an open source [Twitter dataset](https://www.kaggle.com/manoelribeiro/hateful-users-on-twitter) containing
    100k users, and 20m tweets. A small portion of the dataset had users labelled
    as ‘hateful’ or ‘normal’ (not hateful). (Read ‘[Characterizing and Detecting Hateful
    Users on Twitter](https://arxiv.org/pdf/1803.08977.pdf)’ for more detail about
    how these labels were created, and an explanation of labelled versus non-labelled
    data for supervised and unsupervised machine learning approaches).
  prefs: []
  type: TYPE_NORMAL
- en: We asked ourselves: *Could machine learning on graphs be used to predict ‘hateful’
    users in online social networks?*
  prefs: []
  type: TYPE_NORMAL
- en: We used the profiles already labelled as hateful or normal as training data
    for the machine learning models before running our algorithms on the dataset.
    The results were promising, demonstrating that the model could indeed predict
    hateful Twitter users (see [‘Can graph machine learning identify hate speech in
    social media networks?’](https://medium.com/stellargraph/can-graph-machine-learning-identify-hate-speech-in-online-social-networks-58e3b80c9f7e) for
    the full case study).
  prefs: []
  type: TYPE_NORMAL
- en: '[**Can graph machine learning identify hate speech in online social networks?**](https://medium.com/stellargraph/can-graph-machine-learning-identify-hate-speech-in-online-social-networks-58e3b80c9f7e)'
  prefs: []
  type: TYPE_NORMAL
- en: A use-case study for Twitter users and the power of machine learning and graph
    neural networks to detect hateful online…
  prefs: []
  type: TYPE_NORMAL
- en: 'As well as this, I had user research from the law enforcement domain outlining
    two distinct user types: the data scientist, and the intelligence analyst. I also
    had mapping of how they work together, and the problems they encounter when working
    with data.'
  prefs: []
  type: TYPE_NORMAL
- en: Combined, this information gave me the base ingredients to build a scenario
    around the features.
  prefs: []
  type: TYPE_NORMAL
- en: '***| The first challenge *|**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Ian and Dan**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The first player in my scenario was Ian, an intelligence analyst, whose job
    is to watch social media and other public data sources to flag hateful behaviours
    and assess risks. This manual process means scrolling through a long list of feeds,
    every day, looking for hateful language or hashtags.
  prefs: []
  type: TYPE_NORMAL
- en: Manual labelling is labour-intensive. Say it takes just five minutes to manually
    check whether a user is hateful or not hateful, then labelling 100K users (equivalent
    to our Twitter dataset) would take just shy of 12 months for one person working
    24/7\. Additionally, new [research](https://science.sciencemag.org/content/359/6380/1146) shows
    there’s a correlation between retweets and the spread of online extremism.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/be167f482804b601e60dc1c1f2f3bda8.png)'
  prefs: []
  type: TYPE_IMG
- en: Characters ‘borrowed’ from Scott McCloud’s [Google Chrome’s Comic](http://www.scottmccloud.com/googlechrome/)
  prefs: []
  type: TYPE_NORMAL
- en: So, I paired Ian with Dan; a data scientist specialised in machine learning
    on graphs. In my scenario, Dan plans to use an algorithm that uses the retweet
    network to infer whether a user is likely to be hateful or not across the remaining
    portion of data that is unlabelled. This will produce a shortlist of suspects
    for Ian to further investigate which he can filter by characteristics of the data
    or the confidence of the label, for example.
  prefs: []
  type: TYPE_NORMAL
- en: Now the story started coming together. There’s a context, user types, the problems
    they’re trying to solve, insight on how graph and machine learning might be useful,
    an idea of how the users might approach the problem, and the intended outcome.
  prefs: []
  type: TYPE_NORMAL
- en: When it came to user testing our tools, this storyboard acted as a context snapshot
    which was effective especially for participants not familiar with machine learning
    process and terminology. I also return frequently to the storyboard as a basis
    for my design to explore ideas, concepts and validation of a fleshed-out feature.
    What would Ian need to do at that step? What are the subsequent steps Dan might
    take?
  prefs: []
  type: TYPE_NORMAL
- en: This links nicely to the second challenge I faced.
  prefs: []
  type: TYPE_NORMAL
- en: '***| The second challenge |***'
  prefs: []
  type: TYPE_NORMAL
- en: '**Untangling the hairball**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The side-effect of working on something very new like designing a user interface
    for machine learning technology is that there is little, or nothing, to copy or
    iterate from.
  prefs: []
  type: TYPE_NORMAL
- en: 'Take the example of a basic graph interaction: expanding the ‘neighbourhood’
    of a node (or entity). As the name suggests, this is when we look at which other
    entities connect to the chosen entity in a graph.'
  prefs: []
  type: TYPE_NORMAL
- en: It sounds simple enough. But, imagine there are hundreds of entities, or thousands,
    or millions? Things escalate pretty quickly and soon enough; you have one big
    hairball.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8f9681634500f3171aa226ea93f6912a.png)'
  prefs: []
  type: TYPE_IMG
- en: That’s why we need intuitive, meaningful ways to interact with graphs so users
    get what they need at the time.
  prefs: []
  type: TYPE_NORMAL
- en: Here’s where I confess that usually when I’m designing an interaction, I explore
    the solutions of the designers before me. To defend myself and perhaps other UX
    designers, it’s not out of laziness or pure plagiarism, nor an unwillingness to
    be creative. We have this heuristic in interaction design: [*“Recognition is better
    than recall*](https://www.nngroup.com/articles/recognition-and-recall/)*”. *If
    there’s a convention, or a well-used pattern that works, use it rather than reinventing
    the wheel and forcing the user to learn a new way of doing things.
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to graph interaction, there’s little to go from.
  prefs: []
  type: TYPE_NORMAL
- en: I went back to my scenario to see what Ian the intelligence analyst might need
    to see from a busy network. Now that he can see the full Twitter dataset and the
    machine learning predictions on our visualisation tool, he might have identified
    a new, potentially hateful Twitter handle he wants to investigate.
  prefs: []
  type: TYPE_NORMAL
- en: Ian can use our tool to surface the user node (i.e. the owner of the hateful
    Twitter handle), and add it to the graph.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/358c98779cefce4e930022eb04dd6617.png)'
  prefs: []
  type: TYPE_IMG
- en: He won’t see all of the node’s connections yet, because this would likely be
    complicated and crowded. But if he hovers over the node, he can see a number appear
    which correlates to the number of neighbours connected to that node.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5783b2f9392e3ca63f11f014e6b7adcf.png)'
  prefs: []
  type: TYPE_IMG
- en: He can then double-click on that node to expand the network and see its neighbourhood.
  prefs: []
  type: TYPE_NORMAL
- en: Because our tool is smart, and doesn’t want to crowd Ian with information, it
    will ask which neighbours he’s looking for in the neighbourhood based on different
    attributes in the dataset.
  prefs: []
  type: TYPE_NORMAL
- en: In Ian’s case, he might only be interested in the neighbour nodes that have
    been predicted as hateful, and have been retweeting a particular white supremacist
    hashtag. This will reduce the network to a smaller one that’s easier to digest.
  prefs: []
  type: TYPE_NORMAL
- en: When we actually implemented this with the Twitter dataset, I could see that
    sometimes the neighbours were connected to each other too. The hairball grew.
  prefs: []
  type: TYPE_NORMAL
- en: To untangle the mess, I made the assumption that the user cares mostly about
    the relationships the neighbours have with the central root node, so I asked the
    engineers to bring these links forward, and make them a darker colour. We took
    this to usability testing to see if users could easily distinguish a node’s network,
    while keeping in context the connections between its neighbours.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/fff64c24a526f221d602b48037a2c10a.png)'
  prefs: []
  type: TYPE_IMG
- en: The StellarGraph visualisation user interface
  prefs: []
  type: TYPE_NORMAL
- en: This took me right back to UX design 101\. When you have to design something
    new from scratch;
  prefs: []
  type: TYPE_NORMAL
- en: Try to understand the **intent** of the interaction and where it fits in the
    full story of where your user needs to get to.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Embrace the power of **stories** and use cases to develop that feature.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ask for **feedback**, test with real data, and iterate.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It’s not a new technique, but it’s important and comforting to know that the
    foundation skills we have as designers are useful in unknown territories.
  prefs: []
  type: TYPE_NORMAL
- en: 'Following this method, I got the hang of designing different graph interactions.
    But there’s a third and even bigger challenge: how can we *visualise *machine
    learning results?'
  prefs: []
  type: TYPE_NORMAL
- en: '***| The third challenge *|**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Seeing is believing**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I only got to see machine learning in action when I started working on the [StellarGraph](https://www.stellargraph.io/) project.
    Think Jupyter notebooks, Python commands, lots of programming and maths. I’m lucky
    to have a team of patient and generous data scientists to ask questions of, but
    this is a benefit the end users of our tools may not have.
  prefs: []
  type: TYPE_NORMAL
- en: 'That’s why our team strives for three principles when displaying machine learning
    results:'
  prefs: []
  type: TYPE_NORMAL
- en: Results need to be **accessible** for users with different levels of technical
    understanding (like Dan the intelligence analyst) without the need for programming
    language. This means differentiating between machine learning predictions, and
    human-labelled data.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Analysts need to be able to understand or **interpret** the predictions (to
    explore this, read ‘[Looking behind the curtain: saliency maps for graph machine
    learning’](https://medium.com/stellargraph/https-medium-com-stellargraph-saliency-maps-for-graph-machine-learning-5cca536974da).)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Most importantly, clear explanations or guidance is provided so analysts can
    decide whether the results are **trustworthy** and can confidently use predicted
    data in their work.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: While we have come a long way on our design journey, we still have a way to
    go in mastering these principles. By continuing our research of existing literature,
    frameworks and guidelines — and most importantly, our users — we hope not only
    to build on these guiding principles but better understand how we can support
    increasing trust in machine learning results.
  prefs: []
  type: TYPE_NORMAL
- en: For now, let’s return to our scenario. We have a subset of 5k Twitter users
    labelled by humans as either hateful, or normal (not hateful). These human-labelled
    users represent our ‘ground truth’ — what we know for certain — while our model
    will *predict* labels for the remaining users.
  prefs: []
  type: TYPE_NORMAL
- en: 'Knowing whether a user is hateful or not is of great value to Ian the intelligence
    analyst. Accordingly, we applied this as the attribute to define the style of
    the node from a visualisation point of view. For example, you can see differentiated
    below both human-labelled nodes, and predicted ones:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/3e2169e1175c71e5c1b38bac4eff2947.png)'
  prefs: []
  type: TYPE_IMG
- en: '*The human-labelled nodes are formed with solid colour to suggest certainty,
    while outlines are used to represent the machine learning model’s predictions.
    Same-shades are used to suggest equivalent value; i.e. pink = normal, purple =
    hateful.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'This approach was validated by our data scientists, but we needed to incorporate
    two other elements:'
  prefs: []
  type: TYPE_NORMAL
- en: Display the predictions the machine learning model made on the human-labelled
    nodes in the test set to serve as an accuracy measure.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Apply colours that better align with natural human associations; i.e. red =
    bad, green = good.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the third iteration, we refined the design to accommodate all these requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/cbb8452a2ec3de256096898a8780a7b2.png)'
  prefs: []
  type: TYPE_IMG
- en: The ground truth is represented by a shape or icon, while the machine learning
    model prediction is represented as a halo on the node. The colours also follow
    the convention of; red = hateful, green = normal, and grey = unknown.
  prefs: []
  type: TYPE_NORMAL
- en: 'To find out if the result was as intuitive as we hoped, we needed to do more
    user testing. From 11 participants, 10 found the visual styling intuitive. The
    eleventh participant saw something like the screen below right:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/8b7896953a70fa4e174cc5dd6fb4b070.png)'
  prefs: []
  type: TYPE_IMG
- en: A version of StellarGraph’s visualisation interface on the left, with CoBlis
    — a colour blindness simulation tool — applied to the right.
  prefs: []
  type: TYPE_NORMAL
- en: Colour blindness affects one in ten males, and this is not something to be ignored.
    We needed to use things other than colours to help users distinguish the different
    predictions, and settled on using a combination of colours *and* *patterns* to
    convey the prediction layers. By introducing patterns, we could enable people
    with colour blindness to distinguish the different predictions. Accessibility
    is very important to us.
  prefs: []
  type: TYPE_NORMAL
- en: But we also learned that while our visualisation solutions were working well
    for *this* dataset, as soon as we’d load up something different, the icons, colours
    and patterns would no longer make sense. We needed to develop a default set of
    styling that could work for any dataset, while still managing to attach meaning
    to the attributes.
  prefs: []
  type: TYPE_NORMAL
- en: So, we created a visual key which defines the attributes that each icon represents
    in ground truth, as well as what each pattern means for the predictive attributes.
  prefs: []
  type: TYPE_NORMAL
- en: Et, voila. We have a visualisation system that is flexible enough to accommodate
    different user requirements, but also different organisational needs. I can thank
    Ian and Dan for that.
  prefs: []
  type: TYPE_NORMAL
- en: '**A harmonious union**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Going by the morsels of information that *are *available, it seems there’s a
    chasm between machine learning and UX folk. Machine learning might bling as a
    tech hype for UX designers, while data scientists may be unaware of, or question
    the value of our profession. But the two disciplines may just be a match made
    in heaven.
  prefs: []
  type: TYPE_NORMAL
- en: Machine learning has proven to augment and improve user experience (think recommender
    algorithms like Netflix or Spotify) and personally I find it helpful and fascinating
    to understand the basic concepts under the hood. But the power of storytelling
    and user testing in shaping machine learning models is a game-changer, because
    it delivers ***usable, meaningful applications*** for end-users.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9e855518eadfd3d6dae5a6c787dd7398.png)'
  prefs: []
  type: TYPE_IMG
- en: It’s only the start of our UX-machine learning journey, and big challenges remain
    to be explored. How can we build trust in machine learning results? How might
    we visualise other graph machine learning outcomes like link prediction, entity
    resolution and pattern detection?
  prefs: []
  type: TYPE_NORMAL
- en: If these questions fascinate you as much as they do me, follow this channel
    for upcoming instalments.
  prefs: []
  type: TYPE_NORMAL
- en: '*This work is supported by CSIRO’s Data61, Australia’s leading digital research
    network.*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/66d01b723b3591cc7bfabf81589c6486.png)'
  prefs: []
  type: TYPE_IMG
- en: '*Special thanks to my wonderfully patient and talented editor *[*Leda Kalleske*](https://medium.com/u/5bf006f8910?source=post_page-----cdbf09edbc78----------------------)* who
    helped me shape this article.*'
  prefs: []
  type: TYPE_NORMAL
- en: '**References**'
  prefs: []
  type: TYPE_NORMAL
- en: Memory Recognition and Recall in User Interfaces [https://www.nngroup.com/articles/recognition-and-recall/](https://www.nngroup.com/articles/recognition-and-recall/)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Bio: [Nhung Nguyen](https://www.linkedin.com/in/nhungnguyenux/)** is a UX
    designer at CSIRO’s Data61, working on the StellarGraph project to develop machine
    learning on graph technology. Nhung is fascinated by data visualisation solutions,
    as well as observing and learning from the users of machine learning technology.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://medium.com/stellargraph/graph-machine-learning-and-ux-cdbf09edbc78).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[UX Design Guide for Data Scientists and AI Products](/2018/08/ux-design-guide-data-scientists-ai-products.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Scalable graph machine learning: a mountain we can climb?](/2019/12/scalable-graph-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Vega-Lite: A grammar of interactive graphics](/2019/12/vega-lite-grammar-interactive-graphics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Feature Selection: Where Science Meets Art](https://www.kdnuggets.com/2021/12/feature-selection-science-meets-art.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Retrieval Augmented Generation: Where Information Retrieval Meets…](https://www.kdnuggets.com/retrieval-augmented-generation-where-information-retrieval-meets-text-generation)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Comprehensive Survey on Trustworthy Graph Neural Networks:…](https://www.kdnuggets.com/2022/05/comprehensive-survey-trustworthy-graph-neural-networks-privacy-robustness-fairness-explainability.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Make Amazing Visualizations with Python Graph Gallery](https://www.kdnuggets.com/2022/12/make-amazing-visualizations-python-graph-gallery.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Use Graph Theory to Scout Soccer](https://www.kdnuggets.com/2022/11/graph-theory-scout-soccer.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Build a Real-Time Recommendation Engine Using Graph Databases](https://www.kdnuggets.com/2023/08/build-realtime-recommendation-engine-graph-databases.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
