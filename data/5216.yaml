- en: Top Handy SQL Features for Data Scientists
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据科学家必备的顶级 SQL 功能
- en: 原文：[https://www.kdnuggets.com/2019/08/top-handy-sql-feature-data-scientist.html](https://www.kdnuggets.com/2019/08/top-handy-sql-feature-data-scientist.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/08/top-handy-sql-feature-data-scientist.html](https://www.kdnuggets.com/2019/08/top-handy-sql-feature-data-scientist.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](#comments)'
- en: '**By [Saurabh Hooda](https://www.linkedin.com/in/hoodasaurabh/), Hackr.io**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Saurabh Hooda](https://www.linkedin.com/in/hoodasaurabh/)，Hackr.io**'
- en: '![Figure](../Images/7b90faf67d8c5a9b93c5838add6004a0.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/7b90faf67d8c5a9b93c5838add6004a0.png)'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: SQL is to data science as nature is to life. Without preserving nature, there
    is no possibility of life. Without preserving the knowledge of SQL, there would
    be no data science.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: SQL 对数据科学的意义就像自然对生命的重要性一样。没有自然的保护，就没有生命的可能性。没有 SQL 知识的保护，就没有数据科学。
- en: Even though NoSQL databases and programming languages like R and Python do the
    job extremely well, whenever we hear "data," the first thing that comes to mind
    is SQL! Python does have excellent libraries that help data scientists – check
    the top [Data Science Python Libraries here](https://hackr.io/blog/top-data-science-python-libraries)
    – but SQL is still the preferred mode of handling data.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 NoSQL 数据库和像 R 和 Python 这样的编程语言表现非常出色，但每当我们听到“数据”时，首先想到的还是 SQL！Python 确实有优秀的库帮助数据科学家
    —— 查看顶级 [数据科学 Python 库](https://hackr.io/blog/top-data-science-python-libraries)
    —— 但 SQL 仍然是处理数据的首选方式。
- en: '*Why?*'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*为什么？*'
- en: SQL (Structured Query Language) has been around for a long time and is a very
    comfortable programming language for many developers. SQL comes with easy and
    quick to learn features to organize and retrieve data, as well as perform actions
    on it in order to gain useful insights. You can read some of the commonly asked
    [SQL interview questions](https://hackr.io/blog/top-sql-interview-questions) here
    to get a basic idea of what you should know about SQL. It is also efficient and
    close to the data.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: SQL（结构化查询语言）存在已久，对于许多开发者来说，是一种非常舒适的编程语言。SQL 拥有易于学习的功能，用于组织和检索数据，并对数据执行操作以获得有用的见解。你可以阅读一些常见的
    [SQL 面试问题](https://hackr.io/blog/top-sql-interview-questions)，以获取关于 SQL 的基本了解。它也是高效且接近数据的。
- en: If you have no idea about databases and haven’t worked with any you should start
    with the basics. Start by reading about DBMS (Database Management Systems) normalization,
    which will help you understand why a structure is important for easy analysis
    of data.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对数据库一无所知且从未使用过，应该从基础开始。首先阅读关于 DBMS（数据库管理系统）规范化的内容，这将帮助你理解结构对数据分析的重要性。
- en: If you are into web development, you know that data is fetched from the backend
    (database) and presented to the front-end (UI). In the same way, data is entered
    by the user into the database. Visit Squareboat to know how we can help you with
    [web development](https://squareboat.com/services/web-development).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从事网页开发，你知道数据是从后端（数据库）获取并呈现在前端（UI）。同样，数据是由用户输入到数据库中的。访问 Squareboat 了解我们如何帮助你进行
    [网页开发](https://squareboat.com/services/web-development)。
- en: That said, let us now focus on the top handy features of SQL that should be
    on a Data Scientist’s fingertips.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，让我们现在关注数据科学家应该掌握的 SQL 顶级实用功能。
- en: '**1\. Select statement**'
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**1\. 选择语句**'
- en: As a data scientist, you will be selecting (reading) a lot of data from different
    tables to get patterns, statistics and other important information. The basic
    select query
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 作为数据科学家，你将从不同的表中选择（读取）大量数据，以获取模式、统计信息和其他重要信息。基本的选择查询
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: could return a lot of records. In the real world, databases have millions of
    records, and if there are multiple columns in a table you will be overwhelmed
    with the magnitude of results. You can select only the columns you need.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 可能返回大量记录。在现实世界中，数据库有数百万条记录，如果一个表中有多个列，你会被结果的数量压倒。你可以只选择你需要的列。
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: For example, if you want to know the name and age of all registered students,
    you can query the database as –
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你想知道所有注册学生的姓名和年龄，你可以这样查询数据库 –
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**2\. Grouping and sorting functions (Ranking and top n analysis)**'
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**2\. 分组和排序函数（排名和 top n 分析）**'
- en: Most of the time, you would want to work on a subset of data that you are interested
    in. For example, if you want to know the number of teenagers who use your product,
    you can do that easily with a where clause.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数时候，你会想要处理你感兴趣的数据子集。例如，如果你想知道使用你产品的青少年数量，你可以通过 where 子句轻松实现。
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the same way, you can group the students based on their age. The below query
    will get you the number of students (count) from each branch/department.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，你可以根据年龄对学生进行分组。下面的查询将为你提供每个分支/部门的学生数量（计数）。
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Let us say you want to know which department has the most/least students. You
    would simply use the order by clause to do that.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你想知道哪个部门的学生最多或最少。你只需使用 order by 子句即可实现。
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now, if we only want to know about those departments where at least 10 students
    use our product, what should we do?
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们只想了解那些至少有 10 名学生使用我们产品的部门，我们应该怎么做？
- en: We can use ‘having’ clause, which is similar to ‘where’ clause but works on
    a group of data.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 ‘having’ 子句，它类似于 ‘where’ 子句，但作用于数据组。
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Getting such limited number of records from a huge data set is called top-n
    analysis. Some real-life examples could be – top 2 students who scored the highest
    marks, top 10 Facebook users who spend most time browsing, top 3 products that
    were sold by a company, top 5 employees of the month, least 3 performers of the
    month and so on. For example –
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 从一个庞大的数据集中获取这样的有限数量记录称为 top-n 分析。一些现实生活中的例子包括：得分最高的前 2 名学生、花费最多时间浏览的前 10 名 Facebook
    用户、公司销售的前 3 种产品、每月的前 5 名员工、每月表现最差的 3 名等。例如 –
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The first select statement (inline view) gets all records ordered by total_marks,
    while the 2^(nd) one gets only the first two (n) top records.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个 select 语句（内联视图）获取按 total_marks 排序的所有记录，而第 2 个语句仅获取前两个（n）顶级记录。
- en: Very easily, we have obtained data to a minute filtration level, without scanning
    or searching extensively for it. We can do a lot of such filtering to further
    satisfy more and more conditions.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们很容易在不进行广泛扫描或搜索的情况下获得数据到精确的过滤级别。我们可以进行很多这样的过滤，以进一步满足更多条件。
- en: '**3\. String functions (text mining)**'
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**3\. 字符串函数（文本挖掘）**'
- en: There are many useful string functions in SQL just like we have in programming
    languages. You can avoid writing lines of code when such features are available
    in the DBMS itself, because it is faster. Some common string functions are –
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: SQL 中有许多有用的字符串函数，就像我们在编程语言中一样。当数据库管理系统本身提供这些功能时，你可以避免编写大量代码，因为它更快。一些常见的字符串函数包括
    –
- en: '*1\. upper and lower*'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '*1\. upper 和 lower*'
- en: To convert the entire string to upper or lower case, we can use this function.
    This can come in handy when we want something to be printed in a respective case.
    For example, if we want a student's first name to be prints in all caps, we can
    use upper function –
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 要将整个字符串转换为大写或小写，我们可以使用此函数。这在我们希望以特定大小写打印内容时非常有用。例如，如果我们希望学生的名字全大写，我们可以使用 upper
    函数 –
- en: '[PRE8]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '*2\. replace*'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '*2\. replace*'
- en: If we have to replace one or more characters with another, we can use this function.
    For example, let us say we need to get the list of mobile numbers without dashes
    in between. The value database is 1-832-234-1098 and we want to replace all the
    hyphens with spaces.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们需要将一个或多个字符替换为另一个字符，可以使用此函数。例如，假设我们需要获取没有中划线的手机号码列表。数据库中的值是 1-832-234-1098，我们想将所有连字符替换为空格。
- en: '[PRE9]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This will present the value as 1 832 234 1098.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这将以 1 832 234 1098 的形式呈现值。
- en: '*3\. concat*'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '*3\. concat*'
- en: Joins two or more different columns or strings to give result as one. For example,
    if you want to display full name as first name plus last name, concat can be used.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 将两个或多个不同的列或字符串连接成一个结果。例如，如果你想显示全名作为名加姓，可以使用 concat。
- en: '[PRE10]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '*4\. substring*'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '*4\. substring*'
- en: Just like in a programming language, SQL substring gets certain characters from
    a string. For example, if the exam table has hall_ticket_no (example 00019812345)
    wherein we only want the last few characters, we can write the query as –
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在编程语言中一样，SQL的子字符串功能从字符串中提取特定的字符。例如，如果考试表有一个hall_ticket_no（例如00019812345），而我们只想要最后几个字符，我们可以将查询写成
    –
- en: '[PRE11]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: There are two more variations of substring, left and right, that get the left
    few or right few characters accordingly. In our above example, we can use the
    RIGHT function as well.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 子字符串还有两个变体，左侧和右侧，分别获取左侧或右侧的几个字符。在我们上面的例子中，我们也可以使用RIGHT函数。
- en: '*5\. len*'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '*5\. len*'
- en: Gets the number of characters in a string. For example –
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 获取字符串中的字符数。例如 –
- en: '[PRE12]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This will show only those profiles which have shorter descriptions.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这将只显示那些描述较短的个人资料。
- en: '*6\. ltrim, rtrim*'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '*6\. ltrim, rtrim*'
- en: ltrim and rtrim remove the leading and trailing spaces respectively from a string.
    Sometimes database entries are with a lot of spaces at the beginning or end –
    it may be that the user entered it, or a program padded the spaces; we don’t know.
    If you wish to trim those and present the data, use these functions. Example –
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: ltrim和rtrim分别去除字符串的前导和尾随空格。有时数据库条目在开头或结尾有很多空格——可能是用户输入的，或者是程序填充的空格；我们不知道。如果你希望修剪这些空格并展示数据，可以使用这些函数。示例
    –
- en: '[PRE13]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: To remove leading and trailing spaces, you can use –
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 要去除前导和尾随空格，你可以使用 –
- en: '[PRE14]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '**4\. Date functions**'
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**4\. 日期函数**'
- en: Handling dates is slightly complex but SQL does this with ease.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 处理日期稍显复杂，但SQL可以轻松处理。
- en: There are many functions like
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多函数，如
- en: '**DATEADD** – add one year to an existing date'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DATEADD** – 在现有日期上增加一年'
- en: '**TO_DATE** – converts a string into a date'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**TO_DATE** – 将字符串转换为日期'
- en: '**DATEDIFF** – find the difference between the 2 given dates'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DATEDIFF** – 计算两个给定日期之间的差异'
- en: '**DATEPART** – get a particular part of the date; for example, year, month
    or date'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DATEPART** – 获取日期的特定部分；例如，年份、月份或日期'
- en: '**DAY** – get the day of the month for the given date'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DAY** – 获取给定日期的日期'
- en: '**CURRENT_TIMESTAMP** – get the date and time (timestamp)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CURRENT_TIMESTAMP** – 获取日期和时间（时间戳）'
- en: All the above are quite useful to analyze various types of data. For example,
    you can use DATEDIFF to get data from a particular range of time, or use the DAY
    function to find out on what days most students take leave and so on.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 上述所有内容对于分析各种类型的数据都非常有用。例如，你可以使用DATEDIFF来获取特定时间范围内的数据，或者使用DAY函数来找出大多数学生请假的日期，等等。
- en: '**5\. Aggregations (Statistical functions)**'
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**5\. 聚合（统计函数）**'
- en: Aggregate functions allow us to find the sum (SUM), average(AVG), minimum(MIN),
    maximum(MAX) and count(COUNT) values from a set of data. We use these functions
    with group by and having clauses. For example, if we want to know what is the
    average percentage of marks that the students of each department have collectively,
    we can use the AVG function.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合函数允许我们从一组数据中找到总和（SUM）、平均值（AVG）、最小值（MIN）、最大值（MAX）和计数（COUNT）。我们使用这些函数与group
    by和having子句。例如，如果我们想知道每个部门的学生集体的平均分数百分比，我们可以使用AVG函数。
- en: '[PRE15]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: In the same way, to get the number of students in a particular deptt, we can
    use count.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，要获取特定部门的学生数量，我们可以使用count。
- en: '[PRE16]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 6\. Joins
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6\. 连接
- en: Often you will want to collate data from multiple tables and get only those
    columns that are matching some condition or pattern. For getting data from two
    or more tables, we use SQL joins.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你会想从多个表中整理数据，并仅获取符合某些条件或模式的列。为了从两个或更多表中获取数据，我们使用SQL连接。
- en: 7\. Regular expressions
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 7\. 正则表达式
- en: It is very useful to know about regex. For example, if you want to validate
    a phone number, credit card or any numeric values that match a certain sequence,
    use regex.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 了解正则表达式非常有用。例如，如果你想验证电话号码、信用卡或任何符合某种模式的数字值，可以使用正则表达式。
- en: For example, if you want to get phone numbers that start with a number (and
    not a bracket or any other character), you can use –
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你想获取以数字开头的电话号码（而不是括号或其他字符），你可以使用 –
- en: '[PRE17]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: You can do the same using any programming language like JavaScript, but it is
    simpler and less time consuming than executing code. Regular expressions can also
    be used to find a specific pattern in any columns of a table. For example, if
    you want to get the name of students that contains ‘ya’, you can do so by using
    the LIKE clause.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用任何编程语言，如JavaScript，来完成相同的操作，但它比执行代码更简单、更节省时间。正则表达式也可以用来查找表中某列的特定模式。例如，如果你想获取包含“ya”的学生姓名，你可以使用LIKE子句。
- en: '[PRE18]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '**8\. Loading and copying data into database**'
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**8\. 加载和复制数据到数据库**'
- en: If you have loads of data in Excel or .csv format and you want to copy all of
    it into a DBMS, SQL can do that for you.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有大量的数据在 Excel 或 .csv 格式中，并且你想将这些数据全部复制到 DBMS 中，SQL 可以为你完成这项工作。
- en: You can use COPY FROM to copy data from a file to the database. Same way to
    copy data from database to file, use COPY INTO command.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 `COPY FROM` 将数据从文件复制到数据库。同样地，要将数据从数据库复制到文件，可以使用 `COPY INTO` 命令。
- en: '**9\. Data bucketing**'
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**9\. 数据分桶**'
- en: As we saw earlier, using group by helps us to get sets of data so that we can
    find trends and deduce business opportunities by analyzing it. Bucketing is the
    term used to find those groupings (most of the time with timestamps and numbers)
    and to generate histograms. This reduces human observation errors. For example,
    using the truncate function, we can get the nearest round off value for a decimal.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前看到的，使用 `group by` 可以帮助我们获得数据集，以便我们可以通过分析找到趋势和推断业务机会。分桶是用于查找这些分组（大多数情况下是时间戳和数字）并生成直方图的术语。这减少了人工观察错误。例如，通过使用
    `truncate` 函数，我们可以获得一个小数的最接近的四舍五入值。
- en: '[PRE19]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: In the same way, date_trunc is used to group dates together. This could be useful
    in tracking user activities over a period of time. For example, the activities
    of the students in an online learning portal over a specific date interval, for
    example, weekdays and weekends.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，`date_trunc` 用于将日期分组在一起。这在跟踪用户在一段时间内的活动时可能很有用。例如，跟踪在线学习门户中学生在特定日期区间的活动，例如工作日和周末。
- en: Read more about Data bucketing [here](https://en.wikipedia.org/wiki/Data_binning).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 了解更多关于数据分桶的信息，请[点击这里](https://en.wikipedia.org/wiki/Data_binning)。
- en: '**10\. Sequencing**'
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**10\. 排序**'
- en: Using SQL sequences, we can generate a numeric sequence on demand in ascending
    or descending order. Sequences can be created using create sequence <sequence_name>
    by giving necessary details. Sequences are not associated with any tables, hence
    it is useful to retrieve table values using a sequence directly, if there is one.
    Calling ‘next value’ function retrieves the next row instead of selecting from
    the table.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 SQL 序列，我们可以按需生成一个升序或降序的数字序列。可以通过提供必要的细节使用 `create sequence <sequence_name>`
    来创建序列。序列不与任何表关联，因此在需要时直接使用序列来检索表值是有用的。调用 `next value` 函数可以检索下一行，而不是从表中选择。
- en: '**The final word**'
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**最终总结**'
- en: If you haven’t yet had hands-on experience with SQL, you should try [these](https://hackr.io/tutorials/learn-sql)
    tutorials. As a data scientist, you may not be using all the powerful features
    of SQL. However, once you start playing with the data, you would definitely enjoy
    digging more. The above list should help you get through the features you will
    be expected to use as a data scientist. Do visit [this link](https://hackr.io/blog/data-science-interview-questions)
    to read about all the important data science interview questions and to start
    building your dream career.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有实际操作过 SQL，你应该尝试[这些](https://hackr.io/tutorials/learn-sql)教程。作为一名数据科学家，你可能不会使用
    SQL 的所有强大功能。然而，一旦你开始操作数据，你肯定会喜欢深入挖掘。上述列表应该可以帮助你了解作为数据科学家预期使用的功能。请访问[这个链接](https://hackr.io/blog/data-science-interview-questions)阅读所有重要的数据科学面试问题，并开始打造你的梦想职业。
- en: '**Bio: [Saurabh Hooda](https://www.linkedin.com/in/hoodasaurabh/)** has worked
    globally for telecom and finance giants in various capacities. After working for
    a decade in Infosys and Sapient, he started his first startup, Leno, to solve
    a hyperlocal book-sharing problem. He is interested in product marketing, and
    analytics. His latest venture [Hackr.io](https://hackr.io/) recommends the best
    [Data Science tutorial](https://hackr.io/tutorials/learn-data-science) and online
    programming courses for every programming language. All the tutorials are submitted
    and voted by the programming community.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介: [Saurabh Hooda](https://www.linkedin.com/in/hoodasaurabh/)** 曾在全球范围内为电信和金融巨头工作。在
    Infosys 和 Sapient 工作了十年后，他创办了自己的第一个创业公司 Leno，旨在解决超本地的书籍共享问题。他对产品营销和分析感兴趣。他的最新项目
    [Hackr.io](https://hackr.io/) 推荐了每种编程语言的最佳 [数据科学教程](https://hackr.io/tutorials/learn-data-science)
    和在线编程课程。所有教程由编程社区提交并投票。'
- en: '**Related:**'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关:**'
- en: '[Is SQL needed to be a data scientist?](/2019/07/sql-needed-data-scientist.html)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家需要 SQL 吗？](/2019/07/sql-needed-data-scientist.html)'
- en: '[7 Steps to Mastering SQL for Data Science — 2019 Edition](/2019/05/7-steps-mastering-sql-data-science-2019-edition.html)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[掌握数据科学 SQL 的 7 个步骤 — 2019 年版](/2019/05/7-steps-mastering-sql-data-science-2019-edition.html)'
- en: '[Python Data Science for Beginners](/2019/02/python-data-science-beginners.html)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 数据科学入门](/2019/02/python-data-science-beginners.html)'
- en: More On This Topic
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[成为优秀数据科学家所需的5项关键技能](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个初学者数据科学家都应该掌握的6种预测模型](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
- en: '[The Best ETL Tools in 2021](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2021年最佳ETL工具](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习数据科学的顶级统计资源](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[停止学习数据科学来寻找目的，并通过寻找目的来…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
- en: '[Building a solid data team](https://www.kdnuggets.com/2021/12/build-solid-data-team.html)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[建立一个强大的数据团队](https://www.kdnuggets.com/2021/12/build-solid-data-team.html)'
