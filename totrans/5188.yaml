- en: The NoSQL Know-It-All Compendium
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2021/05/nosql-know-it-all-compendium.html](https://www.kdnuggets.com/2021/05/nosql-know-it-all-compendium.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Editor''s note:** This is a collection of excerpts from KDnuggets articles
    written by author [Alex Williams](https://www.kdnuggets.com/author/alex-williams)
    covering NoSQL topics and concepts for beginners, with links to the full articles
    for further reading.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Image](../Images/a006484896574454a33c2b7c3afcb660.png)'
  prefs: []
  type: TYPE_IMG
- en: What is NoSQL?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: NoSQL is essentially the response to SQL’s rigid structure. First created in
    the early 1970s, NoSQL didn’t really take off until the late 2000s, when Amazon
    and Google both put a lot of research and development into it. Since then, it’s
    taken off to be an integral part of the modern world, with many big websites around
    the world using some form of NoSQL.
  prefs: []
  type: TYPE_NORMAL
- en: So what is NoSQL exactly? Essentially it is a philosophy for creating databases
    that does not require a schema nor does it store data in a relational model. In
    fact, NoSQL has a variety of NoSQL Databases to pick from, each with their own
    specialization and use cases. As such, NoSQL is incredibly diverse when it comes
    to filling niches, and you can almost certainly find a NoSQL data model to fit
    your needs.
  prefs: []
  type: TYPE_NORMAL
- en: While SQL is a specific database and language, NoSQL isn’t, but that doesn’t
    mean that we can’t look at the general philosophies and differences between the
    two.
  prefs: []
  type: TYPE_NORMAL
- en: Continue reading **[NoSQL For Beginners](/2020/12/nosql-beginners.html)**.
  prefs: []
  type: TYPE_NORMAL
- en: SQL vs NoSQL
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Developers are all too aware of the need for continuing education. Whether there’s
    a new framework to pick up or a new service to learn, innovation and adaptation
    are fundamental to development. One of the hottest topics for today is the decision
    to go with the standard SQL database or to move to a NoSQL database.
  prefs: []
  type: TYPE_NORMAL
- en: NoSQL databases have been around for decades, thanks to the innovation of Carlo
    Strozzi. However, these databases weren’t in the news much until the early 2000s’.
    At this time, companies like Google and Amazon began putting more effort into
    developing NoSQL databases. Despite their recent popularity, many developers,
    architects, and designers may not be fully up to date with what NoSQL databases
    offer.
  prefs: []
  type: TYPE_NORMAL
- en: Thus, for a rundown on the differences between the two databases, check out
    the following 7 key takeaways that every developer should know.
  prefs: []
  type: TYPE_NORMAL
- en: 'Continue reading **[SQL vs NoSQL: 7 Key Takeaways](/2020/12/sql-vs-nosql-7-key-takeaways.html)**.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../Images/2c0abac08b02b9ee25a102f78bde8506.png)'
  prefs: []
  type: TYPE_IMG
- en: NoSQL has become increasingly popular as a complementary tool to traditional
    SQL approaches to databases and database management. As we know, NoSQL doesn’t
    follow the same relational model that SQL does, which allows it to do quite a
    lot of powerful things. More importantly, it’s very flexible and scalable, which
    is excellent for newer projects that don’t have the time or budget to spend on
    designing an SQL database.
  prefs: []
  type: TYPE_NORMAL
- en: As such, we’re going to take a bit of a deeper look at how different [data models](https://hostingdata.co.uk/nosql-database/)
    work.
  prefs: []
  type: TYPE_NORMAL
- en: Column-Oriented Databases
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'At a very surface level, column-store databases do exactly what is advertised
    on the tin: namely, that instead of organizing information into rows, it does
    so in columns. This essentially makes them function the same way that tables work
    in relational databases. Of course, since this is a NoSQL database, this data
    model makes them much more flexible.'
  prefs: []
  type: TYPE_NORMAL
- en: More specifically, column databases use the concept of keyspace, which is sort
    of like a schema in relational models. This keyspace contains all the column families,
    which then contain rows, which then contain columns. It’s a bit tricky to wrap
    your head around at first but it’s relatively straightforward.
  prefs: []
  type: TYPE_NORMAL
- en: By taking a quick look, we can see that a column family has several rows. Within
    each row, there can be several different columns, with different names, links,
    and even sizes (meaning they don’t need to adhere to a standard). Furthermore,
    these columns only exist within their own row and can contain a value pair, name,
    and a timestamp.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../Images/693cf6110d5044826ce975d87d07376d.png)'
  prefs: []
  type: TYPE_IMG
- en: Continue reading **[Column-Oriented Databases, Explained](/2021/02/understanding-nosql-database-types-column-oriented-databases.html)**.
  prefs: []
  type: TYPE_NORMAL
- en: Graph Databases
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ironically for a non-relational database, graphs primarily work on the concept
    of multi-relational data ‘pathways’.
  prefs: []
  type: TYPE_NORMAL
- en: 'Graph databases are generally straightforward in how they’re structured though.
    They primarily are composed of two components:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The Node: This is the actual piece of data itself. It can be the number of
    viewers of a youtube video, the number of people who have read a tweet, or it
    could even be basic information such as people’s names, addresses, and so forth.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Edge: This explains the actual relationship between two nodes. Interestingly
    enough, edges can also have their own pieces of information, such as the nature
    of the relation between two nodes. Similarly, edges might also have directions
    describing the flow of said data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Continue reading **[Graph Databases, Explained](/2021/02/understanding-nosql-database-types-graph.html)**.
  prefs: []
  type: TYPE_NORMAL
- en: Document Databases
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ostensibly the idea behind document databases is that you can store any sort
    of information in a document. That means you can mix and match whatever sort of
    data you want without really having to worry about the database not being able
    to parse it. Of course, in practice, most document databases still tend to use
    some form of schema with a file format and some kind of predetermined structure.
  prefs: []
  type: TYPE_NORMAL
- en: Compared to an SQL database which is both tubular and relational, document store
    doesn’t have the same foibles and restrictions that SQL does. This means it’s
    much easier to work with the information at hand, and queries can be much easier
    to carry out. Ironically, the same sort of actions you can perform in an SQL database,
    you can also perform in a document-store such as deleting, adding, and querying.
  prefs: []
  type: TYPE_NORMAL
- en: As alluded to earlier, each document needs some sort of key, which is provided
    to it through a unique ID. When the unique ID is provided in any process, the
    information in the document itself is read and dealt with directly, rather than
    being taken out on a column by column basis.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../Images/e7845aaaa8bc8c19709b31936fb43e00.png)'
  prefs: []
  type: TYPE_IMG
- en: Continue reading **[Document Databases, Explained](/2021/03/understanding-nosql-database-types-document.html)**.
  prefs: []
  type: TYPE_NORMAL
- en: Key-Value Databases
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Key-value stores are actually pretty straightforward. A value, which can be
    basically any piece of data or information, is stored with a key that identifies
    its location. In fact, this is a design concept that exists in pretty much every
    piece of programming as an array or map object. The difference here is that it’s
    stored persistently in a database management system.
  prefs: []
  type: TYPE_NORMAL
- en: What makes key-value stores so popular is that the way information is stored
    is as a sort of opaque blob, rather than discrete data. As such, there’s really
    no need to index the database to make it perform faster. Instead, it performs
    faster on its own due to the way it’s structured. Similarly, it doesn’t really
    have a language of its own, instead relying on simple get, put and delete commands.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, this comes with the downside that the information you get from a
    request isn’t filtered. This lack of control of the data can be problematic under
    certain circumstances but for the most part, it’s worth the exchange. Since key-value
    stores are fast and reliable, most programmers work around any filter/control
    issues they may come up against.
  prefs: []
  type: TYPE_NORMAL
- en: Continue reading **[Key-Value Databases, Explained](/2021/04/nosql-explained-understanding-key-value-databases.html)**.
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Alex Williams](https://hostingdata.co.uk/author/alex-williams/)** is
    a seasoned full-stack developer and the owner of [Hosting Data UK](https://hostingdata.co.uk/).
    After graduating from the University of London, majoring in IT, Alex worked as
    a developer leading various projects for clients from all over the world for almost
    10 years. Recently, Alex switched to being an independent IT consultant and started
    his own blog. There, he explores web development, data management, digital marketing,
    and solutions for online business owners just starting out.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[NoSQL for Beginners](/2020/12/nosql-beginners.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SQL vs NoSQL: 7 Key Takeaways](/2020/12/sql-vs-nosql-7-key-takeaways.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[To SQL or not To SQL: that is the question!](/2018/05/sql-not-sql-question.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[SQL vs NoSQL: 7 Key Takeaways](https://www.kdnuggets.com/2020/12/sql-vs-nosql-7-key-takeaways.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NoSQL Databases and Their Use Cases](https://www.kdnuggets.com/2023/03/nosql-databases-cases.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[All About Collections in Python](https://www.kdnuggets.com/2022/09/collections-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What''s With All the Layoffs in Tech?](https://www.kdnuggets.com/2023/02/layoffs-tech.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Super Bard: The AI That Can Do It All and Better](https://www.kdnuggets.com/2023/05/super-bard-ai-better.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[If You Want to Master Generative AI, Ignore All (But Two) Tools](https://www.kdnuggets.com/if-you-want-to-master-generative-ai-ignore-all-but-two-tools)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
