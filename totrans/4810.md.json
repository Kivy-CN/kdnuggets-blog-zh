["```py\ncookiecutter https://github.com/drivendata/cookiecutter-data-science\n\n```", "```py\n├── LICENSE\n├── Makefile           <- Makefile with commands like `make data` or `make train`\n├── README.md          <- The top-level README for developers using this project.\n├── data\n│   ├── external       <- Data from third party sources.\n│   ├── interim        <- Intermediate data that has been transformed.\n│   ├── processed      <- The final, canonical data sets for modeling.\n│   └── raw            <- The original, immutable data dump.\n│\n├── docs               <- A default Sphinx project; see sphinx-doc.org for details\n│\n├── models             <- Trained and serialized models, model predictions, or model summaries\n│\n├── notebooks          <- Jupyter notebooks. Naming convention is a number (for ordering),\n│                         the creator's initials, and a short `-` delimited description, e.g.\n│                         `1.0-jqp-initial-data-exploration`.\n│\n├── references         <- Data dictionaries, manuals, and all other explanatory materials.\n│\n├── reports            <- Generated analysis as HTML, PDF, LaTeX, etc.\n│   └── figures        <- Generated graphics and figures to be used in reporting\n│\n├── requirements.txt   <- The requirements file for reproducing the analysis environment, e.g.\n│                         generated with `pip freeze > requirements.txt`\n│\n├── setup.py           <- Make this project pip installable with `pip install -e`\n├── src                <- Source code for use in this project.\n│   ├── __init__.py    <- Makes src a Python module\n│   │\n│   ├── data           <- Scripts to download or generate data\n│   │   └── make_dataset.py\n│   │\n│   ├── features       <- Scripts to turn raw data into features for modeling\n│   │   └── build_features.py\n│   │\n│   ├── models         <- Scripts to train models and then use trained models to make\n│   │   │                 predictions\n│   │   ├── predict_model.py\n│   │   └── train_model.py\n│   │\n│   └── visualization  <- Scripts to create exploratory and results oriented visualizations\n│       └── visualize.py\n│\n└── tox.ini            <- tox file with settings for running tox; see tox.testrun.org\n\n```", "```py\n# OPTIONAL: Load the \"autoreload\" extension so that code can change\n%load_ext autoreload\n\n# OPTIONAL: always reload modules so that as you change code in src, it gets loaded\n%autoreload 2\n\nfrom src.data import make_dataset\n\n```", "```py\n# example .env file\nDATABASE_URL=postgres://username:password@localhost:5432/dbname\nAWS_ACCESS_KEY=myaccesskey\nAWS_SECRET_ACCESS_KEY=mysecretkey\nOTHER_VARIABLE=something\n\n```", "```py\n# src/data/dotenv_example.py\nimport os\nfrom dotenv import load_dotenv, find_dotenv\n\n# find .env automagically by walking up directories until it's found\ndotenv_path = find_dotenv()\n\n# load up the entries as environment variables\nload_dotenv(dotenv_path)\n\ndatabase_url = os.environ.get(\"DATABASE_URL\")\nother_variable = os.environ.get(\"OTHER_VARIABLE\")\n\n```", "```py\n[default]\naws_access_key_id=myaccesskey\naws_secret_access_key=mysecretkey\n\n[another_project]\naws_access_key_id=myprojectaccesskey\naws_secret_access_key=myprojectsecretkey\n\n```"]