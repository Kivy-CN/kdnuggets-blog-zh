- en: 3 More SQL Aggregate Function Interview Questions for Data Science
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/01/3-sql-aggregate-function-interview-questions-data-science.html](https://www.kdnuggets.com/2023/01/3-sql-aggregate-function-interview-questions-data-science.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![3 More SQL Aggregate Function Interview Questions for Data Science](../Images/1c0430f5a5a6da2036d7955721ed515d.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: The aggregate functions are one of SQL’s essential features. From SQL being
    one of the essential [data science tools](https://www.stratascratch.com/blog/the-10-most-useful-data-analysis-tools-for-data-scientists/)
    comes the conclusion there’s no living example of a data scientist who never used
    SQL aggregate functions.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: How would they otherwise analyze data and provide meaningful metrics?  A data
    scientist’s life without data aggregation is like a broken pencil – pointless.
  prefs: []
  type: TYPE_NORMAL
- en: The interviewers know that. And they will make sure to check your aggregation
    skills left and right.
  prefs: []
  type: TYPE_NORMAL
- en: The Big Five SQL Aggregate Functions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The [SQL aggregate functions](https://www.stratascratch.com/blog/the-ultimate-guide-to-sql-aggregate-functions/)
    take values from multiple rows and return a single aggregated value. They are
    most commonly used with the GROUP BY clause. This allows you to see the group
    names and the aggregate values.
  prefs: []
  type: TYPE_NORMAL
- en: There are quite a few aggregation functions in SQL. Their number also depends
    on the SQL flavor you use.
  prefs: []
  type: TYPE_NORMAL
- en: But no matter what, the most common aggregate functions in SQL are these five.
  prefs: []
  type: TYPE_NORMAL
- en: '![3 More SQL Aggregate Function Interview Questions for Data Science](../Images/53c8a03dfe75e615438654eb8347f32a.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: The functions’ names are not too cryptic. Anybody can intuitively conclude what
    each function does.
  prefs: []
  type: TYPE_NORMAL
- en: However, knowing how to use them when facing a business problem is another pair
    of shoes. These shoes need a bit of breaking in.
  prefs: []
  type: TYPE_NORMAL
- en: The next three interview questions should help you with that.
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Average Weight of Medal-Winning Judo
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is a question by ESPN you can find on StrataScratch.
  prefs: []
  type: TYPE_NORMAL
- en: “Find the average weight of medal-winning Judo players of each team with a minimum
    age of 20 and a maximum age of 30\. Consider players at the age of 20 and 30 too.
    Output the team along with the average player weight.”
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Here’s the [link](https://platform.stratascratch.com/coding/10144-average-weight-of-medal-winning-judo?code_type=2&utm_source=blog&utm_medium=click&utm_campaign=kdnuggets)
    to the question if you want to follow along with me.
  prefs: []
  type: TYPE_NORMAL
- en: The question requires you to find the average weight of a medal-winning judo
    player by each team. This wording obviously means you have to use the AVG() aggregate
    functions.
  prefs: []
  type: TYPE_NORMAL
- en: Only medal winners between 20 and 30 years of age should be considered. Use
    the MIN() and MAX() functions to achieve that.
  prefs: []
  type: TYPE_NORMAL
- en: Put in the code, it looks like this.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The query selects the team, which will also be used in GROUP BY, and calculates
    the average weight from the table olympics_athletes_events. The WHERE clause is
    used to include only judo and exclude the competitors that didn’t win any medal.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, use the MIN() and MAX() functions in the HAVING clause to show winners
    between 20 and 30 years.
  prefs: []
  type: TYPE_NORMAL
- en: Here’s also the code output.
  prefs: []
  type: TYPE_NORMAL
- en: '| **team** | **average_player_weight** |'
  prefs: []
  type: TYPE_TB
- en: '| France | 77 |'
  prefs: []
  type: TYPE_TB
- en: '| Georgia | 84 |'
  prefs: []
  type: TYPE_TB
- en: '| Japan | 70 |'
  prefs: []
  type: TYPE_TB
- en: '| Romania | 48 |'
  prefs: []
  type: TYPE_TB
- en: 2\. Count Student Number in Departments
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The question from LeetCode asks you the following.
  prefs: []
  type: TYPE_NORMAL
- en: “Write an SQL query to report the respective department name and number of students
    majoring in each department for all departments in the **Department** table (even
    ones with no current students).Return the result table **ordered** by student_number
    **in descending order**. In case of a tie, order them by dept_name **alphabetically**.”
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Here’s the [link](https://leetcode.com/problems/count-student-number-in-departments/description/)
    to the question to follow along with me.
  prefs: []
  type: TYPE_NORMAL
- en: The clue is in the question title. Solving this question calls for the COUNT()
    aggregate function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Unlike the previous question, here you have two tables: department and student.'
  prefs: []
  type: TYPE_NORMAL
- en: The first step is to select the department name and find the number of students
    by their ID using the COUNT() function.
  prefs: []
  type: TYPE_NORMAL
- en: To get both columns, use LEFT JOIN to join the tables. Why this particular join?
    Because the question asks you to return all the department names, even if there
    are no students.
  prefs: []
  type: TYPE_NORMAL
- en: Output is grouped by department and sorted by the student number descendingly
    and department name ascendingly.
  prefs: []
  type: TYPE_NORMAL
- en: Here’s the expected output.
  prefs: []
  type: TYPE_NORMAL
- en: '| **dept_name** | **student_number** |'
  prefs: []
  type: TYPE_TB
- en: '| Engineering | 2 |'
  prefs: []
  type: TYPE_TB
- en: '| Science | 1 |'
  prefs: []
  type: TYPE_TB
- en: '| Law | 0 |'
  prefs: []
  type: TYPE_TB
- en: 3\. Contest Leaderboard
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The final question comes from HackerRank.
  prefs: []
  type: TYPE_NORMAL
- en: “You did such a great job helping Julia with her last coding contest challenge
    that she wants you to work on this one, too! The total score of a hacker is the
    sum of their maximum scores for all of the challenges. Write a query to print
    the hacker_id, name, and total score of the hackers ordered by the descending
    score. If more than one hacker achieved the same total score, then sort the result
    by ascending hacker_id. Exclude all hackers with a total score of 0 from your
    result.”
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Here’s the [link](https://www.hackerrank.com/challenges/contest-leaderboard/problem?isFullScreen=true)
    to the question if you want to follow along with me.
  prefs: []
  type: TYPE_NORMAL
- en: 'The solution uses two aggregate functions: SUM() and MAX().'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Let’s first focus on the subquery, which is used to calculate the highest score
    by hacker and challenge. To do that, it uses the MAX() aggregate function.
  prefs: []
  type: TYPE_NORMAL
- en: The main query selects the hacker’s ID and name from the table hackers. It also
    uses the SUM() function to sum the highest scores by referencing the subquery.
  prefs: []
  type: TYPE_NORMAL
- en: These two queries are joined on the column hacker_id using JOIN.
  prefs: []
  type: TYPE_NORMAL
- en: After that, the output is filtered to show only the total scores above zero.
    Finally, the result is sorted by total score descendingly and by the hacker ID
    ascendingly.
  prefs: []
  type: TYPE_NORMAL
- en: The first several rows of the output are shown here.
  prefs: []
  type: TYPE_NORMAL
- en: '| **hacker_id** | **name** | **sum_max_score** |'
  prefs: []
  type: TYPE_TB
- en: '| 76971 | Ashley | 760  |'
  prefs: []
  type: TYPE_TB
- en: '| 84200 | Susan | 710 |'
  prefs: []
  type: TYPE_TB
- en: '| 76615 | Ryan | 700 |'
  prefs: []
  type: TYPE_TB
- en: '| 82382 | Sara | 640 |'
  prefs: []
  type: TYPE_TB
- en: '| 79034 | Marilyn | 580 |'
  prefs: []
  type: TYPE_TB
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There you have it: the five most popular SQL aggregate functions showcased
    on three medium-level interview questions. It’s not that difficult for a crucial
    SQL concept, is it?'
  prefs: []
  type: TYPE_NORMAL
- en: These three questions are good examples of what you can expect from the job
    interview. As you’ve seen, the SQL aggregate functions don’t come alone. They
    are usually assessed simultaneously with other SQL concepts, such as grouping
    and filtering data, joining tables, and writing subqueries.
  prefs: []
  type: TYPE_NORMAL
- en: Use these questions as guidelines, but make sure you solve several questions
    on your own. That’s the closes you can get to a job interview before an interview.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Nate Rosidi](https://www.stratascratch.com)** is a data scientist and in
    product strategy. He''s also an adjunct professor teaching analytics, and is the
    founder of [StrataScratch](https://www.stratascratch.com/), a platform helping
    data scientists prepare for their interviews with real interview questions from
    top companies. Connect with him on [Twitter: StrataScratch](https://twitter.com/StrataScratch)
    or [LinkedIn](https://www.linkedin.com/in/nathanrosidi/).'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Top 10 Advanced Data Science SQL Interview Questions You Must Know…](https://www.kdnuggets.com/2023/01/top-10-advanced-data-science-sql-interview-questions-must-know-answer.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[25 Advanced SQL Interview Questions for Data Scientists](https://www.kdnuggets.com/2022/10/25-advanced-sql-interview-questions-data-scientists.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SQL and Python Interview Questions for Data Analysts](https://www.kdnuggets.com/2023/02/sql-python-interview-questions-data-analysts.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SQL Interview Questions for Experienced Professionals](https://www.kdnuggets.com/2022/01/sql-interview-questions-experienced-professionals.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[24 SQL Questions You Might See on Your Next Interview](https://www.kdnuggets.com/2022/06/24-sql-questions-might-see-next-interview.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News, May 4: 9 Free Harvard Courses to Learn Data…](https://www.kdnuggets.com/2022/n18.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
