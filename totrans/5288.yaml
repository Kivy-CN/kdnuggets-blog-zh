- en: Emacs for Data Science
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2015/07/emacs-data-science.html](https://www.kdnuggets.com/2015/07/emacs-data-science.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '**By Robert Vesco.**'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you want an editor that works with R, Python, SAS, Stata, SQL and almost
    any other data science language. If you want an editor with IDE-like features.
    If you want an editor that works on any platform and as well as on the terminal.
    If you''re a fan of literate programming. If you want an editor that is highly
    customizable and will be around after most editors have come and gone, then you''d
    be hard pressed to find anything better than Emacs.**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If you work in exclusively in R, you might want to work in [Rstudio](http://www.rstudio.com).
    If you work in python, you might be tempted by [Spyder](https://code.google.com/p/spyderlib/).
    Chances are there is a specialized IDE for whatever language you typically work
    in. But that's the rub. What if you want to work in another language? Or combine
    languages? You end up using several IDEs, but not knowing them well. Plus, once
    they fall out of favor or stop being updated, your hard-gained knowledge is lost.
    At the other end of the spectrum there are text editors like notepad++ and sublime.
    These work with just about any language you can imagine and with some add-ons
    you can get additional features, but they tend to be limited to certain platforms
    and customization is often non-trivial.
  prefs: []
  type: TYPE_NORMAL
- en: A modern data scientist often has to work on multiple platforms with multiple
    languages. Some projects may be in R others in Python. Or perhaps you have to
    work on a cluster with no gui. Or maybe you need to write papers with latex. You
    can do all that with Emacs and customize it to do whatever you like. I won't lie
    though. The learning curve can be steep, but I think the investment is worth it.
  prefs: []
  type: TYPE_NORMAL
- en: Below are some key features that I think make Emacs an excellent editor for
    any data scientist.
  prefs: []
  type: TYPE_NORMAL
- en: IDE-like features
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For most programming languages, you get out-of-the-box syntax highlighting.
    Packages like [ESS](http://ess.r-project.org/Manual/ess.html) and [Elpy](https://github.com/jorgenschaefer/elpy)
    provide additional features like autocompletion, documentation and debugging capabilities.
    The number of IDE features available will vary by language, but at minimum there
    is probably syntax highlighting and some form of autocompletion.
  prefs: []
  type: TYPE_NORMAL
- en: '![emacs_autocomplete_fig1](../Images/c83038f73ccb5972d5352c42566d0a81.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1: "Autocompletion"'
  prefs: []
  type: TYPE_NORMAL
- en: One of the things that I enjoy is easy access to help and function parameters
    … which often also come with autocomplete.
  prefs: []
  type: TYPE_NORMAL
- en: '![emacs_blog_r_help_syntax_fig2](../Images/593f8cab735045fec3b279529625223d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2: "Help for Functions"'
  prefs: []
  type: TYPE_NORMAL
- en: '![emacs_parameter_help_fig3](../Images/215ada978e1726faa9d288d262f4c74c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3: "Parameter help for Function"'
  prefs: []
  type: TYPE_NORMAL
- en: Enough with the print statements already and debug that R and python code!
  prefs: []
  type: TYPE_NORMAL
- en: '[![emacs_debug_fig4](../Images/d6961ef6921d7fb6f6eebe43fb268212.png)](/wp-content/uploads/emacs_debug_fig4.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 4: "Interactive debugging with conditional breakpoint"'
  prefs: []
  type: TYPE_NORMAL
- en: One of the features that first sold me on Emacs was interactive commands. With
    a keyboard short cut you can send a buffer, function, paragraph or line to the
    interpreter. Let me be clear – you don't even have to highlight the code. This
    saves you a ton of time when you're doing statistical analysis^([1](#fn.1)).
  prefs: []
  type: TYPE_NORMAL
- en: '[![emacs_interactive_fig5](../Images/af295dc629d3be0767c0cc707d6a8e53.png)](/wp-content/uploads/emacs_interactive_fig5.gif)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 5: "Interactive Commands"'
  prefs: []
  type: TYPE_NORMAL
- en: SQL too
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Do you work with databases? Many of the same benefits mentioned above also apply
    to sql. Work with sqlite, postgresql, mysql and other databases interactively.
    Do you have a long SQL statement you are debugging? No problem. Iterate quickly.
  prefs: []
  type: TYPE_NORMAL
- en: '[![emacs_sqlite_fig6](../Images/e52be5eeb33fffeda00895e03f65a05a.png)](/wp-content/uploads/emacs_sqlite_fig6.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 6: "Interactive SQL"'
  prefs: []
  type: TYPE_NORMAL
- en: Org mode / Literate Programming
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Do you write publications? Do you want to keep your code and paper together?
    You a believer in reproducible research? With emacs you can put any language you
    want in your document. While Rstudio allows this also, you're limited to just
    R and latex.
  prefs: []
  type: TYPE_NORMAL
- en: '[![emacs_literate_fig7](../Images/395f7534c7ca791835ce87be2d54ff23.png)](/wp-content/uploads/emacs_literate_fig7.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 7: "Literate Programming: Code & Stata"'
  prefs: []
  type: TYPE_NORMAL
- en: do you need latex? No problem.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: They key to this magic is a monster package called [org mode](http://orgmode.org/features.html).
    It is one of emacs killer features. You can also use this to organize your code...
    or your life.
  prefs: []
  type: TYPE_NORMAL
- en: Terminal/remote editing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Sometime you need to remote into a server. Or perhaps you are working on a cluster
    with no gui and you need to interactively debug your scripts.
  prefs: []
  type: TYPE_NORMAL
- en: '[![emacs_terminal_fig8](../Images/57cd649162cf20284d793a3e0d78a9f2.png)](/wp-content/uploads/emacs_terminal_fig8.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 8: "Works in the terminal just as well"'
  prefs: []
  type: TYPE_NORMAL
- en: Interacting with the shell
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Is there are terminal command you wish you could run? In emacs you can run terminal
    commands easily. But what makes this feature super cool is that it can operate
    on your text. You can select a region of code, send it to a terminal command and
    have that stdout replace the text in your buffer!
  prefs: []
  type: TYPE_NORMAL
- en: '![emacs_shell_fig9](../Images/29d3e10aad023ef1ffd511ef121392ce.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9: "Using SED to find and replace text in the buffer"'
  prefs: []
  type: TYPE_NORMAL
- en: Rectangle editing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Data scientists often work with tabular data. Sometimes you may want to delete
    or move a column around. Or perhaps there is a block of white space you need to
    change.
  prefs: []
  type: TYPE_NORMAL
- en: '[![emacs_rectangle_fig10](../Images/bef8afefb0e6d51199d3769dbfcfbecc.png)](/wp-content/uploads/emacs_rectangle_fig10.gif)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 10: "Using rectangle mode to alter blocks of text"'
  prefs: []
  type: TYPE_NORMAL
- en: Everything at your finger tips
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Emacs has numerous packages that allow you to search and find files, functions
    and anything else that you can imagine. But by far the best is helm. With just
    a few keys you can instantly find what you are looking for. I couldn't do it justice,
    but this demo gives you a taste for the amazing things it can do.
  prefs: []
  type: TYPE_NORMAL
- en: '[http://tuhdo.github.io/helm-intro.html](http://tuhdo.github.io/helm-intro.html)'
  prefs: []
  type: TYPE_NORMAL
- en: Any feature you want
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Perhaps you're wedded to sublime's multiple cursors? You can get it: [http://emacsrocks.com/](http://emacsrocks.com/).
    Or perhaps you're a long time vim user? Evil Mode gives you the editing power
    of Vim with the utility of emacs. If you're a git user, Emacs has magit which
    make working with git a joy. If there is something that it doesn't have, check
    for packages, else emacs is the most customizable editor you will find. Almost
    everything about it can be made to work your particular work flow.
  prefs: []
  type: TYPE_NORMAL
- en: 30+ years old and a large user base
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Emacs has been around a long time. Code that was written a decade ago mostly
    still work. And every year it's getting better. However, emacs24 is amazing. If
    you tried emacs years ago, you should give it another try. It now has package
    management built in, so you can easily add testing packages. Importantly, there
    is no sign that emacs is going away anytime soon and it's free. It will likely
    be around for at least another decade if not more.
  prefs: []
  type: TYPE_NORMAL
- en: So what are the downsides?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Legacy code on the intertubes confuses people
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Emacs has been around a long time. Emacs 24 was a huge improvement, but it also
    broke a lot of things. Same goes for Org-mode between versions 7 and 8\. A lot
    of stuff on the intertubes will lead you astray and frustrated if you're not aware.
  prefs: []
  type: TYPE_NORMAL
- en: Emacs-lisp for customization
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I actually enjoy working with lisp because it is so different from other languages
    I work with. However, many others would prefer using a language like python.
  prefs: []
  type: TYPE_NORMAL
- en: Not bro/noob friendly
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Emacs is not like the cheerful, always smiling bro with the abercrombie face.
    First encounters can be painful and awkward. It's not sublime. That said, there
    are several starter packages to enable useful features out-of-the-box. For scientists,
    Kieran Healy's starter package might be useful:[http://kieranhealy.org/resources/emacs-starter-kit/](http://kieranhealy.org/resources/emacs-starter-kit/)
  prefs: []
  type: TYPE_NORMAL
- en: 'Another useful package is prelude: [https://github.com/bbatsov/prelude](https://github.com/bbatsov/prelude)'
  prefs: []
  type: TYPE_NORMAL
- en: If you're on a Mac, I've heard aquamacs will keep you warm and comfy:[http://aquamacs.org/](http://aquamacs.org/)
  prefs: []
  type: TYPE_NORMAL
- en: Most of these will give you the power of emacs, quickly. Personally, I prefer
    to build my emacs up by scratch so it does what I want it to do and no more. But
    these packages are great ways to get a feel for it's power.
  prefs: []
  type: TYPE_NORMAL
- en: Multiple packages
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you decide you want to work with python be prepared to experiment with lots
    of different python packages. While emacs has basic python support, you probably
    want linting, refactoring or other useful features. Many packages have tried to
    implement these features, some better than others. Personally, I like Elpy, but
    it's not perfect. The downside of options is that you have to wade through them.
    It can be painful sometimes.
  prefs: []
  type: TYPE_NORMAL
- en: What am I missing?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: While I tried to include most of the features that I think would appeal to data
    scientists, let me know if I missed any killer feature and I'll try to include
    it here. [https://twitter.com/robertvesco](https://twitter.com/robertvesco)
  prefs: []
  type: TYPE_NORMAL
- en: 'Footnotes:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: ^([1](#fnr.1) )Like many other features this will depend on the package you
    install. That said, it's easy to implement this feature for your favorite language
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio:** [![Robert Vesco](../Images/e73b7ac4b446209d5d450903ddae2f39.png)](https://www.linkedin.com/in/robertvesco)[Robert
    Vesco](https://www.linkedin.com/in/robertvesco) is a doctoral candidate transitioning
    back to industry.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[R vs Python for Data Science: The Winner is …](/2015/05/r-vs-python-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top 20 R packages by popularity](/2015/06/top-20-r-packages.html "Top 20 R
    packages by popularity")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[21 Essential Data Visualization Tools](/2015/05/21-essential-data-visualization-tools.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data Science Minimum: 10 Essential Skills You Need to Know to Start…](https://www.kdnuggets.com/2020/10/data-science-minimum-10-essential-skills.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets™ News 22:n06, Feb 9: Data Science Programming…](https://www.kdnuggets.com/2022/n06.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data Science Definition Humor: A Collection of Quirky Quotes…](https://www.kdnuggets.com/2022/02/data-science-definition-humor.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Data Science Projects to Learn 5 Critical Data Science Skills](https://www.kdnuggets.com/2022/03/5-data-science-projects-learn-5-critical-data-science-skills.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News, November 30: What is Chebychev''s Theorem and How…](https://www.kdnuggets.com/2022/n46.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
