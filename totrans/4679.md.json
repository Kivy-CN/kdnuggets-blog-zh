["```py\n\nif i % 500 == 0:\n        # Visualize the performance of the generator by producing images from the test vector\n        images = net_generator.predict(vis_noise)\n        # Map back to original range\n        #images = (images + 1 ) * 0.5\n        plt.figure(figsize=(10,10))\n\n        for im in range(images.shape[0]):\n            plt.subplot(4, 4, im+1)\n            image = images[im, :, :, :]\n            image = np.reshape(image, [28, 28])\n\n            plt.imshow(image, cmap='gray')\n            plt.axis('off')\n\n        plt.tight_layout()\n        # plt.savefig('/home/ubuntu/cecelia/deeplearning-resources/output/mnist-normal/{}.png'.format(i))\n\n        plt.savefig(r'output/mnist-normal/{}.png'.format(i))\n\n        experiment.log_image(r'output/mnist-normal/{}.png'.format(i))\n\n        plt.close('all')\n\n```"]