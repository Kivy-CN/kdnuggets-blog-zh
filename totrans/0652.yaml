- en: How to Convert a Picture to Numbers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何将图片转换为数字
- en: 原文：[https://www.kdnuggets.com/2020/01/convert-picture-numbers.html](https://www.kdnuggets.com/2020/01/convert-picture-numbers.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/01/convert-picture-numbers.html](https://www.kdnuggets.com/2020/01/convert-picture-numbers.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: The experience of seeing the world around us is all but impossible to capture
    in a handful of words, from the careful steps of a marching ant, to the works
    of Pablo Picasso and Beatrix Potter, to a solitary oak tree, twisted and dignified.
    It's ridiculous to think that we could ever reduce it all to ones and zeros. Except
    that we have. In fact, our images are so realistic now that we go to pains to
    re-introduce artifacts, like the washed out colors of Polaroids or the scratches
    on celluloid.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 体验周围世界的感觉几乎无法用几个词语来捕捉，从一个行军蚂蚁的细致步伐，到巴勃罗·毕加索和比阿特丽克斯·波特的作品，再到孤独而庄严的橡树。认为我们能将这一切归结为零和一是荒谬的。尽管如此，我们确实已经做到了。实际上，我们的图像现在如此逼真，以至于我们会费尽心思重新引入伪影，比如宝丽来照片的褪色色彩或胶卷上的划痕。
- en: This may be a blow to romanticism, but it's great luck for machine learning
    practitioners. Reducing images to numbers makes them amenable to computation.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能会对浪漫主义造成打击，但对机器学习从业者来说是极大的好运。将图像转换为数字使它们适合计算。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业的快车道。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的信息技术'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '![Image quantification montage](../Images/0f8fcafdc7f2bc45a7a0c1fd261c39b9.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![图像量化蒙太奇](../Images/0f8fcafdc7f2bc45a7a0c1fd261c39b9.png)'
- en: Color perception
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 颜色感知
- en: Color fascinates me because it is less about physics than it is about the physiology
    and psychology of human perception. All our standards are determined by what humans
    perceive. The range that needs to be covered, the number of channels necessary
    to represent a color, the resolution with which a color must be specified, and
    hence the information density and storage requirements, all depend on human retinas
    and visual cortices.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 颜色让我着迷，因为它更关乎于人类感知的生理学和心理学，而非物理学。我们所有的标准都由人类的感知决定。需要覆盖的范围、表示一种颜色所需的通道数、颜色必须指定的分辨率以及信息密度和存储要求，都取决于人类的视网膜和视觉皮层。
- en: It also means that, as with everything human, there is a great deal of variability.
    There are deficiencies like [color blindness](https://en.m.wikipedia.org/wiki/Color_blindness) (I
    myself experience [deuteranomaly](https://en.m.wikipedia.org/wiki/Color_blindness#Deuteranomaly),
    a type of red-green colorblindness) and there are those with unusual abilities,
    like [tetrachromats](https://en.m.wikipedia.org/wiki/Tetrachromacy), who have
    not three types of color receptors, but four, and can distinguish colors that
    the rest of us can’t. Because of this, keep in mind that all of the statements
    we can make about perception are generalizations only, and there will be individual
    differences.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这也意味着，正如所有人类事物一样，存在很大的变异性。比如 [色盲](https://en.m.wikipedia.org/wiki/Color_blindness)（我自己经历过 [青绿色盲](https://en.m.wikipedia.org/wiki/Color_blindness#Deuteranomaly)，一种红绿色盲）和那些具有特殊能力的人，比如 [四色觉者](https://en.m.wikipedia.org/wiki/Tetrachromacy)，他们不仅有三种颜色接收器，而是四种，能够区分我们无法辨别的颜色。因此，请记住，我们关于感知的所有陈述只是一般化的，并且会有个体差异。
- en: Although photons vibrate at all frequencies, we have three distinct types of
    color-sensing cones, each with its characteristic frequency response, a particular
    color that it responds strongly to. That means that a combination of just three
    light sources with carefully chosen colors in carefully chosen intensities can
    make us experience any color that we're capable of seeing in the natural world.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管光子在所有频率下振动，我们有三种不同类型的颜色感应锥体，每种都有其特征频率响应，即它强烈响应的特定颜色。这意味着，通过仔细选择颜色和强度的三种光源的组合，我们可以体验到我们在自然界中能够看到的任何颜色。
- en: Making color
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 制造颜色
- en: In computer screens, this is done with a red, a green, and a blue light, often
    light-emitting diodes (LEDs).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算机屏幕中，这通过红色、绿色和蓝色光来完成，通常是发光二极管（LED）。
- en: '![A pixel composed of red, green, and blue LEDs](../Images/c8401d5762ccfa095343027b0ddf994c.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![由红色、绿色和蓝色 LED 组成的像素](../Images/c8401d5762ccfa095343027b0ddf994c.png)'
- en: In practice the red, green, and blue LEDs in a computer screen can’t represent
    all the colors we can see. To make a colored LED, a chemical is introduced that
    fluoresces at about the right color. These are close to ideal red, blue, and green
    but they aren’t perfect. For this reason there is a bit of a gap between the range
    of colors that you can see in the real world (the [gamut](https://en.wikipedia.org/wiki/Gamut))
    and what you can see on a computer screen.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，计算机屏幕中的红色、绿色和蓝色 LED 无法表示我们能看到的所有颜色。为了制造彩色 LED，引入了一种在大约正确颜色下发光的化学物质。这些 LED
    接近理想的红色、蓝色和绿色，但并不完美。因此，你在现实世界中能看到的颜色范围（[色域](https://en.wikipedia.org/wiki/Gamut)）与在计算机屏幕上看到的颜色之间存在一定的差距。
- en: As a side note, lasers are capable of producing color much closer to the ideal.
    Commercially available laser projection systems cover much more of the human perceivable
    gamut, and laser micro arrays for computer screens are a current topic of research
    and development.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，激光能够产生更接近理想的颜色。市售的激光投影系统覆盖了人眼可感知的更广泛的色域，而用于计算机屏幕的激光微阵列是当前的研究和开发主题。
- en: Turning color into numbers
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将颜色转换为数字
- en: Each pixel in a screen is a triplet of a red, a green, and a blue light source,
    but when you look at them from far enough away they are too small for your eye
    to distinguish, and they look like a single small patch of color. One way to determine
    which color is produced is to specify the intensity levels of each of the light
    sources. Since the [just noticeable difference (JND)](https://en.wikipedia.org/wiki/Just-noticeable_difference) in
    human perception of color intensity tends to stay in the neighborhood of one part
    in a hundred, using 256 discrete levels gives enough fine-grained control that
    color gradients look smooth.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕上的每个像素都是由红色、绿色和蓝色光源组成的三重组，但当你从远处看它们时，它们太小以至于你的眼睛无法区分，它们看起来像一个小小的颜色斑块。确定产生的颜色的一种方法是指定每个光源的强度级别。由于人类对颜色强度的[可觉察差异
    (JND)](https://en.wikipedia.org/wiki/Just-noticeable_difference) 通常保持在百分之一的范围内，因此使用
    256 个离散级别可以提供足够精细的控制，使颜色渐变看起来平滑。
- en: '![An array of pixels composed of red, green, and blue LEDs](../Images/fb8e7eac24933c9cab0451cee1c437a1.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![由红色、绿色和蓝色 LED 组成的像素阵列](../Images/fb8e7eac24933c9cab0451cee1c437a1.png)'
- en: '256 intensity levels can be represented with 8 bits or 1 byte. It can also
    be represented with two hexadecimal numbers, between 0x00 for zero brightness
    and 0xff for maximum brightness. Specifying the intensity of three colors takes
    triple that: 6 hexidecimal numbers (24 bits or 3 bytes). The hex representation
    gives a concise way to call out a red-green-blue color. The first two digits show
    the red level, the second two correspond to the green level, and the third pair
    correponds to the blue level. Here are a few extremes.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 256 个强度级别可以用 8 位或 1 字节表示。它也可以用两个十六进制数字表示，范围从 0x00（表示零亮度）到 0xff（表示最大亮度）。指定三种颜色的强度需要三倍的空间：6
    个十六进制数字（24 位或 3 字节）。十六进制表示法提供了一种简洁的方式来表示红-绿-蓝颜色。前两位表示红色级别，第二对表示绿色级别，第三对表示蓝色级别。这里是一些极端情况。
- en: '![Hex codes of a few colors](../Images/dd0a94ece2fb01ad009657ed15ddb1a3.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![几种颜色的十六进制代码](../Images/dd0a94ece2fb01ad009657ed15ddb1a3.png)'
- en: There are a lot more useful [color hex codes here](https://www.color-hex.com/).
    For convenience and code readability, colors can also be represented as triples
    of decimals, as in (255, 255, 255) for white or (0, 255, 0) for green.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多有用的[颜色十六进制代码](https://www.color-hex.com/)。为了方便和代码可读性，颜色也可以用十进制三元组表示，例如白色的
    (255, 255, 255) 或绿色的 (0, 255, 0)。
- en: Building an image from pixels
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从像素构建图像
- en: To recreate an entire image, computers use their reliable trick of simply chopping
    it up into small pieces. To make high quality images, it's necessary to make the
    pieces are so small that the human eye has trouble seeing them individually.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了重建整个图像，计算机使用其可靠的技巧，将图像简单地切割成小块。为了生成高质量的图像，有必要将这些小块做得非常小，以至于人眼很难单独看到它们。
- en: '![Progressive zoom showing pixels in an image](../Images/5708fd3f4e22d3727dc8ed6d96844bfc.png) Image
    credit: Diane Rohrer'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '![渐进缩放显示图像中的像素](../Images/5708fd3f4e22d3727dc8ed6d96844bfc.png) 图片来源：戴安·罗赫'
- en: The color of each pixel can be represented as a 6-digit hex number or a triple
    of decimal numbers ranging from 0 to 255\. During image processing it's customary
    to do the latter. For convenience, the red, green, and blue pixel values are separated
    out into their own arrays.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 每个像素的颜色可以表示为一个6位数的十六进制数字，或者一个范围从0到255的十进制数字三元组。在图像处理过程中，通常使用后者。为了方便，红色、绿色和蓝色的像素值被分隔到各自的数组中。
- en: '![Arrays of pixel colors broken down into red, green, and blue](../Images/e15ace6003dbd8e89269113088cfe886.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![分解成红色、绿色和蓝色的像素颜色数组](../Images/e15ace6003dbd8e89269113088cfe886.png)'
- en: Reading images into Python code
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将图像读取到Python代码中
- en: A reliable way to read images into Python is with [Pillow](https://pillow.readthedocs.io/en/stable/),
    an actively maintained fork of the classic Python Image Library or PIL, and Numpy.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 将图像读取到Python中的一种可靠方法是使用[Pillow](https://pillow.readthedocs.io/en/stable/)，它是经典Python图像库PIL的一个积极维护的分支，以及Numpy。
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When reading in a color image, the resulting object `img` is a three-dimensional
    Numpy array. The data type is often [`numpy.uint8`](https://docs.scipy.org/doc/numpy/user/basics.types.html),
    which is a natural and efficient way to represent color levels between 0 and 255\.
    I haven't been able to determine that this is always the case, so it's safest
    to confirm for the images in your dataset before you start operating on them.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当读取彩色图像时，结果对象`img`是一个三维的Numpy数组。数据类型通常是[`numpy.uint8`](https://docs.scipy.org/doc/numpy/user/basics.types.html)，这是一种自然且高效的方式来表示0到255之间的颜色等级。我还不能确定这是否总是如此，因此在开始操作你的数据集中的图像之前，最好确认一下。
- en: In order to facilitate calculations, I find it most convenient to convert the
    image values to floats between 0 and 1\. In python3, the easiest way to do this
    is to divide by 255: `img *= 1/255`
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便计算，我发现将图像值转换为0到1之间的浮点数是最方便的。在python3中，最简单的方法是除以255：`img *= 1/255`
- en: It's helpful to remember that when images are stored and transmitted, they can
    be represented using a dizzying variety of formats. Parsing these is a separate
    effort. We'll rely on `Image.open()` and `numpy.asarray()` to do all those conversions
    for us. I still haven't found a way around having to verify your pixels' range
    and data types without checking, but I'll keep my eyes open.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，当图像被存储和传输时，它们可以以各种令人眼花缭乱的格式表示。解析这些格式是一个单独的工作。我们将依靠`Image.open()`和`numpy.asarray()`来完成所有这些转换。我仍未找到无需检查即可确认像素范围和数据类型的方法，但我会保持关注。
- en: Now we have all the image information in a compact collection of numbers. In
    our array, dimension 0 represents pixel rows, from the top to the bottom of the
    image. Dimension 1 represents columns from left to right. And dimension 2 represents
    color channels red, green, and blue, in that order.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们拥有了一个紧凑的数字集合中的所有图像信息。在我们的数组中，维度0表示从图像顶部到底部的像素行。维度1表示从左到右的列。维度2表示颜色通道，依次为红色、绿色和蓝色。
- en: '![Three dimensional image array structure](../Images/4ca9846e2120338949d3ec950a8e487e.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![三维图像数组结构](../Images/4ca9846e2120338949d3ec950a8e487e.png)'
- en: In this format you can get at any value you need with `img[row, column, channel]`.
    The green value for top left pixel is given by `img[0, 0, 1]`. The red value for
    the bottom left pixel is `img[2, 0, 0]`. You have all the [slicing and indexing
    tools of Numpy](https://docs.scipy.org/doc/numpy/reference/arrays.indexing.html) at
    your disposal.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种格式中，你可以通过`img[row, column, channel]`获取所需的任何值。左上角像素的绿色值由`img[0, 0, 1]`给出。左下角像素的红色值为`img[2,
    0, 0]`。你可以使用所有的[Numpy切片和索引工具](https://docs.scipy.org/doc/numpy/reference/arrays.indexing.html)。
- en: Don't get tripped up by the fact that row 0 is at the top of the image. As you
    count up through row numbers, you move down toward the bottom of the image. This
    doesn't match with our convention of an (x, y) coordinate axis, but it matches
    perfectly with our [row, column] layout of two dimensional arrays.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 不要被第 0 行位于图像顶部这一点困扰。随着行号的增加，你是向图像底部移动的。这与我们 (x, y) 坐标轴的约定不符，但与我们 [行, 列] 的二维数组布局完全一致。
- en: There can also be a fourth color channel representing the transparency of pixel,
    called alpha. It controls how much of whatever is underneath the image shines
    through. If the pixel range is 0 to 1 then an alpha of 1 is completely opaque
    and an alpha of 0 is completely transparent. If it's not present, alpha is assumed
    to be completely opaque.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以有一个代表像素透明度的第四种颜色通道，称为 alpha。它控制图像下方的内容透过多少。如果像素范围是 0 到 1，则 alpha 为 1 时完全不透明，alpha
    为 0 时完全透明。如果不存在，则假设 alpha 为完全不透明。
- en: Another special case is the grayscale image, where all three color channels
    for each pixel have the same value. Because of the repetition, it's more space
    efficient to store just one color channel, leaving the others implied. A two-dimensional
    array can also be used for monochrome images of any sort. By definition they have
    only one color channel.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种特殊情况是灰度图像，其中每个像素的三个颜色通道的值相同。由于重复存储，因此仅存储一个颜色通道更节省空间，其他通道则隐含。二维数组也可以用于任何类型的单色图像。根据定义，它们只有一个颜色通道。
- en: Let the fun begin
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 让乐趣开始
- en: Now that we can convert an image into an array of floats, we can really go to
    town. Addition, multiplication, and rearranging of pixel values are open to us.
    We can tint and brighten, crop and filter. We can remove errant pixels and even,
    with the help of neural networks, recognize different breeds of dog. All because
    the thing we can see is now in a numerical format.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以将图像转换为浮点数组，我们可以真正大展拳脚。加法、乘法和像素值的重新排列都可以进行。我们可以调整色调和亮度，裁剪和过滤。我们可以去除错误的像素，甚至在神经网络的帮助下识别不同品种的狗。这一切都因为我们可以看到的内容现在是以数字格式存在的。
- en: Far from profaning the image, converting it to numbers pays homage to it. The
    process requires care and a deep respect for the medium. It also requires a lot
    of disk space. An 8 megapixel color image occupies 24 megabytes uncompressed.
    They say a picture is worth a thousand words, but they were wrong on that point.
    It's worth millions.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 转换图像为数字并不会亵渎它，反而是对它的致敬。这个过程需要小心和对媒介的深刻尊重。它还需要大量的磁盘空间。一张 8 兆像素的彩色图像未压缩时占用 24
    兆字节。他们说一张图片胜过千言万语，但这点他们错了。它的价值是百万的。
- en: '[Original](https://brohrer.github.io/images_to_numbers.html). Reposted with
    permission.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://brohrer.github.io/images_to_numbers.html)。经许可转载。'
- en: '**Related:**'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[How to Convert an RGB Image to Grayscale](/2019/12/convert-rgb-image-grayscale.html)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何将 RGB 图像转换为灰度图像](/2019/12/convert-rgb-image-grayscale.html)'
- en: '[How to Use Python’s datetime](/2019/06/how-use-datetime.html)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何使用 Python 的 datetime](/2019/06/how-use-datetime.html)'
- en: '[Data Science Curriculum Roadmap](/2019/12/data-science-curriculum-roadmap.html)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学课程路线图](/2019/12/data-science-curriculum-roadmap.html)'
- en: More On This Topic
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Find a Picture in an Image Without Marking it Up](https://www.kdnuggets.com/2022/09/find-picture-image-without-marking.html)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在不标记的情况下在图像中查找图片](https://www.kdnuggets.com/2022/09/find-picture-image-without-marking.html)'
- en: '[Unlocking the Power of Numbers in Health Economics and Outcomes Research](https://www.kdnuggets.com/2023/07/unlocking-power-numbers-health-economics-outcomes-research.html)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[解锁健康经济学和成果研究中数字的力量](https://www.kdnuggets.com/2023/07/unlocking-power-numbers-health-economics-outcomes-research.html)'
- en: '[How to Convert an RGB Image to Grayscale](https://www.kdnuggets.com/2019/12/convert-rgb-image-grayscale.html)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何将 RGB 图像转换为灰度图像](https://www.kdnuggets.com/2019/12/convert-rgb-image-grayscale.html)'
- en: '[How to Use ChatGPT to Convert Text into a PowerPoint Presentation](https://www.kdnuggets.com/2023/08/chatgpt-convert-text-powerpoint-presentation.html)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何使用 ChatGPT 将文本转换为 PowerPoint 演示文稿](https://www.kdnuggets.com/2023/08/chatgpt-convert-text-powerpoint-presentation.html)'
- en: '[Convert Text Documents to a TF-IDF Matrix with tfidfvectorizer](https://www.kdnuggets.com/2022/09/convert-text-documents-tfidf-matrix-tfidfvectorizer.html)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 tfidfvectorizer 将文本文档转换为 TF-IDF 矩阵](https://www.kdnuggets.com/2022/09/convert-text-documents-tfidf-matrix-tfidfvectorizer.html)'
- en: '[Convert Python Dict to JSON: A Tutorial for Beginners](https://www.kdnuggets.com/convert-python-dict-to-json-a-tutorial-for-beginners)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将 Python 字典转换为 JSON：初学者教程](https://www.kdnuggets.com/convert-python-dict-to-json-a-tutorial-for-beginners)'
