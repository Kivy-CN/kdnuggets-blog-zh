- en: 'Convert Python Dict to JSON: A Tutorial for Beginners'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Python 字典转换为 JSON：初学者教程
- en: 原文：[https://www.kdnuggets.com/convert-python-dict-to-json-a-tutorial-for-beginners](https://www.kdnuggets.com/convert-python-dict-to-json-a-tutorial-for-beginners)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/convert-python-dict-to-json-a-tutorial-for-beginners](https://www.kdnuggets.com/convert-python-dict-to-json-a-tutorial-for-beginners)
- en: '![Convert Python Dict to JSON: A Tutorial for Beginners](../Images/7de3ba9f91c9442043b2613b19bcdda1.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![将 Python 字典转换为 JSON：初学者教程](../Images/7de3ba9f91c9442043b2613b19bcdda1.png)'
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: When building applications in Python, JSON is one of the common data formats
    you’ll work with. And if you’ve ever worked with APIs, you're probably already
    familiar with parsing JSON responses from APIs.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在用 Python 构建应用程序时，JSON 是你将经常使用的数据格式之一。如果你曾经处理过 API，你可能已经熟悉从 API 解析 JSON 响应。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速开启网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织进行 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: As you know, JSON is a text-based format for data interchange, which stores
    data in key-value pairs and is human readable. And Python dictionaries store data
    in key-value pairs. Which makes it intuitive to load JSON strings into dictionaries
    for processing and also dump data from dictionaries into the JSON strings.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所知，JSON 是一种基于文本的数据交换格式，它以键值对的形式存储数据，并且易于人类阅读。Python 字典也是以键值对的形式存储数据。这使得将 JSON
    字符串加载到字典中进行处理以及将字典中的数据转储为 JSON 字符串变得直观。
- en: In this tutorial, we’ll learn how to convert a Python dictionary to JSON using
    the [built-in json module](https://docs.python.org/3/library/json.html). So let's
    start coding!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将学习如何使用 [内置的 json 模块](https://docs.python.org/3/library/json.html)将
    Python 字典转换为 JSON。所以让我们开始编码吧！
- en: Converting a Python Dictionary to a JSON String
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Python 字典转换为 JSON 字符串
- en: To convert a Python dictionary to JSON string, you can use the `dumps()` function
    from the json module. The `dumps()` function takes in a Python object and returns
    the JSON string representation. In practice, however, you’ll need to convert not
    a single dictionary but a collection such as a list of dictionaries.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 Python 字典转换为 JSON 字符串，你可以使用 json 模块中的 `dumps()` 函数。`dumps()` 函数接受一个 Python
    对象，并返回 JSON 字符串表示。然而，实际上你需要转换的不是单个字典，而是一个集合，例如字典列表。
- en: 'So let’s choose such an example. Say we have `books`, a list of dictionaries,
    where each dictionary holds information on a book. So each book record is in a
    Python dictionary with the following keys: title, author, publication_year, and
    genre.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 那么我们来选择一个这样的例子。假设我们有 `books`，这是一个字典列表，每个字典包含一本书的信息。所以每本书的记录都是一个包含以下键的 Python
    字典：title、author、publication_year 和 genre。
- en: 'When calling `json.dumps()`, we set the optional `indent` parameter—the indentation
    in the JSON string as it helps improve readability (yes, pretty printing json
    we are ??):'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在调用 `json.dumps()` 时，我们设置了可选的 `indent` 参数——JSON 字符串中的缩进，这有助于提高可读性（是的，我们在进行 JSON
    的漂亮打印 ??）：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When you run the above code, you should get a similar output:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行上述代码时，你应该会得到类似的输出：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Converting a Nested Python Dictionary to a JSON String
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将嵌套的 Python 字典转换为 JSON 字符串
- en: Next, let’s take a list of nested Python dictionaries and obtain the JSON representation
    of it. Let’s extend the `books` dictionary by adding a “reviews” key. Whose value
    is a list of dictionaries with each dictionary containing information on a review,
    namely, “user”, “rating”, and “comment”.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们以一个嵌套的 Python 字典列表为例，并获取它的 JSON 表示。我们将通过添加一个 “reviews” 键来扩展 `books` 字典。这个键的值是一个字典列表，每个字典包含关于评论的信息，即
    “user”、“rating” 和 “comment”。
- en: 'So we modify the `books` dictionary like so:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们将 `books` 字典修改如下：
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Note that we use the same indent value of 4, and running the script gives the
    following output:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们使用了相同的缩进值 4，运行脚本得到如下输出：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Sorting Keys When Converting a Python Dictionary to JSON
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Python 字典转换为 JSON 时排序键
- en: The `dumps` function has several optional parameters. We’ve already used one
    such optional parameter `indent`.  Another useful parameter is `sort_keys`. This
    is especially helpful when you need to sort the keys of the Python dictionary
    when converting it to JSON
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`dumps` 函数有几个可选参数。我们已经使用了其中一个可选参数 `indent`。另一个有用的参数是 `sort_keys`。当你需要在将 Python
    字典转换为 JSON 时排序键时，这尤其有用。'
- en: Because `sort_keys` is set to `False` by default, so you can set it to `True`
    if you need to sort the keys when converting to JSON.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 因为 `sort_keys` 默认为 `False`，所以如果你需要在转换为 JSON 时排序键，可以将其设置为 `True`。
- en: 'Here’s a simple `person` dictionary:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的 `person` 字典：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'As seen, the keys are sorted in alphabetical order:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如所示，键按字母顺序排序：
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Handling Non-Serializable Data
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理不可序列化的数据
- en: In the examples we’ve coded so far, the keys and values of the dictionary are
    all JSON serializable. The values were all strings or integers to be specific.
    But this may not always be the case. Some common non-serializable data types include
    `datetime`, `Decimal`, and `set`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们到目前为止编写的示例中，字典的键和值都是 JSON 可序列化的。具体来说，值都是字符串或整数。但情况可能并非总是如此。一些常见的不可序列化数据类型包括
    `datetime`、`Decimal` 和 `set`。
- en: No worries, though. You can handle such non-serializable data types by defining
    custom serialization functions for those data types. And then setting the `default`
    parameter of `json.dumps()` to the custom functions you define.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 不用担心。你可以通过为这些数据类型定义自定义序列化函数来处理不可序列化的数据类型。然后将 `json.dumps()` 的 `default` 参数设置为你定义的自定义函数。
- en: These custom serialization functions should convert the non-serializable data
    into a JSON-serializable format (who would’ve guessed!).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这些自定义序列化函数应该将不可序列化的数据转换为 JSON 可序列化的格式（谁能猜到呢！）。
- en: 'Here’s a simple `data` dictionary:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的 `data` 字典：
- en: '[PRE6]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We’ve used `json.dumps()` as before, so we’ll run into the following TypeError
    exception:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们像以前一样使用了 `json.dumps()`，所以我们会遇到以下 TypeError 异常：
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The relevant part of the error is: Object of type datetime is not JSON serializable.
    Okay, now let’s do the following:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 错误的相关部分是：对象类型 datetime 不能被 JSON 序列化。好吧，现在我们做以下操作：
- en: Define a `serialize_datetime` function that converts `datetime` objects to ISO
    8601 format using the `isoformat()` method.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义一个 `serialize_datetime` 函数，将 `datetime` 对象转换为 ISO 8601 格式，使用 `isoformat()`
    方法。
- en: When calling `json.dumps()`, we set the `default` parameter to the `serialize_datetime`
    function.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在调用 `json.dumps()` 时，我们将 `default` 参数设置为 `serialize_datetime` 函数。
- en: 'So the code looks as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 所以代码如下：
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'And here’s the output:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是输出结果：
- en: '[PRE9]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Conclusion
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: And there you have it!
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！
- en: 'To recap: we went over converting a Python dictionary to JSON, and using the
    `indent` and `sort_keys` parameters as needed. We also learned how to handle JSON
    serialization errors.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下：我们讨论了将 Python 字典转换为 JSON，并根据需要使用 `indent` 和 `sort_keys` 参数。我们还学习了如何处理 JSON
    序列化错误。
- en: You can find the code examples [on GitHub](https://github.com/balapriyac/python-basics/tree/main/dict-to-json).
    I’ll see you all in another tutorial. Until then, keep coding!
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 [GitHub](https://github.com/balapriyac/python-basics/tree/main/dict-to-json)
    上找到代码示例。我会在另一个教程中见到大家。在那之前，继续编码吧！
- en: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)****
    is a developer and technical writer from India. She likes working at the intersection
    of math, programming, data science, and content creation. Her areas of interest
    and expertise include DevOps, data science, and natural language processing. She
    enjoys reading, writing, coding, and coffee! Currently, she''s working on learning
    and sharing her knowledge with the developer community by authoring tutorials,
    how-to guides, opinion pieces, and more. Bala also creates engaging resource overviews
    and coding tutorials.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)****
    是一位来自印度的开发者和技术作者。她喜欢在数学、编程、数据科学和内容创作的交汇点工作。她的兴趣和专长领域包括 DevOps、数据科学和自然语言处理。她喜欢阅读、写作、编码和喝咖啡！目前，她正在通过编写教程、操作指南、观点文章等，学习并与开发者社区分享她的知识。Bala
    还创建了引人入胜的资源概述和编码教程。'
- en: More On This Topic
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Convert Bytes to String in Python: A Tutorial for Beginners](https://www.kdnuggets.com/convert-bytes-to-string-in-python-a-tutorial-for-beginners)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将字节转换为字符串：初学者教程](https://www.kdnuggets.com/convert-bytes-to-string-in-python-a-tutorial-for-beginners)'
- en: '[How to Convert JSON Data into a DataFrame with Pandas](https://www.kdnuggets.com/how-to-convert-json-data-into-a-dataframe-with-pandas)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何将 JSON 数据转换为 Pandas 数据框](https://www.kdnuggets.com/how-to-convert-json-data-into-a-dataframe-with-pandas)'
- en: '[How To Write Efficient Python Code: A Tutorial for Beginners](https://www.kdnuggets.com/how-to-write-efficient-python-code-a-tutorial-for-beginners)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何编写高效的 Python 代码：初学者教程](https://www.kdnuggets.com/how-to-write-efficient-python-code-a-tutorial-for-beginners)'
- en: '[How to Convert an RGB Image to Grayscale](https://www.kdnuggets.com/2019/12/convert-rgb-image-grayscale.html)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何将 RGB 图像转换为灰度图像](https://www.kdnuggets.com/2019/12/convert-rgb-image-grayscale.html)'
- en: '[How to Use ChatGPT to Convert Text into a PowerPoint Presentation](https://www.kdnuggets.com/2023/08/chatgpt-convert-text-powerpoint-presentation.html)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何使用 ChatGPT 将文本转换为 PowerPoint 演示文稿](https://www.kdnuggets.com/2023/08/chatgpt-convert-text-powerpoint-presentation.html)'
- en: '[Convert Text Documents to a TF-IDF Matrix with tfidfvectorizer](https://www.kdnuggets.com/2022/09/convert-text-documents-tfidf-matrix-tfidfvectorizer.html)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将文本文件转换为 TF-IDF 矩阵，使用 tfidfvectorizer](https://www.kdnuggets.com/2022/09/convert-text-documents-tfidf-matrix-tfidfvectorizer.html)'
