["```py\n!pip install numerizer\n```", "```py\n#importing numerize library\nfrom numerizer import numerize#examplesprint(numerize(‘Eight fifty million’))\nprint(numerize(‘one two three’))\nprint(numerize(‘Fifteen hundred’))\nprint(numerize(‘Three hundred and Forty five’))\nprint(numerize(‘Six and one quarter’))\nprint(numerize(‘Jack is having fifty million’))\nprint(numerize(‘Three hundred billion’))\n```", "```py\n!pip install missingno\n```", "```py\n# importing necessary libraries\nimport pandas as pd \nimport missingno as mi\n# reading the dummy dataset\ndata = pd.read_excel(“dummy.xlsx”)\n# checking missing values\ndata.isnull().sum() \n```", "```py\n #Visualizing using missingno\nprint(“Visualizing missing value using bar graph”)\nmi.bar(data, figsize = (10,5))\nprint(“Visualizing missing value using matrix”)\nmi.matrix(data, figsize = (10,5)) \n```", "```py\n !pip install faker\n```", "```py\n **# Generating fake email**\nprint (fake.email()) \n**# Generating fake country name**\nprint(fake.country()) \n**# Generating fake name**\nprint(fake.name()) \n**# Generating fake text**\nprint(fake.text()) \n**# Generating fake lat and lon**\nprint(fake.latitude(), fake.longitude())\n**# Generating fake url**\nprint(fake.url()) \n**# Generating fake profile**\nprint(fake.profile())\n**# Generating random number**\nprint(fake.random_number()) \n```", "```py\n!pip install emot\n```", "```py\n **#Importing libraries**\nimport re\nfrom emot.emo_unicode import UNICODE_EMO, EMOTICONS**# Function for converting emojis into word**\ndef convert_emojis(text):\n    for emot in UNICODE_EMO:\n        text = text.replace(emot, \"_\".join(UNICODE_EMO[emot].replace(\",\",\"\").replace(\":\",\"\").split()))\n    return text**# Example**\ntext1 = \"Hilarious ????. The feeling of making a sale ????, The feeling of actually fulfilling orders ????\"\nconvert_emojis(text1) \n```", "```py\n‘Hilarious **face_with_tears_of_joy**. The feeling of making a sale **smiling_face_with_sunglasses**, The feeling of actually fulfilling orders **unamused_face**’\n```", "```py\n**# Function for converting emoticons into word**\ndef convert_emoticons(text):\n    for emot in EMOTICONS:\n        text = re.sub(u'('+emot+')', \"_\".join(EMOTICONS[emot].replace(\",\",\"\").split()), text)\n    return text**# Example**\ntext = \"Hello :-) :-)\"\nconvert_emoticons(text) \n```", "```py\n'Hello **Happy_face_smiley** **Happy_face_smiley'**\n```", "```py\n!pip install chartify\n```", "```py\n# importing necessary libraryimport numpy as np\nimport pandas as pd\nimport chartify\n#loading example dataset from chartify\ndata = chartify.examples.example_data()\ndata.head()\n```", "```py\n# Calculating total quanity for each fruits\nquantity_by_fruit = (data.groupby(‘fruit’)[‘quantity’].sum().reset_index())\nch = chartify.Chart(blank_labels=True, x_axis_type=’categorical’)\nch.set_title(“Vertical bar plot”)\nch.set_subtitle(“Automatically sorts by value counts.”)\nch.plot.bar(\n data_frame=quantity_by_fruit,\n categorical_columns=’fruit’,\n numeric_column=’quantity’)\nch.show()\n```"]