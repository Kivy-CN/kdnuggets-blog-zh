["```py\nimport numpy as np\nimport pylab as pl\n\nx = np.random.uniform(1, 100, 1000)\ny = np.log(x) + np.random.normal(0, .3, 1000)\n\npl.scatter(x, y, s=1, label=\"log(x) with noise\")\npl.plot(np.arange(1, 100), np.log(np.arange(1, 100)), c=\"b\", label=\"log(x) true function\")\npl.xlabel(\"x\")\npl.ylabel(\"f(x) = log(x)\")\npl.legend(loc=\"best\")\npl.title(\"A Basic Log Function\")\npl.show()\n```", "```py\nfrom sklearn.datasets import load_iris\nfrom sklearn.ensemble import RandomForestClassifier\nimport pandas as pd\nimport numpy as np\n\niris = load_iris()\ndf = pd.DataFrame(iris.data, columns=iris.feature_names)\ndf['is_train'] = np.random.uniform(0, 1, len(df)) <= .75\ndf['species'] = pd.Categorical.from_codes(iris.target, iris.target_names)\ndf.head()\n\ntrain, test = df[df['is_train']==True], df[df['is_train']==False]\n\nfeatures = df.columns[:4]\nclf = RandomForestClassifier(n_jobs=2)\ny, _ = pd.factorize(train['species'])\nclf.fit(train[features], y)\n\npreds = iris.target_names[clf.predict(test[features])]\npd.crosstab(test['species'], preds, rownames=['actual'], colnames=['preds'])\n```"]