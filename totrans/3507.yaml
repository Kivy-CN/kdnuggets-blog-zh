- en: 7 Steps to Mastering Machine Learning With Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2015/11/seven-steps-machine-learning-python.html/2](https://www.kdnuggets.com/2015/11/seven-steps-machine-learning-python.html/2)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Step 4: Getting Started with Machine Learning in Python'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Python. *Check*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Machine learning fundamentals. *Check.*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numpy. *Check.*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas. *Check.*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matplotlib. *Check.*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The time has come. Let's start implementing machine learning algorithms with
    Python's *de facto* standard machine learning library, scikit-learn.
  prefs: []
  type: TYPE_NORMAL
- en: '![scikit-learn Flow Chart](../Images/481115fc1e34c879fe8bf66dd936be66.png)'
  prefs: []
  type: TYPE_IMG
- en: The scikit-learn flow chart.
  prefs: []
  type: TYPE_NORMAL
- en: Many of the following tutorials and exercises will be driven by the iPython
    (Jupyter) Notebook, which is an interactive environment for executing Python.
    These iPython notebooks can optionally be viewed online or downloaded and interacted
    with locally on your own computer.
  prefs: []
  type: TYPE_NORMAL
- en: '[iPython Notebook Overview](http://cs231n.github.io/ipython-tutorial/) from
    Stanford'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Also note that the tutorials below are from a number of online sources. All
    Notebooks have been attributed to the authors; if, for some reason, you find that
    someone has not been properly credited for their work, [please let me know](https://twitter.com/mattmayo13)
    and the situation will be rectified ASAP. In particular, I would like to tip my
    hat to [Jake VanderPlas](http://www.astro.washington.edu/users/vanderplas/), [Randal
    Olson](http://www.randalolson.com/), [Donne Martin](http://donnemartin.com/),
    [Kevin Markham](https://twitter.com/justmarkham), and [Colin Raffel](http://www.colinraffel.com/)
    for their fantastic freely-available resources.
  prefs: []
  type: TYPE_NORMAL
- en: Our first tutorials for getting our feet wet with scikit-learn follow. I suggest
    doing all of these in order before moving to the following steps.
  prefs: []
  type: TYPE_NORMAL
- en: 'A general introduction to scikit-learn, Python''s most-used general purpose
    machine learning library, covering the k-nearest neighbors algorithm:'
  prefs: []
  type: TYPE_NORMAL
- en: '[An Introduction to scikit-learn](http://nbviewer.ipython.org/github/donnemartin/data-science-ipython-notebooks/blob/master/scikit-learn/scikit-learn-intro.ipynb),
    by Jake VanderPlas'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A more in-depth and expanded introduction, including a starter project with
    a well-known dataset from start to finish:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Example Machine Learning Notebook](http://nbviewer.ipython.org/github/rhiever/Data-Analysis-and-Machine-Learning-Projects/blob/master/example-data-science-notebook/Example%20Machine%20Learning%20Notebook.ipynb),
    by Randal Olson'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A focus on strategies for evaluating different models in scikit-learn, covering
    train/test dataset splits:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Model Evaluation](https://github.com/justmarkham/scikit-learn-videos/blob/master/05_model_evaluation.ipynb),
    by Kevin Markham'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Step 5: Machine Learning Topics with Python'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'With a foundation having been laid in scikit-learn, we can move on to some
    more in-depth explorations of the various common, and useful, algorithms. We start
    with k-means clustering, one of the most well-known machine learning algorithms.
    It is a simple and often effective method for solving unsupervised learning problems:'
  prefs: []
  type: TYPE_NORMAL
- en: '[k-means Clustering](https://github.com/jakevdp/sklearn_pycon2015/blob/master/notebooks/04.2-Clustering-KMeans.ipynb),
    by Jake VanderPlas'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Next, we move back toward classification, and take a look at one of the most
    historically popular classification methods:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Decision Trees](http://thegrimmscientist.com/2014/10/23/tutorial-decision-trees/)
    via [The Grimm Scientist](http://thegrimmscientist.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'From classification, we look at continuous numeric prediction:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Linear Regression](http://nbviewer.ipython.org/github/donnemartin/data-science-ipython-notebooks/blob/master/scikit-learn/scikit-learn-linear-reg.ipynb),
    by Jake VanderPlas'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We can then leverage regression for classification problems, via logistic regression:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Logistic Regression](http://nbviewer.ipython.org/github/justmarkham/gadsdc1/blob/master/logistic_assignment/kevin_logistic_sklearn.ipynb),
    by Kevin Markham'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Step 6: Advanced Machine Learning Topics with Python'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We've gotten our feet wet with scikit-learn, and now we turn our attention to
    some more advanced topics. First up are support vector machines, a not-necessarily-linear
    classifier relying on complex transformations of data into higher dimensional
    space.
  prefs: []
  type: TYPE_NORMAL
- en: '[Support Vector Machines](https://github.com/jakevdp/sklearn_pycon2015/blob/master/notebooks/03.1-Classification-SVMs.ipynb),
    by Jake VanderPlas'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Next, random forests, an ensemble classifier, are examined via a [Kaggle Titanic
    Competition](https://www.kaggle.com/c/titanic) walk-through:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Kaggle Titanic Competition (with Random Forests)](http://nbviewer.ipython.org/github/donnemartin/data-science-ipython-notebooks/blob/master/kaggle/titanic.ipynb),
    by Donne Martin'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Dimensionality reduction is a method for reducing the number of variables being
    considered in a problem. Principal Component Analysis is a particular form of
    unsupervised dimensionality reduction:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Dimensionality Reduction](https://github.com/jakevdp/sklearn_pycon2015/blob/master/notebooks/04.1-Dimensionality-PCA.ipynb),
    by Jake VanderPlas'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Before moving on to the final step, we can take a moment to consider that we
    have come a long way in a relatively short period of time.
  prefs: []
  type: TYPE_NORMAL
- en: Using Python and its machine learning libraries, we have covered some of the
    most common and well-known machine learning algorithms (k-nearest neighbors, k-means
    clustering, support vector machines), investigated a powerful ensemble technique
    (random forests), and examined some additional machine learning support tasks
    (dimensionality reduction, model validation techniques). Along with some foundational
    machine learning skills, we have started filling a useful toolkit for ourselves.
  prefs: []
  type: TYPE_NORMAL
- en: We will add one more in-demand tool to that kit before wrapping up.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 7: Deep Learning in Python'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Deep Learning is everywhere!](../Images/72a09e8266e2645f59f5f8fb58906cfc.png)'
  prefs: []
  type: TYPE_IMG
- en: The learning is deep.
  prefs: []
  type: TYPE_NORMAL
- en: Deep learning is everywhere! Deep learning builds on neural network research
    going back several decades, but recent advances dating to the past several years
    have dramatically increased the perceived power of, and general interest in, deep
    neural networks. If you are unfamiliar with deep learning, [KDnuggets has many
    articles](/?s=deep+learning) detailing the numerous recent innovations, accomplishments,
    and accolades of the technology.
  prefs: []
  type: TYPE_NORMAL
- en: 'This final step does not purport to be a deep learning clinic of any sort;
    we will take a look at a few simple network implementations in 2 of the leading
    contemporary Python deep learning libraries. For those interested in digging deeper
    into deep learning, I recommend starting with the following free online book:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Neural Networks and Deep Learning](http://neuralnetworksanddeeplearning.com/)
    by [Michael Nielsen](http://michaelnielsen.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Theano**](http://deeplearning.net/software/theano/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Theano is the first Python deep learning library we will look at. From the
    authors:'
  prefs: []
  type: TYPE_NORMAL
- en: Theano is a Python library that allows you to define, optimize, and evaluate
    mathematical expressions involving multi-dimensional arrays efficiently.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'The following introductory tutorial on deep learning in Theano is lengthy,
    but it is quite good, very descriptive, and heavily-commented:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Theano Deep Learning Tutorial](http://nbviewer.ipython.org/github/craffel/theano-tutorial/blob/master/Theano%20Tutorial.ipynb),
    by [Colin Raffel](http://www.colinraffel.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Caffe**](http://caffe.berkeleyvision.org/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The other library we will test drive is Caffe. Again, from the authors:'
  prefs: []
  type: TYPE_NORMAL
- en: Caffe is a deep learning framework made with expression, speed, and modularity
    in mind. It is developed by the Berkeley Vision and Learning Center (BVLC) and
    by community contributors.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'This tutorial is the cherry on the top of this article. While we have undertaken
    a few interesting examples above, none likely compete with the following, which
    is implementing [Google''s #DeepDream](http://googleresearch.blogspot.ch/2015/06/inceptionism-going-deeper-into-neural.html)
    using Caffe. Enjoy this one! After understanding the tutorial, play around with
    it to get your processors dreaming on their own.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Dreaming Deep with Caffe](https://github.com/google/deepdream/blob/master/dream.ipynb)
    via [Google''s GitHub](https://github.com/google)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I didn't promise it would be quick or easy, but if you put the time in and follow
    the above 7 steps, there is no reason that you won't be able to claim reasonable
    proficiency and understanding in a number of machine learning algorithms and their
    implementation in Python using its popular libraries, including some of those
    on the cutting edge of current deep learning research.
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Matthew Mayo](https://twitter.com/mattmayo13)** is a computer science
    graduate student currently working on his thesis parallelizing machine learning
    algorithms. He is also a student of data mining, a data enthusiast, and an aspiring
    machine learning scientist.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Top 20 Data Science MOOCs](/2015/09/top-20-data-science-moocs.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[60+ Free Books on Big Data, Data Science, Data Mining, Machine Learning, Python,
    R, and more](/2015/09/free-data-science-books.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[15 Mathematics MOOCs for Data Science](/2015/09/15-math-mooc-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering Machine Learning with Python in 2022](https://www.kdnuggets.com/2022/02/7-steps-mastering-machine-learning-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets™ News 22:n05, Feb 2: 7 Steps to Mastering Machine…](https://www.kdnuggets.com/2022/n05.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering Python for Data Science](https://www.kdnuggets.com/2022/06/7-steps-mastering-python-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering Data Wrangling with Pandas and Python](https://www.kdnuggets.com/7-steps-to-mastering-data-wrangling-with-pandas-and-python)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering Data Cleaning with Python and Pandas](https://www.kdnuggets.com/7-steps-to-mastering-data-cleaning-with-python-and-pandas)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering SQL for Data Science](https://www.kdnuggets.com/2022/04/7-steps-mastering-sql-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
