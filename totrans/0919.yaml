- en: How to Effectively Use Pandas GroupBy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/01/effectively-pandas-groupby.html](https://www.kdnuggets.com/2023/01/effectively-pandas-groupby.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Pandas is a powerful and widely-used open-source library for data manipulation
    and analysis using Python. One of its key features is the ability to group data
    using the groupby function by splitting a DataFrame into groups based on one or
    more columns and then applying various aggregation functions to each one of them.
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Effectively Use Pandas GroupBy](../Images/879f79de072a25cc8d7dcf4ed4c20a83.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from [Unsplash](https://unsplash.com/photos/_9a-3NO5KJE)
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: The `groupby` function is incredibly powerful, as it allows you to quickly summarize
    and analyze large datasets. For example, you can group a dataset by a specific
    column and calculate the mean, sum, or count of the remaining columns for each
    group. You can also group by multiple columns to get a more granular understanding
    of your data. Additionally, it allows you to apply custom aggregation functions,
    which can be a very powerful tool for complex data analysis tasks.
  prefs: []
  type: TYPE_NORMAL
- en: In this tutorial, you will learn how to use the groupby function in Pandas to
    group different types of data and perform different aggregation operations. By
    the end of this tutorial, you should be able to use this function to analyze and
    summarize data in various ways.
  prefs: []
  type: TYPE_NORMAL
- en: Hands-On Code Examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Concepts are internalized when practiced well and this is what we are going
    to do next i.e. get hands-on with Pandas groupby function. It is recommended to
    use a [Jupyter Notebook](https://jupyter.org/) for this tutorial as you are able
    to see the output at each step.
  prefs: []
  type: TYPE_NORMAL
- en: Generate Sample Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Import the following libraries:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Pandas: To create a dataframe and apply group by'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Random - To generate random data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pprint - To print dictionaries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we will initialize an empty dataframe and fill in values for each column
    as shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Bonus tip – a cleaner way to do the same task is by creating a dictionary of
    all variables and values and later converting it to a dataframe.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The dataframe looks like the one shown below. When running this code, some of
    the values won’t match as we are using a random sample.
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Effectively Use Pandas GroupBy](../Images/60567c4eba6d039fbeee0ec6f5df1ca1.png)'
  prefs: []
  type: TYPE_IMG
- en: Making Groups
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s group the data by the “Major” subject and apply the group filter to see
    how many records fall into this group.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: So, four students belong to the Electrical Engineering major.
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Effectively Use Pandas GroupBy](../Images/1a5918b5b870497bb38c450cbeac5a5d.png)'
  prefs: []
  type: TYPE_IMG
- en: You can also group by more than one column (Major and num_add_sbj in this case).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Note that all the aggregate functions that can be applied to groups with one
    column can be applied to groups with multiple columns. For the rest of the tutorial,
    let’s focus on the different types of aggregations using a single column as an
    example.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s create groups using groupby on the “Major” column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Applying Direct Functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s say you want to find the average marks in each Major. What would you do?
  prefs: []
  type: TYPE_NORMAL
- en: Choose Marks column
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apply mean function
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apply round function to round off marks to two decimal places (optional)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Aggregate
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Another way to achieve the same result is by using an aggregate function as
    shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: You can also apply multiple aggregations to the groups by passing the functions
    as a list of strings.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![How to Effectively Use Pandas GroupBy](../Images/ab37326bb82a68c07d628410297a4895.png)'
  prefs: []
  type: TYPE_IMG
- en: 'But what if you need to apply a different function to a different column. Don’t
    worry. You can also do that by passing {column: function} pair.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '![How to Effectively Use Pandas GroupBy](../Images/2ed28413582b51776378cf5af557fc17.png)'
  prefs: []
  type: TYPE_IMG
- en: Transforms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You may very well need to perform custom transformations to a particular column
    which can be easily achieved using groupby(). Let’s define a standard scalar similar
    to the one available in sklearn’s preprocessing module. You can transform all
    the columns by calling the transform method and passing the custom function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '![How to Effectively Use Pandas GroupBy](../Images/5b0d46f642b0c1b03290ae8809752001.png)'
  prefs: []
  type: TYPE_IMG
- en: Note that “NaN” represents groups with zero standard deviation.
  prefs: []
  type: TYPE_NORMAL
- en: Filter
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You may want to check which “Major” is underperforming i.e. the one where average
    student “Marks” are less than 60\. It requires you to apply a filter method to
    groups with a function inside it. The below code uses a [lambda function](/2023/01/python-lambda-functions-explained.html)
    to achieve the filtered results.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '![How to Effectively Use Pandas GroupBy](../Images/fa2ab6e7d1ff79db689a9143e56d3f92.png)'
  prefs: []
  type: TYPE_IMG
- en: First
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It gives you its first instance sorted by index.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '![How to Effectively Use Pandas GroupBy](../Images/6b33f5b854a68e6d80ac7805244e1a35.png)'
  prefs: []
  type: TYPE_IMG
- en: Describe
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The “describe” method returns basic statistics like count, mean, std, min, max,
    etc. for the given columns.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '![How to Effectively Use Pandas GroupBy](../Images/ced1ca2d73e200609134a1ee14a3779b.png)'
  prefs: []
  type: TYPE_IMG
- en: Size
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Size, as the name suggests, returns the size of each group in terms of the number
    of records.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Count and Nunique
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: “Count” returns all values whereas “Nunique” returns only the unique values
    in that group.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '![How to Effectively Use Pandas GroupBy](../Images/603e4e537e29626e3efea386b1d5afef.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '![How to Effectively Use Pandas GroupBy](../Images/ea473d0a224cf4a05b25cd20778995f9.png)'
  prefs: []
  type: TYPE_IMG
- en: Rename
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can also rename the aggregated columns' name as per your preference.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '![How to Effectively Use Pandas GroupBy](../Images/bdfd7daf7a367cc9b644c1556a8454db.png)'
  prefs: []
  type: TYPE_IMG
- en: Get most out of the groupby Function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Be clear on the purpose of the groupby:** Are you trying to group the data
    by one column to get the mean of another column? Or are you trying to group the
    data by multiple columns to get the count of the rows in each group?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Understand the indexing of the data frame:** The groupby function uses the
    index to group the data. If you want to group the data by a column, make sure
    that the column is set as the index or you can use .set_index()'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Use the appropriate aggregate function**: It can be used with various aggregation
    functions like mean(), sum(), count(), min(), max()'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Use the as_index parameter:** When set to False, this parameter tells pandas
    to use the grouped columns as regular columns instead of index.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can also use groupby() in conjunction with other pandas functions like pivot_table(),
    crosstab(), and cut() to extract more insights from your data.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A groupby function is a powerful tool for data analysis and manipulation as
    it allows you to group rows of data based on one or more columns and then perform
    aggregate calculations on the groups. The tutorial demonstrated various ways to
    use the groupby function with the help of code examples. Hope it provides you
    with an understanding of the different options that come with it and also how
    they help in the data analysis.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Vidhi Chugh](https://vidhi-chugh.medium.com/)** is an AI strategist and
    a digital transformation leader working at the intersection of product, sciences,
    and engineering to build scalable machine learning systems. She is an award-winning
    innovation leader, an author, and an international speaker. She is on a mission
    to democratize machine learning and break the jargon for everyone to be a part
    of this transformation.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Data Analytics: The Four Approaches to Analyzing Data and How To…](https://www.kdnuggets.com/2023/04/data-analytics-four-approaches-analyzing-data-effectively.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How To Use Docker Tags to Manage Image Versions Effectively](https://www.kdnuggets.com/how-to-use-docker-tags-to-manage-image-versions-effectively)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data Visualization: Presenting Complex Information Effectively](https://www.kdnuggets.com/data-visualization-presenting-complex-information-effectively)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Use Conditional Formatting in Pandas to Enhance Data Visualization](https://www.kdnuggets.com/how-to-use-conditional-formatting-in-pandas-to-enhance-data-visualization)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Use the pivot_table Function for Advanced Data Summarization…](https://www.kdnuggets.com/how-to-use-the-pivot_table-function-for-advanced-data-summarization-in-pandas)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Use MultiIndex for Hierarchical Data Organization in Pandas](https://www.kdnuggets.com/how-to-use-multiindex-for-hierarchical-data-organization-in-pandas)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
