- en: 'Managing Machine Learning Workflows with Scikit-learn Pipelines Part 3: Multiple
    Models, Pipelines, and Grid Searches'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理机器学习工作流程与Scikit-learn管道 第3部分：多个模型、管道和网格搜索
- en: 原文：[https://www.kdnuggets.com/2018/01/managing-machine-learning-workflows-scikit-learn-pipelines-part-3.html](https://www.kdnuggets.com/2018/01/managing-machine-learning-workflows-scikit-learn-pipelines-part-3.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2018/01/managing-machine-learning-workflows-scikit-learn-pipelines-part-3.html](https://www.kdnuggets.com/2018/01/managing-machine-learning-workflows-scikit-learn-pipelines-part-3.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](#comments)'
- en: First, I know that I promised we would be past the toy datasets last post, but
    for comparison purposes we will be sticking with iris for a bit longer. I think
    it's best we are able to still compare apples to apples throughout our entire
    process.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我知道我在上篇文章中承诺我们会结束玩具数据集，但为了比较目的，我们将继续使用鸢尾花数据集。我认为我们应该在整个过程中保持一致，进行“苹果对苹果”的比较。
- en: '![Header image](../Images/d7c978b124395772dd8df1743b133d2b.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![头图](../Images/d7c978b124395772dd8df1743b133d2b.png)'
- en: 'Thus far, in the previous 2 posts, we have:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在前两篇文章中，我们已经：
- en: Introduced Scikit-learn piplines
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍了Scikit-learn管道
- en: Demonstrated their basic usage by creating and comparing some pipelines
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过创建和比较一些管道，展示了它们的基本用法。
- en: Introduced grid search
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍了网格搜索
- en: Demonstrated how pipelines and grid search work together by using grid search
    to find optimized hyperparameters, which was then apply to an embedded pipeline
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用网格搜索来寻找优化的超参数，并将其应用到嵌入式管道中，展示了管道和网格搜索如何协同工作。
- en: 'Here''s what we plan to do moving forward:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是我们计划继续的内容：
- en: In this post, we will be using grid search to optimize models built from a number
    of different types estimators, which we will then compare
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将使用网格搜索来优化由多种不同类型的估算器构建的模型，然后对这些模型进行比较。
- en: In the follow-up post, we will pivot toward using automated machine learning
    techniques to assist in the optimization of model hyperparameters, the end result
    of which will be an automatically generated, optimized Scikit-learn pipeline script
    file, courtesy of [TPOT](https://github.com/EpistasisLab/tpot)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在后续文章中，我们将转向使用自动化机器学习技术来协助优化模型超参数，最终结果将是一个自动生成的、优化的Scikit-learn管道脚本文件，由[TPOT](https://github.com/EpistasisLab/tpot)提供。
- en: There won't be much to re-explain this time; I recommend that you read [the
    first post in this series](/2017/12/managing-machine-learning-workflows-scikit-learn-pipelines-part-1.html)
    to get a gentle introduction to pipelines in Scikit-learn, and [the second post
    in this series](/2018/01/managing-machine-learning-workflows-scikit-learn-pipelines-part-2.html)
    for an overview of integrating grid search into your pipelines. What we will now
    do is build a series of pipelines of different estimators, using grid search for
    hyperparameter optimization, after which we will compare these various apples
    and oranges to determine the most accurate ("best") model.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这次不会有太多需要重新解释的内容；我建议你阅读[本系列的第一篇文章](/2017/12/managing-machine-learning-workflows-scikit-learn-pipelines-part-1.html)以获得Scikit-learn管道的入门介绍，并阅读[本系列的第二篇文章](/2018/01/managing-machine-learning-workflows-scikit-learn-pipelines-part-2.html)以了解如何将网格搜索集成到管道中。我们现在要做的是构建一系列不同估算器的管道，使用网格搜索进行超参数优化，然后比较这些不同的“苹果与橙子”以确定最准确的（“最佳”）模型。
- en: The code below is well-commented, and if you have read the first 2 installments
    should be easy to follow.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码注释良好，如果你已经阅读了前两篇文章，应该容易跟随。
- en: Note that there is a lot of opportunity for refactoring here. For example, each
    pipeline is defined explicitly, whereas a simple function could be used as a generator
    instead; the same goes for grid search objects. The longer form, again, hopefully
    allows for some better apples to apples comparisons in our next post.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这里有很多重构的机会。例如，每个管道都被显式地定义，而可以使用一个简单的函数作为生成器；网格搜索对象也是如此。长形式的代码希望在下一篇文章中提供更好的“苹果对苹果”比较。
- en: Let's try it out.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们试试看。
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'And here''s the output:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是输出结果：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Note, importantly, that after we fit our estimators, we then tested each resulting
    model with best parameters of each of the 6 grid searches on our test dataset.
    This is not something we did last post, though we were comparing different models
    to one another, but given the introduction to other concepts the otherwise crucial
    step of comparing different models on previously unseen test data was overlooked
    until now. And our example proves why this step is necessary.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是，在我们拟合估计器后，我们测试了每个网格搜索的最佳参数在测试数据集上的效果。这是我们在上一篇文章中没有做的，尽管我们在比较不同模型，但鉴于引入了其他概念，之前关键的步骤——在之前未见的测试数据上比较不同模型——直到现在才被忽略。我们的例子证明了这一步骤的必要性。
- en: Shown above, the model which performed the "best" on our training data (highest
    training accuracy) was the support vector machine (without PCA), with the linear
    kernel and C value of 3 ([controlling the amount of regularization](http://scikit-learn.org/stable/auto_examples/svm/plot_svm_scale_c.html)),
    which learned how to accurately classify 96.7% of training instances. **However**,
    the model which performed best on the test data (the 20% of our dataset previously
    unseen to all models until after they were trained) was the random forest (without
    PCA), using the Gini criterion, minimum samples split of 2, max depth of 3, and
    minimum samples per leaf of 2, which managed to accurately classify 100% of the
    unseen data instances. Note that this model had a lower training accuracy of 94.2%.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所示，**在我们的训练数据中表现“最佳”的模型**是支持向量机（不使用 PCA），使用线性核和 C 值为 3（[控制正则化量](http://scikit-learn.org/stable/auto_examples/svm/plot_svm_scale_c.html)），它能够准确分类
    96.7% 的训练实例。然而，**在测试数据中表现最佳的模型**（我们数据集中20%在训练后对所有模型都是未见过的数据）是随机森林（不使用 PCA），使用基尼标准，最小样本分裂数为
    2，最大深度为 3，叶节点的最小样本数为 2，能够准确分类 100% 的未见数据实例。请注意，该模型的训练准确率较低，为 94.2%。
- en: So, beyond seeing how we can mix and match a variety of different estimator
    types, grid search parameter combinations, and data transformations, as well as
    how to accurately compare the trained models, it should be apparent that evaluating
    different models should always include testing them on previously unseen holdout
    data.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，除了观察我们如何混合和匹配各种不同的估计器类型、网格搜索参数组合和数据转换，以及如何准确比较训练后的模型外，显然评估不同模型时应始终包括在之前未见的保留数据上进行测试。
- en: Sick of pipelines yet? Next time we'll look at an alternative approach to automating
    their construction.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 对管道感到厌倦了吗？下次我们将探讨一种替代的方法来自动化它们的构建。
- en: '**Related:**'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Managing Machine Learning Workflows with Scikit-learn Pipelines Part 1: A
    Gentle Introduction](/2017/12/managing-machine-learning-workflows-scikit-learn-pipelines-part-1.html)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Scikit-learn 管理机器学习工作流第 1 部分：简要介绍](/2017/12/managing-machine-learning-workflows-scikit-learn-pipelines-part-1.html)'
- en: '[Managing Machine Learning Workflows with Scikit-learn Pipelines Part 2: Integrating
    Grid Search](/2018/01/managing-machine-learning-workflows-scikit-learn-pipelines-part-2.html)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Scikit-learn 管理机器学习工作流第 2 部分：整合网格搜索](/2018/01/managing-machine-learning-workflows-scikit-learn-pipelines-part-2.html)'
- en: '[Using Genetic Algorithm for Optimizing Recurrent Neural Networks](/2018/01/genetic-algorithm-optimizing-recurrent-neural-network.html)'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用遗传算法优化递归神经网络](/2018/01/genetic-algorithm-optimizing-recurrent-neural-network.html)'
- en: '* * *'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业道路。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你组织的 IT 工作'
- en: '* * *'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关主题
- en: '[Hyperparameter Tuning Using Grid Search and Random Search in Python](https://www.kdnuggets.com/2022/10/hyperparameter-tuning-grid-search-random-search-python.html)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用网格搜索和随机搜索进行超参数调优的 Python 实践](https://www.kdnuggets.com/2022/10/hyperparameter-tuning-grid-search-random-search-python.html)'
- en: '[How to Manage Multiple Inheritance in Python](https://www.kdnuggets.com/2022/03/manage-multiple-inheritance-python.html)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何在Python中管理多重继承](https://www.kdnuggets.com/2022/03/manage-multiple-inheritance-python.html)'
- en: '[A New Way of Managing Deep Learning Datasets](https://www.kdnuggets.com/2022/03/new-way-managing-deep-learning-datasets.html)'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[管理深度学习数据集的新方法](https://www.kdnuggets.com/2022/03/new-way-managing-deep-learning-datasets.html)'
- en: '[Managing Your Reusable Python Code as a Data Scientist](https://www.kdnuggets.com/2021/06/managing-reusable-python-code-data-scientist.html)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[作为数据科学家管理可重用的Python代码](https://www.kdnuggets.com/2021/06/managing-reusable-python-code-data-scientist.html)'
- en: '[4 Steps for Managing a Data Science Project](https://www.kdnuggets.com/2022/05/4-steps-managing-data-science-project.html)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[管理数据科学项目的4个步骤](https://www.kdnuggets.com/2022/05/4-steps-managing-data-science-project.html)'
- en: '[Managing Model Drift in Production with MLOps](https://www.kdnuggets.com/2023/05/managing-model-drift-production-mlops.html)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用MLOps管理生产中的模型漂移](https://www.kdnuggets.com/2023/05/managing-model-drift-production-mlops.html)'
