- en: Vector Databases in AI and LLM Use Cases
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向量数据库在 AI 和 LLM 使用案例中的应用
- en: 原文：[https://www.kdnuggets.com/vector-databases-in-ai-and-llm-use-cases](https://www.kdnuggets.com/vector-databases-in-ai-and-llm-use-cases)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/vector-databases-in-ai-and-llm-use-cases](https://www.kdnuggets.com/vector-databases-in-ai-and-llm-use-cases)
- en: '![Vector Databases in AI and LLM Use Cases](../Images/819ba66755bbc22a8231bc910f0f7852.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![向量数据库在 AI 和 LLM 使用案例中的应用](../Images/819ba66755bbc22a8231bc910f0f7852.png)'
- en: Image generated with [Ideogram.ai](http://ideogram.ai)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 [Ideogram.ai](http://ideogram.ai) 生成的图像
- en: So, you might hear all these Vector Database terms. Some might understand about
    it, and some might not. No worries if you don’t know about them, as Vector Databases
    have only become a more prominent topic in recent years.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，你可能会听到各种向量数据库的术语。有些人可能理解这些术语，有些人则不然。如果你不太了解也没关系，因为向量数据库近年来才成为一个更加突出的话题。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业道路。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你所在组织的 IT 工作'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Vector databases have risen in popularity thanks to the introduction of Generative
    AI to the public, especially the LLM.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 向量数据库因生成式 AI，尤其是大型语言模型（LLM）的普及而变得越来越受欢迎。
- en: Many LLM products, such as GPT-4 and Gemini, help our work by providing text
    generation capability for our input. Well, vector databases actually play a part
    in these LLM products.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 许多大型语言模型产品，如 GPT-4 和 Gemini，通过为我们的输入提供文本生成能力来帮助我们的工作。实际上，向量数据库在这些大型语言模型产品中扮演了重要角色。
- en: But How did Vector Database work? And what are their relevances in the LLM?
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，向量数据库是如何工作的？它们在大型语言模型中的相关性是什么？
- en: The question above is what we would answer in this article. Well, Let’s explore
    them together.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 上述问题是我们将在本文中回答的。好吧，让我们一起来探索它们吧。
- en: Vector Databases
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向量数据库
- en: A vector database is a specialized database storage designed to store, index,
    and query vector data. It’s often optimized for high-dimensional vector data as
    usually it is the output for the machine learning model, especially LLM.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 向量数据库是一种专门的数据库存储，用于存储、索引和查询向量数据。它通常针对高维向量数据进行了优化，因为这通常是机器学习模型，特别是大型语言模型的输出。
- en: In the context of a Vector Database, the vector is a mathematical representation
    of the data. Each vector consists of an array of numerical points representing
    the data position. Vector is often used in the LLM to represent the text data
    as a vector is easier to process than the text data.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在向量数据库的背景下，向量是数据的数学表示。每个向量由表示数据位置的数值点数组成。向量通常用于大型语言模型中，因为向量比文本数据更容易处理。
- en: In the LLM space, the model might have a text input and could transform the
    text into a high-dimensional vector representing the semantic and syntactic characteristics
    of the text. This process is what we call Embedding. In simpler terms, embedding
    is a process that transforms text into vectors with numerical data.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在大型语言模型空间中，模型可能会有文本输入，并将其转换为表示文本语义和句法特征的高维向量。这一过程我们称之为嵌入。简单来说，嵌入是将文本转换为带有数值数据的向量的过程。
- en: Embedding generally uses a Neural Network model called the Embedding Model to
    represent the text in the Embedding Space.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入通常使用一种称为嵌入模型的神经网络模型来表示嵌入空间中的文本。
- en: 'Let’s use an example text: “I Love Data Science”. Representing them with the
    OpenAI model text-embedding-3-small would result in a vector with 1536 dimensions.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用一个示例文本：“我爱数据科学”。使用 OpenAI 的 text-embedding-3-small 模型表示它们会生成一个 1536 维的向量。
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The number within the vector is the coordinate within the model’s embedding
    space. Together, they would form a unique representation of the sentence meaning
    coming from the model.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 向量中的数字是模型嵌入空间中的坐标。它们共同形成了来自模型的句子意义的独特表示。
- en: Vector Database would then be responsible for storing these embedding model
    outputs. The user then could query, index, and retrieve the vector as they need.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 向量数据库将负责存储这些嵌入模型输出。用户可以根据需要查询、索引和检索向量。
- en: Maybe that’s enough introduction, and let’s get into a more technical hands-on.
    We would try to establish and store vectors with an open-source vector database
    called [Weaviate](https://weaviate.io/).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 也许介绍足够了，让我们进入更技术的实际操作。我们将尝试使用一个开源向量数据库 [Weaviate](https://weaviate.io/) 来建立和存储向量。
- en: Weaviate is a scalable open-source Vector Database that serves as a framework
    to store our vector. We can run Weaviate in instances like Docker or use Weaviate
    Cloud Services (WCS).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Weaviate 是一个可扩展的开源向量数据库，作为一个框架用于存储我们的向量。我们可以在 Docker 等实例中运行 Weaviate 或使用 Weaviate
    Cloud Services (WCS)。
- en: 'To start using Weaviate, we need to install the packages using the following
    code:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用 Weaviate，我们需要使用以下代码安装相关包：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: To make things easier, we would use a sandbox cluster from WCS to act as our
    Vector Database. Weaviate provides a 14-day free cluster that we can use to store
    our vectors without registering any payment method. To do that, you need to register
    on their [WCS console](https://console.weaviate.cloud/signin) initially.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化操作，我们将使用 WCS 的沙箱集群作为我们的向量数据库。Weaviate 提供了一个 14 天的免费集群，我们可以使用它来存储向量，而无需注册任何支付方式。为此，您需要首先在他们的
    [WCS 控制台](https://console.weaviate.cloud/signin) 上注册。
- en: Once within the WCS platform, select Create a Cluster and input your Sandbox
    name. The UI should look like the image below.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 进入 WCS 平台后，选择创建集群并输入您的 Sandbox 名称。用户界面应如下图所示。
- en: '![Vector Databases in AI and LLM Use Cases](../Images/4f9a0cb53ba4630631309397f523f2d8.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![AI和LLM用例中的向量数据库](../Images/4f9a0cb53ba4630631309397f523f2d8.png)'
- en: Image by Author
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: Don’t forget to enable authentication, as we also want to access this cluster
    via the WCS API Key. After the cluster is ready, find the API key and Cluster
    URL, which we will use to access the Vector Database.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 别忘了启用身份验证，因为我们还希望通过 WCS API 密钥访问该集群。集群准备好后，找到 API 密钥和集群 URL，我们将用来访问向量数据库。
- en: Once things are ready, we would simulate storing our first vector in the Vector
    Database.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦准备好，我们将模拟将第一个向量存储在向量数据库中。
- en: For the Vector Database storing example, I would use the [Book Collection](https://www.kaggle.com/datasets/kononenko/commonlit-texts)
    example dataset from Kaggle. I would only use the top 100 rows and 3 columns (title,
    description, intro).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 对于向量数据库存储示例，我将使用 Kaggle 上的 [Book Collection](https://www.kaggle.com/datasets/kononenko/commonlit-texts)
    示例数据集。我只会使用前 100 行和 3 列（标题、描述、简介）。
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Let’s set aside our data and connect to our Vector Database. First, we need
    to set up a remote connection using the API key and your Cluster URL.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先把数据放在一边，连接到我们的向量数据库。首先，我们需要使用 API 密钥和集群 URL 设置远程连接。
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Once you set up your client variable, we will connect to the Weaviate Cloud
    Service and create a class to store the vector. Class in Weaviate is the data
    collection or analogs to the table name in a relational database.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设置好客户端变量，我们将连接到 Weaviate Cloud 服务并创建一个类来存储向量。Weaviate 中的类是数据集合，类似于关系数据库中的表名。
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In the code above, we connect to the Weaviate Cluster and create a BookCollection
    class. The class object also uses the OpenAI text2vec embedding model to vectorize
    the text data and OpenAI generative module.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码中，我们连接到 Weaviate 集群并创建了一个 BookCollection 类。该类对象还使用了 OpenAI text2vec 嵌入模型对文本数据进行向量化，并使用
    OpenAI 生成模块。
- en: Let’s try to store the text data in a vector database. To do that, you can use
    the following code.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试将文本数据存储到向量数据库中。为此，您可以使用以下代码。
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Vector Databases in AI and LLM Use Cases](../Images/405ed56bdc827843c29d85199652e61d.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![AI和LLM用例中的向量数据库](../Images/405ed56bdc827843c29d85199652e61d.png)'
- en: Image by Author
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: We just successfully stored our dataset in the Vector Database! How easy is
    that?
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经成功地将数据集存储在向量数据库中！这有多简单？
- en: Now, you might be curious about the use cases for using Vector Databases with
    LLM. That’s what we are going to discuss next.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可能对向量数据库与 LLM 的使用场景感到好奇。这就是我们接下来要讨论的内容。
- en: Vector Database and LLM Use Cases
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向量数据库和 LLM 用例
- en: A few use cases in which LLM can be applied with Vector Database. Let’s explore
    them together.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 一些 LLM 可以与向量数据库结合使用的用例。让我们一起探索这些用例。
- en: Semantic Search
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 语义搜索
- en: Semantic Search is a process of searching for data by using the meaning of the
    query to retrieve relevant results rather than relying solely on the traditional
    keyword-based search.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 语义搜索是通过使用查询的含义来搜索数据，以检索相关结果，而不是仅依赖传统的基于关键字的搜索。
- en: The process involves the utilization of the LLM Model Embedding of the query
    and performing embedding similarity search into our stored embedded in the vector
    database.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程涉及利用查询的LLM模型嵌入，并在我们的矢量数据库中进行嵌入相似性搜索。
- en: Let’s try to use Weaviate to perform a semantic search based on a specific query.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试使用Weaviate根据特定查询执行语义搜索。
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In the code above, we try to perform a semantic search with Weaviate to find
    the top two books closely related to the query childhood story. The semantic search
    uses the OpenAI embedding model we previously set up. The result is what you can
    see in below.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，我们尝试使用Weaviate进行语义搜索，以查找与查询童年故事密切相关的前两本书。语义搜索使用我们之前设置的OpenAI嵌入模型。结果可以在下面看到。
- en: '[PRE7]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: As you can see, no direct words about childhood stories are in the result above.
    However, the result is still closely related to a story that aims for children.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，上述结果中没有直接提及童年故事。然而，结果仍然与一个旨在儿童的故事密切相关。
- en: Generative Search
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成搜索
- en: The Generative Search could be defined as an extension application for the Semantic
    Search. The Generative Search, or Retrieval Augmented Generation (RAG), utilizes
    LLM prompting with the Semantic search that retrieved data from the vector database.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 生成搜索可以定义为语义搜索的扩展应用。生成搜索，或称为检索增强生成（RAG），利用LLM提示与从矢量数据库中检索的数据进行语义搜索。
- en: With RAG, the result from the query search is processed to LLM, so we get them
    in the form we want instead of the raw data. Let’s try a simple implementation
    of the RAG with Vector Database.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 使用RAG，查询搜索的结果被处理到LLM中，因此我们可以以我们想要的形式获得结果，而不是原始数据。让我们尝试使用矢量数据库进行RAG的简单实现。
- en: '[PRE8]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The result can be seen in the text below.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 结果可以在下面的文本中看到。
- en: '[PRE9]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As you can see, the data content is the same as before but has now been processed
    with OpenAI LLM to provide a short LinkedIn post. In this way, RAG is useful when
    we want specific form output from the data.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，数据内容与之前相同，但现在已经用OpenAI LLM处理，以提供一个简短的LinkedIn帖子。这样，当我们希望从数据中获得特定形式的输出时，RAG非常有用。
- en: Question Answering with RAG
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: RAG问答
- en: In our previous example, we used a query to get the data we wanted, and RAG
    processed that data into the intended output.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们之前的示例中，我们使用查询获取了所需的数据，RAG将这些数据处理成预期的输出。
- en: However, we can turn the RAG capability into a question-answering tool. We can
    achieve this by combining them with the LangChain framework.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们可以将RAG功能转变为一个问答工具。我们可以通过将它们与LangChain框架结合来实现这一点。
- en: First, let’s install the necessary packages.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们安装必要的包。
- en: '[PRE10]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Then, let’s try to import the packages and initiate the variables we require
    to make QA with RAG work.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，让我们尝试导入所需的包并初始化变量，以使RAG问答工作。
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: In the code above, we set up the LLM for the text generation, embedding model,
    and the Weaviate client connection.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，我们设置了LLM用于文本生成、嵌入模型和Weaviate客户端连接。
- en: Next, we set the Weaviate connection to the Vector Database.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将Weaviate连接设置为矢量数据库。
- en: '[PRE12]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: In the code above, make the Weaviate Database BookCollection the RAG tool that
    would search the ‘intro’ feature when prompted.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，将Weaviate数据库BookCollection设置为RAG工具，以便在提示时搜索‘intro’特性。
- en: Then, we would create Question Answering Chain from the LangChain with the code
    below.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将使用下面的代码从LangChain创建问答链。
- en: '[PRE13]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Everything is now ready. Let’s try out the QA with RAG using the following code
    example.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 一切现在都准备好了。让我们尝试使用下面的代码示例进行RAG问答。
- en: '[PRE14]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The result is shown in the text below.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 结果显示在下面的文本中。
- en: '[PRE15]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: With the Vector Database as the place to store all the text data, we can implement
    RAG to perform QA with LangChain. How neat is that?
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 使用矢量数据库作为存储所有文本数据的地方，我们可以实现RAG与LangChain一起执行问答。这有多棒？
- en: Conclusion
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: A vector database is a specialized storage solution designed to store, index,
    and query vector data. It is often used to store text data and implemented in
    conjunction with Large Language Models (LLMs). This article will try a hands-on
    setup of the Vector Database Weaviate, including example use cases such as Semantic
    Search, Retrieval-Augmented Generation (RAG), and Question Answering with RAG.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 向量数据库是一种专门的存储解决方案，旨在存储、索引和查询向量数据。它通常用于存储文本数据，并与大型语言模型（LLMs）结合实施。本文将尝试进行向量数据库
    Weaviate 的动手设置，包括语义搜索、检索增强生成（RAG）和基于 RAG 的问答等示例用例。
- en: '**[](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**[Cornellius Yudha
    Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**** is a data science
    assistant manager and data writer. While working full-time at Allianz Indonesia,
    he loves to share Python and data tips via social media and writing media. Cornellius
    writes on a variety of AI and machine learning topics.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Cornellius Yudha Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**
    是一名数据科学助理经理和数据撰写员。在全职工作于 Allianz Indonesia 的同时，他喜欢通过社交媒体和写作媒体分享 Python 和数据技巧。Cornellius
    涉猎多种人工智能和机器学习主题。'
- en: More On This Topic
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Python Vector Databases and Vector Indexes: Architecting LLM Apps](https://www.kdnuggets.com/2023/08/python-vector-databases-vector-indexes-architecting-llm-apps.html)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 向量数据库和向量索引：LLM 应用的架构设计](https://www.kdnuggets.com/2023/08/python-vector-databases-vector-indexes-architecting-llm-apps.html)'
- en: '[NoSQL Databases and Their Use Cases](https://www.kdnuggets.com/2023/03/nosql-databases-cases.html)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[NoSQL 数据库及其应用场景](https://www.kdnuggets.com/2023/03/nosql-databases-cases.html)'
- en: '[What are Vector Databases and Why Are They Important for LLMs?](https://www.kdnuggets.com/2023/06/vector-databases-important-llms.html)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[什么是向量数据库，它们为何对 LLMs 重要？](https://www.kdnuggets.com/2023/06/vector-databases-important-llms.html)'
- en: '[An Honest Comparison of Open Source Vector Databases](https://www.kdnuggets.com/an-honest-comparison-of-open-source-vector-databases)'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[对开源向量数据库的诚实比较](https://www.kdnuggets.com/an-honest-comparison-of-open-source-vector-databases)'
- en: '[Semantic Search with Vector Databases](https://www.kdnuggets.com/semantic-search-with-vector-databases)'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用向量数据库进行语义搜索](https://www.kdnuggets.com/semantic-search-with-vector-databases)'
- en: '[A Comprehensive Guide to Pinecone Vector Databases](https://www.kdnuggets.com/a-comprehensive-guide-to-pinecone-vector-databases)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Pinecone 向量数据库全面指南](https://www.kdnuggets.com/a-comprehensive-guide-to-pinecone-vector-databases)'
