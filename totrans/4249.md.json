["```py\n!git clone https://github.com/sniklaus/3d-ken-burns.git# Move into the downloaded repository\n%cd 3d-ken-burns# Make a directory for the videos\n!mkdir videos\nvideo_dir = \"./videos/\"# Install dependencies\n!pip install moviepy gevent\n```", "```py\nfrom google.colab import filesuploads = files.upload()for filename in uploads.keys():\n    !mv ./$filename ./images/$filename\n```", "```py\npython autozoom.py --in {input_image}.jpg --out {output_video}.mp4\n```", "```py\n!for image in ./images/*; do python autozoom.py --in $image --out ./videos/$(basename $image | cut -f1 -d '.').mp4; done\n```", "```py\nimport os\nfrom base64 import b64encodefrom IPython.display import HTML\nimport ipywidgets as widgetsdef video(path):\n    mp4 = open(path,'rb').read()\n    data_url = \"data:video/mp4;base64,\" + b64encode(mp4).decode()\n    return HTML(f'<video width=600 controls loop> <source src=\"{data_url}\" type=\"video/mp4\"></video>')files_list = os.listdir(video_dir)\nvideo_list = widgets.Dropdown(\n    options=files_list,\n    value=\"\" if not files_list else files_list[0],\n    description='Video:',\n    disabled=False,\n)\ndisplay(video_list)\n```", "```py\nimport imageio\nimport os, sysclass TargetFormat(object):\n    GIF = \".gif\"\n    MP4 = \".mp4\"\n    AVI = \".avi\"def convertFile(inputpath, targetFormat):\n    \"\"\"Reference: [https://gist.github.com/michaelosthege/cd3e0c3c556b70a79deba6855deb2cc8](https://gist.github.com/michaelosthege/cd3e0c3c556b70a79deba6855deb2cc8)\"\"\"\n    outputpath = os.path.splitext(inputpath)[0] + targetFormat\n    print(\"converting\\r\\n\\t{0}\\r\\nto\\r\\n\\t{1}\".format(inputpath, outputpath))reader = imageio.get_reader(inputpath)\n    fps = reader.get_meta_data()['fps']writer = imageio.get_writer(outputpath, fps=fps)\n    for i,im in enumerate(reader):\n        sys.stdout.write(\"\\rframe {0}\".format(i))\n        sys.stdout.flush()\n        writer.append_data(im)\n    print(\"\\r\\nFinalizing...\")\n    writer.close()\n    print(\"Done.\")for file in [x for x in os.listdir(video_dir) if x.endswith(\".mp4\")]:\n    convertFile(f\"{video_dir}{file}\", TargetFormat.GIF)\n```", "```py\nfor file in os.listdir(video_dir):\n    files.download(f\"{video_dir}{file}\")\n```"]