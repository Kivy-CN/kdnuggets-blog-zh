["```py\ndef get_cubes(num):\n    cubes = []\n    for i in range(num):\n        cubes.append(i**3)\n    return cubes\n```", "```py\ndef get_cubes(num):\n    cubes = [i**3 for i in range(num)]\n    return cubes\n```", "```py\ndef get_cubes_gen(num):\n    for i in range(num):\n        yield i**3\n```", "```py\ncubes_gen = get_cubes_gen(6)\nprint(cubes_gen)\n```", "```py\nOutput >> [0, 1, 8, 27, 64, 125]\n```", "```py\ncubes_gen = get_cubes_gen(6)\nprint(cubes_gen)\n```", "```py\nOutput >> <generator object get_cubes_gen at 0x011B6530>\n```", "```py\n>>> from gen_example import get_cubes_gen\n>>> cubes_gen = get_cubes_gen(6)\n```", "```py\n>>> next(cubes_gen)\n0\n```", "```py\n>>> next(cubes_gen)\n1\n```", "```py\n>>> next(cubes_gen)\n8\n>>> next(cubes_gen)\n27\n>>> next(cubes_gen)\n64\n>>> next(cubes_gen)\n125\n```", "```py\n>>> next(cubes_gen)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nStopIteration</module></stdin>\n```", "```py\nfor cube in cubes_gen:\n    print(cube)\n\n# Output\n0\n1\n8\n27\n64\n125\n```", "```py\ncubes_gen = (i**3 for i in range(num))\n```", "```py\ncubes_gen = (i**3 for i in range(num))\n```", "```py\nsize_l = []\nsize_g = []\n\n# run for various values of num\nfor i in [10, 100, 1000, 10000, 100000, 1000000]:\n    cubes_l = [j**3 for j in range(i)]\n    cubes_g = (j**3 for j in range(i))\n    # get the sizes of static list and generator expression\n    size_l.append(sys.getsizeof(cubes_l))\n    size_g.append(sys.getsizeof(cubes_g))\n```", "```py\nprint(f\"size_l: {size_l}\")\nprint(f\"size_g: {size_g}\")\n```", "```py\n# Output\nsize_l: [92, 452, 4508, 43808, 412228, 4348728]\nsize_g: [56, 56, 56, 56, 56, 56]\n```"]