- en: How to do Machine Learning Efficiently
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2018/03/machine-learning-efficiently.html](https://www.kdnuggets.com/2018/03/machine-learning-efficiently.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '**By [Radek Osmulski](https://twitter.com/radekosmulski), Self-taught Developer**'
  prefs: []
  type: TYPE_NORMAL
- en: I have just come out of a project where 80% into it I felt I had very little.
    I invested a lot of time and in the end it was a total fiasco.
  prefs: []
  type: TYPE_NORMAL
- en: The math that I know or do not know, my ability to write code — all of this
    has been secondary. The way I approached the project was what was broken.
  prefs: []
  type: TYPE_NORMAL
- en: I now believe that there is an art, or craftsmanship, to structuring machine
    learning work and none of the math heavy books I tended to binge on seem to mention
    this.
  prefs: []
  type: TYPE_NORMAL
- en: I did a bit of soul searching and went back to what [Jeremy Howard](https://medium.com/@jeremyphoward) mentioned
    in the wonderful [Practical Deep Learning for Coders MOOC](http://course.fast.ai/)
    by [fast.ai](http://www.fast.ai/) and that is how this post was born.
  prefs: []
  type: TYPE_NORMAL
- en: '**The 10 second rule**'
  prefs: []
  type: TYPE_NORMAL
- en: We sit in front of a computer to do things. To make a dent in the universe.
    To lower the cost of our predictions or decrease the run time of our model.
  prefs: []
  type: TYPE_NORMAL
- en: The key word here is doing. That entails moving code around. Renaming variables.
    Visualizing data. Smashing away on your keyboard.
  prefs: []
  type: TYPE_NORMAL
- en: But staring blankly at a computer screen for two minutes while it performs calculations
    so that we can run them again and again but with slightly modified parameters
    is not doing.
  prefs: []
  type: TYPE_NORMAL
- en: This also leaves us open to the greatest bane of machine learning work — the
    curse of the extra browser tab. So easy to press ctrl+t, so easy to lose track
    of what we have been doing.
  prefs: []
  type: TYPE_NORMAL
- en: The solution might sound ridiculous but it works. Do not ever allow calculations
    to exceed 10 seconds while you work on a problem.
  prefs: []
  type: TYPE_NORMAL
- en: But how can I tune my parameters then? How can I learn anything meaningful about
    the problem?
  prefs: []
  type: TYPE_NORMAL
- en: All it takes is to subset your data in a way that can create a representative
    sample. This can be done for any domain and in most cases requires nothing more
    than randomly choosing some percentage of examples to work with.
  prefs: []
  type: TYPE_NORMAL
- en: Once you subset your data work becomes interactive. You enter a flow state of
    uninterrupted attention. You keep running experiments and figuring out what works
    and what doesn’t. Your fingers never leave your keyboard.
  prefs: []
  type: TYPE_NORMAL
- en: Time stretches and the hour of work that you do is not equal to the hour of
    work you would have done, not even 5 hours of work, had you allowed yourself to
    be distracted.
  prefs: []
  type: TYPE_NORMAL
- en: How to structure your code to facilitate this workflow? Make it very simple
    to switch to running on the full dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/12c64426b01ddddbca591da401049c8e.png)'
  prefs: []
  type: TYPE_IMG
- en: When about to finish your coding session, uncomment the cell and run all.
  prefs: []
  type: TYPE_NORMAL
- en: Be a time spammer
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This supplements the above. But it is also so much more.
  prefs: []
  type: TYPE_NORMAL
- en: There are orders of magnitude of gains in performance that can be attained based
    on how you structure your code. It is good to know how long something runs and
    how long it will run if you make this or that change. You can then try to figure
    out why the difference and it will immediately make you a better programmer.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/04a253ff851b497fa4dffc09fc2e8f7c.png)'
  prefs: []
  type: TYPE_IMG
- en: On top of that, this goes hand in hand with the commitment to never run anything
    that takes more than 10 seconds.
  prefs: []
  type: TYPE_NORMAL
- en: '**Test yourself**'
  prefs: []
  type: TYPE_NORMAL
- en: Once you make a mistake in your data processing pipeline and it goes unnoticed,
    it is nearly impossible to recover. To a large extent this also applies to model
    construction (particularly if you develop your own components such as layers,
    etc).
  prefs: []
  type: TYPE_NORMAL
- en: The key is to inspect the data as you go along. Look at it before and after
    transformation. Summarize it. If you know there should be no NAs after a merge,
    check that there indeed are not.
  prefs: []
  type: TYPE_NORMAL
- en: Test everything.
  prefs: []
  type: TYPE_NORMAL
- en: The only way to maintain your sanity in the long run is to be paranoid in the
    short run.
  prefs: []
  type: TYPE_NORMAL
- en: '**Rush to success**'
  prefs: []
  type: TYPE_NORMAL
- en: What is the very second thing you should focus on when working on a problem
    (I will speak to the first thing to do in just a second)? Create any model, any
    end to end data manipulation pipeline, that is better than random chance.
  prefs: []
  type: TYPE_NORMAL
- en: It can and should be the simplest model you can think off. Very often this will
    mean a linear combination. But you want to start getting a feel for the problem.
    You want to start forming a baseline of what is possible.
  prefs: []
  type: TYPE_NORMAL
- en: Say you spend 3 days on constructing a super elaborate model and it doesn’t
    work at all, or doesn’t work remotely as well as you suspected it should. What
    do you do?
  prefs: []
  type: TYPE_NORMAL
- en: You know nothing at this point. You do not know if you made a mistake with processing
    your data, you do not know if your data is garbage. You have no clue if maybe
    there is something wrong with your model. Good luck untangling this mess without
    having components you can rely on.
  prefs: []
  type: TYPE_NORMAL
- en: Also, getting a simple model in place will allow you to get a bird’s eye view
    of the situation. Maybe there is missing data? Maybe the classes are imbalanced?
    Maybe the data is not properly labeled?
  prefs: []
  type: TYPE_NORMAL
- en: It is good to have this information before starting to work on your more complex
    model. Otherwise you risk building something very elaborate that might objectively
    be great while at the same time being completely unsuited to the problem at hand.
  prefs: []
  type: TYPE_NORMAL
- en: '**Don’t tune the parameters, tune the architecture**'
  prefs: []
  type: TYPE_NORMAL
- en: “Oh if I just maybe add this single linear layer, I’m sure the model will sing
    to me”
  prefs: []
  type: TYPE_NORMAL
- en: “Maybe adding 0.00000001 more dropout will help, seems like we are fitting our
    train set a little bit too well here”
  prefs: []
  type: TYPE_NORMAL
- en: Especially early on, it is absolutely counter productive to tune hyperparameters.
    Yet it is beyond tempting to do so.
  prefs: []
  type: TYPE_NORMAL
- en: It requires little to no work, it is fun. You get to see numbers on your computer
    screen change and it feels like you are learning something and making progress.
  prefs: []
  type: TYPE_NORMAL
- en: This is a mirage. Worse yet, you might be overfitting your validation set. Every
    time you run your model and make changes based on validation loss, you incur a
    penalty on your model’s ability to generalize.
  prefs: []
  type: TYPE_NORMAL
- en: Your time is better invested in exploring architectures. You learn more. Suddenly
    ensembling becomes a possibility.
  prefs: []
  type: TYPE_NORMAL
- en: '**Free the mice**'
  prefs: []
  type: TYPE_NORMAL
- en: How long are you planning on using the computer? Even if I were to accidentally
    become well off to the point where I don’t have to work another day, I would still
    use the computer daily.
  prefs: []
  type: TYPE_NORMAL
- en: If you play tennis, you practice each move. You might even go as far as paying
    someone to tell you how to position your wrist for a specific shot!
  prefs: []
  type: TYPE_NORMAL
- en: But realistically, you will only play this many hours of tennis. Why not be
    similarly conscious about how you use the computer?
  prefs: []
  type: TYPE_NORMAL
- en: Using the mouse is unnatural. It is slow. It requires complex and precise movements.
    From any context you can only access a limited set of actions.
  prefs: []
  type: TYPE_NORMAL
- en: Using the keyboard sets you free. And I will be honest with you — I do not know
    why it makes such a difference. But it does.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/63848297de79cbdba4b13e5152101aac.png)'
  prefs: []
  type: TYPE_IMG
- en: A person working on their computer without using the mouse.
  prefs: []
  type: TYPE_NORMAL
- en: '**Last but not least**'
  prefs: []
  type: TYPE_NORMAL
- en: Nothing that you do will have any meaning unless you have a good validation
    set.
  prefs: []
  type: TYPE_NORMAL
- en: May I refer you to the ultimate resource on this. An article that holds no punches
    and that is based in practice.
  prefs: []
  type: TYPE_NORMAL
- en: '[How (and why) to create a good validation set](http://www.fast.ai/2017/11/13/validation-sets/) by [Rachel
    Thomas](https://medium.com/@racheltho).'
  prefs: []
  type: TYPE_NORMAL
- en: '*If you found this article interesting and would like to stay in touch, you
    can find me on Twitter *[*here*](https://twitter.com/radekosmulski)*.*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Radek Osmulski](https://twitter.com/radekosmulski)** is a self-taught
    developer who is passionate about machine learning. He is a [Fast.ai](http://www.fast.ai/)
    International Fellow and an active student of the field. You can connect with
    him on Twitter [here](https://twitter.com/radekosmulski).'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://hackernoon.com/doing-machine-learning-efficiently-8ba9d9bc679d).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[5 Things to Know About Machine Learning](/2018/03/5-things-know-about-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Tour of The Top 10 Algorithms for Machine Learning Newbies](/2018/02/tour-top-10-algorithms-machine-learning-newbies.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering Machine Learning with Python](/2015/11/seven-steps-machine-learning-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[How to Efficiently Scale Data Science Projects with Cloud Computing](https://www.kdnuggets.com/2023/05/efficiently-scale-data-science-projects-cloud-computing.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Merge Large DataFrames Efficiently with Pandas](https://www.kdnuggets.com/how-to-merge-large-dataframes-efficiently-with-pandas)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Machine Learning Skills Every Machine Learning Engineer Should…](https://www.kdnuggets.com/2023/03/5-machine-learning-skills-every-machine-learning-engineer-know-2023.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News, December 14: 3 Free Machine Learning Courses for…](https://www.kdnuggets.com/2022/n48.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Solid Plan for Learning Data Science, Machine Learning, and Deep Learning](https://www.kdnuggets.com/2023/01/mwiti-solid-plan-learning-data-science-machine-learning-deep-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[AI, Analytics, Machine Learning, Data Science, Deep Learning…](https://www.kdnuggets.com/2021/12/developments-predictions-ai-machine-learning-data-science-research.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
