- en: Semantic Search with Vector Databases
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 语义搜索与向量数据库
- en: 原文：[https://www.kdnuggets.com/semantic-search-with-vector-databases](https://www.kdnuggets.com/semantic-search-with-vector-databases)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/semantic-search-with-vector-databases](https://www.kdnuggets.com/semantic-search-with-vector-databases)
- en: '![Semantic Search with Vector Databases](../Images/0d380decc923ed3d6b78479336b53c8b.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![语义搜索与向量数据库](../Images/0d380decc923ed3d6b78479336b53c8b.png)'
- en: Image generated with [Ideogram.ai](http://ideogram.ai)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[Ideogram.ai](http://ideogram.ai)生成的图像
- en: I am sure that most of us have used search engines.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信我们大多数人都使用过搜索引擎。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: There is even a phrase such as “Just Google it.” The phrase means you should
    search for the answer using Google's search engine. That’s how universal Google
    can now be identified as a search engine.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 甚至有一句话叫“只需谷歌一下。”这句话意味着你应该使用谷歌的搜索引擎来寻找答案。这就是谷歌现在可以被普遍识别为搜索引擎的方式。
- en: Why search engine is so valuable? Search engines allow users to easily acquire
    information on the internet using limited query input and organize that information
    based on relevance and quality. In turn, search enables accessibility to massive
    knowledge that was previously inaccessible.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么搜索引擎如此有价值？搜索引擎允许用户使用有限的查询输入轻松获取互联网信息，并根据相关性和质量组织这些信息。反过来，搜索使得获取之前无法获得的大量知识成为可能。
- en: Traditionally, the search engine approach to finding information is based on
    lexical matches or word matching. It works well, but sometimes, the result could
    be more accurate because the user intention differs from the input text.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，搜索引擎获取信息的方法是基于词汇匹配或单词匹配。它运作良好，但有时结果可能不够准确，因为用户意图与输入文本不同。
- en: For example, the input “Red Dress Shot in the Dark” can have a double meaning,
    especially with the word “Shot.” The more probable meaning is that the Red Dress
    picture is taken in the dark, but traditional search engines would not understand
    it. That’s why Semantic Search is emerging.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，“红色连衣裙在黑暗中拍摄”这个输入可能有双重含义，特别是词语“拍摄”。更可能的含义是红色连衣裙的照片是在黑暗中拍摄的，但传统的搜索引擎不会理解这一点。这就是语义搜索兴起的原因。
- en: Semantic search could be defined as a search engine that considers the meaning
    of words and sentences. The semantic search output would be information that matches
    the query meaning, which contrasts with a traditional search that matches the
    query with words.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 语义搜索可以定义为一种考虑单词和句子含义的搜索引擎。语义搜索的结果是匹配查询含义的信息，这与传统搜索通过单词匹配查询的方式相对。
- en: In the NLP (Natural Language Processing) field, vector databases have significantly
    improved semantic search capabilities by utilizing the storage, indexing, and
    retrieval of high-dimensional vectors representing text's meaning. So, semantic
    search and vector databases were closely related fields.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在自然语言处理（NLP）领域，向量数据库通过利用表示文本意义的高维向量的存储、索引和检索，显著提高了语义搜索能力。因此，语义搜索和向量数据库是密切相关的领域。
- en: This article will discuss semantic search and how to use a Vector Database.
    With that in mind, let’s get into it.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本文将讨论语义搜索以及如何使用向量数据库。有了这些信息，让我们深入了解吧。
- en: How Semantic Search works
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 语义搜索如何工作
- en: Let’s discuss Semantic Search in the context of Vector Databases.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在向量数据库的背景下讨论语义搜索。
- en: Semantic search ideas are based on the meanings of the text, but how could we
    capture that information? A computer can’t have a feeling or knowledge like humans
    do, which means the word “meanings” needs to refer to something else. In the semantic
    search, the word “meaning” would become a representation of knowledge that is
    suitable for meaningful retrieval.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 语义搜索的思路基于文本的意义，但我们如何捕捉这些信息呢？计算机无法像人类一样拥有感觉或知识，这意味着“意义”这个词需要指代其他东西。在语义搜索中，“意义”一词将成为适合有意义检索的知识表示。
- en: The meaning representation comes as Embedding, the text transformation process
    into a Vector with numerical information. For example, we can transform the sentence
    “I want to learn about Semantic Search” using the OpenAI Embedding model.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 意义表示形式是嵌入，将文本转换为带有数值信息的向量。例如，我们可以使用 OpenAI 嵌入模型将句子“I want to learn about Semantic
    Search”进行转换。
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: How is this numerical vector able to capture the meanings, then? Let’s take
    a step back. The result you see above is the embedding result of the sentence.
    The embedding output would be different if you replaced even just one word in
    the above sentence. Even a single word would have a different embedding output
    as well.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，这个数值向量是如何捕捉意义的呢？让我们退一步看。你上面看到的结果是句子的嵌入结果。如果你替换了上面句子中的任何一个单词，嵌入输出会有所不同。即使是一个单词也会有不同的嵌入输出。
- en: If we look at the whole picture, embeddings for a single word versus a complete
    sentence will differ significantly because sentence embeddings account for relationships
    between words and the sentence's overall meaning, which is not captured in the
    individual word embeddings. It means each word, sentence, and text is unique in
    its embedding result. This is how embedding could capture meaning instead of lexical
    matching.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们看整个图景，单个词语的嵌入与完整句子的嵌入会有显著不同，因为句子嵌入考虑了词语之间的关系和句子的整体意义，而这些在单个词语的嵌入中没有体现。这意味着每个词、句子和文本在其嵌入结果中都是独一无二的。这就是嵌入如何捕捉意义，而不是词汇匹配的方式。
- en: So, how does semantic search work with vectors? A semantic search aims to embed
    your corpus into a vector space. This allows each data point to provide information
    (text, sentence, documents, etc.) and become a coordinate point. The query input
    is processed into a vector via embedding into the same vector space during search
    time. We would find the closest embedding from our corpus to the query input using
    vector similarity measures such as Cosine similarities. To understand better,
    you can see the image below.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，语义搜索如何利用向量工作呢？语义搜索的目的是将你的语料库嵌入到一个向量空间中。这允许每个数据点提供信息（文本、句子、文档等）并成为一个坐标点。查询输入在搜索时会通过嵌入处理成向量，进入相同的向量空间。我们会使用向量相似性度量，如余弦相似度，从我们的语料库中找到与查询输入最接近的嵌入。为了更好地理解，你可以查看下面的图像。
- en: '![Semantic Search with Vector Databases](../Images/e2a936a4331997d952b0f9f1b182fa0b.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![使用向量数据库的语义搜索](../Images/e2a936a4331997d952b0f9f1b182fa0b.png)'
- en: Image by Author
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Each document embedding coordinate is placed in the vector space, and the query
    embedding is placed in the vector space. The closest document to the query would
    be selected as it theoretically has the closest semantic meaning to the input.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 每个文档嵌入坐标被放置在向量空间中，查询嵌入也被放置在向量空间中。理论上，与输入的语义意义最接近的文档将被选中。
- en: However, maintaining the vector space that contains all the coordinates would
    be a massive task, especially with a larger corpus. The Vector database is preferable
    for storing the vector instead of having the whole vector space as it allows better
    vector calculation and can maintain efficiency as the data grows.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，维护包含所有坐标的向量空间将是一个巨大的任务，尤其是在大规模语料库的情况下。向量数据库更适合存储向量，而不是整个向量空间，因为它允许更好的向量计算，并能随着数据的增长保持效率。
- en: The high-level process of Semantic Search with Vector Databases can be seen
    in the image below.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的图像中可以看到使用向量数据库进行语义搜索的高级过程。
- en: '![Semantic Search with Vector Databases](../Images/0bb964f620744ef930c6de098053c620.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![使用向量数据库的语义搜索](../Images/0bb964f620744ef930c6de098053c620.png)'
- en: Image by Author
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: In the next section, we will perform a semantic search with a Python example.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将通过一个 Python 示例进行语义搜索。
- en: Python Implementation
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 实现
- en: In this article, we will use an open-source Vector Database [Weaviate](https://weaviate.io/).
    For tutorial purposes, we also use Weaviate Cloud Service (WCS) to store our vector.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将使用开源向量数据库 [Weaviate](https://weaviate.io/)。为了教学目的，我们还使用 Weaviate 云服务（WCS）来存储我们的向量。
- en: First, we need to install the Weavieate Python Package.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要安装Weaviate Python包。
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Then, please register for their free cluster via [Weaviate Console](https://console.weaviate.cloud/signin)
    and secure both the Cluster URL and the API Key.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，请通过[Weaviate Console](https://console.weaviate.cloud/signin)注册他们的免费集群，并确保获得集群URL和API密钥。
- en: As for the dataset example, we would use the [Legal Text data](https://www.kaggle.com/datasets/amohankumar/legal-text-classification-dataset)
    from Kaggle. To make things easier, we would also only use the top 100 rows of
    data.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数据集示例，我们将使用[Kaggle的法律文本数据](https://www.kaggle.com/datasets/amohankumar/legal-text-classification-dataset)。为了简化操作，我们还将只使用前100行数据。
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![Semantic Search with Vector Databases](../Images/9f1726241c297e30476e590591e70cfc.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![使用向量数据库的语义搜索](../Images/9f1726241c297e30476e590591e70cfc.png)'
- en: Image by Author
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: Next, we would store all the data in the Vector Databases on Weaviate Cloud
    Service. To do that, we need to set the connection to the database.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将把所有数据存储到Weaviate云服务上的向量数据库中。为此，我们需要设置与数据库的连接。
- en: '[PRE3]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The next thing we need to do is connect to the Weaviate Cloud Service and create
    a class (like Table in SQL) to store all the text data.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要连接到Weaviate云服务，并创建一个类（类似于SQL中的表）来存储所有文本数据。
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In the code above, we create a LegalCases class that uses the OpenAI Embedding
    model. In the background, whatever text object we would store in the LegalCases
    class would go through the OpenAI Embedding model and be stored as the embedding
    vector.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码中，我们创建了一个使用OpenAI Embedding模型的LegalCases类。在后台，存储在LegalCases类中的任何文本对象都会经过OpenAI
    Embedding模型，并作为嵌入向量进行存储。
- en: Let’s try to store the Legal text data in a vector database. To do that, you
    can use the following code.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试将法律文本数据存储到向量数据库中。为此，你可以使用以下代码。
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You should see in the Weaviate Cluster that your Legal text is already stored
    there.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该会在Weaviate集群中看到你的法律文本数据已经存储在那里。
- en: With the Vector Database ready, let’s try the Semantic Search. Weaviate API
    makes it easier, as shown in the code below. In the example below, we will try
    to find the cases that happen in Australia.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 向量数据库准备好后，让我们尝试语义搜索。Weaviate API使这变得更加简单，如下代码所示。在下面的示例中，我们将尝试查找发生在澳大利亚的案件。
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The result is shown below.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下所示。
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: As you can see, we have two different results. In the first case, the word “Australia”
    was directly mentioned in the document so it is easier to find. However, the second
    result did not have any word “Australia” anywhere. However, Semantic Search can
    find it because there are words related to the word “Australia” such as “NSWSC”
    which stands for New South Wales Supreme Court, or the word “Currabubula” which
    is the village in Australia.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我们得到了两个不同的结果。在第一个案例中，文档中直接提到了“澳大利亚”这个词，因此更容易找到。然而，第二个结果中没有任何“澳大利亚”这个词。但语义搜索可以找到它，因为有与“澳大利亚”相关的词汇，比如“NSWSC”（新南威尔士州最高法院的缩写）或“Currabubula”（澳大利亚的一个村庄）。
- en: Traditional lexical matching might miss the second record, but the semantic
    search is much more accurate as it takes into account the document meanings.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的词汇匹配可能会遗漏第二条记录，但语义搜索更加准确，因为它考虑了文档的含义。
- en: That’s all the simple Semantic Search with Vector Database implementation.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是使用向量数据库进行简单语义搜索的实现。
- en: Conclusion
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Search engines have dominated information acquisition on the internet although
    the traditional method with lexical match contains a flaw, which is that it fails
    to capture user intent. This limitation gives rise to the Semantic Search, a search
    engine method that can interpret the meaning of document queries. Enhanced with
    vector databases, semantic search capability is even more efficient.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管传统的基于词汇匹配的搜索引擎主导了互联网的信息获取，但这种方法存在一个缺陷，即无法捕捉用户意图。这一局限性催生了**语义搜索**，一种能够解释文档查询含义的搜索引擎方法。通过向量数据库的增强，语义搜索的能力变得更加高效。
- en: In this article, we have explored how Semantic Search works and hands-on Python
    implementation with Open-Source Weaviate Vector Databases. I hope it helps!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们探讨了**语义搜索**的工作原理以及如何使用开源的Weaviate向量数据库进行Python实现。希望这对你有所帮助！
- en: '**[](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**[Cornellius Yudha
    Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**** is a data science
    assistant manager and data writer. While working full-time at Allianz Indonesia,
    he loves to share Python and data tips via social media and writing media. Cornellius
    writes on a variety of AI and machine learning topics.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Cornellius Yudha Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**
    是数据科学助理经理和数据撰稿人。在 Allianz Indonesia 全职工作时，他喜欢通过社交媒体和写作分享 Python 和数据技巧。Cornellius
    涉及多种 AI 和机器学习主题的撰写。'
- en: More On This Topic
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Python Vector Databases and Vector Indexes: Architecting LLM Apps](https://www.kdnuggets.com/2023/08/python-vector-databases-vector-indexes-architecting-llm-apps.html)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 向量数据库和向量索引：构建 LLM 应用](https://www.kdnuggets.com/2023/08/python-vector-databases-vector-indexes-architecting-llm-apps.html)'
- en: '[How Semantic Vector Search Transforms Customer Support Interactions](https://www.kdnuggets.com/how-semantic-vector-search-transforms-customer-support-interactions)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[语义向量搜索如何变革客户支持互动](https://www.kdnuggets.com/how-semantic-vector-search-transforms-customer-support-interactions)'
- en: '[An Honest Comparison of Open Source Vector Databases](https://www.kdnuggets.com/an-honest-comparison-of-open-source-vector-databases)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开源向量数据库的诚实比较](https://www.kdnuggets.com/an-honest-comparison-of-open-source-vector-databases)'
- en: '[Vector Databases in AI and LLM Use Cases](https://www.kdnuggets.com/vector-databases-in-ai-and-llm-use-cases)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[AI 和 LLM 使用案例中的向量数据库](https://www.kdnuggets.com/vector-databases-in-ai-and-llm-use-cases)'
- en: '[What are Vector Databases and Why Are They Important for LLMs?](https://www.kdnuggets.com/2023/06/vector-databases-important-llms.html)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[什么是向量数据库，它们为何对 LLMs 重要？](https://www.kdnuggets.com/2023/06/vector-databases-important-llms.html)'
- en: '[A Comprehensive Guide to Pinecone Vector Databases](https://www.kdnuggets.com/a-comprehensive-guide-to-pinecone-vector-databases)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Pinecone 向量数据库的综合指南](https://www.kdnuggets.com/a-comprehensive-guide-to-pinecone-vector-databases)'
