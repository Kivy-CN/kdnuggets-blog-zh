- en: The Right Way to Access Dictionaries in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Python 中访问字典的正确方法
- en: 原文：[https://www.kdnuggets.com/the-right-way-to-access-dictionaries-in-python](https://www.kdnuggets.com/the-right-way-to-access-dictionaries-in-python)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/the-right-way-to-access-dictionaries-in-python](https://www.kdnuggets.com/the-right-way-to-access-dictionaries-in-python)
- en: '![The Right Way to Access Dictionaries in Python](../Images/ad5e0ebe01008cd3023c5225b5f4163c.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![在 Python 中访问字典的正确方法](../Images/ad5e0ebe01008cd3023c5225b5f4163c.png)'
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: When working with data, especially if using our beloved Python language, the
    dictionary stands out as a fundamental data structure, ready to uncover its data
    to those who know how to unlock it.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '-   在处理数据时，尤其是使用我们喜爱的 Python 语言时，字典作为一种基本的数据结构脱颖而出，准备好向那些知道如何解锁它的人展示其数据。'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三名课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业的快车道。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: A dictionary in Python is a collection that is both unordered and mutable, designed
    to store data values like a map. Unlike other Data Types that hold only single
    values as elements, Dictionary holds pairs of keys and values separated by colons,
    a “:” element.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '-   在 Python 中，字典是一种无序且可变的集合，设计用来存储类似于映射的数据值。与仅包含单一值作为元素的其他数据类型不同，字典包含由冒号“:”分隔的键值对。'
- en: This Key-value pairs structure provides a way to store data so that it can be
    efficiently retrieved by key rather than position.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '-   这种键值对结构提供了一种存储数据的方法，以便可以通过键而不是位置有效地检索数据。'
- en: However, most times an unwanted KeyError when looking for a key can break our
    whole execution. This is why this guide attempts to shed some light and explain
    some effective ways to access dictionaries avoiding the break of our execution.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '-   然而，大多数时候，当查找一个不存在的键时，出现的 KeyError 会中断我们的整个执行。这就是为什么本指南尝试阐明并解释一些有效的访问字典的方法，以避免中断我们的执行。'
- en: Understanding the Python Dictionary
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Python 字典
- en: Imagine a dictionary as a dynamic storage system, where each item you wish to
    store has a unique identifier or 'key' that leads you directly to it.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '-   想象一个字典作为一个动态存储系统，每个你希望存储的项目都有一个唯一的标识符或“键”，可以直接引导你到它。'
- en: '![The Right Way to Access Dictionaries in Python](../Images/ae650195d742e86e7bdcecdc75d24539.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![在 Python 中访问字典的正确方法](../Images/ae650195d742e86e7bdcecdc75d24539.png)'
- en: Image by Author
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: In Python, dictionaries are declared with curly brackets {}, with keys and their
    corresponding values separated by colons “:”, and each pair separated by commas.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '-   在 Python 中，字典用花括号 {} 声明，键及其对应的值由冒号“:”分隔，每对之间由逗号分隔。'
- en: 'Here''s a simple representation:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '-   这是一个简单的表示：'
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Creating a dictionary is just the beginning. The true utility of dictionaries
    is realized when retrieving and manipulating this stored data.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '-   创建字典只是开始。字典的真正用途在于检索和操作这些存储的数据时。'
- en: The Common Pitfall
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 常见陷阱
- en: 'A common approach to accessing a value in a dictionary is by using the key
    name within square brackets:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '-   访问字典中的值的常见方法是使用方括号中的键名：'
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This method seems straightforward until you encounter a key that doesn't exist
    within the dictionary, leading to a KeyError.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '-   这个方法看起来很简单，直到你遇到一个字典中不存在的键，从而导致 KeyError。'
- en: This is a common issue that can complicate larger projects.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '-   这是一个常见的问题，可能会使较大的项目变得复杂。'
- en: The Safer Approaches
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更安全的方法
- en: To avoid KeyError, you might consider using if statements or try-except blocks
    to handle missing keys.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '-   为了避免 KeyError，你可以考虑使用 if 语句或 try-except 块来处理缺失的键。'
- en: 'These methods, while functional, can become cumbersome with more complex code.
    Fortunately, Python offers more elegant solutions, mainly two:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '-   这些方法虽然有效，但在更复杂的代码中可能会变得繁琐。幸运的是，Python 提供了更优雅的解决方案，主要有两个：'
- en: the get() method
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get()` 方法'
- en: the setdefault() method
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setdefault()` 方法'
- en: Embracing the get() Method
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用`get()`方法
- en: The get() method is a more efficient way to retrieve values from a dictionary.
    It requires the key you're searching for and allows an optional second parameter
    for a default value if the key is not found.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`get()`方法是从字典中检索值的更高效方式。它需要你要查找的键，并允许一个可选的第二个参数作为默认值，如果没有找到该键。'
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This is the most straightforward way to access a dictionary while ensuring there
    won’t be a KeyError. Having a default alternative is a safe way to make sure everything
    is in order.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这是访问字典最直接的方法，同时确保不会出现KeyError。使用默认值是确保一切正常的安全方法。
- en: However, this method does not alter our dictionary, and sometimes, we require
    the dictionary to store this new parameter.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这种方法不会更改我们的字典，有时我们需要字典来存储这个新参数。
- en: This leads us to the second approach.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这引导我们到第二种方法。
- en: Leveraging the setdefault() Method
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用`setdefault()`方法
- en: For scenarios where you not only want to retrieve a value safely but also update
    the dictionary with new keys, setdefault() becomes invaluable.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些不仅希望安全地检索值，而且还希望使用新键更新字典的场景，`setdefault()`变得非常宝贵。
- en: This method checks for the existence of a key and if absent, adds the key with
    the specified default value, effectively modifying the original dictionary.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法检查键是否存在，如果不存在，则添加带有指定默认值的键，从而有效地修改原始字典。
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Examining playersHeight after using setdefault() will show the newly added keys
    with their default values, altering the original dictionary structure.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用`setdefault()`后检查`playersHeight`将显示新增的键及其默认值，从而改变原始字典结构。
- en: Final Recommendations
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最终推荐
- en: The choice between get() and setdefault() depends on your specific needs. Use
    get() when you simply need to retrieve data without altering the original dictionary.
    Opt for setdefault() when your task requires adding new entries to the dictionary.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在`get()`和`setdefault()`之间的选择取决于你的具体需求。当你只需检索数据而不更改原始字典时，使用`get()`。当你的任务需要向字典中添加新条目时，选择`setdefault()`。
- en: Breaking old habits may require some effort, but the transition to using get()
    and setdefault() can significantly enhance the robustness and readability of your
    Python code.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 改变旧习惯可能需要一些努力，但转向使用`get()`和`setdefault()`可以显著提升你Python代码的鲁棒性和可读性。
- en: As you integrate these methods into your programming practice, you'll quickly
    appreciate their efficiency and the seamless way they handle potential errors,
    making them indispensable tools in your Python arsenal.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将这些方法融入你的编程实践中时，你会迅速欣赏到它们的高效性以及它们处理潜在错误的无缝方式，使它们成为你Python工具箱中不可或缺的工具。
- en: The pivotal role of get() and setdefault() emerge as great ways to handle such
    formats and access our dictionaries.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`get()`和`setdefault()`在处理此类格式和访问字典方面发挥着关键作用。'
- en: I hope this guide was useful, and next time you are dealing with dictionaries,
    you can do it in  more effectively.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望本指南对你有所帮助，下次处理字典时，你可以更有效地进行。
- en: You can go check the corresponding Jupyter Notebook in the [following GitHub
    repo.](https://github.com/rfeers/Twitter/blob/main/Python/right-way-access-dictionaries.ipynb)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以查看[以下GitHub仓库](https://github.com/rfeers/Twitter/blob/main/Python/right-way-access-dictionaries.ipynb)中的相应Jupyter
    Notebook。
- en: '**[](https://www.linkedin.com/in/josep-ferrer-sanchez/)**[Josep Ferrer](https://www.linkedin.com/in/josep-ferrer-sanchez)****
    is an analytics engineer from Barcelona. He graduated in physics engineering and
    is currently working in the data science field applied to human mobility. He is
    a part-time content creator focused on data science and technology. Josep writes
    on all things AI, covering the application of the ongoing explosion in the field.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Josep Ferrer](https://www.linkedin.com/in/josep-ferrer-sanchez)** 是来自巴塞罗那的分析工程师。他毕业于物理工程专业，目前从事人类流动性领域的数据科学工作。他还是一名兼职内容创作者，专注于数据科学和技术。Josep撰写关于人工智能的文章，涵盖了该领域的持续爆炸性应用。'
- en: More On This Topic
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Converting JSONs to Pandas DataFrames: Parsing Them the Right Way](https://www.kdnuggets.com/converting-jsons-to-pandas-dataframes-parsing-them-the-right-way)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将JSON转换为Pandas DataFrame：正确解析它们](https://www.kdnuggets.com/converting-jsons-to-pandas-dataframes-parsing-them-the-right-way)'
- en: '[15 Trending MLOps Talks You can Access for Free at ODSC East 2022](https://www.kdnuggets.com/2022/04/odsc-15-trending-mlops-talks-access-free-odsc-east-2022.html)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[15个你可以在ODSC East 2022上免费观看的热门MLOps讲座](https://www.kdnuggets.com/2022/04/odsc-15-trending-mlops-talks-access-free-odsc-east-2022.html)'
- en: '[Hone Your Data Skills With Free Access to DataCamp](https://www.kdnuggets.com/2022/07/datacamp-hone-data-skills-free-access-datacamp.html)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通过免费访问 DataCamp 提升你的数据技能](https://www.kdnuggets.com/2022/07/datacamp-hone-data-skills-free-access-datacamp.html)'
- en: '[Data access is severely lacking in most companies, and 71% believe…](https://www.kdnuggets.com/2023/07/mostly-data-access-severely-lacking-synthetic-data-help.html)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据访问在大多数公司中严重不足，71%的人认为…](https://www.kdnuggets.com/2023/07/mostly-data-access-severely-lacking-synthetic-data-help.html)'
- en: '[How to Access and Use Gemini API for Free](https://www.kdnuggets.com/how-to-access-and-use-gemini-api-for-free)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何免费访问和使用 Gemini API](https://www.kdnuggets.com/how-to-access-and-use-gemini-api-for-free)'
- en: '[10 Pandas One Liners for Data Access, Manipulation, and Management](https://www.kdnuggets.com/2023/01/pandas-one-liners-data-access-manipulation-management.html)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[10 个 Pandas 单行代码用于数据访问、操作和管理](https://www.kdnuggets.com/2023/01/pandas-one-liners-data-access-manipulation-management.html)'
