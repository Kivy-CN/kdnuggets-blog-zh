["```py\nfrom gensim.models import Word2Vec\n\nwv = gensim.models.KeyedVectors.load_word2vec_format(\"GoogleNews-vectors-negative300.bin.gz\", binary=True)\nwv.init_sims(replace=True)\n```", "```py\nfrom itertools import islice\nlist(islice(wv.vocab, 13030, 13050))\n```", "```py\nfrom sklearn.linear_model import LogisticRegression\nlogreg = LogisticRegression(n_jobs=1, C=1e5)\nlogreg = logreg.fit(X_train_word_average, train['tags'])\ny_pred = logreg.predict(X_test_word_average)\nprint('accuracy %s' % accuracy_score(y_pred, test.tags))\nprint(classification_report(test.tags, y_pred,target_names=my_tags))\n```", "```py\nall_data[:2]\n```", "```py\nlogreg = LogisticRegression(n_jobs=1, C=1e5)\nlogreg.fit(train_vectors_dbow, y_train)\nlogreg = logreg.fit(train_vectors_dbow, y_train)\ny_pred = logreg.predict(test_vectors_dbow)\nprint('accuracy %s' % accuracy_score(y_pred, y_test))\nprint(classification_report(y_test, y_pred,target_names=my_tags))\n```", "```py\nscore = model.evaluate(x_test, y_test,\n                       batch_size=batch_size, verbose=1)\nprint('Test accuracy:', score[1])\n```"]