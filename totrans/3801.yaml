- en: A Comparison of Machine Learning Algorithms in Python and R
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/06/machine-learning-algorithms-python-r.html](https://www.kdnuggets.com/2023/06/machine-learning-algorithms-python-r.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![A Comparison of Machine Learning Algorithms in Python and R](../Images/429e860c2b0f3530e614ebeeda14783a.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Editor
  prefs: []
  type: TYPE_NORMAL
- en: Python and R are two of the most used programming languages for machine learning.
    Both are open source and highly accessible, but where Python is a general-purpose
    language, R is a statistical programming language. This makes it ideal for various
    [data roles](/2023/06/programming-languages-specific-data-roles.html) and applications,
    such as data mining.
  prefs: []
  type: TYPE_NORMAL
- en: The two programming languages also encourage re-usability, meaning novice machine
    learning engineers and enthusiasts don’t have to write their code from scratch.
    Using them to build projects is about integrating the right modules and algorithms
    - all you have to know is where to look. To help you out, we’ve compiled a list
    of some of the most used machine learning algorithms for Python and R. Make sure
    to bookmark this guide and reference it whenever you get stuck.
  prefs: []
  type: TYPE_NORMAL
- en: 1\. K-Means Clustering Algorithm
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As the name implies, machine learning is ultimately about teaching computer
    systems so they can function autonomously. This can either be facilitated through
    supervised or unsupervised learning.
  prefs: []
  type: TYPE_NORMAL
- en: One way to perform the latter is using the [k-means clustering algorithm](https://www.javatpoint.com/k-means-clustering-algorithm-in-machine-learning),
    which seeks to find patterns in a data set by grouping (clustering) similar data
    points.
  prefs: []
  type: TYPE_NORMAL
- en: In the R programming language, k-means clustering is generally performed using
    the *k-means* function. Unfortunately, Python doesn’t seem to offer an out-of-the-box
    solution that’s as straightforward. K-means clustering for Python is usually carried
    out using the sci-kit-learn library’s sklearn.cluster.KMeans class in conjunction
    with the [matplotlib.pyplot](https://matplotlib.org/3.5.3/api/_as_gen/matplotlib.pyplot.html)
    library.
  prefs: []
  type: TYPE_NORMAL
- en: The k-means clustering algorithm is one of the most widely used for unsupervised
    machine learning, and you’ll likely run into it or need to use it sooner or later.
    Thus, it’s one of the first ones you should learn and master.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Decision Tree
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The decision tree algorithm is favored because of its accessibility and usability.
    It’s a supervised machine learning algorithm that is mostly used for classification.
    For instance, companies can use it to determine how to handle difficult customers
    through chatbots.
  prefs: []
  type: TYPE_NORMAL
- en: The decision tree teaches machines how to make choices from prior experiences.
    One of the reasons it is so popular among new machine learning engineers is because
    it can be modeled and represented visually as a chart or diagram. This quality
    makes it appealing to those with traditional programming skills.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two main types of decision trees:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Continuous Variable Decision Tree: Refers to [decision trees](/2020/01/decision-tree-algorithm-explained.html)
    with unlimited target variables.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Categorical Variable Decision Tree: Refers to decision trees with grouped limited
    target variables.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The packages and classes that are most concerned with decision trees in R programming
    include:'
  prefs: []
  type: TYPE_NORMAL
- en: Datasets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: caTools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: party
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dplyr
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: magrittr
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once again, you’ll have to look outward for Python modules to implement this
    algorithm. As with the k-means clustering algorithm, sci-kit-learn contains a
    host of modules for decision trees with sklearn.tree being the most relevant.
    You can also use the [Graphviz module](https://pypi.org/project/graphviz/) to
    render a graphical representation of your decision tree programmatically.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Linear Regression Analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Linear regression is another well-used supervised machine learning algorithm.
    The goal of linear regression analysis is to deduce an outcome or value based
    on a variable or set of variables.
  prefs: []
  type: TYPE_NORMAL
- en: Like most algorithms, the best way to visualize this is using a graph with two
    axes. The Y axis represents the dependent variable, while the X holds the independent
    variable. Linear regression analysis’s goal is to [form or find a relationship](/2022/07/linear-regression-data-science.html)
    between these two variables.
  prefs: []
  type: TYPE_NORMAL
- en: If an increase in the independent variable causes an increase in the dependent
    variable (similar to exponential growth), this is known as a positive relationship.
    On the other hand, if the dependent variable’s value decreases as the independent
    variable’s value increases (similar to exponential decay), this is known as a
    negative relationship.
  prefs: []
  type: TYPE_NORMAL
- en: We use a [line of best fit](https://www.investopedia.com/terms/l/line-of-best-fit.asp)
    to determine the relationship, which can be represented using the slope-intercept
    linear equation *y=mx+b*.
  prefs: []
  type: TYPE_NORMAL
- en: 'But how do we facilitate linear regression in R and Python? The packages most
    concerned with linear regression analysis in the R programming language are:'
  prefs: []
  type: TYPE_NORMAL
- en: ggplot2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dplyr
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: broom
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ggpubr
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *gg* packages are used for creating and plotting graphs, whereas *dplyr*
    and *broom* are used to manipulate and display data. *sklearn.linear_model* can
    be used to [build your linear regression model](/2020/10/guide-linear-regression-models.html)
    in Python. You can also add NumPY to process large matrices and arrays.
  prefs: []
  type: TYPE_NORMAL
- en: '![A Comparison of Machine Learning Algorithms in Python and R](../Images/1552351011e35887144ae4bbbcf23629.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Pexels](https://www.pexels.com/photo/math-equation-printed-on-paper-8482062/)
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Logistic Regression
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As with linear regression, logistic regression allows us to predict the value
    of a variable based on another (set of) variable(s). However, where linear regression
    uses metric values, logistic regression uses discrete variables. These are dichotomous
    variables that can only have one of two values (yes or no, 0 or 1, true or false,
    etc.).
  prefs: []
  type: TYPE_NORMAL
- en: In the real world, this can be [used to determine the likelihood](https://www.techtarget.com/searchbusinessanalytics/definition/logistic-regression)
    of a person purchasing a product (retail) or the likelihood of them carrying a
    disease (healthcare). For instance, we could use age, height, and weight as independent
    variables (x). And the binary outcome would be the dependent variable (y). Thus,
    x is the domain of real numbers, and y contains discrete values.
  prefs: []
  type: TYPE_NORMAL
- en: The goal of logistic regression is to estimate (predict) the probability of
    an outcome or occurrence. Because the values of the y values are binary, we can’t
    use a linear equation and must use an [activation function](/2022/06/activation-functions-work-deep-learning.html)
    instead.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Sigmoid Function is used to represent logistic regression:'
  prefs: []
  type: TYPE_NORMAL
- en: '*f(x) = L / 1+e^(-x)*'
  prefs: []
  type: TYPE_NORMAL
- en: or
  prefs: []
  type: TYPE_NORMAL
- en: '*y = 1/(1+e^-(a+b1x1+b2x2+b3x3+...))*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The Python packages and modules most concerned with logistic regression are:'
  prefs: []
  type: TYPE_NORMAL
- en: matplotlib.pyplot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sklearn.linear_model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sklearn.metrics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The procedure for generating logistic regressions with R is much simpler and
    can be done using the glm() function.
  prefs: []
  type: TYPE_NORMAL
- en: 5\. Support Vector Machines
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Support vector machine [(SVM) algorithms](/2022/08/support-vector-machines-intuitive-approach.html)
    are primarily used for classification but can also be used for regression-based
    tasks. SVMs are one of the simplest approaches to classification.
  prefs: []
  type: TYPE_NORMAL
- en: In an SVM, the object that must be classified is represented as a point in an
    n-dimensional space. Each coordinate of this point is called its feature. SVMs
    attempt to classify an object by first drawing a hyperplane so that all points
    of each category are on either side.
  prefs: []
  type: TYPE_NORMAL
- en: While there could potentially be multiple hyperplanes, SVM attempts to find
    the one that best separates the two categories. It mainly achieves this by finding
    the maximum distance between the categories, known as the margin. The points that
    touch or fall directly on the margin are called the supporting vectors.
  prefs: []
  type: TYPE_NORMAL
- en: Since SVM is a [supervised machine learning method](/2022/03/machine-learning-algorithms-classification.html),
    it requires training data. You can implement this machine learning algorithm in
    Python using sklearn’s dedicated SVM module. SVMs in R are typically handled using
    the contour and plot functions.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Many of these algorithms are a testament to how heavily reliant machine learning
    is on probability and statistics. Although R predates modern machine learning
    engineering, it’s relevant to it because it is a statistical programming language.
    As such, many of these algorithms can easily be built or implemented out of the
    box.
  prefs: []
  type: TYPE_NORMAL
- en: Python is a multi-paradigm general-purpose programming language, so it has a
    wider array of use cases. Sci-kit–learn is the most trusted library for Python
    machine learning modules. If you want to [learn more about the above algorithms](https://scikit-learn.org/stable/)
    and more, visit the library’s official website.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Nahla Davies](http://nahlawrites.com/)** is a software developer and tech
    writer. Before devoting her work full time to technical writing, she managed —
    among other intriguing things — to serve as a lead programmer at an Inc. 5,000
    experiential branding organization whose clients include Samsung, Time Warner,
    Netflix, and Sony.'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Automated Machine Learning with Python: A Comparison of Different…](https://www.kdnuggets.com/2023/03/automated-machine-learning-python-comparison-different-approaches.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ChatGPT vs Google Bard: A Comparison of the Technical Differences](https://www.kdnuggets.com/2023/03/chatgpt-google-bard-comparison-technical-differences.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Deep Dive into GPT Models: Evolution & Performance Comparison](https://www.kdnuggets.com/2023/05/deep-dive-gpt-models.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[An Honest Comparison of Open Source Vector Databases](https://www.kdnuggets.com/an-honest-comparison-of-open-source-vector-databases)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News, July 20: Machine Learning Algorithms Explained in…](https://www.kdnuggets.com/2022/n29.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Machine Learning Algorithms - What, Why, and How?](https://www.kdnuggets.com/2022/09/machine-learning-algorithms.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
