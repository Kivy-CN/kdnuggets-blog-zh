["```py\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n```", "```py\ntennis = pd.read_csv('tennis.csv')\ntennis\n\n```", "```py\noutlook = tennis.groupby(['outlook', 'play']).size()\ntemp = tennis.groupby(['temp', 'play']).size()\nhumidity = tennis.groupby(['humidity', 'play']).size()\nwindy = tennis.groupby(['windy', 'play']).size()\nplay = tennis.play.value_counts()\n\n```", "```py\nprint(temp)\nprint('------------------')\nprint(humidity)\nprint('------------------')\nprint(windy)\nprint('------------------')\nprint(outlook)\nprint('------------------')\nprint('play')\nprint(play)\n\n```", "```py\n temp  play\ncool  no      1\n      yes     3\nhot   no      2\n      yes     2\nmild  no      2\n      yes     4\ndtype: int64\n------------------\nhumidity  play\nhigh      no      4\n          yes     3\nnormal    no      1\n          yes     6\ndtype: int64\n------------------\nwindy  play\nFalse  no      2\n       yes     6\nTrue   no      3\n       yes     3\ndtype: int64\n------------------\noutlook   play\novercast  yes     4\nrainy     no      2\n          yes     3\nsunny     no      3\n          yes     2\ndtype: int64\n------------------\nplay\nyes    9\nno     5\nName: play, dtype: int64 \n```", "```py\n(3/9)*(9/14)/(5/14)\n\n```", "```py\n 0.6 \n```", "```py\n  def bayestheorem():\n    print('Posterior [P(c|x)] - Posterior probability of the target/class (c) given predictors (x)'),\n    print('Prior [P(c)] - Prior probability of the class (target)'),\n    print('Likelihood [P(x|c)] - Probability of the predictor (x) given the class/target (c)'),\n    print('Evidence [P(x)] - Prior probability of the predictor (x))')\n\n```", "```py\n  def bayesposterior(prior, likelihood, evidence, string):\n      print('Prior=', prior),\n      print('Likelihood=', likelihood),\n      print('Evidence=', evidence),\n      print('Equation =','(Prior*Likelihood)/Evidence')\n      print(string, (prior*likelihood)/evidence)\n\n```", "```py\nct = pd.crosstab(tennis['outlook'], tennis['play'], margins = True)\nprint(ct)\n\n```", "```py\n no  yes  rowtotal\novercast   0    4         4\nrainy      2    3         5\nsunny      3    2         5\ncoltotal   5    9        14 \n```", "```py\nct.columns = [\"no\",\"yes\",\"rowtotal\"]\nct.index= [\"overcast\",\"rainy\",\"sunny\",\"coltotal\"]\nct / ct.loc[\"coltotal\",\"rowtotal\"]\n\n```", "```py\nct / ct.loc[\"coltotal\"]\n\n```", "```py\nct.div(ct[\"rowtotal\"], axis=0)\n\n```", "```py\nbayesposterior(prior = ct.iloc[1,1]/ct.iloc[3,1],\n               likelihood = ct.iloc[3,1]/ct.iloc[3,2],\n               evidence = ct.iloc[1,2]/ct.iloc[3,2],\n               string = 'Probability of Tennis given Rain =')\n\n```", "```py\n Prior= 0.3333333333333333\nLikelihood= 0.6428571428571429\nEvidence= 0.35714285714285715\nEquation = (Prior*Likelihood)/Evidence\nProbability of Tennis given Rain = 0.6 \n```", "```py\npd.crosstab(tennis['outlook'], tennis['play'], margins = True)\n\n```", "```py\npd.crosstab(tennis['temp'], tennis['play'], margins = True)\n\n```", "```py\npd.crosstab(tennis['humidity'], tennis['play'], margins = True)\n\n```", "```py\npd.crosstab(tennis['windy'], tennis['play'], margins = True)\n\n```", "```py\npd.crosstab(index=tennis['play'],columns=\"count\", margins=True)\n\n```", "```py\np_x_yes = ((2/9)*(2/9)*(3/9)*(3/9))\nprint('The probability of the predictors given playing tennis is', '%.3f'%p_x_yes)\n\n```", "```py\n The probability of the predictors given playing tennis is 0.005 \n```", "```py\np_x_no = ((3/5)*(2/5)*(4/5)*(3/5))\nprint('The probability of the predictors given not playing tennis is ', '%.3f'%p_x_no)\n\n```", "```py\n The probability of the predictors given not playing tennis is  0.115 \n```", "```py\nyes = (9/14)\nno = (5/14)\nprint('The probability of playing tennis is', '%.3f'% yes)\nprint('The probability of not playing tennis is', '%.3f'% no)\n\n```", "```py\n The probability of playing tennis is 0.643\nThe probability of not playing tennis is 0.357 \n```", "```py\nyes_x = p_x_yes*yes\nprint('The probability of playing tennis given the predictors is', '%.3f'%yes_x)\n\nno_x = p_x_no*no\nprint('The probability of not playing tennis given the predictors is', '%.3f'%no_x)\n\n```", "```py\n The probability of playing tennis given the predictors is 0.004\n  The probability of not playing tennis given the predictors is 0.041 \n```", "```py\nif yes_x > no_x:\n  print('The probability of playing tennis when the outlook is sunny, the temperature is hot, there is high humidity and windy is higher')\nelse:\n  print('The probability of not playing tennis when the outlook is sunny, the temperature is hot, there is high humidity and windy is higher')\n\n```", "```py\nThe probability of not playing tennis is higher when the outlook is sunny, the temperature is hot, there is high humidity and it is windy. \n\n```", "```py\nfrom sklearn.naive_bayes import GaussianNB, BernoulliNB, MultinomialNB\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import *\n\n```"]