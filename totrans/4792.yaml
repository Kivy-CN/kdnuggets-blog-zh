- en: An End-to-End Project on Time Series Analysis and Forecasting with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2018/09/end-to-end-project-time-series-analysis-forecasting-python.html](https://www.kdnuggets.com/2018/09/end-to-end-project-time-series-analysis-forecasting-python.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Susan Li](https://www.linkedin.com/in/susanli/), Sr. Data Scientist**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/007c34d3e49aa9227bd649c6ecfc3669.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo credit: Pexels
  prefs: []
  type: TYPE_NORMAL
- en: '[Time series](https://en.wikipedia.org/wiki/Time_series) analysis comprises
    methods for analyzing time series data in order to extract meaningful statistics
    and other characteristics of the data. Time series forecasting is the use of a
    model to predict future values based on previously observed values.'
  prefs: []
  type: TYPE_NORMAL
- en: Time series are widely used for non-stationary data, like economic, weather,
    stock price, and retail sales in this post. We will demonstrate different approaches
    for forecasting retail sales time series. Let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: The Data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We are using [Superstore sales data](https://community.tableau.com/docs/DOC-1236) that
    can be downloaded from [here](https://community.tableau.com/docs/DOC-1236).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: There are several categories in the Superstore sales data, we start from time
    series analysis and forecasting for furniture sales.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: We have a good 4-year furniture sales data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '***Timestamp(‘2014–01–06 00:00:00’), Timestamp(‘2017–12–30 00:00:00’)***'
  prefs: []
  type: TYPE_NORMAL
- en: Data Preprocessing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This step includes removing columns we do not need, check missing values, aggregate
    sales by date and so on.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/9e310252d00714d9cb566f295d4fe2eb.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Indexing with Time Series Data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/842b0c6fef27d6d9b2a5d18e6b1bf13b.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2
  prefs: []
  type: TYPE_NORMAL
- en: Our current datetime data can be tricky to work with, therefore, we will use
    the averages daily sales value for that month instead, and we are using the start
    of each month as the timestamp.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Have a quick peek 2017 furniture sales data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/45b40d42d70d401742c3602562f34c8e.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3
  prefs: []
  type: TYPE_NORMAL
- en: '**Visualizing Furniture Sales Time Series Data**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/2d52eb8283368801ce89aab557388683.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4
  prefs: []
  type: TYPE_NORMAL
- en: Some distinguishable patterns appear when we plot the data. The time-series
    has seasonality pattern, such as sales are always low at the beginning of the
    year and high at the end of the year. There is always an upward trend within any
    single year with a couple of low months in the mid of the year.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can also visualize our data using a method called time-series decomposition
    that allows us to decompose our time series into three distinct components: trend,
    seasonality, and noise.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/64d2a6435da4b3e8a655f809fc650dba.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5
  prefs: []
  type: TYPE_NORMAL
- en: The plot above clearly shows that the sales of furniture is unstable, along
    with its obvious seasonality.
  prefs: []
  type: TYPE_NORMAL
- en: '**Time series forecasting with ARIMA**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We are going to apply one of the most commonly used method for time-series forecasting,
    known as ARIMA, which stands for Autoregressive Integrated Moving Average.
  prefs: []
  type: TYPE_NORMAL
- en: 'ARIMA models are denoted with the notation `ARIMA(p, d, q)`. These three parameters
    account for seasonality, trend, and noise in data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/a13544bd6cdd9c9136c9e48e1380af9b.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6
  prefs: []
  type: TYPE_NORMAL
- en: This step is parameter Selection for our furniture’s sales ARIMA Time Series
    Model. Our goal here is to use a “grid search” to find the optimal set of parameters
    that yields the best performance for our model.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/d9ff24b37a1d7e23fbd7efbefec6c7de.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7
  prefs: []
  type: TYPE_NORMAL
- en: The above output suggests that `SARIMAX(1, 1, 1)x(1, 1, 0, 12)` yields the lowest `AIC` value
    of 297.78\. Therefore we should consider this to be optimal option.
  prefs: []
  type: TYPE_NORMAL
- en: Fitting the ARIMA model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/49a810b195dccb38acd233231f57fc16.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8
  prefs: []
  type: TYPE_NORMAL
- en: We should always run model diagnostics to investigate any unusual behavior.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/e819c05d127ab60904c32d74bd913c5f.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9
  prefs: []
  type: TYPE_NORMAL
- en: It is not perfect, however, our model diagnostics suggests that the model residuals
    are near normally distributed.
  prefs: []
  type: TYPE_NORMAL
- en: '**Validating forecasts**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To help us understand the accuracy of our forecasts, we compare predicted sales
    to real sales of the time series, and we set forecasts to start at 2017–01–01
    to the end of the data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/97c784ee74a8c276cdd71d8b4d8ec512.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10
  prefs: []
  type: TYPE_NORMAL
- en: The line plot is showing the observed values compared to the rolling forecast
    predictions. Overall, our forecasts align with the true values very well, showing
    an upward trend starts from the beginning of the year and captured the seasonality
    toward the end of the year.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '***The Mean Squared Error of our forecasts is 22993.58***'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '***The Root Mean Squared Error of our forecasts is 151.64***'
  prefs: []
  type: TYPE_NORMAL
- en: In statistics, the [mean squared error (MSE)](https://en.wikipedia.org/wiki/Mean_squared_error) of
    an estimator measures the average of the squares of the errors — that is, the
    average squared difference between the estimated values and what is estimated.
    The MSE is a measure of the quality of an estimator — it is always non-negative,
    and the smaller the MSE, the closer we are to finding the line of best fit.
  prefs: []
  type: TYPE_NORMAL
- en: '[Root Mean Square Error (RMSE)](https://en.wikipedia.org/wiki/Root-mean-square_deviation) tells
    us that our model was able to forecast the average daily furniture sales in the
    test set within 151.64 of the real sales. Our furniture daily sales range from
    around 400 to over 1200\. In my opinion, this is a pretty good model so far.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Producing and visualizing forecasts**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/591ccb115dc4f11b8f9b3faceb5e957b.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11
  prefs: []
  type: TYPE_NORMAL
- en: Our model clearly captured furniture sales seasonality. As we forecast further
    out into the future, it is natural for us to become less confident in our values.
    This is reflected by the confidence intervals generated by our model, which grow
    larger as we move further out into the future.
  prefs: []
  type: TYPE_NORMAL
- en: The above time series analysis for furniture makes me curious about other categories,
    and how do they compare with each other over time. Therefore, we are going to
    compare time series of furniture and office supplier.
  prefs: []
  type: TYPE_NORMAL
- en: '**Time Series of Furniture vs. Office Supplies**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: According to our data, there were way more number of sales from Office Supplies
    than from Furniture over the years.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '***((2121, 21), (6026, 21))***'
  prefs: []
  type: TYPE_NORMAL
- en: Data Exploration
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We are going to compare two categories’ sales in the same time period. This
    means combine two data frames into one and plot these two categories’ time series
    into one plot.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/4a293076ddcd30b3db0acb02cff398af.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/fda355c4a65152a5a18378da9e3b73d9.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 13
  prefs: []
  type: TYPE_NORMAL
- en: We observe that sales of furniture and office supplies shared a similar seasonal
    pattern. Early of the year is the off season for both of the two categories. It
    seems summer time is quiet for office supplies too. in addition, average daily
    sales for furniture are higher than those of office supplies in most of the months.
    It is understandable, as the value of furniture should be much higher than those
    of office supplies. Occasionally, office supplies passed furniture on average
    daily sales. Let’s find out when was the first time office supplies’ sales surpassed
    those of furniture’s.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '***Office supplies first time produced higher sales than furniture is 2014–07–01***.'
  prefs: []
  type: TYPE_NORMAL
- en: It was July 2014!
  prefs: []
  type: TYPE_NORMAL
- en: '**Time Series Modeling with Prophet**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Released by Facebook in 2017, forecasting tool [Prophet](https://research.fb.com/prophet-forecasting-at-scale/) is
    designed for analyzing time-series that display patterns on different time scales
    such as yearly, weekly and daily. It also has advanced capabilities for modeling
    the effects of holidays on a time-series and implementing custom changepoints.
    Therefore, we are using Prophet to get a model up and running.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/318ec9e7ef49461c98e6c719690a2cd7.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/e3f597e718a5416383f9fd9e9b36e8ea.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 15
  prefs: []
  type: TYPE_NORMAL
- en: '**Compare Forecasts**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We already have the forecasts for three years for these two categories into
    the future. We will now join them together to compare their future forecasts.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/8a8d17cd95e50507ade70cd609bc969b.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 16
  prefs: []
  type: TYPE_NORMAL
- en: Trend and Forecast Visualization
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/bd50280d9370f8f12f707ddff628c98d.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/c670bfc666b9eb43f4d4b50d9bfff6d8.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 18
  prefs: []
  type: TYPE_NORMAL
- en: '**Trends and Patterns**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now, we can use the Prophet Models to inspect different trends of these two
    categories in the data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/0344ec3d5939c21f56425794a5276538.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 19
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/f26354770069146caf7c93fe56830bca.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 20
  prefs: []
  type: TYPE_NORMAL
- en: Good to see that the sales for both furniture and office supplies have been
    linearly increasing over time and will be keep growing, although office supplies’
    growth seems slightly stronger.
  prefs: []
  type: TYPE_NORMAL
- en: The worst month for furniture is April, the worst month for office supplies
    is February. The best month for furniture is December, and the best month for
    office supplies is October.
  prefs: []
  type: TYPE_NORMAL
- en: There are many time-series analysis we can explore from now on, such as forecast
    with uncertainty bounds, change point and anomaly detection, forecast time-series
    with external data source. We have only just started.
  prefs: []
  type: TYPE_NORMAL
- en: Source code can be found on [Github](https://github.com/susanli2016/Machine-Learning-with-Python/blob/master/Time%20Series%20Forecastings.ipynb).
    I look forward to hearing feedback or questions.
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Susan Li](https://www.linkedin.com/in/susanli/)** is changing the world,
    one article at a time. She is a Sr. Data Scientist, located in Toronto, Canada.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/an-end-to-end-project-on-time-series-analysis-and-forecasting-with-python-4835e6bf050b).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Multi-Class Text Classification with Scikit-Learn](/2018/08/multi-class-text-classification-scikit-learn.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Quick Feature Engineering with Dates Using fast.ai](/2018/03/feature-engineering-dates-fastai.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Time Series for Dummies – The 3 Step Process](/2018/03/time-series-dummies-3-step-process.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Time Series Forecasting with Ploomber, Arima, Python, and Slurm](https://www.kdnuggets.com/2022/03/time-series-forecasting-ploomber-arima-python-slurm.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Time Series Forecasting with statsmodels and Prophet](https://www.kdnuggets.com/2023/03/time-series-forecasting-statsmodels-prophet.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Leveraging XGBoost for Time-Series Forecasting](https://www.kdnuggets.com/2023/08/leveraging-xgboost-timeseries-forecasting.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Simple to Implement End-to-End Project with HuggingFace](https://www.kdnuggets.com/a-simple-to-implement-end-to-end-project-with-huggingface)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Beginner''s Guide to End to End Machine Learning](https://www.kdnuggets.com/2021/12/beginner-guide-end-end-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Full End-to-End Deployment of a Machine Learning Algorithm into a…](https://www.kdnuggets.com/2021/12/deployment-machine-learning-algorithm-live-production-environment.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
