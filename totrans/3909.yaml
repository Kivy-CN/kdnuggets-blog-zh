- en: Learning SQL the Hard Way
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习 SQL 的艰难方式
- en: 原文：[https://www.kdnuggets.com/2020/01/learning-sql-hard-way.html](https://www.kdnuggets.com/2020/01/learning-sql-hard-way.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/01/learning-sql-hard-way.html](https://www.kdnuggets.com/2020/01/learning-sql-hard-way.html)
- en: '[comments](#comments)![Figure](../Images/13db05514298ed074e5db11a883f6d74.png)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments) ![图](../Images/13db05514298ed074e5db11a883f6d74.png)'
- en: '[Source](https://pixabay.com/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=1246836)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[来源](https://pixabay.com/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=1246836)'
- en: '***A Data Scientist who doesn’t know SQL is not worth his salt****.*'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '***一个不懂 SQL 的数据科学家是不值得的。***'
- en: And that seems correct to me in every sense of the world. While we feel much
    more accomplished creating models and coming up with the different hypotheses,
    the role of data munging can’t be understated.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，这在各方面都是正确的。虽然我们在创建模型和提出不同的假设时会感到更有成就感，但数据处理的角色不容忽视。
- en: And with the ubiquitousness of SQL when it comes to ETL and data preparation
    tasks, everyone should know a little bit of it to at least be useful.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到 SQL 在 ETL 和数据准备任务中的普遍性，每个人都应该了解一点 SQL，以便至少能够有所帮助。
- en: I still remember the first time I got my hands on SQL. It was the first language
    (if you can call it that) I learned. And it made an impact on me. I was able to
    automate things, and that was something I hadn’t thought of before.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我仍然记得第一次接触 SQL 的情景。这是我学到的第一个语言（如果你可以这么称呼它）。它给我留下了深刻的印象。我能够自动化很多事情，这是我之前从未考虑过的。
- en: Before SQL, I used to work with Excel — VLOOKUPs and pivots. I was creating
    reporting systems, doing the same work again and again. SQL made it all go away.
    Now I could write a big script, and everything would be automated — all the crosstabs
    and analysis generated on the fly.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习 SQL 之前，我曾使用 Excel —— VLOOKUP 和数据透视表。我在创建报告系统，一遍又一遍地做着相同的工作。SQL 让这些问题迎刃而解。现在我可以编写一个大的脚本，一切都能自动化——所有的交叉表和分析都能实时生成。
- en: That is the power of SQL. And though you could do anything that you do with
    SQL using [Pandas](https://towardsdatascience.com/minimal-pandas-subset-for-data-scientists-6355059629ae),
    you still need to learn SQL to deal with systems like HIVE, Teradata and sometimes [Spark](https://towardsdatascience.com/the-hitchhikers-guide-to-handle-big-data-using-spark-90b9be0fe89a) too.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是 SQL 的强大之处。虽然你可以使用 [Pandas](https://towardsdatascience.com/minimal-pandas-subset-for-data-scientists-6355059629ae)
    完成你在 SQL 中做的任何事情，但你仍然需要学习 SQL 来处理像 HIVE、Teradata 有时还包括 [Spark](https://towardsdatascience.com/the-hitchhikers-guide-to-handle-big-data-using-spark-90b9be0fe89a)
    这样的系统。
- en: '***This post is about installing SQL, explaining SQL and running SQL.***'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '***这篇文章关于安装 SQL、解释 SQL 和运行 SQL。***'
- en: Setting up the SQL Environment
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置 SQL 环境
- en: Now the best way to learn SQL is to get your hands dirty with it(Same I can
    say for any other thing you want to learn)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在学习 SQL 的最佳方式是亲自动手实践（对于任何你想学习的东西，我都可以这么说）。
- en: I will advise against using the web-based recipes like w3schools/tutorialspoint
    for SQL since you cannot use your data with those.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议不要使用像 w3schools/tutorialspoint 这样的基于网络的 SQL 教程，因为你无法在其中使用自己的数据。
- en: Also, I will advise you to go with learning the MySQL flavour of SQL as it is
    Open Source, easy to set up in your laptop and has a great client named MySQL
    Workbench to make your life easier.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我建议你学习 MySQL 版本的 SQL，因为它是开源的，易于在你的笔记本电脑上设置，并且有一个很棒的客户端 MySQL Workbench 可以让你的工作更加轻松。
- en: 'As we have gotten these points out of the way, here is a step by step to get
    set up with MySQL:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们解决了这些要点之后，这里是逐步设置 MySQL 的步骤：
- en: You can download MySQL for your particular system (MACOSX, Linux, Windows) from [Download
    MySQL Community Server](http://dev.mysql.com/downloads/mysql/). In my case, I
    downloaded the DMG Archive. After that, double click and install the file. ***You
    might need to set up a password. Remember this password as it would be required
    to connect to the MySQL instance later.***
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以从 [Download MySQL Community Server](http://dev.mysql.com/downloads/mysql/)
    下载适用于你的系统（MACOSX、Linux、Windows）的 MySQL。在我的情况下，我下载了 DMG 文件。之后，双击并安装该文件。***你可能需要设置一个密码。请记住这个密码，因为稍后连接到
    MySQL 实例时会需要它。***
- en: '![](../Images/3c4eed91fd996402626030cb61854b7d.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3c4eed91fd996402626030cb61854b7d.png)'
- en: Create a file named `my.cnf` and put the following in it. This is needed to
    give Local file read permissions to your SQL database.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个名为 `my.cnf` 的文件，并在其中放入以下内容。这是为了给你的 SQL 数据库提供本地文件读取权限。
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Open up `System Preferences>MySQL`. Go to `Configuration` and browse to the `my.cnf` file
    using the select button.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开 `System Preferences>MySQL`。前往 `Configuration` 并使用选择按钮浏览到 `my.cnf` 文件。
- en: '![](../Images/dbdba9b4617492492975cdbe43db35cd.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dbdba9b4617492492975cdbe43db35cd.png)'
- en: Restart the server from `Instances` tab by clicking stop and start.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`Instances`标签中重启服务器，点击停止然后开始。
- en: '![](../Images/5c14873af530f6d27fc8d40a7a750dd8.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5c14873af530f6d27fc8d40a7a750dd8.png)'
- en: Once you get that server running, download and install the MySQL Workbench: [Download
    MySQL Workbench](https://dev.mysql.com/downloads/workbench/). The workbench gives
    you an editor to write your SQL Queries and get the results in a structured way.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦服务器运行起来，下载并安装MySQL工作台：[下载MySQL工作台](https://dev.mysql.com/downloads/workbench/)。工作台为你提供了一个编辑器，用于编写SQL查询并以结构化方式获取结果。
- en: '![](../Images/9e29b2c92b14ad7944239e656b8e742d.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9e29b2c92b14ad7944239e656b8e742d.png)'
- en: Open up the MySQL workbench now and connect to SQL through it. You will see
    something like below.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在打开MySQL工作台并通过它连接到SQL。你将看到类似于下面的内容。
- en: '![](../Images/11ce893e1e9a7772636dabdffeada7ee.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/11ce893e1e9a7772636dabdffeada7ee.png)'
- en: You can see that the Local Instance connection has been set up for you beforehand.
    Now, you just need to click on that connection and get started using the password
    that we set up before for the MySQL server(You can also create a connection to
    an existing SQL server that might not be on your machine if you have the address,
    port number, username and password).
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你会看到本地实例连接已为你事先设置好。现在，你只需点击该连接并使用我们之前为MySQL服务器设置的密码开始使用（如果你有地址、端口号、用户名和密码，也可以创建到其他SQL服务器的连接，即使该服务器不在你的计算机上）。
- en: '![](../Images/d802212164a29bc8fb09306e11796c66.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d802212164a29bc8fb09306e11796c66.png)'
- en: And you get an editor to write your queries on the particular database.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后你可以在特定的数据库上编写查询。
- en: '![](../Images/663f54d0f39e89de06eeb028f11ba03d.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/663f54d0f39e89de06eeb028f11ba03d.png)'
- en: Check the `Schemas` tab on the top left to see the tables that are present.
    There is just a `sys` schema present with the table `sys_config`. Not an interesting
    data source to learn SQL. So let’s install some data to practice.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看左上角的`Schemas`标签，查看当前存在的表。只有一个`sys`模式，包含`sys_config`表。不是一个有趣的数据源来学习SQL。所以让我们安装一些数据来练习。
- en: If you have your own data to work. Then good and fine. You can create a new
    schema(database) and upload it into tables using these following commands. (You
    can run the commands by using `Cmd+Enter` or by clicking the ⚡️lightning button)
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你有自己的数据可用，那就很好。你可以创建一个新的模式（数据库）并使用以下命令将其上传到表中。（你可以通过使用`Cmd+Enter`或点击⚡️闪电按钮运行这些命令）
- en: '![](../Images/8e1326c4743f556367d0b7fa53d7b255.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8e1326c4743f556367d0b7fa53d7b255.png)'
- en: 'In this tutorial, however, I am going to use the Sakila Movie database which
    you can install using the following steps:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我将使用Sakila Movie数据库，你可以通过以下步骤安装它：
- en: Go to [MySQL Documentation](https://dev.mysql.com/doc/index-other.html) and
    download the Sakila ZIP file.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 前往[MySQL Documentation](https://dev.mysql.com/doc/index-other.html)并下载Sakila
    ZIP文件。
- en: Unzip the file.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解压文件。
- en: Now go to MySQL Workbench and select File>Run SQL Script>select location `sakila-db/sakila-schema.sql`
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在前往MySQL工作台，选择文件>运行SQL脚本>选择位置`sakila-db/sakila-schema.sql`
- en: Go to MySQL Workbench and select File >Run SQL Script >select location `sakila-db/sakila-data.sql`
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开MySQL工作台，选择文件 > 运行SQL脚本 > 选择位置`sakila-db/sakila-data.sql`
- en: Once you do that, you will see a new database added in the SCHEMA list.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你这样做，你会看到SCHEMA列表中新增了一个数据库。
- en: '![](../Images/991e5cf0916018acdb5f0fdd212bc8e1.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/991e5cf0916018acdb5f0fdd212bc8e1.png)'
- en: Playing with Data
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 操作数据
- en: Now we have some data with us. Finally.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有一些数据了。最终。
- en: Let’s start with writing some queries.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始编写一些查询。
- en: You can try to understand the Schema of the Sakila Database in detail using
    the [Sakila Sample Database](https://dev.mysql.com/doc/sakila/en/sakila-structure.html) document.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以尝试通过[Sakila Sample Database](https://dev.mysql.com/doc/sakila/en/sakila-structure.html)文档详细了解Sakila数据库的模式。
- en: '![Figure](../Images/43d77ee6e78931b44af4b8cfcb57ca88.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![Figure](../Images/43d77ee6e78931b44af4b8cfcb57ca88.png)'
- en: Schema Diagram
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 模式图
- en: 'Now the basic syntax of any SQL query is:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在任何SQL查询的基本语法是：
- en: '[PRE1]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'There are four elements in this query:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这个查询中有四个元素：
- en: '**SELECT**: Which Columns to select? Here we choose `col1` and do SUM aggregation
    on `col2` and AVG aggregation on `col3`. We also give a new name to `SUM(col2)` by
    using the `as` keyword. This is known as aliasing.'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**SELECT**: 选择哪些列？在这里我们选择`col1`，对`col2`进行SUM聚合，对`col3`进行AVG聚合。我们还使用`as`关键字为`SUM(col2)`指定一个新名称。这称为别名。'
- en: '**FROM**: From which table should we SELECT?'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**FROM**: 我们应该从哪个表中选择？'
- en: '**WHERE**: We can filter data using WHERE statements.'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**WHERE**: 我们可以使用WHERE语句来筛选数据。'
- en: '**GROUP BY**: All selected columns that are not in aggregation should be in
    GROUP BY.'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**GROUP BY**: 所有未在聚合中的选定列应在GROUP BY中。'
- en: '**ORDER BY**: Sort on `col2sum`'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**ORDER BY**: 按`col2sum`排序'
- en: The above query will help you with most of the simple things you want to find
    in a database.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 上述查询将帮助你完成大多数简单的数据库查找。
- en: 'For example, we can find out how differently censored rated movies are timed
    differently using:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以使用以下查询来找出不同审查评级的电影如何在时间上有所不同：
- en: '[PRE2]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/b4d8c6f364a0761c7610379a26aee215.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b4d8c6f364a0761c7610379a26aee215.png)'
- en: 'Exercise: Frame a Question'
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习：提出一个问题
- en: You should now come up with some questions of your own.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在应该提出自己的一些问题。
- en: For Example, you can try to find out all the movies released in the year 2006\.
    Or try to find all of the movies which have a rating of PG and length greater
    than 50 minutes.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可以尝试找出2006年发布的所有电影，或者找出所有评级为PG且时长超过50分钟的电影。
- en: 'You can do this by running the following on MySQL Workbench:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在MySQL Workbench中运行以下命令来完成这个操作：
- en: '[PRE3]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Joins in SQL
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SQL中的联接
- en: Till now, we have learned how we can work with single tables. But in reality,
    we need to work with multiple tables.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经学习了如何处理单个表。但实际上，我们需要处理多个表。
- en: So, the next thing we would want to learn is how to do joins.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，接下来我们想要学习的是如何进行联接。
- en: Now joins are an integral and an essential part of a MySQL Database and understanding
    them is necessary. The below visual talks about most of the joins that exist in
    SQL. I usually end up using just the LEFT JOIN, and INNER JOIN, so I will start
    with LEFT JOIN.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，联接是MySQL数据库的一个重要和必要的部分，理解它们是必需的。下面的视觉展示了SQL中大多数存在的联接。我通常只使用LEFT JOIN和INNER
    JOIN，所以我将从LEFT JOIN开始。
- en: '![](../Images/9f7d5a2f96baaabc9eb8c393ad920260.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9f7d5a2f96baaabc9eb8c393ad920260.png)'
- en: 'The LEFT JOIN is used when you want to keep all the records in the left table(A)
    and merge B on the matching records. The records of A where B is not merged are
    kept as NULL in the resulting table. The MySQL Syntax is:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: LEFT JOIN 用于当你想保留左表（A）中的所有记录，并将B合并在匹配的记录上。A中未与B合并的记录在结果表中保持为NULL。MySQL 语法是：
- en: '[PRE4]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Here we select col1 and col2 from table A and col3 and col4 from table B. We
    also specify which common columns to join on using the ON statement.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们从表A中选择col1和col2，从表B中选择col3和col4。我们还使用ON语句指定要联接的共同列。
- en: The INNER JOIN is used when you want to merge A and B and only to keep the common
    records in A and B.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想合并A和B并且只保留A和B中共同的记录时，使用INNER JOIN。
- en: 'Example:'
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例：
- en: 'To give you a use case lets go back to our Sakila database. Suppose we wanted
    to find out how many copies of each movie we do have in our inventory. You can
    get that by using:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，让我们回到Sakila数据库。假设我们想找出库存中每部电影的副本数量。你可以通过使用以下查询来得到：
- en: '[PRE5]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/85fd177569d265e448ae8c633002fe7d.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/85fd177569d265e448ae8c633002fe7d.png)'
- en: Does this result look interesting? Not really. IDs don’t make sense to us humans,
    and if we can get the names of the movies, we would be able to process the information
    better. So we snoop around and see that the table `film` has got `film_id` as
    well as the `title` of the film.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这个结果看起来有趣吗？不太。ID 对我们人类没有意义，如果我们能获取电影的名称，我们将能更好地处理信息。因此，我们调查发现表`film`中有`film_id`以及电影的`title`。
- en: So we have all the data, but how do we get it in a single view?
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们有了所有数据，那我们如何将它们汇总到一个视图中呢？
- en: Come Joins to the rescue. We need to add the `title` to our inventory table
    information. We can do this using —
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 来进行联接吧。我们需要将`title`添加到我们的库存表信息中。我们可以使用—
- en: '[PRE6]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/d70bfc61f0adbfb45d1ffad053b0035c.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d70bfc61f0adbfb45d1ffad053b0035c.png)'
- en: This will add another column to your inventory table information. As you might
    notice some films are in the `film` table that we don’t have in the `inventory`.
    We used a left join since we wanted to keep whatever is in the inventory table
    and join it with its corresponding counterpart in the `film` table and not everything
    in the `film` table.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这将向你的库存表信息中添加另一列。正如你可能注意到的，一些电影在`film`表中，但我们在`inventory`中没有。我们使用了左联接，因为我们想保留库存表中的所有内容，并将其与`film`表中的相应内容进行联接，而不是`film`表中的所有内容。
- en: So now we have got the title as another field in the data. This is just what
    we wanted, but we haven’t solved the whole puzzle yet. We want `title` and `num_copies` of
    the title in the inventory.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们在数据中得到了另一个字段作为标题。这正是我们想要的，但我们还没有解决整个难题。我们想要的是`title`和库存中的`num_copies`。
- en: But before we can go any further, we should understand the concept of inner
    queries first.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 但在进一步深入之前，我们应该先理解内查询的概念。
- en: 'Inner Query:'
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 内查询：
- en: Now you have a query that can give you the above result. One thing you can do
    is create a new table using
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你有了一个可以提供上述结果的查询。你可以做的一件事是使用
- en: '[PRE7]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'And then use a simple group by operation using:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用简单的分组操作：
- en: '[PRE8]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/4cce562f2edff7c3641fe21d0e113b21.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4cce562f2edff7c3641fe21d0e113b21.png)'
- en: But this is one step too many. And we have to create a temporary table that
    ends up taking space on the system.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 但这一步有些过多了。我们还必须创建一个临时表，这会占用系统空间。
- en: 'SQL provides us with the concept of the inner query just for these sort of
    issues. You can instead write all this in a single query using:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: SQL 为这些问题提供了内查询的概念。你可以改为使用以下方法将所有这些写在一个查询中：
- en: '[PRE9]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/7363abc55e8eacc55ebd2e9bf786bdc8.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7363abc55e8eacc55ebd2e9bf786bdc8.png)'
- en: What we did here was sandwich our first query in parenthesis and gave that table
    an alias `temp`. We then did the group by operations considering `temp` just as
    we would consider any table. It is because of the inner query concept that we
    can write SQL queries that span multiple pages at some times.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里做的是将第一个查询用括号括起来，并给那个表一个别名 `temp`。然后我们就像考虑任何表一样考虑 `temp` 进行分组操作。正是因为内查询的概念，我们才能编写有时跨越多页的
    SQL 查询。
- en: The HAVING Clause
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**HAVING 子句**'
- en: HAVING is yet another SQL construct that is useful to understand. So we have
    got the results, and now we want to get the films whose number of copies are less
    than or equal to 2.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: HAVING 是另一个有用的 SQL 构造。我们已经得到了结果，现在我们想找出复制数量少于或等于 2 的电影。
- en: We can do this by using the inner query concept and the WHERE clause. Here we
    nest one inner query inside another. Pretty neat.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用内查询概念和 WHERE 子句来完成这项任务。在这里，我们将一个内查询嵌套在另一个查询中。非常简洁。
- en: '![](../Images/bb399d38acd4af4db2d8993f1118ffb5.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bb399d38acd4af4db2d8993f1118ffb5.png)'
- en: Or, we can use the HAVING Clause.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们可以使用 HAVING 子句。
- en: '![](../Images/66954520e84bf07ab159b5dd7dbad670.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/66954520e84bf07ab159b5dd7dbad670.png)'
- en: The HAVING clause is used to filter on the final aggregated result. It is different
    from WHERE as where is used to filter the table that is used in the FROM statement.
    HAVING filters the final result after the GROUP BY happens.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: HAVING 子句用于对最终聚合结果进行筛选。它与 WHERE 不同，因为 WHERE 用于筛选 FROM 语句中使用的表。HAVING 在 GROUP
    BY 发生后筛选最终结果。
- en: There are a lot of ways to do the same thing with SQL as you have already seen
    in the above example. We need to try to come up with the least verbose and thus
    HAVING makes sense in many cases.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在上述示例中已经看到的，使用 SQL 做同样的事情有很多方法。我们需要尝试提出最简洁的方法，因此在许多情况下 HAVING 是合理的。
- en: If you can follow this far, you already know more SQL than most people.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你能跟到这里，你已经比大多数人掌握了更多的 SQL 知识。
- en: Next thing to do: ***Practice***.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步：***练习***。
- en: Try to come up with your questions on your dataset and try to find out the answers
    you have using SQL.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试提出关于你的数据集的问题，并尝试使用 SQL 找出你的答案。
- en: 'Some questions I could provide for a start:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 一些我可以提供的问题作为开始：
- en: '***Which Actor has the most distinct films in our inventory?***'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '***我们库存中哪位演员拥有最多的独特电影？***'
- en: '***Which Genre films are the most rented in our inventory?***'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '***我们库存中最受租赁的电影类型是哪些？***'
- en: Continue Learning
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 继续学习
- en: This was just a simple tutorial on how to use SQL. If you want to learn more
    about SQL, I would like to call out an excellent course on [SQL for Data Science](https://click.linksynergy.com/link?id=lVarvwc5BD0&offerid=467035.11605513096&type=2&murl=https%3A%2F%2Fwww.coursera.org%2Flearn%2Fsql-for-data-science) from
    the University of California. Do check it out as it talks about other SQL concepts
    like UNION, String Manipulation, functions, Date Handling, etc.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是一个关于如何使用 SQL 的简单教程。如果你想了解更多关于 SQL 的知识，我推荐一个由加州大学提供的优秀课程[SQL for Data Science](https://click.linksynergy.com/link?id=lVarvwc5BD0&offerid=467035.11605513096&type=2&murl=https%3A%2F%2Fwww.coursera.org%2Flearn%2Fsql-for-data-science)。请查看一下，因为它涉及了其他
    SQL 概念，如 UNION、字符串操作、函数、日期处理等。
- en: I am going to be writing more beginner-friendly posts in the future too. Follow
    me up at [**Medium**](https://medium.com/@rahul_agarwal) or Subscribe to my [**blog**](http://eepurl.com/dbQnuX) to
    be informed about them. As always, I welcome feedback and constructive criticism
    and can be reached on Twitter [@mlwhiz](https://twitter.com/MLWhiz).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我将来会写更多面向初学者的文章。请关注我在 [**Medium**](https://medium.com/@rahul_agarwal) 或订阅我的 [**博客**](http://eepurl.com/dbQnuX) ，以获取最新内容。欢迎反馈和建设性批评，可以在
    Twitter 上联系我 [@mlwhiz](https://twitter.com/MLWhiz)。
- en: Also, a small disclaimer — There might be some affiliate links in this post
    to relevant resources, as sharing knowledge is never a bad idea.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 另附小声明 — 本文可能包含一些与相关资源相关的附属链接，因为分享知识永远不是坏事。
- en: '**Bio: [Rahul Agarwal](https://www.linkedin.com/in/rahulagwl/)** is Senior
    Statistical Analyst at WalmartLabs. Follow him on Twitter [@mlwhiz](https://twitter.com/MLWhiz).'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：[Rahul Agarwal](https://www.linkedin.com/in/rahulagwl/)** 是 WalmartLabs
    的高级统计分析师。在 Twitter 上关注他 [@mlwhiz](https://twitter.com/MLWhiz)。'
- en: '[Original](https://towardsdatascience.com/learning-sql-the-hard-way-4173f11b26f1).
    Reposted with permission.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/learning-sql-the-hard-way-4173f11b26f1)。转载经许可。'
- en: '**Related:**'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[7 Steps to Mastering SQL for Data Science — 2019 Edition](/2019/05/7-steps-mastering-sql-data-science-2019-edition.html)'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[掌握 SQL 数据科学的 7 个步骤 — 2019 版](/2019/05/7-steps-mastering-sql-data-science-2019-edition.html)'
- en: '[The Last SQL Guide for Data Analysis You’ll Ever Need](/2019/10/last-sql-guide-data-analysis-ever-need.html)'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[你将需要的最后一本 SQL 数据分析指南](/2019/10/last-sql-guide-data-analysis-ever-need.html)'
- en: '[6 bits of advice for Data Scientists](/2019/09/advice-data-scientists.html)'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家的 6 条建议](/2019/09/advice-data-scientists.html)'
- en: '* * *'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的 3 个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速入门网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你所在组织的 IT 工作'
- en: '* * *'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[停止学习数据科学以寻找目的，并为……寻找目的](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习数据科学统计的顶级资源](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[一个 90 亿美元的 AI 失败，剖析](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[成功数据科学家的 5 个特征](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[是什么让 Python 成为初创公司的理想编程语言](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个数据科学家都应该了解的三个 R 库（即使你使用 Python）](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
