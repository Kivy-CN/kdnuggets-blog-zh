- en: Comparing Distance Measurements with Python and SciPy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2017/08/comparing-distance-measurements-python-scipy.html](https://www.kdnuggets.com/2017/08/comparing-distance-measurements-python-scipy.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Distance measurements](../Images/ec3efc49273906a5e7249a3884249fd5.png)'
  prefs: []
  type: TYPE_IMG
- en: Clustering, or cluster analysis, is used for analyzing data which does not include
    pre-labeled classes. Data instances are grouped together using the concept of
    maximizing intraclass similarity and minimizing the similarity between differing
    classes. This translates to the clustering algorithm identifying and grouping
    instances which are very similar, as opposed to ungrouped instances which are
    much less-similar to one another. As clustering does not require the pre-labeling
    of classes, it is a form of unsupervised learning.
  prefs: []
  type: TYPE_NORMAL
- en: At the core of cluster analysis is the concept of measuring distances between
    a variety of different data point dimensions. For example, when considering k-means
    clustering, there is a need to measure a) distances between individual data point
    dimensions and the corresponding cluster centroid dimensions of all clusters,
    and b) distances between cluster centroid dimensions and all resulting cluster
    member data point dimensions.
  prefs: []
  type: TYPE_NORMAL
- en: 'While k-means, the simplest and most prominent clustering algorithm, generally
    uses Euclidean distance as its similarity distance measurement, contriving innovative
    or variant clustering algorithms which, among other alterations, utilize different
    distance measurements is not a stretch. Translation: using different techniques
    for cluster-related distance measurement is quite easily doable. However, the
    *reasons* for actually doing so would require great knowledge of both domain and
    data.'
  prefs: []
  type: TYPE_NORMAL
- en: We will leave the "why" of pursuing particular distance measurements out of
    this discussion, and instead quickly introduce five perfectly valid ways of measuring
    distances between data points. We will also perform simple demonstration and comparison
    with Python and the SciPy library. For more on the distance measurements that
    are available in the SciPy `spatial.distance` module, [see here](https://docs.scipy.org/doc/scipy/reference/spatial.distance.html#module-scipy.spatial.distance).
  prefs: []
  type: TYPE_NORMAL
- en: '![k-means diagram](../Images/74f11f2013236aed5dd2e96040d5be39.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Fig. 1: Distance measurement plays an important role in clustering.**'
  prefs: []
  type: TYPE_NORMAL
- en: A simple overview of the k-means clustering algorithm process, with the distance-relevant
    steps pointed out.
  prefs: []
  type: TYPE_NORMAL
- en: '**Euclidean**'
  prefs: []
  type: TYPE_NORMAL
- en: We may as well begin with the all-time Euclidean space distance measurement
    champion. Euclidean distance is the "['ordinary' straight-line distance between
    two points in Euclidean space](https://en.wikipedia.org/wiki/Euclidean_distance)."
  prefs: []
  type: TYPE_NORMAL
- en: 'As a reminder, given 2 points in the form of *(x, y)*, Euclidean distance can
    be represented as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Equation](../Images/5496763be70b3ffcee728278cd3945e7.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Manhattan**'
  prefs: []
  type: TYPE_NORMAL
- en: Manhattan -- also city block and taxicab -- distance is defined as "[the distance
    between two points is the sum of the absolute differences of their Cartesian coordinates](https://en.wikipedia.org/wiki/Taxicab_geometry)."
  prefs: []
  type: TYPE_NORMAL
- en: '![Manhattan distance](../Images/22d70082105d90d8983de430bfa06fd9.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Fig. 2:** Visualization of Manhattan geometry in blue (the staircase), Euclidean
    in green (the straight line) (Source: [Wikipedia](https://en.wikipedia.org/wiki/Taxicab_geometry)).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chebyshev**'
  prefs: []
  type: TYPE_NORMAL
- en: Chebyshev -- also chessboard -- distance is best defined as a distance metric
    "[where the distance between two vectors is the greatest of their differences
    along any coordinate dimension](https://en.wikipedia.org/wiki/Chebyshev_distance)."
  prefs: []
  type: TYPE_NORMAL
- en: '![Chebyshev distance](../Images/6926f26bff94252e15a23fe80af88c36.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Fig. 3:** Chebyshev visualized using the chessboard (Source: [Wikipedia](https://en.wikipedia.org/wiki/Chebyshev_distance)).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Canberra**'
  prefs: []
  type: TYPE_NORMAL
- en: Canberra distance is a weighted version of Manhattan distance, which "[has been
    used as a metric for comparing ranked lists and for intrusion detection in computer
    security](https://en.wikipedia.org/wiki/Canberra_distance)."
  prefs: []
  type: TYPE_NORMAL
- en: Canberra distance can be represented as
  prefs: []
  type: TYPE_NORMAL
- en: '![Equation](../Images/8c1f0666c7c14c37c361ff5e8442e4ec.png)'
  prefs: []
  type: TYPE_IMG
- en: where **p** and **q** are vectors and
  prefs: []
  type: TYPE_NORMAL
- en: '![Equation](../Images/c515ca251d7d3da384e0447a7374defa.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Cosine**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Cosine similarity [is defined as](https://en.wikipedia.org/wiki/Cosine_similarity):'
  prefs: []
  type: TYPE_NORMAL
- en: '...a measure of similarity between two non-zero vectors of an inner product
    space that measures the cosine of the angle between them. The cosine of 0° is
    1, and it is less than 1 for any other angle. It is thus a judgment of orientation
    and not magnitude: two vectors with the same orientation have a cosine similarity
    of 1, two vectors at 90° have a similarity of 0, and two vectors diametrically
    opposed have a similarity of -1, independent of their magnitude. Cosine similarity
    is particularly used in positive space, where the outcome is neatly bounded in
    [0,1].'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Cosine similarity is often used in clustering to assess cohesion, as opposed
    to determining cluster membership.
  prefs: []
  type: TYPE_NORMAL
- en: '**Python and SciPy Comparison**'
  prefs: []
  type: TYPE_NORMAL
- en: Just so that it is clear what we are doing, first 2 vectors are being created
    -- each with 10 dimensions -- after which an element-wise comparison of distances
    between the vectors is performed using the 5 measurement techniques, as implemented
    in SciPy functions, each of which accept a pair of one-dimensional vectors as
    arguments. Second, a pair of 100-dimension vectors are created, with the same
    set of distance measurements performed and reported.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0] 10-dimensional vectors  ------------------------  [ 3.77539984  0.17095249  5.0676076   7.80039483  9.51290778  7.94013829    6.32300886  7.54311972  3.40075028  4.92240096]  [
    7.13095162  1.59745192  1.22637349  3.4916574   7.30864499  2.22205897    4.42982693  1.99973618  9.44411503  9.97186125]    Distance
    measurements with 10-dimensional vectors  -------------------------------------------------  Euclidean
    distance is 13.435128482  Manhattan distance is 39.3837553638  Chebyshev distance
    is 6.04336474839  Canberra distance is 4.36638963773  Cosine distance is 0.247317394393    Distance
    measurements with 100-dimensional vectors  --------------------------------------------------  Euclidean
    distance is 42.6017789666  Manhattan distance is 359.435547878  Chebyshev distance
    is 9.06282495069  Canberra distance is 40.8173353649  Cosine distance is 0.269329456631
    [PRE1]`'
  prefs: []
  type: TYPE_NORMAL
- en: 'With the measurements performed, we can quickly notice 2 important takeaways:'
  prefs: []
  type: TYPE_NORMAL
- en: The reported distances (obviously) vary greatly between distance measurement
    techniques
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Some measurement techniques are more susceptible (at least, in this experiment)
    to increased dimensionality (while, conversely, others are much less-influenced)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'While no grand conclusions can be drawn from this simple overview and presentation,
    the results should also put this excerpt from Hastie, Tibshirani and Friedman''s
    [Elements of Statistical Learning](https://web.stanford.edu/~hastie/ElemStatLearn/)
    in perspective:'
  prefs: []
  type: TYPE_NORMAL
- en: An appropriate dissimilarity measure is far more important in obtaining success
    with clustering than choice of clustering algorithm. This aspect of the problem
    ... depends on domain specific knowledge and is less amenable to general research.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: It's also important to note that the key idea of distance, as it relates to
    cluster analysis, is not the exact value of the measurements, but how the resulting
    measurements are used to groups the data points. For example, if you multiply
    each measure by 100, the values will be different, but the resulting clustering
    remains the same.
  prefs: []
  type: TYPE_NORMAL
- en: When considering "clustering," far too many people tend to think only of throwing
    their dataset at k-means, with the defaults. Hopefully this short post has shed
    some light on the potential complexities and implications of clustering algorithms
    and their components.
  prefs: []
  type: TYPE_NORMAL
- en: '**Related**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Comparing Clustering Techniques: A Concise Technical Overview](/2016/09/comparing-clustering-techniques-concise-technical-overview.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Clustering Key Terms, Explained](/2016/10/clustering-key-terms-explained.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Machine Learning Workflows in Python from Scratch Part 2: k-means Clustering](/2017/06/machine-learning-workflows-python-scratch-part-2.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Distance Metrics: Euclidean, Manhattan, Minkowski, Oh My!](https://www.kdnuggets.com/2023/03/distance-metrics-euclidean-manhattan-minkowski-oh.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Comparing Linear and Logistic Regression](https://www.kdnuggets.com/2022/11/comparing-linear-logistic-regression.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PyTorch or TensorFlow? Comparing popular Machine Learning frameworks](https://www.kdnuggets.com/2022/02/packt-pytorch-tensorflow-comparing-popular-machine-learning-frameworks.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Comparing Natural Language Processing Techniques: RNNs, Transformers, BERT](https://www.kdnuggets.com/comparing-natural-language-processing-techniques-rnns-transformers-bert)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Understanding Python''s Iteration and Membership: A Guide to…](https://www.kdnuggets.com/understanding-pythons-iteration-and-membership-a-guide-to-__contains__-and-__iter__-magic-methods)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Step up your Python game with Fast Python for Data Science!](https://www.kdnuggets.com/2022/06/manning-step-python-game-fast-python-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
