- en: 'Machine Learning Algorithms: Which One to Choose for Your Problem'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2017/11/machine-learning-algorithms-choose-your-problem.html](https://www.kdnuggets.com/2017/11/machine-learning-algorithms-choose-your-problem.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**By Daniil Korbut, [Statsbot](https://statsbot.co/).**'
  prefs: []
  type: TYPE_NORMAL
- en: When I was beginning my way in data science, I often faced the problem of choosing
    the most appropriate algorithm for my specific problem. If you’re like me, when
    you open some article about machine learning algorithms, you see dozens of detailed
    descriptions. The paradox is that they don’t ease the choice.
  prefs: []
  type: TYPE_NORMAL
- en: In this article for [Statsbot](https://statsbot.co/?utm_source=blog&utm_medium=article&utm_campaign=ml_algorithms),
    I will try to explain basic concepts and give some intuition of using different
    kinds of [machine learning algorithms](https://www.kdnuggets.com/2016/08/10-algorithms-machine-learning-engineers.html)
    in different tasks. At the end of the article, you’ll find the structured overview
    of the main features of described algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e2c9513a7f45c3a22440f1fc232f0283.png)'
  prefs: []
  type: TYPE_IMG
- en: 'First of all, you should distinguish 4 types of Machine Learning tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: Supervised learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unsupervised learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Semi-supervised learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reinforcement learning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '****Supervised learning****'
  prefs: []
  type: TYPE_NORMAL
- en: Supervised learning is the task of inferring a function from labeled training
    data. By fitting to the labeled training set, we want to find the most optimal
    model parameters to predict unknown labels on other objects (test set). If the
    label is a real number, we call the task *regression*. If the label is from the
    limited number of values, where these values are unordered, then it’s *classification*.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4d45a1cf4d2f71fa224453236ae5cb11.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Illustration source](https://scorecardstreet.wordpress.com/2015/12/09/is-machine-learning-the-new-epm-black/)****Unsupervised
    learning****'
  prefs: []
  type: TYPE_NORMAL
- en: In unsupervised learning we have less information about objects, in particular,
    the train set is unlabeled. What is our goal now? It’s possible to observe some
    similarities between groups of objects and include them in appropriate clusters.
    Some objects can differ hugely from all clusters, in this way we assume these
    objects to be anomalies.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d836f2ac4018e070a4ab9505ffcfbce2.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Illustration source](http://www.constonline.com/machine-learning)****Semi-supervised
    learning****'
  prefs: []
  type: TYPE_NORMAL
- en: 'Semi-supervised learning tasks include both problems we described earlier:
    they use labeled and unlabeled data. That is a great opportunity for those who
    can’t afford labeling their data. The method allows us to significantly improve
    accuracy, because we can use unlabeled data in the train set with a small amount
    of labeled data.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/edd4b3e75b3eb44b8bbb000d0859b3e2.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Illustration source](https://makarandtapaswi.wordpress.com/2013/04/30/labeled-data-unlabeled-data-and-constraints/)****Reinforcement
    learning****'
  prefs: []
  type: TYPE_NORMAL
- en: Reinforcement learning is not like any of our previous tasks because we don’t
    have labeled or unlabeled datasets here. RL is an area of machine learning concerned
    with how software agents ought to take actions in some environment to maximize
    some notion of cumulative reward.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/abe95d648fc95a7dbdee8ad2af554539.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Illustration source](https://www.analyticsvidhya.com/blog/2016/12/getting-ready-for-ai-based-gaming-agents-overview-of-open-source-reinforcement-learning-platforms/)Imagine,
    you’re a robot in some strange place, you can perform the activities and get rewards
    from the environment for them. After each action your behavior is getting more
    complex and clever, so you are training to behave the most effective way on each
    step. In biology, this is called adaptation to natural environment.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Commonly used Machine Learning algorithms**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now that we have some intuition about types of machine learning tasks, let’s
    explore the most popular algorithms with their applications in real life.
  prefs: []
  type: TYPE_NORMAL
- en: '****Linear Regression and Linear Classifier****'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are probably the simplest algorithms in machine learning. You have features
    x1,...xn of objects (matrix A) and labels (vector b). Your goal is to find the
    most optimal weights w1,…wn and bias for these features according to some loss
    function, for example, [MSE](https://en.wikipedia.org/wiki/Mean_squared_error) or [MAE](https://en.wikipedia.org/wiki/Mean_absolute_error) for
    a regression problem. In the case of MSE there is a mathematical equation from
    the least squares method:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fb1c31b0f0462977d283e9a05300f1ef.png)'
  prefs: []
  type: TYPE_IMG
- en: In practice, it’s easier to optimize it with gradient descent, that is much
    more computationally efficient. Despite the simplicity of this algorithm, it works
    pretty well when you have thousands of features, for example, bag of words or
    n-gramms in [text analysis](https://blog.statsbot.co/text-classifier-algorithms-in-machine-learning-acc115293278).
    More complex algorithms suffer from overfitting many features and not huge datasets,
    while linear regression provides decent quality.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1a2216d08f22bde56881b17581a07d31.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Illustration source](http://newsdog.today/a/article/582ebdf11290711e26997ce2/)To
    prevent overfitting we often use regularization techniques like lasso and ridge.
    The idea is to add the sum of modules of weights and the sum of squares of weights,
    respectively, to our loss function. Read the great tutorial on these algorithms
    at the end of the article.'
  prefs: []
  type: TYPE_NORMAL
- en: '****Logistic regression****'
  prefs: []
  type: TYPE_NORMAL
- en: Don’t confuse these classification algorithms with regression methods for using
    “regression” in its title. Logistic regression performs binary classification,
    so the label outputs are binary. Let’s define P(y=1|x) as the conditional probability
    that the output *y* is 1 under the condition that there is given the input feature
    vector *x*. The coefficients *w* are the weights that the model wants to learn.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e855e13ba183987726dfda91dd239bd4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Since this algorithm calculates the probability of belonging to each class,
    you should take into account how much the probability differs from 0 or 1 and
    average it over all objects as we did with linear regression. Such loss function
    is the average of cross-entropies:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/81855fd0b652a38e72747275a175be89.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Don’t panic, I’ll make it easy for you. Allow *y* to be the right answers:
    0 or 1, *y_pred* — predicted answers. If *y* equals 0, then the first addend under
    sum equals 0 and the second is the less the closer our predicted *y_pred* to 0
    according to the properties of the logarithm. Similarly, in the case when *y*equals
    1.'
  prefs: []
  type: TYPE_NORMAL
- en: What is great about a logistic regression? It takes linear combination of features
    and applies non-linear function (sigmoid) to it, so it’s a very very small instance
    of neural network!
  prefs: []
  type: TYPE_NORMAL
- en: '****Decision trees****'
  prefs: []
  type: TYPE_NORMAL
- en: Another popular and easy to understand algorithm is decision trees. Their graphics
    help you see what you’re thinking and their engine requires a systematic, documented
    thought process.
  prefs: []
  type: TYPE_NORMAL
- en: The idea of this algorithm is quite simple. In every node we choose the best
    split among all features and all possible split points. Each split is selected
    in such a way as to maximize some functional. In classification trees we use cross
    entropy and Gini index. In regression trees we minimize the sum of a squared error
    between the predictive variable of the target values of the points that fall in
    that region and the one we assign to it.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7ec924d7758bde871ca16dbfff0f7d9a.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Illustration source](http://cway-quantlab.blogspot.ru/2017/06/optimize-trading-system-with-gradient_21.html)We
    make this procedure recursively for each node and finish when we meet a stopping
    criteria. They can vary from minimum number of leafs in a node to tree height.
    Single trees are used very rarely, but in composition with many others they build
    very efficient algorithms such as Random Forest or [Gradient Tree Boosting](https://en.wikipedia.org/wiki/Gradient_boosting#Gradient_tree_boosting).'
  prefs: []
  type: TYPE_NORMAL
- en: '****K-means****'
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes you don’t know any labels and your goal is to assign labels according
    to the features of objects. This is called *clusterization task*.
  prefs: []
  type: TYPE_NORMAL
- en: Suppose you want to divide all data-objects into k clusters. You need to select
    random k points from your data and name them centers of clusters. The clusters
    of other objects are defined by the closest cluster center. Then, centers of the
    clusters are converted and the process repeats until convergence.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ff45aa98605029a4b985372839d13b64.png)'
  prefs: []
  type: TYPE_IMG
- en: This is the most clear clusterization technique, which still has some disadvantages.
    First of all, you should know the amount of clusters that we can’t know. Secondly,
    the result depends on the points randomly chosen at the beginning and the algorithm
    doesn’t guarantee that we’ll achieve the global minimum of the functional.
  prefs: []
  type: TYPE_NORMAL
- en: There are a range of clustering methods with different advantages and disadvantages,
    which you could learn in recommended reading.
  prefs: []
  type: TYPE_NORMAL
- en: '****Principal component analysis (PCA)****'
  prefs: []
  type: TYPE_NORMAL
- en: Have you ever prepared for a difficult exam on the last night or during the
    last hours? You have no chance to remember all the information, but you want to
    maximize information that you can remember in the time available, for example,
    learning first the theorems that occur in many exam tickets and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Principal component analysis is based on the same idea. This algorithm provides
    dimensionality reduction. Sometimes you have a wide range of features, probably
    highly correlated between each other, and models can easily overfit on a huge
    amount of data. Then, you can apply PCA.
  prefs: []
  type: TYPE_NORMAL
- en: You should calculate the projection on some vectors to maximize the variance
    of your data and lose as little information as possible. Surprisingly, these vectors
    are eigenvectors of correlation matrix of features from a dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c3a9ddc36b0a2508f20f621fa0eb8729.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Illustration source](https://www.analyticsvidhya.com/blog/2016/03/practical-guide-principal-component-analysis-python/)The
    algorithm now is clear:'
  prefs: []
  type: TYPE_NORMAL
- en: We calculate the correlation matrix of feature columns and find eigenvectors
    of this matrix.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We take these multidimensional vectors and calculate the projection of all features
    on them.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: New features are coordinates from a projection and their number depends on the
    count of eigenvectors, on which you calculate the projection.
  prefs: []
  type: TYPE_NORMAL
- en: '****Neural networks****'
  prefs: []
  type: TYPE_NORMAL
- en: I have already mentioned neural networks, when we talked about logistic regression.
    There are a lot of different architectures that are valuable in very specific
    tasks. More often, it’s a range of layers or components with linear connections
    among them and following nonlinearities.
  prefs: []
  type: TYPE_NORMAL
- en: If you’re working with images, convolutional deep neural networks show the great
    results. Nonlinearities are represented by convolutional and pooling layers, capable
    of capturing the characteristic features of images.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/06494bd8dec7517c259587a5f14568b0.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Illustration source](http://www.smash.com/ostagram-uses-neural-networks-merge-two-pictures-psychedelic-weirdness/)For
    working with texts and sequences you’d better choose *recurrent neural networks*.
    RNNs contain LSTM or GRU modules and can work with data, for which we know the
    dimension in advance. Perhaps, one of the most known applications for RNNs is [machine
    translation](https://blog.statsbot.co/machine-learning-translation-96f0ed8f19e4).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Conclusion**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I hope that I could explain to you common perceptions of the most used machine
    learning algorithms and give intuition on how to choose one for your specific
    problem. To make things easier for you, I’ve prepared the structured overview
    of their main features.
  prefs: []
  type: TYPE_NORMAL
- en: '**Linear regression and Linear classifier. **Despite an apparent simplicity,
    they are very useful on a huge amount of features where better algorithms suffer
    from overfitting.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Logistic regression** is the simplest non-linear classifier with a linear
    combination of parameters and nonlinear function (sigmoid) for binary classification.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Decision trees** is often similar to people’s decision process and is easy
    to interpret. But they are most often used in compositions such as Random forest
    or Gradient boosting.'
  prefs: []
  type: TYPE_NORMAL
- en: '**K-means** is more primal, but a very easy to understand algorithm, that can
    be perfect as a baseline in a variety of problems.'
  prefs: []
  type: TYPE_NORMAL
- en: '**PCA** is a great choice to reduce dimensionality of your feature space with
    minimum loss of information.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Neural Networks** are a new era of machine learning algorithms and can be
    applied for many tasks, but their training needs huge computational complexity.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Recommended sources**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Overview of clustering methods](http://scikit-learn.org/stable/modules/clustering.html#overview-of-clustering-methods)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Complete Tutorial on Ridge and Lasso Regression in Python](https://www.analyticsvidhya.com/blog/2016/01/complete-tutorial-ridge-lasso-regression-python/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[YouTube channel about AI for beginners with great tutorials and examples](https://www.youtube.com/channel/UCWN3xxRkmTPmbKwht9FuE5A)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Bio: [Daniil Korbut](https://medium.com/@daniilkorbut)** is a Junior Data
    Scientist at [Statsbot](https://statsbot.co/).'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://blog.statsbot.co/machine-learning-algorithms-183cc73197c?utm_source=kdnuggets&utm_medium=post&utm_campaign=ml_algrithms).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Top 10 Machine Learning Algorithms for Beginners](/2017/10/top-10-machine-learning-algorithms-beginners.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Understanding Machine Learning Algorithms](/2017/10/understanding-machine-learning-algorithms.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Machine Learning Algorithms: A Concise Technical Overview – Part 1](/2017/08/machine-learning-algorithms-concise-technical-overview-part-1.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
