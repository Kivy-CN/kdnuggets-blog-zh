["```py\nimport pandas as pd\nfrom bs4 import BeautifulSoup\nimport requests\n```", "```py\nurl = 'https://en.wikipedia.org/wiki/2022_FIFA_World_Cup'\nres = requests.get(url)\ncontent = res.text\nsoup = BeautifulSoup(content, 'lxml')\n```", "```py\nmatch_data = soup.find_all('div', class_='footballbox')\n```", "```py\nfor match in match_data:\n    home_team.append(match.find('th', class_='fhome').get_text())\n    score.append(match.find('th', class_='fscore').get_text())\n    away_team.append(match.find('th', class_='faway').get_text())\n```", "```py\ndict_football = {'home_team': home_team, 'score': score, 'away_team': away_team}\ndf_football = pd.DataFrame(dict_football)\n\ndf_football.to_csv(\"fifa_worldcup_data.csv\", index=False)\n```", "```py\ndef predict(home_team, away_team):\n\n    # Calculate the value of lambda (Î») for both Home Team and Away Team.\n    if home_team in df_football.index and away_team in df_football.index:\n        lambda_home_team = df_football.at[home_team,'GoalsScored'] * df_football.at[away_team,'GoalsConceded']\n        lambda_away_team = df_football.at[away_team,'GoalsScored'] * df_football.at[home_team,'GoalsConceded']\n```", "```py\np = poisson.pmf(x, lambda_home_team) * poisson.pmf(y, lambda_away_team)\nif x == y:\n    pr_draw += p\nelif x > y:\n    pr_home += p\nelse:\n    pr_away += p\n```", "```py\npoints_home_team = 3 * pr_home + pr_draw\npoints_away_team = 3 * pr_away + pr_draw\n```", "```py\nsvc_predict = svm.SVC()\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.30)\nsvc_predict.fit(x_train, y_train)\n```", "```py\nknn_predict = KNeighborsClassifier()\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.30)\nknn_predict.fit(x_train, y_train)\n```", "```py\nlogistic_predict = LogisticRegression()\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.30)\nlogistic_predict.fit(x_train, y_train)\n```"]