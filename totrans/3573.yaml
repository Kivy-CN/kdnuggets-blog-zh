- en: Deploying Your First Machine Learning Model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/deploying-your-first-machine-learning-model](https://www.kdnuggets.com/deploying-your-first-machine-learning-model)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Deploying Your First Machine Learning Model](../Images/30b7a469b92a895ba2fc5d6b23c675f2.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Lucas Fonseca](https://www.pexels.com/photo/man-in-front-of-monitor-2239655/)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this tutorial, we will learn how to build a simple multi-classification
    model using the [Glass Classification](https://www.kaggle.com/datasets/uciml/glass)
    dataset. Our goal is to develop and deploy a web application that can predict
    various types of glass, such as:'
  prefs: []
  type: TYPE_NORMAL
- en: Building Windows Float Processed
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Building Windows Non-Float Processed
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Vehicle Windows Float Processed
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Vehicle Windows Non Float Processed (missing in the dataset)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Containers
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tableware
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Headlamps
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Moreover, we will learn about:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Skops**: Share your scikit-learn based models and put them in production.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Gradio**: ML web applications framework.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**HuggingFace Spaces**: free machine learning model and application hosting
    platform.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By the end of this tutorial, you will have hands-on experience building, training,
    and deploying a basic machine learning model as a web application.
  prefs: []
  type: TYPE_NORMAL
- en: Model Training and Saving
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this part, we will import the dataset, split it into training and testing
    subsets, build the machine learning pipeline, train the model, assess model performance,
    and save the model.
  prefs: []
  type: TYPE_NORMAL
- en: Dataset
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We have loaded the dataset and then shuffled it for an equal distribution of
    the labels.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Our dataset
  prefs: []
  type: TYPE_NORMAL
- en: '![Deploying Your First Machine Learning Model](../Images/48a488fe2a451ee7913f8bc95955424f.png)'
  prefs: []
  type: TYPE_IMG
- en: After that, we selected the model features and target variables using the dataset
    and split them into training and testing datasets.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Machine Learning Pipeline
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Our model pipeline is straightforward. First, we pass our feature through an
    imputer and then normalize it using Standard Scaler. Finally, we feed the processed
    data into a random forest classifier.
  prefs: []
  type: TYPE_NORMAL
- en: After fitting the pipeline on the training set, we use `.score()` to generate
    the accuracy score on the testing set.
  prefs: []
  type: TYPE_NORMAL
- en: The score is average, and I am satisfied with the performance. While we could
    improve the model by ensembling or using various optimization methods, our goal
    is different.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The classification report also looks good.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Saving the Model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Skops is a great library to deploy scikit-learn models into products. We will
    use it to save the model and later load it into production.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: As we can see, with a single line of code, we can load the entire pipeline.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![Deploying Your First Machine Learning Model](../Images/9bd13a9b738b01b8dbfc59c5bd4e0e51.png)'
  prefs: []
  type: TYPE_IMG
- en: Building Web Application
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this part, we will learn how to use Gradio to build a simple classification
    user interface.
  prefs: []
  type: TYPE_NORMAL
- en: Load the model using the skops.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create an array of class names and leave the first one empty or “None” as our
    numerical class starters from 1.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Write a classification Python function that takes inputs from the user and predicts
    the class using the pipeline.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create the inputs for each feature using the sliders. Users can use a mouse
    to select the numerical values.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create the output using the Label. It will display the Label in bold text on
    the top.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add the title and description of the app.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, combine all of it using `gradio.Interface`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Deploying the Machine Learning Model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the final part, we will create the spaces on the Hugging Face and add our
    model and the app file.
  prefs: []
  type: TYPE_NORMAL
- en: To create the spaces, you have to sign in to https://huggingface.co. Then, click
    on your profile image on the top right and select “+ New Space”.
  prefs: []
  type: TYPE_NORMAL
- en: '![Deploying Your First Machine Learning Model](../Images/ff769c581fbe825e4ffb1f12c0fd006b.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from HuggingFace
  prefs: []
  type: TYPE_NORMAL
- en: Write the name of your application, select SDK, and click on the Create Space
    button.
  prefs: []
  type: TYPE_NORMAL
- en: '![Deploying Your First Machine Learning Model](../Images/8b2932f80b48a292ef1a576514707b78.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from Spaces
  prefs: []
  type: TYPE_NORMAL
- en: Then, create a `requirements.txt` file. You can add or create a file by going
    to the “Files” tab and selecting the “+Add file” button.
  prefs: []
  type: TYPE_NORMAL
- en: In the `requirements.txt` file, you have to add skops and scikit-learn.
  prefs: []
  type: TYPE_NORMAL
- en: '![Deploying Your First Machine Learning Model](../Images/3b05e80f445851d85eea57ff9e24ee90.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from Spaces
  prefs: []
  type: TYPE_NORMAL
- en: After that, add the model and file by dragging and dropping them from your local
    folder to the space. After that, commit.
  prefs: []
  type: TYPE_NORMAL
- en: '![Deploying Your First Machine Learning Model](../Images/5b32cd9226dbf2b8dfad02da6aefb072.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from Spaces
  prefs: []
  type: TYPE_NORMAL
- en: It will take a few minutes for the spaces to install the required packages and
    build the container.
  prefs: []
  type: TYPE_NORMAL
- en: '![Deploying Your First Machine Learning Model](../Images/3fae1f801ce4efdcb7902dbda3b5da2c.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from Spaces
  prefs: []
  type: TYPE_NORMAL
- en: 'In the end, you will be greeted with a bug-free application that you can share
    with your family and colleagues. You can even check out the live demo by clicking
    on the link: [Glass Classification](https://huggingface.co/spaces/kingabzpro/glass-classification).'
  prefs: []
  type: TYPE_NORMAL
- en: '![Deploying Your First Machine Learning Model](../Images/cc7b7d686ad60bdae764a2e874241c09.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from [Glass Classification](https://huggingface.co/spaces/kingabzpro/glass-classification)
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this tutorial, we walked through the end-to-end process of building, training,
    and deploying a machine learning model as a web application. We used the glass
    classification dataset to train a simple multi-class classification model. After
    training the model in scikit-learn, we leveraged skops and Gradio to package and
    deploy the model as a web app on HuggingFace Spaces.
  prefs: []
  type: TYPE_NORMAL
- en: There are many possibilities to build on this starter project. You could incorporate
    more features into the model, try different algorithms, or deploy the web app
    on other platforms. The important thing is that you now have hands-on experience
    with an end-to-end machine learning workflow. You've gotten exposure to training
    models, packaging them for production, and building web interfaces for interacting
    with model predictions.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for following along! Let me know if you have any other questions as you
    continue your machine learning journey.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Abid Ali Awan](https://www.polywork.com/kingabzpro)** ([@1abidaliawan](https://www.linkedin.com/in/1abidaliawan/))
    is a certified data scientist professional who loves building machine learning
    models. Currently, he is focusing on content creation and writing technical blogs
    on machine learning and data science technologies. Abid holds a Master''s degree
    in Technology Management and a bachelor''s degree in Telecommunication Engineering.
    His vision is to build an AI product using a graph neural network for students
    struggling with mental illness.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Deploying Your Machine Learning Model to Production in the Cloud](https://www.kdnuggets.com/deploying-your-ml-model-to-production-in-the-cloud)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Step-by-Step Tutorial to Building Your First Machine Learning Model](https://www.kdnuggets.com/step-by-step-tutorial-to-building-your-first-machine-learning-model)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deploying Machine Learning Models: A Step-by-Step Tutorial](https://www.kdnuggets.com/deploying-machine-learning-models-a-step-by-step-tutorial)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[From Zero to Hero: Create Your First ML Model with PyTorch](https://www.kdnuggets.com/from-zero-to-hero-create-your-first-ml-model-with-pytorch)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Tips & Tricks of Deploying Deep Learning Webapp on Heroku Cloud](https://www.kdnuggets.com/2021/12/tips-tricks-deploying-dl-webapps-heroku.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deploying a Streamlit WebApp to Heroku using DAGsHub](https://www.kdnuggets.com/2022/02/deploying-streamlit-webapp-heroku-dagshub.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
