- en: 'Pandas vs SQL: When Data Scientists Should Use Each Tool'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2021/06/pandas-vs-sql.html](https://www.kdnuggets.com/2021/06/pandas-vs-sql.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/648f1b475c03aefcffcd00be9f15f684.png)'
  prefs: []
  type: TYPE_IMG
- en: '*Photo by [rigel](https://unsplash.com/@rigels?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/pandas?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText).*'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Both of these tools are important to not only data scientists but also to those
    in similar positions like data analytics and business intelligence. With that
    being said, when should data scientists specifically use pandas over SQL and vice
    versa? In some situations, you can get away with just using SQL, and some other
    times, pandas is much easier to use, especially for data scientists who focus
    on research in a Jupyter Notebook setting. Below, I will discuss when you should
    use SQL and when you should use pandas. Keep in mind that both of these tools
    have specific use cases, but there are many times where their functionality overlap,
    and that is what I will be comparing below as well.
  prefs: []
  type: TYPE_NORMAL
- en: Pandas
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![](../Images/822f89de117efec08505cec782d76784.png)'
  prefs: []
  type: TYPE_IMG
- en: '*Photo by [Kalen Kemp](https://unsplash.com/@kalenkempx?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/pandas?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText).*'
  prefs: []
  type: TYPE_NORMAL
- en: '[Pandas](https://pandas.pydata.org/docs/index.html) is an open-source data
    analysis tool in the Python programing language. The benefit of pandas starts
    when you already have your main dataset, usually from a SQL query. This main difference
    can mean that the two tools are separate. However, you can also perform several
    of the same functions in each respective tool. For example, you can create new
    features from existing columns in pandas, perhaps easier and faster than in SQL.'
  prefs: []
  type: TYPE_NORMAL
- en: It is important to note that I am not comparing what pandas does that SQL cannot
    do and vice versa. I will be picking the tool that can do the function more efficiently
    or preferable for data science work — in my opinion, from personal experience.
  prefs: []
  type: TYPE_NORMAL
- en: '*Here are times where using pandas is more beneficial than SQL — while also
    having the same functionality as SQL:*'
  prefs: []
  type: TYPE_NORMAL
- en: '**creating calculated fields from existing features**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'When incorporating a more complex SQL query, you often are incorporating subqueries
    as well in order to divide values from different columns. In pandas, you can simply
    divide features much easier like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The code above is showing how you can divide two separate columns and assign
    those values to a new column. In this case, you are performing the feature creation
    on the whole entire dataset or dataframe. You can use this function in both feature
    exploration and feature engineering in the process of data science.
  prefs: []
  type: TYPE_NORMAL
- en: '**grouping by**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Also referring to subqueries, grouping by in SQL can become quite complex and
    require lines and lines of code that can be visually overwhelming. In pandas,
    you can simply group by one line of code. *I am not referring to the ‘group by’
    at the end of a simple select from table query, but one where there are multiple
    subqueries involved.*
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This result would be returning the mean of the *first_column* for every column
    in the dataframe. There are many other ways to use this grouping function, which
    are outlined nicely in the pandas documentation.
  prefs: []
  type: TYPE_NORMAL
- en: '**checking data types**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In SQL, you will often have to cast types, but sometimes it can be a little
    clearer to see the way pandas lays out data types in a vertical format rather
    than scrolling through a horizontal output in SQL. You can expect *some* examples
    of data types returned to be int64, float64, datetime64[ns], and object.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: While these are all fairly simple functions of pandas and SQL, in SQL, they
    are particularly tricky and sometimes just much easier to implement in a pandas
    dataframe. Now, let’s look at what SQL is better at performing.
  prefs: []
  type: TYPE_NORMAL
- en: SQL
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![](../Images/77bba37ebf8e897c366cc573c2bff5fe.png)'
  prefs: []
  type: TYPE_IMG
- en: '*Photo by [Caspar Camille Rubin](https://unsplash.com/@casparrubin?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/query?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText).*'
  prefs: []
  type: TYPE_NORMAL
- en: SQL is probably the language that is used most by the most amount of different
    positions. For example, a data engineer could use SQL, a Tableau developer, or
    a product manager. With that being said, data scientists tend to use SQL frequently.
    It is important to note that there are several different versions of SQL, usually
    all having a similar function, just slightly formatted differently.
  prefs: []
  type: TYPE_NORMAL
- en: '*Here are times where using SQL is more beneficial than pandas — while also
    having the same functionality as pandas:*'
  prefs: []
  type: TYPE_NORMAL
- en: '**WHERE clause**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This clause in SQL is used frequently and can also be performed in pandas. In
    pandas, however, it is slightly more difficult or less intuitive. For example,
    you have to write out redundant code, whereas, in SQL, you simply need the *WHERE*.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'In pandas, it would be something like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Yes, both are simple, but SQL is just a little more intuitive.
  prefs: []
  type: TYPE_NORMAL
- en: '**JOINS**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas has a few ways to join, which can be a little overwhelming, whereas in
    SQL, you can perform simple joins like the following: *INNER*, *LEFT*, *RIGHT.*
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: In this code, joining is slightly easier to read than in pandas, where you have
    to merge dataframes, and especially as you merge more than two dataframes, it
    can be quite complex in pandas. SQL can perform multiple joins, whether it be
    INNER, etc., all in the same query.
  prefs: []
  type: TYPE_NORMAL
- en: All of these examples, whether it be SQL or pandas, can be used in at least
    the exploratory data analysis portion of the data science process, as well as
    in feature engineering, and querying model results once they are stored in a database.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This comparison of pandas versus SQL is more of a personal preference. With
    that being said, you may feel the opposite of my opinion. However, I hope it still
    sheds light on the differences between pandas and SQL, as well as what you can
    perform the same in both tools, using slightly different coding techniques and
    a different language altogether.
  prefs: []
  type: TYPE_NORMAL
- en: '*To summarize, we have compared the benefits of using pandas over SQL and vice
    versa for a few of their shared functions:*'
  prefs: []
  type: TYPE_NORMAL
- en: creating calculated fields from existing features
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: grouping by
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: checking data types
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WHERE clause
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JOINS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/pandas-vs-sql-when-data-scientists-should-use-one-over-the-other-ba5f27a78e5d).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Every Complex DataFrame Manipulation, Explained & Visualized Intuitively](https://www.kdnuggets.com/2020/11/dataframe-manipulation-explained-visualized.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data Preparation in SQL, with Cheat Sheet!](https://www.kdnuggets.com/2021/05/data-preparation-sql-cheat-sheet.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Pandas for Data Science](https://www.kdnuggets.com/2020/06/introduction-pandas-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Building a solid data team](https://www.kdnuggets.com/2021/12/build-solid-data-team.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Write Clean Python Code Using Pipes](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Best ETL Tools in 2021](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
