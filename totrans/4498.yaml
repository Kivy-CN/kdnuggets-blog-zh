- en: Introduction to the K-nearest Neighbour Algorithm Using Examples
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: K-最近邻算法介绍及示例
- en: 原文：[https://www.kdnuggets.com/2020/04/introduction-k-nearest-neighbour-algorithm-using-examples.html](https://www.kdnuggets.com/2020/04/introduction-k-nearest-neighbour-algorithm-using-examples.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/04/introduction-k-nearest-neighbour-algorithm-using-examples.html](https://www.kdnuggets.com/2020/04/introduction-k-nearest-neighbour-algorithm-using-examples.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Ranvir Singh](https://ranvir.xyz/), Open-source Enthusiast**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Ranvir Singh](https://ranvir.xyz/) 提供，开源爱好者**'
- en: '![KNN algorithm python](../Images/9904c91821787cffd5c0365e7a03a07e.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![KNN 算法 Python](../Images/9904c91821787cffd5c0365e7a03a07e.png)'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业的快车道'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '`KNN` also known as K-nearest neighbour is a [supervised and pattern classification
    learning algorithm](https://ranvir.xyz/blog/how-to-evaluate-your-machine-learning-model-like-a-pro-metrics/#supervised-learning-and-classification-problems) which
    helps us find which class the new input(test value) belongs to when `k` nearest
    neighbours are chosen and distance is calculated between them.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`KNN` 也称为 K-最近邻，是一种 [监督学习和模式分类算法](https://ranvir.xyz/blog/how-to-evaluate-your-machine-learning-model-like-a-pro-metrics/#supervised-learning-and-classification-problems)，它帮助我们找出新输入（测试值）属于哪个类别，当选择了
    `k` 个最近邻并计算它们之间的距离时。'
- en: It attempts to estimate the conditional distribution of `Y` given `X`, and classify
    a given observation(test value) to the class with highest estimated probability.
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 它尝试估计在给定 `X` 的情况下 `Y` 的条件分布，并将给定的观察值（测试值）分类到具有最高估计概率的类别中。
- en: It first identifies the `k` points in the training data that are closest to
    the `test value` and calculates the distance between all those categories. The
    test value will belong to the category whose distance is the least.![KNN algorithm
    distance](../Images/bab96a13fc6221a835a48218c68dacf3.png)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 它首先识别训练数据中离 `测试值` 最近的 `k` 个点，并计算这些类别之间的距离。测试值将归属于距离最小的类别。![KNN 算法距离](../Images/bab96a13fc6221a835a48218c68dacf3.png)
- en: Probability of classification of test value in KNN
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: KNN 中测试值分类的概率
- en: It calculates the probability of test value to be in class `j` using this function
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 它使用此函数计算测试值属于类别 `j` 的概率
- en: '![Figure](../Images/94c277b5f05dafe4a4924438759b7895.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/94c277b5f05dafe4a4924438759b7895.png)'
- en: Ways to calculate the distance in KNN
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: KNN 中计算距离的方法
- en: The distance can be calculated using different ways which include these methods,
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 距离可以通过不同的方法计算，这些方法包括：
- en: Euclidean Method
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 欧几里得方法
- en: Manhattan Method
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 曼哈顿方法
- en: Minkowski Method
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 闵可夫斯基方法
- en: etc…
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 等等……
- en: For more information on distance metrics which can be used, please read [this
    post on KNN](https://www.saedsayad.com/k_nearest_neighbors.htm).You can use any
    method from the list by passing `metric` parameter to the KNN object. Here is
    an answer on [Stack Overflow which will help](https://stackoverflow.com/questions/21052509/sklearn-knn-usage-with-a-user-defined-metric).
    You can even use some random distance metric.Also [read this answer as well](https://stackoverflow.com/questions/34408027/how-to-allow-sklearn-k-nearest-neighbors-to-take-custom-distance-metric) if
    you want to use your own method for distance calculation.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 有关可以使用的距离度量的更多信息，请阅读 [这篇关于 KNN 的文章](https://www.saedsayad.com/k_nearest_neighbors.htm)。你可以通过将
    `metric` 参数传递给 KNN 对象来使用列表中的任何方法。这里有一个 [Stack Overflow 上的回答](https://stackoverflow.com/questions/21052509/sklearn-knn-usage-with-a-user-defined-metric)
    可能对你有帮助。你甚至可以使用一些随机距离度量。如果你想使用自己的距离计算方法，也可以 [阅读这个答案](https://stackoverflow.com/questions/34408027/how-to-allow-sklearn-k-nearest-neighbors-to-take-custom-distance-metric)。
- en: The process of KNN with Example
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: KNN 的过程及示例
- en: Let’s consider that we have a dataset containing heights and weights of dogs
    and horses marked properly. We will create a plot using weight and height of all
    the entries.Now whenever a new entry comes in, we will choose a value of `k`.For
    the sake of this example, let’s assume that we choose 4 as the value of `k`. We
    will find the distance of nearest four values and the one having the least distance
    will have more probability and is assumed as the winner.![KNN algorithm example](../Images/d5ed5cee01cf2aad966a1e23d1318165.png)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有一个数据集，其中包含标记明确的狗和马的身高和体重。我们将使用所有条目的体重和身高来创建一个图表。现在，每当有新的条目进来时，我们将选择一个`k`值。为了本示例的方便，假设我们选择`4`作为`k`的值。我们将找到最近的四个值的距离，距离最小的那个将具有更高的概率，并被认为是赢家。![KNN算法示例](../Images/d5ed5cee01cf2aad966a1e23d1318165.png)
- en: 'KneighborsClassifier: KNN Python Example'
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 'KneighborsClassifier: KNN Python 示例'
- en: GitHub Repo: [KNN GitHub Repo](https://github.com/singh1114/ml/blob/master/datascience/Machine%20learning/knn/knn.ipynb)Data
    source used: [GitHub of Data Source](https://github.com/singh1114/ml/blob/master/datascience/Machine%20learning/knn/KNN_Project_Data)In
    K-nearest neighbours algorithm most of the time you don’t really know about the
    meaning of the input parameters or the classification classes available.In case
    of interviews this is done to hide the real customer data from the potential employee.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 'GitHub 仓库: [KNN GitHub 仓库](https://github.com/singh1114/ml/blob/master/datascience/Machine%20learning/knn/knn.ipynb)
    数据源使用: [数据源的GitHub](https://github.com/singh1114/ml/blob/master/datascience/Machine%20learning/knn/KNN_Project_Data)
    在K-最近邻算法中，大多数时候你实际上并不知道输入参数或分类类别的含义。在面试的情况下，这样做是为了隐藏真实的客户数据。'
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![KNN algorithm Head of dataframe](../Images/943f8d030780af21e4937ec3bf668a36.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![KNN算法数据框头](../Images/943f8d030780af21e4937ec3bf668a36.png)'
- en: The head of the data clearly says that we have a few variables and a target
    class which contain different classes for given parameters.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的头部清楚地表明我们有一些变量和一个包含不同类别的目标类。
- en: Why normalize/ standardize the variables for KNN
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么对KNN进行变量归一化/标准化
- en: As we can already see that the data in the data frame is not standardize, if
    we don’t normalize the data the outcome will be fairly different and we won’t
    be able to get the correct results.This happens because some feature have a good
    amount of deviation in them (values range from 1-1000). This will lead to a very
    bad plot producing a lot of defects in the model.For more info on normalization,
    check this answer on [stack exchange](https://stats.stackexchange.com/a/287439).Sklearn
    provides a very simple way to standardize your data.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，数据框中的数据尚未标准化。如果不对数据进行归一化，结果会大相径庭，且可能无法获得正确的结果。这是因为某些特征的偏差很大（值范围从1到1000）。这将导致非常糟糕的图表，并在模型中产生大量缺陷。有关归一化的更多信息，请查看[stack
    exchange](https://stats.stackexchange.com/a/287439)上的回答。Sklearn提供了一种非常简单的方式来标准化数据。
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![KNN algorithm normalized data frame](../Images/8e89f347796245cfc68040ed56805082.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![KNN算法归一化数据框](../Images/8e89f347796245cfc68040ed56805082.png)'
- en: Test/Train split using sklearn
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用sklearn进行测试/训练拆分
- en: We can simply [split the data using sklearn](https://ranvir.xyz/blog/how-to-evaluate-your-machine-learning-model-like-a-pro-metrics/#test-train-split-using-sklearn).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以简单地[使用sklearn拆分数据](https://ranvir.xyz/blog/how-to-evaluate-your-machine-learning-model-like-a-pro-metrics/#test-train-split-using-sklearn)。
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Using KNN and finding an optimal k value
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用KNN并找到最佳的k值
- en: Choosing a good value of `k` can be a daunting task. We are going to automate
    this task using Python. We were able to find a good value of `k` which can minimize
    the error rate in the model.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 选择一个合适的`k`值可能是一项艰巨的任务。我们将使用Python来自动化这个任务。我们能够找到一个合适的`k`值，从而最小化模型中的错误率。
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![Finding optimal k value](../Images/df8207c791896b95d54c50ca55e2e4b5.png)Seeing
    the graph, we can see that `k=30` gives a very optimal value of error rate.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '![找到最佳k值](../Images/df8207c791896b95d54c50ca55e2e4b5.png) 从图表中可以看到，`k=30`给出了非常理想的错误率值。'
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Evaluating the KNN model
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评估KNN模型
- en: Read the following post to learn more about evaluating a machine learning model.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读以下帖子以了解更多关于评估机器学习模型的内容。
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![confusion matrix and classification report](../Images/c6a18e3d0f4c354f208bcd472999ddcc.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![混淆矩阵和分类报告](../Images/c6a18e3d0f4c354f208bcd472999ddcc.png)'
- en: Benefits of using KNN algorithm
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用KNN算法的好处
- en: KNN algorithm is widely used for different kinds of learnings because of its
    uncomplicated and easy to apply nature.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: KNN算法因其简单易用而广泛用于各种学习任务。
- en: There are only two metrics to provide in the algorithm. value of `k` and `distance
    metric`.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在算法中只需提供两个指标：`k`的值和`distance metric`。
- en: Work with any number of classes not just binary classifiers.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以处理任意数量的类别，而不仅仅是二分类器。
- en: It is fairly easy to add new data to algorithm.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向算法中添加新数据相对容易。
- en: Disadvantages of KNN algorithm
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: KNN 算法的缺点。
- en: The cost of predicting the `k` nearest neighbours is very high.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预测 `k` 最近邻的成本非常高。
- en: Doesn’t work as expected when working with big number of features/parameters.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在处理大量特征/参数时表现不如预期。
- en: Hard to work with categorical features.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理分类特征较为困难。
- en: A good read that [benchmarks various options present in sklearn for Knn](https://jakevdp.github.io/blog/2013/04/29/benchmarking-nearest-neighbor-searches-in-python/)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 一本很好的读物，[基于 sklearn 对 Knn 进行基准测试](https://jakevdp.github.io/blog/2013/04/29/benchmarking-nearest-neighbor-searches-in-python/)。
- en: Hope you liked the post. Feel free to share any issue or any question that you
    have in the comments below.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你喜欢这篇文章。如有任何问题或疑虑，欢迎在下面的评论中提出。
- en: '**Bio: [Ranvir Singh](https://ranvir.xyz/)** ([**@ranvirsingh1114**](https://twitter.com/ranvirsingh1114))
    is a web developer from India. He is a coding and Linux enthusiast who wants to
    learn as many things as possible. A FOSS lover and an open source contributor,
    he has also participated in Google Summer of Code 2017 with AboutCode organisation.
    He was also GSoC mentor in 2019 with the same organisation.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：[Ranvir Singh](https://ranvir.xyz/)** （[**@ranvirsingh1114**](https://twitter.com/ranvirsingh1114)）是一名来自印度的网页开发者。他是一个编程和
    Linux 爱好者，想尽可能多地学习新知识。作为 FOSS 爱好者和开源贡献者，他还曾参与 2017 年 Google Summer of Code 与 AboutCode
    组织合作。他还在 2019 年担任了同一组织的 GSoC 导师。'
- en: '[Original](https://ranvir.xyz/blog/k-nearest-neighbor-algorithm-using-sklearn-distance-metric/).
    Reposted with permission.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[原始内容](https://ranvir.xyz/blog/k-nearest-neighbor-algorithm-using-sklearn-distance-metric/)。经许可转载。'
- en: '**Related:**'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[5 Great New Features in Latest Scikit-learn Release](/2019/12/5-features-scikit-learn-release-highlights.html)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[最新 Scikit-learn 版本中的 5 个新特性](/2019/12/5-features-scikit-learn-release-highlights.html)。'
- en: '[7 Steps to Mastering Intermediate Machine Learning with Python — 2019 Edition](/2019/06/7-steps-mastering-intermediate-machine-learning-python.html)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[掌握中级机器学习的 7 个步骤 — 2019 版](/2019/06/7-steps-mastering-intermediate-machine-learning-python.html)。'
- en: '[Choosing the Right Clustering Algorithm for your Dataset](/2019/10/right-clustering-algorithm.html)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[为数据集选择合适的聚类算法](/2019/10/right-clustering-algorithm.html)。'
- en: More On This Topic
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关主题更多。
- en: '[From Theory to Practice: Building a k-Nearest Neighbors Classifier](https://www.kdnuggets.com/2023/06/theory-practice-building-knearest-neighbors-classifier.html)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[从理论到实践：构建 k-最近邻分类器](https://www.kdnuggets.com/2023/06/theory-practice-building-knearest-neighbors-classifier.html)。'
- en: '[Nearest Neighbors for Classification](https://www.kdnuggets.com/2022/04/nearest-neighbors-classification.html)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用于分类的最近邻](https://www.kdnuggets.com/2022/04/nearest-neighbors-classification.html)。'
- en: '[K-nearest Neighbors in Scikit-learn](https://www.kdnuggets.com/2022/07/knearest-neighbors-scikitlearn.html)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Scikit-learn 中的 K 最近邻](https://www.kdnuggets.com/2022/07/knearest-neighbors-scikitlearn.html)。'
- en: '[SQL LIKE Operator Examples](https://www.kdnuggets.com/2022/09/sql-like-operator-examples.html)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQL LIKE 操作符示例](https://www.kdnuggets.com/2022/09/sql-like-operator-examples.html)。'
- en: '[Ensemble Learning with Examples](https://www.kdnuggets.com/2022/10/ensemble-learning-examples.html)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[带示例的集成学习](https://www.kdnuggets.com/2022/10/ensemble-learning-examples.html)。'
- en: '[Picking Examples to Understand Machine Learning Model](https://www.kdnuggets.com/2022/11/picking-examples-understand-machine-learning-model.html)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[挑选示例以理解机器学习模型](https://www.kdnuggets.com/2022/11/picking-examples-understand-machine-learning-model.html)。'
