- en: How to Write Web Apps Using Simple Python for Data Scientists
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用简单的 Python 为数据科学家编写 Web 应用
- en: 原文：[https://www.kdnuggets.com/2019/10/write-web-apps-using-simple-python-data-scientists.html](https://www.kdnuggets.com/2019/10/write-web-apps-using-simple-python-data-scientists.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/10/write-web-apps-using-simple-python-data-scientists.html](https://www.kdnuggets.com/2019/10/write-web-apps-using-simple-python-data-scientists.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: A Machine Learning project is never really complete if we don’t have a good
    way to showcase it.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们没有一个好的展示方式，机器学习项目永远不会真正完成。
- en: While in the past, a well-made visualization or a small PPT used to be enough
    for showcasing a data science project, with the advent of dashboarding tools like
    RShiny and Dash, a good data scientist needs to have a fair bit of knowledge of
    web frameworks to get along.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 过去，一个制作精良的可视化或一小份 PPT 就足以展示数据科学项目，但随着 RShiny 和 Dash 等仪表板工具的出现，优秀的数据科学家需要对 Web
    框架有一定了解才能应对。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业道路。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织在 IT 方面'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: And Web frameworks are hard to learn. I still get confused in all that HTML,
    CSS, and Javascript with all the hit and trials, for something seemingly simple
    to do.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 而且 Web 框架很难学。我仍然在所有 HTML、CSS 和 JavaScript 的混乱中感到困惑，尽管做起来似乎很简单。
- en: Not to mention the many ways to do the same thing, making it confusing for us
    data science folks for whom web development is a secondary skill.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 更不用说许多完成同样任务的方法，这使得我们这些数据科学人员感到困惑，因为 Web 开发对我们来说是次要技能。
- en: '***So, are we doomed to learn web frameworks? Or to call our developer friend
    for silly doubts in the middle of the night?***'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '***那么，我们是否注定要学习 Web 框架？还是在半夜给开发者朋友打电话解答一些傻问题？***'
- en: This is where StreamLit comes in and delivers on its promise to create web apps
    just using Python.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是 Streamlit 发挥作用的地方，它兑现了仅用 Python 创建 Web 应用的承诺。
- en: 'Zen of Python: Simple is better than complex and Streamlit makes it dead simple
    to create apps.'
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Python 的 Zen: 简单优于复杂，而 Streamlit 使得创建应用程序变得极其简单。'
- en: '***This post is about understanding how to create apps that support data science
    projects using Streamlit.***'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '***这篇文章旨在帮助理解如何使用 Streamlit 创建支持数据科学项目的应用程序。***'
- en: To understand more about the architecture and the thought process that led to
    streamlit, have a look at this excellent [post](https://towardsdatascience.com/coding-ml-tools-like-you-code-ml-models-ddba3357eace) by
    one of the original developers/founder [Adrien Treuille](https://medium.com/u/39dfc90d7a34?source=post_page-----a227a1a01582----------------------).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解有关 Streamlit 的架构和思路的更多信息，可以看看这篇优秀的 [文章](https://towardsdatascience.com/coding-ml-tools-like-you-code-ml-models-ddba3357eace)，作者是原始开发者/创始人之一
    [Adrien Treuille](https://medium.com/u/39dfc90d7a34?source=post_page-----a227a1a01582----------------------)。
- en: Installation
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装
- en: 'Installation is as simple as running the command:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 安装就像运行以下命令一样简单：
- en: '`pip install streamlit`'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip install streamlit`'
- en: 'To see if our installation is successful, we can just run:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查我们的安装是否成功，我们可以运行：
- en: '`streamlit hello`'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`streamlit hello`'
- en: 'This should show you a screen that says:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会显示一个提示信息：
- en: '![](../Images/b36ddb8cd9c75be4801d6302f5800e74.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b36ddb8cd9c75be4801d6302f5800e74.png)'
- en: You can go to the local URL: `localhost:8501` in your browser to see a Streamlit
    app in action. The developers have provided some cool demos that you can play
    with. Do take your time and feel the power of the tool before coming back.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在浏览器中访问本地 URL：`localhost:8501` 以查看 Streamlit 应用程序的实际效果。开发者提供了一些很酷的演示，你可以试试看。在回来之前，花点时间感受一下这个工具的强大。
- en: '![](../Images/98b81dabd0800ee19aa539508e72d6fd.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/98b81dabd0800ee19aa539508e72d6fd.png)'
- en: Streamlit Hello World
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Streamlit Hello World
- en: Streamlit aims to make app development easy using simple Python.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit 旨在通过简单的 Python 使应用程序开发变得容易。
- en: So let us write a simple app to see if it delivers on that promise.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们写一个简单的应用，以查看它是否实现了这个承诺。
- en: Here I start with a simple app which we will call the Hello World of streamlit.
    Just paste the code given below in a file named `helloworld.py`
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我从一个简单的应用开始，我们将其称为 streamlit 的 Hello World。只需将以下代码粘贴到名为 `helloworld.py` 的文件中。
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'And, on the terminal run:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 并在终端中运行：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: And voila, you should be able to see a simple app in action in your browser
    at `localhost:8501` that allows you to move a slider and gives the result.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样，你应该能在浏览器的 `localhost:8501` 中看到一个简单的应用，它允许你移动滑块并显示结果。
- en: '![Figure](../Images/77e116a21563e022c2f0faaabb15f40e.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/77e116a21563e022c2f0faaabb15f40e.png)'
- en: A Simple slider widget app
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的滑块小部件应用
- en: 'It was pretty easy. In the above app, we used two features from Streamlit:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这很简单。在上述应用中，我们使用了 Streamlit 的两个功能：
- en: the `st.slider` widget that we can slide to change the output of the web app.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`st.slider` 小部件可以滑动以改变网页应用的输出。'
- en: and the versatile `st.write` command. I am amazed at how it can write anything
    from charts, dataframes, and simple text. More on this later.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 和多功能的 `st.write` 命令。我对它能够写入图表、数据框和简单文本感到惊讶。稍后会详细介绍。
- en: '***Important: Remember that every time we change the widget value, the whole
    app runs from top to bottom.***'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '***重要提示：请记住，每次我们更改小部件值时，整个应用程序都会从上到下重新运行。***'
- en: Streamlit Widgets
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Streamlit 小部件
- en: Widgets provide us a way to control our app. The best place to read about the
    widgets is the [API reference](https://streamlit.io/docs/api.html) documentation
    itself but I will describe some most prominent ones that you might end up using.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 小部件为我们提供了一种控制应用的方法。阅读小部件的最佳地方是 [API 参考](https://streamlit.io/docs/api.html)
    文档本身，但我会描述一些你可能会使用的最突出的功能。
- en: '**1\. Slider**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**1\. 滑块**'
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We already saw `st.slider` in action above. It can be used with min_value,max_value,
    and step for getting inputs in a range.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在上面已经看到过 `st.slider` 的实际应用。它可以与 min_value、max_value 和 step 一起使用，以获取范围内的输入。
- en: '**2\. Text Input**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**2\. 文本输入**'
- en: The simplest way to get user input be it some URL input or some text input for
    sentiment analysis. It just needs a single label for naming the textbox.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 获取用户输入，无论是某个 URL 输入还是用于情感分析的文本输入，最简单的方法就是使用一个文本框标签。
- en: '[PRE3]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This is how the app looks:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是应用的外观：
- en: '![Figure](../Images/584efce2218bc6fd32061a4abd5bfad9.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/584efce2218bc6fd32061a4abd5bfad9.png)'
- en: A Simple text_input widget app
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的文本输入小部件应用
- en: '**Tip: **You can just change the file `helloworld.py` and refresh the browser.
    The way I work is to open and change`helloworld.py` in sublime text and see the
    changes in the browser side by side.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示：** 你可以直接更改文件 `helloworld.py` 并刷新浏览器。我工作的方式是打开并更改 `helloworld.py` 在 sublime
    text 中，然后在浏览器中并排查看更改。'
- en: '**3\. Checkbox**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**3\. 复选框**'
- en: One use case for checkboxes is to hide or show/hide a specific section in an
    app. Another could be setting up a boolean value in the parameters for a function.`[st.checkbox()](https://streamlit.io/docs/api.html#streamlit.checkbox)` takes
    a single argument, which is the widget label. In this app, the checkbox is used
    to toggle a conditional statement.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 复选框的一个应用场景是隐藏或显示应用中的特定部分。另一个可能是为函数设置布尔值。`[st.checkbox()](https://streamlit.io/docs/api.html#streamlit.checkbox)`
    接受一个参数，即小部件标签。在这个应用中，复选框用于切换条件语句。
- en: '[PRE4]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Figure](../Images/41dfc8c293a9ecd40feb63126ca6ff55.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/41dfc8c293a9ecd40feb63126ca6ff55.png)'
- en: A Simple checkbox widget app
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的复选框小部件应用
- en: '**4\. SelectBox**'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**4\. 选择框**'
- en: We can use `[st.selectbox](https://streamlit.io/docs/api.html#streamlit.selectbox)` to
    choose from a series or a list. Normally a use case is to use it as a simple dropdown
    to select values from a list.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `[st.selectbox](https://streamlit.io/docs/api.html#streamlit.selectbox)`
    从一系列或列表中进行选择。通常的使用场景是作为一个简单的下拉框来从列表中选择值。
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Figure](../Images/004085363e293314b892eb7782fb8a5a.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/004085363e293314b892eb7782fb8a5a.png)'
- en: A Simple dropdown/selectbox widget app
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的下拉框/选择框小部件应用
- en: '**5\. MultiSelect**'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**5\. 多选框**'
- en: We can also use multiple values from a dropdown. Here we use `st.multiselect` to
    get multiple values as a list in the variable `options`
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以从下拉框中选择多个值。在这里我们使用 `st.multiselect` 将多个值作为列表存储在变量 `options` 中。
- en: '[PRE6]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Figure](../Images/8cc0cd817759f5e70e3718703b1090bb.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/8cc0cd817759f5e70e3718703b1090bb.png)'
- en: A Simple multiselect widget app
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的多选框小部件应用
- en: Creating Our Simple App Step by Step
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建我们的简单应用，逐步进行
- en: So much for understanding the important widgets. Now, we are going to create
    a simple app using multiple widgets at once.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 理解了重要的小部件后，我们将创建一个同时使用多个小部件的简单应用。
- en: To start simple, we will try to visualize our football data using streamlit.
    It is pretty much simple to do this with the help of the above widgets.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简单起见，我们将尝试使用 streamlit 可视化我们的足球数据。借助上述小部件，这样做非常简单。
- en: '[PRE7]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Our simple app looks like:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的简单应用如下所示：
- en: '![Figure](../Images/67f9558dfafa88892f7dba592c60529b.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/67f9558dfafa88892f7dba592c60529b.png)'
- en: Using multiple widgets in conjunction
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 将多个小部件结合使用
- en: That was easy. But it seems pretty basic right now. Can we add some charts?
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这很简单。但现在看起来还是很基础。我们能添加一些图表吗？
- en: Streamlit currently supports many libraries for plotting.*** Plotly, Bokeh,
    Matplotlib, Altair, and Vega charts*** being some of them. ***Plotly Express*** also
    works, although they didn’t specify it in the docs. It also has some inbuilt chart
    types that are “native” to Streamlit, like `st.line_chart` and `st.area_chart`.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit 目前支持许多绘图库。***Plotly、Bokeh、Matplotlib、Altair 和 Vega 图表*** 只是其中的一些。***Plotly
    Express*** 也可以使用，尽管文档中没有具体说明。它还具有一些对 Streamlit “原生”的内置图表类型，如 `st.line_chart` 和
    `st.area_chart`。
- en: We will work with `plotly_express` here. Here is the code for our simple app.
    We just used four calls to streamlit. Rest is all simple python.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 `plotly_express`。这是我们简单应用的代码。我们只使用了四次对 streamlit 的调用，其余都是简单的 Python。
- en: '[PRE8]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![Figure](../Images/e48af5b9978fab715a87f740201f3d69.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/e48af5b9978fab715a87f740201f3d69.png)'
- en: Adding charts
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 添加图表
- en: Improvements
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 改进
- en: In the start we said that each time we change any widget, the whole app runs
    from start to end. This is not feasible when we create apps that will serve deep
    learning models or complicated machine learning models. Streamlit covers us in
    this aspect by introducing ***Caching***.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 开始时我们提到，每次更改任何小部件时，整个应用程序都会从头到尾运行。当我们创建要服务于深度学习模型或复杂机器学习模型的应用时，这是不可行的。Streamlit
    在这方面通过引入***缓存***来解决这个问题。
- en: '**1\. Caching**'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**1. 缓存**'
- en: In our simple app. We read the pandas dataframe again and again whenever a value
    changes. While it works for the small data we have, it will not work for big data
    or when we have to do a lot of processing on the data. Let us use caching using
    the `st.cache` decorator function in streamlit like below.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们简单的应用中，每当一个值发生变化时，我们就不断地读取 pandas 数据框。虽然这对于我们的小数据集有效，但对于大数据或需要大量处理的数据就不适用了。让我们使用
    `st.cache` 装饰器函数在 streamlit 中进行缓存，如下所示。
- en: '[PRE9]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Or for more complex and time taking functions that need to run only once, using:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 或者对于那些复杂且耗时的只需运行一次的函数，使用：
- en: '[PRE10]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: When we mark a function with Streamlit’s cache decorator, whenever the function
    is called streamlit checks the input parameters that you called the function with.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们用 Streamlit 的缓存装饰器标记一个函数时，每当调用该函数时，Streamlit 会检查你调用函数时使用的输入参数。
- en: '***If this is the first time Streamlit has seen these params, it runs the function
    and stores the result in a local cache.***'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '***如果这是 Streamlit 第一次看到这些参数，它将运行函数并将结果存储在本地缓存中。***'
- en: When the function is called the next time, if those params have not changed,
    Streamlit knows it can skip executing the function altogether. It just uses the
    results from the cache.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 当下次调用该函数时，如果这些参数没有改变，Streamlit 就知道可以完全跳过函数的执行。它只使用缓存中的结果。
- en: '**2\. Sidebar**'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**2. 侧边栏**'
- en: For a cleaner look based on your preference, you might want to move your widgets
    into a sidebar, something like Rshiny dashboards. ***This is pretty simple. Just
    add ***`***st.sidebar***`*** in your widget’s code.***
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的喜好，为了获得更干净的外观，您可能希望将小部件移动到侧边栏中，类似于 Rshiny 仪表板。***这非常简单。只需在小部件代码中添加 ***`***st.sidebar***`***。***
- en: '[PRE11]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Figure](../Images/985ed87f7ef1cb1d21b1140f0da1a995.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/985ed87f7ef1cb1d21b1140f0da1a995.png)'
- en: Move widgets to the sidebar
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 将小部件移动到侧边栏
- en: '**3\. Markdown?**'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**3. Markdown？**'
- en: I love writing in Markdown. I find it less verbose than HTML and much more suited
    for data science work. So, can we use Markdown with the streamlit app?
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢用 Markdown 写作。我觉得它比 HTML 更简洁，更适合数据科学工作。那么，我们能在 streamlit 应用中使用 Markdown 吗？
- en: Yes, we can. There are a couple of ways to do this. In my view, the best one
    is to use [Magic commands](https://streamlit.io/docs/api.html#id1). Magic commands
    allow you to write markdown as easily as comments. You could also have used the
    command `st.markdown`
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，我们可以。有几种方法可以做到这一点。在我看来，最好的方法是使用 [Magic commands](https://streamlit.io/docs/api.html#id1)。Magic
    commands 允许你像写注释一样轻松地写 Markdown。你也可以使用命令 `st.markdown`
- en: '[PRE12]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![Figure](../Images/4c18d90180760c668954ca4899252e07.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/4c18d90180760c668954ca4899252e07.png)'
- en: Our final App Demo
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的最终应用演示
- en: Conclusion
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论
- en: Streamlit has democratized the whole process to create apps, and I couldn’t
    recommend it more.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit 已经使整个应用程序创建过程变得民主化，我强烈推荐它。
- en: In this post, we created a simple web app. But the possibilities are endless.
    To give an example here is [face GAN](https://research.nvidia.com/publication/2017-10_Progressive-Growing-of) from
    the streamlit site. And it works by just using the same guiding ideas of widgets
    and caching.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们创建了一个简单的网页应用。但可能性是无穷的。例如，这里是[face GAN](https://research.nvidia.com/publication/2017-10_Progressive-Growing-of)来自Streamlit网站。它通过使用相同的控件和缓存指导思想来工作。
- en: '![](../Images/8c128ce20d3beb22716789d4ed7d4b62.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8c128ce20d3beb22716789d4ed7d4b62.png)'
- en: I love the default colors and styles that the developers have used, and I found
    it much more comfortable than using Dash, which I was using until now for my demos.
    You can also include [audio](https://streamlit.io/docs/api.html#display-interactive-widgets) and
    video in your streamlit apps.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢开发者使用的默认颜色和样式，发现它比我之前用于演示的Dash更舒适。你还可以在Streamlit应用中加入[audio](https://streamlit.io/docs/api.html#display-interactive-widgets)和视频。
- en: '**On top of that, Streamlit is a free and open-source rather than a proprietary
    web app that just works out of the box.**'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**更重要的是，Streamlit 是一个免费且开源的工具，而不是一个需要额外配置的专有网页应用。**'
- en: In the past, I had to reach out to my developer friends for any single change
    in a demo or presentation; now it is relatively trivial to do that.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 过去，我必须联系我的开发者朋友才能对演示或展示进行任何修改；现在这变得相对简单了。
- en: I aim to use it more in my workflow from now on, and considering the capabilities
    it provides without all the hard work, I think you should too.
  id: totrans-109
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我打算从现在开始在我的工作流程中更多使用它，并且考虑到它提供的功能而无需繁重的工作，我认为你也应该尝试一下。
- en: I don’t have an idea if it will perform well in a production environment yet,
    but its a boon for the small proof of concept projects and demos. I aim to use
    it more in my workflow from now on, and considering the capabilities it provides
    without all the hard work, I think you should too.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我还不确定它在生产环境中的表现如何，但它对于小型概念验证项目和演示是一个福音。我打算从现在开始在我的工作流程中更多使用它，并且考虑到它提供的功能而无需繁重的工作，我认为你也应该尝试一下。
- en: You can find the full code for the final app [here](https://github.com/MLWhiz/streamlit_football_demo).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[这里](https://github.com/MLWhiz/streamlit_football_demo)找到最终应用的完整代码。
- en: If you want to learn about the best strategies for creating Visualizations,
    I would like to call out an excellent course about [**Data Visualization and applied
    plotting**](https://www.coursera.org/specializations/data-science-python?ranMID=40328&ranEAID=lVarvwc5BD0&ranSiteID=lVarvwc5BD0-SAQTYQNKSERwaOgd07RrHg&siteID=lVarvwc5BD0-SAQTYQNKSERwaOgd07RrHg&utm_content=3&utm_medium=partners&utm_source=linkshare&utm_campaign=lVarvwc5BD0) from
    the University of Michigan, which is a part of a pretty good [**Data Science Specialization
    with Python**](https://www.coursera.org/specializations/data-science-python?ranMID=40328&ranEAID=lVarvwc5BD0&ranSiteID=lVarvwc5BD0-SAQTYQNKSERwaOgd07RrHg&siteID=lVarvwc5BD0-SAQTYQNKSERwaOgd07RrHg&utm_content=3&utm_medium=partners&utm_source=linkshare&utm_campaign=lVarvwc5BD0) in
    itself. Do check it out.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解创建可视化的最佳策略，我推荐密歇根大学提供的[**数据可视化与应用绘图**](https://www.coursera.org/specializations/data-science-python?ranMID=40328&ranEAID=lVarvwc5BD0&ranSiteID=lVarvwc5BD0-SAQTYQNKSERwaOgd07RrHg&siteID=lVarvwc5BD0-SAQTYQNKSERwaOgd07RrHg&utm_content=3&utm_medium=partners&utm_source=linkshare&utm_campaign=lVarvwc5BD0)课程，它也是一个相当不错的[**Python数据科学专业化**](https://www.coursera.org/specializations/data-science-python?ranMID=40328&ranEAID=lVarvwc5BD0&ranSiteID=lVarvwc5BD0-SAQTYQNKSERwaOgd07RrHg&siteID=lVarvwc5BD0-SAQTYQNKSERwaOgd07RrHg&utm_content=3&utm_medium=partners&utm_source=linkshare&utm_campaign=lVarvwc5BD0)的一部分。一定要去看看。
- en: Thanks for the read. I am going to be writing more beginner-friendly posts in
    the future too. Follow me up at [**Medium**](https://medium.com/@rahul_agarwal) or
    Subscribe to my [**blog**](http://eepurl.com/dbQnuX) to be informed about them.
    As always, I welcome feedback and constructive criticism and can be reached on
    Twitter [@mlwhiz](https://twitter.com/MLWhiz).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读。我未来还会写更多面向初学者的帖子。关注我在[**Medium**](https://medium.com/@rahul_agarwal)或订阅我的[**博客**](http://eepurl.com/dbQnuX)以获取最新信息。如往常一样，我欢迎反馈和建设性的批评，可以通过Twitter[@mlwhiz](https://twitter.com/MLWhiz)联系我。
- en: Also, a small disclaimer — There might be some affiliate links in this post
    to relevant resources, as sharing knowledge is never a bad idea.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，小小的免责声明——这篇文章中可能包含一些相关资源的附属链接，分享知识从来不是坏主意。
- en: '**Bio: [Rahul Agarwal](https://www.linkedin.com/in/rahulagwl/)** is a Data
    Scientist at Walmart Labs.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：[Rahul Agarwal](https://www.linkedin.com/in/rahulagwl/)** 是 Walmart Labs
    的数据科学家。'
- en: '[Original](https://towardsdatascience.com/how-to-write-web-apps-using-simple-python-for-data-scientists-a227a1a01582).
    Reposted with permission.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/how-to-write-web-apps-using-simple-python-for-data-scientists-a227a1a01582)。已获授权转载。'
- en: '**Related:**'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[6 bits of advice for Data Scientists](/2019/09/advice-data-scientists.html)'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家的 6 条建议](/2019/09/advice-data-scientists.html)'
- en: '[Good Feature Building Techniques and Tricks for Kaggle](/2018/12/feature-building-techniques-tricks-kaggle.html)'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Kaggle 的优秀特征构建技巧和窍门](/2018/12/feature-building-techniques-tricks-kaggle.html)'
- en: '[The 5 Graph Algorithms That Data Scientists Should Know](/2019/09/5-graph-algorithms-data-scientists-know.html)'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家应该了解的 5 种图算法](/2019/09/5-graph-algorithms-data-scientists-know.html)'
- en: More On This Topic
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Meet MetaGPT: The ChatGPT-Powered AI Assistant That Turns Text Into…](https://www.kdnuggets.com/meet-metagpt-the-chatgptpowered-ai-assistant-that-turns-text-into-web-apps)'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[认识 MetaGPT：一个由 ChatGPT 驱动的 AI 助手，能够将文本转化为…](https://www.kdnuggets.com/meet-metagpt-the-chatgptpowered-ai-assistant-that-turns-text-into-web-apps)'
- en: '[Write Clean Python Code Using Pipes](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用管道编写干净的 Python 代码](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)'
- en: '[A Beginner’s Guide to Web Scraping Using Python](https://www.kdnuggets.com/2022/10/beginner-guide-web-scraping-python.html)'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[初学者 Python 网络爬虫指南](https://www.kdnuggets.com/2022/10/beginner-guide-web-scraping-python.html)'
- en: '[How to Write SQL in Native Python](https://www.kdnuggets.com/2022/02/easy-sql-native-python.html)'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何用原生 Python 编写 SQL](https://www.kdnuggets.com/2022/02/easy-sql-native-python.html)'
- en: '[How To Write Efficient Python Code: A Tutorial for Beginners](https://www.kdnuggets.com/how-to-write-efficient-python-code-a-tutorial-for-beginners)'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何编写高效的 Python 代码：初学者教程](https://www.kdnuggets.com/how-to-write-efficient-python-code-a-tutorial-for-beginners)'
- en: '[8 Built-in Python Decorators to Write Elegant Code](https://www.kdnuggets.com/8-built-in-python-decorators-to-write-elegant-code)'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[8 个内置 Python 装饰器，帮助你编写优雅的代码](https://www.kdnuggets.com/8-built-in-python-decorators-to-write-elegant-code)'
