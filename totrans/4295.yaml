- en: Software Engineering Best Practices for Data Scientists
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据科学家的软件工程最佳实践
- en: 原文：[https://www.kdnuggets.com/2021/03/software-engineering-best-practices-data-scientists.html](https://www.kdnuggets.com/2021/03/software-engineering-best-practices-data-scientists.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/03/software-engineering-best-practices-data-scientists.html](https://www.kdnuggets.com/2021/03/software-engineering-best-practices-data-scientists.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Madison Hunter](https://madison13.medium.com/), Geoscience BSc Undergrad
    Student**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Madison Hunter](https://madison13.medium.com/) 提供，地球科学本科生**'
- en: '![](../Images/819721409a44c604cc26e9ec52dd53e3.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/819721409a44c604cc26e9ec52dd53e3.png)'
- en: Photo by [Joonas kääriäinen](https://www.pexels.com/@joonas-kaariainen-67364?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels) from [Pexels](https://www.pexels.com/photo/bridge-with-lights-at-night-240572/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 由 [Joonas kääriäinen](https://www.pexels.com/@joonas-kaariainen-67364?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels)
    提供，来自 [Pexels](https://www.pexels.com/photo/bridge-with-lights-at-night-240572/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels)
- en: I didn't really understand why people would complain about the code that data
    scientists produce until I began writing data analysis code myself.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在我自己开始编写数据分析代码之前，我真的不明白为什么人们会抱怨数据科学家编写的代码。
- en: '* * *'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业道路'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你组织的IT'
- en: '* * *'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Coming from an education in software development, I felt that I had a good grasp
    of coding best practices and I was confident in my ability to write clean code.
    Then it came time for me to write my first data analysis.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 来自软件开发的教育背景让我觉得自己对编码最佳实践有很好的掌握，并且对编写干净的代码充满信心。然后，当我开始编写第一次数据分析代码时。
- en: You guessed it.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你猜对了。
- en: An absence of functions, unclear variable names, spaghetti code, not a single
    hint of a unit test, and a severe lack of style ensued, leaving me with the equivalent
    of a dog’s breakfast to try to reason out after I had gotten my code to work.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 缺乏函数、不清晰的变量名、意大利面条式的代码、没有单元测试的迹象以及风格的严重缺乏，使得我在让代码工作后，面对的代码相当于一锅混乱的早餐。
- en: At last, I finally understood what all of those engineers were complaining about.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我终于理解了那些工程师抱怨的原因。
- en: Data science isn’t a field that naturally stems from computer science, and it’s
    reflected in the wide variety of backgrounds that data scientists hold. Many data
    scientists don’t even have a degree in computer science, as they often come from
    other unrelated fields including mathematics, the sciences, engineering, business,
    medicine, and more.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学不是一个自然源于计算机科学的领域，这一点反映在数据科学家拥有的各种不同背景上。许多数据科学家甚至没有计算机科学的学位，他们往往来自其他不相关的领域，包括数学、科学、工程、商业、医学等。
- en: Therefore, it’s no wonder that data scientists aren’t known for always having
    the cleanest code.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，数据科学家不以总是拥有最干净的代码而闻名也就不足为奇了。
- en: I’m not saying that data scientists need to be able to write entire complex
    libraries. Instead, data scientists should be able to produce clean code that
    can be updated, debugged, and moved into a production environment with few swear
    words coming from the engineering department.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我并不是说数据科学家需要能够编写整个复杂的库。相反，数据科学家应该能够生成干净的代码，这些代码可以被更新、调试，并且在生产环境中使用时工程部门不会发出太多脏话。
- en: The importance of writing clean code isn’t just for the sake of others either.
    In many companies, the budget isn’t big enough to hire data scientists *and* software
    engineers, which means that data scientists are often responsible for creating
    production-ready code. Therefore, one's own sanity should count as a factor for
    maintaining and developing clean, easy-to-use, and reusable code.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 编写干净代码的重要性不仅仅是为了他人。在许多公司中，预算不足以聘请数据科学家*和*软件工程师，这意味着数据科学家通常负责创建生产就绪的代码。因此，个人的理智也应该作为维护和开发干净、易用和可重用代码的一个因素。
- en: 'Many will argue that good code is subjective. However, there are generally
    four standards that everyone can agree on that define code written using best
    practices:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人会争论优秀的代码是主观的。然而，通常有四个标准是每个人都能同意的，它们定义了使用最佳实践编写的代码：
- en: Good code should be efficient — this means that you squeeze every little bit
    of speed and efficiency out of your Python code, even when there is none.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 优秀的代码应该是高效的——这意味着你需要从你的 Python 代码中挤出每一丝速度和效率，即使在没有的情况下也是如此。
- en: Good code is maintainable — this means that you can maintain the code and that
    others can easily understand and maintain your code.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 优秀的代码是可维护的——这意味着你可以维护代码，并且其他人也可以轻松理解和维护你的代码。
- en: Good code is readable and well-structured — this means that anyone should be
    able to look at your code and understand what you’re trying to accomplish without
    having to try too hard.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 优秀的代码是可读的且结构良好的——这意味着任何人都应该能够查看你的代码并理解你试图实现的目标，而不需要费太大劲。
- en: Good code is reliable — clean code is good code, and good code is reliable such
    that it isn’t prone to bugs or random glitches.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 优秀的代码是可靠的——干净的代码是好的代码，而好的代码是可靠的，不容易出现错误或随机故障。
- en: Check out these best practices that you can implement to attain the above four
    standards.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 查看这些最佳实践，你可以应用它们来达到上述四个标准。
- en: Use descriptive variable names.
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用描述性变量名。
- en: I’ve often seen data analysis code written using variable names such as x, or
    y, or the English wording for any number of mathematical variables.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我经常看到数据分析代码使用变量名如 x、y，或者任何数学变量的英文单词。
- en: While this works when writing out mathematical formulas, it doesn’t come across
    as clearly when you’re reading it in someone’s code.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这在编写数学公式时有效，但在阅读他人的代码时并不那么清晰。
- en: 'When it comes to data science, I like to say exactly what my variables are.
    For example:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据科学方面，我喜欢明确我的变量是什么。例如：
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Anyone who has taken a course in statistics will be able to understand what
    my variables are, and what they are doing in my equations. These basic variables
    can then be made more descriptive when it comes to specific calculations or uses.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 任何修过统计课程的人都会理解我的变量是什么，以及它们在我的方程式中所做的事情。这些基本变量可以在特定的计算或使用时变得更具描述性。
- en: The trick is to try to be as descriptive as the situation allows. Of course,
    there will be instances when the computations are so complex that it wouldn’t
    make sense to write such descriptive variables. However, until that time comes,
    try to be descriptive.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 诀窍是尽可能详尽描述情况。当然，有时候计算如此复杂，以至于写出如此描述性的变量没有意义。然而，在这种情况出现之前，尽量做到描述性。
- en: Use functions.
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用函数。
- en: Functions, regardless of your programming methodology (object-oriented, functional,
    etc.), are vital to keeping your code clean, concise, readable, and DRY (which
    I’ll talk about later on).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 函数，无论你采用什么编程方法论（面向对象、函数式等），对于保持代码干净、简洁、可读和 DRY（我稍后会谈到）是至关重要的。
- en: Functions aren’t always intuitive for non-computer-science-graduate-data-scientists
    because code will run correctly without them.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 对于非计算机科学专业的数据科学家来说，函数并不总是直观的，因为代码在没有函数的情况下也能正确运行。
- en: However, the best programmers are said to be the laziest programmers. Why? Because
    they write the least amount of code and often write the cleanest code to produce
    a solution. They work as little as possible to get their code to work and they
    often produce the most concise solutions. This involves using functions.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，最好的程序员被认为是最懒的程序员。为什么？因为他们写的代码最少，并且往往写出最简洁的代码来解决问题。他们尽可能少地工作以使代码运行，并且通常会产生最简洁的解决方案。这涉及到使用函数。
- en: 'Here are some tips on how to write great functions that keep your code clean:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些编写优秀函数以保持代码整洁的技巧：
- en: The function should only do one thing. Not 10\. Not 20\. Just one thing.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数应该只做一件事。不是 10 件事。不是 20 件事。只是做一件事。
- en: Functions should be small. Some argue that functions should contain no more
    than 20 lines of code, but this is an arbitrary number. Try your best to keep
    your functions short and to the point.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数应该尽量小。有些人认为函数的代码行数不应超过20行，但这是一个任意的数字。尽量保持函数简洁明了。
- en: Functions should be written so you can read them and understand their logic
    in a top-to-bottom fashion — just like how you read a book.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数应该编写得让你能够从上到下阅读和理解其逻辑——就像你读一本书一样。
- en: Try to keep the number of function arguments to a minimum (less than 3 is preferred).
    If you’re requiring more than three function arguments, ask yourself if the function
    is only completing one task.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽量将函数参数的数量保持在最小（少于3个为佳）。如果你要求更多的函数参数，问问自己这个函数是否只完成一个任务。
- en: Make sure the logic found within functions is properly indented and that the
    code for the entire function is properly blocked. This will help others see what
    code is inside the function, and where the function starts and stops.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保函数中的逻辑正确缩进，并且整个函数的代码被适当地分块。这将帮助其他人看到函数内部的代码，以及函数的开始和结束位置。
- en: Use descriptive names.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用描述性名称。
- en: Use comments and write proper supporting documentation.
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用评论并编写适当的支持文档。
- en: It can be easy to overlook this step when you’re in the middle of building life-altering
    models, but the fact remains that if no one else can use them, then how life-altering
    are they really?
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在构建改变生活的模型时，这一步很容易被忽视，但事实是，如果没有其他人能够使用它们，那么它们真的能改变生活吗？
- en: 'My personal rule of thumb for comments:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我的个人评论规则：
- en: Write a comment at the top of the code file, giving a brief description of the
    goal of the code.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在代码文件的顶部写下简要描述代码目标的评论。
- en: Write a comment at the top of each function describing its inputs, outputs,
    and what logic it's performing.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在每个函数的顶部写下描述其输入、输出和执行逻辑的评论。
- en: Write a comment at the top of any logic that I don’t totally understand so I
    can better organize my thoughts. This helps during debugging and code refactoring.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在我不完全理解的逻辑上方写下评论，以便更好地组织我的思路。这有助于调试和代码重构。
- en: 'When it comes to writing proper supporting documentation, your documentation
    doesn’t have to be any more elaborate than a READme file. At its most basic, good
    documentation should include:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写适当的支持文档时，文档不必比READme文件更复杂。最基本的，好的文档应包括：
- en: The goal of the code.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码的目标。
- en: Instructions on how to install and use the code.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何安装和使用代码的说明。
- en: Explain tricky parts of your code in long-form, taking time to describe exactly
    what the code does line by line, and perhaps even why you elected to write your
    code that way.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 详细解释代码中棘手的部分，逐行描述代码的具体功能，并可能解释你为什么选择这样编写代码。
- en: Screenshots to help with debugging and troubleshooting.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于调试和故障排除的截图。
- en: Helpful links to external supporting documentation that can further describe
    and explain parts of your logic or code.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有助于进一步描述和解释你的逻辑或代码的外部支持文档的有用链接。
- en: Use a consistent coding style and become familiar with the syntax conventions
    for the languages you use.
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用一致的编码风格，并熟悉你使用的语言的语法惯例。
- en: I’m guilty of not always following the proper conventions for a given language.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我承认我并不总是遵循某种语言的正确惯例。
- en: After primarily learning to code in C# when I was in university, I became familiar
    and comfortable with its conventions and I then went on to very lazily apply those
    same conventions to every other language I came across.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在大学时，我主要学习了C#编程，对其惯例非常熟悉并感到舒适，随后我懒散地将这些惯例应用到我遇到的其他语言中。
- en: Don’t be like me. Instead, take the time to learn the syntax conventions of
    each new language, and force yourself to use those conventions properly. This
    will not only help you immerse yourself in the language, but it will also help
    you write cleaner code, and will help you communicate with other developers using
    the same language.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 不要像我一样。相反，花时间学习每种新语言的语法惯例，并强迫自己正确使用这些惯例。这不仅有助于你更深入地融入语言，还能帮助你编写更清晰的代码，并有助于你与使用相同语言的其他开发者沟通。
- en: 'Here’s an example of code that completes the same function, written using two
    different languages and the appropriate conventions for each (keep in mind that
    there is a lack of indentation caused by this formatting):'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个完成相同功能的代码示例，使用两种不同的语言和每种语言的适当惯例（请注意，由于格式问题，可能缺少缩进）：
- en: 'C#:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 'C#:'
- en: '[PRE1]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Python:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 'Python:'
- en: '[PRE2]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This silly code doesn’t really do much of anything, but it kind of gives you
    an idea about how different the conventions are for each language.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这段傻乎乎的代码其实没做什么，但它让你对每种语言的约定差异有了一个大致的了解。
- en: Use libraries.
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用库。
- en: Using pre-existing libraries is a huge time saver, especially when it comes
    to coding data analyses. Python is chock full of libraries that can handle every
    request a data scientist could throw at it. Not only are these libraries already
    coded for you, but they’ve already been debugged and are production-ready.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 使用现有的库可以节省大量时间，特别是在编写数据分析代码时。Python 充满了能够处理数据科学家需求的库。这些库不仅已经为你编写好，而且已经调试并准备好投入生产。
- en: 'Check out this article that outlines the [top data science libraries](https://towardsdatascience.com/top-10-python-libraries-for-data-science-cd82294ec266) and
    their abilities. I’ve summarized it here, focusing on the seven libraries I’ve
    found most useful:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 查看这篇文章，概述了 [顶级数据科学库](https://towardsdatascience.com/top-10-python-libraries-for-data-science-cd82294ec266)
    及其功能。我在这里总结了我发现最有用的七个库：
- en: NumPy
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: NumPy
- en: 'Basic array operations: add, multiply, slice, flatten, reshape, index.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本数组操作：添加、乘法、切片、扁平化、重塑、索引。
- en: 'Advanced array operations: stack arrays, split into sections.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级数组操作：堆叠数组，拆分成多个部分。
- en: Linear algebra.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线性代数。
- en: Pandas
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Pandas
- en: Indexing, manipulating, renaming, sorting, and merging data frames.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引、操作、重命名、排序和合并数据框。
- en: Basic CRUD (Update, Add Delete) functionalities on columns from a data frame.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对数据框中的列进行基本的 CRUD（更新、添加、删除）功能。
- en: Input missing files and handle missing data.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入缺失的文件并处理缺失数据。
- en: Create histograms or box plots.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建直方图或箱线图。
- en: Matplotlib
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Matplotlib
- en: All data visualizations, including line plots, scatter plots, bar charts, histograms,
    pie charts, stem plots, and spectrograms, to name a few.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有的数据可视化，包括折线图、散点图、条形图、直方图、饼图、茎叶图和频谱图等。
- en: TensorFlow
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TensorFlow
- en: Voice and sound recognition.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 语音和声音识别。
- en: Sentiment analysis.
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 情感分析。
- en: Face recognition.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人脸识别。
- en: Time series.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列。
- en: Video detection.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视频检测。
- en: Seaborn
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Seaborn
- en: Determine correlations between variables.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定变量之间的相关性。
- en: Analyze uni-variate or bi-variate distributions.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析单变量或双变量分布。
- en: Plot linear regression models for dependent variables.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绘制依赖变量的线性回归模型。
- en: SciPy
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SciPy
- en: Common scientific computing, including linear algebra, interpolation, statistics,
    calculus, and ordinary differential equations.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常见的科学计算，包括线性代数、插值、统计、微积分和常微分方程。
- en: Scikit-Learn
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Scikit-Learn
- en: Supervised and unsupervised learning algorithms for classification, clustering,
    regression, dimensionality, model selection, and pre-processing.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于分类、聚类、回归、降维、模型选择和预处理的监督学习和无监督学习算法。
- en: Use a good IDE.
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用一个好的 IDE。
- en: Jupyter is not meant to write production-ready code.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter 并不适合编写生产就绪代码。
- en: While there are ways to wrangle Jupyter Notebooks into creating production-ready
    code, I find that it’s just easier to use it for the early stages of data exploration
    and analysis, and then developing the production-level code in a proper IDE.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有方法将 Jupyter Notebooks 用于创建生产就绪代码，但我发现最好还是在数据探索和分析的早期阶段使用它，然后在适当的 IDE 中开发生产级代码。
- en: IDEs come with simple tools that help keep your code clean, such as code linting,
    auto-formatting, syntax highlighting, lookup functionality, and error catching.
    Furthermore, there are tons of extensions for IDEs that can help save you time
    while writing code.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: IDE 提供了简单的工具来保持代码清晰，如代码检查、自动格式化、语法高亮、查找功能和错误捕获。此外，还有大量的 IDE 扩展可以帮助你在编写代码时节省时间。
- en: 'Some IDEs you can check out include:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 一些你可以查看的 IDE 包括：
- en: '[Visual Studio Code](https://code.visualstudio.com/) (my personal favorite)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Visual Studio Code](https://code.visualstudio.com/)（我个人的最爱）'
- en: '[PyCharm](https://www.jetbrains.com/pycharm/)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyCharm](https://www.jetbrains.com/pycharm/)'
- en: '[Atom](https://ide.atom.io/)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Atom](https://ide.atom.io/)'
- en: '[Spyder](https://www.spyder-ide.org/)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Spyder](https://www.spyder-ide.org/)'
- en: Keep your code DRY.
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 保持代码的 DRY（不要重复自己）。
- en: DRY (Don’t Repeat Yourself) is a software engineering best practice that aims
    to keep your code clean, concise, and to the point.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: DRY（不要重复自己）是一个软件工程最佳实践，旨在保持代码清晰、简洁和直接。
- en: The goal is to not repeat any code. What this means, is that if you’re noticing
    that you’re writing the same lines of code over and over, you need to turn that
    code into a function that you only write once. This function can then be called
    multiple times.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是不要重复任何代码。这意味着，如果你发现自己重复编写相同的代码行，你需要将这些代码转换为一个只编写一次的函数。然后可以多次调用这个函数。
- en: 'If you’re having trouble keeping your code DRY, just use [my favorite rule](https://codeburst.io/clean-code-functions-475fe755c4f1):'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在保持代码干净方面遇到困难，只需使用 [我最喜欢的规则](https://codeburst.io/clean-code-functions-475fe755c4f1)：
- en: If this is the first time, code it.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果这是第一次，编写代码。
- en: If this is the second time, copy it.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果这是第二次，复制它。
- en: If this is the third time, make it a function or a class.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果这是第三次，将其做成一个函数或类。
- en: Write unit tests.
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编写单元测试。
- en: '[Unit testing](https://www.guru99.com/unit-testing-guide.html) is a type of
    software testing that involves testing individual components in the code. Unit
    tests are written to ensure that each piece of code performs as expected. The
    tests are written so that a small section of code executing a particular functionality
    is tested to ensure that it is completing its job accurately. The “units” that
    are tested could be individual functions, procedures, or entire objects.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '[单元测试](https://www.guru99.com/unit-testing-guide.html) 是一种软件测试类型，涉及测试代码中的各个组件。单元测试是为了确保每一段代码按预期执行。这些测试会检查执行特定功能的小段代码，以确保它准确完成了其工作。被测试的“单元”可以是单独的函数、过程或整个对象。'
- en: A great example of unit testing would be to test how a function responds upon
    receiving different argument types. The results of this test would ensure that
    you’ve planned for every eventuality and that the function won’t throw any un-explained
    errors later on.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 单元测试的一个很好的例子是测试一个函数在接收到不同参数类型时的响应。这个测试的结果将确保你已考虑到每种可能性，并且函数不会在之后抛出任何无法解释的错误。
- en: 'Check out this article by Microsoft on how to write unit tests:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 查看微软关于如何编写单元测试的这篇文章：
- en: '[**Best practices for writing unit tests - .NET**'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '[**编写单元测试的最佳实践 - .NET**](https://docs.microsoft.com/en-us/dotnet/core/testing/unit-testing-best-practices)'
- en: There are numerous benefits to writing unit tests; they help with regression,
    provide documentation, and facilitate…](https://docs.microsoft.com/en-us/dotnet/core/testing/unit-testing-best-practices)
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 编写单元测试有许多好处；它们有助于回归测试，提供文档，并促进…
- en: While this article only describes how to write unit tests in C#, the lessons
    and examples apply to any language.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这篇文章仅描述了如何在 C# 中编写单元测试，但所学的课程和示例适用于任何语言。
- en: Don’t become obsessed with one-liner solutions.
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 不要过于执着于一行解决方案。
- en: One-liner solutions are great if you want to impress your friends or if you
    want to write a viral article on Medium. Who doesn’t want to trade stocks using
    one line of code?
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 一行代码的解决方案很棒，如果你想给朋友留下深刻印象或想在 Medium 上写一篇病毒式文章。谁不想用一行代码交易股票呢？
- en: While it’s impressive to create a solution using one line of code, you’re also
    opening yourself up to a world of hurt when it comes to debugging and refactoring
    your code.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然使用一行代码创建解决方案令人印象深刻，但在调试和重构代码时，你也在为自己带来麻烦。
- en: Instead, try to keep it to one or two function calls per line, and make sure
    your logic is easily understandable to anyone reading your code. If you can’t
    explain what a line of code is doing in simple terms, you’ve probably made that
    one line too complicated.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，尝试每行保持一到两个函数调用，并确保你的逻辑对任何阅读你代码的人都易于理解。如果你不能用简单的术语解释一行代码在做什么，那可能是这行代码太复杂了。
- en: It must be said that the number of lines of code that a developer writes is
    not a good indication of their ability or prowess — don’t listen to anyone who
    tells you otherwise.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 必须指出的是，开发人员编写的代码行数并不能很好地指示他们的能力或技术水平——不要听信那些告诉你不同意见的人。
- en: Final thoughts.
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最后的思考。
- en: This article highlights the most important best practices that data scientists
    can implement to make their code production-ready.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 本文强调了数据科学家可以实施的最重要的最佳实践，以使他们的代码准备好投入生产。
- en: Your code is your responsibility, so it makes sense to take some time to ensure
    that you’re writing code that is efficient, simple, and easily understandable.
    While there are tons of other tips and tricks for writing clean code, the ones
    listed above are the most simple ones that you can apply starting today.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 你的代码是你的责任，因此花时间确保你编写的代码高效、简单且易于理解是有意义的。虽然还有很多其他编写干净代码的技巧和窍门，但上述列出的是你今天就可以应用的最简单的技巧。
- en: '**Bio: [Madison Hunter](https://madison13.medium.com/)** is a Geoscience BSc
    undergrad student, Software Dev graduate. Madison produces ramblings about data
    science, the environment, and STEM.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：[Madison Hunter](https://madison13.medium.com/)** 是地球科学本科生，软件开发毕业生。Madison
    撰写关于数据科学、环境和 STEM 的随笔。'
- en: '[Original](https://towardsdatascience.com/software-engineering-best-practices-for-data-scientists-4c199ede6e03).
    Reposted with permission.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/software-engineering-best-practices-for-data-scientists-4c199ede6e03)。已获许可转载。'
- en: '**Related:**'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关内容：**'
- en: '[Software Engineering Tips and Best Practices for Data Science](/2020/10/software-engineering-best-practices-data-science.html)'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学的软件工程技巧和最佳实践](/2020/10/software-engineering-best-practices-data-science.html)'
- en: '[15 Habits I Learned from Highly Effective Data Scientists](/2021/03/15-habits-learned-from-highly-effective-data-scientists.html)'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[我从高效数据科学家那里学到的15个习惯](/2021/03/15-habits-learned-from-highly-effective-data-scientists.html)'
- en: '[Software engineering fundamentals for Data Scientists](/2020/06/software-engineering-fundamentals-data-scientists.html)'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家的软件工程基础](/2020/06/software-engineering-fundamentals-data-scientists.html)'
- en: More On This Topic
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多主题
- en: '[Software Developer vs Software Engineer](https://www.kdnuggets.com/2022/05/software-developer-software-engineer.html)'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[软件开发者与软件工程师](https://www.kdnuggets.com/2022/05/software-developer-software-engineer.html)'
- en: '[Integrating ChatGPT Into Data Science Workflows: Tips and Best Practices](https://www.kdnuggets.com/2023/05/integrating-chatgpt-data-science-workflows-tips-best-practices.html)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将 ChatGPT 集成到数据科学工作流中：技巧和最佳实践](https://www.kdnuggets.com/2023/05/integrating-chatgpt-data-science-workflows-tips-best-practices.html)'
- en: '[Data Warehousing and ETL Best Practices](https://www.kdnuggets.com/2023/02/data-warehousing-etl-best-practices.html)'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据仓库和 ETL 最佳实践](https://www.kdnuggets.com/2023/02/data-warehousing-etl-best-practices.html)'
- en: '[11 Best Practices of Cloud and Data Migration to AWS Cloud](https://www.kdnuggets.com/2023/04/11-best-practices-cloud-data-migration-aws-cloud.html)'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[云和数据迁移到 AWS 云的11个最佳实践](https://www.kdnuggets.com/2023/04/11-best-practices-cloud-data-migration-aws-cloud.html)'
- en: '[Data Visualization Best Practices & Resources for Effective Communication](https://www.kdnuggets.com/2023/04/data-visualization-best-practices-resources-effective-communication.html)'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据可视化最佳实践与有效沟通的资源](https://www.kdnuggets.com/2023/04/data-visualization-best-practices-resources-effective-communication.html)'
- en: '[5 Best Practices for Data Science Team Collaboration](https://www.kdnuggets.com/2023/06/5-best-practices-data-science-team-collaboration.html)'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学团队协作的5个最佳实践](https://www.kdnuggets.com/2023/06/5-best-practices-data-science-team-collaboration.html)'
