- en: Time Series Data with NumPy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 NumPy 的时间序列数据
- en: 原文：[https://www.kdnuggets.com/time-series-data-with-numpy](https://www.kdnuggets.com/time-series-data-with-numpy)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/time-series-data-with-numpy](https://www.kdnuggets.com/time-series-data-with-numpy)
- en: '![Time Series Data with NumPy](../Images/a1f2c813547eec9b12d35f6be3515e78.png)[Image
    by creativeart on Freepik](https://www.freepik.com/free-photo/studio-shot-transparent-baseball-cap-falling-reflection_1078052.htm#fromView=search&page=1&position=30&uuid=fbf287ce-3030-4564-b4c5-c7e5dd7a03bf)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![NumPy 时间序列数据](../Images/a1f2c813547eec9b12d35f6be3515e78.png)[图片由 creativeart
    提供于 Freepik](https://www.freepik.com/free-photo/studio-shot-transparent-baseball-cap-falling-reflection_1078052.htm#fromView=search&page=1&position=30&uuid=fbf287ce-3030-4564-b4c5-c7e5dd7a03bf)'
- en: Time series data is unique because they depend on each other sequentially. This
    is because the data is collected over time in consistent intervals, for example,
    yearly, daily, or even hourly.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列数据的独特之处在于它们彼此之间是顺序相关的。这是因为数据是按一致的时间间隔收集的，例如每年、每天甚至每小时。
- en: '* * *'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT 事务'
- en: '* * *'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Time series data are important in many analyses because can represent patterns
    for business questions like data forecasting, anomaly detection, trend analysis,
    and more.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列数据在许多分析中都很重要，因为它们可以代表业务问题的模式，如数据预测、异常检测、趋势分析等。
- en: In Python, you can try to analyze the time series dataset with NumPy. NumPy
    is a powerful package for numerical and statistical calculation, but it can be
    extended into time series data.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中，你可以尝试使用 NumPy 分析时间序列数据集。NumPy 是一个强大的数值和统计计算包，但它也可以扩展到时间序列数据。
- en: How can we do that? Let’s try it out.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何做到这一点？让我们尝试一下。
- en: Time Series data with NumPy
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 NumPy 的时间序列数据
- en: First, we need to install NumPy in our Python environment. You can do that with
    the following code if you haven’t done that.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要在 Python 环境中安装 NumPy。如果你还没有安装，可以使用以下代码进行安装。
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Next, let’s try to initiate time series data with NumPy. As I have mentioned,
    time series data have sequential and temporal characteristics, so we would try
    to create them with NumPy.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们尝试用 NumPy 初始化时间序列数据。如我所提到的，时间序列数据具有顺序和时间特性，因此我们将尝试用 NumPy 创建这些数据。
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: As you can see in the code above, we set the data time series in NumPy with
    the `dtype` parameter. Without them, the data would be considered string data,
    but now it is considered time series data.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如上面的代码所示，我们用 `dtype` 参数在 NumPy 中设置数据时间序列。如果没有这些参数，数据会被视为字符串数据，但现在它被视为时间序列数据。
- en: We can create the NumPy time series data without writing them individually.
    We can do that using the certain method from NumPy.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在不逐个编写的情况下创建 NumPy 时间序列数据。我们可以使用 NumPy 的特定方法来完成这项工作。
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: We create monthly data from 2023 to 2024, with each month's data as the values.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了 2023 到 2024 年的月度数据，每个月的数据作为值。
- en: After that, we can try to analyze the data based on the NumPy datetime series.
    For example, we can create random data with as much as our date range.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们可以尝试基于 NumPy 日期时间系列分析数据。例如，我们可以创建与日期范围相匹配的随机数据。
- en: '[PRE5]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Using the random method in NumPy, we can generate random values to simulate
    time series analysis.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 NumPy 的随机方法，我们可以生成随机值来模拟时间序列分析。
- en: For example, we can try to perform a moving average analysis with NumPy using
    the following code.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以尝试使用以下代码进行移动平均分析。
- en: '[PRE7]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Moving average is a simple time series analysis in which we calculate the mean
    of the subset number of the series. In the example above, we use window 12 as
    the subset. This means we take the first 12 of the series as the subset and take
    their means. Then, the subset moves by one, and we take the next mean subset.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 移动平均是一个简单的时间序列分析方法，其中我们计算系列子集的均值。在上述示例中，我们使用窗口12作为子集。这意味着我们取系列的前12个作为子集并计算它们的均值。然后，子集滑动一个位置，我们计算下一个均值子集。
- en: 'So, the first subset is this subset where we takes the mean:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 首先的子集是我们取均值的这个子集：
- en: '[PRE9]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The next subset is where we slide the window by one:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个子集是我们将窗口滑动一个位置的地方：
- en: '[PRE10]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: That’s what the `np.convolve` does as the method would move and sum the series
    subset as much as the `np.ones` array number. We use the valid option only to
    return the amount that can be calculated without any padding.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是`np.convolve`的作用，因为该方法会根据`np.ones`数组的数量移动并求和系列子集。我们仅使用有效选项来返回可以在没有任何填充的情况下计算的数量。
- en: Nevertheless, moving averages are often used to analyze time series data to
    identify the underlying pattern and as signals such as buy/sell in the financial
    field.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，移动平均通常用于分析时间序列数据，以识别潜在模式和信号，例如金融领域的买入/卖出信号。
- en: Speaking of patterns, we can simulate the trend data in time series with NumPy.
    The trend is a long-term and persistent directional movement in the data. Basically,
    it is the general direction of where the time series data would be.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 说到模式，我们可以用NumPy模拟时间序列中的趋势。趋势是数据中的长期且持续的方向性运动。基本上，它是时间序列数据的总体方向。
- en: '[PRE11]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: What happens above is we fit a linear straight line to our data above. From
    the result, we get the slope of the line (first number) and the intercept (second
    number). The slope represents how much data changes per step or temporal values
    on average, while the intercept is the data direction (positive is upward and
    negative is downward).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 上述情况发生的是我们为数据拟合了一条线性直线。从结果中，我们得到了直线的斜率（第一个数字）和截距（第二个数字）。斜率表示数据在每一步或时间值上的平均变化量，而截距则是数据的方向（正值表示上升，负值表示下降）。
- en: We can also have detrended data, which are the components after we remove the
    trend from the time series. This data type is often used to detect fluctuation
    patterns in the trend data and anomalies.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以有去趋势的数据，即在从时间序列中移除趋势后的组件。这种数据类型通常用于检测趋势数据中的波动模式和异常。
- en: '[PRE13]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The data without their trend are shown in the output above. In a real-world
    application, we would analyze them to see which one deviates too much from the
    common pattern.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 上述输出中显示了去除趋势后的数据。在实际应用中，我们会分析这些数据，以查看哪个数据点偏离了常见模式。
- en: We can also try to analyze seasonality from the time series data we have. Seasonality
    is the regular and predictable patterns that occur at specific temporal intervals,
    such as every 3 months, every 6 months, and others. Seasonality is usually affected
    by external factors such as holidays, weather, events, and many others.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以尝试从我们拥有的时间序列数据中分析季节性。季节性是指在特定时间间隔内发生的规律性和可预测模式，例如每3个月、每6个月等。季节性通常受假期、天气、事件等外部因素的影响。
- en: '[PRE15]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: In the code above, we calculate the average for each month and then extend the
    data to match its length. In the end, we get the average for each month in the
    two-year interval, and we can try to analyze the data to see if there is seasonality
    worth mentioning.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，我们计算了每个月的平均值，然后将数据扩展以匹配其长度。最终，我们得到两年间每个月的平均值，并尝试分析数据以查看是否有值得提及的季节性。
- en: That’s all the basic method we can do with NumPy for time series data and analysis.
    There are many advanced methods, but the above is the basic we can do.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们可以用NumPy对时间序列数据和分析所做的基本方法。虽然有很多高级方法，但上述方法是基本的。
- en: Conclusion
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: The time series data is a unique data set as it represents in a sequential manner
    and has temporal properties. Using NumPy, we can set the time series data while
    performing basic time series analysis such as moving averages, trend analysis,
    and seasonality analysis. data while performing basic time series analysis such
    as moving averages, trend analysis, and seasonality analysis.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列数据是一个独特的数据集，因为它以顺序方式表示，并且具有时间特性。使用NumPy，我们可以设置时间序列数据，同时进行基本的时间序列分析，如移动平均、趋势分析和季节性分析。
- en: '**[](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**[Cornellius Yudha
    Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**** is a data science
    assistant manager and data writer. While working full-time at Allianz Indonesia,
    he loves to share Python and data tips via social media and writing media. Cornellius
    writes on a variety of AI and machine learning topics.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Cornellius Yudha Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**
    是一位数据科学助理经理和数据撰稿人。在全职工作于 Allianz Indonesia 的同时，他喜欢通过社交媒体和写作媒体分享 Python 和数据技巧。Cornellius
    撰写了各种人工智能和机器学习主题。'
- en: More On This Topic
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[KDnuggets News, June 29: 20 Basic Linux Commands for Data Science…](https://www.kdnuggets.com/2022/n26.html)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻，6月29日：20个基本的 Linux 命令用于数据科学……](https://www.kdnuggets.com/2022/n26.html)'
- en: '[Market Data and News: A Time Series Analysis](https://www.kdnuggets.com/2022/06/market-data-news-time-series-analysis.html)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[市场数据与新闻：时间序列分析](https://www.kdnuggets.com/2022/06/market-data-news-time-series-analysis.html)'
- en: '[A Faster Way to Prepare Time-Series Data with the AI & Analytics Engine](https://www.kdnuggets.com/2021/12/piexchange-faster-way-prepare-timeseries-data-ai-analytics-engine.html)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[一种更快速的方法准备时间序列数据与 AI 和分析引擎](https://www.kdnuggets.com/2021/12/piexchange-faster-way-prepare-timeseries-data-ai-analytics-engine.html)'
- en: '[Generate Synthetic Time-series Data with Open-source Tools](https://www.kdnuggets.com/2022/06/generate-synthetic-timeseries-data-opensource-tools.html)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用开源工具生成合成时间序列数据](https://www.kdnuggets.com/2022/06/generate-synthetic-timeseries-data-opensource-tools.html)'
- en: '[How to Identify Missing Data in Time-Series Datasets](https://www.kdnuggets.com/how-to-identify-missing-data-in-timeseries-datasets)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何识别时间序列数据集中的缺失数据](https://www.kdnuggets.com/how-to-identify-missing-data-in-timeseries-datasets)'
- en: '[Building a Tractable, Feature Engineering Pipeline for Multivariate…](https://www.kdnuggets.com/2022/03/building-tractable-feature-engineering-pipeline-multivariate-time-series.html)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[构建一个可处理的多变量特征工程管道……](https://www.kdnuggets.com/2022/03/building-tractable-feature-engineering-pipeline-multivariate-time-series.html)'
