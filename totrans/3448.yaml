- en: 5 Deep Learning Projects You Can No Longer Overlook
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2016/07/five-deep-learning-projects-cant-overlook.html](https://www.kdnuggets.com/2016/07/five-deep-learning-projects-cant-overlook.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Deep learning libraries and frameworks](/2016/04/top-15-frameworks-machine-learning-experts.html)
    such as Theano, Keras, Caffe, and TensorFlow have gained enormous recent popularity.
    In fact, Google''s TensorFlow is the most starred machine learning repository
    on Github. By a lot. TensorFlow, despite being in the wild for little more than
    6 months, has captured such a formidable market share that one could argue that
    it has become the default deep learning library by a large swath of seasoned neural
    network veterans and newcomers alike.'
  prefs: []
  type: TYPE_NORMAL
- en: It's not the only library to consider, obviously. There are many others, a few
    of which are mentioned above. But there a many more smaller projects, ranging
    from complete libraries implemented form scratch, to high-level building blocks
    that sit atop established deep learning projects to fit particular niches. Below
    you can find a mix of these project types, noted for a variety of reasons as encountered
    over time spent online.
  prefs: []
  type: TYPE_NORMAL
- en: '![Deep learning](../Images/ff2322252962953f8efde07f883ae5af.png)'
  prefs: []
  type: TYPE_IMG
- en: Maybe you find something that fills a need for you in this list of 5 deep learning
    projects you should not overlook any longer. Items are in no particular order,
    but I like to number things, and so number things I shall.
  prefs: []
  type: TYPE_NORMAL
- en: '**1\. [Leaf](https://github.com/autumnai/leaf)**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Leaf is a neural network framework, described in its Github repo README as:'
  prefs: []
  type: TYPE_NORMAL
- en: Open Machine Intelligence Framework for Hackers. (GPU/CPU)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Somewhat* interestingly, Leaf, which is quite a new project but has already
    gathered over 4000 repo stars, is written in [Rust](https://www.rust-lang.org/).
    Rust, itself, is only about 6 years old, with development sponsored by Mozilla.
    For those unfamiliar with Rust, it is a systems language with similarities to
    C and C++, self-described as:'
  prefs: []
  type: TYPE_NORMAL
- en: Rust is a systems programming language that runs blazingly fast, prevents segfaults,
    and guarantees thread safety.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[![Leaf](../Images/6e3211f9886a3c2be5b335a6c4b1c17c.png)](https://camo.githubusercontent.com/b417dd49cb71d31dfa1d02c9e7eed8ab2a24d5db/687474703a2f2f617574756d6e61692e636f6d2f696d616765732f617574756d6e5f6c6561665f62656e63686d61726b735f616c65786e65742e706e67)'
  prefs: []
  type: TYPE_NORMAL
- en: A book, [Leaf Machine Learning for Hackers](http://autumnai.com/leaf/book/),
    is freely-available online, and is likely a good first stop for those looking
    to give Leaf a try. I would guess that Leaf won't gain a lot of converts from
    outside of the Rust ecosystem, even given the claims and quantitative support
    that Leaf is faster than most other similar frameworks out there (see the above
    image). However, the number of Rust users continue to grow, and no doubt some
    of them will be interested in building neural nets. It's good to know they have
    a quality native framework to employ in this pursuit.
  prefs: []
  type: TYPE_NORMAL
- en: '**2\. [tiny-cnn](https://github.com/nyanp/tiny-cnn)**'
  prefs: []
  type: TYPE_NORMAL
- en: 'From tiny-cnn''s Github repo:'
  prefs: []
  type: TYPE_NORMAL
- en: tiny-cnn is a C++11 implementation of deep learning. It is suitable for deep
    learning on limited computational resource, embedded systems and IoT devices.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: tiny-cnn is relatively quick without a GPU; it boasts a 98.8% accuracy on MNIST
    in 13 minutes of CPU training. It's also simple to use. Since it's header-only,
    you simply include the tiny_cnn.h header and write your C++ code, with nothing
    else to install. tiny-cnn supports a whole host of network architectures, activation
    functions, and optimization algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here''s a quick example of constructing a Multi-layer Perceptron:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Check out the [documentation](https://github.com/nyanp/tiny-cnn/blob/master/doc/readme.md),
    as well as [this project](https://github.com/zhangqianhui/CnnForAndroid) using
    tiny-cnn to implement a convolutional neural net implementation in Android. If
    you are set on implementing neural networks in C++, this is worth checking out.
  prefs: []
  type: TYPE_NORMAL
- en: '**3\. [Layered](https://github.com/danijar/layered)**'
  prefs: []
  type: TYPE_NORMAL
- en: Layered is authored by independent machine learning researcher Danijar Hafner,
    who recently contributed to KDnuggets the article "[Introduction to Recurrent
    Networks in TensorFlow](/2016/05/intro-recurrent-networks-tensorflow.html)."
  prefs: []
  type: TYPE_NORMAL
- en: 'Layered is:'
  prefs: []
  type: TYPE_NORMAL
- en: Clean implementation of feed forward neural networks.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Hafner wrote Layered in Python 3 as a "clean and modular implementation of feed
    forward neural networks." He states that he undertook the project as a means for
    better understanding deep learning concepts himself, and recommends doing so if
    you are interested in gaining a real appreciation of how deep neural networks
    actually function.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of a simple neural network implementation in Layered:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The project currently supports identity, rectifiers, sigmoid, and softmax activation
    functions, and squared error and cross-entropy cost functions. As such, if you
    are looking to see a no-nonsense, from-scratch implementation of neural network
    functionality, Layered would be a good place to start. The fact that the project
    also works and is actively developed are a pair of reasons to do more than use
    it as a learning tool.
  prefs: []
  type: TYPE_NORMAL
- en: Hafner also has a number of tutorials on practical [deep learning with TensorFlow](https://danijar.com/),
    which I encourage you to have a look at.
  prefs: []
  type: TYPE_NORMAL
- en: '**4\. [Brain](https://github.com/harthur-org/brain.js)**'
  prefs: []
  type: TYPE_NORMAL
- en: I recently shared some [Javascript machine learning libraries](/2016/06/top-machine-learning-libraries-javascript.html)
    of relevance, a list which included 3 neural network libraries (out of 5 total).
    Brain could have made that list, but it has been added here in order to provide
    some diversity.
  prefs: []
  type: TYPE_NORMAL
- en: Brain is a neural network library written in Javascript, for use in the browser
    or with Node. The project is actively developed, having grown out of a previous,
    less mature project [of the same name](https://github.com/harthur/brain).
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of approximating the [exclusive or (XOR)](https://en.wikipedia.org/wiki/Exclusive_or)
    function with Brain:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Brain supports hidden layers, and by default uses one (unless otherwise specified).
    Training a network is easy (shown above), with options easily being set and passed
    as a hash:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Train also returns a hash with training outcomes. Networks can be serialized
    via JSON.
  prefs: []
  type: TYPE_NORMAL
- en: If you are a Javascript developer looking to implement neural networks, Brain
    may be the library you need. You may also want to check out the [above mentioned
    article](/2016/06/top-machine-learning-libraries-javascript.html), which contains
    some general purpose machine learning libraries along with a few additional neural
    networks libraries.
  prefs: []
  type: TYPE_NORMAL
- en: '**5\. [neon](https://github.com/NervanaSystems/neon)**'
  prefs: []
  type: TYPE_NORMAL
- en: Fast, scalable, easy-to-use Python based Deep Learning Framework by Nervana.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[neon is indisputably fast](https://github.com/soumith/convnet-benchmarks):
    "For fast iteration and model exploration, neon has the fastest performance among
    deep learning libraries." This is definitely the reason to give this library a
    look, if you are currently unfamiliar with it.'
  prefs: []
  type: TYPE_NORMAL
- en: '![neon](../Images/c1354a4338eb7d98cda5a0dc08de96a8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Developed by [Nervana Systems](https://www.nervanasys.com/), neon supports
    convolution, RNN, LSTM, GRUs, and more. neon has a lot more going for it as well:
    it has a great [workflow overview](http://neon.nervanasys.com/docs/latest/overview.html),
    its [documentation](http://neon.nervanasys.com/docs/latest/api.html) is thorough,
    and it has a number of [useful tutorials](http://neon.nervanasys.com/docs/latest/tutorials.html).'
  prefs: []
  type: TYPE_NORMAL
- en: You can also check out a number of [Jupyter notebook versions](https://github.com/NervanaSystems/meetup)
    of the tutorials from a neon Deep Learning meetup, which is nice. If speed in
    training neural networks is important to you, and you're in the Python ecosystem,
    check out neon.
  prefs: []
  type: TYPE_NORMAL
- en: '**Related**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[5 Machine Learning Projects You Can No Longer Overlook](/2016/05/five-machine-learning-projects-cant-overlook.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 More Machine Learning Projects You Can No Longer Overlook](/2016/06/five-more-machine-learning-projects-cant-overlook.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top Machine Learning Libraries for Javascript](/2016/06/top-machine-learning-libraries-javascript.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Data Science Projects That Can Help You Solve Real World Problems](https://www.kdnuggets.com/2022/11/data-science-projects-help-solve-real-world-problems.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[9 Professional Certificates That Can Take You Onto a Degree... If…](https://www.kdnuggets.com/9-professional-certificates-that-can-take-you-onto-a-degree-if-you-really-want-to)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How You Can Use Machine Learning to Automatically Label Data](https://www.kdnuggets.com/2022/02/machine-learning-automatically-label-data.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Machine Learning Algorithms You Can''t Miss](https://www.kdnuggets.com/7-machine-learning-algorithms-you-cant-miss)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Top Machine Learning Courses You Can Take in 2024](https://www.kdnuggets.com/5-top-machine-learning-courses-you-can-take-in-2024)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Learn Deep Learning by Building 15 Neural Network Projects in 2022](https://www.kdnuggets.com/2022/01/15-neural-network-projects-build-2022.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
