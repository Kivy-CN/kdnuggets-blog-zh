- en: Create and Deploy Dashboards using Voila and Saturn Cloud
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Voila 和 Saturn Cloud 创建和部署仪表板
- en: 原文：[https://www.kdnuggets.com/2021/06/create-deploy-dashboards-voila-saturn-cloud.html](https://www.kdnuggets.com/2021/06/create-deploy-dashboards-voila-saturn-cloud.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/06/create-deploy-dashboards-voila-saturn-cloud.html](https://www.kdnuggets.com/2021/06/create-deploy-dashboards-voila-saturn-cloud.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Dhrumil Patel](http://linkedin.com/in/dhrumilcse), Performance Analyst
    Intern at NVIDIA**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Dhrumil Patel](http://linkedin.com/in/dhrumilcse)，NVIDIA 性能分析师实习生**'
- en: '****Filter and Visualize Bank Transactions Data****'
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '****筛选和可视化银行交易数据****'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业轨道'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Working with and training large datasets, maintaining them all in one place,
    and deploying them to production is a challenging job. But what if I tell you
    there is a way to handle all of these with just a few clicks?
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 处理和训练大型数据集，将它们都保持在一个地方，并将其部署到生产环境中是一项具有挑战性的工作。但如果我告诉你，有一种方法可以通过几个点击来处理所有这些任务呢？
- en: Let’s understand how we can do that easily. Throughout this article we will
    create a dashboard (using Python and Voila) which runs a machine learning model
    to remove fraudulent transactions and displays remaining data with visualization,
    and publish it to Saturn Cloud’s production server for easier access. Here is
    an outline of the article, feel free to jump a section or two if you are aware
    of the details.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们了解一下如何轻松做到这一点。在本文中，我们将创建一个仪表板（使用 Python 和 Voila），它运行一个机器学习模型以删除欺诈交易，并通过可视化展示剩余数据，然后将其发布到
    Saturn Cloud 的生产服务器以便更轻松访问。以下是文章的大纲，如果你已经了解细节，可以随意跳过一些部分。
- en: What is [Saturn Cloud](https://www.saturncloud.io/s/freehosted/?utm_source=Dhrumil%3A%20Deploy%20Dashboards%20using%20Voila&utm_medium=try%20saturn)?
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是 [Saturn Cloud](https://www.saturncloud.io/s/freehosted/?utm_source=Dhrumil%3A%20Deploy%20Dashboards%20using%20Voila&utm_medium=try%20saturn)?
- en: Create the Dashboard ( With Data Filtering and Visualization)
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建仪表板（带数据筛选和可视化）
- en: Deploy Dashboard (Local and Production)
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署仪表板（本地和生产）
- en: End-notes
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 结束注释
- en: '**What is Saturn Cloud**'
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**什么是 Saturn Cloud**'
- en: 'Saturn cloud is a machine learning platform that automates DevOps and ML infrastructure.
    On top of that, they use jupyter and dash to scale python for enormous amounts
    of data. Here are a few more features Saturn Cloud offers:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Saturn Cloud 是一个自动化 DevOps 和 ML 基础设施的机器学习平台。在此基础上，他们使用 jupyter 和 dash 来扩展 Python
    以处理海量数据。以下是 Saturn Cloud 提供的一些其他功能：
- en: You can use [Dask](https://www.saturncloud.io/s/aboutdask/?utm_source=Dhrumil%3A%20Deploy%20Dashboards%20using%20Voila&utm_medium=dask)
    to run your code in parallel over as many machines as you need
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以使用 [Dask](https://www.saturncloud.io/s/aboutdask/?utm_source=Dhrumil%3A%20Deploy%20Dashboards%20using%20Voila&utm_medium=dask)
    在需要的机器上并行运行你的代码。
- en: You can run your code on GPU without any hassle
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以毫不费力地在 GPU 上运行你的代码。
- en: You can deploy your work without relying on a separate team
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以在不依赖单独团队的情况下部署你的工作。
- en: It is built entirely on open source tools
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它完全基于开源工具构建。
- en: It can also run in your AWS account. Also, Saturn Cloud connects to your existing
    data, you don’t have to move it. Add the required credentials and you’re good
    to go.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它也可以在你的 AWS 账户中运行。此外，Saturn Cloud 连接到你现有的数据，你不需要移动它。添加所需的凭证即可开始使用。
- en: You can connect to Dask from Google Colab. You could also connect to any GCP
    service that can host Python.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以从 Google Colab 连接到 Dask。你也可以连接到任何可以托管 Python 的 GCP 服务。
- en: Isn’t that cool? Let’s learn how we can create a dashboard and publish it to
    production using Saturn in a few easy steps.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是很酷吗？让我们学习如何创建一个仪表板，并使用 Saturn 通过几个简单的步骤将其发布到生产环境中。
- en: '**Creating a Dashboard**'
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**创建仪表板**'
- en: '****Voila 101****'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '****Voila 101****'
- en: 'Before deploying the dashboard, first, let us create a basic dashboard using
    Python and [Voila](https://voila.readthedocs.io/en/stable/using.html). There are
    three major components to creating dashboards using Voila, which are:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在部署仪表板之前，我们首先用Python和[Voila](https://voila.readthedocs.io/en/stable/using.html)创建一个基础仪表板。使用Voila创建仪表板主要有三个组件：
- en: Define widgets (Button click or search field for interaction)
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义小部件（按钮点击或搜索字段用于交互）
- en: A logic (event handler) for your for the interactive field we created in step
    1(either class based or function based)
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 针对第1步中创建的交互字段的逻辑（事件处理程序）（可以是基于类的或基于函数的）
- en: An Output widget (where your result would show up)
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个输出小部件（你的结果将显示在这里）
- en: Taking [fake transactions data](https://github.com/Dhrumilcse/fradulent-transaction/tree/main/data),
    let’s build a dashboard which gives you filtered data after removing fraudulent
    transactions and gives a visual of how diverse (with respect to currencies) the
    transactions are. Let’s presume that you have a machine learning model that identifies
    fraudulent transactions. For the simplicity of this article we will simply use
    an if statement, but don’t worry, I’ll show you how to import your own model,
    if you have one.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 以[虚假交易数据](https://github.com/Dhrumilcse/fradulent-transaction/tree/main/data)为例，让我们构建一个仪表板，该仪表板在去除虚假交易后提供筛选的数据，并显示交易的多样性（按货币分类）。假设你有一个可以识别虚假交易的机器学习模型。为了简化本文，我们将仅使用if语句，但不用担心，我会向你展示如何导入你自己的模型（如果你有的话）。
- en: '****A Basic Dashboard****'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '****一个基础仪表板****'
- en: First things first, you want to define a widget. For our use-case, we want users
    to upload data and give them filtered data and a chart after removing fraudulent
    transactions. We will start by defining the upload button.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要定义一个小部件。对于我们的用例，我们希望用户上传数据，并在去除虚假交易后提供筛选的数据和图表。我们将从定义上传按钮开始。
- en: '![Image](../Images/19f777c4060441a3b64c55bcd45ead58.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/19f777c4060441a3b64c55bcd45ead58.png)'
- en: Here we have two buttons —  One for uploading file (upload_file) and another
    (upload_btn) to let our event handler (upload_btn_eventhandler) to know when to
    perform action. I know, you must be wondering but where is our event handler?
    We will define it next. But before that, input_widgets just combine both buttons
    and with help of our output widget (upload_btn_output) we will display the buttons.
    Let’s write an event handler first.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有两个按钮——一个用于上传文件（upload_file），另一个（upload_btn）用于让我们的事件处理程序（upload_btn_eventhandler）知道何时执行操作。我知道，你一定在想，我们的事件处理程序在哪里？我们将会在下一步定义它。但在此之前，input_widgets只是将两个按钮组合起来，并利用我们的输出小部件（upload_btn_output）来显示这些按钮。首先，让我们编写一个事件处理程序。
- en: '![Image](../Images/6e7538c21a32528d976edd818aa67416.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/6e7538c21a32528d976edd818aa67416.png)'
- en: As soon as we hit the upload button, our event handler will take the file and
    convert it to a pandas dataframe to work on data easily. I split the file name
    by fullstop to find the extension of the file and then store the data if it is
    Excel or CSV. Now the final part, output widget. If you remember, we already wrote
    out an output widget to be named upload_btn_output, so we will do just that.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们点击上传按钮，我们的事件处理程序将获取文件并将其转换为pandas数据框，以便轻松处理数据。我通过句点拆分文件名以找到文件的扩展名，然后存储数据（如果是Excel或CSV）。现在最后一步，输出小部件。如果你还记得，我们已经定义了一个名为upload_btn_output的输出小部件，所以我们就这样做。
- en: '![Image](../Images/e5ac6929d289c10cd4c9980fe524c131.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/e5ac6929d289c10cd4c9980fe524c131.png)'
- en: Now if you haven’t already, you have to install voila if you want this to run
    locally, for which you can find instructions [here](https://voila.readthedocs.io/en/stable/using.html).
    But I am going to show you an easy way to do it using Saturn Cloud. Create an
    account and login, on their dashboard, you will see “deploy dashboards”, click
    that, and start the jupyter lab. Now, upload the notebook that we just created
    to the jupyter lab on saturn cloud. You can find the entire jupyter notebook on
    my github [here](https://github.com/Dhrumilcse/fradulent-transaction). Also, you
    can choose from other accelerated data science libraries and pipelines that Saturn
    Cloud has to offer.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有安装voila，你需要先安装它，才能在本地运行。你可以在[这里](https://voila.readthedocs.io/en/stable/using.html)找到安装说明。但是我将展示一个使用Saturn
    Cloud的简单方法。创建一个账户并登录，在他们的仪表板上，你会看到“deploy dashboards”选项，点击它，然后启动jupyter lab。接下来，将我们刚刚创建的notebook上传到Saturn
    Cloud上的jupyter lab。你可以在我的github上找到整个jupyter notebook，[这里](https://github.com/Dhrumilcse/fradulent-transaction)。另外，你还可以选择Saturn
    Cloud提供的其他加速数据科学库和管道。
- en: '![Image](../Images/c47f263cfbeb3c9898197d66b41612a8.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/c47f263cfbeb3c9898197d66b41612a8.png)'
- en: Done? Perfect. Now copy the URL, paste into the new tab, and replace …./your-username/dashboard/….
    with /your-username/dashboard/voila and then navigate to projects>examples>dashboard.ipynb
    and run it. You should be able to see our upload buttons.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 完成了吗？很好。现在复制网址，粘贴到新标签页中，将 …./your-username/dashboard/…. 替换为 /your-username/dashboard/voila，然后导航到
    projects>examples>dashboard.ipynb 并运行它。你应该能够看到我们的上传按钮。
- en: If you hit any bumps, or want to learn more about creating a dashboard with
    Voila on Saturn Cloud, refer to this [guide](https://www.saturncloud.io/docs/examples/dashboards/voila_dash/).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果遇到任何问题，或者想了解更多关于如何在 Saturn Cloud 上使用 Voila 创建仪表板的内容，请参考这个 [指南](https://www.saturncloud.io/docs/examples/dashboards/voila_dash/)。
- en: '![Image](../Images/839ab729adeaeb4de9d9070bbbe63f28.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/839ab729adeaeb4de9d9070bbbe63f28.png)'
- en: '****Fraudulent Transactions****'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '****欺诈交易****'
- en: Now we don’t have any filtered data just yet, we are just uploading a file and
    storing its content. Let’s write some more code to handle fraudulent transactions.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们还没有任何筛选的数据，我们只是上传了一个文件并存储了它的内容。让我们写更多的代码来处理欺诈交易。
- en: '![Image](../Images/37002e3ab75a015e6c17a05793236ada.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/37002e3ab75a015e6c17a05793236ada.png)'
- en: I have generated a csv from fake data which you can find here, feel free to
    use the same. Here, I’ll just remove the values considering them fraudulent if
    they exceed a certain threshold. Let’s say all transactions with an amount > 1000
    are fraud. Simply we can achieve that by writing the following in our upload_btn_eventhandler.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我生成了一个虚假数据的 csv 文件，你可以在这里找到它，随意使用。在这里，我只会删除那些如果超过某个阈值的值，考虑它们为欺诈交易。假设所有金额 > 1000
    的交易都是欺诈交易。我们可以通过在 `upload_btn_eventhandler` 中编写以下内容来简单实现。
- en: If you have your data on a cloud such as AWS, that’s no worry at all. All you
    need to do is acquire your credentials and you are good to go. One way you can
    do that easily is by using **s3fs** library which is a Python library for accessing
    your AWS file system. You can read more about that in the [documentation](https://s3fs.readthedocs.io/en/latest/)
    here.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的数据在云上，例如 AWS，那就完全没有问题。你只需获取你的凭证，就可以开始使用了。你可以通过使用 **s3fs** 库来轻松实现这一点，它是一个用于访问
    AWS 文件系统的 Python 库。你可以在 [文档](https://s3fs.readthedocs.io/en/latest/) 中了解更多内容。
- en: '****Using Pre-trained model (extra)****'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '****使用预训练模型（额外内容）****'
- en: If you have a pre-trained model that you want to use, you can import it like
    I did below, but if you just want to know how things work around voila and are
    not interested in importing machine learning models, you can skip the next code.
    We are basically using joblib to load count vectorizer and model and then predicting
    the values.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个预训练的模型想要使用，你可以像我下面所做的那样导入它，但如果你只是想了解 Voila 的工作原理而对导入机器学习模型不感兴趣，你可以跳过下一段代码。我们基本上使用
    `joblib` 来加载计数向量器和模型，然后进行预测。
- en: '![Image](../Images/caaa442c6517a07ed32ef50ed432aba2.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/caaa442c6517a07ed32ef50ed432aba2.png)'
- en: '**Filter Data**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**筛选数据**'
- en: 'Awesome, now we have clean data without fraudulent transactions. How about
    we add a little functionality to filter transactions based on the currency? We
    can achieve that by simply creating another logic just like we created for the
    upload button. Instead of taking data from the user, now we just pass the clean
    dataframe that we created. Let’s take a look at the code:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了，现在我们有了没有欺诈交易的干净数据。我们来添加一点功能，通过货币来筛选交易怎么样？我们可以通过创建类似于上传按钮的逻辑来实现这一点。不同的是，我们现在不再从用户处获取数据，而是传递我们创建的干净数据帧。让我们来看一下代码：
- en: '![Image](../Images/45dd2e7bb33a83f44dccf50f4a4c4121.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/45dd2e7bb33a83f44dccf50f4a4c4121.png)'
- en: We will follow the same pattern here as well. First, we create a dropdown for
    all unique values in the currency column. Then we create an event handler which
    will call another function common_filtering which will basically match the currency
    and give us only those values where our currency matches, in other words, filtering.
    And we then display it to an output widget that we just created. If you are using
    the same data file I added, it should look something like this.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里也会遵循相同的模式。首先，我们为货币列中的所有唯一值创建一个下拉框。然后我们创建一个事件处理程序，该程序将调用另一个函数 `common_filtering`，该函数基本上是匹配货币并仅提供那些货币匹配的值，换句话说，就是过滤。然后我们将其显示在我们刚创建的输出小部件中。如果你使用的是我添加的相同数据文件，它应该会类似于这样。
- en: '![Image](../Images/f44c7193b27ca45fc05cc04b6ef141f0.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/f44c7193b27ca45fc05cc04b6ef141f0.png)'
- en: '****Visualization****'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '****可视化****'
- en: Let’s move on to visualize the filtered data that we have. We will make a line
    chart for the count of currencies in our data to see how transactions took place
    over several of them.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续可视化我们已经筛选的数据。我们将制作一个折线图，以查看我们的数据中货币的数量，并了解交易如何在它们之间发生。
- en: '![Image](../Images/315f96b9e8825cddfe97a4b4df08a044.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/315f96b9e8825cddfe97a4b4df08a044.png)'
- en: First, we create a new column count and we count the occurrence of each currency.
    And we pass that as our plot_data where on the X-axis we keep currency and on
    Y-axis we keep the count. We are using plotly here —  import plotly as px — and
    keeping a separate helper function that we call for the plot. You can see the
    bar chart like this on the dashboard if everything runs successfully.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们创建一个新列 `count`，并计算每种货币的出现次数。然后我们将其作为 `plot_data` 传递，其中 X 轴为货币，Y 轴为数量。我们在这里使用
    plotly —— 导入 plotly 作为 px —— 并保留一个单独的辅助函数用于绘图。如果一切运行成功，你将在仪表板上看到这样的柱状图。
- en: '![Image](../Images/8c9ef764c2e2cb21af8b025bd8a74ad6.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/8c9ef764c2e2cb21af8b025bd8a74ad6.png)'
- en: And voila (pun intended), you have a working dashboard. Now we can publish it
    to production using Saturn Cloud and it is as easy as clicking a few clicks.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 然后瞧（恶搞的意思），你有了一个工作中的仪表板。现在我们可以使用 Saturn Cloud 将其发布到生产环境，这就像点击几下那么简单。
- en: '****Publish to Production****'
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '****发布到生产环境****'
- en: To create a deployment, go to a project page and click the “Create a deployment
    button”
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建部署，前往项目页面并点击“创建部署按钮”
- en: '![Image](../Images/0b656065f74037c9d74839db2cde035b.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/0b656065f74037c9d74839db2cde035b.png)'
- en: '**Create Deployment**'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**创建部署**'
- en: You will be prompted with the configuration page. As you can see below, you
    only have to set a name and command, and you will be ready to go. However; there
    are plenty of options to explore on Saturn Cloud, which you can find [here](https://www.saturncloud.io/docs/using-saturn-cloud/jobs_and_deployments/#deployments).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你将被提示配置页面。如下面所示，你只需设置一个名称和命令，然后就可以开始了。然而，Saturn Cloud 上有许多选项可以探索，你可以在[这里](https://www.saturncloud.io/docs/using-saturn-cloud/jobs_and_deployments/#deployments)找到它们。
- en: '![Image](../Images/6906f9964e2c6443c3de54292d00edd7.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/6906f9964e2c6443c3de54292d00edd7.png)'
- en: '**Configuration**'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**配置**'
- en: Now that configuration is ready, you will be able to see the dashboard, hit
    the little play button next to the URL and as soon as it is active, visit the
    URL to access your dashboard.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在配置已经准备好，你将能够看到仪表板，点击 URL 旁边的小播放按钮，一旦它激活，访问 URL 以访问你的仪表板。
- en: '****Endnotes****'
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '****脚注****'
- en: In this article, we covered what Saturn Cloud is and how it can speed up your
    end-to-end pipeline, how to create dashboards using Voila and Python and publish
    to production using Saturn Cloud in just a few easy steps. Having the right tools
    helps you a lot and Saturn Cloud is one of them if you are into accelerating your
    processing or data science pipeline. If you have any questions, feel free to reach
    out to me via [twitter](https://twitter.com/dhrumilcse) or [Linkedin](https://linkedin.com/in/dhrumilcse),
    or just drop by to say hello.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们介绍了什么是 Saturn Cloud 以及它如何加快你的端到端流程，如何使用 Voila 和 Python 创建仪表板，并在 Saturn
    Cloud 中通过几个简单的步骤发布到生产环境。拥有合适的工具对你帮助很大，如果你想加速处理或数据科学流程，Saturn Cloud 是其中之一。如果你有任何问题，欢迎通过[twitter](https://twitter.com/dhrumilcse)或[Linkedin](https://linkedin.com/in/dhrumilcse)与我联系，或者随时来打个招呼。
- en: '**Bio: [Dhrumil Patel](http://linkedin.com/in/dhrumilcse)** ([@Dhrumilcse](https://twitter.com/Dhrumilcse))
    is a Performance Analyst Intern at NVIDIA. His interest lies in working with data
    on a large scale and web application development using modern frameworks such
    as Django. He also posses hands-on exposure to NLP while handling enormous social
    media data. Apart from work, he enjoys reading books and doing origami.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**个人简介: [Dhrumil Patel](http://linkedin.com/in/dhrumilcse)** ([@Dhrumilcse](https://twitter.com/Dhrumilcse))
    是 NVIDIA 的性能分析实习生。他的兴趣在于处理大规模数据和使用现代框架如 Django 进行 Web 应用开发。他还具备处理大量社交媒体数据的 NLP
    实践经验。除了工作，他还喜欢阅读书籍和折纸。'
- en: '**Related:**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Super Charge Python with Pandas on GPUs Using Saturn Cloud](/2021/05/super-charge-python-pandas-gpus-saturn-cloud.html)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Saturn Cloud 在 GPUs 上超充 Python 和 Pandas](/2021/05/super-charge-python-pandas-gpus-saturn-cloud.html)'
- en: '[Data Scientists, You Need to Know How to Code](/2021/06/data-scientists-need-know-code.html)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家，你需要了解如何编程](/2021/06/data-scientists-need-know-code.html)'
- en: '[When good data analyses fail to deliver the results you expect](/2020/11/good-data-analyses-fail.html)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[当好的数据分析未能交付你预期的结果时](/2020/11/good-data-analyses-fail.html)'
- en: More On This Topic
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Prepare Your Data for Effective Tableau & Power BI Dashboards](https://www.kdnuggets.com/2022/06/prepare-data-effective-tableau-power-bi-dashboards.html)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[为有效的Tableau和Power BI仪表板准备数据](https://www.kdnuggets.com/2022/06/prepare-data-effective-tableau-power-bi-dashboards.html)'
- en: '[How to Successfully Deploy Data Science Projects](https://www.kdnuggets.com/2022/01/successfully-deploy-data-science-projects.html)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何成功部署数据科学项目](https://www.kdnuggets.com/2022/01/successfully-deploy-data-science-projects.html)'
- en: '[Learn How to Design & Deploy Responsible AI Systems](https://www.kdnuggets.com/2023/10/teradata-design-deploy-responsible-ai-systems-whitepaper)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习如何设计和部署负责任的AI系统](https://www.kdnuggets.com/2023/10/teradata-design-deploy-responsible-ai-systems-whitepaper)'
- en: '[Learn How to Design & Deploy Responsible AI Systems](https://www.kdnuggets.com/2023/11/teradata-design-deploy-responsible-ai-systems-whitepaper)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习如何设计和部署负责任的AI系统](https://www.kdnuggets.com/2023/11/teradata-design-deploy-responsible-ai-systems-whitepaper)'
- en: '[Survey: Machine Learning Projects Still Routinely Fail to Deploy](https://www.kdnuggets.com/survey-machine-learning-projects-still-routinely-fail-to-deploy)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[调查：机器学习项目仍然常常无法成功部署](https://www.kdnuggets.com/survey-machine-learning-projects-still-routinely-fail-to-deploy)'
- en: '[Deploy a Machine Learning Web App with Heroku](https://www.kdnuggets.com/2022/04/deploy-machine-learning-web-app-heroku.html)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用Heroku部署机器学习Web应用](https://www.kdnuggets.com/2022/04/deploy-machine-learning-web-app-heroku.html)'
