- en: 10 Python Skills for Beginners
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/12/10-python-skills-beginners.html](https://www.kdnuggets.com/2020/12/10-python-skills-beginners.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Nicole Janeway Bills](https://twitter.com/Nicole_Janeway), Data Scientist
    at Atlas Research**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/ba61ff76a6f3e7f068178f3d16e421ad.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Shelby Miller](https://unsplash.com/@shebster_07?utm_source=medium&utm_medium=referral) on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: With Python’s straightforward, human-readable syntax, anyone can access impressive
    capabilities for scientific computing. Python has become the standard language
    for data science and machine learning, and it was rated in the **top three most
    loved** languages in [Stack Overflow’s 2020 Developer Survey](https://insights.stackoverflow.com/survey/2020#most-loved-dreaded-and-wanted).
  prefs: []
  type: TYPE_NORMAL
- en: If you’re a [newcomer](https://towardsdatascience.com/new-data-science-f4eeee38d8f6) to
    this much loved programming language, here are ten tips to promote the flourishing
    of your Python skillset. You can follow along in this [**Google Colab** **notebook**](https://colab.research.google.com/drive/1K2oWzxzYbura4VqrntsZimnWqQex_c38?usp=sharing) (plus, [a
    quick video introduction to Google Colab](https://youtu.be/aaebOpi1kik?t=24)).
  prefs: []
  type: TYPE_NORMAL
- en: '#10 — List comprehensions'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A simple, single-line syntax for working with lists, a list comprehension allows
    you to access and perform an action on individual elements of a list.
  prefs: []
  type: TYPE_NORMAL
- en: The syntax consists of brackets containing an expression like `print(plant)`,
    followed by a `for` and/or `if` clause.
  prefs: []
  type: TYPE_NORMAL
- en: 'will print:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '(Note: the semicolon at the end of the list comprehension will suppress printing
    the output of the last line of the Jupyter Notebook cell. This way, Jupyter Notebook
    won’t also print a list of `None`.)'
  prefs: []
  type: TYPE_NORMAL
- en: '#9 — Single-line if statement'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Along with the previous tip, the single-line if can help you make your code
    more concise.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s say we’ve decided we’re interested in identifying whether or not a plant
    is an orchid. With a single line-if, we start with the value we want to output
    if the test condition is true.
  prefs: []
  type: TYPE_NORMAL
- en: This code combines single-line if with list comprehension to output a 1 where
    the plant is an orchid and otherwise outputting a 0.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'will output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This list is not so interesting on its own, but when combined with the next
    tip, we’ll see a practical use of the single-line if.
  prefs: []
  type: TYPE_NORMAL
- en: '#8 — Apply a lambda to a DataFrame column'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A pandas DataFrame is a structure that can hold tabular data, like Excel for
    Python. `[lambda](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html)` is
    a keyword that provides a shortcut to performing operations on values in the table.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s say we have a table of information about our greenhouse plants:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Printing this dataframe will show the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/a982949fc7ad6d5bfff5ec78ee0e8cd8.png)'
  prefs: []
  type: TYPE_IMG
- en: Let’s say we wanted to know whether a plant prefers a certain German classical
    composer.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'will output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/dbc32c3e80ae972422484e9c406bc9ae.png)'
  prefs: []
  type: TYPE_IMG
- en: where the first column is the DataFrame index and the second column is a series
    representing the output of the single-line if.
  prefs: []
  type: TYPE_NORMAL
- en: '`lambda` represents an “[anonymous function](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html).”
    It allows us to perform operations on the values in a DataFrame without creating
    a formal function — i.e., a function with `def` and `return` statements, which
    we’ll see in a moment.'
  prefs: []
  type: TYPE_NORMAL
- en: '#7— Apply a condition to multiple columns'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let’s say we want to identify which Bach-loving plants also need full sun, so
    we can arrange them together in the greenhouse.
  prefs: []
  type: TYPE_NORMAL
- en: First, we create a function by using the `def` keyword and giving it a name
    with underscores between words (e.g. sunny_shelf). Appropriately, this naming
    convention is called [snake case](https://www.python.org/dev/peps/pep-0008/#function-and-variable-names) ????
  prefs: []
  type: TYPE_NORMAL
- en: The function sunny_shelf takes in two parameters as its inputs — the column
    to check for “full sun” and the column to check for “bach.” The function outputs
    whether both these conditions are true.
  prefs: []
  type: TYPE_NORMAL
- en: On line 4, we [.apply()](https://chrisalbon.com/python/data_wrangling/pandas_apply_operations_to_dataframes/) this
    function to the DataFrame and specify which columns should be passed in as parameters. `axis=1` tells
    pandas that it should evaluate the function across columns (versus `axis=0`, which
    evaluates across rows). We assign the output of the .apply() function to a new
    DataFrame column called ‘new_shelf.’
  prefs: []
  type: TYPE_NORMAL
- en: 'Alternatively, we could use the [np.where()](https://numpy.org/doc/stable/reference/generated/numpy.where.html) function
    for the same purpose:'
  prefs: []
  type: TYPE_NORMAL
- en: This [function from the numpy library](https://numpy.org/doc/stable/reference/generated/numpy.where.html) checks
    the two conditions specified above (i.e., that the plant is a lover of full sun
    and Germanic classical music) and assigns the output to ‘new_shelf’ column.
  prefs: []
  type: TYPE_NORMAL
- en: '*For these tips on *[*.apply()*](https://chrisalbon.com/python/data_wrangling/pandas_apply_operations_to_dataframes/)*, *[*np.where()*](https://chrisalbon.com/python/data_wrangling/pandas_create_column_using_conditional/)*,
    and other incredibly useful code snippets, check out *[*Chris Albon’s blog*](https://chrisalbon.com/)*.*'
  prefs: []
  type: TYPE_NORMAL
- en: '#6— Break up a long line of code'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: By the way, you can break up any statement inside parentheses, brackets, or
    braces across multiple lines to avoid a single line from running too long. We’ve
    seen this when we initialized our greenhouse list, created our dataframe of plants,
    and used the np.where() function.
  prefs: []
  type: TYPE_NORMAL
- en: 'According to [PEP8](https://www.python.org/dev/peps/pep-0008/#maximum-line-length),
    the Python style guide:'
  prefs: []
  type: TYPE_NORMAL
- en: The preferred way of wrapping long lines is by using Python’s implied line continuation
    inside parentheses, brackets, and braces.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '#5 — Read in a .csv and set index'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now let’s expand our greenhouse, so we have more real world data to work with.
    We’ll do this by importing a .csv containing plant data. [Follow along by accessing
    the dataset here](https://docs.google.com/spreadsheets/d/14DTM1iEJtRBNDpayc3P-qUY0Bo2O1SVxxdi96dJmaXk/edit?usp=sharing).
  prefs: []
  type: TYPE_NORMAL
- en: Let’s say the table contains a unique plant identifier that we want to use as
    an index in our DataFrame. We can set this up with the index_col parameter.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![Image for post](../Images/2157af16fe911a6deb834b7c8c4305fc.png)'
  prefs: []
  type: TYPE_IMG
- en: '*For the fundamentals of exploratory data analysis (EDA) and 9 other useful
    Python tips, check out this article:*'
  prefs: []
  type: TYPE_NORMAL
- en: '[**10 Underrated Python Skills**](https://towardsdatascience.com/10-underrated-python-skills-dfdff5741fdf)'
  prefs: []
  type: TYPE_NORMAL
- en: Up your Data Science game with these tips for improving your Python coding for
    better EDA, target analysis, feature…
  prefs: []
  type: TYPE_NORMAL
- en: '#4— Format as money'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: How much are we spending on these plants anyway? Let’s format the output of
    this calculation as money.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'will output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The comma separator makes it easy to see how much cash we’ve dropped so far.
  prefs: []
  type: TYPE_NORMAL
- en: '#3 — Create a pivot table'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Next, let’s say we want to see the amount spent per plant species. We can pivot
    with aggregation using either [pd.pivot_table()](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.pivot_table.html) or [.groupby()](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.groupby.html).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: or
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Either method will output the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/cf5e611fb31f1bcb8d38f87f6012f898.png)'
  prefs: []
  type: TYPE_IMG
- en: We can also specify a multilevel pivot table using either method.
  prefs: []
  type: TYPE_NORMAL
- en: Checking `piv.equals(piv0)` yields True.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s what the resulting DataFrame looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image for post](../Images/91b468e39116151aa4717c030a776c21.png)'
  prefs: []
  type: TYPE_IMG
- en: '#2— Calculate percent of total'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Curious about how each plant species contributed toward the total cost of the
    greenhouse? Divide each value by the sum across all the rows, and assign that
    output to a new column called ‘perc’:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![Image for post](../Images/edd7bf84823eb44cf98942f40d67b2d1.png)'
  prefs: []
  type: TYPE_IMG
- en: '#1 — Sort by multiple columns'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Finally, let’s sort our DataFrame so that orchids are at the top and the plants
    are organized by price descending.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '![Image for post](../Images/2d57a1d43fffb464e49eebd69eb27617.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In this article, we covered 10 Python skills that might be useful for beginner
    Data Scientists. These tips include:'
  prefs: []
  type: TYPE_NORMAL
- en: '[List comprehensions (#10)](https://towardsdatascience.com/10-python-skills-beginners-3066305f0d3c#f070)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Single-line if statement (#9)](https://towardsdatascience.com/10-python-skills-beginners-3066305f0d3c#e7ec)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Apply a lambda to a DataFrame column (#8)](https://towardsdatascience.com/10-python-skills-beginners-3066305f0d3c#8169)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Apply a condition to multiple columns (#7)](https://towardsdatascience.com/10-python-skills-beginners-3066305f0d3c#52d6)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Break up a long line of code (#6)](https://towardsdatascience.com/10-python-skills-beginners-3066305f0d3c#2f45)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Read in a .csv and set index (#5)](https://towardsdatascience.com/10-python-skills-beginners-3066305f0d3c#cad2)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Format as money (#4)](https://towardsdatascience.com/10-python-skills-beginners-3066305f0d3c#12e9)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Create a pivot table (#3)](https://towardsdatascience.com/10-python-skills-beginners-3066305f0d3c#727c)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Calculate percent of total (#2)](https://towardsdatascience.com/10-python-skills-beginners-3066305f0d3c#d991)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Sort by multiple columns](https://towardsdatascience.com/10-python-skills-beginners-3066305f0d3c#69c2) (#1)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Access the **Colab notebook** here](https://colab.research.google.com/drive/1K2oWzxzYbura4VqrntsZimnWqQex_c38?usp=sharing),
    and [access the **greenhouse dataset** here](https://docs.google.com/spreadsheets/d/14DTM1iEJtRBNDpayc3P-qUY0Bo2O1SVxxdi96dJmaXk/edit?usp=sharing).'
  prefs: []
  type: TYPE_NORMAL
- en: I hope this write up helps you grow your skillset as a new Data Scientist. Thanks
    for letting me share two of my favorite things — Python and gardening — in one
    article.
  prefs: []
  type: TYPE_NORMAL
- en: '**If you enjoyed this story**, check out [**10 Undervalued Python Skills**](https://towardsdatascience.com/10-underrated-python-skills-dfdff5741fdf) and [**10
    Python Skill They Don’t Teach in Bootcamp**](https://towardsdatascience.com/10-python-skills-419e5e4c4d66).
    Follow me on [Medium](https://medium.com/@nicolejaneway), [LinkedIn](http://www.linkedin.com/in/nicole-janeway-bills), [YouTube](https://www.youtube.com/channel/UCO6JE24WY82TKabcGI8mA0Q?view_as=subscriber),
    and [Twitter](https://twitter.com/Nicole_Janeway) for more ideas to advance your
    data science skills.'
  prefs: []
  type: TYPE_NORMAL
- en: More Great Resources for Data Scientists
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[**The Best Data Science Certification You’ve Never Heard Of**](https://towardsdatascience.com/best-data-science-certification-4f221ac3dbe3)'
  prefs: []
  type: TYPE_NORMAL
- en: A practical guide to the most valuable training in data strategy.
  prefs: []
  type: TYPE_NORMAL
- en: '[**5 Must-Read Data Science Papers (and How to Use Them)**](https://towardsdatascience.com/must-read-data-science-papers-487cce9a2020)'
  prefs: []
  type: TYPE_NORMAL
- en: Foundational ideas to keep you on top of the data science game.
  prefs: []
  type: TYPE_NORMAL
- en: '[**What’s the Difference Between a Data Analyst, Data Scientist, and a Machine
    Learning Engineer?**](https://towardsdatascience.com/data-analyst-vs-data-scientist-2534fc1057c3)'
  prefs: []
  type: TYPE_NORMAL
- en: Explore the distinction between these common job titles with the analogy of
    a track meet.
  prefs: []
  type: TYPE_NORMAL
- en: '[**How to Future-Proof Your Data Science Project**](https://towardsdatascience.com/model-selection-and-deployment-cf754459f7ca)'
  prefs: []
  type: TYPE_NORMAL
- en: 5 critical elements of ML model selection & deployment
  prefs: []
  type: TYPE_NORMAL
- en: '[**Is Your Machine Learning Model Likely to Fail?**](https://towardsdatascience.com/data-science-planning-c0649c52f867)'
  prefs: []
  type: TYPE_NORMAL
- en: 5 missteps to avoid in your planning process
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Nicole Janeway Bills](http://www.linkedin.com/in/nicole-janeway-bills)** is
    a machine learning engineer with experience in commercial and federal consulting.
    Proficient in Python, SQL, and Tableau, Nicole has business experience in natural
    language processing (NLP), cloud computing, statistical testing, pricing analysis,
    and ETL processes, and aims to use this background to connect data with business
    outcomes and continue to develop technical skillsets.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/10-python-skills-beginners-3066305f0d3c).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[10 Underrated Python Skills](/2020/10/10-underrated-python-skills.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 Lessons Learned in 6 Months as a Data Scientist](/2020/10/6-lessons-6-months-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[fastcore: An Underrated Python Library](/2020/10/fastcore-underrated-python-library.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[7 Tips for Python Beginners](https://www.kdnuggets.com/2022/09/7-tips-python-beginners.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Python Projects for Beginners](https://www.kdnuggets.com/2022/11/7-python-projects-beginners.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How To Write Efficient Python Code: A Tutorial for Beginners](https://www.kdnuggets.com/how-to-write-efficient-python-code-a-tutorial-for-beginners)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Convert Python Dict to JSON: A Tutorial for Beginners](https://www.kdnuggets.com/convert-python-dict-to-json-a-tutorial-for-beginners)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Free Python Courses for Data Science Beginners](https://www.kdnuggets.com/5-free-python-courses-for-data-science-beginners)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Convert Bytes to String in Python: A Tutorial for Beginners](https://www.kdnuggets.com/convert-bytes-to-string-in-python-a-tutorial-for-beginners)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
