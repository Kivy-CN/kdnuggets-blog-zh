- en: 'Managing Machine Learning Workflows with Scikit-learn Pipelines Part 1: A Gentle
    Introduction'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2017/12/managing-machine-learning-workflows-scikit-learn-pipelines-part-1.html](https://www.kdnuggets.com/2017/12/managing-machine-learning-workflows-scikit-learn-pipelines-part-1.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '![Pipelines](../Images/b8b9b0bbf09b0e456ffbdb9febbe3581.png)'
  prefs: []
  type: TYPE_IMG
- en: Are you familiar with Scikit-learn Pipelines?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: They are an extremely simple yet very useful tool for managing machine learning
    workflows.
  prefs: []
  type: TYPE_NORMAL
- en: A typical machine learning task generally involves data preparation to varying
    degrees. We won't get into the wide array of activities which make up data preparation
    here, [but there are many](/2017/06/7-steps-mastering-data-preparation-python.html).
    Such tasks are known for taking up a large proportion of time spent on any given
    machine learning task.
  prefs: []
  type: TYPE_NORMAL
- en: After a dataset is cleaned up from a potential initial state of massive disarray,
    however, there are still several less-intensive yet no less-important transformative
    data preprocessing steps such as [feature extraction](https://en.wikipedia.org/wiki/Feature_extraction),
    [feature scaling](https://en.wikipedia.org/wiki/Feature_scaling), and [dimensionality
    reduction](https://en.wikipedia.org/wiki/Dimensionality_reduction), to name just
    a few.
  prefs: []
  type: TYPE_NORMAL
- en: Maybe your preprocessing requires only one of these tansformations, such as
    some form of scaling. But maybe you need to string a number of transformations
    together, and ultimately finish off with an estimator of some sort. This is where
    Scikit-learn Pipelines can be helpful.
  prefs: []
  type: TYPE_NORMAL
- en: 'Scikit-learn''s [Pipeline class](http://scikit-learn.org/stable/modules/generated/sklearn.pipeline.Pipeline.html)
    is designed as a manageable way to apply a series of [data transformations](http://scikit-learn.org/stable/data_transforms.html)
    followed by the application of an [estimator](http://scikit-learn.org/stable/tutorial/machine_learning_map/index.html).
    In fact, that''s really all it is:'
  prefs: []
  type: TYPE_NORMAL
- en: Pipeline of transforms with a final estimator.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'That''s it. Ultimately, this simple tool is useful for:'
  prefs: []
  type: TYPE_NORMAL
- en: Convenience in creating a coherent and easy-to-understand workflow
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforcing workflow implementation and the desired order of step applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reproducibility
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Value in persistence of entire pipeline objects (goes to reproducibility and
    convenience)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: So let's have a quick look at Pipelines. Specifically, here is what we will
    do.
  prefs: []
  type: TYPE_NORMAL
- en: '**Build 3 pipelines**, each with a different estimator (classification algorithm),
    using default hyperparameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Logisitic Regression](http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Support Vector Machine](http://scikit-learn.org/stable/modules/svm.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Decision Tree](http://scikit-learn.org/stable/modules/tree.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To demonstrate pipeline **transforms**, will perform:'
  prefs: []
  type: TYPE_NORMAL
- en: feature scaling
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dimensionality reduction, using PCA to project data onto 2 dimensional space
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will then end with fitting to our final **estimators**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Afterward, and almost completely unrelated, in order to make this a little
    more like a full-fledged workflow (it still isn''t, but closer), we will:'
  prefs: []
  type: TYPE_NORMAL
- en: Followup with scoring test data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compare pipeline model accuracies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identify the "best" model, meaning that which has the highest accuracy on our
    test data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Persist](http://scikit-learn.org/stable/modules/model_persistence.html) (save
    to file) the entire pipeline of the "best" model'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Granted, given that we will use default hyperparameters, this likely won't result
    in the most accurate possible models, but it will provide a sense of how to use
    simple pipelines. We will come back to the question of more complex modeling,
    hyperparameter tuning, and model evaluation afterward.
  prefs: []
  type: TYPE_NORMAL
- en: Oh, and for additional simplicity, we are using the iris dataset. The code is
    well-commented, and should be easy to follow.
  prefs: []
  type: TYPE_NORMAL
- en: Let's run our script and see what happens.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: So there you have it; a simple implementation of Scikit-learn pipelines. In
    this particular case, our logistic regression-based pipeline with default parameters
    scored the highest accuracy.
  prefs: []
  type: TYPE_NORMAL
- en: As mentioned above, however, these results likely don't represent our best efforts.
    What if we did want to test out a series of different hyperparameters? Can we
    use grid search? Can we incorporate automated methods for tuning these hyperparameters?
    Can AutoML fit in to this picture somewhere? What about using cross-validation?
  prefs: []
  type: TYPE_NORMAL
- en: Over the next couple of posts we will take a look at these additional issues,
    and see how these simple pieces fit together to make pipelines much more powerful
    than they may first appear to be given our initial example.
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering Data Preparation with Python](/2017/06/7-steps-mastering-data-preparation-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Machine Learning Workflows in Python from Scratch Part 1: Data Preparation](/2017/05/machine-learning-workflows-python-scratch-part-1.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Machine Learning Workflows in Python from Scratch Part 2: k-means Clustering](/2017/06/machine-learning-workflows-python-scratch-part-2.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[A Gentle Introduction to Natural Language Processing](https://www.kdnuggets.com/2022/06/gentle-introduction-natural-language-processing.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Gentle Introduction to Support Vector Machines](https://www.kdnuggets.com/2023/07/gentle-introduction-support-vector-machines.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A New Way of Managing Deep Learning Datasets](https://www.kdnuggets.com/2022/03/new-way-managing-deep-learning-datasets.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Managing Your Reusable Python Code as a Data Scientist](https://www.kdnuggets.com/2021/06/managing-reusable-python-code-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[4 Steps for Managing a Data Science Project](https://www.kdnuggets.com/2022/05/4-steps-managing-data-science-project.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Managing Model Drift in Production with MLOps](https://www.kdnuggets.com/2023/05/managing-model-drift-production-mlops.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
