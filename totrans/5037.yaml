- en: 'Mining Twitter Data with Python Part 5: Data Visualisation Basics'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 挖掘 Twitter 数据 第五部分：数据可视化基础
- en: 原文：[https://www.kdnuggets.com/2016/06/mining-twitter-data-python-part-5.html](https://www.kdnuggets.com/2016/06/mining-twitter-data-python-part-5.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2016/06/mining-twitter-data-python-part-5.html](https://www.kdnuggets.com/2016/06/mining-twitter-data-python-part-5.html)
- en: '**By Marco Bonzanini, Independent Data Science Consultant**.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者：Marco Bonzanini，自由数据科学顾问**。'
- en: 'A picture is worth a thousand tweets: more often than not, designing a good [visual
    representation](https://en.wikipedia.org/wiki/Data_visualization) of our data,
    can help us make sense of them and highlight interesting insights. After collecting
    and analysing Twitter data, the tutorial continues with some notions on data visualisation
    with Python.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 一图胜千言：设计一个好的[可视化表现](https://en.wikipedia.org/wiki/Data_visualization)可以帮助我们理解数据并突出有趣的见解。收集和分析
    Twitter 数据后，本教程将继续介绍使用 Python 进行数据可视化的一些概念。
- en: '![Twitter](../Images/3da5b4dea824ea453ca3ae25f3548634.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![Twitter](../Images/3da5b4dea824ea453ca3ae25f3548634.png)'
- en: From Python to Javascript with Vincent
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从 Python 到 JavaScript 使用 Vincent
- en: While there are some options to create plots in Python using libraries like
    matplotlib or ggplot, one of the coolest libraries for data visualisation is probably [D3.js](http://d3js.org/) which
    is, as the name suggests, based on Javascript. D3 plays well with web standards
    like CSS and SVG, and allows to create some wonderful interactive visualisations.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管使用如 matplotlib 或 ggplot 等库在 Python 中创建图表有一些选项，但可能最酷的数据可视化库是[D3.js](http://d3js.org/)，顾名思义，它是基于
    JavaScript 的。D3 与 CSS 和 SVG 等 Web 标准兼容，并允许创建一些精彩的互动可视化效果。
- en: '[Vincent](https://github.com/wrobstory/vincent) bridges the gap between a Python
    back-end and a front-end that supports D3.js visualisation, allowing us to benefit
    from both sides. The tagline of Vincent is in fact “The data capabilities of Python.
    The visualization capabilities of JavaScript”. Vincent, a Python library, takes
    our data in Python format and translates them into [Vega](https://github.com/trifacta/vega),
    a JSON-based visualisation grammar that will be used on top of D3\. It sounds
    quite complicated, but it’s fairly simple and *pythonic*. You don’t have to write
    a line in Javascript/D3 if you don’t want to.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[Vincent](https://github.com/wrobstory/vincent)弥合了 Python 后端和支持 D3.js 可视化的前端之间的差距，让我们能够受益于两者。Vincent
    的口号实际上是“Python 的数据能力。JavaScript 的可视化能力”。Vincent 作为一个 Python 库，将我们的数据转换成[Vega](https://github.com/trifacta/vega)，一种基于
    JSON 的可视化语法，该语法将在 D3 上使用。听起来可能很复杂，但实际上很简单且*符合 Python 风格*。如果你不想的话，你不需要写一行 JavaScript/D3
    代码。'
- en: 'Firstly, let’s install Vincent:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们安装 Vincent：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Secondly, let’s create our first plot. Using the [list of most frequent terms](https://marcobonzanini.com/2015/03/17/mining-twitter-data-with-python-part-3-term-frequencies/)(without
    hashtags) from our [rugby data set](https://marcobonzanini.com/2015/03/23/mining-twitter-data-with-python-part-4-rugby-and-term-co-occurrences/),
    we want to plot their frequencies:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，让我们创建我们的第一个图表。使用我们的[rugby data set](https://marcobonzanini.com/2015/03/23/mining-twitter-data-with-python-part-4-rugby-and-term-co-occurrences/)中的[最常见术语列表](https://marcobonzanini.com/2015/03/17/mining-twitter-data-with-python-part-3-term-frequencies/)（不包括标签），我们想要绘制它们的频率：
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'At this point, the file `term_freq.json` will contain a description of the
    plot that can be handed over to D3.js and Vega. A simple template (taken from
    Vincent resources) to visualise the plot:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，`term_freq.json` 文件将包含一个描述图表的内容，可以交给 D3.js 和 Vega。一个简单的模板（取自 Vincent 资源）用于可视化图表：
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Save the above HTML page as `chart.html` and run the simple Python web server:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 将上述 HTML 页面保存为`chart.html`，然后运行简单的 Python Web 服务器：
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now you can open your browser at **http://localhost:8888/chart.html** and observe
    the result:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以打开浏览器访问**http://localhost:8888/chart.html**，观察结果：
- en: '[![Term Frequencies](../Images/b1f3356aba782317f239a457ff539d1d.png)](https://marcobonzanini.files.wordpress.com/2015/04/term_freq.png)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[![术语频率](../Images/b1f3356aba782317f239a457ff539d1d.png)](https://marcobonzanini.files.wordpress.com/2015/04/term_freq.png)'
- en: '*Click to enlarge.*'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*点击放大。*'
- en: 'Notice: you could save the HTML template directly from Python with:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：你可以直接从 Python 保存 HTML 模板，使用：
- en: '[PRE4]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: but, at least in Python 3, the output is not a well formed HTML and you’d need
    to manually strip some characters.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 但至少在 Python 3 中，输出的 HTML 并不完整，你需要手动去除一些字符。
- en: With this procedure, we can plot many different types of charts with Vincent.
    Let’s take a moment to [browse the docs](http://vincent.readthedocs.org/en/latest/) and
    see its capabilities.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个过程，我们可以用 Vincent 绘制多种类型的图表。让我们花点时间[browse the docs](http://vincent.readthedocs.org/en/latest/)查看其功能。
- en: Time Series Visualisation
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 时间序列可视化
- en: Another interesting aspect of analysing data from Twitter is the possibility
    to observe the distribution of tweets over time. In other words, if we organise
    the frequencies into temporal buckets, we could observe how Twitter users react
    to real-time events.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 分析 Twitter 数据的另一个有趣方面是观察推文随时间的分布。换句话说，如果我们将频率组织成时间段，我们可以观察 Twitter 用户对实时事件的反应。
- en: One of my favourite tools for data analysis with Python is [Pandas](http://pandas.pydata.org/),
    which also has a fairly decent support for time series. As an example, let’s track
    the hashtag `#ITAvWAL` to observe what happened during the first match.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我最喜欢的 Python 数据分析工具之一是[Pandas](http://pandas.pydata.org/)，它对时间序列也有相当不错的支持。作为示例，让我们跟踪标签`#ITAvWAL`以观察第一场比赛期间发生了什么。
- en: 'Firstly, if we haven’t done it yet, we need to install Pandas:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，如果我们还没有这样做，我们需要安装 Pandas：
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In the main loop which reads all the tweets, we simply track the occurrences
    of the hashtag, i.e. we can refactor the code [from the previous episodes](https://marcobonzanini.com/2015/03/23/mining-twitter-data-with-python-part-4-rugby-and-term-co-occurrences/) into
    something similar to:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在读取所有推文的主循环中，我们只需跟踪标签的出现次数，即我们可以将代码重构为类似于[之前的几集](https://marcobonzanini.com/2015/03/23/mining-twitter-data-with-python-part-4-rugby-and-term-co-occurrences/)的形式：
- en: '[PRE6]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The last line is what allows us to track the frequencies over time. The series
    is re-sampled with intervals of 1 minute. This means all the tweets falling within
    a particular minute will be aggregated, more precisely they will be summed up,
    given `how='sum'`. The time index will not keep track of the seconds anymore.
    If there is no tweet in a particular minute, the `fillna()` function will fill
    the blanks with zeros.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一行使我们能够跟踪频率的变化。序列以1分钟的间隔重新采样。这意味着所有在特定一分钟内的推文将被汇总，更准确地说，它们将被求和，给定`how='sum'`。时间索引将不再跟踪秒数。如果在特定的一分钟内没有推文，`fillna()`函数将用零填充空白。
- en: 'To put the time series in a plot with Vincent:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要将时间序列绘制到图表中，使用 Vincent：
- en: '[PRE7]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Once you embed the `time_chart.json` file into the HTML template discussed
    above, you’ll see this output:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦将`time_chart.json`文件嵌入到上面讨论的 HTML 模板中，你将看到以下输出：
- en: '[![Time Series](../Images/c07ddda13c75deb1b47a79f071bb8cb6.png)](https://marcobonzanini.files.wordpress.com/2015/04/time1.png)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Time Series](../Images/c07ddda13c75deb1b47a79f071bb8cb6.png)](https://marcobonzanini.files.wordpress.com/2015/04/time1.png)'
- en: '*Click to enlarge.*'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*点击放大。*'
- en: The interesting moments of the match are observable from the spikes in the series.
    The first spike just before 1pm corresponds to the first Italian try. All the
    other spikes between 1:30 and 2:30pm correspond to Welsh tries and show the Welsh
    dominance during the second half. The match was over by 2:30, so after that Twitter
    went quiet.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 比赛的有趣时刻可以通过序列中的峰值观察到。第一次峰值发生在下午 1 点前，对应于第一次意大利尝试。1:30 和 2:30 之间的其他所有峰值对应于威尔士的尝试，显示了威尔士在下半场的主导地位。比赛在
    2:30 结束，所以之后 Twitter 变得安静。
- en: Rather than just observing one sequence at a time, we could compare different
    series to observe how the matches has evolved. So let’s refactor the code for
    the time series, keeping track of the three different hashtags`#ITAvWAL`, `#SCOvIRE` and `#ENGvFRA` into
    the corresponding `pandas.Series`.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 与其一次观察一个序列，不如比较不同的序列以观察匹配情况如何演变。因此，让我们重构时间序列的代码，将三个不同的标签`#ITAvWAL`、`#SCOvIRE`和`#ENGvFRA`跟踪到相应的`pandas.Series`中。
- en: '[PRE8]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'And the output:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 以及输出：
- en: '[![time2](../Images/68b37061e2635500f804fbd18f407310.png)](https://marcobonzanini.files.wordpress.com/2015/04/time2.png)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[![time2](../Images/68b37061e2635500f804fbd18f407310.png)](https://marcobonzanini.files.wordpress.com/2015/04/time2.png)'
- en: '*Click to enlarge.*'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '*点击放大。*'
- en: We can immediately observe when the different matches took place (approx 12:30-2:30,
    2:30-4:30 and 5-7) and we can see how the last match had the all the attentions,
    especially in the end when the winner was revealed.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以立即观察到不同比赛的发生时间（大约 12:30-2:30、2:30-4:30 和 5-7），并且可以看到最后一场比赛吸引了所有的关注，特别是在赢家揭晓时。
- en: Summary
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 概述
- en: Data visualisation is an important discipline in the bigger context of data
    analysis. By supporting visual representations of our data, we can provide interesting
    insights. We have discussed a relatively simple option to support data visualisation
    with Python using Vincent. In particular, we have seen how we can easily bridge
    the gap between Python and a language like Javascript that offers a great tool
    like D3.js, one of the most important libraries for interactive visualisation.
    Overall, we have just scratched the surface of data visualisation, but as a starting
    point this should be enough to get some nice ideas going. The nature of Twitter
    as a medium has also encouraged a quick look into the topic of time series analysis,
    allowing us to mention `pandas` as a great Python tool.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可视化是数据分析中一个重要的学科。通过支持数据的可视化表示，我们可以提供有趣的见解。我们讨论了一个相对简单的选项，使用 Python 和 Vincent
    支持数据可视化。特别是，我们看到如何轻松地弥合 Python 与 Javascript 这样一个提供了 D3.js 这样重要工具的语言之间的差距。总体而言，我们仅仅触及了数据可视化的表面，但作为一个起点，这应该足以激发一些好的想法。Twitter
    作为一种媒介的性质也促使我们快速了解时间序列分析，使我们提到`pandas`作为一个出色的 Python 工具。
- en: '**Bio: [Marco Bonzanini](https://twitter.com/marcobonzanini)** is a Data Scientist
    based in London, UK. Active in the PyData community, he enjoys working in text
    analytics and data mining applications. He''s the author of "[Mastering Social
    Media Mining with Python](https://www.amazon.com/Mastering-Social-Media-Mining-Python-ebook/dp/B01BFD2Z2Q)"
    (Packt Publishing, July 2016).'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**简历：[Marco Bonzanini](https://twitter.com/marcobonzanini)** 是一位总部位于英国伦敦的数据科学家。他活跃于
    PyData 社区，喜欢从事文本分析和数据挖掘应用。他是《[用 Python 掌握社交媒体挖掘](https://www.amazon.com/Mastering-Social-Media-Mining-Python-ebook/dp/B01BFD2Z2Q)》（Packt
    Publishing，2016 年 7 月）的作者。'
- en: '[Original](https://marcobonzanini.com/2015/04/01/mining-twitter-data-with-python-part-5-data-visualisation-basics/).
    Reposted with permission.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://marcobonzanini.com/2015/04/01/mining-twitter-data-with-python-part-5-data-visualisation-basics/)。经许可转载。'
- en: '**Related**:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关**：'
- en: '[Mining Twitter Data with Python Part 2: Text Pre-processing](/2016/06/mining-twitter-data-python-part-2.html)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 Python 挖掘 Twitter 数据 第 2 部分：文本预处理](/2016/06/mining-twitter-data-python-part-2.html)'
- en: '[Mining Twitter Data with Python Part 3: Term Frequencies](/2016/06/mining-twitter-data-python-part-3.html)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 Python 挖掘 Twitter 数据 第 3 部分：术语频率](/2016/06/mining-twitter-data-python-part-3.html)'
- en: '[Mining Twitter Data with Python Part 4: Rugby and Term Co-occurrences](/2016/06/mining-twitter-data-python-part-4.html)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 Python 挖掘 Twitter 数据 第 4 部分：橄榄球和术语共现](/2016/06/mining-twitter-data-python-part-4.html)'
- en: '* * *'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业轨道'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你所在组织的 IT'
- en: '* * *'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Back To Basics, Part Dos: Gradient Descent](https://www.kdnuggets.com/2023/03/back-basics-part-dos-gradient-descent.html)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[回到基础，第二部分：梯度下降](https://www.kdnuggets.com/2023/03/back-basics-part-dos-gradient-descent.html)'
- en: '[Python Basics: Syntax, Data Types, and Control Structures](https://www.kdnuggets.com/python-basics-syntax-data-types-and-control-structures)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 基础：语法、数据类型和控制结构](https://www.kdnuggets.com/python-basics-syntax-data-types-and-control-structures)'
- en: '[Back to Basics Week 1: Python Programming & Data Science Foundations](https://www.kdnuggets.com/back-to-basics-week-1-python-programming-data-science-foundations)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[回到基础 第 1 周：Python 编程与数据科学基础](https://www.kdnuggets.com/back-to-basics-week-1-python-programming-data-science-foundations)'
- en: '[Mastering Python for Data Science: Beyond the Basics](https://www.kdnuggets.com/mastering-python-for-data-science-beyond-the-basics)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[掌握数据科学中的 Python：超越基础](https://www.kdnuggets.com/mastering-python-for-data-science-beyond-the-basics)'
- en: '[How to Learn Python Basics With ChatGPT](https://www.kdnuggets.com/how-to-learn-python-basics-with-chatgpt)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何通过 ChatGPT 学习 Python 基础](https://www.kdnuggets.com/how-to-learn-python-basics-with-chatgpt)'
- en: '[Back to Basics Week 2: Database, SQL, Data Management and…](https://www.kdnuggets.com/back-to-basics-week-2-database-sql-data-management-and-statistical-concepts)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[基础回顾第2周：数据库、SQL、数据管理与统计概念](https://www.kdnuggets.com/back-to-basics-week-2-database-sql-data-management-and-statistical-concepts)'
