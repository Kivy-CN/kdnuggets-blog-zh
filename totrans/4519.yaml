- en: Easy Image Dataset Augmentation with TensorFlow
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/02/easy-image-dataset-augmentation-tensorflow.html](https://www.kdnuggets.com/2020/02/easy-image-dataset-augmentation-tensorflow.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)![Figure](../Images/75da29ec9b82fa9d10c4cef5605e5a59.png)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'Image source: [Nanonets](https://nanonets.com/blog/data-augmentation-how-to-use-deep-learning-when-you-have-limited-data-part-2/)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: The success of image classification is driven, at least significantly, by large
    amounts of available training data. Putting aside concerns such as overfitting
    for a moment, the more image data you train with, the better chances you have
    of building an effective model.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: But what can we do when we don't have a substantial amount of training data?
    A few broad approaches to this particular problem come to mind right away, notably
    transfer learning and data augmentation.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: '**Transfer learning** is the process of applying existing machine learning
    models to scenarios for which they were not originally intended. This leveraging
    can save training time and extend the usefulness of existing machine learning
    models, models which may have had the available data and computation to have been
    trained for very long periods of time on very large datasets. If we train a model
    on a large set of data, we can then refine the result to be effective on our smaller
    amount of data. At least, that''s the idea.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '**Data augmentation** is the increase of an existing training dataset''s size
    and diversity without the requirement of manually collecting any new data. This
    augmented data is acquired by performing a series of preprocessing transformations
    to existing data, transformations which can include horizontal and vertical flipping,
    skewing, cropping, rotating, and more in the case of image data. Collectively,
    this augmented data is able to simulate a variety of subtly different data points,
    as opposed to just duplicating the same data. The subtle differences of these
    "additional" images should hopefully be enough to help train a more robust model.
    Again, that''s the idea.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: The practical implementation of this second approach to mitigating the problem
    of small amounts of image training data — data augmentation — in TensorFlow is
    the focus of this article, while a similar practical treatment of transfer learning
    will be treated at a later time.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: How Image Augmentation Helps
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As convolutional neural networks learn image features, we want to ensure that
    these features appear at a variety of orientations, in order for a trained model
    to be able to recognize that a human's legs can appear in images both vertically
    and horizontally, for example. Augmentation, aside from increasing the raw numbers
    of data points, is able to help us in this regard by employing a transformation
    such as image rotation in this case. As another example, we could also employ
    horizontal flip to help a model train to recognize that a cat is a cat whether
    it is upright or it has been photographed upside down.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 由于卷积神经网络学习图像特征，我们希望确保这些特征以各种方向出现，以便经过训练的模型能够识别出人的腿在图像中可以呈现为垂直或水平。例如。数据增强除了增加原始数据点的数量外，还能通过使用图像旋转等变换来帮助我们。另一个例子，我们还可以使用水平翻转来帮助模型训练，以识别猫是否直立或被倒置拍摄。
- en: Data augmentation is not a panacea; we shouold not expect it to solve all of
    our small data problems, but it can be effective in numerous situations, and its
    use can be extended by employing it as one part of a comprehensive model training
    approach, perhaps alongside another dataset expansion technique such as transfer
    learning.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 数据增强不是万能药；我们不应该期望它解决所有的小数据问题，但在许多情况下它可能是有效的，并且通过将其作为全面模型训练方法的一部分进行扩展，比如与转移学习等其他数据集扩展技术一起使用。
- en: Image Augmentation in TensorFlow
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TensorFlow中的图像增强
- en: In TensorFlow, data augmentation is accomplished using the [ImageDataGenerator](https://www.tensorflow.org/api_docs/python/tf/keras/preprocessing/image/ImageDataGenerator)
    class. It is exceedingly simple to understand and to use. The entire dataset is
    looped over in each epoch, and the images in the dataset are transformed as per
    the options and values selected. These transformations are performed in-memory,
    and so no additional storage is required (though the `save_to_dir` parameter can
    be used to save augmented images to disk, if desired).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在TensorFlow中，数据增强是通过[ImageDataGenerator](https://www.tensorflow.org/api_docs/python/tf/keras/preprocessing/image/ImageDataGenerator)类完成的。这非常简单易懂。每个周期都会循环整个数据集，并根据所选选项和数值对数据集中的图像进行变换。这些变换是在内存中执行的，因此不需要额外的存储（尽管可以使用`save_to_dir`参数将增强图像保存到磁盘，如果需要的话）。
- en: 'If you are using TensorFlow, you might already be employing an `ImageDataGenerator`
    simply to scale your existing images, without any additional augmentation. This
    might look like this:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在使用TensorFlow，你可能已经在使用`ImageDataGenerator`仅用于缩放现有图像，而没有进行额外的数据增强。这可能如下所示：
- en: '[PRE0] train_datagen = ImageDataGenerator(rescale=1./255) [PRE1]`'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE0] train_datagen = ImageDataGenerator(rescale=1./255) [PRE1]`'
- en: 'An updated `ImageDataGenerator` which performs augmentation might look like
    this:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一个更新的`ImageDataGenerator`，其执行数据增强，可能如下所示：
- en: '[PRE2] train_datagen = ImageDataGenerator(        rotation_range=20,        width_shift_range=0.2,        height_shift_range=0.2,        shear_range=0.2,        zoom_range=0.2,        horizontal_flip=True,        vertical_flip=True,        fill_mode=''nearest'')
    [PRE3]`'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE2] train_datagen = ImageDataGenerator(        rotation_range=20,        width_shift_range=0.2,        height_shift_range=0.2,        shear_range=0.2,        zoom_range=0.2,        horizontal_flip=True,        vertical_flip=True,        fill_mode=''nearest'')
    [PRE3]`'
- en: What does it all mean?
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这都意味着什么？
- en: '`**rotation_range**` - degree range for random rotations; 20 degrees, in the
    above example'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**rotation_range**` - 随机旋转的度数范围；在上述示例中为20度'
- en: '`**width_shift_range**` - fraction of total width (if value < 1, as in this
    case) to randomly translate images horizontally; 0.2 in above example'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**width_shift_range**` - 总宽度的比例（如果值<1，如此处所示），用于随机水平平移图像；在上述示例中为0.2'
- en: '`**height_shift_range**` - fraction of total height (if value < 1, as in this
    case) to randomly translate images vertically; 0.2 in above example'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**height_shift_range**` - 总高度的比例（如果值<1，如此处所示），用于随机垂直平移图像；在上述示例中为0.2'
- en: '`**shear_range**` - shear angle in counter-clockwise direction in degrees,
    for shear transformations; 0.2 in the above example'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**shear_range**` - 用于剪切变换的逆时针剪切角度，单位为度；在上述示例中为0.2'
- en: '`**zoom_range**` - range for random zoom; 0.2 in the above example'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**zoom_range**` - 随机缩放的范围；在上述示例中为0.2'
- en: '`**horizontal_flip**` - Boolean value for randomly flipping images horizontally;
    True in the above example'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**horizontal_flip**` - 随机水平翻转图像的布尔值；在上述示例中为True'
- en: '`**vertical_flip**` - Boolean value for randomly flipping images vertically;
    True in the above example'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**vertical_flip**` - 随机垂直翻转图像的布尔值；在上述示例中为True'
- en: '`**fill_mode**` - points outside the boundaries of input are filled according
    to either "constant", "nearest", "reflect" or "wrap"; nearest in above example'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`**fill_mode**` - 输入边界外的点根据“constant”，“nearest”，“reflect”或“wrap”填充；在上述示例中为nearest'
- en: 'You can then specify where training (and optionally validation, if you were
    to create a validation generator) data are located, using the `ImageDataGenerator`
    `flow_from_directory` option, for example, and then train your model using `fit_generator`
    with these augmented images being flowed to your network during training. A sample
    of just such code is shown below:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你可以指定训练（以及可选的验证，如果你创建了一个验证生成器）数据的位置，例如，使用`ImageDataGenerator`的`flow_from_directory`选项，然后在训练过程中使用`fit_generator`训练模型，将这些增强的图像流入你的网络。以下是一个这样的代码示例：
- en: '[PRE4] train_generator = train_datagen.flow_from_directory(          ''data/train'',          target_size=(150,
    150),          batch_size=32,          class_mode=''binary'')    # assuming model
    already defined...    history = model.fit_generator(        train_generator,        steps_per_epoch=100,        epochs=100,        verbose=2)
    [PRE5]`'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE4] train_generator = train_datagen.flow_from_directory(          ''data/train'',          target_size=(150,
    150),          batch_size=32,          class_mode=''binary'')    # 假设模型已定义...    history
    = model.fit_generator(        train_generator,        steps_per_epoch=100,        epochs=100,        verbose=2)
    [PRE5]`'
- en: And there you have it. An intro to easy image dataset augmentation in TensorFlow.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是全部内容。TensorFlow中轻松图像数据集增强的简介。
- en: '**Related**:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关**:'
- en: '[4 Tips for Advanced Feature Engineering and Preprocessing](/2019/08/4-tips-advanced-feature-engineering-preprocessing.html)'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[高级特征工程和预处理的4个技巧](/2019/08/4-tips-advanced-feature-engineering-preprocessing.html)'
- en: '[5 Great New Features in Latest Scikit-learn Release](/2019/12/5-features-scikit-learn-release-highlights.html)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[最新Scikit-learn版本中的5个伟大新功能](/2019/12/5-features-scikit-learn-release-highlights.html)'
- en: '[Pedestrian Detection Using Non Maximum Suppression Algorithm](/2019/12/pedestrian-detection-non-maximum-suppression-algorithm.html)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用非最大抑制算法的行人检测](/2019/12/pedestrian-detection-non-maximum-suppression-algorithm.html)'
- en: More On This Topic
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[IT Staff Augmentation: How AI Is Changing the Software Development Industry](https://www.kdnuggets.com/2023/05/staff-augmentation-ai-changing-software-development-industry.html)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[IT人员扩展：AI如何改变软件开发行业](https://www.kdnuggets.com/2023/05/staff-augmentation-ai-changing-software-development-industry.html)'
- en: '[TensorFlow for Computer Vision - Transfer Learning Made Easy](https://www.kdnuggets.com/2022/01/tensorflow-computer-vision-transfer-learning-made-easy.html)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TensorFlow用于计算机视觉 - 转移学习简化版](https://www.kdnuggets.com/2022/01/tensorflow-computer-vision-transfer-learning-made-easy.html)'
- en: '[A Guide to Train an Image Classification Model Using Tensorflow](https://www.kdnuggets.com/2022/12/guide-train-image-classification-model-tensorflow.html)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用Tensorflow训练图像分类模型的指南](https://www.kdnuggets.com/2022/12/guide-train-image-classification-model-tensorflow.html)'
- en: '[How to Correctly Select a Sample From a Huge Dataset in Machine Learning](https://www.kdnuggets.com/2019/05/sample-huge-dataset-machine-learning.html)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何从巨大的数据集中正确选择样本进行机器学习](https://www.kdnuggets.com/2019/05/sample-huge-dataset-machine-learning.html)'
- en: '[Choosing the Right Clustering Algorithm for Your Dataset](https://www.kdnuggets.com/2019/10/right-clustering-algorithm.html)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[为你的数据集选择正确的聚类算法](https://www.kdnuggets.com/2019/10/right-clustering-algorithm.html)'
- en: '[How to Create a Dataset for Machine Learning](https://www.kdnuggets.com/2022/02/create-dataset-machine-learning.html)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何创建机器学习数据集](https://www.kdnuggets.com/2022/02/create-dataset-machine-learning.html)'
