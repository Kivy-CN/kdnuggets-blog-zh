- en: A Full End-to-End Deployment of a Machine Learning Algorithm into a Live Production
    Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将机器学习算法完整端到端地部署到实时生产环境中
- en: 原文：[https://www.kdnuggets.com/2021/12/deployment-machine-learning-algorithm-live-production-environment.html](https://www.kdnuggets.com/2021/12/deployment-machine-learning-algorithm-live-production-environment.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/12/deployment-machine-learning-algorithm-live-production-environment.html](https://www.kdnuggets.com/2021/12/deployment-machine-learning-algorithm-live-production-environment.html)
- en: '![](../Images/128d7ad5f8e3664b5782ae9a622a497e.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/128d7ad5f8e3664b5782ae9a622a497e.png)'
- en: Photo by [Fotis Fotopoulos](https://unsplash.com/@ffstop?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/python?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Fotis Fotopoulos](https://unsplash.com/@ffstop?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) 于 [Unsplash](https://unsplash.com/s/photos/python?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)
- en: Introduction
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引言
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业道路。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你组织的IT需求'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: In October 2021 I authored an article on “Deploying Machine Learning and Data
    Science Projects as Public Web Applications” (see [https://towardsdatascience.com/deploying-machine-learning-and-data-science-projects-as-public-web-applications-3abc91088c11](https://towardsdatascience.com/deploying-machine-learning-and-data-science-projects-as-public-web-applications-3abc91088c11)).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在2021年10月，我撰写了一篇关于“将机器学习和数据科学项目部署为公开网络应用”的文章（见 [https://towardsdatascience.com/deploying-machine-learning-and-data-science-projects-as-public-web-applications-3abc91088c11](https://towardsdatascience.com/deploying-machine-learning-and-data-science-projects-as-public-web-applications-3abc91088c11)）。
- en: In this article I explored how to deploy Jupyter Notebooks as publicly available
    web apps using Voila, GitHub and mybinder.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我探讨了如何使用Voila、GitHub和mybinder将Jupyter Notebooks 部署为公开的网络应用。
- en: After the article was published I received feedback from readers who were interested
    in how to push production deployment further to explore how a machine learning
    algorithm could be fully deployed into a live production environment so that it
    could be “consumed” in a platform-agnostic way and that led to the idea for this
    article …
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 文章发布后，我收到读者反馈，他们对如何进一步推动生产部署感兴趣，希望探索如何将机器学习算法完全部署到实时生产环境中，以便能够以平台无关的方式“消费”它，这也促成了这篇文章的产生……
- en: 'Step 1: Develop a Machine Learning Algorithm'
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第一步：开发一个机器学习算法
- en: The first step is to develop the machine learning algorithm that we want to
    deploy. In the real world this could involve many weeks or months of development
    time and lots of iteration across the steps of the data science pipeline but for
    this example I will develop a basic ML algorithm as the main purpose of this article
    is to find a way to deploy an algorithm for use by “consumers”.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是开发我们想要部署的机器学习算法。在实际应用中，这可能涉及数周或数月的开发时间以及在数据科学管道各个步骤中进行大量的迭代，但在这个例子中，我将开发一个基本的机器学习算法，因为这篇文章的主要目的是找到一种可以供“消费者”使用的算法部署方式。
- en: 'I selected a dataset from kaggle ([https://www.kaggle.com/prathamtripathi/drug-classification](https://www.kaggle.com/prathamtripathi/drug-classification))
    that has been created by the author with a “CC0: Public Domain” license which
    means that it has no copyright and that it may be used in other work with no restrictions
    (see [https://creativecommons.org/publicdomain/zero/1.0/](https://creativecommons.org/publicdomain/zero/1.0/) for
    details).'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '我从kaggle选择了一个数据集 ([https://www.kaggle.com/prathamtripathi/drug-classification](https://www.kaggle.com/prathamtripathi/drug-classification))，该数据集由作者创建，并具有“CC0:
    公共领域”许可，这意味着它没有版权，可以在其他作品中自由使用（详情请见 [https://creativecommons.org/publicdomain/zero/1.0/](https://creativecommons.org/publicdomain/zero/1.0/)）。'
- en: The Python code to develop a predictive machine learning algorithm to classify
    drug prescriptions given a range of patient criteria is as follows -
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 开发一个预测性机器学习算法以根据一系列患者标准分类药物处方的 Python 代码如下 -
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: At this point we can see that we have a machine learning algorithm trained to
    predict drug presriptions and that cross validation (i.e. folding the data) has
    been used to evaluate the model accuracy at 99%.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 此时我们可以看到，我们有一个训练好的机器学习算法用于预测药物处方，并且交叉验证（即数据折叠）已被用来评估模型准确率达到 99%。
- en: So far, so good ...
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 目前一切顺利……
- en: We are going to deploy this model into a production environment and although
    it is a simple example we would not want to have to retrain our model in the live
    environment every time a user wanted to predict a drug presription, hence our
    next step is to preserve the state of our trained model using `pickle` ...
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把这个模型部署到生产环境中，虽然这是一个简单的示例，但我们不希望每次用户想要预测药物处方时都需要在实时环境中重新训练模型，因此我们的下一步是使用`pickle`保存我们训练过的模型的状态……
- en: Now whenever we want to use the trained model, we simply need to reload its
    state from the `model.pkl` file rather than re-executing the training step.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，每当我们想使用训练好的模型时，我们只需从`model.pkl`文件中重新加载其状态，而不是重新执行训练步骤。
- en: 'Step 2: Make an Individual Prediction from the Trained Model'
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 2：从训练模型中进行单独预测
- en: I am going to make a couple of assumptions in step 2 -
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我将在步骤 2 中做几个假设 -
- en: Consumers of the machine learning algorithm have a requirements to make predictions
    for individual patients rather than a batch of patients.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 机器学习算法的消费者有一个需求，就是对单个患者进行预测，而不是对一批患者进行预测。
- en: Those consumers wish to communicate with the algorithm using text-like values
    for the parameters (for example blood pressure = “NORMAL” or “HIGH” rather than
    their label encoded equivalents like 0 and 1.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 那些消费者希望使用类似文本的值（例如血压 = “正常”或“高”）来与算法进行通信，而不是它们的标签编码等效值（如 0 和 1）。
- en: Therefore, we will start by reviewing what the values are for all of the label
    encoded categorical features used as an input to the algorithm …
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们将从审查所有标签编码的类别特征的值开始，这些特征作为输入传递给算法……
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: And there we have it, a list of each categorical feature with the unique values
    that appear in the data and the corresponding numerical values as transformed
    by the `LabelEncoder()`.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，我们就得到了一个包含每个类别特征及其在数据中出现的唯一值和通过`LabelEncoder()`转换后的相应数值的列表。
- en: Armed with this knowledge we can provide a set of dictionaries that map the
    text-like values (e.g. “HIGH”, “LOW” etc.) into their encoded equivalents and
    then develop a simple function to make an individual predictions as follows …
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些信息，我们可以提供一组字典，将类似文本的值（例如“高”、“低”等）映射到它们的编码等效值，然后开发一个简单的函数来进行单独的预测，如下所示……
- en: This implementation can then be verified by invoking the function to make some
    predictions based on values from the original data so that we know what the outputs
    should be …
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 然后可以通过调用函数进行一些基于原始数据值的预测来验证这个实现，以便我们知道输出应该是什么……
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note that our `predict_drug` function does not need to train the model, rather
    it "rehydrates" the model that previously had its state saved by `pickle` into
    the `model.pkl` file and we can see from the output that the predictions for drug
    recommendation are correct.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们的`predict_drug`函数不需要训练模型，而是将先前通过`pickle`保存状态的模型“重新加载”到`model.pkl`文件中，我们可以从输出中看到，药物推荐的预测是正确的。
- en: 'Step 3: Develop a Web Service Wrapper'
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 3：开发一个 Web 服务包装器
- en: 'Everything is looking good so far but here is the major problem: clients or
    consumers of our machine learning algorithm must be written in the Python programming
    language and not only that, we must have the capability of changing and modifying
    the application.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 目前一切看起来都很好，但这里有一个主要问题：我们的机器学习算法的客户端或消费者必须用 Python 编程语言编写，不仅如此，我们还必须能够更改和修改应用程序。
- en: What if a 3rd party application wants to use and consume our algorithm and what
    if this 3rd party application is not written in Python? Perhaps it is written
    in Java, C#, JavaScript or some other non-Python language.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果第三方应用程序希望使用和消耗我们的算法，并且这个第三方应用程序不是用 Python 编写的怎么办？也许它是用 Java、C#、JavaScript
    或其他非 Python 语言编写的。
- en: This is where web services come in. A web service is a “wrapper” that receives
    requests from clients and consumers using http GET and http PUT commands, invokes
    the Python code and returns the result as an HTML response.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是 Web 服务发挥作用的地方。Web 服务是一个“封装器”，它接收来自客户端和消费者的 HTTP GET 和 HTTP PUT 请求，调用 Python
    代码并返回 HTML 响应。
- en: This means that the clients and callers only need to be able to formulate HTTP
    requests and nearly all programming languages and environments will have a way
    of doing this.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着客户端和调用者只需能够构造 HTTP 请求，几乎所有编程语言和环境都有实现这一点的方法。
- en: In the Python world there are several different approaches available but the
    one I have selected is to use `flask` to construct our web service wrapper.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 世界中，有几种不同的方法可供选择，但我选择的方式是使用 `flask` 构建我们的 Web 服务封装器。
- en: The code is not very complicated but it can be challenging to get VS Code configured
    to enable developers to debug a flask application. If you need a tutorial for
    this step please check out my article titled “How to Debug Flask Applications
    in VS Code” which can be found here — [https://towardsdatascience.com/how-to-debug-flask-applications-in-vs-code-c65c9bdbef21](https://towardsdatascience.com/how-to-debug-flask-applications-in-vs-code-c65c9bdbef21).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 代码本身并不复杂，但配置 VS Code 以使开发者能够调试 Flask 应用可能会有挑战。如果你需要这个步骤的教程，请查看我的文章《如何在 VS Code
    中调试 Flask 应用》，可以在这里找到——[https://towardsdatascience.com/how-to-debug-flask-applications-in-vs-code-c65c9bdbef21](https://towardsdatascience.com/how-to-debug-flask-applications-in-vs-code-c65c9bdbef21)。
- en: Here is the wrapper code for the web service …
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 Web 服务的封装器代码 …
- en: Start the VS Code IDE from the Anaconda Navigator page (or by starting and Anaconda
    Command Prompt and typing `code`). This will start VS Code with the conda base
    environment which is required to run and debug the flask application.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Anaconda Navigator 页面启动 VS Code IDE（或通过启动 Anaconda 命令提示符并输入 `code`）。这将启动带有
    Conda 基础环境的 VS Code，这是运行和调试 Flask 应用所必需的。
- en: The web service can be started from inside VS Code by clicking on “Run and Debug”
    and then selecting “Flask Launch and debug a Flask web application” -
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在 VS Code 中点击“运行和调试”然后选择“Flask 启动和调试 Flask Web 应用”来启动 Web 服务 -
- en: '![](../Images/996b565b247c8c94255815795a53f8be.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/996b565b247c8c94255815795a53f8be.png)'
- en: Image by Author
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: If everything has gone to plan the last message in the TERMINAL window should
    be `Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)` which indicates
    that your flask web application is up and running.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，TERMINAL 窗口中的最后一条消息应为 `Running on http://127.0.0.1:5000/ (Press CTRL+C
    to quit)`，这表示你的 Flask Web 应用已成功运行。
- en: You should now test you web service using one of these methods -
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你应该使用以下方法之一来测试你的 Web 服务 -
- en: Open a web browser and enter: [http://127.0.0.1:5000/drug?Age=60&Sex=F&BP=LOW&Cholesterol=HIGH&Na_to_K=20](http://127.0.0.1:5000/drug?Age=60&Sex=F&BP=LOW&Cholesterol=HIGH&Na_to_K=20)
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个网页浏览器并输入：[http://127.0.0.1:5000/drug?Age=60&Sex=F&BP=LOW&Cholesterol=HIGH&Na_to_K=20](http://127.0.0.1:5000/drug?Age=60&Sex=F&BP=LOW&Cholesterol=HIGH&Na_to_K=20)
- en: Open an anaconda command prompt and enter: `curl -X GET "http://127.0.0.1:5000/drug?Age=60&Sex=F&BP=LOW&Cholesterol=HIGH&Na_to_K=20"`
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Anaconda 命令提示符并输入：`curl -X GET "http://127.0.0.1:5000/drug?Age=60&Sex=F&BP=LOW&Cholesterol=HIGH&Na_to_K=20"`
- en: '![](../Images/cd1f7c0d6b463172e182083c84035586.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cd1f7c0d6b463172e182083c84035586.png)'
- en: Image by Author
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: If you want to find out more about developing `flask` applications and web services,
    these articles are a great place to start -
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于开发 `flask` 应用和 Web 服务的信息，这些文章是一个很好的起点 -
- en: '[https://programminghistorian.org/en/lessons/creating-apis-with-python-and-flask](https://programminghistorian.org/en/lessons/creating-apis-with-python-and-flask)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://programminghistorian.org/en/lessons/creating-apis-with-python-and-flask](https://programminghistorian.org/en/lessons/creating-apis-with-python-and-flask)'
- en: '[https://code.visualstudio.com/docs/python/tutorial-flask](https://code.visualstudio.com/docs/python/tutorial-flask)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://code.visualstudio.com/docs/python/tutorial-flask](https://code.visualstudio.com/docs/python/tutorial-flask)'
- en: 'Step 4: Deploy the Web Service to Microsoft Azure'
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第 4 步：将 Web 服务部署到 Microsoft Azure
- en: We now have a predictive machine learning algorithm that can predict drug prescriptions
    with 99% accuracy, we have a helper function that can make individual predictions
    and we have a web service wrapper that enables these components to be called from
    a browser or command line.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在有了一个预测性机器学习算法，可以以 99% 的准确率预测药物处方，我们有一个可以进行单独预测的辅助函数，并且我们有一个允许这些组件通过浏览器或命令行调用的
    Web 服务封装器。
- en: However all of this is still only callable from the development environment.
    The next stage is to deploy everything into the cloud so that clients can “consume”
    the web service over the public Internet.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这一切仍然只能在开发环境中调用。下一阶段是将所有内容部署到云中，以便客户可以通过公共互联网“访问” Web 服务。
- en: There are many different public services available for web app deployment including
    -
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多不同的公共服务可用于 Web 应用程序的部署，包括 -
- en: Google — [https://cloud.google.com/appengine/docs/standard/python3/building-app/writing-web-service](https://cloud.google.com/appengine/docs/standard/python3/building-app/writing-web-service)
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谷歌 — [https://cloud.google.com/appengine/docs/standard/python3/building-app/writing-web-service](https://cloud.google.com/appengine/docs/standard/python3/building-app/writing-web-service)
- en: Amazon Web Services — [https://medium.com/@rodkey/deploying-a-flask-application-on-aws-a72daba6bb80](https://medium.com/@rodkey/deploying-a-flask-application-on-aws-a72daba6bb80)
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊 Web 服务 — [https://medium.com/@rodkey/deploying-a-flask-application-on-aws-a72daba6bb80](https://medium.com/@rodkey/deploying-a-flask-application-on-aws-a72daba6bb80)
- en: Microsoft Azure — [https://medium.com/@nikovrdoljak/deploy-your-flask-app-on-azure-in-3-easy-steps-b2fe388a589e](https://medium.com/@nikovrdoljak/deploy-your-flask-app-on-azure-in-3-easy-steps-b2fe388a589e)
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft Azure — [https://medium.com/@nikovrdoljak/deploy-your-flask-app-on-azure-in-3-easy-steps-b2fe388a589e](https://medium.com/@nikovrdoljak/deploy-your-flask-app-on-azure-in-3-easy-steps-b2fe388a589e)
- en: I have chosen Azure because it is free (for an entry level account), easy-to-use,
    quick and fully integrated with VS Code which is my favourite development environment.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我选择了 Azure，因为它是免费的（对于入门级账户），易于使用，快速，并且与我最喜欢的开发环境 VS Code 完全集成。
- en: 'Step 4.1: Add the Azure App Service Extension to VS Code'
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 4.1：将 Azure App Service 扩展添加到 VS Code
- en: Switch tasks into VS Code, go to “Extensions” (Ctrl+Shft_X) and add in the “Azure
    App Service” extension. Once the extension is added you will see a new Azure icon
    in the Activity Bar -
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 切换到 VS Code，转到“扩展”（Ctrl+Shft_X），然后添加“Azure App Service”扩展。添加扩展后，您将在活动栏中看到一个新的
    Azure 图标 -
- en: '![](../Images/80c2bd9c142d71a0e2634af868fc9abd.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/80c2bd9c142d71a0e2634af868fc9abd.png)'
- en: Image by Author
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'Step 4.1: Create an Azure Account'
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 4.1：创建一个 Azure 账户
- en: You must have an account to begin deployments into the Azure cloud and you must
    provide credit card details during the registration process. However you will
    not be charged unless you specifically opt to move away from the free license.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须拥有一个账户才能开始在 Azure 云中进行部署，并且在注册过程中必须提供信用卡信息。然而，除非您特别选择离开免费许可证，否则不会收费。
- en: You can follow the instructions on this page — [https://azure.microsoft.com/en-gb/free/](https://azure.microsoft.com/en-gb/free/) to
    create your free Azure account via a browser, but the easiest way is to click
    on the new Azure icon in the Activity Bar and choose “Create a Free Azure Account”
    (or “Sign in to Azure” if you already have one) -
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按照此页面上的说明 — [https://azure.microsoft.com/en-gb/free/](https://azure.microsoft.com/en-gb/free/)
    通过浏览器创建您的免费 Azure 账户，但最简单的方法是点击活动栏中的新 Azure 图标，然后选择“创建免费 Azure 账户”（或者如果您已经有账户，则选择“登录
    Azure”） -
- en: '![](../Images/71950cb1d3f6718a7cf4561c2010929e.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/71950cb1d3f6718a7cf4561c2010929e.png)'
- en: Image by Author
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'Step 4.3: Create an Azure Web App'
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 4.3：创建一个 Azure Web 应用程序
- en: The next step is to create an Azure web app to host your application by clicking
    on the “+” sign in the “APP SERVICE” window. You will be prompted for a name for
    the app. The name will be used in the final URL and it must be unique but other
    than that the name is not particularly important.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是通过点击“APP SERVICE”窗口中的“+”符号来创建一个 Azure Web 应用程序以托管您的应用程序。系统会提示您输入应用程序的名称。这个名称将用于最终的
    URL，并且必须是唯一的，但除此之外，名称并不是特别重要。
- en: When prompted for a license type choose “Free Trial” — your web app will now
    be created and you are ready to deploy.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当系统提示您选择许可证类型时，选择“免费试用” — 您的 Web 应用程序现在将被创建，您可以开始部署。
- en: '![](../Images/c8c58d7388e1b88c86365cbe7f260215.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c8c58d7388e1b88c86365cbe7f260215.png)'
- en: Image by Author
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Step 4.4 Create a “requirements.txt” deployment file
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 4.4 创建一个“requirements.txt”部署文件
- en: Before you can deploy the app to Azure you must create a “requirements.txt”
    file in the same folder as your Flask web app that contains a list of all of the
    dependencies and libraries that Azure must install in order to run your application.
    This step is vital as if the libraries are not in the deployed environment the
    app will crash.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在您可以将应用程序部署到 Azure 之前，您必须在与 Flask Web 应用程序相同的文件夹中创建一个“requirements.txt”文件，该文件包含
    Azure 必须安装的所有依赖项和库的列表，以便运行您的应用程序。此步骤至关重要，因为如果库不在部署环境中，应用程序将崩溃。
- en: The contents of `requirements.txt` for our app are as follows -
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应用程序的 `requirements.txt` 文件内容如下 -
- en: '![](../Images/ee9a13c2ca197fb9eb3b68c16a259110.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ee9a13c2ca197fb9eb3b68c16a259110.png)'
- en: Image by Author
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Some points to note -
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 一些需要注意的点 -
- en: The library names must match exactly to what you would type if you were installing
    using pip, for example `pip install Flask`.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 库名称必须与使用 pip 安装时输入的名称完全一致，例如 `pip install Flask`。
- en: Note that `Flask` has an upper case "F". This is because Flask is unusual in
    being capitalised this way, usually libraries are all lower case.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意 `Flask` 的 “F” 是大写的。这是因为 Flask 采用了这种不寻常的大小写方式，通常库名都是小写的。
- en: '`sklearn` is required to execute the rehydrated `model.pkl`. Although sklearn
    and `DecisionTreeClassifier` are not referenced explicitly in the code, they are
    needed for `model.fit` so if `sklearn` is omitted the app will crash.'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sklearn` 是执行重新加载的 `model.pkl` 所必需的。虽然代码中没有明确引用 sklearn 和 `DecisionTreeClassifier`，但它们是
    `model.fit` 所需要的，因此如果省略 `sklearn`，应用程序将崩溃。'
- en: A reference to `pickle` is not required because this library is a part of the
    core Python installation. If you do include `pickle` the deployment will crash
    because you cannot execute `pip install pickle`.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`pickle` 的引用不是必需的，因为这个库是 Python 核心安装的一部分。如果你包含 `pickle`，部署将会崩溃，因为你不能执行 `pip
    install pickle`。'
- en: If you stick to these rules your deployment will work and any error messages
    are usually informative enough to enable the issues to be resolved with a bit
    of Internet research.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如果遵循这些规则，你的部署将会成功，任何错误信息通常足够详细，可以通过一些互联网搜索解决问题。
- en: Step 4.5 Deply Your App to Azure
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 4.5 将你的应用程序部署到 Azure
- en: If you have been following the steps so far you now have a Flask app inside
    VS Code. Your app code file will be called `app.py` and the application name is `app`.
    The Flask app has been tested on a local development web server.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你到目前为止一直在按照步骤操作，你现在应该在 VS Code 中有一个 Flask 应用程序。你的应用程序代码文件将叫做 `app.py`，应用程序名称为
    `app`。Flask 应用程序已经在本地开发网络服务器上进行了测试。
- en: You have installed the VS Code Azure App Extension and used it to create a Microsoft
    Azure free account and also to create an Azure web application.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 你已安装 VS Code Azure App 扩展，并使用它创建了一个 Microsoft Azure 免费账户和一个 Azure 网络应用程序。
- en: You should have your Flask application open in VS Code and you have everything
    in place to deploy your application into the cloud.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该在 VS Code 中打开你的 Flask 应用程序，并且你已准备好将应用程序部署到云端。
- en: This is achieved by simply clicking on the web app name next to the blue circle
    icon, then clicking on the cloud icon next to the “+” sign.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这通过简单地点击蓝色圆圈图标旁边的网页应用名称，然后点击 “+” 旁边的云图标来实现。
- en: When prompted, choose the following -
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 当被提示时，选择以下选项 -
- en: Select the default folder to deploy
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择默认文件夹进行部署
- en: Select the “Free Trial” subscription
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择 “Free Trial” 订阅
- en: Select the web app name you have created
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择你创建的网页应用名称
- en: If prompted to overwrite, select “Deploy”
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果提示覆盖，选择 “Deploy”
- en: When asked to “Always deploy …” select “Skip for now”
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当被问及 “Always deploy …” 时，选择 “Skip for now”
- en: When the deployment starts click on “output window”
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署开始时点击 “output window”
- en: Now sit back and make a coffee whilst the app deploys -
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 现在坐下来喝杯咖啡，同时应用程序正在部署中 -
- en: '![](../Images/86b70d20bccef4ca382a22b42c5a429c.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/86b70d20bccef4ca382a22b42c5a429c.png)'
- en: Image by Author
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: When the deployment is complete, click on “Browse Website” and you will be taken
    to the correct URL which will run `app.route("/")` function.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 部署完成后，点击 “Browse Website” 将带你到正确的 URL，该 URL 将运行 `app.route("/")` 函数。
- en: Simply add in the same URL parameters that we used to test the local deployment
    and you will see the output from a fully deployed web app! -
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 只需添加我们用于测试本地部署的相同 URL 参数，你将看到完全部署的网页应用的输出！ -
- en: '[https://graham-harrison68-web03.azurewebsites.net/drug?Age=60&Sex=F&BP=LOW&Cholesterol=HIGH&Na_to_K=20](https://graham-harrison68-web03.azurewebsites.net/drug?Age=60&Sex=F&BP=LOW&Cholesterol=HIGH&Na_to_K=20)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://graham-harrison68-web03.azurewebsites.net/drug?Age=60&Sex=F&BP=LOW&Cholesterol=HIGH&Na_to_K=20](https://graham-harrison68-web03.azurewebsites.net/drug?Age=60&Sex=F&BP=LOW&Cholesterol=HIGH&Na_to_K=20)'
- en: '![](../Images/055a1d456700ef8e3a689fca1b51a690.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/055a1d456700ef8e3a689fca1b51a690.png)'
- en: Image by Author
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'A point to note: after a while the azure app goes to sleep and the first call
    after this takes a very long time.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 一点需要注意的是：过一段时间，azure 应用会进入睡眠状态，第一次调用后需要很长时间。
- en: If you choose to upgrade to a paid-for Azure subscription there is an option
    to keep the app refreshed and “awake” but in the free subscription the sleep-related
    delay cannot be avoided as this subscription is intended for testing purposes
    and as such has a few limitations.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择升级到付费的Azure订阅，有一个选项可以保持应用程序刷新和“唤醒”，但在免费订阅中，睡眠相关的延迟无法避免，因为此订阅仅用于测试目的，因此有一些限制。
- en: 'Step 5: Building a Client Application to Consume the Azure-deployed Web Service'
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤5：构建一个客户端应用程序以使用Azure部署的网络服务
- en: At this point any programming language or environment that can invoke web requests
    can call the deployed web service with just a few lines of code.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，任何能够发起网络请求的编程语言或环境都可以用几行代码调用部署的网络服务。
- en: We did start by saying that non-Python environments like C#, JavaScript etc.
    can all be used but I will finish off this example by writing some code to call
    the deployed app from a Python client using `ipywidgets` -
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们一开始确实说过可以使用非Python环境如C#、JavaScript等，但我将通过写一些代码来演示如何使用`ipywidgets`从Python客户端调用部署的应用程序——
- en: '![](../Images/adc1b12ee500aa695ebed31699d08f88.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/adc1b12ee500aa695ebed31699d08f88.png)'
- en: Image by Author
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: If you click “Prescribe” with the default values, the recommendation should
    be for “drugC”.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你点击“Prescribe”并保持默认值，推荐的应该是“drugC”。
- en: Change the Age to 60 and Na to K to 20 and “DrugY” should be prescribed. Put
    the Age back to 47, Na to K back to 14 and change BP to “HIGH” and drugA should
    be prescribed.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 将年龄更改为60，Na更改为K为20，应该开具“DrugY”。将年龄改回47，Na改回K为14，并将BP更改为“HIGH”，应该开具drugA。
- en: These simple tests prove that the Azure-hosted web service using a decision
    tree based predictive machine learning algorithm is fully deployed to the public
    cloud, can be called by any development environment capable of executing a `http
    GET` command and is fully working end-to-end.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这些简单的测试证明，使用决策树预测机器学习算法的Azure托管网络服务已经完全部署到公共云中，任何能够执行`http GET`命令的开发环境都可以调用，并且从端到端完全工作。
- en: Conclusion
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: There are quite a few steps involved, but using readily available libraries
    and free tools including scikit-learn, pickle, flask, Microsoft Azure and ipywidgets
    we have constructed a fully working, publicly available cloud deployment of a
    machine learning algorithm and a fully functioning client to call and consume
    the web service and display the results.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这涉及到相当多的步骤，但通过使用现成的库和免费工具，包括scikit-learn、pickle、flask、Microsoft Azure和ipywidgets，我们构建了一个功能完全的、公开可用的机器学习算法云部署，以及一个功能完备的客户端来调用和使用该网络服务并显示结果。
- en: Thank you for reading!
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 感谢阅读！
- en: If you enjoyed reading this article, why not check out my other articles at [https://grahamharrison-86487.medium.com/](https://grahamharrison-86487.medium.com/)
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢阅读这篇文章，不妨查看我其他的文章：[https://grahamharrison-86487.medium.com/](https://grahamharrison-86487.medium.com/)
- en: Also, I would love to hear from you to get your thoughts on this piece, any
    of my other articles or anything else related to data science and data analytics.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我很乐意听取你对这篇文章、我其他的文章或任何与数据科学和数据分析相关的内容的看法。
- en: If you would like to get in touch to discuss any of these topics please look
    me up on LinkedIn — [https://www.linkedin.com/in/grahamharrison1](https://www.linkedin.com/in/grahamharrison1) or
    feel free to e-mail me at [GHarrison@lincolncollege.ac.uk](mailto:GHarrison@lincolncollege.ac.uk).
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望讨论这些主题，请在LinkedIn上查找我 —— [https://www.linkedin.com/in/grahamharrison1](https://www.linkedin.com/in/grahamharrison1)
    或随时通过电子邮件联系我：[GHarrison@lincolncollege.ac.uk](mailto:GHarrison@lincolncollege.ac.uk)。
- en: 'If you would like to support the author and 1000’s of others who contribute
    to article writing world-wide by subscribing, please use this link — [https://grahamharrison-86487.medium.com/membership](https://grahamharrison-86487.medium.com/membership).
    Note: the author will receive a proportion of the fees if you sign up using this
    link.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望支持作者和全球数千名为文章撰写做出贡献的人，请使用这个链接订阅 —— [https://grahamharrison-86487.medium.com/membership](https://grahamharrison-86487.medium.com/membership)。注意：如果你使用此链接注册，作者将从费用中获得一部分。
- en: '**[Graham Harrison](https://www.linkedin.com/in/grahamharrison1/?originalSubdomain=uk)**
    is Group Director of IT, Information Management & Projects for the Lincoln College
    Group where he has responsibility for all of the data and technology capabilities
    in the UK, Saudi Arabia and China. Graham is also the MD and founder of a data
    science consultancy called The Knowledge Ladder, committee member of the Lincolnshire
    Cyber Security Forum and Digital Ambassador for the Greater Lincolnshire and Rutland
    Branch of the Institute of Directors. Graham has recently completed academic research
    into the democratisation of data science and is passionate about delivering accessible,
    affordable and agile data science to all organisations regardless of size, sector
    or previous experience. Visit [https://www.theknowledgeladder.co.uk/](https://www.theknowledgeladder.co.uk/)
    and [https://www.youtube.com/watch?v=cFt03rny07Y](https://www.youtube.com/watch?v=cFt03rny07Y)
    for details.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**[格雷厄姆·哈里森](https://www.linkedin.com/in/grahamharrison1/?originalSubdomain=uk)**
    是林肯学院集团的信息技术、信息管理及项目组的总监，负责英国、沙特阿拉伯和中国的数据和技术能力。格雷厄姆还是数据科学咨询公司The Knowledge Ladder的董事总经理和创始人，林肯郡网络安全论坛的委员会成员，以及大林肯郡和拉特兰分支的董事学会数字大使。格雷厄姆最近完成了关于数据科学民主化的学术研究，并热衷于为所有组织提供可访问、负担得起且灵活的数据科学服务，无论其规模、行业或以前的经验如何。详情请访问
    [https://www.theknowledgeladder.co.uk/](https://www.theknowledgeladder.co.uk/)
    和 [https://www.youtube.com/watch?v=cFt03rny07Y](https://www.youtube.com/watch?v=cFt03rny07Y)。'
- en: '[Original](https://towardsdatascience.com/a-full-end-to-end-deployment-of-a-machine-learning-algorithm-into-a-live-production-environment-3d9971ade188).
    Reposted with permission.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/a-full-end-to-end-deployment-of-a-machine-learning-algorithm-into-a-live-production-environment-3d9971ade188)。转载已获许可。'
- en: More On This Topic
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[A Beginner''s Guide to End to End Machine Learning](https://www.kdnuggets.com/2021/12/beginner-guide-end-end-machine-learning.html)'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[初学者的端到端机器学习指南](https://www.kdnuggets.com/2021/12/beginner-guide-end-end-machine-learning.html)'
- en: '[Understanding Agent Environment in AI](https://www.kdnuggets.com/2022/05/understanding-agent-environment-ai.html)'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[理解AI中的代理环境](https://www.kdnuggets.com/2022/05/understanding-agent-environment-ai.html)'
- en: '[5 Best End-to-End Open Source MLOps Tools](https://www.kdnuggets.com/5-best-end-to-end-open-source-mlops-tools)'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5个最佳端到端开源MLOps工具](https://www.kdnuggets.com/5-best-end-to-end-open-source-mlops-tools)'
- en: '[A Simple to Implement End-to-End Project with HuggingFace](https://www.kdnuggets.com/a-simple-to-implement-end-to-end-project-with-huggingface)'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用HuggingFace实施的简单端到端项目](https://www.kdnuggets.com/a-simple-to-implement-end-to-end-project-with-huggingface)'
- en: '[7 End-to-End MLOps Platforms You Must Try in 2024](https://www.kdnuggets.com/7-end-to-end-mlops-platforms-you-must-try-in-2024)'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2024年必须尝试的7个端到端MLOps平台](https://www.kdnuggets.com/7-end-to-end-mlops-platforms-you-must-try-in-2024)'
- en: '[From Data Collection to Model Deployment: 6 Stages of a Data…](https://www.kdnuggets.com/2023/01/data-collection-model-deployment-6-stages-data-science-project.html)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[从数据收集到模型部署：数据科学项目的6个阶段…](https://www.kdnuggets.com/2023/01/data-collection-model-deployment-6-stages-data-science-project.html)'
