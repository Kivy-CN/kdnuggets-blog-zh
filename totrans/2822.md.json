["```py\nfrom joblib import dump, load                                                      \nimport numpy                                                                       \nfrom sklearn import svm                                                            \nfrom sklearn import datasets                                                       \n\ndef train():                                                                       \n    clf = svm.SVC()                                                                \n    X, y = datasets.load_iris(return_X_y=True)                                     \n    clf.fit(X, y)                                                                  \n    dump(clf, 'iris.joblib')                                                                                                                                          \n\ndef predict(data):                                                                 \n    clf = load('iris.joblib')                                                      \n    data = numpy.array(data).reshape(1, -1)                                        \n    prediction = clf.predict(data)                                                 \n    return {\"labels\": prediction.tolist()} \n```", "```py\nfrom joblib import dump, load                                                      \nimport numpy                                                                       \nfrom sklearn import svm                                                            \nfrom sklearn import datasets                                                       \nfrom webargs import fields, validate                                                                                                                                 \n\ndef train():                                                                       \n    clf = svm.SVC()                                                                \n    X, y = datasets.load_iris(return_X_y=True)                                     \n    clf.fit(X, y)                                                                  \n    dump(clf, 'iris.joblib')                                                                                                                                     \n\ndef predict(data):                                                              \n    clf = load('iris.joblib')                                                   \n    data = numpy.array(data).reshape(1, -1)                                     \n    prediction = clf.predict(data)                                              \n    return {\"labels\": prediction.tolist()}                                      \n\ndef get_predict_args():                                                         \n    args = {                                                                    \n        \"data\": fields.List(                                                    \n            fields.Float(),                                                     \n            required=True,                                                      \n            description=\"Data to make a prediction. The IRIS dataset expects \"  \n                        \"for values containing the Sepal Length, Sepal Width, \" \n                        \"Petal Length and Petal Width.\",                        \n            validate=validate.Length(equal=4),                                  \n        ),                                                                      \n    }                                                                           \n    return args\n```", "```py\nfrom distutils.core import setup                                                   \n\nsetup(                                                                             \n    name='test-iris-with-deepaas',                                                 \n    version='1.0',                                                                 \n    description='This is an SVM trained with the IRIS dataset',                    \n    author='Álvaro López',                                                         \n    author_email='aloga@ifca.unican.es',                                           \n    py_modules=\"iris-deepaas.py\",                                                          \n    dependencies=['joblib', 'scikit-learn'],                                       \n    entry_points={                                                                 \n        'deepaas.v2.model': ['iris=iris-deepaas'],                                 \n    }                                                                              \n) \n```", "```py\n$ virtualenv env --python=python3\n    (...)\n$ source env/bin/activate\n(env) $ pip3 install .\n    (...)\n(env) $ pip3 install deepaas\n    (...)\n(env) $ deepaas-run\n\n         ##         ###\n         ##       ######  ##\n     .#####   #####   #######.  .#####.\n    ##   ## ## //   ##  //  ##  ##   ##\n    ##. .##  ###  ###   // ###  ##   ##\n      ## ##    ####     ####    #####.\n              Hybrid-DataCloud  ##\n\nWelcome to the DEEPaaS API API endpoint. You can directly browse to the\nAPI documentation endpoint to check the API using the builtint Swagger UI\nor you can use any of our endpoints.\n\n    API documentation: http://127.0.0.1:5000/ui\n    API specification: http://127.0.0.1:5000/swagger.json\n          V2 endpoint: http://127.0.0.1:5000/v2\n\n-------------------------------------------------------------------------\n\n2020-02-04 13:10:50.027 21186 INFO deepaas [-] Starting DEEPaaS version 1.0.0\n2020-02-04 13:10:50.231 21186 INFO deepaas.api [-] Serving loaded V2 models: ['iris-deepaas']\n```", "```py\ncurl -s -X POST \"http://127.0.0.1:5000/v2/models/iris-deepaas/train/\" -H  \"accept: application/json\" | python -mjson.tool\n{\n    \"date\": \"2020-02-04 13:14:49.655061\",\n    \"uuid\": \"16a3141af5674a45b61cba124443c18f\",\n    \"status\": \"running\"\n}\n```", "```py\ncurl -s -X GET \"http://127.0.0.1:5000/v2/models/iris-deepaas/train/\" | python -mjson.tool\n[\n    {\n        \"date\": \"2020-02-04 13:14:49.655061\",\n        \"uuid\": \"16a3141af5674a45b61cba124443c18f\",\n        \"status\": \"done\"\n    }\n]\n```", "```py\ncurl -s -X POST \"http://127.0.0.1:5000/v2/models/iris-deepaas/predict/?data=5.1&data=3.5&data=1.4&data=0.2\" -H  \"accept: application/json\" | python -mjson.tool\n{\n    \"predictions\": {\n        \"labels\": [\n            0\n        ]\n    },\n    \"status\": \"OK\"\n}\n```"]