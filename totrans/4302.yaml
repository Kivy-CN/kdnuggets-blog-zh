- en: Natural Language Processing Pipelines, Explained
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2021/03/natural-language-processing-pipelines-explained.html](https://www.kdnuggets.com/2021/03/natural-language-processing-pipelines-explained.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Ram Tavva](https://www.linkedin.com/in/ram-tavva/), Senior Data Scientist,
    Director at ExcelR Solutions**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../Images/afd1ffa1e75d2918803dbc264e084524.png)'
  prefs: []
  type: TYPE_IMG
- en: Introduction
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Computers are best at dealing with structured datasets like spreadsheets and
    database tables. But we as humans hardly communicate in that way, most of our
    communications are in unstructured format - sentence, words, speech, and others,
    which is irrelevant to computers.
  prefs: []
  type: TYPE_NORMAL
- en: That’s unfortunate and tons of data present on the database are unstructured.
    But have you ever thought about how computers deal with unstructured data?
  prefs: []
  type: TYPE_NORMAL
- en: Yes, there are many solutions to this problem, but NLP is a game-changer as
    always.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s learn more about NLP in detail...
  prefs: []
  type: TYPE_NORMAL
- en: What is NLP?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: NLP stands for [**Natural Language Processing**](https://www.excelr.com/blog/data-science/natural-language-processing/implementation-of-bag-of-words-using-python)
    that automatically manipulates the natural language, like speech and text in apps
    and software.
  prefs: []
  type: TYPE_NORMAL
- en: Speech can be anything like text that the algorithms take as the input, measures
    the accuracy, runs it through self and semi-supervised models, and gives us the
    output that we are looking forward to either in speech or text after input data.
  prefs: []
  type: TYPE_NORMAL
- en: NLP is one of the most sought-after techniques that makes communication easier
    between humans and computers. If you use windows, there is Microsoft Cortana for
    you, and if you use macOS, Siri is your virtual assistant.
  prefs: []
  type: TYPE_NORMAL
- en: 'The best part is even the search engine comes with a virtual assistant. Example:
    Google Search Engine.'
  prefs: []
  type: TYPE_NORMAL
- en: With NLP, you can type everything you would like to search, or you can click
    on the mic option and say, and you get the results you want to have. See how NLP
    is making communication easier between humans and computers. Isn’t it amazing
    when you see it?
  prefs: []
  type: TYPE_NORMAL
- en: Whether you want to know the weather conditions or breaking news on the internet,
    or roadmaps to your weekend destination NLP brings you everything you demand.
  prefs: []
  type: TYPE_NORMAL
- en: Natural Language Processing Pipelines (NLP Pipelines)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you call NLP on a text or voice, it converts the whole data into strings,
    and then the prime string undergoes multiple steps (the process called processing
    pipeline.) It uses trained pipelines to supervise your input data and reconstruct
    the whole string depending on voice tone or sentence length.
  prefs: []
  type: TYPE_NORMAL
- en: For each pipeline, the component returns to the main string. Then passes on
    to the next components. The capabilities and efficiencies depend upon the components,
    their models, and training.
  prefs: []
  type: TYPE_NORMAL
- en: How NLP Makes Communication Easy Between Humans and Computers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: NLP uses Language Processing Pipelines to read, decipher and understand human
    languages. These pipelines consist of six prime processes. That breaks the whole
    voice or text into small chunks, reconstructs it, analyzes, and processes it to
    bring us the most relevant data from the Search Engine Result Page.
  prefs: []
  type: TYPE_NORMAL
- en: Here are 6 Inside Steps in NLP Pipelines To Help Computer To Understand Human
    Language
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Sentence Segmentation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you have the paragraph(s) to approach, the best way to proceed is to go
    with one sentence at a time. It reduces the complexity and simplifies the process,
    even gets you the most accurate results. Computers never understand language the
    way humans do, but they can always do a lot if you approach them in the right
    way.
  prefs: []
  type: TYPE_NORMAL
- en: For example, consider the above paragraph. Then, your next step would be breaking
    the paragraph into single sentences.
  prefs: []
  type: TYPE_NORMAL
- en: When you have the paragraph(s) to approach, the best way to proceed is to go
    with one sentence at a time.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It reduces the complexity and simplifies the process, even gets you the most
    accurate results.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Computers never understand language the way humans do, but they can always do
    a lot if you approach them in the right way.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: When you have paragraph(s) to approach, the best way to proceed is to go with
    one sentence at a time.
  prefs: []
  type: TYPE_NORMAL
- en: It reduces the complexity and simplifies the process, even gets you the most
    accurate results.
  prefs: []
  type: TYPE_NORMAL
- en: Computers never understand language the way humans do, but they can always do
    a lot if you approach them in the right way.
  prefs: []
  type: TYPE_NORMAL
- en: Word Tokenization
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tokenization is the process of breaking a phrase, sentence, paragraph, or entire
    documents into the smallest unit, such as individual words or terms. And each
    of these small units is known as tokens.
  prefs: []
  type: TYPE_NORMAL
- en: These tokens could be words, numbers, or punctuation marks. Based on the word’s
    boundary - ending point of the word. Or the beginning of the next word. It is
    also the first step for stemming and lemmatization.
  prefs: []
  type: TYPE_NORMAL
- en: This process is crucial because the meaning of the word gets easily interpreted
    through analyzing the words present in the text.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s take an example:'
  prefs: []
  type: TYPE_NORMAL
- en: That dog is a husky breed.
  prefs: []
  type: TYPE_NORMAL
- en: When you tokenize the whole sentence, the answer you get is `[‘That’, ‘dog’,
    ‘is’, a, ‘husky’, ‘breed’]`.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are numerous ways you can do this, but we can use this tokenized form
    to:'
  prefs: []
  type: TYPE_NORMAL
- en: Count the number of words in the sentence.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Also, you can measure the frequency of the repeated words.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Natural Language Toolkit (NLTK) is a Python library for symbolic and statistical
    NLP.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs: []
  type: TYPE_NORMAL
- en: '`[‘That dog is a husky breed.’, ‘They are intelligent and independent.’]`'
  prefs: []
  type: TYPE_NORMAL
- en: Parts of Speech Prediction For Each Token
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In a part of the speech, we have to consider each token. And then, try to figure
    out different parts of the speech - whether the tokens belong to nouns, pronouns,
    verbs, adjectives, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: All these help to know which sentence we all are talking about.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s knock out some quick vocabulary:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Corpus:** Body of text, singular. Corpora are the plural of this.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Lexicon:** Words and their meanings.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Token:** Each “entity” that is a part of whatever was split up based on rules.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs: []
  type: TYPE_NORMAL
- en: '`[(''Everything'', ''NN''), (''is'', ''VBZ''), (''all'', ''DT''),(''about'',
    ''IN''), (''money'', ''NN''), (''.'', ''.'')]`'
  prefs: []
  type: TYPE_NORMAL
- en: Text Lemmatization
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: English is also one of the languages where we can use various forms of base
    words. When working on the computer, it can understand that these words are used
    for the same concepts when there are multiple words in the sentences having the
    same base words. The process is what we call lemmatization in NLP.
  prefs: []
  type: TYPE_NORMAL
- en: It goes to the root level to find out the base form of all the available words.
    They have ordinary rules to handle the words, and most of us are unaware of them.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../Images/9fe4a7690354d7277fa58b51805a62a3.png)'
  prefs: []
  type: TYPE_IMG
- en: Identifying Stop Words
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you finish the lemmatization, the next step is to identify each word in
    the sentence. English has a lot of filler words that don’t add any meaning but
    weakens the sentence. It’s always better to omit them because they appear more
    frequently in the sentence.
  prefs: []
  type: TYPE_NORMAL
- en: Most data scientists remove these words before running into further analysis.
    The basic algorithms to identify the stop words by checking a list of known stop
    words as there is no standard rule for stop words.
  prefs: []
  type: TYPE_NORMAL
- en: 'One example that will help you understand identifying stop words better is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Tokenize Texts With Stop Words:'
  prefs: []
  type: TYPE_NORMAL
- en: '`[‘Oh’, ‘man’,’,’ ‘this’, ‘is’, ‘pretty’, ‘cool’, ‘.’, ‘We’, ‘will’, ‘do’,
    ‘more’, ‘such’, ’things’, ‘.’]`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Tokenize Texts Without Stop Words:'
  prefs: []
  type: TYPE_NORMAL
- en: '`[‘Oh’, ‘man’, ’,’ ‘pretty’, ‘cool’, ‘.’, ‘We’, ’things’, ‘.’]`'
  prefs: []
  type: TYPE_NORMAL
- en: Dependency Parsing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Parsing is divided into three prime categories further. And each class is different
    from the others. They are part of speech tagging, dependency parsing, and constituency
    phrasing.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Part-Of-Speech (POS) is mainly for assigning different labels. It is what
    we call POS tags. These tags say about part of the speech of the words in a sentence.
    Whereas the dependency phrasing case: analyzes the grammatical structure of the
    sentence. Based on the dependencies in the words of the sentences.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Whereas in constituency parsing: the sentence breakdown into sub-phrases. And
    these belong to a specific category like noun phrase (NP) and verb phrase (VP).'
  prefs: []
  type: TYPE_NORMAL
- en: Final Thoughts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this blog, you learned briefly about how NLP pipelines help computers understand
    human languages using various NLP processes.
  prefs: []
  type: TYPE_NORMAL
- en: Starting from NLP, what are language processing pipelines, how NLP makes communication
    easier between humans? And six insiders involved in NLP Pipelines.
  prefs: []
  type: TYPE_NORMAL
- en: The six steps involved in NLP pipelines are - sentence segmentation, word tokenization,
    part of speech for each token. Text lemmatization, identifying stop words, and
    dependency parsing.
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Ram Tavva](https://www.linkedin.com/in/ram-tavva/)** is Senior Data
    Scientist, Director at ExcelR Solutions.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[6 NLP Techniques Every Data Scientist Should Know](/2021/02/6-nlp-techniques.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using NLP to improve your Resume](/2021/02/nlp-improve-resume.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Hugging Face Transformers Package – What Is It and How To Use It](/2021/02/hugging-face-transformer-basics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Natural Language Processing Key Terms, Explained](https://www.kdnuggets.com/2017/02/natural-language-processing-key-terms-explained.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[N-gram Language Modeling in Natural Language Processing](https://www.kdnuggets.com/2022/06/ngram-language-modeling-natural-language-processing.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data Representation for Natural Language Processing Tasks](https://www.kdnuggets.com/2018/11/data-representation-natural-language-processing.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Transfer Learning for Image Recognition and Natural Language Processing](https://www.kdnuggets.com/2022/01/transfer-learning-image-recognition-natural-language-processing.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Start Using Natural Language Processing With PyTorch](https://www.kdnuggets.com/2022/04/start-natural-language-processing-pytorch.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Gentle Introduction to Natural Language Processing](https://www.kdnuggets.com/2022/06/gentle-introduction-natural-language-processing.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
