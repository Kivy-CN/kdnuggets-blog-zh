- en: 'Dask and Pandas and XGBoost: Playing nicely between distributed systems'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Dask 和 Pandas 和 XGBoost：在分布式系统之间良好配合
- en: 原文：[https://www.kdnuggets.com/2017/04/dask-pandas-xgboost-playing-nicely-distributed-systems.html](https://www.kdnuggets.com/2017/04/dask-pandas-xgboost-playing-nicely-distributed-systems.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2017/04/dask-pandas-xgboost-playing-nicely-distributed-systems.html](https://www.kdnuggets.com/2017/04/dask-pandas-xgboost-playing-nicely-distributed-systems.html)
- en: '**By Matthew Rocklin, Continuum Analytics.**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者：Matthew Rocklin，Continuum Analytics。**'
- en: '*This work is supported by [Continuum Analytics](http://continuum.io/) the
    [XDATA Program](https://www.darpa.mil/program/XDATA) and the Data Driven Discovery
    Initiative from the [Moore Foundation](https://www.moore.org/)*'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*这项工作得到了[Continuum Analytics](http://continuum.io/)、[XDATA计划](https://www.darpa.mil/program/XDATA)和[摩尔基金会](https://www.moore.org/)的数据驱动发现计划的支持*'
- en: '**Editor''s note:** For an introduction to Dask, consider reading [Introducing
    Dask for Parallel Programming: An Interview with Project Lead Developer](/2016/09/introducing-dask-parallel-programming.html).
    To read more about the most recent release, see [Dask Release 0.14.1](http://matthewrocklin.com/blog/work/2017/03/23/dask-0.14.1).'
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**编辑注：** 如果你想了解 Dask 的介绍，可以阅读[《介绍 Dask 的并行编程：与项目首席开发者的访谈》](/2016/09/introducing-dask-parallel-programming.html)。要了解最新发布的更多信息，请参见[Dask
    0.14.1 版本](http://matthewrocklin.com/blog/work/2017/03/23/dask-0.14.1)。'
- en: Summary
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结
- en: This post talks about distributing Pandas Dataframes with Dask and then handing
    them over to distributed XGBoost for training.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本文讨论了如何使用 Dask 分发 Pandas DataFrame，然后将它们交给分布式 XGBoost 进行训练。
- en: More generally it discusses the value of launching multiple distributed systems
    in the same shared-memory processes and smoothly handing data back and forth between
    them.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 更一般地说，它讨论了在相同共享内存进程中启动多个分布式系统的价值，并在它们之间顺利地交接数据。
- en: '[Notebook](https://gist.github.com/mrocklin/3696fe2398dc7152c66bf593a674e4d9)'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[笔记本](https://gist.github.com/mrocklin/3696fe2398dc7152c66bf593a674e4d9)'
- en: '[Screencast](https://youtu.be/Cc4E-PdDSro)'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[录屏](https://youtu.be/Cc4E-PdDSro)'
- en: '[Github issue](https://github.com/dmlc/xgboost/issues/2032)'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Github 问题](https://github.com/dmlc/xgboost/issues/2032)'
- en: '![Dask](../Images/0b8634648f8ce3dace49e6acf212ca23.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![Dask](../Images/0b8634648f8ce3dace49e6acf212ca23.png)'
- en: Introduction
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 引言
- en: XGBoost is a well-loved library for a popular class of machine learning algorithms,
    gradient boosted trees. It is used widely in business and is one of the most popular
    solutions in Kaggle competitions. For larger datasets or faster training, XGBoost
    also comes with its own distributed computing system that lets it scale to multiple
    machines on a cluster. Fantastic. Distributed gradient boosted trees are in high
    demand.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: XGBoost是一个深受喜爱的库，用于一种流行的机器学习算法类别——梯度提升树。它在商业中广泛使用，并且是Kaggle竞赛中最受欢迎的解决方案之一。对于更大的数据集或更快的训练，XGBoost还配备了自己的分布式计算系统，可以扩展到集群中的多个机器上。太棒了。分布式梯度提升树需求量很大。
- en: 'However before we can use distributed XGBoost we need to do three things:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在我们能够使用分布式 XGBoost 之前，我们需要做三件事情：
- en: Prepare and clean our possibly large data, probably with a lot of Pandas wrangling
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备和清理我们可能很大的数据，可能需要大量的 Pandas 数据处理
- en: Set up XGBoost master and workers
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置 XGBoost 主节点和工作节点
- en: Hand data our cleaned data from a bunch of distributed Pandas dataframes to
    XGBoost workers across our cluster
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将我们的清理后的数据从一堆分布式 Pandas DataFrame 传递给集群中的 XGBoost 工作节点
- en: This ends up being surprisingly easy. This blogpost gives a quick example using
    Dask.dataframe to do distributed Pandas data wrangling, then using a new [dask-xgboost](https://github.com/dask/dask-xgboost)
    package to setup an XGBoost cluster inside the Dask cluster and perform the handoff.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这实际上非常简单。这篇博客文章提供了一个快速示例，使用 Dask.dataframe 进行分布式 Pandas 数据处理，然后使用新的[dask-xgboost](https://github.com/dask/dask-xgboost)包在
    Dask 集群内设置 XGBoost 集群并进行交接。
- en: After this example we’ll talk about the general design and what this means for
    other distributed systems.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例之后，我们将讨论一般设计及其对其他分布式系统的意义。
- en: Example
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: We have a ten-node cluster with eight cores each (`m4.2xlarges` on EC2)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个包含十个节点的集群，每个节点有八个核心（`m4.2xlarges` 在 EC2 上）
- en: 'We load the Airlines dataset using dask.dataframe (just a bunch of Pandas dataframes
    spread across a cluster) and do a bit of preprocessing:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 dask.dataframe 加载 Airlines 数据集（只是一堆分布在集群中的 Pandas DataFrame），并进行一些预处理：
- en: 'This loaded a few hundred pandas dataframes from CSV data on S3\. We then had
    to downsample because how we are going to use XGBoost in the future seems to require
    a lot of RAM. I am not an XGBoost expert. Please forgive my ignorance here. At
    the end we have two dataframes:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这从 S3 上的 CSV 数据中加载了几百个 pandas 数据框。我们随后不得不进行下采样，因为未来使用 XGBoost 的方式似乎需要大量的 RAM。我不是
    XGBoost 专家，请原谅我的无知。最后我们有两个数据框：
- en: '`df`: Data from which we will learn if flights are delayed'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`df`: 我们将从中学习航班是否延误的数据'
- en: '`is_delayed`: Whether or not those flights were delayed.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`is_delayed`: 这些航班是否延误。'
- en: Data scientists familiar with Pandas will probably be familiar with the code
    above. Dask.dataframe is *very* similar to Pandas, but operates on a cluster.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 熟悉 Pandas 的数据科学家可能会对上述代码感到熟悉。Dask.dataframe 与 Pandas *非常* 相似，但它在集群上运行。
- en: '![DF head](../Images/bb4d687a932ec89c5649e823836e6425.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![DF head](../Images/bb4d687a932ec89c5649e823836e6425.png)'
- en: Categorize and One Hot Encode
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分类和独热编码
- en: XGBoost doesn’t want to work with text data like destination=”LAX”. Instead
    we create new indicator columns for each of the known airports and carriers. This
    expands our data into many boolean columns. Fortunately Dask.dataframe has convenience
    functions for all of this baked in (thank you Pandas!)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: XGBoost 不愿意处理像 destination=”LAX” 这样的文本数据。相反，我们为每个已知的机场和航空公司创建新的指示器列。这将我们的数据扩展为许多布尔列。幸运的是，Dask.dataframe
    有所有这些便利功能（谢谢 Pandas！）
- en: This expands our data out considerably, but makes it easier to train on.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这大大扩展了我们的数据，但使得训练变得更容易。
- en: Split and Train
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 拆分和训练
- en: Great, now we’re ready to split our distributed dataframes
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 很好，现在我们准备拆分我们的分布式数据框
- en: Start up a distributed XGBoost instance, and train on this data
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 启动一个分布式 XGBoost 实例，并在这些数据上进行训练
- en: Great, so we were able to train an XGBoost model on this data in about a minute
    using our ten machines. What we get back is just a plain XGBoost Booster object.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 很好，我们能够在约一分钟内使用我们的十台机器在这些数据上训练一个 XGBoost 模型。我们得到的只是一个普通的 XGBoost Booster 对象。
- en: We could use this on normal Pandas data locally
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在本地使用普通的 Pandas 数据
- en: Of we can use `dask-xgboost` again to train on our distributed holdout data,
    getting back another Dask series.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以再次使用 `dask-xgboost` 来训练我们的分布式保留数据，得到另一个 Dask 系列。
- en: Evaluate
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评估
- en: We can bring these predictions to the local process and use normal Scikit-learn
    operations to evaluate the results.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将这些预测带到本地进程，并使用普通的 Scikit-learn 操作来评估结果。
- en: '![](../Images/e57f05381a23402623b5ec9a7531cee7.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e57f05381a23402623b5ec9a7531cee7.png)'
- en: We might want to play with our parameters above or try different data to improve
    our solution. The point here isn’t that we predicted airline delays well, it was
    that if you are a data scientist who knows Pandas and XGBoost, everything we did
    above seemed *pretty familiar*. There wasn’t a whole lot of new material in the
    example above. We’re using the same tools as before, just at a larger scale.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能想要调整上述参数或尝试不同的数据来改进我们的解决方案。关键不是我们是否准确预测了航班延误，而是如果你是一个了解 Pandas 和 XGBoost
    的数据科学家，上述的操作对你来说*相当熟悉*。在上述示例中没有太多新的材料。我们使用的工具和之前一样，只是规模更大。
- en: Analysis
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分析
- en: OK, now that we’ve demonstrated that this works lets talk a bit about what just
    happened and what that means generally for cooperation between distributed services.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在我们已经展示了这如何工作，让我们稍微讨论一下刚刚发生了什么，以及这对分布式服务之间合作的总体意义。
- en: What dask-xgboost does
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: dask-xgboost 的功能
- en: The [dask-xgboost](https://github.com/dask/dask-xgboost) project is pretty small
    and pretty simple (200 TLOC). Given a Dask cluster of one central scheduler and
    several distributed workers it starts up an XGBoost scheduler in the same process
    running the Dask scheduler and starts up an XGBoost worker within each of the
    Dask workers. They share the same physical processes and memory spaces. Dask was
    built to support this kind of situation, so this is relatively easy.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[dask-xgboost](https://github.com/dask/dask-xgboost) 项目相当小而且简单（200 TLOC）。在一个中央调度器和几个分布式工作节点的
    Dask 集群中，它在运行 Dask 调度器的相同进程中启动一个 XGBoost 调度器，并在每个 Dask 工作节点中启动一个 XGBoost 工作节点。它们共享相同的物理进程和内存空间。Dask
    被构建来支持这种情况，因此这相对简单。'
- en: Then we ask the Dask.dataframe to fully materialize in RAM and we ask where
    all of the constituent Pandas dataframes live. We tell each Dask worker to give
    all of the Pandas dataframes that it has to its local XGBoost worker and then
    just let XGBoost do its thing. Dask doesn’t power XGBoost, it’s just sets it up,
    gives it data, and lets it do it’s work in the background.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们要求 Dask.dataframe 完全在 RAM 中生成，并询问所有组成的 Pandas 数据框所在的位置。我们告诉每个 Dask 工作节点将其拥有的所有
    Pandas 数据框传递给其本地的 XGBoost 工作节点，然后就让 XGBoost 自己处理。Dask 不为 XGBoost 提供动力，它只是设置、提供数据，并让
    XGBoost 在后台完成其工作。
- en: People often ask what machine learning capabilities Dask provides, how they
    compare with other distributed machine learning libraries like H2O or Spark’s
    MLLib. For gradient boosted trees the 200-line dask-xgboost package is the answer.
    Dask has no need to make such an algorithm because XGBoost already exists, works
    well and provides Dask users with a fully featured and efficient solution.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 人们常常问 Dask 提供了哪些机器学习功能，它们与 H2O 或 Spark 的 MLLib 等其他分布式机器学习库相比如何。对于梯度提升树，200 行的
    dask-xgboost 包就是答案。Dask 不需要自己实现这样的算法，因为 XGBoost 已经存在，效果很好，并且为 Dask 用户提供了一个功能全面且高效的解决方案。
- en: Because both Dask and XGBoost can live in the same Python process they can share
    bytes between each other without cost, can monitor each other, etc.. These two
    distributed systems co-exist together in multiple processes in the same way that
    NumPy and Pandas operate together within a single process. Sharing distributed
    processes with multiple systems can be really beneficial if you want to use multiple
    specialized services easily and avoid large monolithic frameworks.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Dask 和 XGBoost 都可以在相同的 Python 进程中运行，它们可以无成本地共享字节、互相监控等。这两个分布式系统以 NumPy 和
    Pandas 在单个进程中协同工作的方式，在多个进程中共存。如果你希望轻松使用多个专门化服务，并避免大型单体框架，那么共享分布式进程与多个系统是非常有益的。
- en: Connecting to Other distributed systems
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 连接到其他分布式系统
- en: A while ago I wrote [a similar blogpost](http://matthewrocklin.com/blog/work/2017/02/11/dask-tensorflow)
    about hosting TensorFlow from Dask in exactly the same way that we’ve done here.
    It was similarly easy to setup TensorFlow alongside Dask, feed it data, and let
    TensorFlow do its thing.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 前一段时间，我写了 [一篇类似的博客文章](http://matthewrocklin.com/blog/work/2017/02/11/dask-tensorflow)，讲述了如何以与这里相同的方式托管
    TensorFlow。设置 TensorFlow 与 Dask 并排运行，向其提供数据，并让 TensorFlow 处理事情也是非常简单的。
- en: 'Generally speaking this “serve other libraries” approach is how Dask operates
    when possible. We’re only able to cover the breadth of functionality that we do
    today because we lean heavily on the existing open source ecosystem. Dask.arrays
    use Numpy arrays, Dask.dataframes use Pandas, and now the answer to gradient boosted
    trees with Dask is just to make it really really easy to use distributed XGBoost.
    Ta da! We get a fully featured solution that is maintained by other devoted developers,
    and the entire connection process was done over a weekend (see [dmlc/xgboost #2032](https://github.com/dmlc/xgboost/issues/2032)
    for details).'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '一般来说，这种“服务其他库”的方法是 Dask 在可能的情况下的操作方式。我们之所以能够覆盖今天的功能范围，是因为我们大量依赖现有的开源生态系统。Dask.arrays
    使用 Numpy 数组，Dask.dataframes 使用 Pandas，现在 Dask 对梯度提升树的答案就是使分布式 XGBoost 的使用变得非常非常简单。瞧！我们获得了一个由其他专注的开发者维护的功能全面的解决方案，整个连接过程是在一个周末完成的（详情见
    [dmlc/xgboost #2032](https://github.com/dmlc/xgboost/issues/2032)）。'
- en: Since this has come out we’ve had requests to support other distributed systems
    like [Elemental](http://libelemental.org/) and to do general hand-offs to MPI
    computations. If we’re able to start both systems with the same set of processes
    then all of this is pretty doable. Many of the challenges of inter-system collaboration
    go away when you can hand numpy arrays between the workers of one system to the
    workers of the other system within the same processes.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 自从这篇文章发布以来，我们收到了一些要求，希望支持其他分布式系统，如 [Elemental](http://libelemental.org/)，以及进行通用的
    MPI 计算传递。如果我们能够用相同的进程集启动这两个系统，那么所有这些都是相当可行的。当你可以在相同的进程中将 numpy 数组从一个系统的工作节点传递到另一个系统的工作节点时，许多跨系统协作的挑战都会消失。
- en: Acknowledgements
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 致谢
- en: Thanks to [Tianqi Chen](http://homes.cs.washington.edu/~tqchen/) and [Olivier
    Grisel](http://ogrisel.com/) for their help when [building and testing](https://github.com/dmlc/xgboost/issues/2032)
    `dask-xgboost`. Thanks to [Will Warner](https://github.com/electronwill) for his
    help in editing this post.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢 [Tianqi Chen](http://homes.cs.washington.edu/~tqchen/) 和 [Olivier Grisel](http://ogrisel.com/)
    在 [构建和测试](https://github.com/dmlc/xgboost/issues/2032) `dask-xgboost` 时的帮助。感谢
    [Will Warner](https://github.com/electronwill) 编辑这篇文章的帮助。
- en: '**Bio: [Matthew Rocklin](http://matthewrocklin.com/)** is an open source software
    developer focusing on efficient computation and parallel computing, primarily
    within the Python ecosystem. He has contributed to many of the PyData libraries
    and today works on Dask a framework for parallel computing. Matthew holds a PhD
    in computer science from the University of Chicago where he focused on numerical
    linear algebra, task scheduling, and computer algebra. Matthew lives in Brooklyn,
    NY and is employed by [**Continuum Analytics**](https://www.continuum.io/).'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介： [马修·罗克林](http://matthewrocklin.com/)** 是一名开源软件开发者，专注于高效计算和并行计算，主要在 Python
    生态系统内。他对许多 PyData 库做出了贡献，目前正在开发 Dask，一个并行计算框架。马修在芝加哥大学获得计算机科学博士学位，专注于数值线性代数、任务调度和计算代数。马修现居纽约布鲁克林，并受雇于
    [**Continuum Analytics**](https://www.continuum.io/)。'
- en: '[Original](http://matthewrocklin.com/blog/work/2017/03/28/dask-xgboost). Reposted
    with permission.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](http://matthewrocklin.com/blog/work/2017/03/28/dask-xgboost)。经许可转载。'
- en: '**Related:**'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Introducing Dask for Parallel Programming: An Interview with Project Lead
    Developer](/2016/09/introducing-dask-parallel-programming.html)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[介绍 Dask 并行编程：与项目首席开发者的访谈](/2016/09/introducing-dask-parallel-programming.html)'
- en: '[XGBoost: Implementing the Winningest Kaggle Algorithm in Spark and Flink](/2016/03/xgboost-implementing-winningest-kaggle-algorithm-spark-flink.html)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[XGBoost：在 Spark 和 Flink 中实现最获胜的 Kaggle 算法](/2016/03/xgboost-implementing-winningest-kaggle-algorithm-spark-flink.html)'
- en: '[A Beginner’s Guide to Tweet Analytics with Pandas](/2017/03/beginners-guide-tweet-analytics-pandas.html)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[初学者 Pandas 推文分析指南](/2017/03/beginners-guide-tweet-analytics-pandas.html)'
- en: '* * *'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析水平'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT'
- en: '* * *'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[WTF is the Difference Between GBM and XGBoost?](https://www.kdnuggets.com/wtf-is-the-difference-between-gbm-and-xgboost)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GBM 和 XGBoost 有什么区别？](https://www.kdnuggets.com/wtf-is-the-difference-between-gbm-and-xgboost)'
- en: '[How to Speed Up XGBoost Model Training](https://www.kdnuggets.com/2021/12/speed-xgboost-model-training.html)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何加速 XGBoost 模型训练](https://www.kdnuggets.com/2021/12/speed-xgboost-model-training.html)'
- en: '[What are the Assumptions of XGBoost?](https://www.kdnuggets.com/2022/08/assumptions-xgboost.html)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[XGBoost 的假设是什么？](https://www.kdnuggets.com/2022/08/assumptions-xgboost.html)'
- en: '[Tuning XGBoost Hyperparameters](https://www.kdnuggets.com/2022/08/tuning-xgboost-hyperparameters.html)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[调优 XGBoost 超参数](https://www.kdnuggets.com/2022/08/tuning-xgboost-hyperparameters.html)'
- en: '[Leveraging XGBoost for Time-Series Forecasting](https://www.kdnuggets.com/2023/08/leveraging-xgboost-timeseries-forecasting.html)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[利用 XGBoost 进行时间序列预测](https://www.kdnuggets.com/2023/08/leveraging-xgboost-timeseries-forecasting.html)'
- en: '[KDnuggets™ News 22:n07, Feb 16: How to Learn Math for Machine…](https://www.kdnuggets.com/2022/n07.html)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets™ 新闻 22:n07, 2月16日：如何学习机器数学…](https://www.kdnuggets.com/2022/n07.html)'
