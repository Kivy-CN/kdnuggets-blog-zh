- en: Create and Deploy Dashboards using Voila and Saturn Cloud
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2021/06/create-deploy-dashboards-voila-saturn-cloud.html](https://www.kdnuggets.com/2021/06/create-deploy-dashboards-voila-saturn-cloud.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Dhrumil Patel](http://linkedin.com/in/dhrumilcse), Performance Analyst
    Intern at NVIDIA**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: '****Filter and Visualize Bank Transactions Data****'
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Working with and training large datasets, maintaining them all in one place,
    and deploying them to production is a challenging job. But what if I tell you
    there is a way to handle all of these with just a few clicks?
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: Let’s understand how we can do that easily. Throughout this article we will
    create a dashboard (using Python and Voila) which runs a machine learning model
    to remove fraudulent transactions and displays remaining data with visualization,
    and publish it to Saturn Cloud’s production server for easier access. Here is
    an outline of the article, feel free to jump a section or two if you are aware
    of the details.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: What is [Saturn Cloud](https://www.saturncloud.io/s/freehosted/?utm_source=Dhrumil%3A%20Deploy%20Dashboards%20using%20Voila&utm_medium=try%20saturn)?
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create the Dashboard ( With Data Filtering and Visualization)
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Deploy Dashboard (Local and Production)
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: End-notes
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**What is Saturn Cloud**'
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Saturn cloud is a machine learning platform that automates DevOps and ML infrastructure.
    On top of that, they use jupyter and dash to scale python for enormous amounts
    of data. Here are a few more features Saturn Cloud offers:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: You can use [Dask](https://www.saturncloud.io/s/aboutdask/?utm_source=Dhrumil%3A%20Deploy%20Dashboards%20using%20Voila&utm_medium=dask)
    to run your code in parallel over as many machines as you need
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can run your code on GPU without any hassle
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can deploy your work without relying on a separate team
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is built entirely on open source tools
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It can also run in your AWS account. Also, Saturn Cloud connects to your existing
    data, you don’t have to move it. Add the required credentials and you’re good
    to go.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can connect to Dask from Google Colab. You could also connect to any GCP
    service that can host Python.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isn’t that cool? Let’s learn how we can create a dashboard and publish it to
    production using Saturn in a few easy steps.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '**Creating a Dashboard**'
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '****Voila 101****'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: 'Before deploying the dashboard, first, let us create a basic dashboard using
    Python and [Voila](https://voila.readthedocs.io/en/stable/using.html). There are
    three major components to creating dashboards using Voila, which are:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在部署仪表盘之前，首先让我们使用 Python 和 [Voila](https://voila.readthedocs.io/en/stable/using.html)
    创建一个基础仪表盘。使用 Voila 创建仪表盘有三个主要组件，分别是：
- en: Define widgets (Button click or search field for interaction)
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义小部件（按钮点击或搜索字段以供交互）
- en: A logic (event handler) for your for the interactive field we created in step
    1(either class based or function based)
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为你在第1步中创建的交互式字段定义逻辑（事件处理程序）（基于类或基于函数）
- en: An Output widget (where your result would show up)
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个输出小部件（你的结果将显示在这里）
- en: Taking [fake transactions data](https://github.com/Dhrumilcse/fradulent-transaction/tree/main/data),
    let’s build a dashboard which gives you filtered data after removing fraudulent
    transactions and gives a visual of how diverse (with respect to currencies) the
    transactions are. Let’s presume that you have a machine learning model that identifies
    fraudulent transactions. For the simplicity of this article we will simply use
    an if statement, but don’t worry, I’ll show you how to import your own model,
    if you have one.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 以 [虚假交易数据](https://github.com/Dhrumilcse/fradulent-transaction/tree/main/data)
    为例，让我们构建一个仪表盘，它会在移除欺诈交易后提供筛选数据，并展示交易在不同货币下的多样性。假设你有一个能够识别欺诈交易的机器学习模型。为了简化本文，我们将仅使用一个
    if 语句，但别担心，我会告诉你如何导入你自己的模型（如果你有的话）。
- en: '****A Basic Dashboard****'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '****基础仪表盘****'
- en: First things first, you want to define a widget. For our use-case, we want users
    to upload data and give them filtered data and a chart after removing fraudulent
    transactions. We will start by defining the upload button.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要定义一个小部件。对于我们的用例，我们希望用户上传数据，并在移除欺诈交易后提供筛选数据和图表。我们将从定义上传按钮开始。
- en: '![Image](../Images/19f777c4060441a3b64c55bcd45ead58.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/19f777c4060441a3b64c55bcd45ead58.png)'
- en: Here we have two buttons —  One for uploading file (upload_file) and another
    (upload_btn) to let our event handler (upload_btn_eventhandler) to know when to
    perform action. I know, you must be wondering but where is our event handler?
    We will define it next. But before that, input_widgets just combine both buttons
    and with help of our output widget (upload_btn_output) we will display the buttons.
    Let’s write an event handler first.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们有两个按钮——一个用于上传文件（upload_file），另一个（upload_btn）让我们的事件处理程序（upload_btn_eventhandler）知道何时执行操作。我知道，你一定会想我们的事件处理程序在哪里？我们将在接下来定义它。但在此之前，input_widgets
    只是将两个按钮组合在一起，并借助我们的输出小部件（upload_btn_output）来显示这些按钮。首先，让我们编写事件处理程序。
- en: '![Image](../Images/6e7538c21a32528d976edd818aa67416.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/6e7538c21a32528d976edd818aa67416.png)'
- en: As soon as we hit the upload button, our event handler will take the file and
    convert it to a pandas dataframe to work on data easily. I split the file name
    by fullstop to find the extension of the file and then store the data if it is
    Excel or CSV. Now the final part, output widget. If you remember, we already wrote
    out an output widget to be named upload_btn_output, so we will do just that.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们点击上传按钮，我们的事件处理程序将接收文件并将其转换为 pandas 数据框，以便轻松处理数据。我通过句点分割文件名来找到文件的扩展名，然后根据文件是否为
    Excel 或 CSV 来存储数据。现在进入最后一部分，输出小部件。如果你还记得，我们已经编写了一个名为 upload_btn_output 的输出小部件，所以我们就按这个名字来做。
- en: '![Image](../Images/e5ac6929d289c10cd4c9980fe524c131.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/e5ac6929d289c10cd4c9980fe524c131.png)'
- en: Now if you haven’t already, you have to install voila if you want this to run
    locally, for which you can find instructions [here](https://voila.readthedocs.io/en/stable/using.html).
    But I am going to show you an easy way to do it using Saturn Cloud. Create an
    account and login, on their dashboard, you will see “deploy dashboards”, click
    that, and start the jupyter lab. Now, upload the notebook that we just created
    to the jupyter lab on saturn cloud. You can find the entire jupyter notebook on
    my github [here](https://github.com/Dhrumilcse/fradulent-transaction). Also, you
    can choose from other accelerated data science libraries and pipelines that Saturn
    Cloud has to offer.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你还没有安装 voila，你需要安装它以便在本地运行，你可以在[这里](https://voila.readthedocs.io/en/stable/using.html)找到安装说明。但我将向你展示一种使用
    Saturn Cloud 的简单方法。创建一个账户并登录，在他们的仪表盘上，你会看到“部署仪表盘”，点击它，然后启动 jupyter lab。现在，将我们刚刚创建的笔记本上传到
    Saturn Cloud 的 jupyter lab 中。你可以在我的 GitHub 上找到完整的 jupyter notebook，[这里](https://github.com/Dhrumilcse/fradulent-transaction)。此外，你还可以选择
    Saturn Cloud 提供的其他加速数据科学库和管道。
- en: '![Image](../Images/c47f263cfbeb3c9898197d66b41612a8.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/c47f263cfbeb3c9898197d66b41612a8.png)'
- en: Done? Perfect. Now copy the URL, paste into the new tab, and replace …./your-username/dashboard/….
    with /your-username/dashboard/voila and then navigate to projects>examples>dashboard.ipynb
    and run it. You should be able to see our upload buttons.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: If you hit any bumps, or want to learn more about creating a dashboard with
    Voila on Saturn Cloud, refer to this [guide](https://www.saturncloud.io/docs/examples/dashboards/voila_dash/).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../Images/839ab729adeaeb4de9d9070bbbe63f28.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
- en: '****Fraudulent Transactions****'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: Now we don’t have any filtered data just yet, we are just uploading a file and
    storing its content. Let’s write some more code to handle fraudulent transactions.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../Images/37002e3ab75a015e6c17a05793236ada.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
- en: I have generated a csv from fake data which you can find here, feel free to
    use the same. Here, I’ll just remove the values considering them fraudulent if
    they exceed a certain threshold. Let’s say all transactions with an amount > 1000
    are fraud. Simply we can achieve that by writing the following in our upload_btn_eventhandler.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: If you have your data on a cloud such as AWS, that’s no worry at all. All you
    need to do is acquire your credentials and you are good to go. One way you can
    do that easily is by using **s3fs** library which is a Python library for accessing
    your AWS file system. You can read more about that in the [documentation](https://s3fs.readthedocs.io/en/latest/)
    here.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '****Using Pre-trained model (extra)****'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: If you have a pre-trained model that you want to use, you can import it like
    I did below, but if you just want to know how things work around voila and are
    not interested in importing machine learning models, you can skip the next code.
    We are basically using joblib to load count vectorizer and model and then predicting
    the values.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../Images/caaa442c6517a07ed32ef50ed432aba2.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
- en: '**Filter Data**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: 'Awesome, now we have clean data without fraudulent transactions. How about
    we add a little functionality to filter transactions based on the currency? We
    can achieve that by simply creating another logic just like we created for the
    upload button. Instead of taking data from the user, now we just pass the clean
    dataframe that we created. Let’s take a look at the code:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../Images/45dd2e7bb33a83f44dccf50f4a4c4121.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
- en: We will follow the same pattern here as well. First, we create a dropdown for
    all unique values in the currency column. Then we create an event handler which
    will call another function common_filtering which will basically match the currency
    and give us only those values where our currency matches, in other words, filtering.
    And we then display it to an output widget that we just created. If you are using
    the same data file I added, it should look something like this.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../Images/f44c7193b27ca45fc05cc04b6ef141f0.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
- en: '****Visualization****'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Let’s move on to visualize the filtered data that we have. We will make a line
    chart for the count of currencies in our data to see how transactions took place
    over several of them.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续可视化我们筛选后的数据。我们将制作一个货币计数的折线图，以查看交易在几个货币之间的分布情况。
- en: '![Image](../Images/315f96b9e8825cddfe97a4b4df08a044.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/315f96b9e8825cddfe97a4b4df08a044.png)'
- en: First, we create a new column count and we count the occurrence of each currency.
    And we pass that as our plot_data where on the X-axis we keep currency and on
    Y-axis we keep the count. We are using plotly here —  import plotly as px — and
    keeping a separate helper function that we call for the plot. You can see the
    bar chart like this on the dashboard if everything runs successfully.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们创建一个新的列计数，并计算每种货币的出现次数。然后我们将其作为`plot_data`传递，其中X轴保持货币，Y轴保持计数。我们在这里使用plotly——`import
    plotly as px`——并保留一个单独的辅助函数来调用绘图。如果一切顺利，你可以在仪表板上看到类似的柱状图。
- en: '![Image](../Images/8c9ef764c2e2cb21af8b025bd8a74ad6.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/8c9ef764c2e2cb21af8b025bd8a74ad6.png)'
- en: And voila (pun intended), you have a working dashboard. Now we can publish it
    to production using Saturn Cloud and it is as easy as clicking a few clicks.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，瞧（有点玩笑的意思），你有了一个工作中的仪表板。现在我们可以使用Saturn Cloud将其发布到生产中，这就像点击几下那么简单。
- en: '****Publish to Production****'
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '****发布到生产****'
- en: To create a deployment, go to a project page and click the “Create a deployment
    button”
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建部署，请访问项目页面并点击“创建部署”按钮。
- en: '![Image](../Images/0b656065f74037c9d74839db2cde035b.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/0b656065f74037c9d74839db2cde035b.png)'
- en: '**Create Deployment**'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**创建部署**'
- en: You will be prompted with the configuration page. As you can see below, you
    only have to set a name and command, and you will be ready to go. However; there
    are plenty of options to explore on Saturn Cloud, which you can find [here](https://www.saturncloud.io/docs/using-saturn-cloud/jobs_and_deployments/#deployments).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到配置页面。正如你在下面看到的，你只需要设置一个名称和命令，你就可以开始了。然而；Saturn Cloud上有很多选项可以探索，你可以在[这里](https://www.saturncloud.io/docs/using-saturn-cloud/jobs_and_deployments/#deployments)找到。
- en: '![Image](../Images/6906f9964e2c6443c3de54292d00edd7.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/6906f9964e2c6443c3de54292d00edd7.png)'
- en: '**Configuration**'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**配置**'
- en: Now that configuration is ready, you will be able to see the dashboard, hit
    the little play button next to the URL and as soon as it is active, visit the
    URL to access your dashboard.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在配置已经准备好，你将能够看到仪表板，点击URL旁边的小播放按钮，一旦它激活，访问该URL以访问你的仪表板。
- en: '****Endnotes****'
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '****附录****'
- en: In this article, we covered what Saturn Cloud is and how it can speed up your
    end-to-end pipeline, how to create dashboards using Voila and Python and publish
    to production using Saturn Cloud in just a few easy steps. Having the right tools
    helps you a lot and Saturn Cloud is one of them if you are into accelerating your
    processing or data science pipeline. If you have any questions, feel free to reach
    out to me via [twitter](https://twitter.com/dhrumilcse) or [Linkedin](https://linkedin.com/in/dhrumilcse),
    or just drop by to say hello.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们介绍了Saturn Cloud是什么以及它如何加速你的端到端管道，如何使用Voila和Python创建仪表板，并仅通过几个简单步骤使用Saturn
    Cloud发布到生产中。拥有合适的工具对你帮助很大，如果你希望加速你的处理或数据科学管道，Saturn Cloud就是其中之一。如果你有任何问题，可以通过[twitter](https://twitter.com/dhrumilcse)或[Linkedin](https://linkedin.com/in/dhrumilcse)联系我，或者随时过来打个招呼。
- en: '**Bio: [Dhrumil Patel](http://linkedin.com/in/dhrumilcse)** ([@Dhrumilcse](https://twitter.com/Dhrumilcse))
    is a Performance Analyst Intern at NVIDIA. His interest lies in working with data
    on a large scale and web application development using modern frameworks such
    as Django. He also posses hands-on exposure to NLP while handling enormous social
    media data. Apart from work, he enjoys reading books and doing origami.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**个人简介：[Dhrumil Patel](http://linkedin.com/in/dhrumilcse)** ([@Dhrumilcse](https://twitter.com/Dhrumilcse))
    是NVIDIA的性能分析实习生。他的兴趣在于处理大规模数据和使用现代框架（如Django）进行Web应用开发。他还具备处理大量社交媒体数据的NLP实践经验。工作之外，他喜欢阅读书籍和折纸。'
- en: '**Related:**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Super Charge Python with Pandas on GPUs Using Saturn Cloud](/2021/05/super-charge-python-pandas-gpus-saturn-cloud.html)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用Saturn Cloud在GPU上为Python与Pandas加速](/2021/05/super-charge-python-pandas-gpus-saturn-cloud.html)'
- en: '[Data Scientists, You Need to Know How to Code](/2021/06/data-scientists-need-know-code.html)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家，你需要了解如何编程](/2021/06/data-scientists-need-know-code.html)'
- en: '[When good data analyses fail to deliver the results you expect](/2020/11/good-data-analyses-fail.html)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[当良好的数据分析未能提供预期结果时](/2020/11/good-data-analyses-fail.html)'
- en: More On This Topic
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Prepare Your Data for Effective Tableau & Power BI Dashboards](https://www.kdnuggets.com/2022/06/prepare-data-effective-tableau-power-bi-dashboards.html)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Successfully Deploy Data Science Projects](https://www.kdnuggets.com/2022/01/successfully-deploy-data-science-projects.html)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Learn How to Design & Deploy Responsible AI Systems](https://www.kdnuggets.com/2023/10/teradata-design-deploy-responsible-ai-systems-whitepaper)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Learn How to Design & Deploy Responsible AI Systems](https://www.kdnuggets.com/2023/11/teradata-design-deploy-responsible-ai-systems-whitepaper)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Survey: Machine Learning Projects Still Routinely Fail to Deploy](https://www.kdnuggets.com/survey-machine-learning-projects-still-routinely-fail-to-deploy)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deploy a Machine Learning Web App with Heroku](https://www.kdnuggets.com/2022/04/deploy-machine-learning-web-app-heroku.html)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
