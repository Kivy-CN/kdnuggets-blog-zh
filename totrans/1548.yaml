- en: Top R Packages for Data Cleaning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/03/top-r-packages-data-cleaning.html](https://www.kdnuggets.com/2019/03/top-r-packages-data-cleaning.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '**By Anna Kayfitz, CEO of [StrategicDB Corp](https://strategicdb.com)**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Data Cleaning](../Images/6e43452bbd82d735a0d17ed0a8e59259.png)'
  prefs: []
  type: TYPE_IMG
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: As millions or billions of data elements come into your business each day, it
    is almost inevitable that some of it will lack the necessary quality to create
    efficient business models. Ensuring that your data is clean should always be the
    first and arguably most important part of a Data Science workflow as without it,
    you will have difficulty seeing what is important and potentially make the wrong
    decisions due to duplicates, anomalies or missing information.
  prefs: []
  type: TYPE_NORMAL
- en: One of the most common and powerful data programming tools is R, an open source
    language and environment for statistical computing and graphics. R provides uses
    with all the tools needed to create data science projects but with anything, it
    is only as good as the data that feeds into it. With that, there are a number
    of libraries within the R environment that help with data cleaning and manipulation
    before the start of any project.
  prefs: []
  type: TYPE_NORMAL
- en: '**Exploring the data**'
  prefs: []
  type: TYPE_NORMAL
- en: Most of the tools for exploring a set of data that you’ve imported already exist
    within the R platform.
  prefs: []
  type: TYPE_NORMAL
- en: '**Summary(data)**'
  prefs: []
  type: TYPE_NORMAL
- en: This handy command simply gives an overview of all your data attributes, displaying
    the min, max, median, mean and category splits for each. It is a good method for
    quickly spotting any potential data anomalies.
  prefs: []
  type: TYPE_NORMAL
- en: Following on from this, you can use a histogram to better understand the distribution
    of your data. This will visualise show any outliers within the dataset or any
    numeric column that you are particularly looking to observe.
  prefs: []
  type: TYPE_NORMAL
- en: '**The plyr package**'
  prefs: []
  type: TYPE_NORMAL
- en: You will need to install the plyr package to create your Histogram, using the
    standard R functionality for installing libraries
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This will create a visualisation of your data to spot any anomalies quickly
    for. A boxplot visualisation uses the same package but splits into quartiles for
    outlier detection. Both of these combined will quickly tell you if you need to
    limit the dataset or only use certain segments of it within any algorithms or
    statistical modelling.
  prefs: []
  type: TYPE_NORMAL
- en: '**Correcting errors**'
  prefs: []
  type: TYPE_NORMAL
- en: R has a number of pre-built methods for correcting data errors such as converting
    values as you might do in Excel or SQL with simple logic e.g. as.charater() converts
    the column to a character string.
  prefs: []
  type: TYPE_NORMAL
- en: However, if you want to start correcting the errors that you saw in your histogram
    or boxplot, there are additional packages that have the capability of doing just
    that.
  prefs: []
  type: TYPE_NORMAL
- en: '**The stringr package**'
  prefs: []
  type: TYPE_NORMAL
- en: There are a few different ways in which stringr can help cleanse your data including
    trimming white spaces and replacing certain unnecessary words. These are quite
    standard bits of code structured as str_trim(YOUR_DATA_FIELD) which simply removes
    the white space.
  prefs: []
  type: TYPE_NORMAL
- en: However, what about removing the anomalies that our histogram told us we had?
    It would need a bit more complexity than this but as a basic example, we can tell
    R to replace all the outliers in our field with the median value of that field.
    This will move everything in together and take away anomaly bias.
  prefs: []
  type: TYPE_NORMAL
- en: '**Missing values**'
  prefs: []
  type: TYPE_NORMAL
- en: It is very simple in R to check for incomplete data and perform and action with
    that field. For example, this function will eliminate missing vales completely
    from your chosen data column.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: There are similar options to replace blank values with 0’s or N/A depending
    on the field type and improve the consistency of the dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '**The tidyr package**'
  prefs: []
  type: TYPE_NORMAL
- en: The tidyr package is designed to tidy your data. It works by identifying the
    variables in your dataset and using the tools provided to move them into columns
    with three main functions or gather (), separate () and spread().
  prefs: []
  type: TYPE_NORMAL
- en: The gather() function takes multiple columns and gathers them into key value
    pairs. A an example, say you have exam score data like.
  prefs: []
  type: TYPE_NORMAL
- en: '| Name | Exam A | Exam B |'
  prefs: []
  type: TYPE_TB
- en: '| John | 55 | 80 |'
  prefs: []
  type: TYPE_TB
- en: '| Mike | 76 | 90 |'
  prefs: []
  type: TYPE_TB
- en: '| Sam | 45 | 75 |'
  prefs: []
  type: TYPE_TB
- en: The gather functions work by transforming that into usable columns like this.
  prefs: []
  type: TYPE_NORMAL
- en: '| Name | Exam | Score |'
  prefs: []
  type: TYPE_TB
- en: '| John | A | 55 |'
  prefs: []
  type: TYPE_TB
- en: '| Mike | A | 76 |'
  prefs: []
  type: TYPE_TB
- en: '| Sam | A | 45 |'
  prefs: []
  type: TYPE_TB
- en: '| John | B | 80 |'
  prefs: []
  type: TYPE_TB
- en: '| Mike | B | 90 |'
  prefs: []
  type: TYPE_TB
- en: '| Sam | B | 75 |'
  prefs: []
  type: TYPE_TB
- en: Now we are truly able to analyse the exam scores. The separate and spread functions
    do similar things which you can explore once you have the package but ultimately
    theyalig your data as needed.
  prefs: []
  type: TYPE_NORMAL
- en: '**Here are a few other packages of note that may be useful for data cleansing
    in R**'
  prefs: []
  type: TYPE_NORMAL
- en: '**The purr package**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The purr package is designed for data wrangling. It is quite similar to the
    plyr package, albeit older and some users simply find it easier to use and more
    standardised in its functionality.
  prefs: []
  type: TYPE_NORMAL
- en: '**The sqldf package**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A lot of R users are more comfortable coding in SQL language rather than R.
    This function allows you to write SQL code within R studio to select your data
    elements
  prefs: []
  type: TYPE_NORMAL
- en: '**The janitor package**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This package is able to find duplicates by multiple columns and make friendly
    columns with ease from your dataframe. It even has a get_dupes() function for
    finding duplicate values amongst multiple rows of data. If you are looking to
    dedupe your data in a more advanced manner, for example, finding different combinations
    or using fuzzy logic, you may want to look into a [deduping tool](https://strategicdb.com/data-cleansing-services/deduping-tool/)
    instead.
  prefs: []
  type: TYPE_NORMAL
- en: '**The splitstackshape package**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This is an older package that can work with comma separated values in a dataframe
    column. Useful for survey or text analysis preparation.
  prefs: []
  type: TYPE_NORMAL
- en: R has a huge number of packages and this article only really touches the surface
    of what it can do. With new libraries popping up all the time it is important
    to do your research and get the right ones for you before starting any new project.
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio**: Anna Kayfitz is a CEO of [StrategicDB Corp](https://strategicdb.com),
    a data cleansing and analytics company. She holds an MBA from a Schulich School
    of Business, and has spent over 10 years working in data analytics and marketing
    roles prior to founding StrategicDB.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Resources:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[On-line and web-based: Analytics, Data Mining, Data Science, Machine Learning
    education](https://www.kdnuggets.com/education/online.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Software for Analytics, Data Science, Data Mining, and Machine Learning](https://www.kdnuggets.com/software/index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Don’t do analysis in a vacuum](https://www.kdnuggets.com/2019/02/mode-dont-do-analysis-vacuum.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Running R and Python in Jupyter](https://www.kdnuggets.com/2019/02/running-r-and-python-in-jupyter.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[2018’s Top 7 R Packages for Data Science and AI](https://www.kdnuggets.com/2019/01/vazquez-2018-top-7-r-packages.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Top Data Python Packages to Know in 2023](https://www.kdnuggets.com/2023/01/top-data-python-packages-know-2023.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[3 Julia Packages for Data Visualization](https://www.kdnuggets.com/2023/02/3-julia-packages-data-visualization.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Python Packages For Geospatial Data Analysis](https://www.kdnuggets.com/2023/08/5-python-packages-geospatial-data-analysis.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Collection of Guides on Mastering SQL, Python, Data Cleaning, Data…](https://www.kdnuggets.com/collection-of-guides-on-mastering-sql-python-data-cleaning-data-wrangling-and-exploratory-data-analysis)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Importance of Data Cleaning in Data Science](https://www.kdnuggets.com/2023/08/importance-data-cleaning-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Learn Data Cleaning and Preprocessing for Data Science with This Free eBook](https://www.kdnuggets.com/2023/08/learn-data-cleaning-preprocessing-data-science-free-ebook.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
