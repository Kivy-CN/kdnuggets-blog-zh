- en: Query Your Pandas DataFrames with SQL
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 SQL 查询你的 Pandas DataFrames
- en: 原文：[https://www.kdnuggets.com/2021/10/query-pandas-dataframes-sql.html](https://www.kdnuggets.com/2021/10/query-pandas-dataframes-sql.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/10/query-pandas-dataframes-sql.html](https://www.kdnuggets.com/2021/10/query-pandas-dataframes-sql.html)
- en: '![Query Your Pandas DataFrames with SQL](../Images/2ea84109c8d12ff5edd83ecd449d24b9.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![使用 SQL 查询你的 Pandas DataFrames](../Images/2ea84109c8d12ff5edd83ecd449d24b9.png)'
- en: Photo by Jeffrey Czum from Pexels (edits by author)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 Jeffrey Czum 提供，来源于 Pexels（作者编辑）
- en: Pandas — or, more specifically, its primary data container, the [DataFrame](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html)
    — has long ago solidified itself as the standard tabular data storage structure
    in the Python data ecosystem. Using the Pandas DataFrame comes with its own specifications
    for accessing, manipulating, and performing computations on composite data, specifications
    which can be mastered with time and persistence thanks to its conformity to Python
    syntax; if you are intimately familiar with Python, you are already well on your
    way to being proficient with the standard Pandas API.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas —— 或更具体地说，它的主要数据容器，[DataFrame](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html)
    —— 早已巩固了自己作为 Python 数据生态系统中的标准表格数据存储结构的地位。使用 Pandas DataFrame 具有访问、操控和对复合数据进行计算的特定规范，这些规范可以通过时间和坚持掌握，因为它遵循
    Python 语法；如果你对 Python 非常熟悉，你已经在熟练掌握标准 Pandas API 的路上了。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析水平'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你组织的 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'There are a lot of users who are not so proficient with Python, however, who
    instead have made the jump to the language thanks to its prominent position in
    data science and data analysis, as well as related fields and professions. Many
    of those making the jump may also already be familiar with another of the heavyweight
    data science languages: SQL. So why can we not query data in our Pandas DataFrames
    using SQL, a language written specifically with tabular data access in mind?'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多用户对 Python 的掌握并不是很熟练，但由于 Python 在数据科学和数据分析以及相关领域和职业中的突出地位，他们还是选择了这门语言。许多转向
    Python 的人可能已经对另一种重量级数据科学语言 SQL 感到熟悉。那么，为什么我们不能使用 SQL 这种专为表格数据访问而编写的语言来查询 Pandas
    DataFrames 中的数据呢？
- en: Enter Fugue. Fugue is a project created with the decoupling of logic and execution
    in mind, primarily with the goal of simplifying computational parallelization.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 进入 Fugue。Fugue 是一个在设计时考虑了逻辑与执行解耦的项目，主要目的是简化计算并行化。
- en: Fugue is an abstraction framework that lets users write code in native Python
    or Pandas, and then port it over to Spark and Dask.
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Fugue 是一个抽象框架，它允许用户用原生 Python 或 Pandas 编写代码，然后将其移植到 Spark 和 Dask。
- en: A core component of this effort is FugueSQL. [FugueSQL](https://fugue-tutorials.readthedocs.io/en/latest/tutorials/beginner/beginner_sql.html)
    is not **pure** SQL; it describes its syntax as a mix "between standard SQL, json
    and python." However, you should find that for basic querying, it operates more
    or less as you would expect. Specifically, it is designed "[t]o be fully compatible
    with standard SQL SELECT statement." As such, it is generally more straightforward
    for newcomers to data munging in Pandas than is querying Pandas in Python.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这项工作的核心组成部分是 FugueSQL。[FugueSQL](https://fugue-tutorials.readthedocs.io/en/latest/tutorials/beginner/beginner_sql.html)
    不是**纯** SQL；它描述其语法为“标准 SQL、json 和 python 之间的混合”。然而，你会发现，对于基本的查询操作，它的表现或多或少符合你的预期。具体来说，它被设计为“完全兼容标准
    SQL SELECT 语句”。因此，对于数据处理的新手来说，它通常比在 Python 中查询 Pandas 更直接。
- en: The benefits of FugueSQL can be realized in parallel code, alongside the additional
    goals of the Fugue project, or standalone, querying your DataFrames on a lone
    computer. In this article we will take a look at how to get up and running with
    FugureSQL in your own work right away, and examples of how to do so.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: FugueSQL 的好处可以在并行代码中实现，结合 Fugue 项目的附加目标，或单独使用，在单台计算机上查询 DataFrames。本文将介绍如何立即在自己的工作中开始使用
    FugueSQL，并提供相应的示例。
- en: Installation and Preparation
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装与准备
- en: 'If you want to install the full Fugue library to take advantage of all of its
    parallelization offerings, you can install as such:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想安装完整的 Fugue 库，以利用它所有的并行化功能，你可以这样安装：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If, instead, you only want the FugueSQL API — which is all that is required
    for the examples in this article — install as such:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只想要 FugueSQL API——这是本文示例所需的全部内容——可以这样安装：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Once installed, import the required libraries:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 安装后，导入所需的库：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: With that, all that is left is to create a DataFrame we can use to query in
    our examples. Since it is up to me to do so — and since I'm currently knee-deep
    in organizing my comic book collection — let's go ahead and create a simple toy
    comic book dataset.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，只剩下创建一个可以在示例中查询的数据框。由于我需要这样做——并且我目前正在深入整理我的漫画书收藏——我们可以创建一个简单的玩具漫画书数据集。
- en: 'The simple DataFrame will consist of 4 columns: a particular issue of a comic
    book title; the comic book publisher; the professionally- and independently-assigned
    [comic book grade](https://www.mycomicshop.com/help/grading) (on a 10 point grading
    scale); the value of the comic book in its assigned grade.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 简单的数据框将包含 4 列：某个漫画书标题的特定问题；漫画书出版商；专业且独立分配的[漫画书评级](https://www.mycomicshop.com/help/grading)（10
    分制）；该漫画书在其分配等级中的价值。
- en: 'Here is the code to accomplish what is laid out above:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是实现上述目标的代码：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You don't need to understand (or care) anything more about comic book collecting
    to make sense of the following examples, so let's get into them.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你不需要理解（或关心）有关漫画书收藏的更多信息来理解以下示例，所以我们开始吧。
- en: 'Example 1: Which of my books are graded above 8.0?'
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例 1：我的书中哪些评级超过 8.0？
- en: The section title says it all. We are going to use FugueSQL and the standard
    SELECT statement to query our Pandas DataFrame to determine which of my comic
    books are graded above 8.0 on a 10 point scale.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 标题已经说明了一切。我们将使用 FugueSQL 和标准的 SELECT 语句来查询我们的 Pandas DataFrame，以确定我的哪些漫画书在 10
    分制中评分超过 8.0。
- en: 'To do this, we first need to define the SQL statement:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们首先需要定义 SQL 语句：
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note the use of the Pandas DataFrame as the table name in our SELECT statement.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 注意在我们的 SELECT 语句中使用 Pandas DataFrame 作为表名。
- en: 'Once the query is defined, it must be executed using the Fugue query engine:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦查询定义完成，必须使用 Fugue 查询引擎执行它：
- en: '[PRE6]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'And here is our returned query:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们返回的查询结果：
- en: '[PRE7]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'There are 3 books in our DataFrame graded above 8.0: Secret Wars 8; Eternals
    1; and Department of Truth 1.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的数据框中，有 3 本书的评级超过 8.0：秘密战争 8；永恒族 1；和真相部 1。
- en: And if you compare this result to our original DataFrame, you will find that
    our query has been returned appropriately. It worked! Very cool, and, if you are
    familiar with SQL syntax, very straightforward.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你将这个结果与我们的原始数据框进行比较，你会发现我们的查询已被正确返回。成功了！非常酷，而且如果你熟悉 SQL 语法，这非常直接。
- en: 'Example 2: Which of my books are valued above 500?'
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例 2：我的书中哪些价值超过 500？
- en: Let's look at a second example, where we will find which of these books are
    valued above $500, given their grade and the current market at this article's
    publication time.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看第二个示例，在这个示例中，我们将找出哪些书籍的价值超过 $500，考虑到它们的评级和本文发布时的市场情况。
- en: Again, we will first define the SQL statement, and then execute it using the
    FugueSQL engine.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，我们将首先定义 SQL 语句，然后使用 FugueSQL 引擎执行它。
- en: '[PRE8]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'And the results:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '[PRE9]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Of the books in our DataFrame, 3 are valued above $500\. Each of these happen
    to be the first full appearance of 3 very popular characters, leading to their
    relatively high values: Blade the Vampire Hunter; Deadpool; and Venom, respectively.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的数据框中，有 3 本书的价值超过 $500\。它们恰好是 3 个非常受欢迎角色的首次完整亮相，这导致了它们相对较高的价值：吸血鬼猎人布雷德；死侍；以及毒液，分别是。
- en: 'Example 3: Which of my books are published by Image?'
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例 3：我的书中哪些是由 Image 出版的？
- en: For our last example, let's look at which of these comics were published by
    Image Comics.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的最后一个示例中，让我们看看这些漫画中哪些是由 Image Comics 出版的。
- en: '[PRE10]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Only 1 of these fit the bill: Department of Truth 1, a masterfully-written
    contemporary masterpiece based on the idea that popular belief in conspiracy theories
    actually alters reality, is the only one of these books published by Image.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 只有这一本符合条件：《真相部》1，本书是一部精心创作的当代杰作，基于流行的阴谋论实际上改变现实的想法，是 Image 出版的唯一一本。
- en: And what is the data type of the returned query result? Let's re-run the above
    query, store it to a variable, and inspect its type.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，返回的查询结果的数据类型是什么？让我们重新运行上述查询，将其存储到变量中，并检查其类型。
- en: '[PRE12]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The returned result is in the form of a Fugue dataframe. Find out more about
    the Fugue dataframe [here](https://fugue.readthedocs.io/en/latest/api/fugue.dataframe.html),
    and how to further process returned results.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的结果是 Fugue dataframe 的形式。了解更多关于 Fugue dataframe 的信息，请点击 [这里](https://fugue.readthedocs.io/en/latest/api/fugue.dataframe.html)，以及如何进一步处理返回结果。
- en: For additional examples, [see this FugueSQL tutorial](https://fugue-tutorials.readthedocs.io/en/latest/tutorials/beginner/index.html).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取更多示例，请 [查看这个 FugueSQL 教程](https://fugue-tutorials.readthedocs.io/en/latest/tutorials/beginner/index.html)。
- en: '**[Matthew Mayo](https://www.linkedin.com/in/mattmayo13/)** ([**@mattmayo13**](https://twitter.com/mattmayo13))
    is a Data Scientist and the Editor-in-Chief of KDnuggets, the seminal online Data
    Science and Machine Learning resource. His interests lie in natural language processing,
    algorithm design and optimization, unsupervised learning, neural networks, and
    automated approaches to machine learning. Matthew holds a Master''s degree in
    computer science and a graduate diploma in data mining. He can be reached at editor1
    at kdnuggets[dot]com.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Matthew Mayo](https://www.linkedin.com/in/mattmayo13/)** ([**@mattmayo13**](https://twitter.com/mattmayo13))
    是 KDnuggets 的数据科学家和主编，KDnuggets 是重要的在线数据科学和机器学习资源。他的兴趣包括自然语言处理、算法设计与优化、无监督学习、神经网络和机器学习的自动化方法。Matthew
    拥有计算机科学硕士学位和数据挖掘研究生文凭。他可以通过 editor1 at kdnuggets[dot]com 联系。'
- en: More On This Topic
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 进一步了解此主题
- en: '[SQL Query Optimization Techniques](https://www.kdnuggets.com/2023/03/sql-query-optimization-techniques.html)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQL 查询优化技术](https://www.kdnuggets.com/2023/03/sql-query-optimization-techniques.html)'
- en: '[5 Tips for Improving SQL Query Performance](https://www.kdnuggets.com/5-tips-for-improving-sql-query-performance)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[提高 SQL 查询性能的 5 个技巧](https://www.kdnuggets.com/5-tips-for-improving-sql-query-performance)'
- en: '[How to Merge Pandas DataFrames](https://www.kdnuggets.com/2023/01/merge-pandas-dataframes.html)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何合并 Pandas DataFrames](https://www.kdnuggets.com/2023/01/merge-pandas-dataframes.html)'
- en: '[3 Ways to Merge Pandas DataFrames](https://www.kdnuggets.com/2023/03/3-ways-merge-pandas-dataframes.html)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[合并 Pandas DataFrames 的 3 种方法](https://www.kdnuggets.com/2023/03/3-ways-merge-pandas-dataframes.html)'
- en: '[Converting JSONs to Pandas DataFrames: Parsing Them the Right Way](https://www.kdnuggets.com/converting-jsons-to-pandas-dataframes-parsing-them-the-right-way)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将 JSON 转换为 Pandas DataFrames：正确解析的方法](https://www.kdnuggets.com/converting-jsons-to-pandas-dataframes-parsing-them-the-right-way)'
- en: '[How to Merge Large DataFrames Efficiently with Pandas](https://www.kdnuggets.com/how-to-merge-large-dataframes-efficiently-with-pandas)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何使用 Pandas 高效地合并大型 DataFrames](https://www.kdnuggets.com/how-to-merge-large-dataframes-efficiently-with-pandas)'
