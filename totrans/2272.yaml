- en: What is K-Means Clustering and How Does its Algorithm Work?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/05/kmeans-clustering-algorithm-work.html](https://www.kdnuggets.com/2023/05/kmeans-clustering-algorithm-work.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![What is K-Means Clustering and How Does its Algorithm Work?](../Images/be51730398ddbdd8cabde734b014732e.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from Bing Image Creator
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Fundamentally, there are four types of machine learning algorithms; supervised
    algorithms, semi-supervised algorithms, unsupervised algorithms and reinforcement
    learning algorithms. Supervised algorithms are those that work on data that has
    labels. Semi-supervised is where part of the data is labeled and another part
    is not. Unsupervised is where the data doesn’t have labels. Reinforcement learning
    is a type of machine learning where we have an agent that works towards a certain
    goal and does it through trial and error. The agent gets rewarded when correct
    and gets penalized when wrong.
  prefs: []
  type: TYPE_NORMAL
- en: Our focus is on an unsupervised machine learning algorithm, K-Means clustering
    algorithm in particular.
  prefs: []
  type: TYPE_NORMAL
- en: K-Means Clustering
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: K-Means is an unsupervised machine learning algorithm that assigns data points
    to one of the K clusters. Unsupervised, as mentioned before, means that the data
    doesn’t have group labels as you’d get in a supervised problem. The algorithm
    observes the patterns in the data and uses that to place each data point into
    a group with similar characteristics. Of course, there are other algorithms for
    solving clustering problems such as DBSCAN, Agglomerative clustering, KNN, and
    others, but K-Means is somewhat more popular in comparison to other approaches.
  prefs: []
  type: TYPE_NORMAL
- en: The K refers to the distinct groupings into which the data points are placed.
    If K is 3, then the data points will be split into 3 clusters. If 5, then we’ll
    have 5 clusters.. More on this later.
  prefs: []
  type: TYPE_NORMAL
- en: Applications of K-Means
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are a myriad ways in which we can apply clustering to solve real world
    problems. Below are a few examples of the applications:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Clustering customers**: Companies can use clustering to group their customers
    for better target marketing and understanding their customer base.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Document classification**: Group documents based on the topics or key words
    in the content.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Image segmentations**: Clustering image pixels before image recognition.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Grouping students based on their performance**: You could cluster them into
    top performers, average performers, and use that to improve learning experience.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How K-Means Algorithms Work
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The algorithm runs an initial iteration where the data points are randomly placed
    into groups, whose central point is known as centroid is calculated. The euclidean
    distance of each data point to the centroids is calculated, and if the distance
    of a point is higher than to another centroid, the point is reassigned to the
    ‘other’ centroid. When this happens, the algorithm will run another iteration
    and the process continues until all groupings have the minimum within group variance.
  prefs: []
  type: TYPE_NORMAL
- en: What we mean by having a minimum variability within a group is that the characteristics
    of observations in a group should be as similar as possible.
  prefs: []
  type: TYPE_NORMAL
- en: Imagine a dataset with two variables plotted as below. The variables could be
    the height and weight of individuals. If we had a third variable like age, then
    we would have a 3-D diagram, but for now, let’s stick to the 2-D diagram below.
  prefs: []
  type: TYPE_NORMAL
- en: '![What is K-Means Clustering and How Does its Algorithm Work?](../Images/01fcf1cf4e0542a541c874ceef490e86.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Step 1 : Initialization'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: From the above diagram we can spot three clusters. When fitting our model, we
    can randomly assign k=3\. This simply means we are seeking to split the data points
    into three groupings.
  prefs: []
  type: TYPE_NORMAL
- en: In the initial iteration, the K centroids are randomly selected in the example
    below.
  prefs: []
  type: TYPE_NORMAL
- en: '![What is K-Means Clustering and How Does its Algorithm Work?](../Images/171e76e49bfde67cdab79bb665201172.png)'
  prefs: []
  type: TYPE_IMG
- en: You can specify the number of K-Clusters that the algorithm should group the
    data points into, however, there’s a better approach to this. We’ll dive into
    how to choose K later.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 2 : Assign points to the one of the K centroids'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once the centroids have been selected, each data point is assigned to the closest
    centroid, based on the euclidean distance of the point to the closest centroid.
    This could result in the groupings shown in the graph below.
  prefs: []
  type: TYPE_NORMAL
- en: Note that other types of distance measures can be used as manhattan distance,
    spearman correlation distance, and Pearson correlations distance as an alternative
    to euclidean, but the classical ones are euclidean and manhattan.
  prefs: []
  type: TYPE_NORMAL
- en: '![What is K-Means Clustering and How Does its Algorithm Work?](../Images/b2c29636c905add1da7cd48e797c50e9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Step 3 : Recompute the centroids'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After the first round of groupings, new centre points are recalculated again
    and this will necessitate a re-assignment of the points. The graph below gives
    an example of how the new groupings could potentially be, and notice how some
    points have been moved into new clusters.
  prefs: []
  type: TYPE_NORMAL
- en: '![What is K-Means Clustering and How Does its Algorithm Work?](../Images/5662ccca682a3d405e54f85d4520ac1a.png)'
  prefs: []
  type: TYPE_IMG
- en: Iterate
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The process in steps 2 and 3 is repeated until we get to a point where there
    are no more reassignments of the data points or we reach the maximum number of
    iterations. The resulting final groupings are below.
  prefs: []
  type: TYPE_NORMAL
- en: '![What is K-Means Clustering and How Does its Algorithm Work?](../Images/b7bee4c9d302597620ee9b52416dcfe3.png)'
  prefs: []
  type: TYPE_IMG
- en: The choice of K
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The data you will be working on as a data scientist won’t always have distinct
    demarcations when plotted, as you’d see on iris dataset. Oftentimes, you’ll deal
    with data with higher dimensions that cannot be plotted, or even if it’s plotted,
    you won’t be able to tell the optimum number of groupings. A good example of this
    is in the graph below.
  prefs: []
  type: TYPE_NORMAL
- en: '![What is K-Means Clustering and How Does its Algorithm Work?](../Images/f2ca9e718098204e99136e38f3c001bb.png)'
  prefs: []
  type: TYPE_IMG
- en: Can you tell the number of groupings? Not clearly. So, how will we find the
    optimum number of clusters into which the above data points can be grouped?
  prefs: []
  type: TYPE_NORMAL
- en: There are different methods used to find the optimum K, into which the data
    points of a given data set can be grouped, elbow and silhouette methods. Let’s
    briefly look at how the two approaches work.
  prefs: []
  type: TYPE_NORMAL
- en: Elbow method
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This approach uses the total variations within a cluster, otherwise known as
    the WCSS (within cluster sum of squares). The aim is to have the minimal variance
    within clusters (WCSS).
  prefs: []
  type: TYPE_NORMAL
- en: 'This method works in this way:'
  prefs: []
  type: TYPE_NORMAL
- en: It takes a range of K values, say 1 - 8 and calculates the WSS for each K value.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The resulting data will have a K value and the corresponding WSS. This data
    is then used to plot a graph of WCSS against the k values.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The optimum number of K is at the elbow point, where the curve begins to accelerate.
    It is from this point that the method derives its name. Think of the elbow of
    your arm.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Silhouette method
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This method measures similarity and dissimilarity. It quantifies the distance
    of a point to other members of its assigned cluster, and also the distance to
    the members in other clusters. It works in this way:'
  prefs: []
  type: TYPE_NORMAL
- en: It takes a range of K values beginning with 2.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For each value of K, it computes the cluster similarity, which is the average
    distance between a data point and all other group members in the same cluster.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next, the cluster dissimilarity is calculated by calculating the average distance
    between a data point and all other members of the nearest cluster.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The silhouette coefficient will be the difference between cluster similarity
    value and cluster dissimilarity value, divided by the largest of the two values.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The optimum K would be one with the highest coefficient. The values of this
    coefficient are bounded in the range of -1 to 1.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is an introductory article to K-Means clustering algorithm where we’ve
    covered what it is, how it works, and how to choose K. In the next article, we’ll
    walk through the process on how to solve a real world clustering problems using
    Python’s scikit-learn library.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Clinton Oyogo](https://www.linkedin.com/in/oyogo-clinton-53359198/)** writer
    at [Saturn Cloud](https://saturncloud.io/) believes that analyzing data for actionable
    insights is a crucial part of his day-to-day work. With his skills in data visualization,
    data wrangling, and machine learning, he takes pride in his work as a data scientist.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://saturncloud.io/blog/what-is-k-means-clustering-and-how-does-its-algorithm-work/).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Clustering Unleashed: Understanding K-Means Clustering](https://www.kdnuggets.com/2023/07/clustering-unleashed-understanding-kmeans-clustering.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Centroid Initialization Methods for k-means Clustering](https://www.kdnuggets.com/2020/06/centroid-initialization-k-means-clustering.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Hands-On with Unsupervised Learning: K-Means Clustering](https://www.kdnuggets.com/handson-with-unsupervised-learning-kmeans-clustering)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Does AI Get its Own Batman?](https://www.kdnuggets.com/2022/05/ai-get-batman.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Choosing the Right Clustering Algorithm for Your Dataset](https://www.kdnuggets.com/2019/10/right-clustering-algorithm.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[DBSCAN Clustering Algorithm in Machine Learning](https://www.kdnuggets.com/2020/04/dbscan-clustering-algorithm-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
