- en: Simplifying Decision Tree Interpretability with Python & Scikit-learn
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Python和Scikit-learn简化决策树的可解释性
- en: 原文：[https://www.kdnuggets.com/2017/05/simplifying-decision-tree-interpretation-decision-rules-python.html](https://www.kdnuggets.com/2017/05/simplifying-decision-tree-interpretation-decision-rules-python.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2017/05/simplifying-decision-tree-interpretation-decision-rules-python.html](https://www.kdnuggets.com/2017/05/simplifying-decision-tree-interpretation-decision-rules-python.html)
- en: When discussing classifiers, decision trees are often thought of as easily interpretable
    models when compared to numerous more complex classifiers, especially those of
    the blackbox variety. And this is generally true.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论分类器时，与许多更复杂的分类器（尤其是黑箱类型的分类器）相比，决策树通常被认为是容易解释的模型。这通常是正确的。
- en: This is **especially** true of rather comparatively simple models created from
    simple data. This is much-less true of complex decision trees crafted from large
    amounts of (high-dimensional) data. Even otherwise straightforward decision trees
    which are of great depth and/or breadth, consisting of heavy branching, can be
    difficult to trace.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这**尤其**适用于从简单数据中创建的相对简单的模型。对于从大量（高维）数据中构建的复杂决策树，这一点就不那么适用了。即使是其他看似简单但深度和/或宽度较大的决策树，重分支的情况也可能很难追踪。
- en: '* * *'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你在IT领域的组织'
- en: '* * *'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Concise, textual representations of decision trees can often nicely summarize
    decision tree models. Additionally, certain textual representations can have further
    use beyond their summary capabilities. For example, automatically generating functions
    with the ability to classify future data by passing instances to such functions
    may be of use in particular scenarios. But let's not get off course -- interpretability
    is the goal of what we are discussing here.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 简洁的文本表示可以很好地总结决策树模型。此外，某些文本表示的功能超出了总结能力。例如，自动生成能够通过传递实例对未来数据进行分类的函数，在特定情况下可能会有所帮助。但我们不要偏离主题——可解释性是我们在这里讨论的目标。
- en: This post will look at a few different ways of attempting to simplify decision
    tree representation and, ultimately, interpretability. All code is in Python,
    with Scikit-learn being used for the decision tree modeling.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本文将探讨几种简化决策树表示及其最终可解释性的方法。所有代码均为Python，决策树建模使用Scikit-learn。
- en: Building a Classifier
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建分类器
- en: First off, let's use my favorite dataset to build a simple decision tree in
    Python using [Scikit-learn's decision tree classifier](http://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html),
    specifying information gain as the criterion and otherwise using defaults. Since
    we aren't concerned with classifying unseen instances in this post, we won't bother
    with splitting our data, and instead just construct a classifier using the dataset
    in its entirety.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们使用我最喜欢的数据集，通过使用[Scikit-learn的决策树分类器](http://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html)在Python中构建一个简单的决策树，指定信息增益作为标准，其余则使用默认设置。由于在这篇文章中我们不关注对未见实例的分类，因此我们不会拆分数据，而是直接使用整个数据集来构建分类器。
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Representing the Model Visually
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 视觉化模型的表示
- en: 'One of the easiest ways to interpret a decision tree is visually, accomplished
    with Scikit-learn using these few lines of code:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 解释决策树的最简单方法之一是通过视觉效果，这可以通过Scikit-learn和这几行代码实现：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Copying the contents of the created file (''dt.dot'' in our example) to a [graphviz
    rendering agent](http://webgraphviz.com/), we get the following representation
    of our decision tree:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 将创建的文件（在我们的示例中为'dt.dot'）的内容复制到[graphviz渲染工具](http://webgraphviz.com/)，我们可以得到以下决策树表示：
- en: '![Decision tree graph](../Images/99f151aa5cdb993d4ce7e211b834f70e.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![决策树图](../Images/99f151aa5cdb993d4ce7e211b834f70e.png)'
- en: Visual representation of our decision tree using a [graphviz rendering agent.](http://webgraphviz.com/)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[graphviz 渲染代理](http://webgraphviz.com/)的决策树的可视化表示
- en: Representing the Model as a Function
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将模型表示为一个函数
- en: As stated at the outset of this post, we will look at a couple of different
    ways for textually representing decision trees.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如本文开头所述，我们将探讨几种文本表示决策树的不同方法。
- en: The first is representing the decision tree model [as a function](http://stackoverflow.com/questions/20224526/how-to-extract-the-decision-rules-from-scikit-learn-decision-tree).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个是将决策树模型[表示为一个函数](http://stackoverflow.com/questions/20224526/how-to-extract-the-decision-rules-from-scikit-learn-decision-tree)。
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Let''s call this function and see the results:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们调用这个函数并查看结果：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Interesting. Let's see if we can improve interpretability by stripping away
    some of the "functionality," provided it is not required.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣。让我们看看通过剥离一些“不必要的功能”是否可以提高可解释性，前提是这些功能不是必需的。
- en: Representing the Model as Pseudocode
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将模型表示为伪代码
- en: 'Next, [a slight reworking of the above code](http://stackoverflow.com/questions/20224526/how-to-extract-the-decision-rules-from-scikit-learn-decision-tree)
    results in the promised goal of this post''s title: a set of decision rules for
    representing a decision tree, in slightly less-Pythony pseudocode.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，[对上述代码的轻微修改](http://stackoverflow.com/questions/20224526/how-to-extract-the-decision-rules-from-scikit-learn-decision-tree)实现了本文标题所承诺的目标：一组用于表示决策树的决策规则，以略微少一点
    Python 风格的伪代码形式。
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Let''s test this function:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们测试这个函数：
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This looks pretty good as well, and — in my computer science-trained mind —
    the use of well-placed C-style braces makes this a bit more legible then the previous
    attempt.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来也不错，在我计算机科学训练的思维中，使用恰当的 C 风格大括号使得代码比之前的尝试更具可读性。
- en: These gems have made me want to modify code to get to true decision rules, which
    I plan on playing with after finishing this post. If I get anywhere of note, I
    will return here and post my findings.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这些珍宝让我想修改代码以获得真正的决策规则，我计划在完成本文后进行尝试。如果有任何值得注意的进展，我会回来在这里发布我的发现。
- en: '**[Matthew Mayo](https://www.linkedin.com/in/mattmayo13/)** ([**@mattmayo13**](https://twitter.com/mattmayo13))
    is a Data Scientist and the Editor-in-Chief of KDnuggets, the seminal online Data
    Science and Machine Learning resource. His interests lie in natural language processing,
    algorithm design and optimization, unsupervised learning, neural networks, and
    automated approaches to machine learning. Matthew holds a Master''s degree in
    computer science and a graduate diploma in data mining. He can be reached at editor1
    at kdnuggets[dot]com.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**[马修·梅奥](https://www.linkedin.com/in/mattmayo13/)** （[**@mattmayo13**](https://twitter.com/mattmayo13)）是一名数据科学家，也是
    KDnuggets 的主编，这是一个开创性的在线数据科学和机器学习资源。他的兴趣包括自然语言处理、算法设计与优化、无监督学习、神经网络和自动化机器学习方法。马修拥有计算机科学硕士学位和数据挖掘研究生文凭。他可以通过
    editor1 at kdnuggets[dot]com 联系。'
- en: More On This Topic
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 了解更多相关内容
- en: '[Decision Tree Algorithm, Explained](https://www.kdnuggets.com/2020/01/decision-tree-algorithm-explained.html)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[决策树算法解析](https://www.kdnuggets.com/2020/01/decision-tree-algorithm-explained.html)'
- en: '[Understanding by Implementing: Decision Tree](https://www.kdnuggets.com/2023/02/understanding-implementing-decision-tree.html)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通过实现理解: 决策树](https://www.kdnuggets.com/2023/02/understanding-implementing-decision-tree.html)'
- en: '[Telling a Great Data Story: A Visualization Decision Tree](https://www.kdnuggets.com/2021/02/telling-great-data-story-visualization-decision-tree.html)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[讲述一个精彩的数据故事: 可视化决策树](https://www.kdnuggets.com/2021/02/telling-great-data-story-visualization-decision-tree.html)'
- en: '[Random Forest vs Decision Tree: Key Differences](https://www.kdnuggets.com/2022/02/random-forest-decision-tree-key-differences.html)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[随机森林与决策树: 关键区别](https://www.kdnuggets.com/2022/02/random-forest-decision-tree-key-differences.html)'
- en: '[KDnuggets™ News 22:n09, Mar 2: Telling a Great Data Story: A…](https://www.kdnuggets.com/2022/n09.html)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets™ 新闻 22:n09, 3月2日: 讲述一个精彩的数据故事: A…](https://www.kdnuggets.com/2022/n09.html)'
- en: '[A Complete Guide To Decision Tree Software](https://www.kdnuggets.com/2022/08/complete-guide-decision-tree-software.html)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[决策树软件完整指南](https://www.kdnuggets.com/2022/08/complete-guide-decision-tree-software.html)'
