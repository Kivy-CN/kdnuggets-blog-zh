["```py\necho \"Clearing old data...\"\nrm -rf covid-19-data/\nrm us-states.csv\necho \"Getting new data...\"\ngit clone https://github.com/nytimes/covid-19-data\necho \"Done.\"\n\ncp covid-19-data/us-states.csv .\necho \"Starting...\"\n\npython3 heatmap-newcases.py\necho \"Done.\"\n```", "```py\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pylab as plt\nimport pandas as pd\nimport csv\nimport datetime\n\nreader = csv.reader(open('StatePopulations.csv'))\n\nstatePopulations = {}\nfor row in reader:\n    key = row[0]\n    if key in statePopulations:\n        pass\n    statePopulations[key] = row[1:]\n\nfilename = \"us-states.csv\"\nfullTable = pd.read_csv(filename)\nfullTable = fullTable.drop(['fips'], axis=1)\nfullTable = fullTable.drop(['deaths'], axis=1)\n\n# generate a list of the dates in the table\ndates = fullTable['date'].unique().tolist()\nstates = fullTable['state'].unique().tolist()\n\nresult = pd.DataFrame()\nresult['date'] = fullTable['date']\n\nstates.remove('Northern Mariana Islands')\nstates.remove('Puerto Rico')\nstates.remove('Virgin Islands')\nstates.remove('Guam')\n\nstates.sort()\n\nfor state in states:\n    # create new dataframe with only the current state's date\n    population = int(statePopulations[state][0])\n    print(state + \": \" + str(population))\n    stateData = fullTable[fullTable.state.eq(state)]\n\n    newColumnName = state\n    stateData[newColumnName] = stateData.cases.diff()\n    stateData[newColumnName] = stateData[newColumnName].replace(np.nan, 0)\n    stateData = stateData.drop(['state'], axis=1)\n    stateData = stateData.drop(['cases'], axis=1)\n\n    stateData[newColumnName] = stateData[newColumnName].div(population)\n    stateData[newColumnName] = stateData[newColumnName].mul(100000.0)\n\n    result = pd.merge(result, stateData, how='left', on='date')\n\nresult = result.drop_duplicates()\nresult = result.fillna(0)\n\nfor state in states:\n    result[state] = result[state].add(1.0)\n    result[state] = np.log10(result[state])\n    #result[state] = np.sqrt(result[state])\n\nresult['date'] = pd.to_datetime(result['date'])\nresult = result[result['date'] >= '2020-02-15']\nresult['date'] = result['date'].dt.strftime('%Y-%m-%d')\n\nresult.set_index('date', inplace=True)\nresult.to_csv(\"result.csv\")\nresult = result.transpose()\n\nplt.figure(figsize=(16, 10))\ng = sns.heatmap(result, cmap=\"coolwarm\", linewidth=0.05, linecolor='lightgrey')\nplt.xlabel('')\nplt.ylabel('')\n\nplt.title(\"Daily New Covid-19 Cases Per 100k Of Population\", fontsize=20)\n\nupdateText = \"Updated \" + str(datetime.date.today()) + \\\n    \". Scaled with Log(x+1) for improved contrast due to wide range of values. Data source: NY Times Github. Visualization by @JRBowling\"\n\nplt.suptitle(updateText, fontsize=8)\n\nplt.yticks(np.arange(.5, 51.5, 1.0), states)\n\nplt.yticks(fontsize=8)\nplt.xticks(fontsize=8)\ng.set_xticklabels(g.get_xticklabels(), rotation=90)\ng.set_yticklabels(g.get_yticklabels(), rotation=0)\nplt.savefig(\"covidNewCasesper100K.png\")\n```"]