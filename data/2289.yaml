- en: Hydra Configs for Deep Learning Experiments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hydra 配置用于深度学习实验
- en: 原文：[https://www.kdnuggets.com/2023/03/hydra-configs-deep-learning-experiments.html](https://www.kdnuggets.com/2023/03/hydra-configs-deep-learning-experiments.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2023/03/hydra-configs-deep-learning-experiments.html](https://www.kdnuggets.com/2023/03/hydra-configs-deep-learning-experiments.html)
- en: '![Hydra Configs for Deep Learning Experiments](../Images/3d7fd4a04d43dda2ce0149de4fc8a75b.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Hydra 配置用于深度学习实验](../Images/3d7fd4a04d43dda2ce0149de4fc8a75b.png)'
- en: Image by Editor
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：编辑
- en: Introduction
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT 需求'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[Hydra](https://github.com/facebookresearch/hydra) library provides a flexible
    and efficient configuration management system that enables creating hierarchical
    configurations dynamically by composition and overriding through config files
    and the command line.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[Hydra](https://github.com/facebookresearch/hydra) 库提供了一个灵活高效的配置管理系统，支持通过组合和重写配置文件以及命令行动态创建层次化配置。'
- en: This powerful tool offers a simple and efficient way to manage and organize
    various configurations in one place, constructing complex multilevel configs structures
    without any limits which can be essential in machine learning projects.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这个强大的工具提供了一种简单而高效的方式来管理和组织各种配置，构建复杂的多层配置结构，没有任何限制，这在机器学习项目中至关重要。
- en: All of that enables you to switch easily between any parameters and try different
    configurations without manually updating the code. By defining the parameters
    in a flexible and modular way, it becomes much easier to iterate over new ML models
    and compare different approaches faster, which can save time and resources, and,
    besides, make the development process more efficient.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些功能使你能够轻松切换任何参数，并尝试不同的配置，而无需手动更新代码。通过以灵活和模块化的方式定义参数，迭代新的机器学习模型并更快地比较不同的方法变得更加容易，这可以节省时间和资源，并使开发过程更加高效。
- en: Hydra can serve as the central component in deep learning pipelines (you can
    find an example of my training pipeline template [here](https://github.com/gorodnitskiy/yet-another-lightning-hydra-template)),
    which would orchestrate all internal modules.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra 可以作为深度学习管道中的核心组件（你可以在 [这里](https://github.com/gorodnitskiy/yet-another-lightning-hydra-template)
    找到我的训练管道模板示例），它将协调所有内部模块。
- en: How to Run a Deep Learning Pipeline with Hydra
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 Hydra 运行深度学习管道
- en: A decorator `hydra.main` is supposed to be used to load Hydra config during
    launching of the pipeline. Here a config is being parsed by Hydra grammar parser,
    merged, composed and passed to the pipeline main function.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`hydra.main` 装饰器用于在启动管道时加载 Hydra 配置。在这里，配置通过 Hydra 语法解析器进行解析、合并、组合，并传递给管道主函数。'
- en: 'Also, It could be accomplished by Hydra [Compose API](https://hydra.cc/docs/advanced/compose_api),
    using `initialize`, `initialize_config_module` or `initialize_config_dir`, instead
    of `hydra.main` decorator:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，它还可以通过 Hydra [Compose API](https://hydra.cc/docs/advanced/compose_api) 完成，使用
    `initialize`、`initialize_config_module` 或 `initialize_config_dir`，而不是 `hydra.main`
    装饰器：
- en: Instantiating Objects with Hydra
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Hydra 实例化对象
- en: An object can be instantiated from a config if it includes a `_target_` key
    with class or function name, for example `torchmetrics.Accuracy`. Also, the config
    might contain other parameters which should be passed to object instantiation.
    Hydra provides `hydra.utils.instantiate()` function (and its alias `hydra.utils.call()`)
    for instantiating objects and calling class or function. It is preferable to use
    `instantiate` for creating objects and `call` for invoking functions.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果配置中包含 `_target_` 键和类或函数名称（例如 `torchmetrics.Accuracy`），则可以从配置实例化对象。此外，配置可能包含其他参数，这些参数应该传递给对象实例化。Hydra
    提供了 `hydra.utils.instantiate()` 函数（及其别名 `hydra.utils.call()`）用于实例化对象和调用类或函数。建议使用
    `instantiate` 创建对象，使用 `call` 调用函数。
- en: 'Based on this config you could simply instantiate:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 基于此配置，你可以简单地进行实例化：
- en: loss via `loss = hydra.utils.instantiate(config.loss)`
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 `loss = hydra.utils.instantiate(config.loss)` 获取 loss
- en: metric via `metric = hydra.utils.instantiate(config.metric)`
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 `metric = hydra.utils.instantiate(config.metric)` 获取 metric
- en: 'Besides, it supports multiple strategies for converting config parameters:
    `none`, `partial`, `object` and `all`. The `_convert_` attribute is intended to
    manage this option. You can find more details [here](https://hydra.cc/docs/advanced/instantiate_objects/overview/#parameter-conversion-strategies).'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，它支持多种策略来转换配置参数：`none`、`partial`、`object` 和 `all`。`_convert_` 属性用于管理此选项。你可以在
    [这里](https://hydra.cc/docs/advanced/instantiate_objects/overview/#parameter-conversion-strategies)
    找到更多细节。
- en: Moreover, it offers a [partial instantiation](https://hydra.cc/docs/advanced/instantiate_objects/overview/#partial-instantiation),
    which can be very useful, for example for function instantiation or recursively
    object instantiation.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，它还提供了 [部分实例化](https://hydra.cc/docs/advanced/instantiate_objects/overview/#partial-instantiation)，这对于函数实例化或递归对象实例化非常有用。
- en: Command Line Operations
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 命令行操作
- en: 'Hydra provides the command line operations for config parameters overriding:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra 提供了命令行操作来覆盖配置参数：
- en: Existing config value can be replaced by passing a different value.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以通过传递不同的值来替换现有的配置值。
- en: A new config value that does not exist in the config can be added by using the
    `+` operator.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用 `+` 操作符添加配置中不存在的新配置值。
- en: If the config already has a value, it can be overridden by using the `++` operator.
    If the value does not exist in the config, it will be added.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果配置中已有值，可以使用 `++` 操作符覆盖。如果值不存在于配置中，将会被添加。
- en: Additional Out-of-the-box Features
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 额外的开箱即用功能
- en: 'It also brings support for various exciting features such as:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 它还支持各种令人兴奋的功能，例如：
- en: '[Structured configs](https://hydra.cc/docs/tutorials/structured_config/schema/)
    with extended list of available primitive types, nested structure, containers
    with primitives, default values, bottom-up values overriding and so much more.
    This offers a wide range of possibilities for organizing configs in many different
    forms.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[结构化配置](https://hydra.cc/docs/tutorials/structured_config/schema/) 具有扩展的可用原始类型列表、嵌套结构、包含原始值的容器、默认值、从下往上的值覆盖等更多功能。这提供了广泛的可能性来以多种不同形式组织配置。'
- en: Coloured logs for `hydra/job_logging` and `hydra/hydra_logging`.![Hydra Configs
    for Deep Learning Experiments](../Images/348349dfcdfe88e06ca2407a380c1789.png)
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hydra/job_logging` 和 `hydra/hydra_logging` 的彩色日志。![Hydra Configs for Deep
    Learning Experiments](../Images/348349dfcdfe88e06ca2407a380c1789.png)'
- en: 'Hyperparameters sweepers without any additional code: [Optuna](https://hydra.cc/docs/plugins/optuna_sweeper/),
    [Nevergrad](https://hydra.cc/docs/plugins/nevergrad_sweeper/), [Ax](https://hydra.cc/docs/plugins/ax_sweeper/).'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无需任何额外代码的超参数搜索器：[Optuna](https://hydra.cc/docs/plugins/optuna_sweeper/)、[Nevergrad](https://hydra.cc/docs/plugins/nevergrad_sweeper/)、[Ax](https://hydra.cc/docs/plugins/ax_sweeper/)。
- en: '[Custom plugins](https://hydra.cc/docs/advanced/plugins/develop/)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[自定义插件](https://hydra.cc/docs/advanced/plugins/develop/)'
- en: Custom Config Resolvers
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义配置解析器
- en: Hydra provides an opportunity to expand its functionality even more by adding
    custom resolvers via [OmegaConf](https://omegaconf.readthedocs.io/) library. It
    enables adding custom executable expressions to the config. `OmegaConf.register_new_resolver()`
    function is used to register such resolvers.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra 通过 [OmegaConf](https://omegaconf.readthedocs.io/) 库提供了扩展其功能的机会。它允许将自定义可执行表达式添加到配置中。`OmegaConf.register_new_resolver()`
    函数用于注册这样的解析器。
- en: 'By default, OmegaConf supports the following resolvers:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，OmegaConf 支持以下解析器：
- en: '`oc.env`: returns the value of an environment variable'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`oc.env`：返回环境变量的值'
- en: '`oc.create`: may be used for dynamic generation of config nodes'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`oc.create`：可用于动态生成配置节点'
- en: '`oc.deprecated`: it can be utilised to mark a config node as deprecated'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`oc.deprecated`：可用于将配置节点标记为已弃用'
- en: '`oc.decode`: decodes a string using a given codec'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`oc.decode`：使用给定的编解码器解码字符串'
- en: '`oc.select`: provides a default value to use in case the primary interpolation
    key is not found or selects keys that are otherwise illegal interpolation keys
    or handles missing values as well'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`oc.select`：提供一个默认值，以防主插值键未找到，或选择其他非法插值键或处理缺失值'
- en: '`oc.dict.{keys,value}`: analogous to the dict.keys and dict.values methods
    in plain Python dictionaries'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`oc.dict.{keys,value}`：类似于普通Python字典中的dict.keys和dict.values方法'
- en: See more details [here](https://omegaconf.readthedocs.io/en/2.1_branch/custom_resolvers.html#built-in-resolvers).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 更多细节请查看[这里](https://omegaconf.readthedocs.io/en/2.1_branch/custom_resolvers.html#built-in-resolvers)。
- en: Therefore, it is a powerful tool that enables adding any custom resolvers. For
    instance, it can be tedious and time-consuming to repeatedly write loss or metric
    names in the configs in multiple places, like `early_stopping` config, `model_checkpoint`
    config, config containing scheduler params, or somewhere else. It could be solved
    by adding a custom resolver to replace `__loss__` and `__metric__` names by the
    actual loss or metric name, which is passed to the config and instantiated by
    Hydra.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，它是一个强大的工具，可以添加任何自定义解析器。例如，在多个地方的配置中重复编写损失或指标名称可能是乏味且耗时的，比如`early_stopping`配置、`model_checkpoint`配置、包含调度器参数的配置或其他地方。通过添加自定义解析器，将`__loss__`和`__metric__`名称替换为实际的损失或指标名称，可以解决这个问题，这些名称会传递给配置并由Hydra实例化。
- en: 'Note: You need to register custom resolvers before `hydra.main` or [Compose
    API](https://hydra.cc/docs/advanced/compose_api) calls. Otherwise, Hydra config
    parser just doesn’t apply it.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：你需要在`hydra.main`或[Compose API](https://hydra.cc/docs/advanced/compose_api)调用之前注册自定义解析器。否则，Hydra配置解析器将无法应用它。
- en: 'In [my template for rapid deep learning experiments](https://github.com/gorodnitskiy/yet-another-lightning-hydra-template),
    it is implemented as a decorator `[utils.register_custom_resolvers](https://github.com/gorodnitskiy/yet-another-lightning-hydra-template/blob/936e99fd6c9d033b4f407b96370fd64656566874/src/utils/utils.py#L328)`,
    which allows to register all custom resolvers in one place. It supports main Hydra’s
    command line flags, which are required to override config path, name or dir. By
    default, it allows you to replace `__loss__` to `loss.__class__.__name__` and
    `__metric__` to `metric.__class__.__name__` via such syntax: `${replace:"__metric__/valid"}`.
    Use quotes for defining internal value in `${replace:"..."}` to avoid grammar
    problems with Hydra config parser.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在[我的快速深度学习实验模板](https://github.com/gorodnitskiy/yet-another-lightning-hydra-template)中，它被实现为一个装饰器`[utils.register_custom_resolvers](https://github.com/gorodnitskiy/yet-another-lightning-hydra-template/blob/936e99fd6c9d033b4f407b96370fd64656566874/src/utils/utils.py#L328)`，允许在一个地方注册所有自定义解析器。它支持Hydra的主要命令行标志，这些标志是覆盖配置路径、名称或目录所必需的。默认情况下，它允许通过以下语法将`__loss__`替换为`loss.__class__.__name__`，将`__metric__`替换为`metric.__class__.__name__`：`${replace:"__metric__/valid"}`。在`${replace:"..."}`中使用引号来定义内部值，以避免与Hydra配置解析器的语法问题。
- en: See more details about `utils.register_custom_resolvers` [here](https://github.com/gorodnitskiy/yet-another-lightning-hydra-template/blob/936e99fd6c9d033b4f407b96370fd64656566874/src/utils/utils.py#L328).
    You can easily expand it for any other purposes.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 有关`utils.register_custom_resolvers`的更多细节，请查看[这里](https://github.com/gorodnitskiy/yet-another-lightning-hydra-template/blob/936e99fd6c9d033b4f407b96370fd64656566874/src/utils/utils.py#L328)。你可以轻松扩展它以满足其他需求。
- en: Simplify Complex Modules Configuring
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简化复杂模块配置
- en: 'This powerful tool significantly simplifies the development and configuration
    of complex pipelines, for instance:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这个强大的工具显著简化了复杂管道的开发和配置，例如：
- en: 'Instantiate modules with any custom logic under the hood, eg:'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实例化具有任何自定义逻辑的模块，例如：
- en: Instantiate the whole module with all inside submodules recursively by Hydra.
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过Hydra递归地实例化整个模块及其内部所有子模块。
- en: Main module and some parts of the inside submodules can be initialized by Hydra
    and the rest of them manually.
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主模块和一些内部子模块可以由Hydra初始化，其余部分则需手动初始化。
- en: Manually initialize the main module and all submodules.
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动初始化主模块和所有子模块。
- en: 'Package dynamic structures, like data augmentations to config, where you can
    easily set up any `transforms` classes, parameters or appropriate order for applying.
    See example of possible implementation `[TransformsWrapper](https://github.com/gorodnitskiy/yet-another-lightning-hydra-template/blob/main/src/datamodules/components/transforms.py)`
    based on [albumentations](https://albumentations.ai) library for such purpose,
    which can be easily reworked for any over augmentations package. Config example:'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将动态结构（如数据增强）打包到配置中，你可以轻松设置任何`transforms`类、参数或适用顺序。参见基于[albumentations](https://albumentations.ai)库的可能实现示例`[TransformsWrapper](https://github.com/gorodnitskiy/yet-another-lightning-hydra-template/blob/main/src/datamodules/components/transforms.py)`，它可以轻松地为任何额外增强包进行修改。配置示例：
- en: 'Create complex multilevel configs structure. [Here](https://github.com/gorodnitskiy/yet-another-lightning-hydra-template/tree/main/configs)
    is an outline of how configs can be organized:'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建复杂的多层配置结构。[这里](https://github.com/gorodnitskiy/yet-another-lightning-hydra-template/tree/main/configs)
    是配置组织的概要：
- en: '![Hydra Configs for Deep Learning Experiments](../Images/4eb82c6b41564e1642817c4c173dc668.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![用于深度学习实验的Hydra配置](../Images/4eb82c6b41564e1642817c4c173dc668.png)'
- en: And many other things... It has very few limitations, so you can use it for
    any custom logic you want to implement in your project.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还有许多其他功能……它的限制非常少，因此你可以在项目中实现任何自定义逻辑。
- en: Final Thoughts
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最后的想法
- en: Hydra paves the way to a scalable configuration management system which gives
    you a power to expand the efficiency of your workflow and maintain the flexibility
    to make changes to your configurations as needed. The ability to easily switch
    between different configurations, simply recompose it and try out different approaches
    without manually updating the code is a key advantage of using such a system for
    solving machine learning problems, especially in deep learning related tasks,
    when additional flexibility is so critical.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra为可扩展的配置管理系统铺平了道路，使你能够扩展工作流程的效率，同时保持对配置的灵活更改能力。能够轻松切换不同的配置，简单地重新组合并尝试不同的方法，而无需手动更新代码，是解决机器学习问题（尤其是深度学习相关任务）时使用此系统的关键优势，因为在这些任务中，额外的灵活性至关重要。
- en: '**[Alexander Gorodnitskiy](http://linkedin.com/in/gorodnitskiy/)** is a machine
    learning engineer with a deep knowledge of ML, Computer Vision and Analytics.
    I have 3+ years of experience in creating and improving products using machine
    learning.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**[亚历山大·戈罗德尼茨基](http://linkedin.com/in/gorodnitskiy/)** 是一位机器学习工程师，具备深厚的机器学习、计算机视觉和分析知识。我拥有超过3年的经验，专注于使用机器学习创建和改进产品。'
- en: More On This Topic
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Versioning Machine Learning Experiments vs Tracking Them](https://www.kdnuggets.com/2021/12/versioning-machine-learning-experiments-tracking.html)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[机器学习实验的版本控制与跟踪](https://www.kdnuggets.com/2021/12/versioning-machine-learning-experiments-tracking.html)'
- en: '[How to Design Experiments for Data Collection](https://www.kdnuggets.com/2022/04/design-experiments-data-collection.html)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何设计数据收集实验](https://www.kdnuggets.com/2022/04/design-experiments-data-collection.html)'
- en: '[A Solid Plan for Learning Data Science, Machine Learning, and Deep Learning](https://www.kdnuggets.com/2023/01/mwiti-solid-plan-learning-data-science-machine-learning-deep-learning.html)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习数据科学、机器学习和深度学习的实用计划](https://www.kdnuggets.com/2023/01/mwiti-solid-plan-learning-data-science-machine-learning-deep-learning.html)'
- en: '[AI, Analytics, Machine Learning, Data Science, Deep Learning…](https://www.kdnuggets.com/2021/12/developments-predictions-ai-machine-learning-data-science-research.html)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[人工智能、分析、机器学习、数据科学、深度学习…](https://www.kdnuggets.com/2021/12/developments-predictions-ai-machine-learning-data-science-research.html)'
- en: '[15 Free Machine Learning and Deep Learning Books](https://www.kdnuggets.com/2022/10/15-free-machine-learning-deep-learning-books.html)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[15本免费的机器学习和深度学习书籍](https://www.kdnuggets.com/2022/10/15-free-machine-learning-deep-learning-books.html)'
- en: '[KDnuggets News, November 2: The Current State of Data Science…](https://www.kdnuggets.com/2022/n43.html)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻，11月2日：数据科学的当前状态…](https://www.kdnuggets.com/2022/n43.html)'
