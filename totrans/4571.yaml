- en: How to Easily Deploy Machine Learning Models Using Flask
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/10/easily-deploy-machine-learning-models-using-flask.html](https://www.kdnuggets.com/2019/10/easily-deploy-machine-learning-models-using-flask.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: When a data scientist/machine learning engineer develops a machine learning
    model using Scikit-Learn, TensorFlow, Keras, PyTorch etc, the ultimate goal is
    to make it available in production. Often times when working on a machine learning
    project, we focus a lot on Exploratory Data Analysis(EDA), Feature Engineering,
    tweaking with hyper-parameters etc. But we tend to forget our main goal, which
    is to extract real value from the model predictions.
  prefs: []
  type: TYPE_NORMAL
- en: Deployment of machine learning models or putting models into production means
    making your models available to the end users or systems. However, there is complexity
    in the deployment of machine learning models. This post aims to make you get started
    with putting your trained machine learning models into production using Flask
    API.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: I will be using linear regression to predict the sales value in the third month
    using rate of interest and sales of the first two months.
  prefs: []
  type: TYPE_NORMAL
- en: What is Linear Regression
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The objective of a linear regression model is to find a relationship between
    one or more features(independent variables) and a continuous target variable(dependent
    variable). When there is only feature it is called *Uni-variate* Linear Regression
    and if there are multiple features, it is called *Multi*ple Linear Regression.
  prefs: []
  type: TYPE_NORMAL
- en: Hypothesis of Linear Regression
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The linear regression model can be represented by the following equation
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/66b14abbd4776598a7ca2cd143fe394f.png)'
  prefs: []
  type: TYPE_IMG
- en: '*Y* is the predicted value'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*θ*₀ is the bias term.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*θ*₁,…,*θ*ₙ are the model parameters'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*x*₁, *x*₂,…,*x*ₙ are the feature values.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure](../Images/ea63a8d669e197d57be01f7ab93f9d2c.png)'
  prefs: []
  type: TYPE_IMG
- en: Linear regression illustrated
  prefs: []
  type: TYPE_NORMAL
- en: Why Flask?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Easy to use.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Built in development server and debugger.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrated unit testing support.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RESTful request dispatching.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extensively documented.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Project Structure
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This project has four parts :'
  prefs: []
  type: TYPE_NORMAL
- en: model.py — This contains code for the machine learning model to predict sales
    in the third month based on the sales in the first two months.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: app.py — This contains Flask APIs that receives sales details through GUI or
    API calls, computes the predicted value based on our model and returns it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: request.py — This uses requests module to call APIs defined in app.py and displays
    the returned value.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: HTML/CSS — This contains the HTML template and CSS styling to allow user to
    enter sales detail and displays the predicted sales in the third month.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure](../Images/381cfc742cb3bbfe4e2116fcd2a28c59.png)'
  prefs: []
  type: TYPE_IMG
- en: Pipeline for deployment of a Machine Learning model
  prefs: []
  type: TYPE_NORMAL
- en: Environment and tools
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: scikit-learn
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: pandas
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: numpy
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: flask
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Where is the code?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Without much ado, let’s get started with the code. The complete project on github
    can be found [here](https://github.com/abhinavsagar/Machine-Learning-Deployment-Tutorials).
  prefs: []
  type: TYPE_NORMAL
- en: Let’s get started with making the front end using HTML for the user to input
    the values. There are three fields which need to be filled by the user — rate
    of interest, sales in first month and sales in second month.
  prefs: []
  type: TYPE_NORMAL
- en: Next I did some styling using CSS for the input button, login buttons and the
    background.
  prefs: []
  type: TYPE_NORMAL
- en: '>'
  prefs: []
  type: TYPE_NORMAL
- en: I created a custom sales dataset for this project which has four columns — rate
    of interest, sales in first month, sales in second month and sales in third month.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s now make a machine learning model to predict sales in the third month.
    First let’s deal with missing values using Pandas. Missing Data can occur when
    no information is provided for one or more items. I filled the rate column with
    zero and sales in first month with mean of that column if the value was not provided.
    I used linear regression as the machine learning algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: Serializing/De-Serializing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In simple words serializing is a way to write a python object on the disk that
    can be transferred anywhere and later de-serialized (read) back by a python script.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/02f464ba1e9a94d360e1fd82db4793df.png)'
  prefs: []
  type: TYPE_IMG
- en: Serialization, De-Serialization
  prefs: []
  type: TYPE_NORMAL
- en: I converted the model which is in the form of a python object into a character
    stream using pickling. The idea is that this character stream contains all the
    information necessary to reconstruct the object in another python script.
  prefs: []
  type: TYPE_NORMAL
- en: The next part was to make an API which receives sales details through GUI and
    computes the predicted sales value based on our model. For this I de- serialized
    the pickled model in the form of python object. I set the main page using `index.html`.
    On submitting the form values using POST request to `/predict`, we get the predicted
    sales value.
  prefs: []
  type: TYPE_NORMAL
- en: The results can be shown by making another POST request to `/results.` It receives
    JSON inputs, uses the trained model to make a prediction and returns that prediction
    in JSON format which can be accessed through the API endpoint.
  prefs: []
  type: TYPE_NORMAL
- en: Finally I used requests module to call APIs defined in `app.py`. It displays
    the returned sales value in the third month.
  prefs: []
  type: TYPE_NORMAL
- en: Results
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Run the web application using this command.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/4827a216adfb49f733a532383308fef3.png)'
  prefs: []
  type: TYPE_IMG
- en: Open [http://127.0.0.1:5000/](http://127.0.0.1:5000/) in your web-browser, and
    the GUI as shown below should appear.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/8a10541af2b2ffaa6337a61600c1f546.png)'
  prefs: []
  type: TYPE_IMG
- en: Graphical user interface
  prefs: []
  type: TYPE_NORMAL
- en: Conclusions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This article demonstrated a very simple way to deploy machine learning models.
    I used linear regression to predict sales value in the third month using rate
    of interest and sales in first two months. One can use the knowledge gained in
    this blog to make some cool models and take them into production so that others
    can appreciate their work.
  prefs: []
  type: TYPE_NORMAL
- en: References/Further Readings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**[Writing a simple Flask Web Application in 80 lines](https://towardsdatascience.com/writing-a-simple-flask-web-application-in-80-lines-cb5c386b089a?source=post_page-----b95af8fe34d4----------------------)**'
  prefs: []
  type: TYPE_NORMAL
- en: Sample tutorial for getting started with flask
  prefs: []
  type: TYPE_NORMAL
- en: '[**Deploying Machine Learning Models | Coursera**](https://www.coursera.org/learn/deploying-machine-learning-models?source=post_page-----b95af8fe34d4----------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Learn Deploying Machine Learning Models from University of California San Diego.
    In this course we will learn about…
  prefs: []
  type: TYPE_NORMAL
- en: '**[**Simple way to deploy machine learning models to cloud**](https://towardsdatascience.com/simple-way-to-deploy-machine-learning-models-to-cloud-fd58b771fdcf?source=post_page-----b95af8fe34d4----------------------)**'
  prefs: []
  type: TYPE_NORMAL
- en: Deploy your first ML model to production with a simple tech stack
  prefs: []
  type: TYPE_NORMAL
- en: '[**Overview of Different Approaches to Deploying Machine Learning Models in
    Production - KDnuggets**](https://www.kdnuggets.com/2019/06/approaches-deploying-machine-learning-production.html?source=post_page-----b95af8fe34d4----------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: There are different approaches to putting models into productions, with benefits
    that can vary dependent on the…
  prefs: []
  type: TYPE_NORMAL
- en: Before You Go
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The corresponding source code can be found here.
  prefs: []
  type: TYPE_NORMAL
- en: '**[abhinavsagar/Machine-Learning-Deployment-Tutorials](https://github.com/abhinavsagar/Machine-Learning-Deployment-Tutorials?source=post_page-----b95af8fe34d4----------------------)**'
  prefs: []
  type: TYPE_NORMAL
- en: Sample end to end projects from data collection to putting models into production
    …
  prefs: []
  type: TYPE_NORMAL
- en: Contacts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you want to keep updated with my latest articles and projects [follow me
    on Medium](https://medium.com/@abhinav.sagar). These are some of my contacts details:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Personal Website](https://abhinavsagar.github.io/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Linkedin](https://in.linkedin.com/in/abhinavsagar4)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Medium Profile](https://medium.com/@abhinav.sagar)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[GitHub](https://github.com/abhinavsagar)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Kaggle](https://www.kaggle.com/abhinavsagar)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Bio: [Abhinav Sagar](https://www.linkedin.com/in/abhinavsagar4)** is a senior
    year undergrad at VIT Vellore. He is interested in data science, machine learning
    and their applications to real-world problems.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/how-to-easily-deploy-machine-learning-models-using-flask-b95af8fe34d4).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Building a Flask API to Automatically Extract Named Entities Using SpaCy](/2019/04/building-flask-api-automatically-extract-named-entities-spacy.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deploy your PyTorch model to Production](/2019/03/deploy-pytorch-model-production.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Hackathon Guide for Aspiring Data Scientists](/2019/07/hackathon-guide-aspiring-data-scientists.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Scrape Images Easily from Websites in A No-Coding Way](https://www.kdnuggets.com/2022/06/octoparse-scrape-images-easily-websites-nocoding-way.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Explore LLMs Easily on Your Laptop with openplayground](https://www.kdnuggets.com/2023/04/explore-llms-easily-laptop-openplayground.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Easily Integrate LLMs into Your Scikit-learn Workflow with Scikit-LLM](https://www.kdnuggets.com/easily-integrate-llms-into-your-scikit-learn-workflow-with-scikit-llm)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Survey: Machine Learning Projects Still Routinely Fail to Deploy](https://www.kdnuggets.com/survey-machine-learning-projects-still-routinely-fail-to-deploy)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deploy a Machine Learning Web App with Heroku](https://www.kdnuggets.com/2022/04/deploy-machine-learning-web-app-heroku.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Successfully Deploy Data Science Projects](https://www.kdnuggets.com/2022/01/successfully-deploy-data-science-projects.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
