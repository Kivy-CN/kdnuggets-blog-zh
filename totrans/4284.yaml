- en: Feature Engineering of DateTime Variables for Data Science, Machine Learning
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2021/04/feature-engineering-datetime-variables-data-science-machine-learning.html](https://www.kdnuggets.com/2021/04/feature-engineering-datetime-variables-data-science-machine-learning.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Samarth Agrawal](https://www.linkedin.com/in/samarth-agrawal-2501/),
    Data Scientist at Toyota**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4ed1b796931f51585f4049a3784eeaff.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
- en: Feature Engineering of DateTime Variables. Image by Author.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: INTRODUCTION
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: DateTime fields require [Feature Engineering](https://www.kdnuggets.com/2018/12/feature-engineering-explained.html)
    to turn them from data to insightful information that can be used by our Machine
    Learning Models. This post is divided into 3 parts and a Bonus section towards
    the end, we will use a combination of inbuilt pandas and NumPy functions as well
    as our functions to extract useful features.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Part 1 — Extract Date / Time Components
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Part 2 — Create Boolean Flags
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Part 3 — Calculate Date / Time Differences
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bonus — Feature Engineering in 2 lines of code using `fast_ml`
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BACKGROUND
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Whenever I have worked on e-commerce related data, in some way or the other
    dataset contains DateTime columns.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: User registration date-time
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: User login date-time
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Transaction date-time
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disputed transaction date-time
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: … and many more
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At the outset, this date field gives us nothing more than a specific point on
    a timeline. But these DateTime fields are potential treasure troves of data. These
    fields are immensely powerful ‘if used rightly’ for uncovering patterns.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: As a Data Scientist, your job is to bring the insight to the table, and for
    that, you are required to ask the right questions. For Ex.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '**Ques 1** — When do you see most carts getting created?'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ques 2 **— When do you see most carts getting abandoned?'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ques 3** — When do you see the most fraudulent transactions?'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ques 4** — When do the maximum users subscribe?'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ques 5** — When are certain items purchased most often?'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ques 6** — After how many days/hours after registration user makes the first
    order?'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ques 7** — After how many days of inactivity customer never returns to your
    site?'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: … etc
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, To answer these questions, you get back to data to engineer these DateTime
    fields. And then a whole lot of patterns can be discovered.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '**Part 1** of the post will provide you feature engineering steps to answer
    questions like 1, 2 & 3'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '**Ans 1** — When do you see most carts getting created? ***The first week of
    the month***'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ans 2** — When do you see most carts getting abandoned? ***Wednesday-Afternoon***'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ans 3** — When do you see the most fraudulent transactions? ***Friday-Late
    nite***'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Part 2** of the post will provide you feature engineering steps to answer
    questions like in 4 & 5'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '**Ans 4** — When do the maximum users subscribe? ***At the start of the year***'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ans 5** — When are certain items purchased most often? ***At the start of
    the month***'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Part 3** of the post will provide you feature engineering steps to answer
    questions like in 6 & 7'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: '**Ans 6** — After how many days/hours after registration user makes the first
    order? ***Within 2 hours***'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ans 7** — After how many days of inactivity customer never returns to your
    site? ***After 14 days of inactivity***'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I have used an example of e-commerce data where I have personally found a lot
    of use cases but by no means the scope of extracting information is related to
    just that. We will see in this post how some of the behaviors that can be learned
    by asking the right question ie. doing the right feature engineering has proved
    useful in multiple industries across a variety of problems.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: LET’S GET STARTED
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Load the dataset
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Pandas provide a very simple yet very powerful way to deal with DateTime-related
    variables by parsing them as dates. You can pass as a list all the variables that
    are date-time related in the parameter `parse_dates`.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Let’s say you are not aware of the DateTime variables upfront and after investigating
    the data you found that some of the variables are date-time. So instead of reloading
    the data, pandas provide another useful function `to_datetime` to convert the
    data type to DateTime.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Part 1\. Extract Date / Time Component
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As illustrated in the example above, we can extract the component of the date-time
    part (`year`, `quarter`, `month`, `day`, `day_of_week`, `day_of_year`, `week_of_year`,
    `time`, `hour`, `minute`, `second`, `day_part`) from the given date-time variable.
    The below list provides several of such components that can be extracted using
    pandas inbuilt functions.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: 'Syntax:'
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We can extract all these components using `.dt` accessor. [Read more about the
    date accessors here](https://pandas.pydata.org/pandas-docs/stable/user_guide/basics.html#basics-dt-accessors)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/865a594fd09fdc507e55080c852fbd2d.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
- en: Extracted components from datetime variable issued_date. Image by Author
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Below is the code as shown in the image. All the other components can also be
    extracted in a similar way
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Note:**'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: For Monday : `day_of_week = 0`,
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tuesday : `day_of_week=1`,
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: …
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sunday : `day_of_week=6`
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Creating Day Part:'
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/52e9229dcc9bf851d292a6ec9fc75fff.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
- en: Creating day part for datetime variable issued_date. Image by Author
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: Part 2\. Create Boolean Flags
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As illustrated in the example above, we can extract a lot of boolean Flags (`is_month_start`,
    `is_month_end`, `is_quarter_start`, `is_quarter_end`, `is_year_start`, `is_year_end`,
    `is_weekend`) from the given date-time variable. The below list provides several
    of such components that can be extracted using pandas inbuilt functions as well
    as by creating some of our functions.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: 'Syntax:'
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Again, we can use `.dt` accessor to extract a lot of these boolean flags.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/aa41450da8348b1993205f0ca49b54ef.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
- en: Extracted boolean flags from datetime variable issued_date. Image by Author
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Creating Weekend Flag:'
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![](../Images/4ce3c583bb90f829bdf179decda50834.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
- en: Creating weekend flag for datetime variable issued_date. Image by Author
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: If we check the calendar, we will see that 26th of Oct, 2013 was a Saturday
    — a weekend.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Part 3\. Calculate Date / Time Differences
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Often your questions/analysis will be relative to another point of reference.
    Like,
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: After how many days/hours after registration user makes the first order? *registration_date
    & first_order_date*
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In how many days/hours customer’s complaint was resolved? *complain_date & resolution_date*
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From today, how recently customer ordered from your site? *today & last_order_date*
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: …etc
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In our example dataset, we have two columns date_last_payment & date_issued.
    Let’s see what happens when we just take a difference of these 2 columns.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d4e4299913fdc2c2cf1b5cf9afe22449.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
- en: Calculating time differences in pandas. Image by Author.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: 'Pandas by default provide the difference in ‘days’. Notice the `dtype: timedelta64[ns]`.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: 'From the numpy documentation:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: “Because NumPy doesn’t have a physical quantities system in its core, the timedelta64
    data type was created to complement datetime64”
  id: totrans-93
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Now, if we just want the numeric part and not the entire string `947 days`,
    we can do that by using the .dt accessor.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/607f87dc7013020fc7590929cb9f4d81.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
- en: Calculating time differences in pandas using .dt accessor. Image by Author.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately we can’t get the months in similar fashion.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bc4f9ebfcbfe10a6861580b07f57cc81.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
- en: Calculating time differences in pandas using .dt accessor is not scalable. Image
    by Author.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: Here the `timedelta64` from NumPy becomes very useful.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: 'Syntax:'
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In order to get the number of months between date loan was issued and date last
    payment was done, we will write this
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6e671aa2cc1f5543a911f1572b1fe269.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
- en: Calculating time differences in pandas using NumPy timedelta64\. Image by Author.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'timedelta64 can take following parameters for calculating the difference between
    2 dates:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: ‘D’ → for Days
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘W’ → for Weeks
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘M’ → for Months
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘Y’ → for Years
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘h’ → for Hours
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BONUS!
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can use fast_ml to create all these datetime features
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: First, install `fast_ml` package
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: And then, from the `feature_engineering` module import the method for engineering
    date time features
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Now, this works in the exact same way as other transformers, preprocessors from
    sklearn.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: Instantiate
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fit
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Transform
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转换
- en: '[PRE9]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/77c4c459ae7774e8713ba134f540f00f.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/77c4c459ae7774e8713ba134f540f00f.png)'
- en: Feature Engineering of Datetime variables using Fast_ml. Image by Author.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Fast_ml 进行日期时间变量的特征工程。图片来源：作者。
- en: All the columns are not visible in the screenshot. Let’s just look at the columns
    of the dataset
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕截图中并未显示所有列。让我们只查看数据集的列。
- en: '[PRE10]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Thanks for reading!!
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 感谢阅读！！
- en: If you enjoyed this, [follow me on medium](https://samarthagrawal86.medium.com/) for
    more.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你喜欢这个，*请在 medium 上关注我* [follow me on medium](https://samarthagrawal86.medium.com/)。
- en: Your claps are a huge encouragement and help in writing more and writing better.
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的点赞是我写作的巨大鼓励，并帮助我写得更好。
- en: Interested in collaborating? Let’s connect on [Linkedin](https://www.linkedin.com/in/samarth-agrawal-2501/).
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有兴趣合作吗？让我们在 [Linkedin](https://www.linkedin.com/in/samarth-agrawal-2501/) 上联系。
- en: Please feel free to write your thoughts/suggestions/feedback.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请随时写下你的想法/建议/反馈。
- en: '[Kaggle link](https://www.kaggle.com/nextbigwhat/feature-engineering-datetime-variables)'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Kaggle 链接](https://www.kaggle.com/nextbigwhat/feature-engineering-datetime-variables)'
- en: '[Fast_ml link](https://pypi.org/project/fast-ml/)'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Fast_ml 链接](https://pypi.org/project/fast-ml/)'
- en: 'Notebook is available at the following location with fully functional code:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: Notebook 可以在以下位置获得，包含完整功能的代码：
- en: '[**Feature Engineering of DateTime Variables**'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '[**日期时间变量的特征工程**](https://www.kdnuggets.com/2023/06/rapids-cudf-leverage-gpu-feature-engineering.html)'
- en: Explore and run machine learning code with Kaggle Notebooks | Using data from
    loan_data](https://www.kaggle.com/nextbigwhat/feature-engineering-of-datetime-variables?scriptVersionId=61041780)
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 探索并运行 Kaggle Notebooks 中的机器学习代码 | 使用数据来自 loan_data](https://www.kaggle.com/nextbigwhat/feature-engineering-of-datetime-variables?scriptVersionId=61041780)
- en: '**Bio: [Samarth Agrawal](https://www.linkedin.com/in/samarth-agrawal-2501/)**
    is a Data Scientist at Toyota, and a Data Science practitioner and communicator.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：[Samarth Agrawal](https://www.linkedin.com/in/samarth-agrawal-2501/)**
    是丰田的数据科学家，同时也是数据科学从业者和传播者。'
- en: '[Original](https://samarthagrawal86.medium.com/feature-engineering-of-datetime-variables-for-data-science-machine-learning-45e611c632ad).
    Reposted with permission.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://samarthagrawal86.medium.com/feature-engineering-of-datetime-variables-for-data-science-machine-learning-45e611c632ad)。已获许可重新发布。'
- en: '**Related:**'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Quick Feature Engineering with Dates Using fast.ai](/2018/03/feature-engineering-dates-fastai.html)'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 fast.ai 进行快速特征工程](/2018/03/feature-engineering-dates-fastai.html)'
- en: '[Feature Engineering for Numerical Data](/2020/09/feature-engineering-numerical-data.html)'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数值数据的特征工程](/2020/09/feature-engineering-numerical-data.html)'
- en: '[Data Science 101: Normalization, Standardization, and Regularization](/2021/04/data-science-101-normalization-standardization-regularization.html)'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学 101：归一化、标准化与正则化](/2021/04/data-science-101-normalization-standardization-regularization.html)'
- en: More On This Topic
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关主题
- en: '[Feature Store Summit 2022: A free conference on Feature Engineering](https://www.kdnuggets.com/2022/10/hopsworks-feature-store-summit-2022-free-conference-feature-engineering.html)'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[特征存储峰会 2022：关于特征工程的免费会议](https://www.kdnuggets.com/2022/10/hopsworks-feature-store-summit-2022-free-conference-feature-engineering.html)'
- en: '[A Practical Approach To Feature Engineering In Machine Learning](https://www.kdnuggets.com/2023/07/practical-approach-feature-engineering-machine-learning.html)'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[机器学习中特征工程的实用方法](https://www.kdnuggets.com/2023/07/practical-approach-feature-engineering-machine-learning.html)'
- en: '[Building a Tractable, Feature Engineering Pipeline for Multivariate…](https://www.kdnuggets.com/2022/03/building-tractable-feature-engineering-pipeline-multivariate-time-series.html)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[构建一个可处理的多变量特征工程管道](https://www.kdnuggets.com/2022/03/building-tractable-feature-engineering-pipeline-multivariate-time-series.html)'
- en: '[Using RAPIDS cuDF to Leverage GPU in Feature Engineering](https://www.kdnuggets.com/2023/06/rapids-cudf-leverage-gpu-feature-engineering.html)'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 RAPIDS cuDF 利用 GPU 进行特征工程](https://www.kdnuggets.com/2023/06/rapids-cudf-leverage-gpu-feature-engineering.html)'
- en: '[Feature Engineering for Beginners](https://www.kdnuggets.com/feature-engineering-for-beginners)'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[特征工程入门](https://www.kdnuggets.com/feature-engineering-for-beginners)'
- en: '[Alternative Feature Selection Methods in Machine Learning](https://www.kdnuggets.com/2021/12/alternative-feature-selection-methods-machine-learning.html)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[机器学习中的替代特征选择方法](https://www.kdnuggets.com/2021/12/alternative-feature-selection-methods-machine-learning.html)'
