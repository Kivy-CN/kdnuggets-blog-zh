- en: Organize, Search, and Back Up Files with Python’s Pathlib
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 的 Pathlib 组织、搜索和备份文件
- en: 原文：[https://www.kdnuggets.com/organize-search-and-back-up-files-with-pythons-pathlib](https://www.kdnuggets.com/organize-search-and-back-up-files-with-pythons-pathlib)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/organize-search-and-back-up-files-with-pythons-pathlib](https://www.kdnuggets.com/organize-search-and-back-up-files-with-pythons-pathlib)
- en: '![pathlib-examples](../Images/cf0155e2b6b24b2c3482db40b1b6e159.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![pathlib-examples](../Images/cf0155e2b6b24b2c3482db40b1b6e159.png)'
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Python’s built-in [pathlib module](https://docs.python.org/3/library/pathlib.html)
    makes working with filesystem paths super simple. In [How To Navigate the Filesystem
    with Python’s Pathlib](https://www.kdnuggets.com/how-to-navigate-the-filesystem-with-pythons-pathlib),
    we looked at the basics of working with path objects and navigating the filesystem.
    It’s time to go further.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Python 内置的 [pathlib 模块](https://docs.python.org/3/library/pathlib.html) 使得处理文件系统路径变得非常简单。在
    [如何使用 Python 的 Pathlib 导航文件系统](https://www.kdnuggets.com/how-to-navigate-the-filesystem-with-pythons-pathlib)
    中，我们了解了处理路径对象和导航文件系统的基础知识。现在是时候深入了解了。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前 3 个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速开启网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你在 IT 领域的组织'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'In this tutorial, we’ll go over three specific file management tasks using
    the capabilities of the pathlib module:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将使用 pathlib 模块的功能来处理三项具体的文件管理任务：
- en: Organizing files by extension
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按扩展名组织文件
- en: Searching for specific files
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 搜索特定文件
- en: Backing up important files
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 备份重要文件
- en: By the end of this tutorial, you'll have learned how to use pathlib for file
    management tasks. Let’s get started!
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程结束时，你将学会如何使用 pathlib 进行文件管理任务。让我们开始吧！
- en: 1\. Organize Files by Extension
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 按扩展名组织文件
- en: When you’re researching for and working on a project, you’ll often create ad
    hoc files and download related documents into your working directory until it's
    a clutter, and you need to organize it.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在为一个项目进行研究和工作时，你通常会创建临时文件并下载相关文档到工作目录中，直到它变得杂乱，你需要整理它。
- en: Let's take a simple example where the project directory contains requirements.txt,
    config files and Python scripts. We’d like to sort the files into subdirectories—one
    for each extension. For convenience, let's choose the extensions as the name of
    the subdirectories.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个简单的例子，其中项目目录包含 requirements.txt、配置文件和 Python 脚本。我们希望将文件按扩展名分类到子目录中——每个扩展名对应一个子目录。为了方便起见，我们选择将扩展名作为子目录的名称。
- en: '![organize-files](../Images/8375a8a21063cc3860e26869efe8fb33.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![organize-files](../Images/8375a8a21063cc3860e26869efe8fb33.png)'
- en: Organize Files by Extension | Image by Author
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 按扩展名组织文件 | 图片由作者提供
- en: 'Here’s a Python script that scans a directory, identifies files by their extensions,
    and moves them into respective subdirectories:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个 Python 脚本，它扫描一个目录，按文件扩展名识别文件，并将它们移动到相应的子目录中：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `organize_files_by_extension()` function takes a directory path as input,
    resolves it to an absolute path, and organizes the files within that directory
    by their file extensions. It first ensures that the specified path exists and
    is a directory.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`organize_files_by_extension()` 函数接受一个目录路径作为输入，将其解析为绝对路径，并按文件扩展名在该目录内组织文件。它首先确保指定的路径存在且为目录。'
- en: Then, it iterates over all items in the directory. For each file, it retrieves
    the file extension, creates a new directory named after the extension (if it doesn't
    already exist), and moves the file into this new directory.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，它遍历目录中的所有项目。对于每个文件，它获取文件扩展名，创建一个以扩展名命名的新目录（如果该目录尚不存在），并将文件移动到这个新目录中。
- en: After moving each file, it confirms the success of the operation by checking
    the existence of the file in the new location. If the specified path does not
    exist or is not a directory, it prints an error message.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动每个文件后，它会通过检查文件在新位置的存在来确认操作是否成功。如果指定路径不存在或不是目录，它会打印错误信息。
- en: 'Here’s the output for the example function call (organizing files in the new_project
    directory):'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是示例函数调用的输出（在 new_project 目录中整理文件）：
- en: '![organize](../Images/fb56ab7258f4809fd98ad6ee186a31d6.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![organize](../Images/fb56ab7258f4809fd98ad6ee186a31d6.png)'
- en: Now try this on a project directory in your working environment. I’ve used if-else
    to account for errors. But you can as well use try-except blocks to make this
    version better.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在你的工作环境中的项目目录上尝试这个。我使用了 if-else 来处理错误。但你也可以使用 try-except 块来改进这个版本。
- en: 2\. Search for Specific Files
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 查找特定文件
- en: Sometimes you may not want to organize the files by their extension into different
    subdirectories as with the previous example. But you may only want to find all
    files with a specific extension (like all image files), and for this you can use
    globbing.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 有时你可能不希望像前面的示例那样按扩展名将文件组织到不同的子目录中。但你可能只想找到所有具有特定扩展名的文件（如所有图像文件），为此你可以使用 globbing。
- en: Say we want to find the requirements.txt file to look at the project’s dependencies.
    Let's use the same example but after grouping the files into subdirectories by
    the extension.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想找到 requirements.txt 文件来查看项目的依赖项。让我们使用相同的示例，但在按扩展名将文件分组到子目录之后。
- en: 'If you use the `glob()` method on the path object as shown to find all text
    files (defined by the pattern ''*.txt''), you’ll see that it doesn''t find the
    text file:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用如上所示的 `glob()` 方法在路径对象上查找所有文本文件（由模式 '*.txt' 定义），你会发现它没有找到文本文件：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This is because `glob()` only searches the current directory, which does not
    contain the requirements.txt file.The requirements.txt file is in the txt subdirectory.
    So you have to use **recursive globbing** with the `rglob()` method instead.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为 `glob()` 只搜索当前目录，而该目录不包含 requirements.txt 文件。requirements.txt 文件位于 txt
    子目录中。因此，你必须使用 **递归 globbing** 和 `rglob()` 方法。
- en: 'So here’s the code to find the text files and print out their contents:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这里是找到文本文件并打印其内容的代码：
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `search_and_process_text_files` function takes a directory path as input,
    resolves it to an absolute path, and searches for all `.txt` files within that
    directory *and* its subdirectories using the `rglob()` method.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`search_and_process_text_files` 函数接收一个目录路径作为输入，将其解析为绝对路径，并使用 `rglob()` 方法在该目录
    *及* 其子目录中查找所有 `.txt` 文件。'
- en: For each text file found, it prints the file's path and then reads and prints
    out the file's contents. This function is useful for recursively locating and
    processing all text files within a specified directory.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 对于找到的每个文本文件，它打印文件的路径，然后读取并打印出文件的内容。此函数对于递归地定位和处理指定目录中的所有文本文件非常有用。
- en: 'Because requirements.txt is the only text file in our example, we get the following
    output:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 requirements.txt 是我们示例中唯一的文本文件，我们得到了以下输出：
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now that you know how to use globbing and recursive globbing, try to redo the
    first task—organizing files by extension—using globbing to find and group the
    files and then move them to the target subdirectory.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你知道如何使用 globbing 和递归 globbing，尝试重新做第一个任务——按扩展名整理文件——使用 globbing 查找并分组文件，然后将它们移动到目标子目录。
- en: 3\. Back Up Important Files
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 备份重要文件
- en: Organizing files by the extension and searching for specific files are the examples
    we’ve seen thus far. But how about backing up certain important files, because
    why not?
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 迄今为止我们看到的示例是按扩展名整理文件和查找特定文件。但如何备份某些重要文件呢？为什么不呢？
- en: Here we’d like to copy files from the project directory into a backup directory
    rather than move the file to another location. In addition to pathlib, we’ll also
    use the [shutil](https://docs.python.org/3/library/shutil.html) module’s copy
    function.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们希望将文件从项目目录复制到备份目录，而不是将文件移动到另一个位置。除了 pathlib，我们还将使用 [shutil](https://docs.python.org/3/library/shutil.html)
    模块的 copy 函数。
- en: 'Let''s create a function that copies all files with a specific extension (all
    .py files) to a backup directory:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个函数，将所有具有特定扩展名（所有 .py 文件）的文件复制到备份目录：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `back_up_files()` takes in an existing directory path and a backup directory
    path function and backs up all Python files from a specified directory and its
    subdirectories into a designated backup directory.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`back_up_files()` 函数接收一个现有的目录路径和一个备份目录路径函数，并将指定目录及其子目录中的所有 Python 文件备份到指定的备份目录。'
- en: It creates path objects for both the source directory and the backup directory,
    and ensures that the backup directory exists by creating it and any necessary
    parent directories if they do not already exist.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 它为源目录和备份目录创建路径对象，并通过创建备份目录及其任何必要的父目录（如果尚不存在）来确保备份目录的存在。
- en: The function then iterates through all `.py` files in the source directory using
    the `rglob()` method. For each Python file found, it copies the file to the backup
    directory while retaining the original filename. Essentially, this function helps
    in creating a backup of all Python files within a project directory
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，函数使用 `rglob()` 方法迭代源目录中的所有 `.py` 文件。对于每个找到的 Python 文件，它将文件复制到备份目录，同时保留原始文件名。本质上，这个函数帮助在项目目录内创建所有
    Python 文件的备份。
- en: 'After running the script and verifying the output, you can always check the
    contents of the backup directory:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本并验证输出后，你可以随时检查备份目录的内容：
- en: '![backup](../Images/19072361bcdcaf944a25088a4f8132a4.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![备份](../Images/19072361bcdcaf944a25088a4f8132a4.png)'
- en: For your example directory, you can use `back_up_files('/path/to/directory',
    '/path/to/backup/directory')` to back up files of interest.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 对于你的示例目录，你可以使用 `back_up_files('/path/to/directory', '/path/to/backup/directory')`
    来备份感兴趣的文件。
- en: Wrapping Up
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: In this tutorial, we've explored practical examples of using Python's pathlib
    module to organize files by extension, search for specific files, and backup important
    files. You can find all the code used in this tutorial [on GitHub](https://github.com/balapriyac/python-basics/tree/main/pathlib-examples).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们探讨了使用 Python 的 pathlib 模块来按扩展名组织文件、搜索特定文件和备份重要文件的实际示例。你可以在 [GitHub](https://github.com/balapriyac/python-basics/tree/main/pathlib-examples)
    上找到本教程中使用的所有代码。
- en: As you can see, the pathlib module makes working with file paths and file management
    tasks easier and more efficient. Now, go ahead and apply these concepts in your
    own projects to handle your file management tasks better. Happy coding!
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，pathlib 模块使得处理文件路径和文件管理任务变得更加轻松和高效。现在，继续在你的项目中应用这些概念，以更好地处理文件管理任务。祝编程愉快！
- en: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)****
    is a developer and technical writer from India. She likes working at the intersection
    of math, programming, data science, and content creation. Her areas of interest
    and expertise include DevOps, data science, and natural language processing. She
    enjoys reading, writing, coding, and coffee! Currently, she''s working on learning
    and sharing her knowledge with the developer community by authoring tutorials,
    how-to guides, opinion pieces, and more. Bala also creates engaging resource overviews
    and coding tutorials.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)****
    是来自印度的开发者和技术作家。她喜欢在数学、编程、数据科学和内容创作的交汇处工作。她的兴趣和专长领域包括 DevOps、数据科学和自然语言处理。她喜欢阅读、写作、编码和喝咖啡！目前，她正在通过编写教程、操作指南、意见文章等方式学习并与开发者社区分享她的知识。Bala
    还创建了有趣的资源概述和编码教程。'
- en: More On This Topic
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关主题
- en: '[Hyperparameter Tuning Using Grid Search and Random Search in Python](https://www.kdnuggets.com/2022/10/hyperparameter-tuning-grid-search-random-search-python.html)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用网格搜索和随机搜索进行超参数调整（Python）](https://www.kdnuggets.com/2022/10/hyperparameter-tuning-grid-search-random-search-python.html)'
- en: '[Elevate Your Search Engine Skills with Uplimit''s Search with ML Course!](https://www.kdnuggets.com/2023/10/uplimit-elevate-your-search-engine-skills-search-with-ml-course)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通过 Uplimit 的机器学习搜索课程提升你的搜索引擎技能！](https://www.kdnuggets.com/2023/10/uplimit-elevate-your-search-engine-skills-search-with-ml-course)'
- en: '[Building a Visual Search Engine - Part 2: The Search Engine](https://www.kdnuggets.com/2022/02/building-visual-search-engine-part-2.html)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[构建视觉搜索引擎 - 第2部分：搜索引擎](https://www.kdnuggets.com/2022/02/building-visual-search-engine-part-2.html)'
- en: '[How To Navigate the Filesystem with Python''s Pathlib](https://www.kdnuggets.com/how-to-navigate-the-filesystem-with-pythons-pathlib)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何使用 Python 的 Pathlib 导航文件系统](https://www.kdnuggets.com/how-to-navigate-the-filesystem-with-pythons-pathlib)'
- en: '[IMPACT: The Data Observability Summit is back November 8th and the…](https://www.kdnuggets.com/2023/10/monte-carlo-impact-the-data-observability-summit-is-back)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[IMPACT：数据可观察性峰会将于11月8日回归…](https://www.kdnuggets.com/2023/10/monte-carlo-impact-the-data-observability-summit-is-back)'
- en: '[Back to Basics Week 1: Python Programming & Data Science Foundations](https://www.kdnuggets.com/back-to-basics-week-1-python-programming-data-science-foundations)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[回到基础第1周：Python 编程与数据科学基础](https://www.kdnuggets.com/back-to-basics-week-1-python-programming-data-science-foundations)'
