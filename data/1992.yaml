- en: How to Build a Real-Time Recommendation Engine Using Graph Databases
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用图数据库构建实时推荐引擎
- en: 原文：[https://www.kdnuggets.com/2023/08/build-realtime-recommendation-engine-graph-databases.html](https://www.kdnuggets.com/2023/08/build-realtime-recommendation-engine-graph-databases.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2023/08/build-realtime-recommendation-engine-graph-databases.html](https://www.kdnuggets.com/2023/08/build-realtime-recommendation-engine-graph-databases.html)
- en: “This is for you”, “Suggested for you”, or “You may also like”, are phrases
    that have become essential in most digital businesses, particularly in e-commerce,
    or streaming platforms.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: “这是为您推荐的”、“为您推荐”或“您可能还喜欢”等短语已成为大多数数字业务，特别是电子商务或流媒体平台中的必备内容。
- en: 'Although they may seem like a simple concept, they imply a new era in the way
    businesses interact and connect with their customers: the era of recommendations.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管它们可能看起来是一个简单的概念，但它们意味着企业与客户互动和连接的新时代：推荐时代。
- en: Let’s be honest, most of us, if not all of us, have been carried away by Netflix
    recommendations while looking for what to watch, or headed straight for the recommendations
    section on Amazon to see what to buy next.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 坦白说，我们大多数人，甚至所有人，在寻找观看内容时，都会被Netflix的推荐所吸引，或者直接去Amazon的推荐部分查看下一个购买的东西。
- en: In this article, I’m going to explain how a Real-Time Recommendation Engine
    can be built using Graph databases.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将解释如何使用图数据库构建实时推荐引擎。
- en: What is a Recommendation Engine?
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是推荐引擎？
- en: A recommendation engine is a toolkit that applies advanced data filtering and
    predictive analysis to anticipate and predict customers’ needs and wants, i.e.
    which content, products, or services a customer is likely to consume or engage
    with.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐引擎是一种工具包，利用高级数据过滤和预测分析来预测和预判客户的需求和愿望，即客户可能会消费或参与的内容、产品或服务。
- en: 'For getting these recommendations, the engines use the combination of the following
    information:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得这些推荐，引擎使用以下信息的组合：
- en: The customer’s past behaviors and history, e.g. purchased products or watched
    series.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户的过去行为和历史，例如购买的产品或观看的系列。
- en: The customer’s current behaviors and relationships with other customers.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户当前的行为和与其他客户的关系。
- en: The product’s ranking by customers.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品的客户排名。
- en: The business’ best sellers.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 商业的畅销商品。
- en: The behaviors and history of similar or related customers.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类似或相关客户的行为和历史。
- en: What is a Graph database?
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是图数据库？
- en: A Graph database is a NoSQL database where the data is stored in graph structures
    instead of tables or documents. A graph data structure consists of nodes that
    can be connected by relationships. Both nodes and relationships can have their
    own properties (key-value pairs), which further describe them.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图数据库是一种NoSQL数据库，其中数据以图形结构存储，而不是表或文档。图数据结构由节点组成，这些节点可以通过关系连接。节点和关系都可以具有自己的属性（键值对），这些属性进一步描述它们。
- en: 'The following image introduces the basic concepts of the graph data structure:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像介绍了图数据结构的基本概念：
- en: '![How to Build a Real-Time Recommendation Engine Using Graph Databases](../Images/b560e15b1423645e2f1a6bbe52fa31ad.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![如何使用图数据库构建实时推荐引擎](../Images/b560e15b1423645e2f1a6bbe52fa31ad.png)'
- en: Example of a graph data structure
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图数据结构示例
- en: Real-Time Recommendation Engine for Streaming Platforms
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 流媒体平台的实时推荐引擎
- en: Now that we know what are a recommendation engine and a graph database, we’re
    ready to get into how we can build a recommendation engine using graph databases
    for a streaming platform.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了什么是推荐引擎和图数据库，我们已经准备好了解如何为流媒体平台使用图数据库构建推荐引擎。
- en: The graph below stores the movies two customers have seen and the relationship
    between the two customers.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图展示了两个客户观看过的电影及这两个客户之间的关系。
- en: '![How to Build a Real-Time Recommendation Engine Using Graph Databases](../Images/f9262cd91f247751636ac300bb058fb1.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![如何使用图数据库构建实时推荐引擎](../Images/f9262cd91f247751636ac300bb058fb1.png)'
- en: Example of a graph of the streaming platform.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 流媒体平台的图示例。
- en: 'Having this information stored as a graph, we can now think about movie recommendations
    to influence the next movie to watch. The simplest strategy is to show the most
    viewed movies on the entire platform. This can be easy using Cypher query language:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些信息以图的形式存储后，我们现在可以考虑电影推荐，以影响下一个要观看的电影。最简单的策略是显示整个平台上观看次数最多的电影。这可以通过使用Cypher查询语言轻松实现：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'However, this query is very generalist and does not take into account the context
    of the customer, so it’s not optimized for any given customer. We can do it much
    better using the social network of the customer, querying for friends and friends-of-friends
    relationships. With Cypher is very straightforward:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这个查询非常通用，没有考虑客户的上下文，因此没有针对特定客户进行优化。我们可以通过使用客户的社交网络，查询朋友和朋友的朋友关系来做得更好。使用Cypher是非常直接的：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This query has two parts divided by WITH clause, which allows us to pipe the
    results from the first part into the second.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 该查询分为两个部分，通过WITH子句将第一部分的结果传递到第二部分。
- en: 'With the first part of the query, we find the current customer (`{name: ''Marie''}`)
    and traverse the graph matching for either Marie’s direct friends or their friends
    (her friend-of-friends) using the flexible path-length notation `-[:IS_FRIEND_OF*1..2]->`
    which means one or two `IS_FRIEND_OF` relationships deep.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '在查询的第一部分中，我们找到当前客户（`{name: ''Marie''}`）并遍历图形，匹配Marie的直接朋友或他们的朋友（她的朋友的朋友），使用灵活的路径长度表示法`-[:IS_FRIEND_OF*1..2]->`，这意味着一个或两个`IS_FRIEND_OF`关系深度。'
- en: We take care not to include Marie herself in the results (the `WHERE` clause)
    and not to get duplicate friends-of-friends that are also direct (the `DISTINCT`
    clause).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们注意不要在结果中包括Marie本人（`WHERE`子句）并且避免获取直接的重复朋友（`DISTINCT`子句）。
- en: The second half of the query is the same as the simplest query, but now instead
    of taking into account all the customers on the platform, we are taking into account
    Marie’s friends and friends-of-friends.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 查询的第二部分与最简单的查询相同，但现在不再考虑平台上的所有客户，而是考虑Marie的朋友和朋友的朋友。
- en: And that’s it, we have just built our real-time recommendation engine for a
    streaming platform.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样，我们已经为流媒体平台建立了我们的实时推荐引擎。
- en: Wrapping up
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'In this article, the following topics have been seen:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，已涉及以下主题：
- en: What a recommendation engine is and the amount of information it uses to make
    recommendations.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是推荐引擎以及它使用的信息量来进行推荐。
- en: What a graph database is and how the data is stored as a graph instead of a
    table or document.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是图数据库以及数据如何作为图而不是表或文档进行存储。
- en: An example of how we can build a real-time recommendation engine for streaming
    platforms using graph databases.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个如何使用图数据库为流媒体平台构建实时推荐引擎的示例。
- en: '**[José María Sánchez Salas](https://www.linkedin.com/in/jmssalas/)** is living
    in Norway. He is a freelance data engineer from Murcia (Spain). In the middle
    of business and development worlds, he also write a data engineering newsletter.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**[José María Sánchez Salas](https://www.linkedin.com/in/jmssalas/)** 现居挪威。他是来自西班牙穆尔西亚的自由数据工程师。在商业和开发领域之间，他还写了一份数据工程时事通讯。'
- en: More On This Topic
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Building a Visual Search Engine - Part 2: The Search Engine](https://www.kdnuggets.com/2022/02/building-visual-search-engine-part-2.html)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[构建视觉搜索引擎 - 第2部分：搜索引擎](https://www.kdnuggets.com/2022/02/building-visual-search-engine-part-2.html)'
- en: '[Ten Key Lessons of Implementing Recommendation Systems in Business](https://www.kdnuggets.com/2022/07/ten-key-lessons-implementing-recommendation-systems-business.html)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在商业中实施推荐系统的十个关键经验](https://www.kdnuggets.com/2022/07/ten-key-lessons-implementing-recommendation-systems-business.html)'
- en: '[Building a Recommendation System with Hugging Face Transformers](https://www.kdnuggets.com/building-a-recommendation-system-with-hugging-face-transformers)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用Hugging Face Transformers构建推荐系统](https://www.kdnuggets.com/building-a-recommendation-system-with-hugging-face-transformers)'
- en: '[A Faster Way to Prepare Time-Series Data with the AI & Analytics Engine](https://www.kdnuggets.com/2021/12/piexchange-faster-way-prepare-timeseries-data-ai-analytics-engine.html)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用AI & Analytics Engine更快地准备时间序列数据](https://www.kdnuggets.com/2021/12/piexchange-faster-way-prepare-timeseries-data-ai-analytics-engine.html)'
- en: '[Building a Visual Search Engine - Part 1: Data Exploration](https://www.kdnuggets.com/2022/02/building-visual-search-engine-part-1.html)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[构建视觉搜索引擎 - 第1部分：数据探索](https://www.kdnuggets.com/2022/02/building-visual-search-engine-part-1.html)'
- en: '[Building a Geospatial Application in Python with Google Earth…](https://www.kdnuggets.com/2022/03/building-geospatial-application-python-google-earth-engine-greppo.html)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用Python和Google Earth构建地理空间应用程序……](https://www.kdnuggets.com/2022/03/building-geospatial-application-python-google-earth-engine-greppo.html)'
