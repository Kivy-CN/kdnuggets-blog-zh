- en: Create and Deploy your First Flask App using Python and Heroku
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 和 Heroku 创建并部署你的第一个 Flask 应用程序
- en: 原文：[https://www.kdnuggets.com/2020/09/flask-app-using-python-heroku.html](https://www.kdnuggets.com/2020/09/flask-app-using-python-heroku.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/09/flask-app-using-python-heroku.html](https://www.kdnuggets.com/2020/09/flask-app-using-python-heroku.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Divy Shah](https://www.linkedin.com/in/shahdivy/), Data Scientist**.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Divy Shah](https://www.linkedin.com/in/shahdivy/)，数据科学家**。'
- en: '![](../Images/a5ccb022ebe6f89aa4d938bcecd28598.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a5ccb022ebe6f89aa4d938bcecd28598.png)'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全领域的职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Prerequisites**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**前提条件**'
- en: '[Python](https://www.python.org/downloads/)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python](https://www.python.org/downloads/)'
- en: '[Flask](https://flask.palletsprojects.com/)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Flask](https://flask.palletsprojects.com/)'
- en: '[Git](https://git-scm.com/downloads)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Git](https://git-scm.com/downloads)'
- en: '[Heroku CLI](https://devcenter.heroku.com/articles/heroku-cli#download-and-install)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Heroku CLI](https://devcenter.heroku.com/articles/heroku-cli#download-and-install)'
- en: '**Installation**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**安装**'
- en: After installing Python, install the other frameworks and libraries listed.
    You can easily install flask using the following command.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Python 后，安装列出的其他框架和库。你可以使用以下命令轻松安装 flask。
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Define the structure of your web app
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义你的 Web 应用程序的结构
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The static directory contains your CSS files, and the template contains the
    HTML file, which is used for rendering.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 静态目录包含你的 CSS 文件，而模板目录包含 HTML 文件，用于渲染。
- en: You can create a separate .py file for your logic and other operations or write
    code in the same app.py. I suggest creating a separate file will reduce the confusion.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以为逻辑和其他操作创建一个单独的 .py 文件，或者在同一个 app.py 文件中编写代码。我建议创建一个单独的文件，这样会减少混淆。
- en: 'Step 1:'
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第一步：
- en: '*Create your **app.py** file*'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*创建你的 **app.py** 文件*'
- en: I used the waitress service because using this library is meant to be a production-quality
    pure-Python WSGI server with very acceptable performance. It has no dependencies
    except ones that live in the Python standard library.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了 waitress 服务，因为使用这个库意味着它是一个生产级别的纯 Python WSGI 服务器，性能非常可接受。它没有其他依赖，只依赖于 Python
    标准库中的依赖项。
- en: '**Install waitress**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**安装 waitress**'
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/3f9487b64988aa7f716a0c17b97b57a5.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3f9487b64988aa7f716a0c17b97b57a5.png)'
- en: '*app.py*'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '*app.py*'
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: As shown above, we used the **GET **Method to send data from the server.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所示，我们使用了 **GET ** 方法从服务器发送数据。
- en: 'There are several other methods also available, which are:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他几种方法可用，包括：
- en: '**POST: **It is used to send user/form-data to the server and doesn’t cache
    the transmitted data.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**POST: **用于将用户/form-data 发送到服务器，并且不缓存传输的数据。'
- en: '**HEAD:** It is similar to GET, but the difference is it is used without the
    response body.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**HEAD:** 类似于 GET，但不同之处在于它用于没有响应体的情况。'
- en: '**PUT: **It isused to replace the current resource with uploaded content.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**PUT: **用于用上传的内容替换当前资源。'
- en: '**DELETE:** It is used to delete the target resource provided in the URL.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**DELETE:** 用于删除 URL 中提供的目标资源。'
- en: 'Step 2:'
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第二步：
- en: Create trending.py file, which is basically the file that contains your business
    logic. After creation import main function in app.py file.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 trending.py 文件，该文件基本上包含你的业务逻辑。创建后，将主函数导入到 app.py 文件中。
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Below, my trending.py file looks like:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是我的 trending.py 文件的样子：
- en: '![](../Images/f2e8acd7ba4821456f678a8b129f6d51.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f2e8acd7ba4821456f678a8b129f6d51.png)'
- en: '*trending.py*'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '*trending.py*'
- en: After collecting the data, we can render the output using an HTML file.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 收集数据后，我们可以使用 HTML 文件来呈现输出。
- en: The output data will be displayed on the HTML page.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 输出数据将在 HTML 页面上显示。
- en: 'Step 3:'
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第三步：
- en: Create an HTML file to render the output that you collected from the response
    object.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个 HTML 文件来呈现你从响应对象中收集的数据。
- en: 'Below is how my display.html file looks:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是我的 display.html 文件的样子：
- en: '![](../Images/a88652b5452f9330530db7e9f82ca8f6.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a88652b5452f9330530db7e9f82ca8f6.png)'
- en: '*display.html*'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '*display.html*'
- en: You are almost done with the coding part, and now it’s time to deploy our first
    flask app.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你几乎完成了编码部分，现在是时候部署我们的第一个 flask 应用了。
- en: Before deploying the app, first, check the flask app on the localhost.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在部署应用之前，首先检查本地的 flask 应用。
- en: Deployment Steps
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署步骤
- en: '**1\. Login to your Heroku account using CLI**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**1\. 使用 CLI 登录到你的 Heroku 账户**'
- en: 'You can log in by writing the following command in the terminal:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在终端中输入以下命令进行登录：
- en: '[PRE5]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**2\. Create a web app on Heroku**'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**2\. 在 Heroku 上创建一个网页应用**'
- en: 'You can create a new application on Heroku using the following command:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下命令在 Heroku 上创建一个新应用：
- en: '[PRE6]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**3\. Create *requirements.txt*file in the same project directory**'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**3\. 在相同的项目目录中创建 *requirements.txt* 文件**'
- en: To generate the requirement.txt file, you can use the following command”
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成 requirements.txt 文件，你可以使用以下命令：
- en: '[PRE7]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**4\. Create a Procfile**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**4\. 创建一个 Procfile**'
- en: '*Procfile* is a Process file that is required for all Heroku applications.
    *Procfile* specifies the commands that are executed by the app on startup.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '*Procfile* 是所有 Heroku 应用所需的进程文件。*Procfile* 指定了应用在启动时执行的命令。'
- en: '[Click here](https://devcenter.heroku.com/articles/procfile) to read more on *Procfile*'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[点击这里](https://devcenter.heroku.com/articles/procfile) 以阅读更多有关 *Procfile* 的信息'
- en: 'Enter the following in *Procfile*:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *Procfile* 中输入以下内容：
- en: '[PRE8]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Here, the app is the name of your main (.py) file. In my case, it is app.py.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，app 是你主要的 (.py) 文件的名称。在我的例子中，它是 app.py。
- en: 'If you haven’t yet installed the gunicorn web server, then install it by using
    the following command:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有安装 gunicorn 网页服务器，请使用以下命令安装：
- en: '[PRE9]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '*NOTE: you have to create a Procfile without any file extensions.*'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意：你必须创建一个没有任何文件扩展名的 Procfile。*'
- en: '**5\. Create *runtime.txt *to specify the Python version at runtime**'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**5\. 创建 *runtime.txt* 以指定运行时的 Python 版本**'
- en: 'After creating a runtime.txt, add your build Python version like below:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建`runtime.txt`之后，添加你的构建 Python 版本，如下所示：
- en: '[PRE10]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Now, we are all set!
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们一切就绪！
- en: '**6\. Initialize an empty git repository and push the code**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**6\. 初始化一个空的 git 仓库并推送代码**'
- en: '[PRE11]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Next, it is time to commit your final code using the following steps:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用以下步骤提交你的最终代码：
- en: '[PRE12]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Your app is live now, and you can see your web app using the generated URL.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 你的应用现在已经上线，你可以使用生成的 URL 查看你的网页应用。
- en: '*Please check out my demo web application at: *[https://trending-shows.herokuapp.com/](https://trending-shows.herokuapp.com/)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '*请查看我的演示网页应用：*[https://trending-shows.herokuapp.com/](https://trending-shows.herokuapp.com/)'
- en: '[Original](https://medium.com/towards-artificial-intelligence/create-and-deploy-your-first-flask-app-using-python-and-heroku-aee04eaddc71).
    Reposted with permission.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://medium.com/towards-artificial-intelligence/create-and-deploy-your-first-flask-app-using-python-and-heroku-aee04eaddc71)。经许可转载。'
- en: '**Bio:** [Divy Shah](https://www.linkedin.com/in/shahdivy/) is passionate about
    solving real life and FinTech industries problem with the help of Data Science
    and Machine Learning Algorithms, and is always eager to learn and explore new
    Data Science algorithms and frameworks.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：** [Divy Shah](https://www.linkedin.com/in/shahdivy/) 对利用数据科学和机器学习算法解决现实生活和金融科技行业的问题充满热情，且总是渴望学习和探索新的数据科学算法和框架。'
- en: '**Related:**'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Deployment of Machine learning models using Flask](https://www.kdnuggets.com/2019/12/excelr-deployment-machine-learning-flask.html)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Flask 部署机器学习模型](https://www.kdnuggets.com/2019/12/excelr-deployment-machine-learning-flask.html)'
- en: '[Build and deploy your first machine learning web app](https://www.kdnuggets.com/2020/05/build-deploy-machine-learning-web-app.html)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[构建并部署你的第一个机器学习网页应用](https://www.kdnuggets.com/2020/05/build-deploy-machine-learning-web-app.html)'
- en: '[How to build an API for a machine learning model in 5 minutes using Flask](https://www.kdnuggets.com/2019/01/build-api-machine-learning-model-using-flask.html)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何使用 Flask 在 5 分钟内为机器学习模型构建 API](https://www.kdnuggets.com/2019/01/build-api-machine-learning-model-using-flask.html)'
- en: More On This Topic
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Deploy a Machine Learning Web App with Heroku](https://www.kdnuggets.com/2022/04/deploy-machine-learning-web-app-heroku.html)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 Heroku 部署机器学习网页应用](https://www.kdnuggets.com/2022/04/deploy-machine-learning-web-app-heroku.html)'
- en: '[Deploying a Streamlit WebApp to Heroku using DAGsHub](https://www.kdnuggets.com/2022/02/deploying-streamlit-webapp-heroku-dagshub.html)'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将 Streamlit WebApp 部署到 Heroku 使用 DAGsHub](https://www.kdnuggets.com/2022/02/deploying-streamlit-webapp-heroku-dagshub.html)'
- en: '[Tips & Tricks of Deploying Deep Learning Webapp on Heroku Cloud](https://www.kdnuggets.com/2021/12/tips-tricks-deploying-dl-webapps-heroku.html)'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Heroku 云上部署深度学习网页应用的技巧与窍门](https://www.kdnuggets.com/2021/12/tips-tricks-deploying-dl-webapps-heroku.html)'
- en: '[From Zero to Hero: Create Your First ML Model with PyTorch](https://www.kdnuggets.com/from-zero-to-hero-create-your-first-ml-model-with-pytorch)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[从零到英雄：用 PyTorch 创建你的第一个 ML 模型](https://www.kdnuggets.com/from-zero-to-hero-create-your-first-ml-model-with-pytorch)'
- en: '[Build a Command-Line App with Python in 7 Easy Steps](https://www.kdnuggets.com/build-a-command-line-app-with-python-in-7-easy-steps)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用 Python 构建一个命令行应用的 7 个简单步骤](https://www.kdnuggets.com/build-a-command-line-app-with-python-in-7-easy-steps)'
- en: '[Create a Dashboard Using Python and Dash](https://www.kdnuggets.com/2023/08/create-dashboard-python-dash.html)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 和 Dash 创建仪表板](https://www.kdnuggets.com/2023/08/create-dashboard-python-dash.html)'
