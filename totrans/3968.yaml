- en: Speeding Up Your Python Code with NumPy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 NumPy 加速你的 Python 代码
- en: 原文：[https://www.kdnuggets.com/speeding-up-your-python-code-with-numpy](https://www.kdnuggets.com/speeding-up-your-python-code-with-numpy)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/speeding-up-your-python-code-with-numpy](https://www.kdnuggets.com/speeding-up-your-python-code-with-numpy)
- en: '![Speeding Up Your Python Code with NumPy](../Images/b64f632158a37d94ca844c89dd824ab7.png)[Image
    by storyset on Freepik](https://www.freepik.com/free-vector/market-launch-concept-illustration_7171502.htm#fromView=search&page=1&position=3&uuid=715fea93-5839-4794-b955-1691b8cf44f5)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![使用 NumPy 加速你的 Python 代码](../Images/b64f632158a37d94ca844c89dd824ab7.png)[图片由
    storyset 提供，来源于 Freepik](https://www.freepik.com/free-vector/market-launch-concept-illustration_7171502.htm#fromView=search&page=1&position=3&uuid=715fea93-5839-4794-b955-1691b8cf44f5)'
- en: NumPy is a Python package often used for mathematical and statistical applications.
    However, some still didn’t know NumPy could help speed up our Python code execution.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 是一个常用于数学和统计应用的 Python 包。然而，有些人仍然不知道 NumPy 可以帮助加速我们的 Python 代码执行。
- en: '* * *'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前 3 个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全领域的职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你所在组织的 IT 工作'
- en: '* * *'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'There are several reasons why NumPy could accelerate the Python code execution,
    including:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 能够加速 Python 代码执行的原因有几个，包括：
- en: NumPy using C Code instead of Python during looping
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NumPy 在循环中使用 C 代码而不是 Python
- en: The better CPU caching process
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的 CPU 缓存过程
- en: Efficient algorithms in mathematical operations
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数学运算中的高效算法
- en: Able to use parallel operations
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够使用并行操作
- en: Memory-efficient in large datasets and complex computations
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在大数据集和复杂计算中内存高效
- en: For many reasons, NumPy is effective in improving Python code execution. This
    tutorial will show examples of how NumPy speeds up the code process. Let's jump
    into it.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 出于多种原因，NumPy 在提高 Python 代码执行效率方面非常有效。本教程将展示 NumPy 如何加速代码处理的例子。让我们来看看。
- en: NumPy in Accelerate Python Code Execution
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NumPy 在加速 Python 代码执行中的作用
- en: The first example compares Python list and NumPy array numerical operations,
    which acquire the object with the intended value result.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个例子比较了 Python 列表和 NumPy 数组的数值运算，它们获取具有预期值结果的对象。
- en: 'For example, we want a list of numbers from two lists we add together so we
    perform the vectorized operation. We can try the experiment with the following
    code:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们希望从两个相加的列表中得到一个数字列表，所以我们执行了向量化操作。我们可以用以下代码进行实验：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As you can see in the above output, the execution of NumPy arrays is faster
    than that of the Python list in acquiring the same result.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在上面的输出中看到的，NumPy 数组的执行速度比 Python 列表要快，从而获得相同的结果。
- en: Throughout the example, you would see that the NumPy execution is faster. Let’s
    see if we want to perform aggregation statistical analysis.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在整个例子中，你会发现 NumPy 的执行速度更快。让我们看看是否要进行聚合统计分析。
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: NumPy can process the aggregation function pretty fast. If we compare it with
    the Python execution, we can see the execution time differences.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 可以非常快速地处理聚合函数。如果我们与 Python 执行进行比较，可以看到执行时间的差异。
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: With the same result, Python's in-built function would take much more time than
    NumPy. If we had a much bigger dataset, Python would take way longer to finish
    the NumPy.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在相同结果下，Python 的内置函数会比 NumPy 花费更多时间。如果我们有更大的数据集，Python 完成这些操作的时间会比 NumPy 长得多。
- en: Another example is when we try to perform in-place operations, we can see that
    the NumPy would be much faster than the Python example.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子是当我们尝试进行原地操作时，我们可以看到 NumPy 会比 Python 示例快得多。
- en: '[PRE6]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The point of the example is that if you have an option to perform with NumPy,
    then it’s much better as the process would be much faster.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 例子的关键点在于，如果你有机会使用 NumPy，那么效果会更好，因为处理速度会更快。
- en: We can try a more complex implementation, using matrix multiplication to see
    how fast NumPy is compared to Python.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以尝试更复杂的实现，使用矩阵乘法来观察 NumPy 相比于 Python 的速度。
- en: '[PRE9]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: As you can see, NumPy is even faster in more complex activities, such as Matrix
    Multiplication, which uses standard Python code.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，NumPy 在更复杂的活动中也更快，比如使用标准 Python 代码的矩阵乘法。
- en: We can try out many more examples, but NumPy should be faster than Python's
    built-in function execution times.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以尝试更多的例子，但 NumPy 应该比 Python 内置函数的执行时间更快。
- en: Conclusion
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: NumPy is a powerful package for mathematical and numerical processes. Compared
    to the standard Python in-built function, NumPy execution time would be faster
    than the Python counterpart. That is why, try to use NumPy if it’s applicable
    to speed up our Python code.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 是一个强大的数学和数值处理包。与标准 Python 内置函数相比，NumPy 的执行时间会更快。这就是为什么，如果适用，尝试使用 NumPy
    来加速我们的 Python 代码。
- en: '**[](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**[Cornellius Yudha
    Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**** is a data science
    assistant manager and data writer. While working full-time at Allianz Indonesia,
    he loves to share Python and data tips via social media and writing media. Cornellius
    writes on a variety of AI and machine learning topics.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**[](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**[Cornellius Yudha
    Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**** 是一名数据科学助理经理和数据撰稿人。在
    Allianz Indonesia 全职工作期间，他喜欢通过社交媒体和写作分享 Python 和数据技巧。Cornellius 涉及各种 AI 和机器学习主题的写作。'
- en: More On This Topic
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Managing Your Reusable Python Code as a Data Scientist](https://www.kdnuggets.com/2021/06/managing-reusable-python-code-data-scientist.html)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[作为数据科学家管理你的可重用 Python 代码](https://www.kdnuggets.com/2021/06/managing-reusable-python-code-data-scientist.html)'
- en: '[3 Tools to Track and Visualize the Execution of Your Python Code](https://www.kdnuggets.com/2021/12/3-tools-track-visualize-execution-python-code.html)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[追踪和可视化你的 Python 代码执行的3种工具](https://www.kdnuggets.com/2021/12/3-tools-track-visualize-execution-python-code.html)'
- en: '[How To Comment Your Python Code as a Data Scientist](https://www.kdnuggets.com/how-to-comment-your-python-code-as-a-data-scientist)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何作为数据科学家注释你的 Python 代码](https://www.kdnuggets.com/how-to-comment-your-python-code-as-a-data-scientist)'
- en: '[KDnuggets™ News 22:n01, Jan 5: 3 Tools to Track and Visualize…](https://www.kdnuggets.com/2022/n01.html)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets™ 新闻 22:n01, 1月5日: 追踪和可视化的3种工具…](https://www.kdnuggets.com/2022/n01.html)'
- en: '[3 Simple Ways to Speed Up Your Python Code](https://www.kdnuggets.com/2022/10/3-simple-ways-speed-python-code.html)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[加速你的 Python 代码的3种简单方法](https://www.kdnuggets.com/2022/10/3-simple-ways-speed-python-code.html)'
- en: '[Optimizing Python Code Performance: A Deep Dive into Python Profilers](https://www.kdnuggets.com/2023/02/optimizing-python-code-performance-deep-dive-python-profilers.html)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[优化 Python 代码性能: 深入分析 Python 性能分析器](https://www.kdnuggets.com/2023/02/optimizing-python-code-performance-deep-dive-python-profilers.html)'
