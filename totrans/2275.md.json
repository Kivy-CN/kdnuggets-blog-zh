["```py\nTARGET\nNAME_CONTRACT_TYPE\nCODE_GENDER\nFLAG_OWN_CAR\nFLAG_OWN_REALTY\nCNT_CHILDREN\n```", "```py\nAMT_INCOME_TOTAL\nAMT_CREDIT\nAMT_ANNUITY\nAMT_GOODS_PRICE\n```", "```py\n# Install CTGAN\n!pip install ctgan\n\n# Install table evaluator to analyze generated synthetic data\n!pip install table_evaluator \n```", "```py\n# Import libraries\nimport torch\nimport pandas as pd\nimport seaborn as sns\nimport torch.nn as nn\n\nfrom ctgan import CTGAN\nfrom ctgan.synthesizers.ctgan import Generator\n\n# Import training Data\ndata = pd.read_csv(\"./application_data_edited_2.csv\")\n\n# Declare Categorical Columns\ncategorical_features = [\n    \"TARGET\",\n    \"NAME_CONTRACT_TYPE\",\n    \"CODE_GENDER\",\n    \"FLAG_OWN_CAR\",\n    \"FLAG_OWN_REALTY\",\n    \"CNT_CHILDREN\",\n]\n\n# Declare Continuous Columns\ncontinuous_cols = [\"AMT_INCOME_TOTAL\", \"AMT_CREDIT\", \"AMT_ANNUITY\", \"AMT_GOODS_PRICE\"]\n\n# Train Model\nfrom ctgan import CTGAN\n\nctgan = CTGAN(verbose=True)\nctgan.fit(data, categorical_features, epochs=100000)\n\n# Generate synthetic_data\nsynthetic_data = ctgan.sample(10000)\n\n# Analyze Synthetic Data\nfrom table_evaluator import TableEvaluator\n\nprint(data.shape, synthetic_data.shape)\ntable_evaluator = TableEvaluator(data, synthetic_data, cat_cols=categorical_features)\ntable_evaluator.visual_evaluation()\n# compute the correlation matrix\ncorr = synthetic_data.corr()\n\n# plot the heatmap\nsns.heatmap(corr, annot=True, cmap=\"coolwarm\")\n\n# show summary statistics SYNTHETIC DATA\nsummary = synthetic_data.describe()\nprint(summary) \n```"]