- en: How to Identify Missing Data in Time-Series Datasets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/how-to-identify-missing-data-in-timeseries-datasets](https://www.kdnuggets.com/how-to-identify-missing-data-in-timeseries-datasets)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Time-series data, collected nearly every second from a multiplicity of sources,
    is often subjected to [several data quality issues](https://towardsdatascience.com/how-to-do-an-eda-for-time-series-cbb92b3b1913),
    among which missing data.
  prefs: []
  type: TYPE_NORMAL
- en: In the context of sequential data, missing information can arise due to several
    reasons, namely errors occurring on acquisition systems (e.g. malfunction sensors),
    [errors during the transmission process](https://towardsdatascience.com/understand-your-data-in-real-time-1f6d9f6937e5)
    (e.g., faulty network connections), or errors during data collection (e.g., human
    error during data logging). These situations often generate sporadic and explicit
    missing values in our datasets, corresponding to small gaps in the stream of collected
    data.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, [missing information](https://ydata.ai/resources/what-is-missing-data-in-machine-learning)
    can also arise naturally due to the characteristics of the domain itself, creating
    larger gaps in the data. For instance, a feature that stops being collected for
    a certain period of time, generating non-explicit missing data.
  prefs: []
  type: TYPE_NORMAL
- en: Regardless of the underlying cause, having missing data in our time-series sequences
    is highly prejudicial for forecasting and predictive modeling and may have serious
    consequences for both individuals (e.g., misguided risk assessment) and business
    outcomes (e.g., biased business decisions, loss of revenue and opportunities).
  prefs: []
  type: TYPE_NORMAL
- en: When preparing the data for modeling approaches, an important step is therefore
    being able to identify these patterns of unknown information, as they will help
    us decide on the [best approach to handle the data](https://ydata.ai/resources/understanding-the-structure-of-time-series-datasets)
    efficiently and improve its consistency, either through some form of alignment
    correction, data interpolation, data imputation, or in some cases, casewise deletion
    (i.e., omit cases with missing values for a feature used in a particular analysis).
  prefs: []
  type: TYPE_NORMAL
- en: For that reason, performing a thorough exploratory data analysis and data profiling
    is indispensable not only to understand the data characteristics but also to make
    informed decisions on how to best prepare the data for analysis.
  prefs: []
  type: TYPE_NORMAL
- en: In this hands-on tutorial, we’ll explore how [ydata-profiling](https://github.com/ydataai/ydata-profiling)
    can help us sort out these issues with the features recently introduced in the
    new release. We’ll be using the [U.S. Pollution Dataset](https://data.world/data-society/us-air-pollution-data),
    available in [Kaggle](https://www.kaggle.com/datasets/sogun3/uspollution?resource=download)
    (License [DbCL v1.0](https://opendatacommons.org/licenses/dbcl/1-0/)), that details
    information regarding NO2, O3, SO2, and CO pollutants across U.S. states.
  prefs: []
  type: TYPE_NORMAL
- en: 'Hands-on Tutorial: Profiling the U.S. Pollution Dataset'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To kickstart our tutorial, we first need to install the latest version of ydata-profiling:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, we can load the data, remove unnecessary features, and focus on what
    we aim to investigate. For the purpose of this example, we will focus on the particular
    behavior of air pollutants’ measurements taken at the station of Arizona, Maricopa,
    Scottsdale:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, we’re ready to start profiling our dataset! Recall that, to use the time-series
    profiling, we need to pass the parameter `tsmode=True` so that ydata-profiling
    can identify time-dependent features:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Time-Series Overview
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The output report will be familiar to what we already know, but with an improved
    experience and new summary statistics for time-series data:'
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/8faa4792b0d13bde077357a8d7c6dd57.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Immediately from the overview, we can get an overall understanding of this
    dataset by looking at the presented summary statistics:'
  prefs: []
  type: TYPE_NORMAL
- en: It contains 14 different time-series, each with 8674 recorded values;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The dataset reports on 10 years of data from January 2000 to December 2010;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The average period of time sequences is 11 hours and (nearly) 7 minutes. This
    means that on average, we have measures being taken every 11 hours.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We can also get an overview plot of all series in data, either in their original
    or scaled values: we can easily grasp the overall variation of the sequences,
    as well as the components (NO2, O3, SO2, CO) and characteristics (Mean, 1st Max
    Value, 1st Max Hour, AQI) being measured.'
  prefs: []
  type: TYPE_NORMAL
- en: Inspecting Missing Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After having an overall view of the data, we can focus on the specifics of each
    time sequence.
  prefs: []
  type: TYPE_NORMAL
- en: In the latest release of [ydata-profiling](https://github.com/ydataai/ydata-profiling),
    the profiling report was substantially improved with dedicated analysis for time-series
    data, namely reporting on the “Time Series” and “Gap Analysis”' metrics. The identification
    of trends and missing patterns is extremely facilitated by these new features,
    where specific summary statistics and detailed visualizations are now available.
  prefs: []
  type: TYPE_NORMAL
- en: Something that stands out immediately is the flaky pattern that all time series
    present, where certain “jumps” seem to occur between consecutive measurements.
    This indicates the presence of missing data (“gaps” of missing information) that
    should be studied more closely. Let’s take a look at the `S02 Mean` as an example.
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/d380f53de2d6d5aa0e954d88f9d0fa24.png)![XXXXX](../Images/7100b2379969401e5d718e4401ed80b6.png)'
  prefs: []
  type: TYPE_IMG
- en: When investigating the details given in the Gap Analysis, we get an informative
    description of the characteristics of the identified gaps. Overall, there are
    25 gaps in the time-series, with a minimum length of 4 days, a maximum of 32 weeks,
    and an average of 10 weeks.
  prefs: []
  type: TYPE_NORMAL
- en: From the visualization presented, we note somewhat “random” gaps represented
    by thinner stripes, and larger gaps which seem to follow a repetitive pattern.
    This indicates that we seem to have two different patterns of missing data in
    our dataset.
  prefs: []
  type: TYPE_NORMAL
- en: Smaller gaps correspond to sporadic events generating missing data, most likely
    occurring due to errors in the acquisition process, and can often be easily interpolated
    or deleted from the dataset. In turn, larger gaps are more complex and need to
    be analyzed in more detail, as they may reveal an underlying pattern that needs
    to be addressed more thoroughly.
  prefs: []
  type: TYPE_NORMAL
- en: 'In our example, if we were to investigate the larger gaps, we would in fact
    discover that they reflect a seasonal pattern:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'As suspected, the time-series presents some large information gaps that seem
    to be repetitive, even seasonal: in most years, the data was not collected between
    May to August (months 5 to 8). This may have occurred due to unpredictable reasons,
    or known  business decisions, for example, related to cutting costs, or simply
    related to seasonal variations of pollutants associated with weather patterns,
    temperature, humidity, and atmospheric conditions.'
  prefs: []
  type: TYPE_NORMAL
- en: Based on these findings, we could then investigate why this happened, if something
    should be done to prevent it in the future, and how to handle the data we currently
    have.
  prefs: []
  type: TYPE_NORMAL
- en: 'Final Thoughts: Impute, Delete, Realign?'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Throughout this tutorial, we’ve seen how important it is to understand the patterns
    of missing data in time-series and how an effective profiling can reveal the mysteries
    behind gaps of missing information. From telecom, healthcare, energy, and finance,
    all sectors collecting time-series data will face missing data at some point and
    will need to decide the best way to handle and extract all possible knowledge
    from them.
  prefs: []
  type: TYPE_NORMAL
- en: 'With a comprehensive data profiling, we can make an informed and efficient
    decision depending on the data characteristics at hand:'
  prefs: []
  type: TYPE_NORMAL
- en: Gaps of information can be caused by sporadic events that derive from errors
    in acquisition, transmission, and collection. We can fix the issue to prevent
    it from happening again and interpolate or impute the missing gaps, depending
    on the length of the gap;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaps of information can also represent seasonal or repeated patterns. We may
    choose to restructure our pipeline to start collecting the missing information
    or replace the missing gaps with external information from other distributed systems.
    We can also identify if the process of retrieval was unsuccessful (maybe a fat-finger
    query on the data engineering side, we all have those days!).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I hope this tutorial has shed some light on how to identify and characterize
    missing data in your time-series data appropriately and I can’t wait to see what
    you’ll find in your own gap analysis! Drop me a line in the comments for any questions
    or suggestions or find me at the [Data-Centric AI Community](https://tiny.ydata.ai/dcai-medium)!
  prefs: []
  type: TYPE_NORMAL
- en: '**[Fabiana Clemente](https://www.linkedin.com/in/fabiana-clemente/)** is cofounder
    and CDO of YData, combining data understanding, causality, and privacy as her
    main fields of work and research, with the mission of making data actionable for
    organizations. As an enthusiastic data practitioner she hosts the podcast When
    Machine Learning Meets Privacy and is a guest speaker on the Datacast and Privacy
    Please podcasts. She also speaks at conferences such as ODSC and PyData.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[4 Factors to Identify Machine Learning Solvable Problems](https://www.kdnuggets.com/2022/04/4-factors-identify-machine-learning-solvable-problems.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Optimal Way to Input Missing Data with Pandas fillna()](https://www.kdnuggets.com/2023/02/optimal-way-input-missing-data-pandas-fillna.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Things Students Are Missing in a Data Science Resume](https://www.kdnuggets.com/7-things-students-are-missing-in-a-data-science-resume)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Deal with Missing Data Using Interpolation Techniques in Pandas](https://www.kdnuggets.com/how-to-deal-with-missing-data-using-interpolation-techniques-in-pandas)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Masked Arrays in NumPy to Handle Missing Data](https://www.kdnuggets.com/masked-arrays-in-numpy-to-handle-missing-data)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Handle Missing Data with Scikit-learn''s Imputer Module](https://www.kdnuggets.com/how-to-handle-missing-data-with-scikit-learns-imputer-module)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
