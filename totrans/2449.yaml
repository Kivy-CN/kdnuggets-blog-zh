- en: Machine Learning Algorithms for Classification
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2022/03/machine-learning-algorithms-classification.html](https://www.kdnuggets.com/2022/03/machine-learning-algorithms-classification.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Machine Learning Algorithms for Classification](../Images/841f1967f90042877b182b0acb204859.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Kevin Ku](https://unsplash.com/@ikukevk) via Unsplash'
  prefs: []
  type: TYPE_NORMAL
- en: There are many types of algorithms you can use, so it can be quite overwhelming
    which one to choose and which one is the right fit for your task.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: A good way to distinguish between the different types of algorithms is through
    their type of learning and the task at hand. I will be going through different
    types of classification algorithms. But first, let's understand the different
    types of learning within Machine Learning.
  prefs: []
  type: TYPE_NORMAL
- en: Types of Machine Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are 3 different types of Machine Learning:'
  prefs: []
  type: TYPE_NORMAL
- en: Supervised Learning
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Unsupervised Learning
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Reinforcement Learning
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Supervised Learning** is when the algorithm learns on a labeled dataset and
    analyses the training data. These labeled data sets have inputs and expected outputs.'
  prefs: []
  type: TYPE_NORMAL
- en: An example of Supervised Learning algorithms is Logistic Regression.
  prefs: []
  type: TYPE_NORMAL
- en: '**Unsupervised Learning** learns on unlabeled data, inferring more about hidden
    structures to produce accurate and reliable outputs.'
  prefs: []
  type: TYPE_NORMAL
- en: An example of Unsupervised Learning algorithms is K-Means.
  prefs: []
  type: TYPE_NORMAL
- en: '**Reinforcement Learning** is the training of machine learning models to make
    a sequence of decisions. It focuses on how intelligent agents are to take actions
    in an environment to maximize the notion of cumulative reward.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Classification vs Regression:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Supervised learning can be further split into two categories: classification
    and regression.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Classification** is about predicting a label, by identifying which category
    an object belongs to based on different parameters.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Regression** is about predicting a continuous output, by finding the correlations
    between dependent and independent variables.'
  prefs: []
  type: TYPE_NORMAL
- en: Many algorithms can be used for both classification and regression problems.
    In this article, we will be going through the algorithms that can be used for
    classification tasks.
  prefs: []
  type: TYPE_NORMAL
- en: Logistic Regression
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![Machine Learning Algorithms for Classification](../Images/554bc3913eb38eb35fa36003bb007ce7.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Source](https://www.statstest.com/simple-logistic-regression/)'
  prefs: []
  type: TYPE_NORMAL
- en: Logistic Regression is a Machine Learning algorithm that is used for classification
    problems and is based on the concept of probability. It is used when the dependent
    variable (target) is categorical. It is widely used when the classification problem
    at hand is binary; true or false, yes or no, etc. Logistics regression uses the
    sigmoid function to return the probability of a label.
  prefs: []
  type: TYPE_NORMAL
- en: For example, it can be used to predict whether an email is a spam (1) or not
    (0).
  prefs: []
  type: TYPE_NORMAL
- en: Decision Tree
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![Machine Learning Algorithms for Classification](../Images/17c569e347e751740f8188e77b47b232.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Source](https://medium.datadriveninvestor.com/decision-tree-algorithm-with-hands-on-example-e6c2afb40d38)'
  prefs: []
  type: TYPE_NORMAL
- en: Decision Trees are a non-parametric supervised learning method used for classification
    and regression. The overall end goal is to build a model that predicts the value
    of a target variable by learning simple decision rules inferred from the data
    features.
  prefs: []
  type: TYPE_NORMAL
- en: The concept of Decision trees is in its name. It builds tree branches via a
    hierarchy approach, where each branch can be considered as an if-else statement.
    The process of building a Classification Decision tree is through an iterative
    process of splitting the data into partitions and then splitting it again on each
    of the nodes. The final classification of the dataset is at the leaves of the
    decision tree.
  prefs: []
  type: TYPE_NORMAL
- en: For example, classifying the different attributes and characteristics of teenagers
    pursuing basketball. Your variables of height, weight, ethnicity group will be
    split into partitions and then split again.
  prefs: []
  type: TYPE_NORMAL
- en: Random Forests®
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![Machine Learning Algorithms for Classification](../Images/11f341206d9515b13cc4543719a87742.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Source](https://ai-pool.com/a/s/random-forests-understanding)'
  prefs: []
  type: TYPE_NORMAL
- en: Random Forests® is a Supervised Learning algorithm and is made up of many decision
    trees. A good way to remember it is a multitude of trees building up a forest.
  prefs: []
  type: TYPE_NORMAL
- en: The random forest algorithm produces its outcomes based on the predictions generated
    by the Decision Trees. This prediction is done by taking the average or mean of
    the output from the various Decision Trees. An increase in the number of trees
    increases the precision of the outcome. Therefore the higher number of Decision
    Trees in the forest, the better the accuracy, and overfitting is prevented or
    at least reduced.
  prefs: []
  type: TYPE_NORMAL
- en: In comparison to Decision Trees, the random forest algorithm model is difficult
    to interpret and make quick decisions, along with taking a long time.
  prefs: []
  type: TYPE_NORMAL
- en: K-Nearest Neighbour (KNN)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![Machine Learning Algorithms for Classification](../Images/098b622a1e7ed80a21f3fd495e3b810d.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Source](https://www.javatpoint.com/k-nearest-neighbor-algorithm-for-machine-learning)'
  prefs: []
  type: TYPE_NORMAL
- en: K-nearest neighbors (KNN) algorithm is a supervised machine learning algorithm
    that can be used to solve both classification and regression problems. The KNN
    algorithm assumes that similar things exist in close proximity.
  prefs: []
  type: TYPE_NORMAL
- en: KNN uses the idea of similarity, or other words distance, proximity, or closeness.
    It uses a mathematical approach to calculate the distance between points on a
    graph. Doing so, it then labels the unobserved data based on the nearest labeled
    observed data points.
  prefs: []
  type: TYPE_NORMAL
- en: 'The saying: “Birds of a feather flock together” relates to KNN.'
  prefs: []
  type: TYPE_NORMAL
- en: Support Vector Machine (SVM)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![Machine Learning Algorithms for Classification](../Images/ea155fc0ac7d7f8ade3a85df3d23497d.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Source](https://matlab1.com/support-vector-machine-2/)'
  prefs: []
  type: TYPE_NORMAL
- en: Support Vector Machine is a supervised learning model using a linear model that
    can be used for classification and regression problems.
  prefs: []
  type: TYPE_NORMAL
- en: The concept of the Support Vector Machine algorithm creates a line or a hyperplane
    which separates the data into classes. It uses the data points that are closer
    to the hyperplane and influence the position and orientation of the hyperplane;
    which in turn maximises the margin of the classifier.
  prefs: []
  type: TYPE_NORMAL
- en: '*RANDOM FORESTS and RANDOMFORESTS are registered marks of Minitab, LLC.*'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Nisha Arya](https://www.linkedin.com/in/nisha-arya-ahmed/)** is a Data Scientist
    and Freelance Technical Writer. She is particularly interested in providing Data
    Science career advice or tutorials and theory based knowledge around Data Science.
    She also wishes to explore the different ways Artificial Intelligence is/can benefit
    the longevity of human life. A keen learner, seeking to broaden her tech knowledge
    and writing skills, whilst helping guide others.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Getting Started with Scikit-learn for Classification in Machine Learning](https://www.kdnuggets.com/getting-started-with-scikit-learn-for-classification-in-machine-learning)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[More Performance Evaluation Metrics for Classification Problems You…](https://www.kdnuggets.com/2020/04/performance-evaluation-metrics-classification.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Binary Classification with PyCaret](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Fine-Tuning BERT for Tweets Classification with HuggingFace](https://www.kdnuggets.com/2022/01/finetuning-bert-tweets-classification-ft-hugging-face.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Logistic Regression for Classification](https://www.kdnuggets.com/2022/04/logistic-regression-classification.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Nearest Neighbors for Classification](https://www.kdnuggets.com/2022/04/nearest-neighbors-classification.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
