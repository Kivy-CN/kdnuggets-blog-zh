- en: 'Support Vector Machine (SVM) Tutorial: Learning SVMs From Examples'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 支持向量机（SVM）教程：通过示例学习SVM
- en: 原文：[https://www.kdnuggets.com/2017/08/support-vector-machines-learning-svms-examples.html/2](https://www.kdnuggets.com/2017/08/support-vector-machines-learning-svms-examples.html/2)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2017/08/support-vector-machines-learning-svms-examples.html/2](https://www.kdnuggets.com/2017/08/support-vector-machines-learning-svms-examples.html/2)
- en: '**Non-linearly Separable Data**'
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**非线性可分数据**'
- en: We have seen how Support Vector Machines systematically handle perfectly/almost
    linearly separable data. How does it handle the cases where the data is absolutely
    not linearly separable? Afterall, a lot of real-world data falls in this category.
    Surely, finding a hyperplane can’t work anymore. This seems unfortunate given
    that SVMs excel at this task.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了支持向量机如何系统地处理完全/几乎线性可分的数据。对于绝对非线性可分的数据，它是如何处理的呢？毕竟，很多现实世界的数据都属于这个类别。显然，找到一个超平面可能不再适用。这似乎很遗憾，因为支持向量机在这方面表现出色。
- en: '* * *'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速通道进入网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 在IT方面支持你的组织'
- en: '* * *'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'Here’s an example of non-linearly separable data (this is a variant of the
    famous [XOR dataset](http://www.ece.utep.edu/research/webfuzzy/docs/kk-thesis/kk-thesis-html/node19.html)),
    shown with the linear classifier SVMs find:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非线性可分数据的示例（这是著名的 [XOR 数据集](http://www.ece.utep.edu/research/webfuzzy/docs/kk-thesis/kk-thesis-html/node19.html)
    的变体），用线性分类器SVM找到的结果展示如下：
- en: '![](../Images/1762042cf4625e35939e2393246648ce.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1762042cf4625e35939e2393246648ce.png)'
- en: You’d agree this doesn’t look great. We have only 75% accuracy on the training
    data — the best possible with a line. And more so, the line passes very close
    to some of the data. The best accuracy is not great, and to get even there, the
    line nearly straddles a few points.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你会同意这看起来不太好。我们在训练数据上的准确率只有75%——这是线性分隔情况下的最佳结果。而且，更糟的是，这条线与一些数据点非常接近。最佳准确率并不理想，为了达到这个准确率，这条线几乎与几个点重叠。
- en: We need to do better.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做得更好。
- en: 'This is where one of my favorite bits about SVMs come in. Here’s what we have
    so far: we have a technique that is really good at finding hyperplanes. But then
    we also have data that is not linearly separable. So what do we do? Project the
    data into a space where it *is* linearly separable and find a hyperplane in this
    space!'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我最喜欢的支持向量机部分之一。到目前为止，我们有一种非常擅长找到超平面的技术。但我们也有非线性可分的数据。那么我们该怎么办？将数据投影到一个 *线性可分*
    的空间中，并在这个空间中找到一个超平面！
- en: I’ll illustrate this idea one step at a time.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我将一步一步地阐述这个想法。
- en: 'We start with the dataset in the above figure, and project it into a three-dimensional
    space where the new coordinates are:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从上图中的数据集开始，并将其投影到三维空间中，其中新的坐标是：
- en: '![](../Images/120a96bf55dc688b8f8d9b92f30b67ee.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/120a96bf55dc688b8f8d9b92f30b67ee.png)'
- en: This is what the projected data looks like. Do you see a place where we just
    might be able to slip in a plane?
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是投影后的数据。你看到一个我们可能可以插入一个平面的位置吗？
- en: '![](../Images/dd530ca54f0cdf41d7e5c761885a511b.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dd530ca54f0cdf41d7e5c761885a511b.png)'
- en: 'Let’s run our SVM on it:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在其上运行SVM：
- en: '![](../Images/c388a96eff09336ed5e0bc472305604b.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c388a96eff09336ed5e0bc472305604b.png)'
- en: 'Bingo! We have perfect label separation! Lets project the plane back to the
    original two-dimensional space and see what the separation boundary looks like:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: bingo！我们有了完美的标签分隔！让我们将平面投影回原始二维空间，看看分隔边界是什么样的：
- en: '![](../Images/67b03248b5a3f5f2eb1e2ef030fca8ab.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/67b03248b5a3f5f2eb1e2ef030fca8ab.png)'
- en: 100% accuracy on the training data *and* a separating boundary that doesn’t
    run too close to the data! Yay!
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在训练数据上达到100%的准确率 *并且* 分隔边界不会过于接近数据！耶！
- en: The shape of the separating boundary in the original space depends on the projection.
    In the projected space, this is *always* a hyperplane.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 原始空间中分隔边界的形状取决于投影。在投影空间中，这*总是*一个超平面。
- en: '*Remember the primary goal of projecting the data was to put the hyperplane-finding
    superpowers of SVMs to use.*'
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*记住投影数据的主要目标是利用支持向量机的超平面发现能力。*'
- en: When you map it back to the original space, the separating boundary is not a
    line anymore. This is also true for the margin and support vectors. As far as
    our visual intuition goes, they make sense in the projected space.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将其映射回原始空间时，分隔边界不再是一条直线。这对边距和支持向量也是如此。就我们的视觉直觉而言，它们在投影空间中是合理的。
- en: Take a look at what they look like in the projected space, and then in the original
    space. The 3D margin is the region (not shaded to avoid visual clutter) between
    the planes above and below the separating hyperplane.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 看看它们在投影空间中的样子，然后再看看在原始空间中的样子。3D 边距是分隔超平面上方和下方平面之间的区域（未着色以避免视觉混乱）。
- en: '![](../Images/2f76478a7f13efda4d2825728d0e4860.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2f76478a7f13efda4d2825728d0e4860.png)'
- en: There are 4 support vectors in the projected space, which seems reasonable.
    They sit on the two planes that identify the margin. In the original space, they
    are still on the margin, but there doesn’t seem to be enough of them.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 投影空间中有 4 个支持向量，这似乎是合理的。它们位于确定边距的两个平面上。在原始空间中，它们仍然在边距上，但似乎数量不足。
- en: 'Let’s step back and analyze what happened:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们退一步分析一下发生了什么：
- en: '****1\. How did I know what space to project the data onto?****'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '****1\. 我怎么知道将数据投影到什么空间？****'
- en: It seems I was being utterly specific — there is a square root of 2 in there
    somewhere!
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来我非常具体——在其中有一个平方根 2！
- en: In this case, I wanted to show how projections to higher dimensions work, so
    I picked a very specific projection. In general, this is hard to know. However,
    what we do know is data is more *likely* to be linearly separable when projected
    onto higher dimensions, thanks to [Cover’s theorem](https://en.wikipedia.org/wiki/Cover%27s_theorem).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我想展示高维度投影的工作原理，因此我选择了一个非常具体的投影。一般来说，这很难知道。然而，我们所知道的是，数据在投影到更高维度时，更*可能*是线性可分的，这要归功于[Cover
    定理](https://en.wikipedia.org/wiki/Cover%27s_theorem)。
- en: In practice, we try out a few high-dimensional projections to see what works.
    In fact, we can project data onto *infinite *dimensions and that often works pretty
    well. This deserves going into some detail and that’s what the next section is
    about.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践中，我们尝试几种高维度的投影，看看哪种有效。事实上，我们可以将数据投影到*无限*维度，这通常效果很好。这值得详细探讨，接下来的部分就是关于这个的。
- en: '****2\. So I project the data first and then run the SVM?****'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '****2\. 那我先投影数据，然后运行 SVM 吗？****'
- en: No. To make the above example easy to grasp I made it sound like we need to
    project the data first. The fact is you ask the SVM to do the projection for you.
    This has some benefits. For one, SVMs use something called *kernels* to do these
    projections, and these are pretty fast (for reasons we shall soon see).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 不。为了使上述例子易于理解，我让它听起来像是我们需要先投影数据。事实上，你是让支持向量机为你进行投影。这有一些好处。首先，支持向量机使用一种叫做*核函数*的东西来进行这些投影，而且这些操作非常快速（原因我们很快会看到）。
- en: Also, remember I mentioned projecting to infinite dimensions in the previous
    point? If you project the data yourself, how do you represent or store infinite
    dimensions? It turns out SVMs are very clever about this, courtesy of kernels
    again.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，记得我在上一点提到过投影到无限维度吗？如果你自己进行数据投影，你如何表示或存储无限维度？事实证明，支持向量机在这方面非常聪明，多亏了核函数。
- en: It’s about time we looked at kernels.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候看看核函数了。
- en: More On This Topic
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 进一步阅读这个话题
- en: '[Support Vector Machines: An Intuitive Approach](https://www.kdnuggets.com/2022/08/support-vector-machines-intuitive-approach.html)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[支持向量机：一种直观的方法](https://www.kdnuggets.com/2022/08/support-vector-machines-intuitive-approach.html)'
- en: '[A Gentle Introduction to Support Vector Machines](https://www.kdnuggets.com/2023/07/gentle-introduction-support-vector-machines.html)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[支持向量机的温和介绍](https://www.kdnuggets.com/2023/07/gentle-introduction-support-vector-machines.html)'
- en: '[How Semantic Vector Search Transforms Customer Support Interactions](https://www.kdnuggets.com/how-semantic-vector-search-transforms-customer-support-interactions)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[语义向量搜索如何转变客户支持互动](https://www.kdnuggets.com/how-semantic-vector-search-transforms-customer-support-interactions)'
- en: '[Python Vector Databases and Vector Indexes: Architecting LLM Apps](https://www.kdnuggets.com/2023/08/python-vector-databases-vector-indexes-architecting-llm-apps.html)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 向量数据库与向量索引：构建 LLM 应用](https://www.kdnuggets.com/2023/08/python-vector-databases-vector-indexes-architecting-llm-apps.html)'
- en: '[Picking Examples to Understand Machine Learning Model](https://www.kdnuggets.com/2022/11/picking-examples-understand-machine-learning-model.html)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[挑选示例以理解机器学习模型](https://www.kdnuggets.com/2022/11/picking-examples-understand-machine-learning-model.html)'
- en: '[Ensemble Learning with Examples](https://www.kdnuggets.com/2022/10/ensemble-learning-examples.html)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用示例进行集成学习](https://www.kdnuggets.com/2022/10/ensemble-learning-examples.html)'
