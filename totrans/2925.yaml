- en: The Machine Learning Puzzle, Explained
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/06/machine-learning-puzzle-explained.html](https://www.kdnuggets.com/2019/06/machine-learning-puzzle-explained.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: Previously I have written about the [data science puzzle](/2017/01/data-science-puzzle-revisited.html),
    an overview which defines a number of key concepts related to data science, and
    which which attempts to explain how these pieces relate to one another and fit
    together. This time we will take a similar look at the machine learning model.
  prefs: []
  type: TYPE_NORMAL
- en: Keep in mind we will be approaching machine learning from a supervised perspective,
    and all concepts are discussed with classification as our goal throughout (though
    regression would be similar). Importantly, this puzzle view will not cover other
    machine learning paradigms, such as unsupervised learning and reinforcement learning,
    so keep that in mind as the pieces are unveiled.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: With that said, read on to find out how the machine learning puzzle comes together.
  prefs: []
  type: TYPE_NORMAL
- en: '![Machine learning puzzle](../Images/8b7c9c27b37acd89e10122aa5c4922b6.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Machine learning** is one of the primary technical drivers of data science.
    The goal of data science is to extract insight from data, and machine learning
    is the engine which allows this process to be automated. Machine learning algorithms
    continue to facilitate the automatic improvement of computer programs from experience,
    and these algorithms are becoming increasingly vital to a variety of diverse fields.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Data** is what makes the world turn these days. Data is what is fed into
    machine learning algorithms in order for the "learning" to take place. A particular
    dataset is a static, finite collection of **instances** — or observations — and
    their corresponding **features**; if we are considering the data used to train
    and test models, a class label — or target — which defines the classification
    group of which an observation is a member, is also present. A simple way of thinking
    about data is as a table (though this need not be the case), and in this scenario
    rows in a table are instances, while columns are features. Data need not be arranged
    as a simple table; however, we do our best to keep data arranged into multidimensional
    arrays — of varying dimensions — which are robust enough to capture all sorts
    of data representations that we can come up with, provided we use the shoehorn
    of ingenuity at times.'
  prefs: []
  type: TYPE_NORMAL
- en: The machine learning **algorithm** is the particular approach and sequence of
    steps which will be used in order to learn the best way to model the data. Algorithms
    use different methods of attempting to best predict the label of an instance of
    data based on that instance's feature values. Given a sufficient number of data
    instances, the idea is that a machine learning algorithm will be able to approximate
    with some degree of success (however you want to define success) what class a
    given instance falls in to, hence the term "classification." **Hyperparameters**
    are the knobs that can be turned in order to fine-tune the algorithmic "learning."
  prefs: []
  type: TYPE_NORMAL
- en: Simple put, algorithm + dataset = **model**. The model is the result of the
    data and algorithm after the training phase, at which point the resulting model
    has "learned" the best way of making sense of the data, in terms of how to go
    from an instance's set of features to the class prediction. The model is a mathematical
    function (created as the result of training; see below) which is able to take
    instances of the dataset and predict their class membership.
  prefs: []
  type: TYPE_NORMAL
- en: How does the algorithm use the data to create a model? This is accomplished
    via **training**, the procedure in which a portion of the available data, the
    training set, is fed into the algorithm, which undergoes its steps and produces
    a trained model. This trained model can then be shown unseen holdout data in the
    way of a **validation** set in order to see how well it performs classifying data
    it has never seen before. Finally, a **testing** set can be used to differentiate
    between the quality of differing models, which is a second set of unseen data
    which gets shown to final products only after they have been tweaked to their
    best possible performance otherwise.
  prefs: []
  type: TYPE_NORMAL
- en: The **loss function** is the mechanism by which comparisons between class predictions
    and actual class labels are made for training data instances. The goal of a machine
    learning algorithm is to iteratively minimize this loss — the value output by
    the loss function representing the distance between predictions and reality —
    and so the lower this value is, the better the model has learned to predict class
    labels.
  prefs: []
  type: TYPE_NORMAL
- en: What else is used to determine how well a model performs? There are a number
    of metrics available for model **evaluation**. The simplest form of such for classification
    is simple accuracy, which is the fraction of correctly made predictions. Precision
    and recall are another pair of useful classification metrics, and there are others
    still. Regression, classification's continuous cousin, uses a different set of
    metrics meant to determine the distance a prediction is from the corresponding
    actual value.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/628c051fa81b348e055c44294678c8d2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: Andrew Ng''s Machine Learning class at Stanford'
  prefs: []
  type: TYPE_NORMAL
- en: Has your model done a great job predicting the classes of your training data,
    but is not generalizing well to the holdout sets? You have fallen victim to **overfitting**,
    a scenario where the model's internal understanding of a problem is tightly linked
    to the particular instances in the training set. Overfitting is a failure to separate
    signal from noise and instead treats all data as signal.
  prefs: []
  type: TYPE_NORMAL
- en: One way to help fix overfitting is with **regularization**, which is a method
    of applying a penalty to particular model parameters in order to force the learning
    of a less flexible, less complex model. This lack of complexity should produce
    a model which does not capture the nuance of the training data as well, and should
    generalize better to unseen data.
  prefs: []
  type: TYPE_NORMAL
- en: There you have a brief look at some of the core concepts involved in the machine
    learning puzzle meant for prospective newcomers to the field. An understanding
    of these elementary concepts can help form a solid foundation on which to build
    your internal machine learning framework.
  prefs: []
  type: TYPE_NORMAL
- en: '**Related**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[The Data Science Puzzle, Revisited](/2017/01/data-science-puzzle-revisited.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Essence of Machine Learning](/2018/12/essence-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Machine Learning Project Checklist](/2018/12/machine-learning-project-checklist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
