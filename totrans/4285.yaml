- en: Multiple Time Series Forecasting with PyCaret
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 PyCaret 进行多时间序列预测
- en: 原文：[https://www.kdnuggets.com/2021/04/multiple-time-series-forecasting-pycaret.html](https://www.kdnuggets.com/2021/04/multiple-time-series-forecasting-pycaret.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/04/multiple-time-series-forecasting-pycaret.html](https://www.kdnuggets.com/2021/04/multiple-time-series-forecasting-pycaret.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Moez Ali](https://www.linkedin.com/in/profile-moez/), Founder & Author
    of PyCaret**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Moez Ali](https://www.linkedin.com/in/profile-moez/)，PyCaret 创始人及作者**'
- en: '![](../Images/c05ecb6b401ed3f08fb023e361b80252.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c05ecb6b401ed3f08fb023e361b80252.png)'
- en: PyCaret — An open-source, low-code machine learning library in Python
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret — 一个开源、低代码的 Python 机器学习库
- en: PyCaret
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PyCaret
- en: PyCaret is an open-source, low-code machine learning library and end-to-end
    model management tool built-in Python for automating machine learning workflows.
    It is incredibly popular for its ease of use, simplicity, and ability to build
    and deploy end-to-end ML prototypes quickly and efficiently.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 是一个开源、低代码的机器学习库和端到端模型管理工具，内置于 Python 中，用于自动化机器学习工作流程。它因易用性、简洁性和快速高效地构建和部署端到端机器学习原型的能力而极受欢迎。
- en: PyCaret is an alternate low-code library that can be used to replace hundreds
    of lines of code with few lines only. This makes the experiment cycle exponentially
    fast and efficient.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 是一个替代的低代码库，可以用少量代码替代数百行代码。这使得实验周期变得指数级加快和高效。
- en: PyCaret is **simple and** **easy to use**. All the operations performed in PyCaret
    are sequentially stored in a **Pipeline** that is fully automated for **deployment. **Whether
    it’s imputing missing values, one-hot-encoding, transforming categorical data,
    feature engineering, or even hyperparameter tuning, PyCaret automates all of it.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 是**简单**和**易用**的。在 PyCaret 中执行的所有操作都按顺序存储在一个**管道**中，该管道完全自动化以**部署**。无论是填补缺失值、一键编码、转换分类数据、特征工程，还是超参数调优，PyCaret
    都会自动化处理。
- en: 'This tutorial assumes that you have some prior knowledge and experience with
    PyCaret. If you haven’t used it before, no problem — you can get a quick headstart
    through these tutorials:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程假设你已有一定的 PyCaret 知识和经验。如果你以前没用过，也没关系——你可以通过以下教程快速入门：
- en: '[PyCaret 2.2 is here — what’s new](https://towardsdatascience.com/pycaret-2-2-is-here-whats-new-ad7612ca63b)'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyCaret 2.2 已发布——有什么新变化](https://towardsdatascience.com/pycaret-2-2-is-here-whats-new-ad7612ca63b)'
- en: '[Announcing PyCaret 2.0](https://towardsdatascience.com/announcing-pycaret-2-0-39c11014540e)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[宣布 PyCaret 2.0](https://towardsdatascience.com/announcing-pycaret-2-0-39c11014540e)'
- en: '[Five things you don’t know about PyCaret](https://towardsdatascience.com/5-things-you-dont-know-about-pycaret-528db0436eec)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[你不知道的 PyCaret 五件事](https://towardsdatascience.com/5-things-you-dont-know-about-pycaret-528db0436eec)'
- en: '**RECAP**'
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**回顾**'
- en: In my [last tutorial](https://towardsdatascience.com/time-series-forecasting-with-pycaret-regression-module-237b703a0c63),
    I have demonstrated how you can use PyCaret to forecast time-series data using
    Machine Learning through [PyCaret Regression Module](https://pycaret.readthedocs.io/en/latest/api/regression.html).
    If you haven’t read that yet, you can read [Time Series Forecasting with PyCaret
    Regression Module](https://towardsdatascience.com/time-series-forecasting-with-pycaret-regression-module-237b703a0c63) tutorial
    before continuing with this one, as this tutorial builds upon some important concepts
    covered in the last tutorial.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在我之前的 [教程](https://towardsdatascience.com/time-series-forecasting-with-pycaret-regression-module-237b703a0c63)
    中，我演示了如何通过 [PyCaret 回归模块](https://pycaret.readthedocs.io/en/latest/api/regression.html)
    使用 PyCaret 进行时间序列数据预测。如果你还没读过，可以先阅读 [使用 PyCaret 回归模块进行时间序列预测](https://towardsdatascience.com/time-series-forecasting-with-pycaret-regression-module-237b703a0c63)
    这篇教程，因为本教程建立在之前教程的一些重要概念之上。
- en: Installing PyCaret
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装 PyCaret
- en: Installing PyCaret is very easy and takes only a few minutes. We strongly recommend
    using a virtual environment to avoid potential conflicts with other libraries.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 PyCaret 非常简单，只需几分钟。我们强烈建议使用虚拟环境，以避免与其他库的潜在冲突。
- en: PyCaret’s default installation is a slim version of pycaret which only installs
    hard dependencies that are [listed here](https://github.com/pycaret/pycaret/blob/master/requirements.txt).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 的默认安装是 PyCaret 的精简版，只安装了硬性依赖项，详细信息请见 [这里](https://github.com/pycaret/pycaret/blob/master/requirements.txt)。
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When you install the full version of pycaret, all the optional dependencies
    as [listed here](https://github.com/pycaret/pycaret/blob/master/requirements-optional.txt) are
    also installed.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当你安装 PyCaret 的完整版时，所有可选的依赖项也会被安装，详细信息请见 [这里](https://github.com/pycaret/pycaret/blob/master/requirements-optional.txt)。
- en: ???? PyCaret Regression Module
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? PyCaret 回归模块
- en: PyCaret **Regression Module** is a supervised machine learning module used for
    estimating the relationships between a **dependent variable** (often called the
    ‘outcome variable’, or ‘target’) and one or more **independent variables** (often
    called ‘features’, or ‘predictors’).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret **回归模块** 是一个监督机器学习模块，用于估计**因变量**（通常称为“结果变量”或“目标”）与一个或多个**自变量**（通常称为“特征”或“预测变量”）之间的关系。
- en: The objective of regression is to predict continuous values such as sales amount,
    quantity, temperature, number of customers, etc. All modules in PyCaret provide
    many [pre-processing](https://www.pycaret.org/preprocessing) features to prepare
    the data for modeling through the [setup ](https://www.pycaret.org/setup)function.
    It has over 25 ready-to-use algorithms and [several plots](https://www.pycaret.org/plot-model) to
    analyze the performance of trained models.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 回归的目标是预测连续值，例如销售金额、数量、温度、客户数量等。PyCaret 中的所有模块提供了许多[预处理](https://www.pycaret.org/preprocessing)功能，通过[setup](https://www.pycaret.org/setup)函数准备数据以进行建模。它拥有超过
    25 种现成的算法和[若干图表](https://www.pycaret.org/plot-model)来分析训练模型的性能。
- en: ???? Dataset
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 数据集
- en: For this tutorial, I will show the end-to-end implementation of multiple time-series
    data forecasting, including both the training as well as predicting future values.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我将展示多时间序列数据预测的端到端实现，包括训练过程以及预测未来值。
- en: I have used the [Store Item Demand Forecasting Challenge](https://www.kaggle.com/c/demand-forecasting-kernels-only) dataset
    from Kaggle. This dataset has 10 different stores and each store has 50 items,
    i.e. total of 500 daily level time series data for five years (2013–2017).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了来自 Kaggle 的[商店商品需求预测挑战](https://www.kaggle.com/c/demand-forecasting-kernels-only)数据集。该数据集包含
    10 个不同的商店，每个商店有 50 个项目，即总共有 500 个日常时间序列数据，跨度为五年（2013–2017）。
- en: '![](../Images/df759b487e1be619cd86c59ff474a925.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/df759b487e1be619cd86c59ff474a925.png)'
- en: Sample Dataset
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 示例数据集
- en: ???? Load and prepare the data
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 加载和准备数据
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/cee173d1e1b85ba3bf47c84c1805d384.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cee173d1e1b85ba3bf47c84c1805d384.png)'
- en: Samples rows from data
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 从数据中采样行
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: ???? Visualize time-series
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 可视化时间序列
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/9d91598b4177e08e4a34837cc6145ecf.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9d91598b4177e08e4a34837cc6145ecf.png)'
- en: store_1_item_1 time series and 30-day moving average
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: store_1_item_1 时间序列和 30 天移动平均
- en: '![](../Images/af2b1fa012292c287ca1c33f2da7257d.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/af2b1fa012292c287ca1c33f2da7257d.png)'
- en: store_2_item_1 time series and 30-day moving average
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: store_2_item_1 时间序列和 30 天移动平均
- en: ???? Start the training process
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 开始训练过程
- en: Now that we have the data ready, let’s start the training loop. Notice that `verbose
    = False` in all functions to avoid printing results on the console while training.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好数据，让我们开始训练循环。注意在所有函数中使用`verbose = False`，以避免在训练过程中在控制台打印结果。
- en: The code below is a loop around `time_series` column we created during the data
    preparatory step. There are a total of 150 time series (10 stores x 50 items).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码是对我们在数据准备步骤中创建的`time_series`列进行循环。总共有 150 个时间序列（10 个商店 x 50 个项目）。
- en: Line 10 below is filtering the dataset for `time_series` variable. The first
    part inside the loop is initializing the `setup` function, followed by `compare_models` to
    find the best model. Line 24–26 captures the results and appends the performance
    metrics of the best model in a list called `all_results`. The last part of the
    code uses the `finalize_model` function to retrain the best model on the entire
    dataset including the 5% left in the test set and saves the entire pipeline including
    the model as a pickle file.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 下方第 10 行是对`time_series`变量进行数据过滤。循环的第一部分初始化了`setup`函数，然后使用`compare_models`查找最佳模型。第
    24–26 行捕获结果，并将最佳模型的性能指标附加到名为`all_results`的列表中。代码的最后部分使用`finalize_model`函数在整个数据集上重新训练最佳模型，包括测试集中剩余的
    5%，并将整个管道（包括模型）保存为一个 pickle 文件。
- en: '[https://gist.github.com/moezali1/f258195ba1c677654abffb0d1acb2cc0](https://gist.github.com/moezali1/f258195ba1c677654abffb0d1acb2cc0)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://gist.github.com/moezali1/f258195ba1c677654abffb0d1acb2cc0](https://gist.github.com/moezali1/f258195ba1c677654abffb0d1acb2cc0)'
- en: We can now create a data frame from `all_results` list. It will display the
    best model selected for each time series.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以从`all_results`列表创建一个数据框。它将显示每个时间序列选择的最佳模型。
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/fb374f6e8afef94f8a2aef439173c3dd.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fb374f6e8afef94f8a2aef439173c3dd.png)'
- en: sample_rows from concat_results
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 从 concat_results 中采样行
- en: Training Process ????
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 训练过程 ????
- en: '![Figure](../Images/425b2d2a63ec2c98390fbf8da89b63ad.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/425b2d2a63ec2c98390fbf8da89b63ad.png)'
- en: Training process
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 训练过程
- en: ???? Generate predictions using trained models
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 使用训练模型生成预测
- en: Now that we have trained models, let’s use them to generate predictions, but
    first, we need to create the dataset for scoring (X variables).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经训练了模型，让我们用它们来生成预测，但首先，我们需要创建评分的数据集（X 变量）。
- en: '[PRE5]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/19a1fa56fa27d09a4afb8919582a888b.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/19a1fa56fa27d09a4afb8919582a888b.png)'
- en: sample rows from score_df dataset
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 从 score_df 数据集提取样本行
- en: Now let’s create a loop to load the trained pipelines and use the `predict_model` function
    to generate prediction labels.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们创建一个循环来加载训练好的管道，并使用 `predict_model` 函数生成预测标签。
- en: '[PRE6]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/e4eba32882da3ce5ace399f07c02ec61.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e4eba32882da3ce5ace399f07c02ec61.png)'
- en: samples rows from concat_df
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 从 concat_df 中提取样本行
- en: We will now join the `data`and `concat_df` .
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将 `data` 和 `concat_df` 合并。
- en: '[PRE7]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/68ab2e1ee3847753490af9aed8f84f82.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/68ab2e1ee3847753490af9aed8f84f82.png)'
- en: sample rows from final_df
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 从 final_df 中提取样本行
- en: We can now create a loop to see all plots.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以创建一个循环来查看所有图表。
- en: '[PRE8]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/6bad75640eafb65d8759b7a89ee53ebf.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6bad75640eafb65d8759b7a89ee53ebf.png)'
- en: store_1_item_1 actual sales and predicted labels
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: store_1_item_1 实际销售和预测标签
- en: '![](../Images/741088670e001a6d1420457e739fc2d4.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/741088670e001a6d1420457e739fc2d4.png)'
- en: store_2_item_1 actual sales and predicted labels
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: store_2_item_1 实际销售和预测标签
- en: I hope that you will appreciate the ease of use and simplicity in PyCaret. In
    less than 50 lines of code and one hour of experimentation, I have trained over
    10,000 models (25 estimators x 500 time series) and productionalized 500 best
    models to generate predictions.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你会欣赏 PyCaret 的易用性和简洁性。通过不到 50 行代码和一小时的实验，我已经训练了超过 10,000 个模型（25 个估计器 x 500
    个时间序列），并将 500 个最佳模型投入生产以生成预测。
- en: Coming Soon!
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 敬请期待！
- en: Next week I will be writing a tutorial on unsupervised anomaly detection on
    time-series data using [PyCaret Anomaly Detection Module](https://pycaret.readthedocs.io/en/latest/api/anomaly.html).
    Please follow me on [Medium](https://medium.com/@moez-62905), [LinkedIn](https://www.linkedin.com/in/profile-moez/),
    and [Twitter](https://twitter.com/moezpycaretorg1) to get more updates.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 下周我将写一篇关于使用 [PyCaret 异常检测模块](https://pycaret.readthedocs.io/en/latest/api/anomaly.html)
    进行无监督时间序列异常检测的教程。请关注我的 [Medium](https://medium.com/@moez-62905)、[LinkedIn](https://www.linkedin.com/in/profile-moez/)
    和 [Twitter](https://twitter.com/moezpycaretorg1) 以获取更多更新。
- en: There is no limit to what you can achieve using this lightweight workflow automation
    library in Python. If you find this useful, please do not forget to give us ⭐️
    on our GitHub repository.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个轻量级的 Python 工作流自动化库，你可以实现无限的目标。如果你觉得这有用，请不要忘记在我们的 GitHub 仓库上给我们 ⭐️。
- en: To hear more about PyCaret follow us on [LinkedIn](https://www.linkedin.com/company/pycaret/) and [Youtube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 想了解更多关于 PyCaret 的信息，请关注我们的 [LinkedIn](https://www.linkedin.com/company/pycaret/)
    和 [Youtube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g)。
- en: Join us on our slack channel. Invite link [here](https://join.slack.com/t/pycaret/shared_invite/zt-p7aaexnl-EqdTfZ9U~mF0CwNcltffHg).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 加入我们的 Slack 频道。邀请链接 [在此](https://join.slack.com/t/pycaret/shared_invite/zt-p7aaexnl-EqdTfZ9U~mF0CwNcltffHg)。
- en: 'You may also be interested in:'
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你可能还对以下内容感兴趣：
- en: '[Build your own AutoML in Power BI using PyCaret 2.0](https://towardsdatascience.com/build-your-own-automl-in-power-bi-using-pycaret-8291b64181d)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 2.0 在 Power BI 中构建你自己的 AutoML](https://towardsdatascience.com/build-your-own-automl-in-power-bi-using-pycaret-8291b64181d)'
- en: '[Deploy Machine Learning Pipeline on Azure using Docker](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-cloud-using-docker-container-bec64458dc01)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 Docker 在 Azure 上部署机器学习管道](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-cloud-using-docker-container-bec64458dc01)'
- en: '[Deploy Machine Learning Pipeline on Google Kubernetes Engine](https://towardsdatascience.com/deploy-machine-learning-model-on-google-kubernetes-engine-94daac85108b)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 Google Kubernetes Engine 上部署机器学习管道](https://towardsdatascience.com/deploy-machine-learning-model-on-google-kubernetes-engine-94daac85108b)'
- en: '[Deploy Machine Learning Pipeline on AWS Fargate](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-aws-fargate-eb6e1c50507)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 AWS Fargate 上部署机器学习管道](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-aws-fargate-eb6e1c50507)'
- en: '[Build and deploy your first machine learning web app](https://towardsdatascience.com/build-and-deploy-your-first-machine-learning-web-app-e020db344a99)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[构建并部署你的第一个机器学习 Web 应用](https://towardsdatascience.com/build-and-deploy-your-first-machine-learning-web-app-e020db344a99)'
- en: '[Deploy PyCaret and Streamlit app using AWS Fargate serverless](https://towardsdatascience.com/deploy-pycaret-and-streamlit-app-using-aws-fargate-serverless-infrastructure-8b7d7c0584c2)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 AWS Fargate 无服务器部署 PyCaret 和 Streamlit 应用](https://towardsdatascience.com/deploy-pycaret-and-streamlit-app-using-aws-fargate-serverless-infrastructure-8b7d7c0584c2)'
- en: '[Build and deploy machine learning web app using PyCaret and Streamlit](https://towardsdatascience.com/build-and-deploy-machine-learning-web-app-using-pycaret-and-streamlit-28883a569104)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 和 Streamlit 构建并部署机器学习 web 应用](https://towardsdatascience.com/build-and-deploy-machine-learning-web-app-using-pycaret-and-streamlit-28883a569104)'
- en: '[Deploy Machine Learning App built using Streamlit and PyCaret on GKE](https://towardsdatascience.com/deploy-machine-learning-app-built-using-streamlit-and-pycaret-on-google-kubernetes-engine-fd7e393d99cb)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 GKE 上部署使用 Streamlit 和 PyCaret 构建的机器学习应用](https://towardsdatascience.com/deploy-machine-learning-app-built-using-streamlit-and-pycaret-on-google-kubernetes-engine-fd7e393d99cb)'
- en: Important Links
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重要链接
- en: '[Documentation](https://pycaret.readthedocs.io/en/latest/installation.html)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[文档](https://pycaret.readthedocs.io/en/latest/installation.html)'
- en: '[Blog](https://medium.com/@moez_62905)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[博客](https://medium.com/@moez_62905)'
- en: '[GitHub](https://www.github.com/pycaret/pycaret)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[GitHub](https://www.github.com/pycaret/pycaret)'
- en: '[StackOverflow](https://stackoverflow.com/questions/tagged/pycaret)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[StackOverflow](https://stackoverflow.com/questions/tagged/pycaret)'
- en: '[Install PyCaret](https://pycaret.readthedocs.io/en/latest/installation.html)
    [Notebook Tutorials](https://pycaret.readthedocs.io/en/latest/tutorials.html)
    [Contribute in PyCaret](https://pycaret.readthedocs.io/en/latest/contribute.html)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '[安装 PyCaret](https://pycaret.readthedocs.io/en/latest/installation.html) [笔记本教程](https://pycaret.readthedocs.io/en/latest/tutorials.html)
    [参与 PyCaret](https://pycaret.readthedocs.io/en/latest/contribute.html)'
- en: Want to learn about a specific module?
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 想了解特定模块？
- en: Click on the links below to see the documentation and working examples.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 点击下面的链接查看文档和工作示例。
- en: '[Classification](https://pycaret.readthedocs.io/en/latest/api/classification.html)
    [Regression](https://pycaret.readthedocs.io/en/latest/api/regression.html)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[分类](https://pycaret.readthedocs.io/en/latest/api/classification.html) [回归](https://pycaret.readthedocs.io/en/latest/api/regression.html)'
- en: '[Clustering](https://pycaret.readthedocs.io/en/latest/api/clustering.html)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '[聚类](https://pycaret.readthedocs.io/en/latest/api/clustering.html)'
- en: '[Anomaly Detection](https://pycaret.readthedocs.io/en/latest/api/anomaly.html)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[异常检测](https://pycaret.readthedocs.io/en/latest/api/anomaly.html)'
- en: '[Natural Language Processing](https://pycaret.readthedocs.io/en/latest/api/nlp.html)
    [Association Rule Mining](https://pycaret.readthedocs.io/en/latest/api/arules.html)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[自然语言处理](https://pycaret.readthedocs.io/en/latest/api/nlp.html) [关联规则挖掘](https://pycaret.readthedocs.io/en/latest/api/arules.html)'
- en: '**Bio: [Moez Ali](https://www.linkedin.com/in/profile-moez/)** is a Data Scientist,
    and is Founder & Author of PyCaret.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '**个人简介：[Moez Ali](https://www.linkedin.com/in/profile-moez/)** 是数据科学家，同时是 PyCaret
    的创始人和作者。'
- en: '[Original](https://towardsdatascience.com/multiple-time-series-forecasting-with-pycaret-bc0a779a22fe).
    Reposted with permission.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/multiple-time-series-forecasting-with-pycaret-bc0a779a22fe)。经授权转载。'
- en: '**Related:**'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Time Series Forecasting with PyCaret Regression Module](/2021/04/time-series-forecasting-pycaret-regression-module.html)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 回归模块进行时间序列预测](/2021/04/time-series-forecasting-pycaret-regression-module.html)'
- en: '[Automated Anomaly Detection Using PyCaret](/2021/04/automated-anomaly-detection-pycaret.html)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 进行自动化异常检测](/2021/04/automated-anomaly-detection-pycaret.html)'
- en: '[Deploy a Machine Learning Pipeline to the Cloud Using a Docker Container](/2020/06/deploy-machine-learning-pipeline-cloud-docker.html)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Docker 容器将机器学习管道部署到云端](/2020/06/deploy-machine-learning-pipeline-cloud-docker.html)'
- en: '* * *'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Time Series Forecasting with Ploomber, Arima, Python, and Slurm](https://www.kdnuggets.com/2022/03/time-series-forecasting-ploomber-arima-python-slurm.html)'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Ploomber、Arima、Python 和 Slurm 进行时间序列预测](https://www.kdnuggets.com/2022/03/time-series-forecasting-ploomber-arima-python-slurm.html)'
- en: '[Time Series Forecasting with statsmodels and Prophet](https://www.kdnuggets.com/2023/03/time-series-forecasting-statsmodels-prophet.html)'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 statsmodels 和 Prophet 进行时间序列预测](https://www.kdnuggets.com/2023/03/time-series-forecasting-statsmodels-prophet.html)'
- en: '[Leveraging XGBoost for Time-Series Forecasting](https://www.kdnuggets.com/2023/08/leveraging-xgboost-timeseries-forecasting.html)'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[利用 XGBoost 进行时间序列预测](https://www.kdnuggets.com/2023/08/leveraging-xgboost-timeseries-forecasting.html)'
- en: '[How to Manage Multiple Inheritance in Python](https://www.kdnuggets.com/2022/03/manage-multiple-inheritance-python.html)'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何在 Python 中管理多重继承](https://www.kdnuggets.com/2022/03/manage-multiple-inheritance-python.html)'
- en: '[Introduction to Binary Classification with PyCaret](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 进行二分类介绍](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
- en: '[Introduction to Clustering in Python with PyCaret](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 在 Python 中进行聚类介绍](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)'
