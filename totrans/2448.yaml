- en: 'From Google Colab to a Ploomber Pipeline: ML at Scale with GPUs'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2022/03/google-colab-ploomber-pipeline-ml-scale-gpus.html](https://www.kdnuggets.com/2022/03/google-colab-ploomber-pipeline-ml-scale-gpus.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![From Google Colab to a Ploomber Pipeline: ML at Scale with GPUs](../Images/4e5f6cb13efc294c8e256db05250c5be.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Background**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Google Colab is pretty straightforward, you can open a notebook in a managed
    Jupyter environment, train with free GPUs, and share the drive notebooks, it also
    has a Git interface to some extent (mirroring the notebook into a repository).
    I wanted to scale my notebook from the exploration data analysis (EDA) stage to
    a working pipeline that can run in production. It was also important to have better
    Git integration for storing the artifacts and collaborating with the team. Ploomber
    allowed me to achieve it, while also accelerating the development stage by building
    incrementally tasks that changed.
  prefs: []
  type: TYPE_NORMAL
- en: '**How Does it Work?**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I started by bootstrapping my Colab with a few dependencies (pip install ploomber).
    I was using the first-pipeline example provided by Ploomber - Getting data, cleaning
    it, and visualizing it. The pipeline structure was specified in the pipeline.yaml
    file which is composed of tasks that can be functions, .py scripts or notebooks
    (nodes in my graph), and its products, each product can be many things like raw/clean
    data, executed notebooks, HTML reports, etc.
  prefs: []
  type: TYPE_NORMAL
- en: '![XXXXX](../Images/4095e6fb981bc39d749f851d11cf4dcb.png)'
  prefs: []
  type: TYPE_IMG
- en: This is the pipeline I ran through Ploomber, getting raw covid data, profiling
    the data, then cleaning and transforming it, and then visualizing the clean data
    as well as profiling it
  prefs: []
  type: TYPE_NORMAL
- en: In the diagram below you can see that Ploomber and my Colab are in sync, loaded
    from and to the Git repository, and I can change the files that compose the pipeline
    directly from Colab. In case I’m done writing my POC I can deploy to the cloud
    with a single command, for instance to Airflow, Kubernetes, or AWS.
  prefs: []
  type: TYPE_NORMAL
- en: '![From Google Colab to a Ploomber Pipeline: ML at Scale with GPUs](../Images/76bacfd0a57aeff54823b8de4a132427.png)'
  prefs: []
  type: TYPE_IMG
- en: The Colab notebook is loaded from git (from the source .ipynb), it then run
    Ploomber under the hood which allows pushing raw code to git and a single cmd
    cloud deployment
  prefs: []
  type: TYPE_NORMAL
- en: '**Benefits**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This addition allowed me to develop rapidly and move from a monolith notebook
    to a scalable pipeline. I later pushed all of the code to GitHub so now we can
    collaborate as a team on the work and work simultaneously - only the real code
    differences are being saved. In addition, my notebook isn’t running sequentially,
    which means faster runs via parallelization. This also standardizes the work so
    if we ever want to replicate this project to a different business use case (which
    is kind of having a template) it’ll require less maintenance, and the learning
    curve will be significantly shorter.
  prefs: []
  type: TYPE_NORMAL
- en: '**What is Ploomber?**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ploomber (https://github.com/ploomber/ploomber) is an open-source framework
    to help data scientists develop data pipelines fast and deploy them anywhere.
    By using it directly from notebooks it allows you to skip weeks-long refactoring
    and focus on the modeling work and not infrastructures. We have a really active
    community which you can [check out here](https://ploomber.io/community).
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading!
  prefs: []
  type: TYPE_NORMAL
- en: '**[Ido Michael](https://www.linkedin.com/in/ido-michael/)** co-founded Ploomber
    to help data scientists build faster. He''d been working at AWS leading data engineering/science
    teams. Single handedly he built 100’s of data pipelines during those customer
    engagements together with his team. Originally from Israel, he came to NY for
    his MS at Columbia University. He focused on building Ploomber after he constantly
    found that projects dedicated about 30% of their time just to refactor the dev
    work (prototype) into a production pipeline.'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Ploomber vs Kubeflow: Making MLOps Easier](https://www.kdnuggets.com/2022/02/ploomber-kubeflow-mlops-easier.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Time Series Forecasting with Ploomber, Arima, Python, and Slurm](https://www.kdnuggets.com/2022/03/time-series-forecasting-ploomber-arima-python-slurm.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mastering GPUs: A Beginner''s Guide to GPU-Accelerated DataFrames in Python](https://www.kdnuggets.com/2023/07/mastering-gpus-beginners-guide-gpu-accelerated-dataframes-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Leveraging the Power of GPUs with CuPy in Python](https://www.kdnuggets.com/leveraging-the-power-of-gpus-with-cupy-in-python)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Fine Tuning LLAMAv2 with QLora on Google Colab for Free](https://www.kdnuggets.com/fine-tuning-llamav2-with-qlora-on-google-colab-for-free)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Running Mixtral 8x7b On Google Colab For Free](https://www.kdnuggets.com/running-mixtral-8x7b-on-google-colab-for-free)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
