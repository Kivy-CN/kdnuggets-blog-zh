- en: Programming Best Practices For Data Science
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据科学的编程最佳实践
- en: 原文：[https://www.kdnuggets.com/2018/08/programming-best-practices-data-science.html](https://www.kdnuggets.com/2018/08/programming-best-practices-data-science.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2018/08/programming-best-practices-data-science.html](https://www.kdnuggets.com/2018/08/programming-best-practices-data-science.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](#comments)'
- en: '**By Srini Kadamati, [Dataquest.io](https://www.dataquest.io/)**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者：Srini Kadamati，[Dataquest.io](https://www.dataquest.io/)**'
- en: 'The data science life cycle is generally comprised of the following components:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学生命周期通常包括以下组件：
- en: data retrieval
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据检索
- en: data cleaning
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据清理
- en: data exploration and visualization
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据探索和可视化
- en: statistical or predictive modeling
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 统计或预测建模
- en: '* * *'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三名课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的IT需求'
- en: '* * *'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: While these components are helpful for understanding the different phases, they
    don't help us think about our *programming* workflow.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这些组件有助于理解不同阶段，但它们并没有帮助我们思考*编程*工作流程。
- en: Often, the entire data science life cycle ends up as an arbitrary mess of notebook
    cells in *either*a Jupyter Notebook or a single messy script. In addition, most
    data science problems require us to switch between data retrieval, data cleaning,
    data exploration, data visualization, and statistical / predictive modeling.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，整个数据科学生命周期最终会变成一个随意的笔记本单元格的混乱堆积，*无论是* Jupyter Notebook 还是一个混乱的脚本。此外，大多数数据科学问题要求我们在数据检索、数据清理、数据探索、数据可视化和统计/预测建模之间切换。
- en: 'But there''s a better way! In this post, I''ll go over the two mindsets most
    people switch between when doing programming work specifically for data science:
    the **prototype** mindset and the **production** mindset.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 但还有更好的方法！在这篇文章中，我将深入探讨大多数人在进行数据科学编程工作时切换的两种思维模式：**原型**思维模式和**生产**思维模式。
- en: '| Prototype mindset prioritizes: | Production mindset prioritizes: |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 原型思维优先考虑： | 生产思维优先考虑： |'
- en: '| iteration speed on small pieces of code | iteration speed on the full pipeline
    |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| 小块代码的迭代速度 | 全管道的迭代速度 |'
- en: '| less abstraction (directly modifying code and data objects) | more abstraction
    (modifying parameter values instead) |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 较少抽象（直接修改代码和数据对象） | 更多抽象（改为修改参数值） |'
- en: '| less structure to the code (less modularity) | more structure to the code
    (more modularity) |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| 代码结构较少（模块化较少） | 代码结构较多（模块化较多） |'
- en: '| helping you and others understand the code and data | helping a computer
    run code automatically |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| 帮助你和他人理解代码和数据 | 帮助计算机自动运行代码 |'
- en: I personally use [JupyterLab](http://jupyterlab.readthedocs.io/en/stable/getting_started/installation.html) for
    the entire process (both prototyping and productionizing). I recommend using JupyterLab **at
    least for prototyping**.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我个人使用 [JupyterLab](http://jupyterlab.readthedocs.io/en/stable/getting_started/installation.html)
    来完成整个过程（包括原型制作和生产化）。我推荐至少在原型制作阶段使用 JupyterLab。
- en: '**Lending Club data**'
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**Lending Club 数据**'
- en: To help more concretely understand the difference between the prototyping and
    the production mindset, let's work with some real data. We'll work with lending
    data from the peer-to-peer lending site, [Lending Club](https://www.dataquest.io/blog/programming-best-practices-for-data-science/www.lendingclub.com).
    Unlike a bank, Lending Club doesn't lend money itself. Lending Club is instead
    a marketplace for lenders to lend money to individuals who are seeking loans for
    a variety of reasons (home repairs, wedding costs, etc.). We can use this data
    to build models that will predict if a given loan application will be successful
    or not. We won't dive into building a machine learning pipeline for making predictions
    in this post, but we cover it in our [Machine Learning Project Walkthrough Course](https://www.dataquest.io/course/machine-learning-project).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更具体地理解原型思维和生产思维之间的区别，让我们使用一些真实数据。我们将使用来自点对点借贷网站的贷款数据，[Lending Club](https://www.dataquest.io/blog/programming-best-practices-for-data-science/www.lendingclub.com)。与银行不同，Lending
    Club 本身不提供贷款。Lending Club 是一个市场平台，供贷款人向寻求贷款的个人提供资金（如家庭修缮、婚礼费用等）。我们可以使用这些数据来构建模型，以预测某个贷款申请是否会成功。我们不会在这篇文章中深入探讨构建机器学习预测管道的过程，但我们在我们的[机器学习项目演练课程](https://www.dataquest.io/course/machine-learning-project)中涵盖了这一内容。
- en: Lending Club offers detailed, historical data on both completed loans (loan
    applications that were approved by Lending Club and they found lenders) and declined
    loans (loan application was declined by Lending Club and money never changed hands).
    Navigate to their [data download page](https://www.lendingclub.com/info/download-data.action) and
    select **2007-2011** under **DOWLNOAD LOAN DATA**.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Lending Club 提供了有关已完成贷款（即贷款申请被 Lending Club 批准并找到贷款人的贷款）和拒绝贷款（即贷款申请被 Lending
    Club 拒绝且资金没有发生转移）的详细历史数据。请访问他们的[data download page](https://www.lendingclub.com/info/download-data.action)并在**DOWLNOAD
    LOAN DATA**下选择**2007-2011**。
- en: '![lendingclub](../Images/5893dcd88190c71f1a9b9914ef8fd8e0.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![lendingclub](../Images/5893dcd88190c71f1a9b9914ef8fd8e0.png)'
- en: '**Prototype mindset**'
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**原型思维**'
- en: 'In the prototype mindset, we''re interested in quickly iterating and trying
    to understand some properties and truths about the data. Create a new Jupyter
    notebook and add a Markdown cell that explains:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在原型思维中，我们的目标是快速迭代并尝试理解数据的一些属性和事实。创建一个新的 Jupyter 笔记本，并添加一个 Markdown 单元格来解释：
- en: Any research you did on Lending Club to better understand the platform
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你对 Lending Club 进行的任何研究，以更好地了解这个平台
- en: Any information on the data set you downloaded
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你下载的数据集的任何信息
- en: First things first, let's read the CSV file into pandas.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们将 CSV 文件读入 pandas。
- en: '[PRE0]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We get two pieces of output, first a warning.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到了两部分输出，首先是警告。
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Then the first 5 rows of the dataframe, which we'll avoid showing here (because
    it's quite long).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是数据框的前 5 行，我们这里不展示（因为内容比较长）。
- en: 'We also got the following dataframe output:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还得到了以下数据框输出：
- en: '|  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |
    Notes offered by Prospectus (https://www.lendingclub.com/info/prospectus.action)
    |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '|  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |
    Notes 提供的信息请参见 Prospectus (https://www.lendingclub.com/info/prospectus.action)'
- en: '| d | member_id | loan_amnt | funded_amnt | funded_amnt_inv | term | int_rate
    | installment | grade | sub_grade | emp_title | emp_length | home_ownership |
    annual_inc | verification_status | issue_d | loan_status | pymnt_plan | url |
    desc | purpose | title | zip_code | addr_state | dti | delinq_2yrs | earliest_cr_line
    | inq_last_6mths | mths_since_last_delinq | mths_since_last_record | open_acc
    | pub_rec | revol_bal | revol_util | total_acc | initial_list_status | out_prncp
    | out_prncp_inv | total_pymnt | total_pymnt_inv | total_rec_prncp | total_rec_int
    | total_rec_late_fee | recoveries | collection_recovery_fee | last_pymnt_d | last_pymnt_amnt
    | next_pymnt_d | last_credit_pull_d | collections_12_mths_ex_med | mths_since_last_major_derog
    | policy_code | application_type | annual_inc_joint | dti_joint | verification_status_joint
    | acc_now_delinq | tot_coll_amt | tot_cur_bal | open_acc_6m | open_act_il | open_il_12m
    | open_il_24m | mths_since_rcnt_il | total_bal_il | il_util | open_rv_12m | open_rv_24m
    | max_bal_bc | all_util | total_rev_hi_lim | inq_fi | total_cu_tl | inq_last_12m
    | acc_open_past_24mths | avg_cur_bal | bc_open_to_buy | bc_util | chargeoff_within_12_mths
    | delinq_amnt | mo_sin_old_il_acct | mo_sin_old_rev_tl_op | mo_sin_rcnt_rev_tl_op
    | mo_sin_rcnt_tl | mort_acc | mths_since_recent_bc | mths_since_recent_bc_dlq
    | mths_since_recent_inq | mths_since_recent_revol_delinq | num_accts_ever_120_pd
    | num_actv_bc_tl | num_actv_rev_tl | num_bc_sats | num_bc_tl | num_il_tl | num_op_rev_tl
    | num_rev_accts | num_rev_tl_bal_gt_0 | num_sats | num_tl_120dpd_2m | num_tl_30dpd
    | num_tl_90g_dpd_24m | num_tl_op_past_12m | pct_tl_nvr_dlq | percent_bc_gt_75
    | pub_rec_bankruptcies | tax_liens | tot_hi_cred_lim | total_bal_ex_mort | total_bc_limit
    | total_il_high_credit_limit | revol_bal_joint | sec_app_earliest_cr_line | sec_app_inq_last_6mths
    | sec_app_mort_acc | sec_app_open_acc | sec_app_revol_util | sec_app_open_act_il
    | sec_app_num_rev_accts | sec_app_chargeoff_within_12_mths | sec_app_collections_12_mths_ex_med
    | sec_app_mths_since_last_major_derog | hardship_flag | hardship_type | hardship_reason
    | hardship_status | deferral_term | hardship_amount | hardship_start_date | hardship_end_date
    | payment_plan_start_date | hardship_length | hardship_dpd | hardship_loan_status
    | orig_projected_additional_accrued_interest | hardship_payoff_balance_amount
    | hardship_last_payment_amount | disbursement_method | debt_settlement_flag |
    debt_settlement_flag_date | settlement_status | settlement_date | settlement_amount
    | settlement_percentage | settlement_term |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| d | member_id | loan_amnt | funded_amnt | funded_amnt_inv | term | int_rate
    | installment | grade | sub_grade | emp_title | emp_length | home_ownership |
    annual_inc | verification_status | issue_d | loan_status | pymnt_plan | url |
    desc | purpose | title | zip_code | addr_state | dti | delinq_2yrs | earliest_cr_line
    | inq_last_6mths | mths_since_last_delinq | mths_since_last_record | open_acc
    | pub_rec | revol_bal | revol_util | total_acc | initial_list_status | out_prncp
    | out_prncp_inv | total_pymnt | total_pymnt_inv | total_rec_prncp | total_rec_int
    | total_rec_late_fee | recoveries | collection_recovery_fee | last_pymnt_d | last_pymnt_amnt
    | next_pymnt_d | last_credit_pull_d | collections_12_mths_ex_med | mths_since_last_major_derog
    | policy_code | application_type | annual_inc_joint | dti_joint | verification_status_joint
    | acc_now_delinq | tot_coll_amt | tot_cur_bal | open_acc_6m | open_act_il | open_il_12m
    | open_il_24m | mths_since_rcnt_il | total_bal_il | il_util | open_rv_12m | open_rv_24m
    | max_bal_bc | all_util | total_rev_hi_lim | inq_fi | total_cu_tl | inq_last_12m
    | acc_open_past_24mths | avg_cur_bal | bc_open_to_buy | bc_util | chargeoff_within_12_mths
    | delinq_amnt | mo_sin_old_il_acct | mo_sin_old_rev_tl_op | mo_sin_rcnt_rev_tl_op
    | mo_sin_rcnt_tl | mort_acc | mths_since_recent_bc | mths_since_recent_bc_dlq
    | mths_since_recent_inq | mths_since_recent_revol_delinq | num_accts_ever_120_pd
    | num_actv_bc_tl | num_actv_rev_tl | num_bc_sats | num_bc_tl | num_il_tl | num_op_rev_tl
    | num_rev_accts | num_rev_tl_bal_gt_0 | num_sats | num_tl_120dpd_2m | num_tl_30dpd
    | num_tl_90g_dpd_24m | num_tl_op_past_12m | pct_tl_nvr_dlq | percent_bc_gt_75
    | pub_rec_bankruptcies | tax_liens | tot_hi_cred_lim | total_bal_ex_mort | total_bc_limit
    | total_il_high_credit_limit | revol_bal_joint | sec_app_earliest_cr_line | sec_app_inq_last_6mths
    | sec_app_mort_acc | sec_app_open_acc | sec_app_revol_util | sec_app_open_act_il
    | sec_app_num_rev_accts | sec_app_chargeoff_within_12_mths | sec_app_collections_12_mths_ex_med
    | sec_app_mths_since_last_major_derog | hardship_flag | hardship_type | hardship_reason
    | hardship_status | deferral_term | hardship_amount | hardship_start_date | hardship_end_date
    | payment_plan_start_date | hardship_length | hardship_dpd | hardship_loan_status
    | orig_projected_additional_accrued_interest | hardship_payoff_balance_amount
    | hardship_last_payment_amount | disbursement_method | debt_settlement_flag |
    debt_settlement_flag_date | settlement_status | settlement_date | settlement_amount
    | settlement_percentage | settlement_term |'
- en: The warning lets us know that the type inferencing of pandas for each column
    would be improved if we set the `low_memory` parameter to `False` when calling `pandas.read_csv()`.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 警告提示我们，如果在调用`pandas.read_csv()`时将`low_memory`参数设置为`False`，pandas对每一列的类型推断将会有所改进。
- en: 'The second output is more problematic because the way the DataFrame is storing
    the data has issues. JupyterLab has a terminal environment built in, so we can
    open it and use the bash command `head` to observe the first two lines of the
    raw file:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个输出更具问题性，因为 DataFrame 存储数据的方式存在问题。JupyterLab 内置了终端环境，因此我们可以打开它并使用 bash 命令`head`观察原始文件的前两行：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'While the second line contains the column names as we expect in a CSV file,
    it looks like the first line is throwing off the formatting of the DataFrame when
    pandas tries to parse the file:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然第二行包含我们在 CSV 文件中预期的列名，但第一行似乎在 pandas 尝试解析文件时扰乱了 DataFrame 的格式：
- en: '[PRE3]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Add a Markdown cell that details your observations and add a code cell that
    factors in the observations.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 添加一个 Markdown 单元格，详细描述你的观察，并添加一个代码单元格来考虑这些观察。
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Read the data dictionary from the [Lending Club download page](https://www.lendingclub.com/info/download-data.action) to
    understand which columns don't contain useful information for features. The `desc` and `url` columns
    seem to immediately fit this criteria.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 从[Lending Club下载页面](https://www.lendingclub.com/info/download-data.action)读取数据字典，以了解哪些列不包含对特征有用的信息。`desc`和`url`列似乎立即符合此标准。
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The next step is to drop any columns with more than 50% missing rows. Use one
    cell to explore which columns meet that criteria, and another to actually drop
    the columns.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是删除任何缺失行超过 50% 的列。使用一个单元格来探索哪些列符合该标准，另一个单元格实际删除这些列。
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Because we're using a Jupyter notebook to track our thoughts and our code, we're
    relying on the environment (via the IPython kernel) to keep track of changes of
    the state. This frees us up to be freeform, move cells around, run the same code
    multiple times, etc.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们使用 Jupyter notebook 来跟踪我们的想法和代码，我们依赖环境（通过 IPython 内核）来跟踪状态的变化。这使我们可以自由地进行格式调整，移动单元格，重复运行相同的代码等。
- en: 'In general, code in the prototyping mindset should focus on:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，原型思维中的代码应专注于：
- en: Understandability
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可理解性
- en: Markdown cells to describe our observations and assumptions
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于描述我们观察和假设的 Markdown 单元格
- en: Small pieces of code for the actual logic
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实际逻辑的小段代码
- en: Lots of visualizations and counts
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大量的可视化和计数
- en: Minimal abstractions
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最小抽象
- en: Most code shouldn't be in functions (should feel more object-oriented)
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数代码不应该在函数中（应更具面向对象特性）
- en: Let's say we spent another hour exploring the data and writing markdown cells
    that describe the data cleaning we did. We can then switch over to the production
    mindset and make the code more robust.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们花费了另一小时来探索数据和编写描述数据清洗的 Markdown 单元格。然后，我们可以切换到生产思维，使代码更具鲁棒性。
- en: '**Production mindset**'
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**生产思维**'
- en: In the production mindset, we want to focus on writing code that will generalize
    to more situations. In our case, we want our data cleaning code to work for any
    of the data sets from Lending Club (from other time periods). The best way to
    generalize our code is to turn it into a **data pipeline**. A data pipeline is
    designed using principles from [functional programming](https://www.dataquest.io/blog/introduction-functional-programming-python/),
    where data is modified *within* functions and then passed *between* functions.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在生产思维中，我们希望关注编写能适用于更多情况的代码。在我们的例子中，我们希望我们的数据清洗代码适用于来自 Lending Club 的任何数据集（来自其他时间段）。使代码具有通用性的最佳方法是将其转化为**数据管道**。数据管道的设计原则来源于[函数式编程](https://www.dataquest.io/blog/introduction-functional-programming-python/)，数据在函数内被修改，然后在函数之间传递。
- en: 'Here''s a first iteration of this pipeline using a single function to encapsulate
    data cleaning code:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用单个函数封装数据清洗代码的管道的第一次迭代：
- en: '[PRE8]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In the code above, we **abstracted** the code from earlier into a single function.
    The input to this function is a list of filenames and the output is a list of
    DataFrame objects.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码中，我们**将**早期的代码抽象成一个单独的函数。该函数的输入是文件名列表，输出是 DataFrame 对象的列表。
- en: 'In general, the production mindset should focus on:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，生产思维应专注于：
- en: Healthy abstractions
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 健康的抽象
- en: Code should generalize to be compatible with similar data sources
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码应具有通用性，以兼容类似的数据源
- en: Code shouldn't be so general that it becomes cumbersome to understand
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码不应过于泛化，以至于难以理解
- en: pipeline stability
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管道稳定性
- en: Reliability should match how frequently its run (daily? weekly? monthly?)
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可靠性应匹配其运行频率（每天？每周？每月？）
- en: '**Switching between mindsets**'
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**在思维模式之间切换**'
- en: 'Let''s say we tried to run the function for all of the data sets from Lending
    Club and Python returned errors. Some potential sources for errors:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们尝试对Lending Club的所有数据集运行函数，而Python返回了错误。一些潜在的错误来源：
- en: Variance in column names in some of the files
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 某些文件中的列名方差
- en: Variance in columns being dropped because of the 50% missing value threshold
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因50%的缺失值阈值而丢弃的列的方差
- en: Different column types based on pandas type inference for that file
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于pandas类型推断的不同列类型
- en: In those cases, we should actually switch back to our prototype notebook and
    investigate further. When we've determined that we want our pipeline to be more
    flexible and account for specific variations in the data, we can re-incorporate
    that back into the pipeline logic.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些情况下，我们应该实际回到我们的原型笔记本，进一步调查。当我们确定需要使管道更灵活并考虑数据中的特定变化时，我们可以将其重新纳入管道逻辑。
- en: 'Here''s an example where we adapted the function to accommodate for a different
    drop threshold value:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个示例，我们调整了函数以适应不同的丢弃阈值：
- en: '[PRE9]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The default value is still `0.5`, but we can over-ride it to `0.7` if we want.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 默认值仍然是`0.5`，但如果我们需要的话，可以将其覆盖为`0.7`。
- en: 'Here are a few ways to make the pipeline more flexible, in decreasing priority:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些使管道更灵活的方法，按优先级递减：
- en: Use optional, positional, and required arguments
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用可选、位置和必需的参数
- en: Use if / then statements along with Boolean input values within the functions
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在函数中使用if / then语句以及布尔输入值
- en: Use new data structures (dictionaries, lists, etc.) to represent custom actions
    for specific datasets
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用新的数据结构（字典、列表等）来表示特定数据集的自定义操作
- en: This pipeline can scale to all phases of the data science workflow. Here's some
    skeleton code that previews how this looks.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这个管道可以扩展到数据科学工作流的所有阶段。这里有一些骨架代码，可以预览其外观。
- en: '[PRE10]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '**Next steps**'
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**下一步**'
- en: 'If you''re interested in deepening your understanding and practicing further,
    I recommend the following next steps:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有兴趣深入了解并进一步练习，我推荐以下下一步：
- en: Learn how to turn your pipeline into a standalone script that can be run as
    a module or from the command line: [https://docs.python.org/3/library/**main**.html](https://docs.python.org/3/library/__main__.html)
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何将你的管道转换为一个独立的脚本，可以作为模块或从命令行运行：[https://docs.python.org/3/library/**main**.html](https://docs.python.org/3/library/__main__.html)
- en: Learn how to use Luigi to build more complex pipelines that can be run in the
    cloud: [Building Data Pipelines in Python and Luigi](https://marcobonzanini.com/2015/10/24/building-data-pipelines-with-python-and-luigi/)
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何使用Luigi构建更复杂的管道，这些管道可以在云中运行：[Building Data Pipelines in Python and Luigi](https://marcobonzanini.com/2015/10/24/building-data-pipelines-with-python-and-luigi/)
- en: Learn more about data engineering: [Data Engineering Posts on Dataquest](https://www.dataquest.io/blog/tag/data-engineering/)
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解更多关于数据工程的内容：[Data Engineering Posts on Dataquest](https://www.dataquest.io/blog/tag/data-engineering/)
- en: '**Bio: Srini Kadamati** is Director of Content at **[Dataquest.io](https://www.dataquest.io/)**.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**简历：Srini Kadamati** 是**[Dataquest.io](https://www.dataquest.io/)**的内容总监。'
- en: '[Original](https://www.dataquest.io/blog/programming-best-practices-for-data-science/?utm_source=kdnuggets&utm_medium=crosspost&utm_content=text).
    Reposted with permission.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[原始内容](https://www.dataquest.io/blog/programming-best-practices-for-data-science/?utm_source=kdnuggets&utm_medium=crosspost&utm_content=text)。经许可转载。'
- en: '**Related:**'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Swiftapply  – Automatically efficient pandas apply operations](/2018/04/swiftapply-automatically-efficient-pandas-apply-operations.html)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Swiftapply  – 自动高效的pandas apply操作](/2018/04/swiftapply-automatically-efficient-pandas-apply-operations.html)'
- en: '[Data Structures Related to Machine Learning Algorithms](/2018/01/data-structures-related-machine-learning-algorithms.html)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[与机器学习算法相关的数据结构](/2018/01/data-structures-related-machine-learning-algorithms.html)'
- en: '[Introduction to Functional Programming in Python](/2018/02/introduction-functional-programming-python.html)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python中的函数式编程简介](/2018/02/introduction-functional-programming-python.html)'
- en: More On This Topic
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多主题
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[是什么让Python成为初创公司理想的编程语言](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[停止学习数据科学以寻找目标，并通过寻找目标...](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习数据科学统计的顶级资源](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[成功数据科学家的5个特征](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个数据科学家都应该知道的三个R库（即使你使用Python）](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[一个90亿美元的AI失败，探究](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
