- en: Top 6 errors novice machine learning engineers make
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2017/10/top-errors-novice-machine-learning-engineers.html](https://www.kdnuggets.com/2017/10/top-errors-novice-machine-learning-engineers.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png)[comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '**By [Christopher Dossman](https://twitter.com/cdossman?lang=en).**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b72bec5ce6dddc1087da37d651697dc2.png)'
  prefs: []
  type: TYPE_IMG
- en: In machine learning, there are many ways to build a product or solution and
    each way assumes something different. Many times, it’s not obvious how to navigate
    and identify which assumptions are reasonable. People new to machine learning
    make mistakes, which in hindsight will often feel silly. I’ve created a list of
    the top mistakes that novice machine learning engineers make. Hopefully, you can
    learn from these common errors and create more robust solutions that bring real
    value.
  prefs: []
  type: TYPE_NORMAL
- en: Taking the default loss function for granted
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Mean squared error is great! It really is an amazing default to start off with,
    but when it comes to real-world applications this off-the-shelf loss function
    is rarely optimum for the business problem you’re trying to solve for.
  prefs: []
  type: TYPE_NORMAL
- en: Take for example fraud detection. In order to align with business objectives
    what you really want is to penalize false negatives in proportion to the dollar
    amount lost due to fraud. Using mean squared error might give you OK results but
    will never give you state of the art results.
  prefs: []
  type: TYPE_NORMAL
- en: '[**Becoming a Machine Learning Engineer | Step 3: Pick Your Tool**](https://medium.com/towards-data-science/becoming-a-machine-learning-engineer-step-3-pick-your-tool-da1903a2958f)
    Check out this article to learn about the different ML tools at your disposal.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Take Away: **Always build a custom loss function that closely matches your
    solution objectives.'
  prefs: []
  type: TYPE_NORMAL
- en: Using one algorithm/method for all problems
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Many will finish their first tutorial and immediately start using the same algorithm
    that they learned on every use case they can imagine. It’s familiar and they figure
    it will work just as well as any other algorithm. This is a bad assumption and
    will lead to poor results.
  prefs: []
  type: TYPE_NORMAL
- en: Let your data choose your model for you. Once you have preprocessed your data,
    feed it into many different models and see what the results are. You will have
    a good idea of what models work best and what models don’t work so well.
  prefs: []
  type: TYPE_NORMAL
- en: '[**Becoming a Machine Learning Engineer | Step 2: Pick a process**](https://medium.com/towards-data-science/becoming-a-machine-learning-engineer-step-2-pick-a-process-942eef6ba8dd)
    Check out this article and get a handle on your process.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Take Away: ** If you find yourself using the same algorithm over and over
    again it probably means you’re not getting the best results.'
  prefs: []
  type: TYPE_NORMAL
- en: Ignoring outliers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Outliers can be important or completely ignored, just based on context. Take
    for example pollution forecasting. Large spikes in air pollution can occur and
    it is a good idea to look at them and understand why they occurred. In the case
    of outliers caused by some type of sensor error, it is safe to ignore them and
    remove from your data.
  prefs: []
  type: TYPE_NORMAL
- en: From a model perspective, some are more sensitive to outliers than other. Take
    for example Adaboost, it treats those outliers as “hard” cases and puts tremendous
    weights on outliers while decision trees might simple count each outlier as one
    false classification.
  prefs: []
  type: TYPE_NORMAL
- en: '[**Becoming a Machine Learning Engineer | Step 2: Pick a process**](https://medium.com/towards-data-science/becoming-a-machine-learning-engineer-step-2-pick-a-process-942eef6ba8dd)
    Goes over best practices that you can use to avoid this mistake'
  prefs: []
  type: TYPE_NORMAL
- en: '**Take Away: **Always look at your data closely before you start your work
    and determine if outliers should be ignored or looked at more closely'
  prefs: []
  type: TYPE_NORMAL
- en: Not properly dealing with cyclical features
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Hours of the day, days of the week, months in a year, and wind direction are
    all examples of features that are cyclical. Many new machine learning engineers
    don’t think to convert these features into a representation that can preserve
    information such as hour 23 and hour 0 being close to each other and not far.
  prefs: []
  type: TYPE_NORMAL
- en: Keeping with the hour example, the best way to handle this is to calculate the
    sin and cos component so that you represent your cyclical feature as (x,y) coordinates
    of a circle. In this representation hour, 23 and hour 0 are right next to each
    other numerically, just as they should be.
  prefs: []
  type: TYPE_NORMAL
- en: '**Many people have asked for code example:** [**Here it is**](https://gist.github.com/anonymous/7ce6274c630dabd70960c6d7fdd6c580)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Take Away: **If you have cyclical features and you are not converting them
    you are giving your model garbage data to start with.'
  prefs: []
  type: TYPE_NORMAL
- en: L1/L2 Regularization without standardization
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: L1 and L2 regularization penalizes large coefficients and is a common way to
    regularize linear or logistic regression; however, many machine learning engineers
    are not aware that is important to standardize features before applying regularization.
  prefs: []
  type: TYPE_NORMAL
- en: Imagine you have a linear regression model with a transactions as a feature.
    Standardize all the features and put them on equal footing so regularization is
    the same all over your features. Don’t have some features in cents and other features
    in dollars
  prefs: []
  type: TYPE_NORMAL
- en: '**Take Away:** Regularization is great but can cause headaches if you don’t
    have standardized features'
  prefs: []
  type: TYPE_NORMAL
- en: Interpreting coefficients from linear or logistic regression as feature importance
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Linear regressors often return p-values for each coefficient. These coefficients
    many time cause novice machine learning engineers to believe that for linear models,
    the bigger the value of the coefficient, the more important the feature is. This
    is hardly ever true as the scale of the variable changes the absolute value of
    the coefficient. If the features are co-linear, coefficients can shift from one
    feature to the other. The more features the data set has the more likely the features
    are co-linear and the less reliable simple interpretations of feature importance
    are.
  prefs: []
  type: TYPE_NORMAL
- en: '**Take Away: ** Understanding what features are most essential to a result
    is important, but don’t assume that you can look at the coefficients. They often
    don’t tell the whole story.'
  prefs: []
  type: TYPE_NORMAL
- en: Doing a few projects and getting good results can feel like winning a million
    bucks. You worked hard and you have the results to prove that you did a good job,
    but just like with any other industry the devil is in the details and even fancy
    plots can hide bias and error. This list is not meant to be exhaustive, but merely
    to cause the reader to think about all the small issues that might be hiding in
    your solution. In order to achieve good results, it is important to follow your
    process and always double check that you are not making some common mistakes.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you found this article useful you will get a lot out of my [**Becoming a
    machine learning engineer | Step 2: Picking a Process**](https://medium.com/towards-data-science/becoming-a-machine-learning-engineer-step-2-pick-a-process-942eef6ba8dd) article.
    It helps you iron out a process that will allow you to catch more simple mistakes
    and get better results.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://medium.com/towards-data-science/top-6-errors-novice-machine-learning-engineers-make-e82273d394db).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Chris Dossman](https://twitter.com/cdossman?lang=en)** is a Machine
    learning researcher and future space miner.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[The 5 Common Mistakes That Lead to Bad Data Visualization](/2017/10/5-common-mistakes-bad-data-visualization.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top mistakes data scientists make when dealing with business people](/2017/04/top-mistakes-data-scientists-make-business.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Removing Outliers Using Standard Deviation in Python](/2017/02/removing-outliers-standard-deviation-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Type I and Type II Errors: What''s the Difference?](https://www.kdnuggets.com/2022/08/type-type-ii-errors-difference.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Novice to Ninja: Why Your Python Skills Matter in Data Science](https://www.kdnuggets.com/novice-to-ninja-why-your-python-skills-matter-in-data-science)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Avoid These 5 Common Mistakes Every Novice in AI Makes](https://www.kdnuggets.com/avoid-these-5-common-mistakes-every-novice-in-ai-makes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[We Don''t Need Data Scientists, We Need Data Engineers](https://www.kdnuggets.com/2021/02/dont-need-data-scientists-need-data-engineers.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to land an ML job: Advice from engineers at Meta, Google Brain, and SAP](https://www.kdnuggets.com/2022/08/corise-land-ml-job-advice-engineers-meta-google-brain-sap.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[11 Questions About Data Engineers: What''s the profession about, and…](https://www.kdnuggets.com/2022/10/11-questions-data-engineers-profession-heading.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
