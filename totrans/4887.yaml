- en: A Simple Starter Guide to Build a Neural Network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2018/02/simple-starter-guide-build-neural-network.html](https://www.kdnuggets.com/2018/02/simple-starter-guide-build-neural-network.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '**By [Jeff Hu](https://www.linkedin.com/in/yaochiehhu/), Machine Learning Enthusiast**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Header iamge](../Images/fc4c11c0a8e72faaf2ca753224789de7.png)'
  prefs: []
  type: TYPE_IMG
- en: Image retrieved from [https://media.scmagazine.com](https://media.scmagazine.com/)
  prefs: []
  type: TYPE_NORMAL
- en: You will be able to program and build a vanilla [**Feedforward Neural Network**](https://brilliant.org/wiki/feedforward-neural-networks/) (FNN)
    starting today via [PyTorch](http://pytorch.org/). Here is the python jupyter
    codebase for the FNN: [https://github.com/yhuag/neural-network-lab](https://github.com/yhuag/neural-network-lab)
  prefs: []
  type: TYPE_NORMAL
- en: This guide serves as a basic hands-on work to lead you through building a neural
    network from scratch. Most of the mathematical concepts and scientific decisions
    are left out. You are free to research more on that part.
  prefs: []
  type: TYPE_NORMAL
- en: Getting Started
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '1\. Please make sure you have Python and PyTorch installed in your machine:'
  prefs: []
  type: TYPE_NORMAL
- en: Python 3.6 ([installation](https://www.python.org/downloads/))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PyTorch ([installation](http://pytorch.org/))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '2\. Check the correctness of Python installations by the commands at console:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The output should be **Python 3.6.3** or later version
  prefs: []
  type: TYPE_NORMAL
- en: '3\. Open a repository(folder) and create your first Neural Network file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Start Writing Codes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: All the following codes should be written in the **fnn.py** file
  prefs: []
  type: TYPE_NORMAL
- en: '**Import PyTorch**'
  prefs: []
  type: TYPE_NORMAL
- en: It will load PyTorch into the codes. Great! A well beginning is half done.
  prefs: []
  type: TYPE_NORMAL
- en: '**Initialize Hyper-parameters**'
  prefs: []
  type: TYPE_NORMAL
- en: Hyper-parameters are the powerful arguments that are set up upfront and will
    not be updated along with the training of the neural network.
  prefs: []
  type: TYPE_NORMAL
- en: '**Download MNIST Dataset**'
  prefs: []
  type: TYPE_NORMAL
- en: MNIST is a huge database with tons of handwritten digits (i.e. 0 to 9) aims
    for the usage of image processing.
  prefs: []
  type: TYPE_NORMAL
- en: '**Load the Dataset**'
  prefs: []
  type: TYPE_NORMAL
- en: After downloading the MNIST dataset, we load them into our codes.
  prefs: []
  type: TYPE_NORMAL
- en: '***Note: ****We shuffle the loading process of train_dataset to make the learning
    process independent of data order, but the order of test_loader remains to examine
    whether we can handle unspecified bias order of inputs.*'
  prefs: []
  type: TYPE_NORMAL
- en: Build the Feedforward Neural Network
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Now we have our datasets ready. We will start building the neural network.
    The conceptual illustration can be viewed as below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5aa5e0ecf1e76a49324c6da5ec93a9c9.png)'
  prefs: []
  type: TYPE_IMG
- en: FNN image retrieved from [http://web.utk.edu/](http://web.utk.edu/)
  prefs: []
  type: TYPE_NORMAL
- en: '**Feedforward Neural Network Model Structure**'
  prefs: []
  type: TYPE_NORMAL
- en: The FNN includes two fully-connected layers (i.e. fc1 & fc2) and a non-linear
    ReLU layer in between. Normally we call this structure **1-hidden layer FNN**,
    without counting the output layer (fc2) in.
  prefs: []
  type: TYPE_NORMAL
- en: By running the forward pass, the input images (x) can go through the neural
    network and generate a output (out) demonstrating how are the likabilities it
    belongs to each of the 10 classes. *For example, a cat image can have 0.8 likability
    to a dog class and a 0.3 likability to a airplane class.*
  prefs: []
  type: TYPE_NORMAL
- en: '**Instantiate the FNN**'
  prefs: []
  type: TYPE_NORMAL
- en: We now create a real FNN based on our structure.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Enable GPU**'
  prefs: []
  type: TYPE_NORMAL
- en: '***Note:**** You could enable this line to run the codes on GPU*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Choose the Loss Function and Optimizer**'
  prefs: []
  type: TYPE_NORMAL
- en: Loss function (**criterion**) decides how the output can be compared to a class,
    which determines how good or bad the neural network performs. And the **optimizer** chooses
    a way to update the weight in order to converge to find the best weights in this
    neural network.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Training the FNN Model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This process might takes around 3 to 5 minutes depending on your machine. The
    detailed explanations are listed as comments (#) in the following codes.
  prefs: []
  type: TYPE_NORMAL
- en: Testing the FNN Model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Similar to training the neural network, we also need to load batches of test
    images and collect the outputs. The differences are that:'
  prefs: []
  type: TYPE_NORMAL
- en: No loss & weights calculation
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: No wights update
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Has correct prediction calculation
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Save the trained FNN Model for future use**'
  prefs: []
  type: TYPE_NORMAL
- en: We save the trained model as a [pickle](https://wiki.python.org/moin/UsingPickle) that
    can be loaded and used later.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Congrats. You have done building your first Feedforward Neural Network!
  prefs: []
  type: TYPE_NORMAL
- en: What’s Next
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Save and close the file. Start running the file at the console:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'You will see the training process going like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1253e956ebdc7cdfcde3b4a47fa3af04.png)'
  prefs: []
  type: TYPE_IMG
- en: Thanks for your time and hope you enjoy the tutorial. All the codes can be found [here](https://github.com/yhuag/neural-network-lab/blob/master/Feedforward%20Neural%20Network.ipynb)!
  prefs: []
  type: TYPE_NORMAL
- en: '**Credit: The codes are heavily and thankfully based on **[**yunjey’s**](https://github.com/yunjey)** great**
    [**codebase**](https://github.com/yunjey/pytorch-tutorial/blob/master/tutorials/02-intermediate/generative_adversarial_network/main.py)**.
    ❤**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Jeff Hu](https://www.linkedin.com/in/yaochiehhu/)** (**[Github](https://yhuag.github.io/)**)
    is a Taiwanese machine learning enthusiast and blockchain developer. He focuses
    on Natural Language Processing and Deep Learning at work and is a magician and
    poet at leisure.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/a-simple-starter-guide-to-build-a-neural-network-3c2cf07b8d7c).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Today I Built a Neural Network During My Lunch Break with Keras](/2017/12/today-built-neural-network-during-lunch-break-keras.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PyTorch or TensorFlow?](/2017/08/pytorch-tensorflow.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering Deep Learning with Keras](/2017/10/seven-steps-deep-learning-keras.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
