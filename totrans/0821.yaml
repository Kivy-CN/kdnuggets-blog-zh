- en: Data Cleaning with Pandas
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/data-cleaning-with-pandas](https://www.kdnuggets.com/data-cleaning-with-pandas)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Data Cleaning with Pandas](../Images/4d7ef9a022460c8e9009883084da54ff.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: If you are into Data Science, then data cleaning might sound like a familiar
    term to you. If not, let me explain that to you. Our data often comes from multiple
    resources and is not clean. It may contain missing values, duplicates, wrong or
    undesired formats, etc.  Running your experiments on this messy data leads to
    incorrect results. Therefore, it is necessary to prepare your data before it is
    fed to your model. This preparation of the data by identifying and resolving the
    potential errors, inaccuracies, and inconsistencies is termed as **Data Cleaning**.
  prefs: []
  type: TYPE_NORMAL
- en: In this tutorial, I will walk you through the process of cleaning the data using
    Pandas.
  prefs: []
  type: TYPE_NORMAL
- en: Dataset
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'I will be working with the famous [Iris](https://archive.ics.uci.edu/dataset/53/iris)
    dataset. The Iris dataset contains measurements of four features of three species
    of Iris flowers: sepal length, sepal width, petal length, and petal width.  We
    will be using the following libraries:'
  prefs: []
  type: TYPE_NORMAL
- en: '***   **Pandas:** Powerful library for data manipulation and analysis'
  prefs: []
  type: TYPE_NORMAL
- en: '**Scikit-learn:** Provides tools for data preprocessing and machine learning'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steps for Data Cleaning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1\. Loading the Dataset
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Load the Iris dataset using Pandas'' **read_csv()** function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **id** | **sepal_length** | **sepal_width** | **petal_length** | **petal_width**
    | **species** |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | 5.1 | 3.5 | 1.4 | 0.2 | Iris-setosa |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | 4.9 | 3.0 | 1.4 | 0.2 | Iris-setosa |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | 4.7 | 3.2 | 1.3 | 0.2 | Iris-setosa |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | 4.6 | 3.1 | 1.5 | 0.2 | Iris-setosa |'
  prefs: []
  type: TYPE_TB
- en: '| 5 | 5.0 | 3.6 | 1.4 | 0.2 | Iris-setosa |'
  prefs: []
  type: TYPE_TB
- en: The **header=0** parameter indicates that the first row of the CSV file contains
    the column names (header).
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Explore the dataset
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To get insights about our dataset, we will print some basic information using
    the built-in functions in pandas
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![Data Cleaning with Pandas](../Images/2358828d44ba39e3f759d6dc9986b6e8.png)'
  prefs: []
  type: TYPE_IMG
- en: Output for iris_data.describe()
  prefs: []
  type: TYPE_NORMAL
- en: The **info() function** is useful to understand the overall structure of the
    data frame, the number of non-null values in each column, and the memory usage.
    While the summary statistics provide an overview of numerical features in your
    dataset.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Checking Class Distribution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is an important step in understanding how the classes are distributed in
    categorical columns, which is an important task for classification. You can perform
    this step using the value_counts() function in pandas.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Our results show that the dataset is balanced with an equal number of representations
    of each species. This sets the base for a fair evaluation and comparison across
    all 3 classes.
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Removing Missing Values
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Since it is evident from the **info()** method that we have 5 columns with
    no missing values, we will skip this step. But if you encounter any missing values,
    use the following command to handle them:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 5\. Removing Duplicates
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Duplicates can distort our analysis so we remove them from our dataset. We
    will first check their existence using the below-mentioned command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: We do not have any duplicates for this dataset. Nonetheless, the duplicates
    can be removed via the **drop_duplicates()** function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 6\. One-Hot Encoding
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For categorical analysis, we will perform one-hot encoding on the species column.
    This step is performed due to the tendency of Machine Learning algorithms to work
    better with numerical data. The one-hot encoding process transforms categorical
    variables into a binary (0 or 1) format.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![Data Cleaning with Pandas](../Images/476d06368bc9b14541a405819bc3d427.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 7\. Normalization of Float Value Columns
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Normalization is the process of scaling numerical features to have a mean of
    0 and a standard deviation of 1\. This process is done to ensure that the features
    contribute equally to the analysis. We will normalize the float value columns
    for consistent scaling.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '![Data Cleaning with Pandas](../Images/69e35ac2ad4d8fff336dc543bc02288c.png)'
  prefs: []
  type: TYPE_IMG
- en: Output for iris_data.describe() after normalization
  prefs: []
  type: TYPE_NORMAL
- en: 8\. Save the cleaned dataset
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Save the cleaned dataset to the new CSV file.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Wrapping Up
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Congratulations! You have successfully cleaned your first dataset using pandas.
    You may encounter additional challenges while dealing with complex datasets. However,
    the fundamental techniques mentioned here will help you get started and prepare
    your data for analysis.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Kanwal Mehreen](https://www.linkedin.com/in/kanwal-mehreen1)** is an aspiring
    software developer with a keen interest in data science and applications of AI
    in medicine. Kanwal was selected as the Google Generation Scholar 2022 for the
    APAC region. Kanwal loves to share technical knowledge by writing articles on
    trending topics, and is passionate about improving the representation of women
    in tech industry.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[7 Steps to Mastering Data Cleaning with Python and Pandas](https://www.kdnuggets.com/7-steps-to-mastering-data-cleaning-with-python-and-pandas)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Cleaning and Preprocessing Text Data in Pandas for NLP Tasks](https://www.kdnuggets.com/cleaning-and-preprocessing-text-data-in-pandas-for-nlp-tasks)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Collection of Guides on Mastering SQL, Python, Data Cleaning, Data…](https://www.kdnuggets.com/collection-of-guides-on-mastering-sql-python-data-cleaning-data-wrangling-and-exploratory-data-analysis)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Importance of Data Cleaning in Data Science](https://www.kdnuggets.com/2023/08/importance-data-cleaning-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Learn Data Cleaning and Preprocessing for Data Science with This Free eBook](https://www.kdnuggets.com/2023/08/learn-data-cleaning-preprocessing-data-science-free-ebook.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data Cleaning in SQL: How To Prepare Messy Data for Analysis](https://www.kdnuggets.com/data-cleaning-in-sql-how-to-prepare-messy-data-for-analysis)**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
