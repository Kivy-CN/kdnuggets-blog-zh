- en: Building a REST API with Tensorflow Serving (Part 1)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/07/building-rest-api-tensorflow-serving-part-1.html](https://www.kdnuggets.com/2020/07/building-rest-api-tensorflow-serving-part-1.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Guillermo Gomez](https://www.linkedin.com/in/mlgxmez/), Data Scientist
    & Machine Learning Engineer**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../Images/db70da63fa526846f86b9986f26b5dbc.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
- en: What is Tensorflow Serving?
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: One of the features that I personally think is undervalued from Tensorflow is
    the capability of serving Tensorflow models. At the moment of writing this post,
    the API that helps you do that is named Tensorflow Serving, and is part of the
    Tensorflow Extended ecosystem, or TFX for short.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: During the first releases of Tensorflow Serving, I found the documentation somehow
    daunting. And there were many concepts that a data scientist is not very used
    to work with: *Servables, sources, loaders, managers…* All these elements are
    part of the Tensorflow Serving architecture. More details on it, [here](https://github.com/tensorflow/serving/blob/master/tensorflow_serving/g3doc/architecture.md).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: So, as a gentle introduction, I will show you **how you can build a REST API
    with Tensorflow Serving**. From saving a Tensorflow object (this is what we call
    a *servable*) until testing the API endpoint. The first part will explain how
    to create and save Tensorflow objects ready to be put into production.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: The meaning of servables
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Functions, embeddings or saved models are some of the objects that can be used
    as servables. But how do we define those servables in Tensorflow?
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: 'Well, this is up to you but they must be able to be saved in what’s is called
    the **SavedModel format**. This format keeps all the components of a Tensorflow
    object in the same state once we load this object in a new environment. What are
    these components? The relevant ones are: Weights, graph, additional assets, etc.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: 'The module to be called to save Tensorflow objects is `tf.saved_model`. And
    as we’ll see shortly it’s simple to use. For now, let’s see how we can generate
    two types of servables:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Tensorflow functions
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keras models
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TensorFlow function as servable
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Tensorflow functions are saved as valid servables if are defined in this way:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Function definition inside a class
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The parent class has to be `tf.Module`
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `@tf.function` decorator somehow **translates the function definition into
    a Tensorflow graph**
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `input_signature` argument defines the type and shape of tensors that are
    accepted to be passed in the function
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In this case we specify tensors with two dimensions, the second one be fixed
    to have three elements while the type is going to be `float32`. Another example
    of a Tensorflow function is:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Notice that `input_signature` argument is not necessary but always is good to
    include some safety tests when functions like this go into production.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: 'Later, we create an instance of the class and we save them:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The first argument of `tf.saved_model.save` points to the instance object of
    the class, whereas the second argument is the path of you local filesystem where
    the model is going to be saved.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: Keras model as servable
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can follow a similar procedure for saving Keras models. This example focuses
    on a pretrained image classification model, loaded with TensorFlow Hub. In addition,
    we are going to build a custom class around it to preprocess input images.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The class inherits from `tf.keras.Model`, and there are few things to discuss
    about it:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: The input to the model is a string of bytes, which come in a JSON file, with
    a specific set of key|value pairs. More on that in the second part of the tutorial.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: tf.reshape is the first function in the preprocessing stage because images are
    put into an array in the JSON file. Since we impose restrictions in the input
    with `@tf.function` it is required to do this kind of transformation.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The attribute `labels` store the image labels of *ImageNet* (available [here](https://storage.googleapis.com/download.tensorflow.org/data/ImageNetLabels.txt)).
    We want the model to output not the label index of the output layer of the model
    but the label with text format. The reason why it is defined in this way is explained
    below
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'As per usual we save the model following the same procedure but with a little
    addition:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In order to store extra components to the SavedModel object, we have to define
    an asset. We do so with `tf.saved_model.Asset`, and I call this function outside
    the class definition to make it more explicit. It will probably work in the same
    way if we do that in the class definition. **Notice here, we have to save the
    asset as an attribute of the class instance before saving the model.**
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: Further details
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: These are the folders that have been generated in the local filesystem when
    we saved the custom Keras model.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/804c6f74f982c1da6a5b3ec4440cd907.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
- en: 'The files generated are:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: the graph of the function or model, saved in a Protobuf file with extension `.pb`
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the weights of the model or any TensorFlow Variable used in the servable, saved
    in the `variables` folder
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: extra components are saved in the `assets` folder but it is empty in our examples
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'There are some questions that may arise when you build your own functions or
    models:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '**What’s the reasoning behind the choice of parent classes?** Attaching `tf.Module` class
    to a `tf.function` allows the latter to be saved with `tf.saved_model`. The same
    goes for the `tf.keras.Model`. You can find more info [here](https://www.tensorflow.org/guide/saved_model#reusing_savedmodels_in_python).'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Why you add `/1` in the model’s path?** Servables must have an ID indicating
    the version of the model we are running inside the container. It’s helpful to
    keep track of multiple versions of your model when you are monitoring their metrics.
    You can a more in-depth explanation in the following [link](https://stackoverflow.com/a/45552938).'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This is all for now. Thanks for reading!
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Guillermo Gomez](https://www.linkedin.com/in/mlgxmez/)** builds machine
    learning-based products in the public infrastructure and services industry. His
    website where more tutorials can be found: [http://thelongrun.blog](http://thelongrun.blog)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：[Guillermo Gomez](https://www.linkedin.com/in/mlgxmez/)** 在公共基础设施和服务行业中构建基于机器学习的产品。他的网站上可以找到更多教程：[http://thelongrun.blog](http://thelongrun.blog)'
- en: '[Original](https://thelongrun.blog/2020/01/12/rest-api-tensorflow-serving-pt1/).
    Reposted with permission.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://thelongrun.blog/2020/01/12/rest-api-tensorflow-serving-pt1/)。经许可转载。'
- en: '**Related:**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关内容：**'
- en: '[Build PyTorch Models Easily Using torchlayers](/2020/04/pytorch-models-torchlayers.html)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 torchlayers 轻松构建 PyTorch 模型](/2020/04/pytorch-models-torchlayers.html)'
- en: '[Optimize Response Time of your Machine Learning API In Production](/2020/05/optimize-response-time-machine-learning-api-production.html)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[优化生产环境中机器学习 API 的响应时间](/2020/05/optimize-response-time-machine-learning-api-production.html)'
- en: '[Getting Started with TensorFlow 2](/2020/07/getting-started-tensorflow2.html)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TensorFlow 2 入门](/2020/07/getting-started-tensorflow2.html)'
- en: '* * *'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT'
- en: '* * *'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Top 7 Model Deployment and Serving Tools](https://www.kdnuggets.com/top-7-model-deployment-and-serving-tools)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[排名前7的模型部署和服务工具](https://www.kdnuggets.com/top-7-model-deployment-and-serving-tools)'
- en: '[Building and Training Your First Neural Network with TensorFlow and Keras](https://www.kdnuggets.com/2023/05/building-training-first-neural-network-tensorflow-keras.html)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 TensorFlow 和 Keras 构建和训练你的第一个神经网络](https://www.kdnuggets.com/2023/05/building-training-first-neural-network-tensorflow-keras.html)'
- en: '[Building a Visual Search Engine - Part 1: Data Exploration](https://www.kdnuggets.com/2022/02/building-visual-search-engine-part-1.html)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[构建视觉搜索引擎 - 第1部分：数据探索](https://www.kdnuggets.com/2022/02/building-visual-search-engine-part-1.html)'
- en: '[Building a Visual Search Engine - Part 2: The Search Engine](https://www.kdnuggets.com/2022/02/building-visual-search-engine-part-2.html)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[构建视觉搜索引擎 - 第2部分：搜索引擎](https://www.kdnuggets.com/2022/02/building-visual-search-engine-part-2.html)'
- en: '[OpenAI’s Whisper API for Transcription and Translation](https://www.kdnuggets.com/2023/06/openai-whisper-api-transcription-translation.html)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[OpenAI 的 Whisper API 用于转录和翻译](https://www.kdnuggets.com/2023/06/openai-whisper-api-transcription-translation.html)'
- en: '[Meet Gorilla: UC Berkeley and Microsoft’s API-Augmented LLM…](https://www.kdnuggets.com/2023/06/meet-gorilla-uc-berkeley-microsoft-apiaugmented-llm-outperforms-gpt4-chatgpt-claude.html)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[认识 Gorilla：UC 伯克利和微软的 API 增强型 LLM…](https://www.kdnuggets.com/2023/06/meet-gorilla-uc-berkeley-microsoft-apiaugmented-llm-outperforms-gpt4-chatgpt-claude.html)'
