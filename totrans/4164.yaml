- en: The Easiest Way to Make Beautiful Interactive Visualizations With Pandas
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Pandas 制作美丽的交互式可视化的最简单方法
- en: 原文：[https://www.kdnuggets.com/2021/12/easiest-way-make-beautiful-interactive-visualizations-pandas.html](https://www.kdnuggets.com/2021/12/easiest-way-make-beautiful-interactive-visualizations-pandas.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/12/easiest-way-make-beautiful-interactive-visualizations-pandas.html](https://www.kdnuggets.com/2021/12/easiest-way-make-beautiful-interactive-visualizations-pandas.html)
- en: '**By [Frank Andrade](https://frank-andrade.medium.com/), Data Scientist and
    [Python Instructor](https://bit.ly/30A2X3C)**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Frank Andrade](https://frank-andrade.medium.com/) 数据科学家和 [Python 教师](https://bit.ly/30A2X3C)**'
- en: '![The Easiest Way to Make Beautiful Interactive Visualizations With Pandas](../Images/92a35e18a664bd94794bebbed34a9d4b.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Pandas 制作美丽的交互式可视化的最简单方法](../Images/92a35e18a664bd94794bebbed34a9d4b.png)'
- en: Photo by [Jerry Zhang](https://unsplash.com/@z734923105?utm_source=medium&utm_medium=referral) on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Jerry Zhang](https://unsplash.com/@z734923105?utm_source=medium&utm_medium=referral)
    拍摄，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - 快速进入网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - 支持你的组织进行
    IT 管理'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: If you’ve been following my [data visualization guides](https://frank-andrade.medium.com/list/data-visualization-in-python-7aea0e3f93ca),
    you probably know that I like creating nice-looking and readable visualizations
    in Python without getting too technical and wasting a lot of time.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你一直关注我的[data visualization guides](https://frank-andrade.medium.com/list/data-visualization-in-python-7aea0e3f93ca)，你可能知道我喜欢在
    Python 中创建既美观又易读的可视化，而不需要过于技术化或浪费大量时间。
- en: Interactive visualizations are no exception, so I’ve been searching for friendly
    libraries in Python for quite some time. There are many libraries out there that
    do the job, but when it comes to working along with Pandas, things get messy.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 交互式可视化也不例外，因此我已经寻找了一段时间友好的 Python 库。虽然有许多库可以完成这个工作，但当涉及到与 Pandas 配合使用时，情况变得复杂。
- en: Fortunately, there’s an easy way to create interactive visualizations directly
    from Pandas, and we’ll see how it works in detail in this guide.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，现在有一种简单的方法可以直接从 Pandas 创建交互式可视化，我们将在本指南中详细了解其工作原理。
- en: First things first
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 首先
- en: Install the libraries
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装库
- en: To easily create interactive visualizations, we need to install Cufflinks. This
    is a library that connects Pandas with Plotly, so we can create visualizations
    directly from Pandas (in the past you had to learn workarounds to make them work
    together, but now it’s simpler)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要轻松创建交互式可视化，我们需要安装 Cufflinks。这个库将 Pandas 与 Plotly 连接在一起，因此我们可以直接从 Pandas 创建可视化（以前你需要学习解决方法才能让它们一起工作，但现在更简单了）。
- en: 'First, make sure you install Pandas and Plotly running the following commands
    on the terminal:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，确保你通过终端运行以下命令来安装 Pandas 和 Plotly：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note that you can also use conda to install Plotly`conda install -c plotly`.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，你也可以使用 conda 安装 Plotly`conda install -c plotly`。
- en: 'Once you have Plotly installed, run the following commands to install Cufflinks:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Plotly 后，运行以下命令来安装 Cufflinks：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Import the libraries
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入库
- en: 'To start working, import the following libraries:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 开始工作之前，导入以下库：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In this case, I’m using the `‘ggplot’` theme, but feel free to choose any theme
    you want. Run the command `cf.getThemes()` to get all the themes available.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我使用了`‘ggplot’`主题，但可以随意选择任何你喜欢的主题。运行命令`cf.getThemes()`获取所有可用的主题。
- en: To make interactive visualizations with Pandas in the following sections, we
    only need to use the syntax`dataframe.iplot()`.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要在接下来的部分中使用 Pandas 制作交互式可视化，我们只需要使用语法`dataframe.iplot()`。
- en: The data
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据
- en: For this guide, we’ll use a population dataframe. First, download the CSV file
    available on [Google Drive](https://drive.google.com/file/d/1QpCcE4U8NIhznbqf0kdeO2ITKPEs9OSm/view?usp=sharing) or [Github](https://github.com/ifrankandrade/data-visualization/tree/main/datasets/population),
    move the file where your Python script is located, and then read it in a Pandas
    dataframe as shown below.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在本指南中，我们将使用一个人口数据框。首先，从[Google Drive](https://drive.google.com/file/d/1QpCcE4U8NIhznbqf0kdeO2ITKPEs9OSm/view?usp=sharing)或[Github](https://github.com/ifrankandrade/data-visualization/tree/main/datasets/population)下载CSV文件，将文件移动到你的
    Python 脚本所在的位置，然后如下面所示在 Pandas 数据框中读取它。
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The dataframe contains the population throughout the years for most countries
    around the world and looks like this:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框包含了世界上大多数国家多年来的人口数据，长这样：
- en: '![The Easiest Way to Make Beautiful Interactive Visualizations With Pandas](../Images/66516d5a70a2fd8c78da9f79d407574f.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![用 Pandas 制作美丽交互式可视化的最简单方法](../Images/66516d5a70a2fd8c78da9f79d407574f.png)'
- en: Image by author
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: This dataframe is almost ready for plotting, we just have to drop null values,
    reshape it and then select a couple of countries to test our interactive plots.
    The code shown below does all of this.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数据框几乎已经准备好绘制，我们只需要丢弃空值，重新塑形，然后选择几个国家来测试我们的交互式图表。下面的代码完成了这一切。
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now the dataframe look like the picture below and is ready for plotting.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在数据框看起来像下面的图片，已经准备好绘制了。
- en: '![The Easiest Way to Make Beautiful Interactive Visualizations With Pandas](../Images/c8f40adc1ec4f5eff95da4c7f26a9622.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![用 Pandas 制作美丽交互式可视化的最简单方法](../Images/c8f40adc1ec4f5eff95da4c7f26a9622.png)'
- en: Image by author
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: If you’d like to know how a data scientist collects real-world data like this
    “population_total.csv”, [check this guide I made](https://betterprogramming.pub/how-to-use-scrapy-to-build-a-dataset-for-your-data-science-project-8f04af3548c6).
    (you won’t always have a Kaggle dataset available for a data science project)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解数据科学家如何收集像“population_total.csv”这样的真实世界数据，*请查看我写的这个指南*（[查看这个指南](https://betterprogramming.pub/how-to-use-scrapy-to-build-a-dataset-for-your-data-science-project-8f04af3548c6)）。*（你不一定总是会有
    Kaggle 数据集用于数据科学项目）*
- en: Now let’s start making interactive visualization!
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们开始制作交互式可视化吧！
- en: Lineplot
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 线形图
- en: Let’s make a lineplot to compare how much the population has grown from 1955
    to 2020 for the 5 countries selected.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们制作一个线形图，以比较1955年到2020年这5个国家的人口增长情况。
- en: As mentioned before, we will use the syntax `df_population.iplot(kind='name_of_plot')` to
    make plots as shown below.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们将使用`df_population.iplot(kind='name_of_plot')`语法来制作下图所示的图表。
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![The Easiest Way to Make Beautiful Interactive Visualizations With Pandas](../Images/4cf4d93a41d01ffa59c4070545952aa4.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![用 Pandas 制作美丽交互式可视化的最简单方法](../Images/4cf4d93a41d01ffa59c4070545952aa4.png)'
- en: Image by author
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: At first glance, it’s easy to see that the population in India has grown faster
    than the other countries.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 一眼看去，可以很容易看出印度的人口增长速度比其他国家快。
- en: Barplot
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 条形图
- en: We can make a single barplot on barplots grouped by categories. Let’s have a
    look.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以制作一个单独的条形图来展示按类别分组的条形图。我们来看看。
- en: Single Barplot
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 单个条形图
- en: Let’s create a barplot that shows the population of each country by the year
    2020\. To do so, first, we select the year 2020 from the index and then transpose
    rows with columns to get the year in the column. We’ll name this new dataframe `df_population_2020` (we’ll
    use this dataframe again when plotting piecharts)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个条形图，展示每个国家到2020年的总人口。为此，首先，我们从索引中选择2020年，然后将行与列转置，以便将年份放入列中。我们将这个新的数据框命名为`df_population_2020`（我们在绘制饼图时还会用到这个数据框）
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now we can plot this new dataframe with `.iplot()`. In this case, I’m going
    to set the bar color to light-green using the `color` argument.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以用`.iplot()`来绘制这个新的数据框。在这种情况下，我将使用`color`参数将条形图颜色设置为浅绿色。
- en: '[PRE7]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![The Easiest Way to Make Beautiful Interactive Visualizations With Pandas](../Images/ea171837b7e5ab08fbb6219a84084116.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![用 Pandas 制作美丽交互式可视化的最简单方法](../Images/ea171837b7e5ab08fbb6219a84084116.png)'
- en: Image by author
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Barplot grouped by “n” variables
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 按“n”变量分组的条形图
- en: Now let’s see the evolution of the population at the beginning of each decade.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看每个十年初的人口变化。
- en: '[PRE8]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![The Easiest Way to Make Beautiful Interactive Visualizations With Pandas](../Images/1b5a78575876458ee6b69fecd7fbb53a.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![用 Pandas 制作美丽交互式可视化的最简单方法](../Images/1b5a78575876458ee6b69fecd7fbb53a.png)'
- en: Image by author
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Naturally, all of them increased their population throughout the years, but
    some did it at a faster rate.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 自然，所有国家的总人口都在这些年中增长了，但有些国家的增长速度更快。
- en: Boxplot
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 箱形图
- en: Boxplots are useful when we want to see the distribution of the data. The boxplot
    will reveal the minimum value, first quartile (Q1), median, third quartile (Q3),
    and maximum value. The easiest way to see those values is by creating an interactive
    visualization.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 箱型图在我们想查看数据分布时非常有用。箱型图将揭示最小值、第一个四分位数（Q1）、中位数、第三个四分位数（Q3）和最大值。查看这些值的最简单方法是创建互动可视化。
- en: Let’s see the population distribution of the USA.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看美国的人口分布。
- en: '[PRE9]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![The Easiest Way to Make Beautiful Interactive Visualizations With Pandas](../Images/0525777f50ea01220867f042673cb1d3.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![用 Pandas 制作美丽互动可视化的最简单方法](../Images/0525777f50ea01220867f042673cb1d3.png)'
- en: Image by author
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Let’s say now we want to get the same distribution but for all the selected
    countries.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们现在想获取所有选定国家的相同分布。
- en: '[PRE10]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![The Easiest Way to Make Beautiful Interactive Visualizations With Pandas](../Images/3792cedd09244d5e8fe4352e0429f69b.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![用 Pandas 制作美丽互动可视化的最简单方法](../Images/3792cedd09244d5e8fe4352e0429f69b.png)'
- en: Image by author
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: As we can see, we can also filter out any country by clicking on the legends
    on the right.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，我们还可以通过点击右侧的图例来过滤任何国家。
- en: Histogram
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 直方图
- en: A histogram represents the distribution of numerical data. Let’s see the population
    distribution of the USA and Indonesia.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 直方图表示数值数据的分布。让我们看看美国和印度尼西亚的人口分布。
- en: '[PRE11]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![The Easiest Way to Make Beautiful Interactive Visualizations With Pandas](../Images/48756348b485a7d7dd63129b02ecc675.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![用 Pandas 制作美丽互动可视化的最简单方法](../Images/48756348b485a7d7dd63129b02ecc675.png)'
- en: Image by author
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Piechart
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 饼图
- en: Let’s compare the population by the year 2020 again but now with a piechart.
    To do so, we’ll use the `df_population_2020` dataframe created in the “Single
    Barplot” section.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再次比较2020年的人口数据，但这次使用饼图。为此，我们将使用在“单条柱状图”部分创建的`df_population_2020`数据框。
- en: However, to make a piechart we need the “country” as a column and not as an
    index, so we use `.reset_index()` to get the column back. Then we transform the `2020` into
    a string.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，为了制作饼图，我们需要将“国家”作为列而不是索引，因此我们使用`.reset_index()`来恢复列。然后我们将`2020`转换为字符串。
- en: '[PRE12]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![The Easiest Way to Make Beautiful Interactive Visualizations With Pandas](../Images/b50b37bc5b5c28326e46edbb51556f95.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![用 Pandas 制作美丽互动可视化的最简单方法](../Images/b50b37bc5b5c28326e46edbb51556f95.png)'
- en: Image by author
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Scatterplot
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 散点图
- en: Although population data is not suitable for a scatterplot (the data follows
    a common pattern), I would make this plot for the purposes of this guide.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管人口数据不适合做散点图（数据遵循常见模式），但为了本指南的目的，我仍会制作这个图。
- en: Making a scatterplot is similar to a line plot, but we have to add the `mode `argument.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 制作散点图类似于折线图，但我们必须添加`mode`参数。
- en: '[PRE13]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![The Easiest Way to Make Beautiful Interactive Visualizations With Pandas](../Images/75638c1317f0366c0c812d1e856f93e5.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![用 Pandas 制作美丽互动可视化的最简单方法](../Images/75638c1317f0366c0c812d1e856f93e5.png)'
- en: That’s it! Now you’re ready to make your own beautiful interactive visualization
    with Pandas. If you want to learn other visualization libraries in Python such
    as Matplotlib and Seaborn and also want to know how to make wordclouds,[ check
    these guides I made](https://frank-andrade.medium.com/list/data-visualization-in-python-7aea0e3f93ca).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！现在你已经准备好使用 Pandas 制作自己的美丽互动可视化。如果你想学习 Python 中其他可视化库，如 Matplotlib 和 Seaborn，并且还想了解如何制作词云，[查看我制作的这些指南](https://frank-andrade.medium.com/list/data-visualization-in-python-7aea0e3f93ca)。
- en: '[**Join my email list with 3k+ people to get my Python for Data Science Cheat
    Sheet I use in all my tutorials (Free PDF)**](https://frankandrade.ck.page/bd063ff2d3)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[**加入我的3k+人邮件列表，获取我在所有教程中使用的 Python 数据科学备忘单（免费 PDF）**](https://frankandrade.ck.page/bd063ff2d3)'
- en: If you enjoy reading stories like these and want to support me as a writer,
    consider signing up to become a Medium member. It’s $5 a month, giving you unlimited
    access to thousands of Python guides and Data science articles. If you sign up
    using [my link](https://frank-andrade.medium.com/membership), I’ll earn a small
    commission with no extra cost to you.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢阅读这样的故事并且想支持我作为作者，请考虑注册成为 Medium 会员。每月$5，你可以无限制访问成千上万的 Python 指南和数据科学文章。如果你通过[我的链接](https://frank-andrade.medium.com/membership)注册，我将获得少量佣金，对你没有额外费用。
- en: '**Bio: [Frank Andrade](https://frank-andrade.medium.com/)** is a Data Scientist,
    a [Python Instructor](https://bit.ly/30A2X3C), and a Top 1000 Writer on Medium.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**简历: [Frank Andrade](https://frank-andrade.medium.com/)** 是数据科学家，[Python 教师](https://bit.ly/30A2X3C)，以及
    Medium 上的前1000名作者。'
- en: '[Original](https://towardsdatascience.com/the-easiest-way-to-make-beautiful-interactive-visualizations-with-pandas-cdf6d5e91757).
    Reposted with permission.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/the-easiest-way-to-make-beautiful-interactive-visualizations-with-pandas-cdf6d5e91757)。经许可转载。'
- en: More On This Topic
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 了解更多相关内容
- en: '[The Easiest Way of Running Llama 3 Locally](https://www.kdnuggets.com/easiest-way-of-running-llama-3-locally)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在本地运行 Llama 3 的最简单方法](https://www.kdnuggets.com/easiest-way-of-running-llama-3-locally)'
- en: '[Make Amazing Visualizations with Python Graph Gallery](https://www.kdnuggets.com/2022/12/make-amazing-visualizations-python-graph-gallery.html)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 图形库制作惊人的可视化](https://www.kdnuggets.com/2022/12/make-amazing-visualizations-python-graph-gallery.html)'
- en: '[Creating Beautiful Histograms with Seaborn](https://www.kdnuggets.com/2023/01/creating-beautiful-histograms-seaborn.html)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Seaborn 创建美丽的直方图](https://www.kdnuggets.com/2023/01/creating-beautiful-histograms-seaborn.html)'
- en: '[A Step-by-Step Guide to Web Scraping with Python and Beautiful Soup](https://www.kdnuggets.com/2023/04/stepbystep-guide-web-scraping-python-beautiful-soup.html)'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 和 Beautiful Soup 进行网页抓取的逐步指南](https://www.kdnuggets.com/2023/04/stepbystep-guide-web-scraping-python-beautiful-soup.html)'
- en: '[The Optimal Way to Input Missing Data with Pandas fillna()](https://www.kdnuggets.com/2023/02/optimal-way-input-missing-data-pandas-fillna.html)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Pandas fillna() 输入缺失数据的最佳方法](https://www.kdnuggets.com/2023/02/optimal-way-input-missing-data-pandas-fillna.html)'
- en: '[Converting JSONs to Pandas DataFrames: Parsing Them the Right Way](https://www.kdnuggets.com/converting-jsons-to-pandas-dataframes-parsing-them-the-right-way)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将 JSON 转换为 Pandas DataFrames：正确解析的方法](https://www.kdnuggets.com/converting-jsons-to-pandas-dataframes-parsing-them-the-right-way)'
