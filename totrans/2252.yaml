- en: Introduction to Safetensors
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2023/07/introduction-safetensors.html](https://www.kdnuggets.com/2023/07/introduction-safetensors.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Introduction to Safetensors](../Images/9cf91bd787856ceb22649f830d86e344.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: What is Safetensors?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Hugging Face has developed a new serialization format called [Safetensors](https://huggingface.co/docs/safetensors/index),
    aimed at simplifying and streamlining the storage and loading of large and complex
    tensors. Tensors are the primary data structure used in deep learning, and their
    size can pose challenges when it comes to efficiency.
  prefs: []
  type: TYPE_NORMAL
- en: Safetensors use a combination of efficient serialization and compression algorithms
    to reduce the size of large tensors, making it faster and more efficient than
    other serialization formats like pickle. This means that Safetensors is 76.6X
    faster on CPU and 2X faster on GPU compared to the traditional PyTorch serialization
    format, `pytorch_model.bin` with `model.safetensors`. Check out [Speed Comparison](https://huggingface.co/docs/safetensors/speed).
  prefs: []
  type: TYPE_NORMAL
- en: Benefits of using Safetensors
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Easy of use
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Safetensors have a simple and intuitive API to serialize and deserialize tensors
    in Python. This means that developers can focus on building their deep learning
    models instead of spending time on serialization and deserialization.
  prefs: []
  type: TYPE_NORMAL
- en: Cross-platform compatibility
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can serialize in Python and conveniently load the resulting files in various
    programming languages and platforms, such as C++, Java, and JavaScript. This allows
    for seamless sharing of models across different programming environments.
  prefs: []
  type: TYPE_NORMAL
- en: Speed
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Safetensors is optimized for speed and can efficiently handle the serialization
    and deserialization of large tensors. As a result, it is an excellent choice for
    applications that use large language models.
  prefs: []
  type: TYPE_NORMAL
- en: Size Optimization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It uses a blend of effective serialization and compression algorithms to decrease
    the size of large tensors, resulting in faster and more efficient performance
    compared to other serialization formats such as pickle.
  prefs: []
  type: TYPE_NORMAL
- en: Secure
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To prevent any corruption during storage or transfer of serialized tensors,
    Safetensors uses a checksum mechanism. This guarantees an added layer of security,
    ensuring that all data stored in Safetensors is accurate and dependable. Moreverover,
    it prevents [DOS attacks](https://github.com/huggingface/safetensors#benefits).
  prefs: []
  type: TYPE_NORMAL
- en: Lazy loading
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When working in distributed settings with multiple nodes or GPUs, it is helpful
    to load only a portion of the tensors on each model. BLOOM utilizes this format
    to load the model on 8 GPUs in just 45 seconds, compared to the regular PyTorch
    weights which took 10 minutes.
  prefs: []
  type: TYPE_NORMAL
- en: Getting Started with Safetensors
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will look at `safetensors` API and how you can save and
    load file tensor files.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can simply Install safetensors using pip manager:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: We will use  the example from [Torch shared tensors](https://huggingface.co/docs/safetensors/torch_shared_tensors)
    to build a simple neural network and save the model using `safetensors.torch`
    API for PyTorch.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: As we can see, we have successfully created the model.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Now, we will save the model by providing the `model` object and the file name.
    After that, we will load the save file into the `model` object created using `nn.Module`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: In the second example, we will try to save the tensor created using `torch.zeros`.
    For that we will use the `save_file` function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: And to load the tensors, we will use the `load_file` function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: The safetensors API is available for Pytorch, Tensorflow, PaddlePaddle, Flax,
    and Numpy. You can understand it by reading the [Safetensors](https://huggingface.co/docs/safetensors/main/en/index)
    documentation.
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to Safetensors](../Images/529ed7e796025ef8b83d187331adee90.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from [Torch API](https://huggingface.co/docs/safetensors/main/en/api/torch)
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In short, safetensors is a new way to store large tensors used in deep learning
    applications. Compared to other techniques, it offers faster, more efficient,
    and user-friendly features. Additionally, it ensures the confidentiality and safety
    of data while supporting various programming languages and platforms. By utilizing
    Safetensors, machine learning engineers can optimize their time and concentrate
    on developing superior models.
  prefs: []
  type: TYPE_NORMAL
- en: I highly recommend using Safetensors for your projects. Many top AI companies,
    such as Hugging Face, EleutherAI, and StabilityAI, utilize Safetensors for their
    projects.
  prefs: []
  type: TYPE_NORMAL
- en: Reference
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Documentation:** [Safetensors (huggingface.co)](https://huggingface.co/docs/safetensors/index)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Blog:** [What is Safetensors and how to convert .ckpt model to .safetensors
    | by hengtao tantai | Medium](https://medium.com/@zergtant/what-is-safetensors-and-how-to-convert-ckpt-model-to-safetensors-13d36eb94d57)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**GitHub:** [huggingface/safetensors: Simple, safe way to store and distribute
    tensors (github.com)](https://github.com/huggingface/safetensors)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Abid Ali Awan](https://www.polywork.com/kingabzpro)** ([@1abidaliawan](https://twitter.com/1abidaliawan))
    is a certified data scientist professional who loves building machine learning
    models. Currently, he is focusing on content creation and writing technical blogs
    on machine learning and data science technologies. Abid holds a Master''s degree
    in Technology Management and a bachelor''s degree in Telecommunication Engineering.
    His vision is to build an AI product using a graph neural network for students
    struggling with mental illness.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Introduction to Binary Classification with PyCaret](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Clustering in Python with PyCaret](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Essential Math for Data Science: Visual Introduction to Singular…](https://www.kdnuggets.com/2022/06/essential-math-data-science-visual-introduction-singular-value-decomposition.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Pandas for Data Science](https://www.kdnuggets.com/2020/06/introduction-pandas-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Brief Introduction to Papers With Code](https://www.kdnuggets.com/2022/04/brief-introduction-papers-code.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KDnuggets News, April 27: A Brief Introduction to Papers With Code;…](https://www.kdnuggets.com/2022/n17.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
