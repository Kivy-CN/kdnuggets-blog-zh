["```py\nfrom sklearn.feature_extraction.text import TfidfVectorizer\n\ncorpus = [\n          'KDnuggets Collection of data science Projects',\n          '3 Free Statistics Courses for data science',\n          'Parallel Processing Large File in Python',\n          '15 Python Coding Interview Questions You Must Know For data science',\n ]\n\nvectorizer = TfidfVectorizer()\n\n*# TD-IDF Matrix*\nX = vectorizer.fit_transform(corpus)\n\n*# extracting feature names*\ntfidf_tokens = vectorizer.get_feature_names_out()\n```", "```py\nimport pandas as pd\n\nresult = pd.DataFrame(\n    data=X.toarray(), \n    index=[\"Doc1\", \"Doc2\", \"Doc3\", \"Doc4\"], \n    columns=tfidf_tokens\n)\n\nresult\n```", "```py\nimport pandas as pd\n\nspotify = pd.read_csv(\"reviews.csv\")\nspotify.head()\n```", "```py\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.model_selection import train_test_split\n\n*# Transform features*\nX = spotify.Review\nX_tfidf = vectorizer.fit_transform(X)\n\n*# create target*\ny = spotify.Rating\n\n*# split the dataset for training and testing*\nX_train, X_test, y_train, y_test = train_test_split(\n    X_tfidf, y, test_size=0.33, random_state=42\n)\n```", "```py\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.metrics import classification_report\n\n*# Training classifier model* \nclf = SGDClassifier()\nclf.fit(X_train, y_train)\n\n*# model validation*\ny_pred = clf.predict(X_test)\n\nprint(classification_report(y_test, y_pred))\n```", "```py\n               precision    recall  f1-score   support\n           1       0.57      0.90      0.69      5817\n           2       0.25      0.03      0.05      2274\n           3       0.28      0.06      0.10      2293\n           4       0.41      0.19      0.26      2556\n           5       0.73      0.91      0.81      7387\n\naccuracy                               0.62     20327\nmacro avg          0.45      0.42      0.38     20327\nweighted avg       0.54      0.62      0.54     20327\n```"]