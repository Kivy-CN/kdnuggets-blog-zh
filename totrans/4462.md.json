["```py\nfrom sklearn.datasets import fetch_openml\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.compose import make_column_selector as selector\n\n```", "```py\n# Fetch Titanic dataset\ntitanic = fetch_openml('titanic', version=1, as_frame=True) X = titanic.frame.drop('survived', axis=1)\ny = titanic.frame['survived'] \n```", "```py\nX.dtypes\n\n```", "```py\nname           object\naddress        float64\nsex          category\nage           float64\nsibsp         float64\nparch         float64\nticket         object\nfare          float64\ncabin          object\nembarked     category\nboat           object\nbody          float64\nhome.dest      object\ndtype: object\n```", "```py\n# Scale numeric values\nnum_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='median')),\n    ('scaler', StandardScaler())])\n\n# One-hot encode categorical values\ncat_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='constant', fill_value='missing')),\n    ('onehot', OneHotEncoder(handle_unknown='ignore'))])\n\n```", "```py\npreprocessor = ColumnTransformer(\n    transformers=[\n        ('num', num_transformer, selector(dtype_include='float64')),\n        ('cat', cat_transformer, selector(dtype_include='category'))])\n\n```", "```py\nclf = Pipeline(steps=[\n    ('preprocessor', preprocessor),\n    ('classifier', LogisticRegression())])\n\n```"]