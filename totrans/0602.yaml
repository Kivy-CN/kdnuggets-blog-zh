- en: How to Perform Motion Detection Using Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2022/08/perform-motion-detection-python.html](https://www.kdnuggets.com/2022/08/perform-motion-detection-python.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![How to Perform Motion Detection Using Python](../Images/5053c787968912836a8329d985b4b3a5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [gfycat](https://gfycat.com/ediblepresentclam)'
  prefs: []
  type: TYPE_NORMAL
- en: Overview
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Motion detection using Python is easy because of the multiple open-source libraries
    provided by the Python programming language. Motion detection has many real-world
    applications. For example, it can be used for invigilation in online exams or
    for security purposes in  stores, banks, etc.
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Python programming language is an open-source library-rich language that provides
    a plethora of applications to its user and has a number of users. Thus, it is
    fastly growing in the market. There is no end to the list of benefits of Python
    language due to its simple syntax, easy-to-find errors, and fast debugging process
    that makes it more user-friendly.
  prefs: []
  type: TYPE_NORMAL
- en: '**Why should you learn Python? a pictorial representation:**'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Perform Motion Detection Using Python](../Images/c9dac6fa12aece182ef615c009b4cdc4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [Scaler Topics](https://www.scaler.com/topics/python/what-is-python-programming/)'
  prefs: []
  type: TYPE_NORMAL
- en: Python was designed in 1991 and it is developed by the Python Software Foundation.
    There are many versions of python that are released. Out of them, python2 and
    python3 are the most famous. Currently, python3 is mostly used and users of python3
    are increasing quickly. In this project or script, we are going to use python3.
  prefs: []
  type: TYPE_NORMAL
- en: What is Motion Detection?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: According to the Physics, when an object is motionless and has no speed, then
    it is considered to be at rest, and just the opposite is when an object is not
    at complete rest and has some movement or speed in some direction, either left-right,
    forward-backward, or up-down then it is considered to be in motion. In this article,
    we will try to detect it.
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Perform Motion Detection Using Python](../Images/f849ddbe546921847efd174c9f645365.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [gtycat](https://gfycat.com/ediblepresentclam)'
  prefs: []
  type: TYPE_NORMAL
- en: Motion detection has many real-life implementations or usages where it can prove
    its worthiness, such as for invigilation of online exams using a webcam (which
    we will implement in this article), as a security guard, etc.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we will try to implement a script through which we will detect
    motion using the Web-Camera of the desktop or laptop. The idea is that we will
    take two frames of the videos and try to find differences between them. If there
    is some kind of difference between the two frames, then it is clear that there
    is some kind of movement of an object in front of the camera, which creates the
    difference.
  prefs: []
  type: TYPE_NORMAL
- en: Important Libraries
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before we start the code implementation, let’s look at some of the modules
    or libraries we will use through our code for motion detection with a webcam.
    As we have discussed libraries play an important role in the fame of python, let’s
    look into what we need:'
  prefs: []
  type: TYPE_NORMAL
- en: OpenCV
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Pandas
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Both of the above-mentioned libraries, OpenCV and Pandas are purely python-based,
    free, and open-source libraries and we are going to use them with the Python3
    version of the python programming language.
  prefs: []
  type: TYPE_NORMAL
- en: 1\. OpenCV
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[OpenCV](https://opencv.org/) is an open-source library that can be used with
    many programming languages like C++, Python, etc. It is used to work on the images
    and videos and by using or integrating it with python’s panda/NumPy libraries
    we can make the best use of the OpenCV features.'
  prefs: []
  type: TYPE_NORMAL
- en: '2\. Pandas:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As we have discussed, “[pandas](https://pandas.pydata.org/)” is an open-source
    library of Python and provides rich inbuilt tools for data analysis due to which
    it is widely used in the stream of data science and data analytics. We are provided
    with data frames in the form of a data structure in pandas that is helpful to
    manipulate and store tabular data into a 2-Dimensional data structure.
  prefs: []
  type: TYPE_NORMAL
- en: Both of the above-discussed modules are not in-built in [python](https://www.python.org/)
    and we have to install them first before use. Apart from this, there are two more
    modules that we are going to use in our project.
  prefs: []
  type: TYPE_NORMAL
- en: Python DateTime Module
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Python Time Module
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Both of these modules are in-built in python and there is no need to install
    them later. These modules deal with the Date and Time-related functions respectively.
  prefs: []
  type: TYPE_NORMAL
- en: Code Implementation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Until now we have seen the libraries we are going to use in our code, let’s
    start its implementation with the idea that video is just a combination of many
    static image or frames and all these frames combined creates a video:'
  prefs: []
  type: TYPE_NORMAL
- en: Importing the required libraries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, we will import all the libraries, like pandas and panda. Then
    we import the cv2, time, and DateTime function from the DateTime module.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Initializing our data variables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, we initialized some of our variables which we are going to
    use further in the code. We define initial state as "None" and are going to store
    motion tracked in another variable motionTrackList.
  prefs: []
  type: TYPE_NORMAL
- en: We defined a list ‘motionTime’ to store the time when motion gets spotted and
    initialized dataFrame list using the panda's module.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Main capturing process
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this section we will perform our main motion detection steps. Let''s understand
    them in steps:'
  prefs: []
  type: TYPE_NORMAL
- en: First, we will start capturing video using the cv2 module and store that in
    the video variable.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then we will use an infinite while loop to capture each frame from the video.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will use the read() method to read each frame and store them into respective
    variables.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We defined a variable motion and initialized it to zero.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We created two more variables grayImage and grayFrame using cv2 functions cvtColor
    and GaussianBlur to find the changes in the motion.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If our initialState is None then we assign the current grayFrame to initialState
    otherwise and halt the next process by using the ‘continue’ keyword.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the next section, we calculated the difference between the initial and grayscale
    frames we created in the current iteration.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then we will highlight the changes between the initial and the current frames
    using the cv2 threshold and dilate functions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will find the contours from the moving object in the current image or frame
    and indicate the moving object by creating a green boundary around it by using
    the rectangle function.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After this, we will append our motionTrackList by adding the current detected
    element to it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We have displayed all the frames like the grayscale and the original frames,etc.,
    by using imshow method.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Also, we created a key using witkey() method of the cv2 module to end the process,
    and we can end our process by using the ‘m’ key.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Finishing the code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After closing the loop we will add our data from the dataFrame and the motionTime
    lists into the CSV file and finally turn off the video.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Summary of Process
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have created the code; now let’s again discuss the process in brief.
  prefs: []
  type: TYPE_NORMAL
- en: First, we captured a video using the webcam of our device, then took the initial
    frame of input video as reference and checked the next frames from time to time.
    If a frame different from the first one was found, motion was present. That will
    be marked in the green rectangle.
  prefs: []
  type: TYPE_NORMAL
- en: Combine Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We have seen the code in different sections. Now, let’s combine it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Results
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The results derived after the above code was run would be similar to what can
    be seen below.
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Perform Motion Detection Using Python](../Images/369106b7da4522ab7ac92bc98f835906.png)'
  prefs: []
  type: TYPE_IMG
- en: Here, we can see that the man's motion in the video has been tracked. Thus,
    the output can be seen accordingly.
  prefs: []
  type: TYPE_NORMAL
- en: However, in this code, the tracking would be done with the help of rectangular
    boxes around moving objects, similar to what can be seen below. An interesting
    thing to note here is that the video is a security camera footage on which detection
    has been done.
  prefs: []
  type: TYPE_NORMAL
- en: '![How to Perform Motion Detection Using Python](../Images/e17119e77f0d49978e6fb31e601d3b4f.png)'
  prefs: []
  type: TYPE_IMG
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Python programming language is an open-source library-rich language that provides
    a number of applications to its user.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When an object is motionless and has no speed then it is considered to be at
    rest, and just the opposite is when an object is not at complete rest then it
    is considered to be in motion.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OpenCV is an open-source library that can be used with many programming languages,
    and by integrating it with python’s panda/NumPy libraries we can make the best
    use of the OpenCV features.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The main idea is that every video is just a combination of many static images
    called frames, and a difference between the frames is used for the detection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Vaishnavi Amira Yada](https://www.linkedin.com/in/vaishnavi-amira-yada/)**
    is a technical content writer. She have knowledge of Python, Java, DSA, C, etc.
    She found herself in writing and she loved it.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[KDnuggets News, August 17: How to Perform Motion Detection Using…](https://www.kdnuggets.com/2022/n33.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using NumPy to Perform Date and Time Calculations](https://www.kdnuggets.com/using-numpy-to-perform-date-and-time-calculations)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using Hugging Face Transformers for Emotion Detection in Text](https://www.kdnuggets.com/using-hugging-face-transformers-for-emotion-detection-in-text)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Perform Unit Testing in Python?](https://www.kdnuggets.com/2023/01/perform-unit-testing-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Perform Memory-Efficient Operations on Large Datasets with Pandas](https://www.kdnuggets.com/how-to-perform-memory-efficient-operations-on-large-datasets-with-pandas)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Perform Matrix Operations with NumPy](https://www.kdnuggets.com/how-to-perform-matrix-operations-with-numpy)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
