- en: Column-Oriented Databases, Explained
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列导向数据库解析
- en: 原文：[https://www.kdnuggets.com/2021/02/understanding-nosql-database-types-column-oriented-databases.html](https://www.kdnuggets.com/2021/02/understanding-nosql-database-types-column-oriented-databases.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/02/understanding-nosql-database-types-column-oriented-databases.html](https://www.kdnuggets.com/2021/02/understanding-nosql-database-types-column-oriented-databases.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: NoSQL has become increasingly popular as a complementary tool to traditional
    SQL approaches to databases and database management. As we know, NoSQL doesn’t
    follow the same relational model that SQL does, which allows it to do quite a
    lot of powerful things. More importantly, it’s very flexible and scalable, which
    is excellent for newer projects that don’t have the time or budget to spend on
    designing an SQL database.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: NoSQL 已越来越受到欢迎，作为传统 SQL 数据库和数据库管理方法的补充工具。正如我们所知，NoSQL 不遵循 SQL 的关系模型，这使得它能够做很多强大的事情。更重要的是，它非常灵活和可扩展，这对于没有时间或预算设计
    SQL 数据库的新项目非常有用。
- en: As such, we’re going to take a bit of a deeper look at how different [data models](https://hostingdata.co.uk/nosql-database/)
    work, with this article taking a look at column databases. If you’d like to take
    a more general look, you should check out our [NoSQL for Beginners](/2020/12/nosql-beginners.html)
    guide.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们将深入了解不同的 [数据模型](https://hostingdata.co.uk/nosql-database/) 是如何工作的，本文将重点讨论列数据库。如果你想了解更一般的信息，应该查看我们的
    [NoSQL 初学者指南](/2020/12/nosql-beginners.html)。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: How Does a Column Database Work?
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 列数据库是如何工作的？
- en: 'At a very surface level, column-store databases do exactly what is advertised
    on the tin: namely, that instead of organizing information into rows, it does
    so in columns. This essentially makes them function the same way that tables work
    in relational databases. Of course, since this *is* a NoSQL database, this data
    model makes them much more flexible.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 从最表面上看，列存储数据库确实如其广告所述：即，它不是将信息组织成行，而是将其组织成列。这本质上使它们的功能与关系数据库中的表相同。当然，由于这是*NoSQL*数据库，这种数据模型使它们更加灵活。
- en: '![Image](../Images/8e7c96a2dd6f24ce7573a605fae19e33.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/8e7c96a2dd6f24ce7573a605fae19e33.png)'
- en: More specifically, column databases use the concept of *keyspace*, which is
    sort of like a schema in relational models. This keyspace contains all the column
    families, which then contain rows, which then contain columns. It’s a bit tricky
    to wrap your head around at first but it’s relatively straightforward.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 更具体地说，列数据库使用*键空间*的概念，这有点像关系模型中的模式。这个键空间包含所有列族，列族中包含行，行中再包含列。一开始理解起来有点棘手，但相对来说还是比较简单的。
- en: '![Image](../Images/420e731f7baa234c5e633fd8f5dabfa2.png)![Image](../Images/fbb86c445be95d40bbd68cce53eb7a2d.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/420e731f7baa234c5e633fd8f5dabfa2.png)![Image](../Images/fbb86c445be95d40bbd68cce53eb7a2d.png)'
- en: By taking a quick look, we can see that a column family has several rows. Within
    each row, there can be several different columns, with different names, links,
    and even sizes (meaning they don’t need to adhere to a standard). Furthermore,
    these columns only exist within their own row and can contain a value pair, name,
    and a timestamp.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 通过快速查看，我们可以看到一个列族有多个行。在每一行中，可以有多个不同的列，具有不同的名称、链接，甚至大小（意味着它们不需要遵循标准）。此外，这些列只存在于它们自己的行中，并且可以包含值对、名称和时间戳。
- en: 'If we take a specific row as an example:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 以一个具体的行作为例子：
- en: '![Image](../Images/693cf6110d5044826ce975d87d07376d.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/693cf6110d5044826ce975d87d07376d.png)'
- en: 'The *Row Key* is exactly that: the specific identifier of that row and is always
    unique. The column contains the name, value, and timestamp, so that’s straightforward.
    The name/value pair is also straight forward, and the timestamp is the date and
    time the data was entered into the database.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '*行键* 就是那一行的具体标识符，并且总是唯一的。列中包含名称、值和时间戳，这些都是直接明了的。名称/值对也很简单，而时间戳是数据输入数据库的日期和时间。'
- en: Some examples of column-store databases include Casandra, CosmoDB, Bigtable,
    and HBase.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 一些列式存储数据库的例子包括 Casandra、CosmoDB、Bigtable 和 HBase。
- en: Benefits of Column Databases
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 列式数据库的好处
- en: 'There are several benefits that go along with columnar databases:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 列式数据库有几个好处：
- en: Column stores are excellent at compression and therefore are efficient in terms
    of storage. This means you can reduce disk resources while holding massive amounts
    of information in a single column
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列式存储在压缩方面表现优异，因此在存储方面非常高效。这意味着你可以减少磁盘资源，同时在单列中保存大量信息。
- en: Since a majority of the information is stored in a column, aggregation queries
    are quite fast, which is important for projects that require large amounts of
    queries in a small amount of time.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于大多数信息存储在列中，聚合查询非常快速，这对需要在短时间内进行大量查询的项目很重要。
- en: Scalability is excellent with column-store databases. They can be expanded nearly
    infinitely, and are often spread across large clusters of machines, even numbering
    in thousands. That also means that they are great for Massive Parallel Processing
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列式存储数据库的可扩展性非常优秀。它们几乎可以无限扩展，通常分布在大规模的机器集群中，甚至达到几千台。这也意味着它们非常适合大规模并行处理。
- en: Load times are similarly excellent, as you can easily load a billion-row table
    in a few seconds. That means you can load and query nearly instantly.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加载时间同样优秀，你可以在几秒钟内轻松加载一个十亿行的表。这意味着你可以几乎瞬间完成加载和查询。
- en: Large amounts of flexibility as columns do not necessarily have to look like
    each other. That means you can add new and different columns without disrupting
    the whole database. That being said, entering completely new record queries requires
    a change to all tables.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列式数据库具有很大的灵活性，因为列之间不一定要相同。这意味着你可以添加新的和不同的列而不会干扰整个数据库。也就是说，输入完全新的记录查询需要更改所有表。
- en: 'Overall, column-store databases are great for analytics and reporting: fast
    querying speeds and abilities to hold large amounts of data without adding a lot
    of overhead make it ideal.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，列式存储数据库非常适合分析和报告：快速的查询速度和处理大量数据而不增加过多开销的能力使其理想。
- en: Disadvantages of Column Databases
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 列式数据库的缺点
- en: 'As it usually is in life, nothing is perfect and there are a couple of disadvantages
    to using column-oriented databases as well:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 正如生活中的常态，没有什么是完美的，使用列式数据库也有一些缺点：
- en: Designing an indexing schema that’s effective is difficult and time consuming.
    Even then, the said schema would still not be as effective as simple relational
    database schemas.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计一个有效的索引模式既困难又耗时。即便如此，这种模式仍然不如简单的关系数据库模式有效。
- en: While this may not be an issue for some users, incremental data loading is suboptimal
    and should be avoided if possible.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虽然这对某些用户可能不是问题，但增量数据加载效果不佳，应该尽可能避免。
- en: This goes for all NoSQL database types and not just columnar ones. Security
    [vulnerabilities in web applications](https://www.clouddefense.ai/blog/web-application-security)
    are ever present and the fact that NoSQL databases lack inbuilt security features
    doesn’t help. If security is your number one priority, you should either look
    into relational databases you could employ or employ a well-defined schema if
    possible.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这适用于所有 NoSQL 数据库类型，而不仅仅是列式数据库。安全性 [web 应用中的漏洞](https://www.clouddefense.ai/blog/web-application-security)
    始终存在，而 NoSQL 数据库缺乏内置的安全功能。如果安全是你的首要任务，你应该考虑使用关系数据库，或者在可能的情况下使用明确定义的模式。
- en: Online Transaction Processing (OLTP) applications are also not compatible with
    columnar databases due to the way data is stored.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于数据存储的方式，在线事务处理 (OLTP) 应用程序也与列式数据库不兼容。
- en: Are Column Databases Always NoSQL?
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 列式数据库总是 NoSQL 吗？
- en: Before closing out, we do want to point out that column-store databases aren’t
    necessarily NoSQL only. Often the argument goes that column-store is so different
    from relational database models, that it falls squarely in the NoSQL camp.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在结束之前，我们要指出，列式存储数据库并不一定仅仅是 NoSQL。通常的说法是，列式存储与关系数据库模型有很大不同，因此它完全归于 NoSQL 阵营。
- en: This isn’t necessarily always the case and the [NoSQL vs SQL](/2020/12/sql-vs-nosql-7-key-takeaways.html)
    argument, in general, is pretty complex.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不一定总是如此，[NoSQL 与 SQL](/2020/12/sql-vs-nosql-7-key-takeaways.html) 的争论总体上相当复杂。
- en: In the case of column-store databases, they are nearly identical to SQL methodologies.
    For example, keyspaces act as schema and therefore there is still some form of
    schema management. Another example is that the metadata can sometimes look exactly
    like that of a typical relational DBMS. Ironically, column-store databases also
    tend to be SQL and ACID compliant.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在列存储数据库的情况下，它们与 SQL 方法论几乎相同。例如，关键空间充当模式，因此仍然存在某种形式的模式管理。另一个例子是元数据有时看起来完全像典型的关系型
    DBMS。具有讽刺意味的是，列存储数据库也通常符合 SQL 和 ACID 标准。
- en: Even more so though, NoSQL databases are usually either document-store or key-store,
    of which column-store is neither.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 更进一步，NoSQL 数据库通常是文档存储或键值存储，而列存储既不是。
- en: Therefore, it’s hard to argue that column-store is purely NoSQL.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，很难争论列存储完全是 NoSQL。
- en: Conclusion
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论
- en: While column-store databases are incredibly powerful, they *do* have their own
    sets of issues. For example, the way that it writes data means a certain lack
    of consistency since columns require multiple writes to the disk. This is compared
    to relational databases where row-data is written sequentially.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管列存储数据库极其强大，但它们 *确实* 存在自己的一些问题。例如，它写入数据的方式意味着一致性稍有缺乏，因为列需要多次写入磁盘。这与关系型数据库中行数据的顺序写入相比。
- en: Nonetheless, column-store remains one of the most used data models out there.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，列存储仍然是最常用的数据模型之一。
- en: '**Bio: [Alex Williams](https://hostingdata.co.uk/author/alex-williams/)** is
    a seasoned full-stack developer and the owner of [Hosting Data UK](https://hostingdata.co.uk/).
    After graduating from the University of London, majoring in IT, Alex worked as
    a developer leading various projects for clients from all over the world for almost
    10 years. Recently, Alex switched to being an independent IT consultant and started
    his own blog. There, he explores web development, data management, digital marketing,
    and solutions for online business owners just starting out.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：[亚历克斯·威廉姆斯](https://hostingdata.co.uk/author/alex-williams/)** 是一位经验丰富的全栈开发者和
    [Hosting Data UK](https://hostingdata.co.uk/) 的拥有者。在伦敦大学 IT 专业毕业后，亚历克斯作为开发者领导了多个来自世界各地客户的项目，工作了近
    10 年。最近，亚历克斯转型为独立 IT 顾问，并开始了自己的博客。在那里，他探讨了 web 开发、数据管理、数字营销以及为刚刚起步的在线业务主提供解决方案。'
- en: '**Related:**'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[SQL vs NoSQL: 7 Key Takeaways](/2020/12/sql-vs-nosql-7-key-takeaways.html)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQL 与 NoSQL：7 个关键要点](/2020/12/sql-vs-nosql-7-key-takeaways.html)'
- en: '[NoSQL for Beginners](/2020/12/nosql-beginners.html)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[NoSQL 初学者指南](/2020/12/nosql-beginners.html)'
- en: '[To SQL or not To SQL: that is the question!](/2018/05/sql-not-sql-question.html)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQL 还是 NoSQL：这是个问题！](/2018/05/sql-not-sql-question.html)'
- en: More On This Topic
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Key-Value Databases, Explained](https://www.kdnuggets.com/2021/04/nosql-explained-understanding-key-value-databases.html)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[键值数据库解析](https://www.kdnuggets.com/2021/04/nosql-explained-understanding-key-value-databases.html)'
- en: '[From Oracle to Databases for AI: The Evolution of Data Storage](https://www.kdnuggets.com/2022/02/oracle-databases-ai-evolution-data-storage.html)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[从 Oracle 到 AI 数据库：数据存储的演变](https://www.kdnuggets.com/2022/02/oracle-databases-ai-evolution-data-storage.html)'
- en: '[NoSQL Databases and Their Use Cases](https://www.kdnuggets.com/2023/03/nosql-databases-cases.html)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[NoSQL 数据库及其用例](https://www.kdnuggets.com/2023/03/nosql-databases-cases.html)'
- en: '[Vector Databases in AI and LLM Use Cases](https://www.kdnuggets.com/vector-databases-in-ai-and-llm-use-cases)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[AI 和 LLM 用例中的向量数据库](https://www.kdnuggets.com/vector-databases-in-ai-and-llm-use-cases)'
- en: '[Semantic Search with Vector Databases](https://www.kdnuggets.com/semantic-search-with-vector-databases)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用向量数据库进行语义搜索](https://www.kdnuggets.com/semantic-search-with-vector-databases)'
- en: '[A Guide to Working with SQLite Databases in Python](https://www.kdnuggets.com/a-guide-to-working-with-sqlite-databases-in-python)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 中 SQLite 数据库使用指南](https://www.kdnuggets.com/a-guide-to-working-with-sqlite-databases-in-python)'
