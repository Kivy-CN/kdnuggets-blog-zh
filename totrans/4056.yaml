- en: Leveraging Geospatial Data in Python with GeoPandas
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/leveraging-geospatial-data-in-python-with-geopandas](https://www.kdnuggets.com/leveraging-geospatial-data-in-python-with-geopandas)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Spatial data consists of records associated with locations. This data can come
    from GPS tracks, earth observation imagery, and maps. Each spatial data point
    can be precisely placed on a map using coordinate reference systems like latitude/longitude
    pairs for exact placement on maps, which enables us to investigate relationships
    among them.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Spatial data's true potential lies in its ability to connect data points and
    their respective locations, creating endless possibilities for advanced analysis.
    Geospatial data science is an emerging field within data science that seeks to
    harness geospatial information and extract valuable insights through spatial algorithms
    and advanced techniques such as machine learning or deep learning to draw meaningful
    conclusions about what events have taken place and their causes. Geospatial data
    science gives us insight into where events happen as well as why they happen.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: GeoPandas is an open-source Python package specifically tailored for working
    with information. It expands upon pandas' array of datatypes by providing spatial
    operations on geometric objects - which facilitates spatial analyses in Python
    using pandas' data-manipulation tool, pandas. Since GeoPandas is built upon Pandas
    it offers an easy path for professionals familiar with Python syntax to become
    acquainted with GeoPandas syntax quickly.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '![Leveraging Geospatial Data in Python with GeoPandas](../Images/57a482a9238b63706df83bbc2859b7b9.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
- en: 1\. Installing GeoPandas
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have to install the GeoPandas package to be able to use it. However, it is
    critical to note that GeoPandas depends on other libraries that must be installed
    to use it without problems. These dependencies are [**shapely**](https://shapely.readthedocs.io/),
    [**Fiona**](https://fiona.readthedocs.io/), [**pyproj**](https://github.com/pyproj4/pyproj),
    and [**rtree**](https://github.com/Toblerity/rtree)**. **
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two ways you can download the GeoPandas package. First, you can use
    conda to install the GeoPandas conda package. This method is recommended as it
    will provide the dependencies of GeoPandas without the need to install them on
    your own. You can run the following command to install GeoPandas:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过两种方式下载 GeoPandas 包。首先，你可以使用 conda 安装 GeoPandas conda 包。这种方法推荐使用，因为它将提供
    GeoPandas 的依赖项，而无需你自己安装。你可以运行以下命令来安装 GeoPandas：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The second method is to use pip which is the standard package installer in Python.
    However, using this method will require installing the rest of the mentioned dependencies.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种方法是使用 pip，这是 Python 中的标准包安装程序。然而，使用此方法将需要安装其余提到的依赖项。
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Once the GeoPandas package is installed you can import it into your Python
    code using the following command:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装了 GeoPandas 包，你可以使用以下命令将其导入到你的 Python 代码中：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 2\. Reading & Writing Spatial Data
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 读取与写入空间数据
- en: 'GeoPandas is used to read spatial data and convert it into **GeoDataFrame**.
    However, it is important to note that there are two main types of spatial data:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: GeoPandas 用于读取空间数据并将其转换为 **GeoDataFrame**。然而，重要的是要注意有两种主要的空间数据类型：
- en: '**Vector data:** The vector data describes the features of the geography of
    earth locations using discrete geometry using the following terms point, line,
    and polygon.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**矢量数据：** 矢量数据使用离散几何（点、线和多边形）描述地球位置的地理特征。'
- en: '**Raster data**: The raster data encodes the world as a surface represented
    by a grid. Each pixel of this grid is represented by a continuous value or categorical
    class.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**栅格数据：** 栅格数据将世界编码为由网格表示的表面。网格的每个像素由一个连续值或分类类表示。'
- en: 'GeoPandas mainly works with vector data. However, it can be used in conjunction
    with other Python packages to handle raster data, such as [**rasterio**](https://geopandas-org.translate.goog/en/stable/gallery/geopandas_rasterio_sample.html?_x_tr_sl=en&_x_tr_tl=es&_x_tr_hl=es&_x_tr_pto=sc)**.**
    You can use the powerful **geopandas.read_file()** function to read most of the
    vector-based spatial data. There are two main data types of vector-based partial
    data:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: GeoPandas 主要处理矢量数据。然而，它可以与其他 Python 包结合使用来处理栅格数据，例如 [**rasterio**](https://geopandas-org.translate.goog/en/stable/gallery/geopandas_rasterio_sample.html?_x_tr_sl=en&_x_tr_tl=es&_x_tr_hl=es&_x_tr_pto=sc)**.**
    你可以使用强大的 **geopandas.read_file()** 函数来读取大多数基于矢量的空间数据。矢量数据主要有两种类型：
- en: '**Shapefile:** Shapfile is the most common data format and is considered the
    industry-level data type. It consists of three files that are compressed and usually
    provided as a zip file:'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Shapefile：** Shapefile 是最常见的数据格式，被认为是行业级的数据类型。它由三个压缩文件组成，通常作为 zip 文件提供：'
- en: 'The .**shp** file: This file contains the shape geometry.'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**.shp** 文件：此文件包含形状几何体。'
- en: 'The **.dbf** file: This file holds attributes for each geometry,'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**.dbf** 文件：此文件保存每个几何体的属性，'
- en: 'The **.shx** file: This is the shape index file that helps link the attributes
    to the shapes.'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**.shx** 文件：这是形状索引文件，帮助将属性链接到形状。'
- en: '**GeoJSON:** This is a new file format of geospatial data released in 2016\.
    Since it consists of only a single file it is easier to use it compared to the
    **Shapefile**.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GeoJSON：** 这是一种新的地理空间数据文件格式，于 2016 年发布。由于它只包含一个文件，相比于 **Shapefile**，它更易于使用。'
- en: In this article, we will use the **geopandas.read_file()** function to read
    a GeoJSON file hosted in [**GitHub**](https://github.com/martgnz/bcn-geodata/blob/master/barris/barris.geojson)
    containing geospatial data about the different districts of the city of Barcelona.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将使用 **geopandas.read_file()** 函数读取托管在 [**GitHub**](https://github.com/martgnz/bcn-geodata/blob/master/barris/barris.geojson)
    上的包含关于巴塞罗那市区不同区域地理空间数据的 GeoJSON 文件。
- en: 'Let first start by loading the data and printing the first five columns of
    it using the code below:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 首先通过加载数据并使用下面的代码打印前五列来开始：
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![Leveraging Geospatial Data in Python with GeoPandas](../Images/93700d532c04edf9c9b30b5a7ba35eb6.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![在 Python 中利用 GeoPandas 处理地理空间数据](../Images/93700d532c04edf9c9b30b5a7ba35eb6.png)'
- en: Next, to write the data into a file we can use the **GeoDataFrame.to_file()**
    function to write the data into a **Shapefile** by default but you can convert
    it into **GeoJSON** using the **driver** parameter.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为了将数据写入文件，我们可以使用 **GeoDataFrame.to_file()** 函数将数据写入 **Shapefile**，但你可以通过
    **driver** 参数将其转换为 **GeoJSON**。
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 3\. GeoDataFrames Properties
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. GeoDataFrames 属性
- en: Since **GeoDataFrames** is a subclass of pandas DataFrame it inherits a lot
    of its properties. However, there are some differences the main difference is
    that it can store geometry columns (also known as GeoSeries) and perform spatial
    operations. The geometry column in a GeoDataFrame can contain various types of
    vector data, including points, lines, and polygons. However, only one column is
    considered the active geometry, and all spatial operations will be based on that
    column.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 由于**GeoDataFrames**是 pandas DataFrame 的子类，它继承了很多属性。然而，也存在一些区别，主要的区别是它可以存储几何列（也称为
    GeoSeries）并执行空间操作。GeoDataFrame中的几何列可以包含各种类型的矢量数据，包括点、线和多边形。然而，只有一列被认为是活动几何列，所有空间操作都将基于该列。
- en: 'Another critical feature of it is that every column comes with its associated
    CRS information that tells us where the candidates are located on Earth. The reason
    why this feature is critical is that if you need to combine two spatial datasets
    you will need to make sure that they are expressed in the same CRS otherwise you
    will get the wrong results. The CRS information is stored in the crs attribute
    in GeoPandas:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个关键特性是每列都有其相关的 CRS 信息，告诉我们候选者在地球上的位置。这个特性之所以关键，是因为如果需要合并两个空间数据集，需要确保它们表达在相同的
    CRS 中，否则会得到错误的结果。CRS 信息存储在 GeoPandas 的 crs 属性中：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Leveraging Geospatial Data in Python with GeoPandas](../Images/31f4b918a845cfe2fc153dadc09783da.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![利用 GeoPandas 在 Python 中的地理空间数据](../Images/31f4b918a845cfe2fc153dadc09783da.png)'
- en: Now that we have set the right projected CRS, we’re ready to explore the attributes
    of GeoDataFrames.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已设置正确的投影 CRS，我们准备好探索 GeoDataFrames 的属性了。
- en: 4\. Exploring GeoDataFrames
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 探索 GeoDataFrames
- en: 'GeoPandas has four useful methods and attributes that can be used to explore
    the data. We will explore these four methods:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: GeoPandas 具有四个有用的方法和属性，可用于探索数据。我们将探讨这四个方法：
- en: Area
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 面积
- en: Centroid
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 质心
- en: Boundary
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 边界
- en: Distance
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 距离
- en: 4.1\. Area
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.1\. 面积
- en: The area attribute returns the calculated area of a geometry. In the example
    below we will calculate the area of every district in km2.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: area 属性返回几何体的计算面积。在下面的示例中，我们将计算每个区的面积（单位为 km2）。
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Leveraging Geospatial Data in Python with GeoPandas](../Images/a8b24dcfbd134d7190d2d04c3b7d5971.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![利用 GeoPandas 在 Python 中的地理空间数据](../Images/a8b24dcfbd134d7190d2d04c3b7d5971.png)'
- en: 4.2\. Centroid
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.2\. 质心
- en: 'The second attribute is the centroid which returns the center point of the
    geometry. In the code snippet below we will add a new column and save the centroid
    for each district:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个属性是质心，它返回几何体的中心点。在下面的代码片段中，我们将添加一个新列并保存每个区的质心：
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![Leveraging Geospatial Data in Python with GeoPandas](../Images/6d2b8590b1a6b19fad391c35978a61ed.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![利用 GeoPandas 在 Python 中的地理空间数据](../Images/6d2b8590b1a6b19fad391c35978a61ed.png)'
- en: 4.3\. Boundary
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.3\. 边界
- en: 'The third method is the boundary attribute which calculates the boundary of
    a polygon for every district. The code below returns it and saves it into a separate
    column:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个方法是边界属性，它计算每个区的多边形边界。下面的代码返回它并将其保存到一个单独的列中：
- en: '[PRE8]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![Leveraging Geospatial Data in Python with GeoPandas](../Images/b63de49bc7136f86a7b70e0127a4037e.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![利用 GeoPandas 在 Python 中的地理空间数据](../Images/b63de49bc7136f86a7b70e0127a4037e.png)'
- en: 4.4\. Distance
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.4\. 距离
- en: The distance method calculates the minimum distance from a certain geometry
    to a specific location. So for example in the code below we will calculate the
    distance from the Sagrada Familia church to the centroids of every district in
    Barcelona. After that, we will add the distance in km2 and save it in a new column.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: distance 方法计算某一几何体到特定位置的最小距离。例如，在下面的代码中，我们将计算从圣家族教堂到巴塞罗那每个区质心的距离。之后，我们将添加距离（单位为
    km2）并保存到新列中。
- en: '[PRE9]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![Leveraging Geospatial Data in Python with GeoPandas](../Images/dd7292d0c8b66796fbb93c818f0e6fc4.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![利用 GeoPandas 在 Python 中的地理空间数据](../Images/dd7292d0c8b66796fbb93c818f0e6fc4.png)'
- en: 5\. Plotting Data with GeoPandas
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 使用 GeoPandas 绘制数据
- en: Plotting and visualizing your data is a critical step to better understand your
    data. Plotting with GeoPandas is the same as plotting with Pandas pretty easy
    and super forward. This is done through the GeoDataFrame.plot() function that
    is built on the matplotlib python package.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制和可视化数据是更好地理解数据的关键步骤。使用 GeoPandas 绘图与使用 Pandas 绘图一样简单且直观。这是通过建立在 matplotlib
    Python 包上的 GeoDataFrame.plot() 函数完成的。
- en: 'Let''s start by exploring Barcelona by plotting a basic plot for its districts:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们先通过绘制巴塞罗那区的基础图来开始探索：
- en: '[PRE10]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![Leveraging Geospatial Data in Python with GeoPandas](../Images/e5fd076ccf9a7edcc906b960ab6345f0.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![利用GeoPandas在Python中利用地理空间数据](../Images/e5fd076ccf9a7edcc906b960ab6345f0.png)'
- en: This is a very basic plot that does not tell us a lot of information. However,
    we can make it more informative by coloring each district with a different color.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常基础的图表，未能提供太多信息。然而，我们可以通过为每个区域着色来使其更具信息性。
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Leveraging Geospatial Data in Python with GeoPandas](../Images/f7aeb7ee69677ada997d71de90cefe29.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![利用GeoPandas在Python中利用地理空间数据](../Images/f7aeb7ee69677ada997d71de90cefe29.png)'
- en: Finally, we can add more information to our plot by adding the centroids of
    the districts.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以通过添加区域的质心来向我们的图表中添加更多信息。
- en: '[PRE12]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![Leveraging Geospatial Data in Python with GeoPandas](../Images/4afa93df50e4a1c7ae79e3811d27a31a.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![利用GeoPandas在Python中利用地理空间数据](../Images/4afa93df50e4a1c7ae79e3811d27a31a.png)'
- en: Next, we will explore a very important feature of GeoPandas which is the spatial
    relation and how they can relate to each other.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探索GeoPandas的一个非常重要的特性，即空间关系及其如何相互关联。
- en: 6\. Defining Spatial Relationships
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6. 定义空间关系
- en: Geospatial data relate to each other in space. GeoPandas uses pandas and shapely
    packages for spatial relationships. This section covers common operations. There
    are two main ways to merge GeoPandas DataFrames which are attribute and spatial
    joins. In this section, we will explore both of them.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 地理空间数据在空间上相互关联。GeoPandas使用pandas和shapely包来处理空间关系。本节涵盖常见操作。有两种主要方式来合并GeoPandas
    DataFrames，即属性连接和空间连接。在本节中，我们将探讨这两者。
- en: 6.1.Attribute Joins
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6.1. 属性连接
- en: Attribute joins allow you to join two GeoPandas DataFrames using non-geometry
    variables which makes it similar to the regular join operations in Pandas. The
    joining operation is done using the pandas.merge() method as shown in the example
    below. In this example, we will join the [**Barcelona population data**](https://opendata-ajuntament.barcelona.cat/data/es/dataset/est-padro-sexe/resource/cd3125e4-f7d3-4217-8f9d-6d7abdad6ab0)
    to our geospatial data to add more information to it.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 属性连接允许你使用非几何变量连接两个GeoPandas DataFrame，这使得它类似于Pandas中的常规连接操作。连接操作使用pandas.merge()方法，如下面的示例所示。在这个例子中，我们将把[**巴塞罗那人口数据**](https://opendata-ajuntament.barcelona.cat/data/es/dataset/est-padro-sexe/resource/cd3125e4-f7d3-4217-8f9d-6d7abdad6ab0)连接到我们的地理空间数据中，以添加更多信息。
- en: '[PRE13]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![Leveraging Geospatial Data in Python with GeoPandas](../Images/3be56fdedc3a281dcc0ec5374743eff4.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![利用GeoPandas在Python中利用地理空间数据](../Images/3be56fdedc3a281dcc0ec5374743eff4.png)'
- en: 6.2\. Spatial Joins
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6.2. 空间连接
- en: 'On the other hand spatial joins merge dataframes based on spatial relationships.
    In the example below we will identify the districts that have [**bicycle lanes**](https://opendata-ajuntament.barcelona.cat/data/en/dataset/carril-bici/resource/4608cf0c-2f11-4a25-891f-c5afc3af82c5)**.**
    We will first load the data as shown in the code below:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，空间连接是基于空间关系来合并数据帧的。在下面的示例中，我们将识别具有[**自行车车道**](https://opendata-ajuntament.barcelona.cat/data/en/dataset/carril-bici/resource/4608cf0c-2f11-4a25-891f-c5afc3af82c5)**的区域。**
    我们将首先加载数据，如下面的代码所示：
- en: '[PRE14]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Leveraging Geospatial Data in Python with GeoPandas](../Images/706a8dba115cbce5d1eaccb75e93aeda.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![利用GeoPandas在Python中利用地理空间数据](../Images/706a8dba115cbce5d1eaccb75e93aeda.png)'
- en: 'To spatially join two dataframes we can use the sjoin() function. The sjoin()
    function takes four main arguments: the first one is the GeoDataFrame, the second
    argument is the GeoDataFrame that we will add to the first GeoDataFrame, the third
    argument is the type of join and the final argument is the **predicate** which
    defines the spatial relation we want to use to match the two GeoDataFrames. The
    most common partial relationships are **intersects**, **contains**, and **within**.
    In this example, we will the **intersects** parameter.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 要在空间上连接两个数据帧，我们可以使用` sjoin()`函数。` sjoin()`函数有四个主要参数：第一个是GeoDataFrame，第二个参数是我们将添加到第一个GeoDataFrame的GeoDataFrame，第三个参数是连接类型，最后一个参数是**谓词**，它定义了我们希望用来匹配两个GeoDataFrame的空间关系。最常见的部分关系有**交叉**、**包含**和**在内**。在这个例子中，我们将使用**交叉**参数。
- en: '[PRE15]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![Leveraging Geospatial Data in Python with GeoPandas](../Images/db3714a05546bb3c038c019083c7fd79.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![利用GeoPandas在Python中利用地理空间数据](../Images/db3714a05546bb3c038c019083c7fd79.png)'
- en: In this article, I introduced you to Geospatial data analysis using the open-source
    GeoPandas library. We started with downloading the GeoPandas package, and then
    we discussed different types of Geospatial data and how to load them. Finally,
    we will explore basic operations to get your hands on the geospatial dataset.
    Although there is still to explore with the geospatial data analysis, this blog
    acts as a starting point in your learning journey.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我向你介绍了如何使用开源的 GeoPandas 库进行地理空间数据分析。我们从下载 GeoPandas 包开始，然后讨论了不同类型的地理空间数据以及如何加载它们。最后，我们将探索一些基本操作，以便你能亲自接触到地理空间数据集。尽管地理空间数据分析还有很多需要探索的内容，但这篇博客作为你学习之旅的起点。
- en: '**[Youssef Rafaat](https://www.linkedin.com/in/youssef-hosni-b2960b135)** is
    a computer vision researcher & data scientist. His research focuses on developing
    real-time computer vision algorithms for healthcare applications. He also worked
    as a data scientist for more than 3 years in the marketing, finance, and healthcare
    domain.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Youssef Rafaat](https://www.linkedin.com/in/youssef-hosni-b2960b135)** 是一名计算机视觉研究员和数据科学家。他的研究重点是开发用于医疗保健应用的实时计算机视觉算法。他还在营销、金融和医疗保健领域担任数据科学家超过
    3 年。'
- en: More On This Topic
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[5 Python Packages For Geospatial Data Analysis](https://www.kdnuggets.com/2023/08/5-python-packages-geospatial-data-analysis.html)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5 个用于地理空间数据分析的 Python 包](https://www.kdnuggets.com/2023/08/5-python-packages-geospatial-data-analysis.html)'
- en: '[Building a Geospatial Application in Python with Google Earth…](https://www.kdnuggets.com/2022/03/building-geospatial-application-python-google-earth-engine-greppo.html)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Python 中使用 Google Earth 构建地理空间应用程序](https://www.kdnuggets.com/2022/03/building-geospatial-application-python-google-earth-engine-greppo.html)'
- en: '[Geospatial Data Analysis with Geemap](https://www.kdnuggets.com/geospatial-data-analysis-with-geemap)'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Geemap 进行地理空间数据分析](https://www.kdnuggets.com/geospatial-data-analysis-with-geemap)'
- en: '[Leveraging the Power of GPUs with CuPy in Python](https://www.kdnuggets.com/leveraging-the-power-of-gpus-with-cupy-in-python)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Python 中利用 CuPy 发挥 GPU 的强大功能](https://www.kdnuggets.com/leveraging-the-power-of-gpus-with-cupy-in-python)'
- en: '[SQL For Data Science: Understanding and Leveraging Joins](https://www.kdnuggets.com/2023/08/sql-data-science-understanding-leveraging-joins.html)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学中的 SQL：理解和利用连接](https://www.kdnuggets.com/2023/08/sql-data-science-understanding-leveraging-joins.html)'
- en: '[In-Database Analytics: Leveraging SQL''s Analytic Functions](https://www.kdnuggets.com/2023/07/indatabase-analytics-leveraging-sql-analytic-functions.html)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据库内分析：利用 SQL 的分析功能](https://www.kdnuggets.com/2023/07/indatabase-analytics-leveraging-sql-analytic-functions.html)'
