["```py\npandas_ai.run(df, prompt='Plot the bar chart of type of media for each year release, using different colors.')\n```", "```py\npip install llama-index\n```", "```py\nimport os\nos.environ[\"OPENAI_API_KEY\"] = \"sk-xxxxxx\"\n```", "```py\nimport pandas as pd\nfrom llama_index.query_engine.pandas_query_engine import PandasQueryEngine\n```", "```py\ndf = pd.DataFrame(\n    {\"city\": [\"New York\", \"Islamabad\", \"Mumbai\"], \"population\": [8804190, 1009832, 12478447]}\n)\n```", "```py\nquery_engine = PandasQueryEngine(df=df)\n\nresponse = query_engine.query(\n    \"What is the city with the lowest population?\",\n)\n```", "```py\n> Pandas Instructions:\n```", "```py\neval(\"df.loc[df['population'].idxmin()]['city']\")\n> Pandas Output: Islamabad\n```", "```py\nprint(response)\n```", "```py\nIslamabad\n```", "```py\nprint(response.metadata[\"pandas_instruction_str\"])\n```", "```py\neval(\"df.loc[df['population'].idxmin()]['city']\")\n```", "```py\ndf_yt = pd.read_csv(\"Global YouTube Statistics.csv\")\nquery_engine = PandasQueryEngine(df=df_yt, verbose=True)\n\nresponse = query_engine.query(\n    \"List the columns with missing values and the number of missing values. Only show missing values columns.\",\n)\n```", "```py\n> Pandas Instructions:\n```", "```py\ndf.isnull().sum()[df.isnull().sum() > 0]\n> Pandas Output: category                                    46\nCountry                                    122\nAbbreviation                               122\nchannel_type                                30\nvideo_views_rank                             1\ncountry_rank                               116\nchannel_type_rank                           33\nvideo_views_for_the_last_30_days            56\nsubscribers_for_last_30_days               337\ncreated_year                                 5\ncreated_month                                5\ncreated_date                                 5\nGross tertiary education enrollment (%)    123\nPopulation                                 123\nUnemployment rate                          123\nUrban_population                           123\nLatitude                                   123\nLongitude                                  123\ndtype: int64\n```", "```py\nresponse = query_engine.query(\n    \"Which channel type have the most views.\",\n)\n```", "```py\n> Pandas Instructions:\n```", "```py\neval(\"df.groupby('channel_type')['video views'].sum().idxmax()\")\n> Pandas Output: Entertainment\nEntertainment\n```", "```py\nresponse = query_engine.query(\n    \"Visualize barchat of top ten youtube channels based on subscribers and add the title.\",\n)\n```", "```py\n> Pandas Instructions:\n```", "```py\neval(\"df.nlargest(10, 'subscribers')[['Youtuber', 'subscribers']].plot(kind='bar', x='Youtuber', y='subscribers', title='Top Ten YouTube Channels Based on Subscribers')\")\n> Pandas Output: AxesSubplot(0.125,0.11;0.775x0.77)\n```"]