- en: Tensorflow Tutorial, Part 2 – Getting Started
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2017/09/tensorflow-tutorial-part-2.html](https://www.kdnuggets.com/2017/09/tensorflow-tutorial-part-2.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**By Vivek Kalyanarangan, [United Network of Professionals](https://unp.education/).**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/86cda183d7b242f18aab35d95c20b043.png)'
  prefs: []
  type: TYPE_IMG
- en: In this multi-part series, we will explore how to get started with tensorflow.
    This tensorflow tutorial will lay a solid foundation to this popular tool that
    everyone seems to be talking about. The second part is a tensorflow tutorial on
    getting started, installing and building a small use case.
  prefs: []
  type: TYPE_NORMAL
- en: This series is excerpts from a Webinar tutorial series I have conducted as part
    of the [United Network of Professionals](https://www.unp.education/). Time to
    time I will be referring to some of the slides that I used there as part of the
    talk to make it clearer.
  prefs: []
  type: TYPE_NORMAL
- en: Please don’t miss out on the live webinars where I talk about everything I write.
    Register yourself with our [upcoming webinars](https://machinelearningblogs.com/events/) to
    know about the topics we will be discussing.
  prefs: []
  type: TYPE_NORMAL
- en: This post is the first part of the multi-part series on a complete tensorflow
    tutorial –
  prefs: []
  type: TYPE_NORMAL
- en: '[Part 1: Introduction](https://machinelearningblogs.com/2017/09/07/tensorflow-tutorial-part-1-introduction/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Part 2: Getting Started'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Part 3: Building the first model'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Tensorflow Tutorial : Goals'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![](../Images/804f3d9251b44bdd6af74beac705af36.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Installing Tensorflow](#install_tensorflow)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Verifying Tensorflow Installation](#verify_install)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Before Building your first tensorflow model](#build_model)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Tensorflow
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have tensorflow already installed, you can just skip to the next section.
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Operating System
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Different operating systems have different means to install tensorflow. You
    can go through the [documentation](https://www.tensorflow.org/) for more details.
    I will just be discussing what is essential to get started.
  prefs: []
  type: TYPE_NORMAL
- en: Click the Install tab
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/de8219546295b9dfd9bbe15d0c93c04f.png)'
  prefs: []
  type: TYPE_IMG
- en: The following guides explain how to install a version of tensorflow that enables
    you to write applications in Python.
  prefs: []
  type: TYPE_NORMAL
- en: '[Installing TensorFlow on Ubuntu](https://www.tensorflow.org/install/install_linux)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Installing TensorFlow on Mac OS X](https://www.tensorflow.org/install/install_mac)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Installing TensorFlow on Windows](https://www.tensorflow.org/install/install_windows)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Installing TensorFlow from Sources](https://www.tensorflow.org/install/install_sources)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Try to follow the most basic structures with the best practices already mentioned
    in the documentation.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. GPU
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Installing Tensorflow with GPU requires you to have NVIDIA GPU. AMD video cards
    are not supported with tensorflow. NVIDIA uses low level GPU computing system
    called CUDA. It is an NVIDIA proprietary software.
  prefs: []
  type: TYPE_NORMAL
- en: One can go the OpenCL way with AMD but as of now it won’t work with tensorflow.
  prefs: []
  type: TYPE_NORMAL
- en: Also, all NVIDIA devices are not supported. Here is a list from the [NVIDIA
    documentation](https://developer.nvidia.com/cuda-gpus) listing the supported GPUs.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/000cd280b377c392476ff8db745db974.png)'
  prefs: []
  type: TYPE_IMG
- en: 3\. Environment
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: There are three environments you can leverage to setup tensorflow –
  prefs: []
  type: TYPE_NORMAL
- en: Direct – This is just a typical way of installing any software library. It directly
    interacts with the installed operating system and installs tensorflow like any
    other library. `pip` is the preferred way of direct installation
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Virtual environment – To all who are unaware of the advantages of a python virtual
    environment, a `virtualenv` is like a parallel python installation apart from
    the default python that is already installed in our system. Installing libraries
    in a virtual environment keeps the libraries separate and you will never have
    a clash of compatibility with the other libs that are installed directly. If anything
    goes wrong, you can just fire up a new virtual environment and start afresh
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Docker container – This is another way of installing tensorflow. Think of a
    typical VMware image of a guest operating system to be a docker container on steroids.
    Docker can be used to start containers that have different environments at the
    operating system, thereby allowing you to have an environment completely separate
    to what you have on your host machine. All details are clearly labelled out in
    the tensorflow documentation
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 4\. Python Version
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The 2.7 version from Python 2 and 3.3 or later from Python 3 are supported.
    This holds true for all operating systems.
  prefs: []
  type: TYPE_NORMAL
- en: As of now, Windows only supports version 3.5\. Python 2 with windows is a combination
    that is not supported
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Verifying the Installation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Once tensorflow is installed, irrespective of the operating system, environment
    or the the python version, you should run the following script to verify tensorflow
    is up and running.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Once this code runs and prints the output successfully, congratulations! You
    have successfully installed tensorflow. Let’s move to the next section to build
    our first application
  prefs: []
  type: TYPE_NORMAL
- en: Before Building your first tensorflow model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tensors
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The following are the three types of tensors we need to learn before getting
    started.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Type** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| Constant | Constant values |'
  prefs: []
  type: TYPE_TB
- en: '| Variable | Values adjusted in the graph |'
  prefs: []
  type: TYPE_TB
- en: '| Placeholder | Used to pass data in the graph |'
  prefs: []
  type: TYPE_TB
- en: Before diving into the hands on, I just want to introduce a few more terms in
    the tensorflow terminologies along with their meanings.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0a104d3b06b34450c35480ed5b10b0ba.png)'
  prefs: []
  type: TYPE_IMG
- en: Rank – Dimensionality of a tensor
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Shape – Shape of a tensor. Related to rank
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The above diagram should help in understanding. Below we have the different
    data types in supported by Tensorflow.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f6b2489ed45aed366e0d963cda105989.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Note:*** Quantized values [qint8, qint16 and quint8] are special values for
    tensorflow that help reduce the size of the data. In fact, Google has gone to
    the extent of introducing Tensorflow Processing Units (TPUs) to speed up computation
    by leveraging quantized values*'
  prefs: []
  type: TYPE_NORMAL
- en: Prepare the Data
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: We will quickly generate some data to get started. In this case, we will generate
    house size to predict house prices. The goal here isn’t to build a sophisticated
    house price predictor, but to get things moving in tensorflow in the simplest
    possible way.
  prefs: []
  type: TYPE_NORMAL
- en: We will generate some data using the below python code –
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This generates the below output [This is a plot of the generated data]
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/13efc08549f7833aae8f5cf050d6d3a0.png)'
  prefs: []
  type: TYPE_IMG
- en: Next, we are going to normalize the data. This helps in bringing the data in
    the same scale which in turn can lead to faster convergence.
  prefs: []
  type: TYPE_NORMAL
- en: We also split it into train and test data as part of the data science best practices.
    We will train our model on the training data and test our model on the test data
    to see how accurate our predictions are.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Conclusion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I hope this sets the expectations for what is about to come. In the next post
    we will build our first TensorFlow model.
  prefs: []
  type: TYPE_NORMAL
- en: Please don’t miss out on the live webinars where I talk about everything I write.
    Register yourself with our [upcoming webinars](https://machinelearningblogs.com/events/) to
    know about the topics we will be discussing. Happy Coding!
  prefs: []
  type: TYPE_NORMAL
- en: In the next part, we will finally be ready to train our first tensorflow model
    on house prices. It will give us our first hands on experience with tensorflow!
  prefs: []
  type: TYPE_NORMAL
- en: I am embedding the original presentation below –
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://machinelearningblogs.com/2017/09/14/tensorflow-tutorial-part-2-getting-started/).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio:** [**Vivek Kalyanarangan**](https://www.linkedin.com/in/%E2%9C%AA-vivek-kalyanarangan-149323a1/?ppe=1)
    is a Data Scientist, Blogger, Guitar Player and geeks out on new technology through
    and through.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Tensorflow Tutorial: Part 1 – Introduction](/2017/09/tensorflow-tutorial-part-1.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Search for the Fastest Keras Deep Learning Backend](/2017/09/search-fastest-keras-deep-learning-backend.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PyTorch or TensorFlow?](/2017/08/pytorch-tensorflow.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Federated Learning: Collaborative Machine Learning with a Tutorial…](https://www.kdnuggets.com/2021/12/federated-learning-collaborative-machine-learning-tutorial-get-started.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Started with Automated Text Summarization](https://www.kdnuggets.com/2019/11/getting-started-automated-text-summarization.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Started Cleaning Data](https://www.kdnuggets.com/2022/01/getting-started-cleaning-data.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Started with SQL Cheatsheet](https://www.kdnuggets.com/2022/08/getting-started-sql-cheatsheet.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Started with spaCy for NLP](https://www.kdnuggets.com/2022/11/getting-started-spacy-nlp.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Started with PyCaret](https://www.kdnuggets.com/2022/11/getting-started-pycaret.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
