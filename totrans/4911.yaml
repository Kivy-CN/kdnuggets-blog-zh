- en: The Python Graph Gallery
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2017/11/python-graph-gallery.html](https://www.kdnuggets.com/2017/11/python-graph-gallery.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**By [Yan Holtz](https://holtzyan.wordpress.com/), Queensland Brain Institute
    of Brisbane**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Python](https://www.python.org/) is currently the leading programming language
    in the field of data science, followed close by [R](https://www.r-project.org/)
    [ref: [KDnuggets](https://www.kdnuggets.com/2017/08/python-overtakes-r-leader-analytics-data-science.html)].
    Data visualization is a key step in this area, and Python offers [great possibilities](https://python-graph-gallery.com/all-charts/)
    when it comes to representing your data graphically. However, the huge number
    of tools and the potential complexity of the documentation makes it difficult
    to build a desired chart.'
  prefs: []
  type: TYPE_NORMAL
- en: The [Python Graph Gallery](https://www.python-graph-gallery.com/) is a website
    that displays hundreds of graphics made with python, always providing a reproducible
    code snippet.
  prefs: []
  type: TYPE_NORMAL
- en: '**400 graphics and 40 sections**'
  prefs: []
  type: TYPE_NORMAL
- en: 'The gallery currently provides about 400 distinct charts organized in 40 sections.
    Each section is represented by a logo made by designer [Conor Healy](http://www.conor.fr/indexEN.html).
    The color depends of the topic of the graphic: distribution, correlation, part
    of a whole, maps, flow, evolution… This classification is inspired from the [graphic
    continuum](https://policyviz.com/2014/09/09/graphic-continuum/) and should allow
    you to quickly find the chart you need.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Python Graph Gallery 1](../Images/1b0d88303eaba7d89fe57e346452ffdd.png)'
  prefs: []
  type: TYPE_IMG
- en: Of course, most common plot types like [barplot](https://python-graph-gallery.com/barplot/),
    [scatterplot](http://python-graph-gallery.com/scatter-plot/), [boxplot](http://python-graph-gallery.com/boxplot/)
    or [histograms](http://python-graph-gallery.com/histogram/) are present. But some
    less common data visualization types are present as well, like [lollipop](https://python-graph-gallery.com/lollipop-plot/)
    plot, [bubble](https://python-graph-gallery.com/bubble-plot/) plot, [2D density](https://python-graph-gallery.com/2d-density-plot/)
    plot or [wordclouds](https://python-graph-gallery.com/wordcloud/).
  prefs: []
  type: TYPE_NORMAL
- en: '**From easy to tricky**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you enter a chart section, several examples are displayed, from the easiest
    to the hardest. Usually, the first example describes how the input dataset must
    be formatted, and how to make the graphic using the default parameters. Explanations
    are provided, code is shortened to its strict minimum and commented line by line,
    this makes it easy to understand how the function works. Here is an overview of
    the [most simple density plot](https://python-graph-gallery.com/70-basic-density-plot-with-seaborn/) you
    can do:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b83be76f48d5ae9ad72d1bc753e56fff.png)'
  prefs: []
  type: TYPE_IMG
- en: Progressively, examples lead you from a very basic version to highly customized
    charts. Each example aims to explain one particular tip, like customizing colours,
    flipping axes, adding several groups and so on. At the end of the section, you
    will find some ‘real life examples’ combining all these tips to get a nice customized
    figure.
  prefs: []
  type: TYPE_NORMAL
- en: '![Python Graph Gallery 3](../Images/16a4a8d3027e4862955499364f486c8a.png)'
  prefs: []
  type: TYPE_IMG
- en: '**A focus on Matplotlib and Seaborn**'
  prefs: []
  type: TYPE_NORMAL
- en: A bunch of libraries exist when it comes to making charts with python. I decided
    to rely mainly on [Matplotlib](https://python-graph-gallery.com/matplotlib/) and
    [Seaborn](https://python-graph-gallery.com/seaborn/), these are currently the
    main 2 tools used. Almost every type of chart is feasible with them. When it is
    not, I used other libraries like [folium](https://python-graph-gallery.com/map/)
    for maps or [networkX](https://python-graph-gallery.com/network-chart/) for networks.
  prefs: []
  type: TYPE_NORMAL
- en: Note that both Matplotlib and Seaborn have a dedicated page showing tips generic
    to every type of chart, like customizing axes and titles, calling different themes,
    controlling colours... These pages can be useful to quickly find again the every-day
    code snippets that we tend to forget.
  prefs: []
  type: TYPE_NORMAL
- en: '![Python Graph Gallery 4](../Images/b678795963ffe12615bc1c53689dabfc.png)'
  prefs: []
  type: TYPE_IMG
- en: Visit this link [here](https://python-graph-gallery.com/191-custom-axis-on-matplotlib-chart/) for
    the code.
  prefs: []
  type: TYPE_NORMAL
- en: '**Conclusion**'
  prefs: []
  type: TYPE_NORMAL
- en: The [Python Graph Gallery](http://www.python-graph-gallery.com/) displays hundreds
    of graphics and can hopefully help you to quickly realise the chart you need.
    In this sense, it mainly aims to help users on a technical point of view.
  prefs: []
  type: TYPE_NORMAL
- en: 'However, the goal is also to increase the knowledge of users in the field of
    data visualization:'
  prefs: []
  type: TYPE_NORMAL
- en: By visiting the website, you may discover new type of dataviz options that could
    fit your data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each section is introduced by a short description explaining when the chart
    type is advised
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A bad chart section is sometimes included at the bottom of a section, warning
    you about the common mistakes made on this type of chart
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The gallery is a project developed by Yan Holtz during his nights and holidays.
    Thus, please be indulgent concerning bugs, imprecisions and English language mistakes.
    Any bug or feedback is strongly welcome at [yan.holtz.data@gmail.com](mailto:yan.holtz.data@gmail.com)
    or via twitter: [@R_Graph_Gallery](https://twitter.com/R_Graph_Gallery?lang=en).
    Last but not least, note that the Python graph gallery has a twin sister: the
    [R graph gallery](http://www.r-graph-gallery.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Author Bio**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Yan Holtz](https://holtzyan.wordpress.com/) is a passionate data analyst and
    bioinformatician currently working for the Queensland Brain Institute of Brisbane.
     He has a special attraction for data visualization which lead him to build the
    [R](http://www.r-graph-gallery.com/) and the [Python](https://www.python-graph-gallery.com/)
    graph galleries. He can be reached at: [yan.holtz.data@gmail.com](mailto:yan.holtz.data@gmail.com).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Homepage: [https://holtzyan.wordpress.com/](https://holtzyan.wordpress.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Creating Data Visualization in Matplotlib](https://www.kdnuggets.com/2017/01/datascience-data-visualization-matplotlib.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[10 Useful Python Data Visualization Libraries for Any Discipline](https://www.kdnuggets.com/2016/06/python-data-visualization-libraries.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Common Mistakes That Lead to Bad Data Visualization](https://www.kdnuggets.com/2017/10/5-common-mistakes-bad-data-visualization.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Make Amazing Visualizations with Python Graph Gallery](https://www.kdnuggets.com/2022/12/make-amazing-visualizations-python-graph-gallery.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Comprehensive Survey on Trustworthy Graph Neural Networks:…](https://www.kdnuggets.com/2022/05/comprehensive-survey-trustworthy-graph-neural-networks-privacy-robustness-fairness-explainability.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Use Graph Theory to Scout Soccer](https://www.kdnuggets.com/2022/11/graph-theory-scout-soccer.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Build a Real-Time Recommendation Engine Using Graph Databases](https://www.kdnuggets.com/2023/08/build-realtime-recommendation-engine-graph-databases.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Graph of Thoughts: A New Paradigm for Elaborate Problem-Solving in…](https://www.kdnuggets.com/graph-of-thoughts-a-new-paradigm-for-elaborate-problem-solving-in-large-language-models)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Started with Graph Database Queries, with Cheat Sheet!](https://www.kdnuggets.com/getting-started-with-graph-database-queries-with-cheat-sheet)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
