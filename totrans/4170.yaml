- en: Write Clean Python Code Using Pipes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**By [Khuyen Tran](https://www.linkedin.com/in/khuyen-tran-1401/), Data Science
    Intern**'
  prefs: []
  type: TYPE_NORMAL
- en: Motivation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`map` and `filter` are two efficient Python methods to work with iterables.
    However, the code can look messy if you use both `map` and `filter` at the same
    time.'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/26fad68726a5d69256b7604825d66940.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Wouldn’t be nice if you can use pipes `|` to apply multiple methods on an iterable
    like below?
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/34e15612a6a99cfaa62ac5afd6c1c6e7.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: The library Pipe allows you to do exactly that.
  prefs: []
  type: TYPE_NORMAL
- en: What is Pipe?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Pipe](https://github.com/JulienPalard/Pipe) is a Python library that enables
    you to use pipes in Python. A pipe (`|`) passes the results of one method to another
    method.'
  prefs: []
  type: TYPE_NORMAL
- en: I like Pipe because it makes my code look cleaner when applying multiple methods
    to a Python iterable. Since Pipe only provides a few methods, it is also very
    easy to learn Pipe. In this article, I will show you some methods I found the
    most useful.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install Pipe, type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Where — Filter Elements in an Iterable
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Similar to SQL, Pipe’s `where` method can also be used to filter elements in
    an iterable.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7a15fc6474f7fac98aeb234d46f3d22b.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Select — Apply a Function to an Iterable
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `select` method is similar to the `map` method. `select` applies a method
    to each element of an iterable.
  prefs: []
  type: TYPE_NORMAL
- en: In the code below, I use `select` to multiply each element in the list by 2.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9bf7eaee1a9bb411f55f8cc09cd5c5ff.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, you might wonder: Why do we need the methods `where` and `select` if they
    have the same functionalities as `map` and `filter` ?'
  prefs: []
  type: TYPE_NORMAL
- en: It is because you can insert one method after another method using pipes. As
    a result, using pipes removes nested parentheses and makes the code more readable.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/34e15612a6a99cfaa62ac5afd6c1c6e7.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Unfold Iterables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: chain — Chain a Sequence of Iterables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It can be a pain to work with a nested iterable. Luckily, you can use `chain` to
    chain a sequence of iterables.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/92f59c0e36e157f3297cb328782be4a5.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Even though the iterable is less nested after applying `chain`, we still have
    a nested list. To deal with a deeply nested list, we can use `traverse` instead.
  prefs: []
  type: TYPE_NORMAL
- en: traverse — Recursively Unfold Iterables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `traverse` method can be used to recursively unfold iterables. Thus, you
    can use this method to turn a deeply nested list into a flat list.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1a5143597587aa2eac2c804ceeef9ffa.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Let’s integrate this method with the `select` method to get the values of a
    dictionary and flatten the list.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/83a8a0af5bb38e72e6646b3f42fbe7f0.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Pretty cool!
  prefs: []
  type: TYPE_NORMAL
- en: Group Elements in a List
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Sometimes, it might be useful to group elements in a list using a certain function.
    That could be easily done with the `groupby` method.
  prefs: []
  type: TYPE_NORMAL
- en: To see how this method works, let’s turn a list of numbers into a dictionary
    that groups numbers based on whether they are even or odd.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/637fc5ccf9f573625b2d94a0af8b06d7.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'In the code above, we use `groupby` to group numbers into the`Even` group and
    the`Odd` group. The output after applying this method looks like the below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Next, we use `select` to turn a list of tuples into a list of dictionaries whose
    keys are the first elements in the tuples and values are the second elements in
    the tuples.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Cool! To get only the values that are greater than 2, we can add the `where` method
    inside the `select` method:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c8bfc0300e765749d13dc3cad84b019c.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Note that there are no longer `2` and `1` in the outputs.
  prefs: []
  type: TYPE_NORMAL
- en: dedup — Deduplicate Values Using a Key
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `dedup` method removes duplicates in a list.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9df41f88fc23e61fc0e7513ca3eebcc2.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: That might not sound interesting since the `set` method can do the same thing.
    However, this method is more flexible since it enables you to get unique elements
    using a key.
  prefs: []
  type: TYPE_NORMAL
- en: For example, you can use this method to get a unique element that is smaller
    than 5 and another unique element that is larger than or equal to 5.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d19d7abd317883a464deeacdd0018073.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s combine this method with `select` and `where` to get the values of
    a dictionary that has duplicated keys and `None` values.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4c4ec094c3fefc8c0e362a8c7b61eafa.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'In the code above, we:'
  prefs: []
  type: TYPE_NORMAL
- en: remove items with the same `name`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: get the values of `count`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: only choose the values that are integers.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Within a few lines of code, we can apply multiple methods to an iterable while
    still keeping the code clean. Pretty cool, isn’t it?
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Congratulations! You have just learned how to use pipe to keep your code clean
    and short. I hope this article will give you the knowledge to turn complicated
    operations on an iterable into one simple line of code.
  prefs: []
  type: TYPE_NORMAL
- en: 'Feel free to play and fork the source code of this article here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[**Data-science/pipe.ipynb at master · khuyentran1401/Data-science**](https://github.com/khuyentran1401/Data-science/blob/master/productive_tools/pipe.ipynb)'
  prefs: []
  type: TYPE_NORMAL
- en: I like to write about basic data science concepts and play with different algorithms
    and data science tools. You could connect with me on [LinkedIn](https://www.linkedin.com/in/khuyen-tran-1401/) and [Twitter](https://twitter.com/KhuyenTran16).
  prefs: []
  type: TYPE_NORMAL
- en: 'Star [this repo](https://github.com/khuyentran1401/Data-science) if you want
    to check out the codes for all of the articles I have written. Follow me on Medium
    to stay informed with my latest data science articles like these:'
  prefs: []
  type: TYPE_NORMAL
- en: '[**Python Clean Code: 6 Best Practices to Make your Python Functions more Readable**](https://towardsdatascience.com/python-clean-code-6-best-practices-to-make-your-python-functions-more-readable-7ea4c6171d60)'
  prefs: []
  type: TYPE_NORMAL
- en: '[**4 pre-commit Plugins to Automate Code Reviewing and Formatting in Python**](https://towardsdatascience.com/4-pre-commit-plugins-to-automate-code-reviewing-and-formatting-in-python-c80c6d2e9f5)'
  prefs: []
  type: TYPE_NORMAL
- en: '[**Pydash: A Kitchen Sink of Missing Python Utilities**](https://towardsdatascience.com/pydash-a-bucket-of-missing-python-utilities-5d10365be4fc)'
  prefs: []
  type: TYPE_NORMAL
- en: '[**3 Python Tricks to Read, Create, and Run Multiple Files Automatically**](https://towardsdatascience.com/3-python-tricks-to-read-create-and-run-multiple-files-automatically-5221ebaad2ba)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Khuyen Tran](https://www.linkedin.com/in/khuyen-tran-1401/)** is a
    prolific data science writer, and has written [an impressive collection of useful
    data science topics along with code and articles](https://github.com/khuyentran1401/Data-science).
    Khuyne is currently looking for a machine learning engineer role, a data scientist
    role, or a developer advocate role in Bay Area after May 2022, so please reach
    out if you are looking for someone with her set of skills.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/write-clean-python-code-using-pipes-1239a0f3abf5).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[5 Advanced Tips on Python Sequences](/2021/11/5-advanced-tips-python-sequences.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Beginner’s Guide to End to End Machine Learning](/2021/12/beginner-guide-end-end-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Spreadsheet that Generates Python: The Mito JupyterLab Extension](/2021/11/spreadsheet-generates-python-mito-jupyterlab-extension.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Building a solid data team](https://www.kdnuggets.com/2021/12/build-solid-data-team.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
