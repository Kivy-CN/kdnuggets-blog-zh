- en: Visualizing Decision Trees with Python (Scikit-learn, Graphviz, Matplotlib)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 可视化决策树（Scikit-learn，Graphviz，Matplotlib）
- en: 原文：[https://www.kdnuggets.com/2020/04/visualizing-decision-trees-python.html](https://www.kdnuggets.com/2020/04/visualizing-decision-trees-python.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/04/visualizing-decision-trees-python.html](https://www.kdnuggets.com/2020/04/visualizing-decision-trees-python.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Michael Galarnyk](https://www.linkedin.com/in/michaelgalarnyk/), Data
    Scientist**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者 [Michael Galarnyk](https://www.linkedin.com/in/michaelgalarnyk/)，数据科学家**'
- en: '![Figure](../Images/fb382bbd316bf7f8b976fa63f307ca8c.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../Images/fb382bbd316bf7f8b976fa63f307ca8c.png)'
- en: Image from my [Understanding Decision Trees for Classification (Python) Tutorial](https://towardsdatascience.com/understanding-decision-trees-for-classification-python-9663d683c952).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源于我的 [理解分类的决策树（Python）教程](https://towardsdatascience.com/understanding-decision-trees-for-classification-python-9663d683c952)。
- en: '* * *'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前 3 个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你组织的 IT'
- en: '* * *'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Decision trees are a popular supervised learning method for a variety of reasons.
    Benefits of decision trees include that they can be used for both regression and
    classification, they don’t require feature scaling, and they are relatively easy
    to interpret as you can visualize decision trees. This is not only a powerful
    way to understand your model, but also to communicate how your model works. Consequently,
    it would help to know how to make a visualization based on your model.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 决策树是一种流行的监督学习方法，原因有很多。决策树的优点包括它们可以用于回归和分类，不需要特征缩放，并且相对容易解释，因为你可以可视化决策树。这不仅是理解模型的强大方式，也有助于传达模型的工作原理。因此，了解如何基于模型进行可视化是有帮助的。
- en: 'This tutorial covers:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程包括：
- en: How to Fit a Decision Tree Model using Scikit-Learn
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用 Scikit-Learn 拟合决策树模型
- en: How to Visualize Decision Trees using Matplotlib
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用 Matplotlib 可视化决策树
- en: How to Visualize Decision Trees using Graphviz (what is Graphviz, how to install
    it on Mac and Windows, and how to use it to visualize decision trees)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用 Graphviz 可视化决策树（什么是 Graphviz，如何在 Mac 和 Windows 上安装它，以及如何使用它来可视化决策树）
- en: How to Visualize Individual Decision Trees from Bagged Trees or Random Forests®
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何可视化袋装树或随机森林中的单个决策树
- en: As always, the code used in this tutorial is available on my [GitHub](https://github.com/mGalarnyk/Python_Tutorials/blob/master/Sklearn/CART/Visualization/DecisionTreesVisualization.ipynb).
    With that, let’s get started!
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一如既往，本教程中使用的代码可以在我的 [GitHub](https://github.com/mGalarnyk/Python_Tutorials/blob/master/Sklearn/CART/Visualization/DecisionTreesVisualization.ipynb)
    上找到。让我们开始吧！
- en: How to Fit a Decision Tree Model using Scikit-Learn
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何使用 Scikit-Learn 拟合决策树模型
- en: In order to visualize decision trees, we need first need to fit a decision tree
    model using scikit-learn. If this section is not clear, I encourage you to read
    my [Understanding Decision Trees for Classification (Python) tutorial](https://towardsdatascience.com/understanding-decision-trees-for-classification-python-9663d683c952) as
    I go into a lot of detail on how decision trees work and how to use them.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了可视化决策树，我们首先需要使用 scikit-learn 拟合一个决策树模型。如果这一部分不清楚，我鼓励你阅读我的 [理解分类的决策树（Python）教程](https://towardsdatascience.com/understanding-decision-trees-for-classification-python-9663d683c952)，因为我详细讲解了决策树的工作原理以及如何使用它们。
- en: Import Libraries
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 导入库
- en: The following import statements are what we will use for this section of the
    tutorial.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 以下导入语句是我们在本教程这一部分中将使用的。
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Load the Dataset
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加载数据集
- en: The Iris dataset is one of datasets scikit-learn comes with that do not require
    the downloading of any file from some external website. The code below loads the
    iris dataset.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Iris 数据集是 scikit-learn 附带的一个数据集，无需从外部网站下载任何文件。下面的代码加载了 iris 数据集。
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![Figure](../Images/b0dad4c5d86a7accf90b27aa29f1cf59.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/b0dad4c5d86a7accf90b27aa29f1cf59.png)'
- en: Original Pandas df (features + target)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 原始 Pandas df（特征 + 目标）
- en: Splitting Data into Training and Test Sets
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将数据拆分为训练集和测试集
- en: The code below puts 75% of the data into a training set and 25% of the data
    into a test set.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码将 75% 的数据放入训练集中，将 25% 的数据放入测试集中。
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![Figure](../Images/9d5993aa8f78a54086dec8b135c7ee7b.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/9d5993aa8f78a54086dec8b135c7ee7b.png)'
- en: The colors in the image indicate which variable (X_train, X_test, Y_train, Y_test)
    the data from the dataframe df went to for a particular train test split. Image
    by [Michael Galarnyk](https://twitter.com/GalarnykMichael).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图像中的颜色表示数据来自数据框 df 的哪个变量（X_train、X_test、Y_train、Y_test），以进行特定的训练测试分割。图片由 [Michael
    Galarnyk](https://twitter.com/GalarnykMichael) 提供。
- en: Scikit-learn 4-Step Modeling Pattern
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Scikit-learn 4 步建模模式
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: How to Visualize Decision Trees using Matplotlib
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何使用 Matplotlib 可视化决策树
- en: As of scikit-learn version 21.0 (roughly May 2019), Decision Trees can now be
    plotted with matplotlib using scikit-learn’s `[**tree.plot_tree**](https://scikit-learn.org/stable/modules/generated/sklearn.tree.plot_tree.html#sklearn.tree.plot_tree)` without
    relying on the `dot` library which is a hard-to-install dependency which we will
    cover later on in the blog post.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 从 scikit-learn 版本 21.0（大约 2019 年 5 月）开始，决策树现在可以使用 scikit-learn 的 `[**tree.plot_tree**](https://scikit-learn.org/stable/modules/generated/sklearn.tree.plot_tree.html#sklearn.tree.plot_tree)`
    绘制，而无需依赖 `dot` 库，这是一个难以安装的依赖项，我们将在博客文章中后面部分讨论。
- en: The code below plots a decision tree using scikit-learn.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码使用 scikit-learn 绘制决策树。
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Figure](../Images/b7e93c00e7ff79f78413d8a485d00751.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/b7e93c00e7ff79f78413d8a485d00751.png)'
- en: This is not the most interpretable tree yet.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这还不是最具可解释性的树。
- en: In addition to adding the code to allow you to save your image, the code below
    tries to make the decision tree more interpretable by adding in feature and class
    names (as well as setting `filled = True`).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 除了添加代码以允许你保存图像外，下面的代码尝试通过添加特征和类名称（以及设置 `filled = True`）使决策树更具可解释性。
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/0ce9a81306bca7e1509d042fd8999dc1.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0ce9a81306bca7e1509d042fd8999dc1.png)'
- en: How to Visualize Decision Trees using Graphviz
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何使用 Graphviz 可视化决策树
- en: '![Figure](../Images/31cfb0690b8025e8ab0056954eed2681.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/31cfb0690b8025e8ab0056954eed2681.png)'
- en: Decision Tree produced through Graphviz. Note that I edited the file to have
    text colors correspond to whether they are leaf/terminal nodes or decision nodes
    using a text editor.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 Graphviz 生成的决策树。请注意，我编辑了文件，使文本颜色与叶子/终端节点或决策节点相对应，使用了文本编辑器。
- en: '`Graphviz` is open source graph visualization software. Graph visualization
    is a way of representing structural information as diagrams of abstract graphs
    and networks. In data science, one use of `Graphviz` is to visualize decision
    trees. I should note that the reason why I am going over Graphviz after covering
    Matplotlib is that getting this to work can be difficult. The first part of this
    process involves creating a dot file. A dot file is a Graphviz representation
    of a decision tree. The problem is that using Graphviz to convert the dot file
    into an image file (png, jpg, etc) can be difficult. There are a couple ways to
    do this including: installing `python-graphviz` though Anaconda, installing Graphviz
    through Homebrew (Mac), installing Graphviz executables from the official site
    (Windows), and using an online converter on the contents of your dot file to convert
    it into an image.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`Graphviz` 是开源的图形可视化软件。图形可视化是一种将结构信息表示为抽象图和网络图的方式。在数据科学中，`Graphviz` 的一个用途是可视化决策树。我需要说明的是，我在讲解
    Matplotlib 之后介绍 Graphviz 的原因是因为使其正常工作可能会很困难。这一过程的第一部分涉及创建 dot 文件。dot 文件是决策树的 Graphviz
    表示。问题在于使用 Graphviz 将 dot 文件转换为图像文件（png、jpg 等）可能会很困难。有几种方法可以做到这一点，包括：通过 Anaconda
    安装 `python-graphviz`，通过 Homebrew（Mac）安装 Graphviz，从官方站点（Windows）安装 Graphviz 可执行文件，或使用在线转换器将
    dot 文件的内容转换为图像。'
- en: '![Figure](../Images/ba1305b0404993219b0b3a4d38075251.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/ba1305b0404993219b0b3a4d38075251.png)'
- en: Creating the dot file is usually not a problem. Converting the dot file to a
    png file can be difficult.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 dot 文件通常不是问题。将 dot 文件转换为 png 文件可能会很困难。
- en: Export your model to a dot file
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将模型导出为 dot 文件
- en: The code below code will work on any operating system as python generates the
    dot file and exports it as a file named `tree.dot`.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码将在任何操作系统上工作，因为 python 生成 dot 文件并将其导出为名为 `tree.dot` 的文件。
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Installing and Using Graphviz
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装和使用 Graphviz
- en: 'Converting the dot file into an image file (png, jpg, etc) typically requires
    the installation of Graphviz which depends on your operating system and a host
    of other things. The goal of this section is to help people try and solve the
    common issue of getting the following error. `dot: command not found`.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '将 dot 文件转换为图像文件（png、jpg 等）通常需要安装 Graphviz，这取决于你的操作系统和其他一些因素。本节的目的是帮助人们尝试解决常见的错误，即`dot:
    command not found`。'
- en: '![Figure](../Images/9989054c402acde650472d475716dbeb.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![Figure](../Images/9989054c402acde650472d475716dbeb.png)'
- en: '`dot: command not found`'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`dot: command not found`'
- en: '**How to Install and Use on Mac through Anaconda**'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**如何通过 Anaconda 在 Mac 上安装和使用**'
- en: To be able to install Graphviz on your Mac through this method, you first need
    to have Anaconda installed (If you don’t have Anaconda installed, you can learn
    how to install it [here](https://www.datacamp.com/community/tutorials/installing-anaconda-mac-os-x)).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要通过这种方法在 Mac 上安装 Graphviz，你首先需要安装 Anaconda（如果你没有安装 Anaconda，你可以在[这里](https://www.datacamp.com/community/tutorials/installing-anaconda-mac-os-x)学习如何安装）。
- en: Open a terminal. You can do this by clicking on the Spotlight magnifying glass
    at the top right of the screen, type terminal and then click on the Terminal icon.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 打开终端。你可以通过点击屏幕右上角的 Spotlight 放大镜，输入 terminal 然后点击终端图标来完成。
- en: '![](../Images/74de505821de993e49ce79a3f4a3dbbd.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/74de505821de993e49ce79a3f4a3dbbd.png)'
- en: Type the command below to install Graphviz.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 输入下面的命令以安装 Graphviz。
- en: '[PRE7]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: After that, you should be able to use the `dot` command below to convert the
    dot file into a png file.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，你应该能够使用下面的`dot`命令将 dot 文件转换为 png 文件。
- en: '[PRE8]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**How to Install and Use on Mac through Homebrew**'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**如何通过 Homebrew 在 Mac 上安装和使用**'
- en: If you don’t have Anaconda or just want another way of installing Graphviz on
    your Mac, you can use [Homebrew](https://brew.sh/). I previously wrote an article
    on how to install Homebrew and use it to convert a dot file into an image file [here](https://medium.com/@GalarnykMichael/how-to-install-and-use-homebrew-80eeb55f73e9) (see
    the Homebrew to Help Visualize Decision Trees section of the tutorial).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有 Anaconda 或者只是想要另一种在 Mac 上安装 Graphviz 的方式，你可以使用[Homebrew](https://brew.sh/)。我之前写了一篇关于如何安装
    Homebrew 并使用它将 dot 文件转换为图像文件的文章，[请点击这里](https://medium.com/@GalarnykMichael/how-to-install-and-use-homebrew-80eeb55f73e9)（请参阅教程中的
    Homebrew 帮助可视化决策树部分）。
- en: '**How to Install and Use on Windows through Anaconda**'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**如何通过 Anaconda 在 Windows 上安装和使用**'
- en: This is the method I prefer on Windows. To be able to install Graphviz on your
    Windows through this method, you first need to have Anaconda installed (If you
    don’t have Anaconda installed, you can learn how to install it [here](https://medium.com/@GalarnykMichael/install-python-anaconda-on-windows-2020-f8e188f9a63d)).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在 Windows 上首选的方法。要通过这种方法在 Windows 上安装 Graphviz，你首先需要安装 Anaconda（如果你没有安装 Anaconda，你可以在[这里](https://medium.com/@GalarnykMichael/install-python-anaconda-on-windows-2020-f8e188f9a63d)学习如何安装）。
- en: Open a terminal/command prompt and enter the command below to install Graphviz.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 打开终端/命令提示符，输入下面的命令以安装 Graphviz。
- en: '[PRE9]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: After that, you should be able to use the `dot` command below to convert the
    dot file into a png file.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，你应该能够使用下面的`dot`命令将 dot 文件转换为 png 文件。
- en: '[PRE10]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![Figure](../Images/18649899806d0dd0b1e8f157dbcdcf48.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![Figure](../Images/18649899806d0dd0b1e8f157dbcdcf48.png)'
- en: Windows installing of Graphviz through conda. This should fix the ‘dot’ is not
    recognized as an internal or external command, operable program or batch file
    issue.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 conda 在 Windows 上安装 Graphviz。这应该可以解决‘dot’无法识别为内部或外部命令、可操作程序或批处理文件的问题。
- en: '**How to Install and Use on Windows through Graphviz Executable**'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**如何通过 Graphviz 可执行文件在 Windows 上安装和使用**'
- en: If you don’t have Anaconda or just want another way of installing Graphviz on
    your Windows, you can use the following link to [download and install it](https://graphviz.gitlab.io/_pages/Download/Download_windows.html).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有 Anaconda 或者只是想要另一种在 Windows 上安装 Graphviz 的方式，你可以使用以下链接[下载并安装](https://graphviz.gitlab.io/_pages/Download/Download_windows.html)。
- en: '![Figure](../Images/c2a1388c18dbd5a6823bc0aca9fda749.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![Figure](../Images/c2a1388c18dbd5a6823bc0aca9fda749.png)'
- en: If you aren’t familiar with altering the PATH variable and want to use dot on
    the command line, I encourage other approaches. [There are many Stackoverflow
    questions based on this particular issue](https://datascience.stackexchange.com/questions/37428/graphviz-not-working-when-imported-inside-pydotplus-graphvizs-executables-not).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不熟悉更改 PATH 变量，并且希望在命令行中使用 dot，我建议尝试其他方法。[有关此特定问题的许多 Stackoverflow 问题](https://datascience.stackexchange.com/questions/37428/graphviz-not-working-when-imported-inside-pydotplus-graphvizs-executables-not)。
- en: How to Use an Online Converter to Visualize your Decision Trees
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何使用在线转换器可视化你的决策树
- en: If all else fails or you simply don’t want to install anything, you can use [an
    online converter](https://dreampuf.github.io/GraphvizOnline).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切都失败了或者你根本不想安装任何东西，你可以使用[在线转换器](https://dreampuf.github.io/GraphvizOnline)。
- en: In the image below, I opened the file with Sublime Text (though there are many
    different programs that can open/read a dot file) and copied the content of the
    file.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，我用 Sublime Text 打开了文件（虽然有很多不同的程序可以打开/读取 dot 文件），并复制了文件的内容。
- en: '![Figure](../Images/1a95f1cbd651e9efc3575ea2b430b338.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/1a95f1cbd651e9efc3575ea2b430b338.png)'
- en: Copying the contents of a dot file
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 复制 dot 文件的内容
- en: In the image below, I pasted the content from the dot file onto the left side
    of the online converter. You can then choose what format you want and then save
    the image on the right side of the screen.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，我将 dot 文件的内容粘贴到在线转换器的左侧。然后你可以选择你想要的格式，并在屏幕右侧保存图像。
- en: '![Figure](../Images/b72e7e6e43ab7a013592d3e78bd70ebe.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/b72e7e6e43ab7a013592d3e78bd70ebe.png)'
- en: Save visualization to computer
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 将可视化保存到计算机
- en: Keep in mind that there are [other online converters](http://www.webgraphviz.com/) that
    can help accomplish the same task.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，还有其他的[在线转换器](http://www.webgraphviz.com/)可以帮助完成相同的任务。
- en: How to Visualize Individual Decision Trees from Bagged Trees or Random Forests®
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何从 Bagged Trees 或随机森林®中可视化单独的决策树
- en: '![Figure](../Images/15fab36e1c278586ce160b8d42ba9952.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/15fab36e1c278586ce160b8d42ba9952.png)'
- en: This section was of the tutorial was inspired from [Will Koehrsen](https://twitter.com/koehrsen_will)’s [How
    to Visualize a Decision Tree from the random forest algorithm in Python using
    Scikit-Learn](https://towardsdatascience.com/how-to-visualize-a-decision-tree-from-a-random-forest-in-python-using-scikit-learn-38ad2d75f21c).
    Image by [Michael Galarnyk](https://twitter.com/GalarnykMichael).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 本节教程的灵感来源于[Will Koehrsen](https://twitter.com/koehrsen_will)的[如何使用 Scikit-Learn
    在 Python 中可视化随机森林算法中的决策树](https://towardsdatascience.com/how-to-visualize-a-decision-tree-from-a-random-forest-in-python-using-scikit-learn-38ad2d75f21c)。图片由[Michael
    Galarnyk](https://twitter.com/GalarnykMichael)提供。
- en: A weakness of decision trees is that they don’t tend to have the best predictive
    accuracy. This is partially because of high variance, meaning that different splits
    in the training data can lead to very different trees.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 决策树的一个弱点是它们通常没有最佳的预测准确度。这部分是因为高方差，这意味着训练数据中的不同分裂可能导致非常不同的树。
- en: The image above could be a diagram for Bagged Trees or the random forest algorithm
    models which are ensemble methods. This means using multiple learning algorithms
    to obtain a better predictive performance than could be obtained from any of the
    constituent learning algorithms alone. In this case, many trees protect each other
    from their individual errors. How exactly Bagged Trees and the random forest algorithm
    models work is a subject for another blog, but what is important to note is that
    for each both models we grow N trees where N is the number of decision trees a
    user specifies. Consequently after you fit a model, it would be nice to look at
    the individual decision trees that make up your model.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 上图可能是 Bagged Trees 或随机森林算法模型的示意图，这些都是集成方法。这意味着使用多个学习算法来获得比任何单一学习算法更好的预测性能。在这种情况下，许多树保护彼此免受各自错误的影响。Bagged
    Trees 和随机森林算法模型的具体工作原理是另一个博客的主题，但需要注意的是，对于这两个模型，我们都生长 N 棵树，其中 N 是用户指定的决策树数量。因此，在拟合模型后，查看构成模型的单独决策树是很有意义的。
- en: Fit a Random Forest® Model using Scikit-Learn
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Scikit-Learn 拟合随机森林®模型
- en: In order to visualize individual decision trees, we need first need to fit a
    Bagged Trees or Random Forest® model using scikit-learn (the code below fits the
    random forest algorithm model).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 为了可视化单独的决策树，我们首先需要使用 scikit-learn 拟合 Bagged Trees 或随机森林®模型（下面的代码拟合了随机森林算法模型）。
- en: '[PRE11]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Visualizing your Estimators
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可视化你的估计器
- en: You can now view all the individual trees from the fitted model. In this section,
    I will visualize all the decision trees using matplotlib.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以查看所有来自拟合模型的单独树。在这一部分，我将使用 matplotlib 可视化所有决策树。
- en: '[PRE12]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![Figure](../Images/480ebbb631ba1bc333c4e8100f218dc9.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/480ebbb631ba1bc333c4e8100f218dc9.png)'
- en: In this example, notice how we have 100 estimators.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，注意我们有 100 个估计器。
- en: You can now visualize individual trees. The code below visualizes the first
    decision tree.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以可视化单独的树。下面的代码可视化了第一棵决策树。
- en: '[PRE13]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![Figure](../Images/1acd00d63266403a70edb44da7223347.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/1acd00d63266403a70edb44da7223347.png)'
- en: Note that individual trees in the random forest algorithm and Bagged trees are
    grow deep
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，随机森林算法和袋装树中的个别树会生长得很深
- en: You can try to use matplotlib subplots to visualize as many of the trees as
    you like. The code below visualizes the first 5 decision trees. I personally don’t
    prefer this method as it is even harder to read.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以尝试使用 matplotlib 子图来可视化你喜欢的任意多的树。下面的代码可视化了前 5 棵决策树。我个人不太喜欢这种方法，因为它更难阅读。
- en: '[PRE14]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![](../Images/f41063731c52ec4a0528728376223cf0.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f41063731c52ec4a0528728376223cf0.png)'
- en: Create Images for each of the Decision Trees (estimators)
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为每个决策树（估计器）创建图像
- en: Keep in mind that if for some reason you want images for all your estimators
    (decision trees), you can do so using the code on my [GitHub](https://github.com/mGalarnyk/Python_Tutorials/blob/master/Sklearn/CART/Visualization/DecisionTreesVisualization.ipynb).
    If you just want to see each of the 100 estimators for the random forest algorithm
    model fit in this tutorial without running the code, you can look at the video
    below.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，如果由于某种原因你需要所有估计器（决策树）的图像，你可以使用我在 [GitHub](https://github.com/mGalarnyk/Python_Tutorials/blob/master/Sklearn/CART/Visualization/DecisionTreesVisualization.ipynb)
    上的代码。如果你只是想查看本教程中随机森林算法模型拟合的 100 个估计器的每一个，而不运行代码，你可以查看下面的视频。
- en: Concluding Remarks
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论
- en: This tutorial covered how to visualize decision trees using Graphviz and Matplotlib.
    Note that the way to visualize decision trees using Matplotlib is a newer method
    so it might change or be improved upon in the future. Graphviz is currently more
    flexible as you can always modify your dot files to make them more visually appealing
    like I did using the [dot language](https://www.graphviz.org/pdf/dotguide.pdf) or
    even just alter the orientation of your decision tree. One thing we didn’t cover
    was how to use [dtreeviz](https://github.com/parrt/dtreeviz) which is another
    library that can visualize decision trees. There is an excellent post on it [here](https://explained.ai/decision-tree-viz/index.html).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程介绍了如何使用 Graphviz 和 Matplotlib 可视化决策树。请注意，使用 Matplotlib 可视化决策树是一种较新的方法，因此未来可能会有所更改或改进。Graphviz
    目前更为灵活，因为你总是可以修改 dot 文件，使其更具视觉吸引力，如我所用的 [dot 语言](https://www.graphviz.org/pdf/dotguide.pdf)，甚至可以改变决策树的方向。我们没有涉及的是如何使用
    [dtreeviz](https://github.com/parrt/dtreeviz)，这是另一种可视化决策树的库。有关该库的优秀文章可以在 [这里](https://explained.ai/decision-tree-viz/index.html)
    查阅。
- en: '![Figure](../Images/41748ebd82ebd398ef25881f5d8f88b1.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图示](../Images/41748ebd82ebd398ef25881f5d8f88b1.png)'
- en: Image from produced by [dtreeviz library](https://github.com/parrt/dtreeviz).
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图像由 [dtreeviz 库](https://github.com/parrt/dtreeviz) 生成。
- en: If you have any questions or thoughts on the tutorial, feel free to reach out
    in the comments below or through [Twitter](https://twitter.com/GalarnykMichael).
    If you want to learn more about how to utilize Pandas, Matplotlib, or Seaborn
    libraries, please consider taking my [Python for Data Visualization LinkedIn Learning
    course](https://www.linkedin.com/learning/python-for-data-visualization/value-of-data-visualization).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对教程有任何问题或想法，请随时在下方评论或通过 [Twitter](https://twitter.com/GalarnykMichael) 联系我。如果你想了解更多关于如何利用
    Pandas、Matplotlib 或 Seaborn 库的信息，请考虑参加我的 [数据可视化 Python 课程 LinkedIn Learning](https://www.linkedin.com/learning/python-for-data-visualization/value-of-data-visualization)。
- en: RANDOM FORESTS and RANDOMFORESTS are registered marks of Minitab, LLC.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: RANDOM FORESTS 和 RANDOMFORESTS 是 Minitab, LLC 的注册商标。
- en: '**Bio: [Michael Galarnyk](https://www.linkedin.com/in/michaelgalarnyk/)** is
    a Data Scientist and Corporate Trainer. He currently works at Scripps Translational
    Research Institute. You can find him on Twitter (https://twitter.com/GalarnykMichael),
    Medium (https://medium.com/@GalarnykMichael), and GitHub (https://github.com/mGalarnyk).'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介: [迈克尔·加拉尔尼克](https://www.linkedin.com/in/michaelgalarnyk/)** 是一位数据科学家和企业培训师。他目前在Scripps转化研究所工作。你可以在Twitter
    (https://twitter.com/GalarnykMichael)、Medium (https://medium.com/@GalarnykMichael)
    和 GitHub (https://github.com/mGalarnyk) 找到他。'
- en: '[Original](https://towardsdatascience.com/visualizing-decision-trees-with-python-scikit-learn-graphviz-matplotlib-1c50b4aa68dc).
    Reposted with permission.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/visualizing-decision-trees-with-python-scikit-learn-graphviz-matplotlib-1c50b4aa68dc)。已获许可转载。'
- en: '**Related:**'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关:**'
- en: '[Understanding Decision Trees for Classification in Python](/2019/08/understanding-decision-trees-classification-python.html)'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[理解 Python 中的分类决策树](/2019/08/understanding-decision-trees-classification-python.html)'
- en: '[Decision Tree Algorithm, Explained](/2020/01/decision-tree-algorithm-explained.html)'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[决策树算法解析](/2020/01/decision-tree-algorithm-explained.html)'
- en: '[Decision Tree Intuition: From Concept to Application](/2020/02/decision-tree-intuition.html)'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[决策树直观理解：从概念到应用](/2020/02/decision-tree-intuition.html)'
- en: More On This Topic
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Machine Learning from Scratch: Decision Trees](https://www.kdnuggets.com/2022/11/machine-learning-scratch-decision-trees.html)'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[从零开始的机器学习：决策树](https://www.kdnuggets.com/2022/11/machine-learning-scratch-decision-trees.html)'
- en: '[Decision Trees vs Random Forests, Explained](https://www.kdnuggets.com/2022/08/decision-trees-random-forests-explained.html)'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[决策树与随机森林，详解](https://www.kdnuggets.com/2022/08/decision-trees-random-forests-explained.html)'
- en: '[Generalized and Scalable Optimal Sparse Decision Trees(GOSDT)](https://www.kdnuggets.com/2023/02/generalized-scalable-optimal-sparse-decision-treesgosdt.html)'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[广义和可扩展的最优稀疏决策树（GOSDT）](https://www.kdnuggets.com/2023/02/generalized-scalable-optimal-sparse-decision-treesgosdt.html)'
- en: '[Demystifying Decision Trees for the Real World](https://www.kdnuggets.com/demystifying-decision-trees-for-the-real-world)'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[揭开现实世界中的决策树面纱](https://www.kdnuggets.com/demystifying-decision-trees-for-the-real-world)'
- en: '[Python Matplotlib Cheat Sheets](https://www.kdnuggets.com/2023/01/python-matplotlib-cheat-sheets.html)'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python Matplotlib 备忘单](https://www.kdnuggets.com/2023/01/python-matplotlib-cheat-sheets.html)'
- en: '[Visualizing Your Confusion Matrix in Scikit-learn](https://www.kdnuggets.com/2022/09/visualizing-confusion-matrix-scikitlearn.html)'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Scikit-learn 中可视化你的混淆矩阵](https://www.kdnuggets.com/2022/09/visualizing-confusion-matrix-scikitlearn.html)'
