- en: The High Cost of Maintaining Machine Learning Systems
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 维护机器学习系统的高成本
- en: 原文：[https://www.kdnuggets.com/2015/01/high-cost-machine-learning-technical-debt.html](https://www.kdnuggets.com/2015/01/high-cost-machine-learning-technical-debt.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2015/01/high-cost-machine-learning-technical-debt.html](https://www.kdnuggets.com/2015/01/high-cost-machine-learning-technical-debt.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](#comments)'
- en: Last December, a group of Google researchers led by D. Sculley presented a position
    paper at NIPS describing [the cost of maintaining software that relies on machine
    learning](https://research.google.com/pubs/pub43146.html). Using the idea of **technical
    debt**, the authors suggest that while machine learning offers a path to quickly
    engineering complex systems, the convenience comes with tremendous downstream
    costs.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 去年12月，一组由D. Sculley领导的谷歌研究人员在NIPS上发表了一篇立场论文，描述了[维护依赖于机器学习的软件的成本](https://research.google.com/pubs/pub43146.html)。作者利用**技术债务**的概念，建议虽然机器学习提供了快速工程复杂系统的途径，但这种便利性带来了巨大的下游成本。
- en: Technical debt is a metaphor relating the consequences of poor software design
    to servicing a financial debt. As a loan must eventually be paid off, with compounding
    interest, so too hasty design decisions must be paid for with refactoring, debugging,
    and complicated testing. The notion of compounding interest, of course, is applied
    more poetically than precisely to software development headaches. in software
    development, the metaphor of technical debt is typically invoked with respect
    to the trade-offs between shipping code quickly and engineering high quality sustainable
    solutions. One must decide how to weigh speed now against development costs, in
    the future.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 技术债务是一个比喻，将糟糕的软件设计后果与偿还财务债务联系起来。就像贷款最终必须偿还，并带有复利一样，草率的设计决策也必须通过重构、调试和复杂的测试来弥补。当然，复利的概念在软件开发中的应用更多是诗意的，而不是精确的。在软件开发中，技术债务的比喻通常用来讨论快速交付代码与工程高质量可持续解决方案之间的权衡。必须决定如何权衡现在的速度与未来的开发成本。
- en: '![credit-cards](../Images/32aeddae67b8cf8b7da863e26eab0296.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![信用卡](../Images/32aeddae67b8cf8b7da863e26eab0296.png)'
- en: While an extension of this idea to machine learning systems is interesting,
    it is important to note a fundamental difference between technical debt as traditionally
    discussed and as applied to machine learning. Unlike most conventional software
    design decisions, the decision to apply machine learning is usually not clearly
    expressed as a trade-off. **The problems that can be solved with machine learning
    are often not solvable by other methods**. On the other hand, as the authors explain,
    given many different algorithms (even subtly different), there may be trade-offs
    between algorithm performance and the technical debt incurred. Still, the most
    frightening costs appear to be universal across all machine algorithms.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管将这一概念扩展到机器学习系统是有趣的，但需要注意传统上讨论的技术债务与机器学习应用之间的根本差异。与大多数传统的软件设计决策不同，应用机器学习的决策通常不会明确表达为权衡。**可以通过机器学习解决的问题通常是其他方法无法解决的**。另一方面，正如作者所解释的，考虑到许多不同的算法（即使是微妙的不同），算法性能与所承担的技术债务之间可能存在权衡。不过，最令人担忧的成本似乎在所有机器算法中都是普遍存在的。
- en: '**Types of Debt**'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**债务的类型**'
- en: One sense in which all machine learning algorithms incur a technical debt is
    through the **erosion of boundaries**. The authors note that good software design
    practice is typically modular. Modules isolate regions of related code whose which
    perform a well defined task, separating them from the other modules with which
    they interact. This disentangling of the code base makes it possible to rigorously
    test code, and also makes it possible for different parts of the code base to
    be maintained by different people. The performance of machine learning algorithms,
    however, depends upon both the input taking from external data sources and the
    performance can only be assessed with respect to external data sources. This tight
    coupling of algorithm and data means that a change in the external data typically
    would change the way that we would like the algorithm to behave. In the real world,
    data acquisition, preprocessing, and model tuning are likely to be managed by
    different people. This presents an uncomfortably tight coupling that can be difficult
    to maintain, especially in the face of changes to the underlying data source.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 所有机器学习算法在某种程度上都会承担技术债务，其中之一就是**边界的侵蚀**。作者指出，好的软件设计实践通常是模块化的。模块隔离了相关代码区域，这些代码区域执行明确定义的任务，并将其与其他交互的模块分开。这种代码库的解耦使得可以严格测试代码，并且使得代码库的不同部分可以由不同的人维护。然而，机器学习算法的性能依赖于从外部数据源获取的输入，性能也只能通过外部数据源来评估。这种算法和数据的紧密耦合意味着外部数据的变化通常会改变我们希望算法的行为。在现实世界中，数据获取、预处理和模型调整可能由不同的人管理。这种不舒服的紧密耦合可能很难维护，特别是在面对底层数据源的变化时。
- en: As noted before, this problem may be intrinsic to machine learning, and it may
    be that the only choices are to accept this debt or abandon the task entirely.
    In contrast, a problem that may actually be addressable through design decisions
    is what the authors call **entanglement.** This refers to a model's dependence
    on all of its features. A sudden loss of one feature, introduction of a new feature,
    or perturbation of the values of a feature may render an entire model useless.
    D. Sculley et. al. give this phenomenon the appellation **Changing Anything Changes
    Everything**. They reference several other papers offering strategies to reduce
    entanglement, including a method using ensemble learning.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，这个问题可能是机器学习固有的，可能唯一的选择是接受这种债务或完全放弃任务。相比之下，作者称之为**纠缠**的问题可能实际上可以通过设计决策来解决。这指的是模型对所有特征的依赖。特征的突然丧失、新特征的引入或特征值的扰动可能会使整个模型失效。D.
    Sculley 等人将这种现象称为**改变任何东西就会改变一切**。他们引用了几篇其他论文，提供了减少纠缠的策略，包括一种使用集成学习的方法。
- en: Several other strategies are not discussed but seem appropriate. The problem
    of missing data is handled gracefully by Bayesian networks. Denoising autoencoders
    and other dimensionality reduction / matrix factorization techniques also offer
    strategies to dealing with missing data. Regarding the continual and gradual growth
    of the feature space, John Langford's work on hashing methods as implemented in
    Vowpal Rabbit seem suited to mitigating this problem.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 几种其他策略虽然未被讨论，但似乎也很合适。缺失数据的问题通过贝叶斯网络得到优雅的处理。去噪自动编码器和其他降维/矩阵分解技术也提供了处理缺失数据的策略。关于特征空间的持续和渐进增长，John
    Langford 在 Vowpal Rabbit 中实现的哈希方法似乎适合于缓解这个问题。
- en: One of the most interesting ideas addressed in the paper is that feedback loops
    that form between algorithms and the external world. Search engines that adapt
    based on click-data which itself depends on the links shown represent a clear
    example. It seems user data taken from any machine learning-based recommendation
    system may be subject to similar dynamics. Pandora, for example may set out to
    determine what users prefer, but the feedback acquired is highly dependent on
    the songs recommended.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 论文中讨论的最有趣的观点之一是算法与外部世界之间形成的反馈回路。基于点击数据（而点击数据本身又依赖于显示的链接）进行调整的搜索引擎就是一个明确的例子。似乎从任何基于机器学习的推荐系统中获取的用户数据可能都会受到类似的动态影响。例如，Pandora
    可能会试图确定用户的偏好，但获得的反馈高度依赖于推荐的歌曲。
- en: Abstractly, these feedback loops might be analogous to filter bubbles in social
    networks and web search. **Filter bubble** describes the phenomenon in which people,
    shown only views and posts that they are predicted to agree with, rarely experience
    dissent and thus are trapped in ideological bubbles unable to interact with contrasting
    viewpoints.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 从抽象的角度来看，这些反馈循环可能类似于社交网络和网页搜索中的过滤气泡。**过滤气泡**描述了这样一种现象：人们只看到与自己观点一致的视图和帖子，很少遇到异议，因此被困在意识形态泡沫中，无法与对立观点互动。
- en: '![code](../Images/7acfc0c08f271d03f41bdbeaf8f5f6cc.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![code](../Images/7acfc0c08f271d03f41bdbeaf8f5f6cc.png)'
- en: Finally, the authors concentrate on the problems that arise from the code typically
    generated by data scientists. Unlike the previous examples, these cases truly
    fit the conventional notion of technical debt. One problem, **dead experimental
    codepaths,** describes code which is designed for experimentation but shipped
    into production. Such code typically implements many different experiments, variants
    gated by conditional statements. Any subtle change or accident that results in
    a different branch of the experiment being selected could have disastrous consequences
    while not presenting any easily detectable software bugs (compile-time or run-time
    errors). The authors mention that such a bug was responsible for the runaway trading
    algorithms at Knight Capital.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，作者集中讨论了数据科学家通常生成的代码所带来的问题。与前面的例子不同，这些情况确实符合传统的技术债务概念。其中一个问题是**死实验代码路径**，指的是为实验设计但却投入生产的代码。这类代码通常实现了许多不同的实验，变体由条件语句控制。任何细微的更改或意外导致选择不同的实验分支都可能造成灾难性的后果，而不会表现出任何容易检测的软件错误（编译时或运行时错误）。作者提到，这种错误是Knight
    Capital公司交易算法失控的原因。
- en: A final software trade-off described by Sculley et. al. that occurs when shipping
    machine learning code is the matter of **glue code**. Advanced machine learning
    algorithms are often implemented in packages that provide general solutions. As
    a result, engineers often write software that consists of glue code built on top
    of these packages. The glue code may process the data, set the values of hyper-parameters,
    select the appropriate algorithm, report the results, etc. As with all reliance
    on external libraries, this presents the problem of ongoing vulnerability to any
    change in the underlying library. The authors suggest that engineers building
    live systems should seriously consider reimplementing machine learning algorithms
    within the broader system architecture.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Sculley等人描述的一个最终软件权衡是**胶水代码**的问题。当发布机器学习代码时，高级机器学习算法通常在提供通用解决方案的包中实现。因此，工程师通常编写由这些包构建的胶水代码。胶水代码可能处理数据、设置超参数的值、选择合适的算法、报告结果等。与所有对外部库的依赖一样，这也带来了对基础库任何变更的持续脆弱性。作者建议，构建实时系统的工程师应认真考虑在更广泛的系统架构中重新实现机器学习算法。
- en: This paper has the tone of a good provocative operating systems paper. The writers
    are forthcoming with opinions, and the reader gets the sense that the authors
    themselves have experienced many hours of frustration on account of these problems.
    Generally, the systems implementation of machine learning methodology and ongoing
    software maintenance challenges are an understudied area that will continue to
    grow in importance as machine learning systems become more commonplace in commercial
    and open source software. This draft describes high level categories of problems,
    similar to how Butler Lampson's attempts a unifying language for talking about
    security in his **Protection** paper. It would be nice in the future to see more
    papers describing the specific software engineering and ongoing maintenance challenges
    encountered by large organizations deploying major machine learning systems.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本文具有一篇优秀的挑衅性操作系统论文的风格。作者坦率地表达了观点，读者能够感受到作者在这些问题上经历了许多挫折。通常，机器学习方法的系统实现和持续软件维护挑战是一个未被充分研究的领域，随着机器学习系统在商业和开源软件中的普及，这个领域将继续增长。本文描述了问题的高层次分类，类似于Butler
    Lampson在其**保护**论文中尝试统一安全讨论的方式。未来希望看到更多描述大型组织在部署主要机器学习系统时遇到的具体软件工程和持续维护挑战的论文。
- en: '![Zachary Chase Lipton](../Images/240b273c667af1a53a99fd93d1fd39ce.png) **[Zachary
    Chase Lipton](http://zacklipton.com)** is a PhD student in the Computer Science
    Engineering department at the University of California, San Diego. Funded by the
    [Division of Biomedical Informatics](http://healthsciences.ucsd.edu/som/medicine/divisions/dbmi/pages/default.aspx),
    he is interested in both theoretical foundations and applications of machine learning.
    In addition to his work at UCSD, he has interned at Microsoft Research Labs.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '![扎克里·蔡斯·利普顿](../Images/240b273c667af1a53a99fd93d1fd39ce.png) **[扎克里·蔡斯·利普顿](http://zacklipton.com)**
    是加州大学圣地亚哥分校计算机科学工程系的博士生。由[生物医学信息学部](http://healthsciences.ucsd.edu/som/medicine/divisions/dbmi/pages/default.aspx)资助，他对机器学习的理论基础和应用都很感兴趣。除了在UCSD的工作外，他还曾在微软研究院实习。'
- en: '**Related:**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[IBM Watson Analytics vs. Microsoft Azure Machine Learning (Part 1)](/2014/12/ibm-watson-analytics-microsoft-azure-machine-learning-p1.html)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[IBM Watson Analytics与微软Azure机器学习（第一部分）](/2014/12/ibm-watson-analytics-microsoft-azure-machine-learning-p1.html)'
- en: '[Differential Privacy: How to make Privacy and Data Mining Compatible](/2015/01/differential-privacy-data-mining-compatible.html)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[差分隐私：如何让隐私和数据挖掘兼容](/2015/01/differential-privacy-data-mining-compatible.html)'
- en: '[Geoff Hinton AMA: Neural Networks, the Brain, and Machine Learning](/2014/12/geoff-hinton-ama-neural-networks-brain-machine-learning.html)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Geoff Hinton AMA：神经网络、大脑与机器学习](/2014/12/geoff-hinton-ama-neural-networks-brain-machine-learning.html)'
- en: '* * *'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三名课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯的捷径。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织在IT方面'
- en: '* * *'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[5 Concepts You Should Know About Gradient Descent and Cost Function](https://www.kdnuggets.com/2020/05/5-concepts-gradient-descent-cost-function.html)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[你应该了解的5个关于梯度下降和成本函数的概念](https://www.kdnuggets.com/2020/05/5-concepts-gradient-descent-cost-function.html)'
- en: '[HuggingChat Python API: Your No-Cost Alternative](https://www.kdnuggets.com/2023/05/huggingchat-python-api-alternative.html)'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[HuggingChat Python API：你的零成本替代方案](https://www.kdnuggets.com/2023/05/huggingchat-python-api-alternative.html)'
- en: '[Is Academia Obsessing Over Methodology at the Cost of True Insights?](https://www.kdnuggets.com/is-academia-obsessing-over-methodology-at-the-cost-of-true-insights)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学术界是否过于关注方法论而忽视真正的洞见？](https://www.kdnuggets.com/is-academia-obsessing-over-methodology-at-the-cost-of-true-insights)'
- en: '[The High Paying Side Hustles for Data Scientists](https://www.kdnuggets.com/2022/01/high-paying-side-hustles-data-scientists.html)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家的高薪副业](https://www.kdnuggets.com/2022/01/high-paying-side-hustles-data-scientists.html)'
- en: '[People Management for AI: Building High-Velocity AI Teams](https://www.kdnuggets.com/2022/03/people-management-ai-building-highvelocity-ai-teams.html)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[人工智能人员管理：构建高速增长的人工智能团队](https://www.kdnuggets.com/2022/03/people-management-ai-building-highvelocity-ai-teams.html)'
- en: '[7 High Paying Side Hustles for Data Scientists](https://www.kdnuggets.com/7-high-paying-side-hustles-for-data-scientists)'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[7个高薪的数据科学副业](https://www.kdnuggets.com/7-high-paying-side-hustles-for-data-scientists)'
