- en: Topological Data Analysis – Open Source Implementations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2015/11/topological-data-analysis-open-source-implementations.html](https://www.kdnuggets.com/2015/11/topological-data-analysis-open-source-implementations.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**By [Matthew Mayo](https://twitter.com/mattmayo13).**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Topological Data Analysis](https://en.wikipedia.org/wiki/Topological_data_analysis)
    (TDA) is an area of applied mathematics currently garnering all sorts of attention
    in the world of analytics. It employs modern mathematical concepts such as [functorality](https://en.wikipedia.org/wiki/Functor),
    and posseses such desirable properties as success in coordinate-freeness and robustness
    to noise. TDA is able to make some strong claims as to its practical uses; it
    is, however, one of the most mathematically-rigorous areas of staistical analysis.
    [This post](/2015/09/ayasdi-topological-analysis-machine-learning.html) does a
    nice job of introducing TDA to a machine learning audience.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e4e2f85c71c951197fb0a170894ea5ad.png)'
  prefs: []
  type: TYPE_IMG
- en: Before turning our attention to available open source TDA tools, let's have
    a look at TDA's current driving force in industry. [Ayasdi](http://www.ayasdi.com/),
    founded in 2008 by [Gunnar Carlsson](http://math.stanford.edu/~gunnar/), [Gurjeet
    Singh](https://twitter.com/singhgurjeet), and [Harlan Sexton](https://www.linkedin.com/pub/harlan-sexton/7/325/633),
    is the main commercial player in TDA, and was founded afer a dozen years of research
    at Stanford. But while Ayasdi is arguably the main actor in TDA today, it is hardly
    the only one; a number of active open source projects exist.
  prefs: []
  type: TYPE_NORMAL
- en: Interested in learning more about TDA? [This is a video](https://www.youtube.com/watch?v=XfWibrh6stw)
    of Ayasdi co-founder and long-time TDA researcher Gunnar Carlsson very succinctly
    explaining TDA. [This Github repo](https://gist.github.com/turnersr/8668521) contains
    a curated list of resources for learning about TDA, including both gentle non-mathemtical
    introductions and more rigorous mathematical treatments. Ohio State University
    offers the course [Computational Topology and Data Analysis](http://web.cse.ohio-state.edu/~tamaldey/course/CTDA/CTDA.html),
    and many of the course's notes and resources are available on its site.
  prefs: []
  type: TYPE_NORMAL
- en: Attesting to the growing awareness of TDA, a series of interviews with Ayasdi
    engineer Anthony Bak have been featured on KDnuggets earlier this year ([part
    1](/2015/01/interview-anthony-bak-data-complexity-topology.html), [part 2](/2015/01/interview-anthony-bak-ayasdi-toplogical-summaries.html),
    [part 3](/2015/01/interview-anthony-bak-ayasdi-topology.html)), along with the
    more recent [6 crazy things Deep Learning and Topological Data Analysis can do
    with your data](/2015/11/crazy-deep-learning-topological-data-analysis.html).
    One of the links further above is also a recent featured post. Given this trend,
    it seems highly probable that the future will see **more** KDnuggets posts on
    [Topological Data Analysis](/tag/topological-data-analysis).
  prefs: []
  type: TYPE_NORMAL
- en: '**Open Source TDA Tools**'
  prefs: []
  type: TYPE_NORMAL
- en: We turn our attention to open source TDA projects. While it is outside of the
    current mainstream and still in its early stages of adoption, it is important
    to note that TDA is far from a proprietary technology. Ayasdi may be the most
    noticeable player in the field, but a number of open source implementations of
    core TDA components exist as well. Ayasdi and its engineers have even contributed
    to some of these projects.
  prefs: []
  type: TYPE_NORMAL
- en: The following is a list of several open source TDA projects, with brief descriptions
    from the projects' sources.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Python Mapper](http://danifold.net/mapper/introduction.html)**'
  prefs: []
  type: TYPE_NORMAL
- en: The Mapper algorithm is a method for topological data analysis invented by Gurjeet
    Singh, Facundo Mémoli and Gunnar Carlsson. See the Reference [R1] for the publication.
    While the Mapper algorithm alone does not constitute a complete data analysis
    tool itself, it is the key part of a processing chain with (minimally) filter
    functions, the Mapper algorithm itself and visualization of the results.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Python Mapper is a realization of this toolchain, written by Daniel Müllner
    and Aravindakshan Babu. It is open source software and is released under the GNU
    GPLv3 license.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**[Proof of Concept Mapper by @mlwave for Digit Recognition (Python)](https://www.kaggle.com/triskelion/digit-recognizer/mapping-digits-with-a-t-sne-lens/notebook)**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Description: 1) MinMaxScaler on the train set. 2) t-SNE on first 5k images
    from train set to 2 components. 3) Create overlapping intervals on first 2 dimensions
    and cluster points inside this overlap. 4) The clusters then become nodes in a
    graph. 5) When different clusters have one or more non-unique members we draw
    an edge. 6) Size the nodes by the number of points in that cluster. 7) Color the
    nodes by the distance to min of first dimension. 8) Show the images for every
    cluster member inside a tooltip.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**[Dionysus (C++, with Python bindings)](http://mrzv.org/software/dionysus/)**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Dionysus is a C++ library for computing persistent homology. It provides implementations
    of the following algorithms:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ▪  Persistent homology computation
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ▪  Vineyards
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ▪  Persistent cohomology computation
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ▪  Zigzag persistent homology
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**[TDA: Statistical Tools for Topological Data Analysis (R)](https://cran.r-project.org/web/packages/TDA/)**'
  prefs: []
  type: TYPE_NORMAL
- en: Tools for the statistical analysis of persistent homology and for density clustering.
    For that, this package provides an R interface for the efficient algorithms of
    the C++ libraries GUDHI, Dionysus, and PHAT (see [vignette](https://cran.r-project.org/web/packages/TDA/vignettes/article.pdf)).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**[TDAmapper: Topological Data Analysis using Mapper (R)](https://github.com/paultpearson/TDAmapper/)**'
  prefs: []
  type: TYPE_NORMAL
- en: An R package for using discrete Morse theory to analyze a data set using the
    Mapper algorithm described in G. Singh, F. Memoli, G. Carlsson (2007).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**[JavaPlex](https://github.com/appliedtopology/javaplex)**'
  prefs: []
  type: TYPE_NORMAL
- en: The JavaPlex library implements persistent homology and related techniques from
    computational and applied topology, in a library designed for ease of use, ease
    of access from Matlab and java-based systems, and ease of extensions for further
    research projects and approaches. JavaPlex is mainly developed by the Computational
    Topology workgroup at Stanford University, and is based on previous similar packages
    from the same group.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**[CTL (C++)](https://github.com/appliedtopology/ctl)**'
  prefs: []
  type: TYPE_NORMAL
- en: 'This C++11 library provides a set of generic tools for:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ▪  Generating point sets (coming soon)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ▪  Building Neighborhood Graphs
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ▪  Building Cellular Complexes
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ▪  Computing [persistent] homology over finite fields
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ▪  Parallel algorithm(s) for homology
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**[Kohonen (Python)](https://github.com/lmjohns3/kohonen)**'
  prefs: []
  type: TYPE_NORMAL
- en: 'This module contains some basic implementations of Kohonen-style vector quantizers:
    Self-Organizing Map (SOM), Neural Gas, and Growing Neural Gas. Kohonen-style vector
    quantizers use some sort of explicitly specified topology to encourage good separation
    among prototype "neurons".'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Bio: [Matthew Mayo](https://twitter.com/mattmayo13)** is a computer science
    graduate student currently working on his thesis parallelizing machine learning
    algorithms. He is also a student of data mining, a data enthusiast, and an aspiring
    machine learning scientist.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Topological Analysis and Machine Learning: Friends or Enemies?](/2015/09/ayasdi-topological-analysis-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Interview: Anthony Bak, Ayasdi on Novel Insights using Topological Summaries](/2015/01/interview-anthony-bak-ayasdi-toplogical-summaries.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 crazy things Deep Learning and Topological Data Analysis can do with your
    data](/2015/11/crazy-deep-learning-topological-data-analysis.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Closed Source VS Open Source Image Annotation](https://www.kdnuggets.com/closed-source-vs-open-source-image-annotation)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introducing MetaGPT''s Data Interpreter: SOTA Open Source LLM-based…](https://www.kdnuggets.com/metagpt-data-interpreter-open-source-llm-based-data-solutions)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Generate Synthetic Time-series Data with Open-source Tools](https://www.kdnuggets.com/2022/06/generate-synthetic-timeseries-data-opensource-tools.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Comparative Overview of the Top 10 Open Source Data Science Tools in 2023](https://www.kdnuggets.com/a-comparative-overview-of-the-top-10-open-source-data-science-tools-in-2023)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Role of Open Source Tools in Accelerating Data Science Progress](https://www.kdnuggets.com/2023/05/role-open-source-tools-accelerating-data-science-progress.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introducing Objectiv: Open-source product analytics infrastructure](https://www.kdnuggets.com/2022/06/objectiv-introducing-objectiv-opensource-product-analytics-infrastructure.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
