["```py\n\n# Load in libraries\nlibrary(tidyverse)\nlibrary(igraph)\nlibrary(subprocess)\nlibrary(png)\nlibrary(grid)\nlibrary(humanFormat)\n\n# Returns the max/min of given sequence or a default value in case the sequence\n# is empty\n\nmax.na <- function(..., def=NA, na.rm=FALSE)\n\nif(!is.infinite(x<-suppressWarnings(max(..., na.rm=na.rm)))) x else def\n\nmin.na <- function(..., def=NA, na.rm=FALSE)\n\nif(!is.infinite(x<-suppressWarnings(min(..., na.rm=na.rm)))) x else def\n\neventlog <- read.csv('c:/users/seppe/desktop/sandbox.csv', sep=';')\n\neventlog$Start <- as.POSIXct(strptime(eventlog$Start.Timestamp, \n                                 \"%Y/%m/%d %H:%M:%OS\"))\n\neventlog$Complete <- as.POSIXct(strptime(eventlog$Complete.Timestamp, \n                                   \"%Y/%m/%d %H:%M:%OS\"))\n\n```", "```py\neventlog %<>%\n\nmutate(RowNum=row_number()) %>%\n\narrange(Start, RowNum) %>%\n\nmutate(RowNum=row_number()) %>%\n\nrowwise %>%\n\nmutate(NextNum=min.na(.$RowNum[.$Case.ID == Case.ID & RowNum < .$RowNum & \n                                                 .$Start >= Complete])) %>%\n\nmutate(PrevNum=max.na(.$RowNum[.$Case.ID == Case.ID & RowNum > .$RowNum &\n                                                   .$Complete <= Start])) %>%\n\nungroup\n\n```", "```py\neventlog %>%\n\narrange(Start.Timestamp) %>%\n\ngroup_by(Case.ID) %>%\n\nsummarize(Variant=paste(Activity, collapse='->', sep='')) %>%\n\nggplot(aes(x=reorder(Variant, -table(Variant)[Variant]) )) +\n\ntheme_minimal() +\n\ntheme(axis.text.x=element_blank(),\n\naxis.ticks.x=element_blank()) +\n\nxlab('Variants') +\n\ngeom_bar()\n\n```", "```py\nactivities.basic <- eventlog %>%\n\nselect(Case.ID, RowNum, Start, Complete, act=Activity) %>%\n\nmutate(Duration=Complete-Start)\n\nedges.basic <- bind_rows(\n\neventlog %>% select(Case.ID, a=RowNum, b=NextNum),\n\neventlog %>% select(Case.ID, a=PrevNum, b=RowNum)) %>%\n\nfilter(!is.na(a), !is.na(b)) %>%\n\ndistinct %>%\n\nleft_join(eventlog, by=c(\"a\" = \"RowNum\"), copy=T, suffix=c(\"\", \".prev\")) %>%\n\nleft_join(eventlog, by=c(\"b\" = \"RowNum\"), copy=T, suffix=c(\"\", \".next\")) %>%\n\nselect(Case.ID, a, b,\n\na.act=Activity, b.act=Activity.next,\n\na.start=Start, b.start=Start.next,\n\na.complete=Complete, b.complete=Complete.next) %>%\n\nmutate(Duration=b.start-a.complete)\n\n```", "```py\ncol.box.red <- colorRampPalette(c('#FEF0D9', '#B30000'))(20)\n\ncol.arc.red <- colorRampPalette(c('#938D8D', '#B30000'))(20)\n\nlinMap <- function(x, from, to) (x - min(x)) / max(x - min(x)) * (to - from) + from\n\nactivities.counts <- activities.basic %>%\n\ngroup_by(act) %>%\n\nsummarize(metric=formatSeconds(as.numeric(median(Duration))),\n\nmetric.s=as.numeric(median(Duration))) %>%\n\nungroup %>%\n\nmutate(metric=ifelse(metric.s == 0, 'instant', metric),\n\ncolor=col.box.red[floor(linMap(metric.s, 1,20))])\n\nedges.counts <- edges.basic %>%\n\ngroup_by(a.act, b.act) %>%\n\nsummarize(metric=formatSeconds(as.numeric(median(Duration))),\n\nmetric.s=as.numeric(median(Duration))) %>%\n\nungroup %>%\n\nmutate(metric=ifelse(metric.s == 0, 'instant', metric),\n\ncolor=col.arc.red[floor(linMap(metric.s, 1, 20))],\n\npenwidth=floor(linMap(metric.s, 1, 5)))\n\n```"]