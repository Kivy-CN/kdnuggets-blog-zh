- en: 'Fake It Till You Make It: Generating Realistic Synthetic Customer Datasets'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一步一步做：生成真实的合成客户数据集
- en: 原文：[https://www.kdnuggets.com/2022/01/fake-realistic-synthetic-customer-datasets-projects.html](https://www.kdnuggets.com/2022/01/fake-realistic-synthetic-customer-datasets-projects.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2022/01/fake-realistic-synthetic-customer-datasets-projects.html](https://www.kdnuggets.com/2022/01/fake-realistic-synthetic-customer-datasets-projects.html)
- en: '![Fake It Till You Make It: Generating Realistic Synthetic Customer Datasets](../Images/0732fd4650daffd644ed13bcbade53c2.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![一步一步做：生成真实的合成客户数据集](../Images/0732fd4650daffd644ed13bcbade53c2.png)'
- en: Image by [mcmurryjulie on Pixabay](https://pixabay.com/users/mcmurryjulie-2375405/)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [mcmurryjulie 在 Pixabay](https://pixabay.com/users/mcmurryjulie-2375405/)
    提供
- en: Being able to create and use synthetic data in projects has become a must-have
    skill for data scientists.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 能够在项目中创建和使用合成数据已经成为数据科学家的必备技能。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业轨道。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织在 IT 方面'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: I have [written in the past](/2021/11/easy-synthetic-data-python-faker.html)
    about using the Python library **Faker** for creating your own synthetic datasets.
    Instead of repeating anything in that article, let's treat this as the second
    in a series of generating synthetic data for your own data science projects. This
    time around, let's generate some fake customer order data.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我之前[写过](https://www.kdnuggets.com/2021/11/easy-synthetic-data-python-faker.html)关于使用
    Python 库**Faker**来创建自己的合成数据集。为了避免重复那篇文章的内容，让我们将此视为生成合成数据系列的第二篇。这次，让我们生成一些虚假的客户订单数据。
- en: If you don't know anything about Faker, how it is used, or what you can do with
    it, I suggest that you [check out the previous article](/2021/11/easy-synthetic-data-python-faker.html)
    first.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对 Faker 一无所知，不知道它是如何使用的或可以做什么，我建议你首先[查看之前的文章](/2021/11/easy-synthetic-data-python-faker.html)。
- en: The Plan
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计划
- en: The plan is to synthesize a scaled-down version of a set of tables that would
    be used in the real-world business case of a customer order system.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 计划是合成一组缩小版的表，这些表将在实际业务场景的客户订单系统中使用。
- en: Aside from items for purchase, let's think about what is called for in such
    a scenario.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 除了购买项目之外，我们还要考虑这种情况下需要什么。
- en: '**Customers** - in what is not much of a surprise, if you are going to build
    a system to track customer orders, you are going to need customers'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户** - 不出意外的是，如果你要建立一个跟踪客户订单的系统，你需要客户。'
- en: '**Credit cards** - customers need to pay for things, and in our simplified
    scenario they can only do so with credit cards'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**信用卡** - 客户需要支付账单，在我们简化的场景中，他们只能通过信用卡支付。'
- en: '**Orders** - an order will consist of a customer, a cost, and a credit card
    for payment'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**订单** - 一个订单将包括一个客户、一笔费用和一个信用卡用于支付。'
- en: That's the data we need, so that's the data we will make. After you go through
    this, you will probably find ways to make it more robust, more detailed, and more
    like the real world, which you should be able to go ahead and do on your own.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们需要的数据，所以这就是我们要生成的数据。在完成这一过程后，你可能会发现使其更稳健、更详细、更贴近现实的方法，你应该能够自行完成。
- en: Imports and Helper Functions
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入和辅助函数
- en: Let's get started. First, the imports.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。首先，进行导入。
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Next, let's write a few helper functions that will be of use a little later
    on.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们编写几个稍后会用到的辅助函数。
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The first function, **`random_n_digits`**, will be used to generate a random
    integer of length `n`. With attribution to [this StackOverflow answer](https://stackoverflow.com/questions/2673385/how-to-generate-a-random-number-with-a-specific-amount-of-digits),
    see the example below:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个函数，**`random_n_digits`**，将用于生成长度为 `n` 的随机整数。参考 [这个 StackOverflow 答案](https://stackoverflow.com/questions/2673385/how-to-generate-a-random-number-with-a-specific-amount-of-digits)，请参见下面的示例：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This will come in handy for identifiers such as customer and order numbers.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这将对诸如客户和订单编号等标识符非常有用。
- en: The next function, **`unique_rand()`**, will be used to ensure that a generated
    identifier is unique to our system. It simply takes a list of integers and an
    integer representing the length of a new integer to be created, uses the previous
    function to create a new integer of this length, checks this new integer against
    the unique list, and if this new integer is also unique, it gets added to the
    list.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的函数，**`unique_rand()`**，将用于确保生成的标识符在我们的系统中是唯一的。它简单地接受一个整数列表和一个表示新整数长度的整数，使用前面的函数创建一个这个长度的新整数，将这个新整数与唯一列表进行比较，如果这个新整数也唯一，它就会被添加到列表中。
- en: The final function's utility is given away by its name, `**generate_cost()**`.
    To generate a cost, the function randomly generates an integer between 1 and 4,
    which will become the length of the dollar place digits string for our generated
    cost. random_n_digits() is then used to generate an integer of that length. After
    this, the process is repeated to create a 2 digit integer, which becomes the decimal
    cents portion of the cost, to the right hand side of the decimal point. These
    2 are put together and returned.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 最终函数的实用性通过其名称`**generate_cost()**`来体现。要生成一个费用，该函数随机生成一个介于 1 到 4 之间的整数，这将成为我们生成的费用的美元位数的字符串长度。然后使用
    random_n_digits() 生成该长度的整数。之后，重复这个过程生成一个 2 位整数，这将成为费用的小数部分，位于小数点的右侧。将这两个部分组合在一起并返回。
- en: Now let's move on to faking it.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们继续伪造吧。
- en: '![Don''t worry, even Elaine fakes it.](../Images/67e1eb6782d3ab88b2831accdf532e41.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![不用担心，连 Elaine 都在伪造。](../Images/67e1eb6782d3ab88b2831accdf532e41.png)'
- en: Don't worry, even Elaine fakes it.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 不用担心，连 Elaine 都在伪造。
- en: Creating Customers
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建客户
- en: 'With that, let''s generate the customers. Our 10,000 customers will include
    the following attributes:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，我们来生成客户。我们的 10,000 位客户将包括以下属性：
- en: customer ID (`cust_id`) - generated using the helper functions outlined above
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户 ID (`cust_id`) - 使用上述辅助函数生成
- en: customer name (`name`) - generated using Faker; `use_weighting=True` means an
    attempt is made to have the frequency of generated values match real-world frequencies
    ("Lisa" will be more frequently generated than will "Braelynn"); the locales denote
    from where names are being generated
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户姓名 (`name`) - 使用 Faker 生成；`use_weighting=True` 表示尝试使生成值的频率匹配真实世界的频率（“Lisa”将比“Braelynn”更频繁地生成）；locales
    表示生成名字的来源
- en: customer address (`address`) - generated using Faker
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户地址 (`address`) - 使用 Faker 生成
- en: customer phone number (`phone_number`) - generated using Faker
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户电话号码 (`phone_number`) - 使用 Faker 生成
- en: customer date of birth (`dob`) - generated using Faker
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户出生日期 (`dob`) - 使用 Faker 生成
- en: customer note text field (`note`) - generated using Faker
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户备注文本字段 (`note`) - 使用 Faker 生成
- en: The code also stores generated unique customer IDs (`cust_ids`) as a list in
    order to compare newly-generated IDs with existing to ensure uniqueness. After
    this, the dictionary which is used to store the customer data is passed into a
    new Pandas DataFrame, and ultimately stored to a CSV file.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 代码还会将生成的唯一客户 ID (`cust_ids`) 作为列表存储，以便将新生成的 ID 与现有的进行比较，确保唯一性。之后，将用于存储客户数据的字典传递到新的
    Pandas DataFrame 中，最终存储到 CSV 文件中。
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Creating Credit Cards
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建信用卡
- en: Customers need a method to pay for their orders, so let's give them all credit
    cards.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 客户需要一种支付订单的方法，因此我们给他们所有人都配备信用卡。
- en: Actually, in an effort to simplify, we will generate credit cards without assigning
    them to any particular customer. Instead, we will just match customers and cards
    for orders. You could modify this with a little ingenuity to assign cards to customers
    and then ensure that orders were paid for with the proper cards. I'll leave that
    an an exercise for interested readers.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，为了简化，我们将生成信用卡而不分配给任何特定客户。相反，我们将仅仅将客户和卡片匹配用于订单。你可以稍加创新，修改此方法将卡片分配给客户，并确保订单使用正确的卡片支付。我将把这留给有兴趣的读者作为练习。
- en: Below you will find that unique credit card numbers are generated with the same
    helper functions and same basic method as the unique customer IDs were. The credit
    card numbers are artificially short, but go ahead and make them as long you would
    like. The rest of the data is generated using Faker. The data is then fed into
    a Pandas DataFrame and saved as a CSV file for later use.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 下面你将发现唯一的信用卡号码是使用与唯一客户ID相同的辅助函数和基本方法生成的。信用卡号码人为地较短，但你可以按需增加长度。其余数据使用Faker生成。数据随后被输入到Pandas
    DataFrame中，并保存为CSV文件以备后用。
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Creating Orders
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建订单
- en: Now let's generate ourselves some money.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来赚点钱吧。
- en: Orders will be unique in the same manner as the previous customer IDs and credit
    card numbers. We will then link a random customer and a random credit card in
    an order, and generate a random cost using the third of the original three helper
    functions introduced earlier on.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 订单将以与之前的客户ID和信用卡号码相同的方式保持唯一。我们将随机链接一个客户和一个信用卡到一个订单中，并使用之前介绍的第三个辅助函数生成一个随机费用。
- en: In what has become a common pipeline, we then create a Pandas DataFrame of the
    dictionary, and save the data to file as a CSV.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在已成为常见管道的过程中，我们创建了一个字典的Pandas DataFrame，并将数据保存为CSV文件。
- en: '[PRE8]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The results it that you should have yourself three CSV files constituting the
    real-world emulation of an actual business process.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是你应该拥有三个CSV文件，这些文件构成了对实际业务流程的真实世界模拟。
- en: 'What do you do with the synthetic data now? Get creative. You *could* do some
    study, learn some new techniques or concepts, or undertake a project. A few more
    specific ideas include: using Python to create an SQL database out of this data
    to then practice your SQL skills with; performing a data exploration project;
    visualizing some of the synthetic data in interesting ways; seeing what kind of
    data preprocessing you could come up with to perform, such as splitting customer
    names into first and last, verifying that each customer has a credit card, ensuring
    young children aren''t able to make purchases.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你打算怎么处理这些合成数据？发挥你的创造力。你*可以*做一些研究，学习一些新技术或概念，或者进行一个项目。一些更具体的想法包括：使用Python将这些数据创建成SQL数据库，然后练习你的SQL技能；执行一个数据探索项目；以有趣的方式可视化一些合成数据；看看你能想出什么样的数据预处理方法，例如将客户姓名拆分为名和姓，验证每个客户是否有信用卡，确保小孩无法进行购买。
- en: 'And just remember: keep on faking it.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 记住：继续伪装下去。
- en: '**[Matthew Mayo](https://www.linkedin.com/in/mattmayo13/)** ([**@mattmayo13**](https://twitter.com/mattmayo13))
    is a Data Scientist and the Editor-in-Chief of KDnuggets, the seminal online Data
    Science and Machine Learning resource. His interests lie in natural language processing,
    algorithm design and optimization, unsupervised learning, neural networks, and
    automated approaches to machine learning. Matthew holds a Master''s degree in
    computer science and a graduate diploma in data mining. He can be reached at editor1
    at kdnuggets[dot]com.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Matthew Mayo](https://www.linkedin.com/in/mattmayo13/)** （[**@mattmayo13**](https://twitter.com/mattmayo13)）是一名数据科学家，并且是KDnuggets的主编，这是一个开创性的在线数据科学和机器学习资源。他的兴趣包括自然语言处理、算法设计与优化、无监督学习、神经网络以及机器学习的自动化方法。Matthew拥有计算机科学硕士学位和数据挖掘研究生文凭。他可以通过editor1
    at kdnuggets[dot]com与他联系。'
- en: More On This Topic
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[3 Ways to Generate Hyper-Realistic Faces Using Stable Diffusion](https://www.kdnuggets.com/3-ways-to-generate-hyper-realistic-faces-using-stable-diffusion)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用稳定扩散生成超现实面孔的3种方法](https://www.kdnuggets.com/3-ways-to-generate-hyper-realistic-faces-using-stable-diffusion)'
- en: '[5 Reasons Why You Need Synthetic Data](https://www.kdnuggets.com/2023/02/5-reasons-need-synthetic-data.html)'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[你需要合成数据的5个理由](https://www.kdnuggets.com/2023/02/5-reasons-need-synthetic-data.html)'
- en: '[20 Questions (with Answers) to Detect Fake Data Scientists: ChatGPT…](https://www.kdnuggets.com/2023/01/20-questions-detect-fake-data-scientists-chatgpt-1.html)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[检测假数据科学家的20个问题（含答案）：ChatGPT…](https://www.kdnuggets.com/2023/01/20-questions-detect-fake-data-scientists-chatgpt-1.html)'
- en: '[20 Questions (with Answers) to Detect Fake Data Scientists: ChatGPT…](https://www.kdnuggets.com/2023/02/20-questions-detect-fake-data-scientists-chatgpt-2.html)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[检测假数据科学家的20个问题（含答案）：ChatGPT…](https://www.kdnuggets.com/2023/02/20-questions-detect-fake-data-scientists-chatgpt-2.html)'
- en: '[How To Use Synthetic Data To Overcome Data Shortages For Machine…](https://www.kdnuggets.com/2022/03/synthetic-data-overcome-data-shortages-machine-learning-model-training.html)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何利用合成数据克服机器学习模型训练中的数据短缺](https://www.kdnuggets.com/2022/03/synthetic-data-overcome-data-shortages-machine-learning-model-training.html)'
- en: '[How to Generate Synthetic Tabular Dataset](https://www.kdnuggets.com/2022/03/generate-tabular-synthetic-dataset.html)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何生成合成表格数据集](https://www.kdnuggets.com/2022/03/generate-tabular-synthetic-dataset.html)'
