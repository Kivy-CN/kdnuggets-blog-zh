- en: 11 Essential Code Blocks for Complete EDA (Exploratory Data Analysis)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 完整EDA（探索性数据分析）的11个必备代码块
- en: 原文：[https://www.kdnuggets.com/2021/03/11-essential-code-blocks-exploratory-data-analysis.html](https://www.kdnuggets.com/2021/03/11-essential-code-blocks-exploratory-data-analysis.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/03/11-essential-code-blocks-exploratory-data-analysis.html](https://www.kdnuggets.com/2021/03/11-essential-code-blocks-exploratory-data-analysis.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Susan Maina](https://www.linkedin.com/in/suemnjeri/), Passionate about
    data, machine learning enthusiast, [writer at Medium](https://medium.com/@suemnjeri)**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由[Susan Maina](https://www.linkedin.com/in/suemnjeri/)，对数据充满热情，机器学习爱好者，[Medium作者](https://medium.com/@suemnjeri)**'
- en: Exploratory Data Analysis, or EDA, is one of the first steps of the [data science
    process](https://www.datasciencegraduateprograms.com/the-data-science-process/).
    It involves learning as much as possible about the data, without spending too
    much time. Here, you get an instinctive as well as a high-level practical understanding
    of the data. By the end of this process, you should have a general idea of the
    structure of the data set, some cleaning ideas, the target variable and, possible
    modeling techniques.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 探索性数据分析，或称EDA，是[data science process](https://www.datasciencegraduateprograms.com/the-data-science-process/)的第一步之一。它涉及尽可能多地了解数据，同时不花费过多时间。在这里，你可以对数据有直观和高层次的实际理解。在这个过程中结束时，你应该对数据集的结构、一些清理思路、目标变量以及可能的建模技术有一个大致的了解。
- en: There are some general strategies to quickly perform EDA in most problems. In
    this article, I will use the [Melbourne Housing snapshot dataset](https://www.kaggle.com/dansbecker/melbourne-housing-snapshot) from
    kaggle to demonstrate the 11 blocks of code you can use to perform a satisfactory
    exploratory data analysis. The dataset includes `Address`, `Type` of Real estate, `Suburb`, `Method` of
    Selling, `Rooms`, `Price`, Real Estate Agent `(SellerG)`, `Date` of Sale and, `Distance` from
    C.B.D. You can follow along by downloading the dataset [here](https://www.kaggle.com/dansbecker/melbourne-housing-snapshot/download).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数问题中，有一些通用策略可以快速执行EDA。在这篇文章中，我将使用来自kaggle的[墨尔本住房快照数据集](https://www.kaggle.com/dansbecker/melbourne-housing-snapshot)来演示你可以用来进行满意的探索性数据分析的11个代码块。该数据集包括`Address`、房地产的`Type`、`Suburb`、销售`Method`、`Rooms`、`Price`、房地产代理`(SellerG)`、`Date`、`Distance`与CBD的距离。你可以通过[这里](https://www.kaggle.com/dansbecker/melbourne-housing-snapshot/download)下载数据集跟随学习。
- en: The first step is importing the libraries required. We will need [Pandas](https://en.wikipedia.org/wiki/Pandas_(software)), [Numpy](https://towardsdatascience.com/4-fundamental-numpy-properties-every-data-scientist-must-master-c906236eb44b), [matplotlib](https://en.wikipedia.org/wiki/Matplotlib) and [seaborn](https://seaborn.pydata.org/).
    To make sure all our columns are displayed, use `pd.set_option(’display.max_columns’,
    100)` . By default, pandas displays 20 columns and hides the rest.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是导入所需的库。我们需要[Pandas](https://en.wikipedia.org/wiki/Pandas_(software))、[Numpy](https://towardsdatascience.com/4-fundamental-numpy-properties-every-data-scientist-must-master-c906236eb44b)、[matplotlib](https://en.wikipedia.org/wiki/Matplotlib)和[seaborn](https://seaborn.pydata.org/)。为了确保所有列都显示出来，请使用`pd.set_option(’display.max_columns’,
    100)`。默认情况下，pandas显示20列并隐藏其余列。
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Panda’s `pd.read_csv(path)` reads in the csv file as a DataFrame.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Panda的`pd.read_csv(path)`将csv文件读取为DataFrame。
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Basic data set Exploration
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基本数据集探索
- en: '**1\. Shape (dimensions) of the DataFrame**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**1\. DataFrame的形状（维度）**'
- en: The `.shape` attribute of a Pandas DataFrame gives an overall structure of the
    data. It returns a [tuple](https://towardsdatascience.com/ultimate-guide-to-lists-tuples-arrays-and-dictionaries-for-beginners-8d1497f9777c) of
    length 2 that translates to how many rows of observations and columns the dataset
    has.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas DataFrame的`.shape`属性提供数据的整体结构。它返回一个[tuple](https://towardsdatascience.com/ultimate-guide-to-lists-tuples-arrays-and-dictionaries-for-beginners-8d1497f9777c)的长度为2，表示数据集中有多少行观察值和列。
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We can see that the dataset has 13,580 observations and 21 features, and one
    of those features is the target variable.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到数据集有13,580个观察值和21个特征，其中一个特征是目标变量。
- en: '**2\. Data types of the various columns**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**2\. 各列的数据类型**'
- en: The DataFrame’s `.dtypes` attribute displays the data types of the columns as
    a Panda’s [Series](https://www.geeksforgeeks.org/python-pandas-series/) (Series
    means a column of values and their indices).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: DataFrame的`.dtypes`属性显示各列的数据类型，作为Panda的[Series](https://www.geeksforgeeks.org/python-pandas-series/)（Series表示一个值及其索引的列）。
- en: '[PRE3]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We observe that our dataset has a combination of **categorical **(object) and **numeric **(float
    and int) features. At this point, I went back to the Kaggle page for an understanding
    of the columns and their meanings. Check out the table of columns and their definitions [here](https://datawrapper.dwcdn.net/hHuXG/4/) created
    with [Datawrapper](https://www.datawrapper.de/).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们观察到数据集中具有**分类**（对象）和**数值**（浮点数和整数）特征的组合。此时，我回到 Kaggle 页面以了解列及其含义。请查看使用[Datawrapper](https://www.datawrapper.de/)创建的列及其定义的表格[这里](https://datawrapper.dwcdn.net/hHuXG/4/)。
- en: What to look out for;
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项：
- en: Numeric features that should be categorical and vice versa.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应该是分类的数值特征，反之亦然。
- en: From a quick analysis, I did not find any mismatch for the datatypes. This makes
    sense as this dataset version is a cleaned snapshot of the original [Melbourne
    data](https://www.kaggle.com/anthonypino/melbourne-housing-market).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 从快速分析来看，我没有发现数据类型的任何不匹配。这是有道理的，因为此数据集版本是原始[墨尔本数据](https://www.kaggle.com/anthonypino/melbourne-housing-market)的清理快照。
- en: '**3\. Display a few rows**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**3\. 显示几行数据**'
- en: The Pandas DataFrame has very handy functions for displaying a few observations. `data.head()`displays
    the first 5 observations, `data.tail()` the last 5, and `data.sample()` an observation
    chosen randomly from the dataset. You can display 5 random observations using `data.sample(5)`
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas DataFrame 提供了非常方便的函数来显示几个观察值。`data.head()`显示前 5 个观察值，`data.tail()`显示最后
    5 个，`data.sample()`从数据集中随机选择一个观察值。你可以使用`data.sample(5)`显示 5 个随机观察值。
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'What to look out for:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项：
- en: Can you understand the column names? Do they make sense? (Check with the variable
    definitions again if needed)
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你能理解列名吗？它们有意义吗？（如有需要，请再次检查变量定义）
- en: Do the values in these columns make sense?
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些列中的值有意义吗？
- en: Are there significant missing values (NaN) sighted?
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否发现了显著的缺失值（NaN）？
- en: What types of classes do the categorical features have?
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分类特征有哪些类别？
- en: My insights; the `Postcode `and `Propertycount` features both changed according
    to the `Suburb` feature. Also, there were significant missing values for the `BuildingArea `and `YearBuilt`.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我的见解：`Postcode`和`Propertycount`特征均根据`Suburb`特征发生了变化。此外，`BuildingArea`和`YearBuilt`存在显著的缺失值。
- en: Distribution
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分布
- en: This refers to how the values in a feature are distributed, or how often they
    occur. For numeric features, we’ll see how many times groups of numbers appear
    in a particular column, and for categorical features, the classes for each column
    and their frequency. We will use both **graphs** and actual summary **statistics**.
    The graphs enable us to get an overall idea of the distributions while the statistics
    give us factual numbers. These two strategies are both recommended as they complement
    each other.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这指的是特征中值的分布情况，或它们出现的频率。对于数值特征，我们将查看特定列中数字组出现的次数，而对于分类特征，则查看每列的类别及其频率。我们将使用**图形**和实际的汇总**统计**。图形使我们能够整体了解分布，而统计数据提供了实际数字。这两种策略都推荐使用，因为它们相辅相成。
- en: Numeric Features
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数值特征
- en: '**4\. Plot each numeric feature**'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**4\. 绘制每个数值特征**'
- en: We will use Pandas [histogram](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.hist.html).
    A histogram groups numbers into ranges (or bins) and the height of a bar shows
    how many numbers fall in that range. `df.hist()` plots a histogram of the data’s
    numeric features in a grid. We will also provide the `figsize` and `xrot` arguments
    to increase the grid size and rotate the x-axis by 45 degrees.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 Pandas [直方图](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.hist.html)。直方图将数字分组到范围（或区间）中，柱子的高度显示该范围内的数字数量。`df.hist()`在网格中绘制数据的数值特征的直方图。我们还将提供`figsize`和`xrot`参数，以增加网格大小并将
    x 轴旋转 45 度。
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Image for post](../Images/96dad936f185d8266d880b0fd7a70289.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![Image for post](../Images/96dad936f185d8266d880b0fd7a70289.png)'
- en: Histogram by author
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 作者的直方图
- en: 'What to look out for:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项：
- en: Possible outliers that cannot be explained or might be measurement errors
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能无法解释的异常值或可能是测量错误
- en: Numeric features that should be categorical. For example, `Gender` represented
    by 1 and 0.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应该是分类的数值特征。例如，`Gender`由 1 和 0 表示。
- en: Boundaries that do not make sense such as percentage values> 100.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不合理的边界值，如百分比值> 100。
- en: From the histogram, I noted that `BuildingArea` and `LandSize` had potential
    outliers to the right. Our target feature `Price` was also highly skewed to the
    right. I also noted that `YearBuilt` was very skewed to the left and the boundary
    started at the year 1200 which was odd. Let’s move on to the summary statistics
    for a clearer picture.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 从直方图中，我注意到`BuildingArea`和`LandSize`在右侧有潜在的异常值。我们的目标特征`Price`也高度偏向右侧。我还注意到`YearBuilt`非常偏向左侧，边界从1200年开始，这很奇怪。让我们继续查看汇总统计信息以获得更清晰的图像。
- en: '**5\. Summary statistics of the numerical features**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**5\. 数值特征的汇总统计信息**'
- en: Now that we have an intuitive feel of the numeric features, we will look at
    actual statistics using `df.describe()`which displays their summary statistics.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对数值特征有了直观的了解，我们将查看实际统计数据，使用`df.describe()`显示其汇总统计信息。
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We can see for each numeric feature, the *count* of values in it, the *mean* value, *std *or
    standard deviation, *minimum* value, the *25th* percentile, the *50th* percentile
    or median, the *75th* percentile, and the *maximum* value. From the count we can
    also identify the features with **missing values**; their count is not equal to
    the total number of rows of the dataset. These are `Car`, `LandSize` and `YearBuilt.`
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到每个数值特征的*count*（值的数量）、*mean*（均值）、*std*（标准差）、*minimum*（最小值）、*25th*（25百分位数）、*50th*（50百分位数或中位数）、*75th*（75百分位数）和*maximum*（最大值）。从count中我们还可以识别出具有**缺失值**的特征；它们的数量与数据集的总行数不相等。这些特征是`Car`、`LandSize`和`YearBuilt`。
- en: I noted that the minimum for both the `LandSize` and `BuildingArea` is 0\. We
    also see that the `Price` ranges from 85,000 to 9,000,000 which is a big range.
    We will explore these columns in detailed analysis later in the project.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我注意到`LandSize`和`BuildingArea`的最小值为0。我们还看到`Price`的范围从85,000到9,000,000，这是一个很大的范围。我们将在项目后续的详细分析中探索这些列。
- en: Looking at the `YearBuilt` feature, however, we note that the minimum year is
    1196\. This could be a possible data entry error that will be removed during cleaning.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，查看`YearBuilt`特征时，我们注意到最小年份为1196。这可能是数据输入错误，将在清理过程中删除。
- en: Categorical features
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分类特征
- en: '**6\. Summary statistics of the categorical features**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**6\. 分类特征的汇总统计信息**'
- en: For categorical features, it is important to show the summary statistics before
    we plot graphs because some features have a lot of unique classes (like we will
    see for the `Address`) and the classes would be unreadable if visualized on a
    countplot.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 对于分类特征，重要的是在绘制图形之前展示汇总统计信息，因为某些特征有很多独特的类别（如我们将看到的`Address`），如果在countplot上进行可视化，这些类别将变得难以阅读。
- en: To check the summary statistics of only the categorical features, we will use `df.describe(include=’object’)`
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查仅分类特征的汇总统计信息，我们将使用`df.describe(include='object')`
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![Image for post](../Images/ecd1ed1297aea86ac40705b14a1767b3.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![Image for post](../Images/ecd1ed1297aea86ac40705b14a1767b3.png)'
- en: Categorical summary statistics by author
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 作者分类汇总统计
- en: This table is a bit different from the one for numeric features. Here, we get
    the *count* of the values of each feature, the number of *unique* classes, the *top* most
    frequent class, and how *frequently* that class occurs in the data set.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这个表格与数值特征的表格略有不同。在这里，我们获得每个特征的*count*（值的数量）、*unique*（唯一类别的数量）、*top*（最频繁的类别）以及该类别在数据集中出现的*frequently*（频率）。
- en: We note that some classes have a lot of unique values such as `Address`, followed
    by `Suburb` and `SellerG`. From these findings, I will only plot the columns with
    10 or less unique classes. We also note that `CouncilArea` has missing values.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们注意到一些类别有很多独特的值，例如`Address`，其次是`Suburb`和`SellerG`。根据这些发现，我将仅绘制具有10个或更少独特类别的列。我们还注意到`CouncilArea`有缺失值。
- en: '**7\. Plot each categorical feature**'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**7\. 绘制每个分类特征**'
- en: Using the statistics above, we note that `Type`, `Method `and `Regionname `have
    less than 10 classes and can be effectively visualized. We will plot these features
    using the [Seaborn countplot](https://seaborn.pydata.org/generated/seaborn.countplot.html),
    which is like a histogram for categorical variables. Each bar in a countplot represents
    a unique class.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 根据上述统计数据，我们注意到`Type`、`Method`和`Regionname`有少于10个类别，可以有效地进行可视化。我们将使用[Seaborn
    countplot](https://seaborn.pydata.org/generated/seaborn.countplot.html)绘制这些特征，它类似于分类变量的直方图。countplot中的每一条柱子代表一个独特的类别。
- en: I created a [For loop](https://towardsdatascience.com/a-gentle-introduction-to-flow-control-loops-and-list-comprehensions-for-beginners-3dbaabd7cd8a).
    For each categorical feature, a countplot will be displayed to show how the classes
    are distributed for that feature. The line `df.select_dtypes(include=’object’)` selects
    the categorical columns with their values and displays them. We will also include
    an [If-statement](https://towardsdatascience.com/a-gentle-introduction-to-flow-control-loops-and-list-comprehensions-for-beginners-3dbaabd7cd8a) so
    as to pick only the three columns with 10 or fewer classes using the line `Series.nunique()
    < 10`. Read the `.nunique()` documentation [here](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.nunique.html).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我创建了一个[For loop](https://towardsdatascience.com/a-gentle-introduction-to-flow-control-loops-and-list-comprehensions-for-beginners-3dbaabd7cd8a)。对于每个分类特征，将显示一个计数图以展示该特征的类别分布。行`df.select_dtypes(include=’object’)`选择分类列及其值并显示它们。我们还将包括一个[If-statement](https://towardsdatascience.com/a-gentle-introduction-to-flow-control-loops-and-list-comprehensions-for-beginners-3dbaabd7cd8a)，以便仅选择包含10个或更少类别的三列，使用行`Series.nunique()
    < 10`。阅读`.nunique()`文档[这里](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.nunique.html)。
- en: '[PRE8]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![Image for post](../Images/6208f79308cff63d0955c7b208e98d23.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![Image for post](../Images/6208f79308cff63d0955c7b208e98d23.png)'
- en: Count plots by author
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 按作者绘制的计数图
- en: 'What to look out for:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项：
- en: Sparse classes which have the potential to affect a model’s performance.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稀疏类别可能会影响模型的性能。
- en: Mistakes in labeling of the classes, for example 2 exact classes with minor
    spelling differences.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类别标记错误，例如两个完全相同的类别只有细微的拼写差异。
- en: We note that `Regionname` has some sparse classes which might need to be merged
    or re-assigned during modeling.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们注意到`Regionname`有一些稀疏类别，这些类别在建模过程中可能需要合并或重新分配。
- en: Grouping and segmentation
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分组和分段
- en: Segmentation allows us to cut the data and observe the relationship between
    categorical and numeric features.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 分段允许我们切割数据并观察分类特征与数值特征之间的关系。
- en: '**8\. Segment the target variable by categorical features.**'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**8. 按分类特征对目标变量进行分段。**'
- en: Here, we will compare the target feature, `Price`, between the various classes
    of our main categorical features `(Type`, `Method` and `Regionname)` and see how
    the `Price` changes with the classes.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将比较目标特征`Price`与主要分类特征`(Type`、`Method`和`Regionname)`的各个类别之间的差异，并观察`Price`如何随类别变化。
- en: We use the [Seaborn boxplot](https://seaborn.pydata.org/generated/seaborn.boxplot.html) which
    plots the distribution of `Price` across the classes of categorical features. [This](https://www.geeksforgeeks.org/how-to-show-mean-on-boxplot-using-seaborn-in-python/) tutorial,
    from where I borrowed the Image below, explains the boxplot’s features clearly.
    The dots at both ends represent outliers.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了[Seaborn boxplot](https://seaborn.pydata.org/generated/seaborn.boxplot.html)，它绘制了`Price`在分类特征的各个类别中的分布。该[教程](https://www.geeksforgeeks.org/how-to-show-mean-on-boxplot-using-seaborn-in-python/)清晰地解释了箱线图的特征。两端的点表示离群值。
- en: '![Image for post](../Images/6abcbbcd16f872b135829f01e2cd5947.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![Image for post](../Images/6abcbbcd16f872b135829f01e2cd5947.png)'
- en: Image from [www.geekeforgeeks.org](https://www.geeksforgeeks.org/how-to-show-mean-on-boxplot-using-seaborn-in-python/)
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自[www.geekeforgeeks.org](https://www.geeksforgeeks.org/how-to-show-mean-on-boxplot-using-seaborn-in-python/)
- en: Again, I used a *for loop* to plot a boxplot of each categorical feature with `Price`.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我再次使用了一个*for loop*来绘制每个分类特征与`Price`的箱线图。
- en: '[PRE9]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![Image for post](../Images/6db28afbda3105515549d150ba4db0a9.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![Image for post](../Images/6db28afbda3105515549d150ba4db0a9.png)'
- en: Box plots by author
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 按作者绘制的箱线图
- en: 'What to look out for:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项：
- en: which classes most affect the target variables.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪些类别对目标变量的影响最大。
- en: Note how the `Price` is still sparsely distributed among the 3 sparse classes
    of `Regionname` seen earlier, strengthening our case against these classes.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到`Price`在之前看到的`Regionname`的3个稀疏类别中仍然分布稀疏，这进一步支持了我们对这些类别的论点。
- en: Also note how the `SA` class (the least frequent `Method` class) commands high
    prices, almost similar prices of the most frequently occurring class `S.`
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 还注意到`SA`类别（出现频率最低的`Method`类别）指令价格很高，几乎与最频繁出现的类别`S.`相似。
- en: '**9\. Group numeric features by each categorical feature.**'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**9. 按每个分类特征对数值特征进行分组。**'
- en: Here we will see how all the other numeric features, not just `Price`, change
    with each categorical feature by summarizing the numeric features across the classes.
    We use the [Dataframe’s groupby](https://www.shanelynn.ie/summarising-aggregation-and-grouping-data-in-python-pandas/) function
    to group the data by a category and calculate a metric (such as *mean*, *median*, *min*, *std, *etc)
    across the various numeric features.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将看到所有其他数值特征（不仅仅是 `Price`）如何随每个类别特征变化，通过总结各类别的数值特征来实现。我们使用 [Dataframe 的
    groupby](https://www.shanelynn.ie/summarising-aggregation-and-grouping-data-in-python-pandas/)
    函数按类别分组数据，并计算各种数值特征的指标（如 *均值*、*中位数*、*最小值*、*标准差* 等）。
- en: For only the 3 categorical features with less than 10 classes, we group the
    data, then calculate the `mean` across the numeric features. We use `display()` which
    results to a cleaner table than `print()`.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 对于只有 3 个类别特征且类别少于 10 的情况，我们对数据进行分组，然后计算数值特征的 `mean`。我们使用 `display()`，这比 `print()`
    结果更清晰。
- en: '[PRE10]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: We get to compare the `Type,` `Method` and `Regionname` classes across the numeric
    features to see how they are distributed.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以比较 `Type,` `Method` 和 `Regionname` 类别在数值特征上的分布情况。
- en: Relationships between numeric features and other numeric features
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数值特征与其他数值特征之间的关系
- en: '**10\. Correlations matrix for the different numerical features**'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**10. 不同数值特征的相关性矩阵**'
- en: A [correlation](https://www.mathsisfun.com/data/correlation.html) is a value
    between -1 and 1 that amounts to how closely values of two separate features move
    simultaneously. A *positive* correlation means that as one feature increases the
    other one also increases, while a *negative* correlation means one feature increases
    as the other decreases. Correlations close to 0 indicate a *weak* relationship
    while closer to -1 or 1 signifies a *strong* relationship.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '[相关性](https://www.mathsisfun.com/data/correlation.html)是一个介于 -1 和 1 之间的值，表示两个不同特征的值如何同时变化。*正相关*意味着当一个特征增加时，另一个特征也会增加，而*负相关*则表示一个特征增加时另一个特征减少。接近
    0 的相关性表示*弱*关系，而接近 -1 或 1 则表示*强*关系。'
- en: '![Image for post](../Images/88d80dd2671a58f0c17cab9179306523.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![Image for post](../Images/88d80dd2671a58f0c17cab9179306523.png)'
- en: Image from [edugyan.in](http://www.edugyan.in/2017/02/correlation-coefficient.html)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自 [edugyan.in](http://www.edugyan.in/2017/02/correlation-coefficient.html)
- en: We will use `df.corr()` to calculate the [correlations](https://machinelearningmastery.com/how-to-use-correlation-to-understand-the-relationship-between-variables/) between
    the numeric features and it returns a DataFrame.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 `df.corr()` 计算数值特征之间的 [相关性](https://machinelearningmastery.com/how-to-use-correlation-to-understand-the-relationship-between-variables/)，并返回一个
    DataFrame。
- en: '[PRE11]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This might not mean much now, so let us plot a heatmap to visualize the correlations.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这可能意义不大，所以让我们绘制一个热力图来可视化相关性。
- en: '**11\. Heatmap of the correlations**'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**11. 相关性的热力图**'
- en: We will use a [Seaborn heatmap](https://seaborn.pydata.org/generated/seaborn.heatmap.html) to
    plot the grid as a rectangular color-coded matrix. We use `sns.heatmap(corrs,
    cmap=’RdBu_r’,annot=True)`.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 [Seaborn 热力图](https://seaborn.pydata.org/generated/seaborn.heatmap.html)
    将网格绘制为矩形的颜色编码矩阵。我们使用 `sns.heatmap(corrs, cmap='RdBu_r', annot=True)`。
- en: The `cmap=‘RdBu_r’` argument tells the heatmap what colour palette to use. A
    high positive correlation appears as *dark red* and a high negative correlation
    as *dark blue*. Closer to white signifies a weak relationship. Read [this](https://medium.com/@morganjonesartist/color-guide-to-seaborn-palettes-da849406d44f) nice
    tutorial for other color palettes. `annot=True` includes the values of the correlations
    in the boxes for easier reading and interpretation.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`cmap=''RdBu_r''` 参数告诉热力图使用什么颜色调色板。高正相关性显示为 *深红色*，高负相关性显示为 *深蓝色*。接近白色表示弱关系。阅读
    [这个](https://medium.com/@morganjonesartist/color-guide-to-seaborn-palettes-da849406d44f)
    好教程获取其他颜色调色板。`annot=True` 包括了相关性值在框中，便于阅读和解释。'
- en: '[PRE12]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![Image for post](../Images/be9b497b0f0a6f548ea07f4e89e75e6c.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![Image for post](../Images/be9b497b0f0a6f548ea07f4e89e75e6c.png)'
- en: Heatmap by author
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 作者制作的热力图
- en: 'What to look out for:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的事项：
- en: Strongly correlated features; either dark red (positive) or dark blue(negative).
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强相关的特征；要么是深红色（正相关），要么是深蓝色（负相关）。
- en: Target variable; If it has strong positive or negative relationships with other
    features.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标变量；如果它与其他特征有强正相关或负相关关系。
- en: We note that `Rooms`, `Bedrooms2`, `Bathrooms`, and `Price` have strong positive
    relationships. On the other hand, `Price`, our target feature, has a slightly
    weak* negative* correlation with `YearBuilt` and an even weaker *negative* relationship
    with `Distance` from CBD.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们注意到`Rooms`、`Bedrooms2`、`Bathrooms`和`Price`之间有强正相关关系。另一方面，`Price`作为我们的目标特征，与`YearBuilt`有稍微弱*负*相关关系，与`Distance`从CBD的距离有更弱的*负*相关关系。
- en: In this article, we explored the Melbourne dataset and got a high-level understanding
    of the structure and its features. At this stage, we do not need to be 100% comprehensive
    because in future stages we will explore the data more elaborately. You can get
    the full code on Github [here](https://github.com/suemnjeri/medium-articles/blob/main/melbourne/EDA_melbourne_for_medium.ipynb).
    I will be uploading the dataset’s cleaning concepts soon.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们探讨了墨尔本数据集，并对其结构及特征有了初步了解。在这一阶段，我们不需要做到100%的全面，因为在未来的阶段，我们会更详细地探索数据。你可以在Github上获得完整的代码，[点击这里](https://github.com/suemnjeri/medium-articles/blob/main/melbourne/EDA_melbourne_for_medium.ipynb)。我将很快上传数据集清理的概念。
- en: '**Bio: [Susan Maina](https://www.linkedin.com/in/suemnjeri/)** is passionate
    about data, machine learning enthusiast, [writer at Medium](https://medium.com/@suemnjeri).'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介: [苏珊·梅纳](https://www.linkedin.com/in/suemnjeri/)** 对数据充满热情，是机器学习爱好者，[Medium上的作者](https://medium.com/@suemnjeri)。'
- en: '[Original](https://towardsdatascience.com/11-simple-code-blocks-for-complete-exploratory-data-analysis-eda-67c2817f56cd).
    Reposted with permission.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '[原始内容](https://towardsdatascience.com/11-simple-code-blocks-for-complete-exploratory-data-analysis-eda-67c2817f56cd)。经许可转载。'
- en: '**Related:**'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关内容:**'
- en: '[Powerful Exploratory Data Analysis in just two lines of code](/2021/02/powerful-exploratory-data-analysis-sweetviz.html)'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[仅用两行代码进行强大的探索性数据分析](/2021/02/powerful-exploratory-data-analysis-sweetviz.html)'
- en: '[Pandas Profiling: One-Line Magical Code for EDA](/2021/02/pandas-profiling-one-line-magical-code-eda.html)'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Pandas Profiling: 一行代码实现EDA](/2021/02/pandas-profiling-one-line-magical-code-eda.html)'
- en: '[Statistical and Visual Exploratory Data Analysis with One Line of Code](/2020/09/statistical-visual-exploratory-data-analysis-one-line-code.html)'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[一行代码进行统计和视觉探索性数据分析](/2020/09/statistical-visual-exploratory-data-analysis-one-line-code.html)'
- en: '* * *'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的3个顶级课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织在IT领域'
- en: '* * *'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[New Ways of Sharing Code Blocks for Data Scientists](https://www.kdnuggets.com/2022/03/new-ways-sharing-code-blocks.html)'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家共享代码块的新方法](https://www.kdnuggets.com/2022/03/new-ways-sharing-code-blocks.html)'
- en: '[A Data Scientist’s Essential Guide to Exploratory Data Analysis](https://www.kdnuggets.com/2023/06/data-scientist-essential-guide-exploratory-data-analysis.html)'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学家探索性数据分析的必备指南](https://www.kdnuggets.com/2023/06/data-scientist-essential-guide-exploratory-data-analysis.html)'
- en: '[How to Ace Data Science Assessment Test by Using Automatic EDA Tools](https://www.kdnuggets.com/2022/04/ace-data-science-assessment-test-automatic-eda-tools.html)'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何通过使用自动EDA工具来成功应对数据科学评估测试](https://www.kdnuggets.com/2022/04/ace-data-science-assessment-test-automatic-eda-tools.html)'
- en: '[Collection of Guides on Mastering SQL, Python, Data Cleaning, Data…](https://www.kdnuggets.com/collection-of-guides-on-mastering-sql-python-data-cleaning-data-wrangling-and-exploratory-data-analysis)'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[掌握SQL、Python、数据清理、数据处理等的指南汇总](https://www.kdnuggets.com/collection-of-guides-on-mastering-sql-python-data-cleaning-data-wrangling-and-exploratory-data-analysis)'
- en: '[Exploratory Data Analysis Techniques for Unstructured Data](https://www.kdnuggets.com/2023/05/exploratory-data-analysis-techniques-unstructured-data.html)'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[非结构化数据的探索性数据分析技术](https://www.kdnuggets.com/2023/05/exploratory-data-analysis-techniques-unstructured-data.html)'
- en: '[7 Steps to Mastering Exploratory Data Analysis](https://www.kdnuggets.com/7-steps-to-mastering-exploratory-data-analysis)'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[掌握探索性数据分析的7个步骤](https://www.kdnuggets.com/7-steps-to-mastering-exploratory-data-analysis)'
