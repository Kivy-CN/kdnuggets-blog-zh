- en: 'CDC Data Replication: Techniques, Tradeoffs, Insights'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CDC 数据复制：技术、权衡、见解
- en: 原文：[https://www.kdnuggets.com/2023/08/cdc-data-replication-techniques-tradeoffs-insights.html](https://www.kdnuggets.com/2023/08/cdc-data-replication-techniques-tradeoffs-insights.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2023/08/cdc-data-replication-techniques-tradeoffs-insights.html](https://www.kdnuggets.com/2023/08/cdc-data-replication-techniques-tradeoffs-insights.html)
- en: '![CDC Data Replication: Techniques, Tradeoffs, Insights](../Images/de50cce7fd391b4711058dae7ad0b0e1.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![CDC 数据复制：技术、权衡、见解](../Images/de50cce7fd391b4711058dae7ad0b0e1.png)'
- en: Many organizations across industries operate production databases in which most
    of the data does not change very frequently; that is, daily changes and updates
    only account for a relatively small portion of the overall amount of data stored
    in them. It is these organizations that can benefit most from change data capture
    (CDC) data replication.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 许多行业中的组织运营的生产数据库中，大多数数据不会频繁更改；也就是说，日常的更改和更新仅占存储在其中的数据总量的一小部分。正是这些组织最能从变更数据捕获（CDC）数据复制中受益。
- en: '* * *'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析水平'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你组织的 IT'
- en: '* * *'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: In this article, I will define CDC data replication, briefly discuss the most
    common use cases, and then talk about common techniques and the tradeoffs of each.
    Towards the end, I will give some general implementation insights that I’ve learned
    as the CEO and founder of data integration company Dataddo.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将定义 CDC 数据复制，简要讨论最常见的使用案例，然后谈论常见的技术及其权衡。最后，我将分享作为数据集成公司 Dataddo 的 CEO
    和创始人，我学到的一些实施见解。
- en: What Is Change Data Capture (CDC) Data Replication?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是变更数据捕获（CDC）数据复制？
- en: CDC data replication is a method of copying data in real or near real time between
    two databases whereby *only* newly added or modified data is copied.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: CDC 数据复制是一种在两个数据库之间实时或接近实时地复制数据的方法，其中*仅*复制新添加或修改的数据。
- en: It is an [alternative to snapshot replication](https://ceur-ws.org/Vol-3369/invited1.pdf),
    which involves moving an entire snapshot of one database to another again and
    again. Snapshot replication may be suitable for organizations that need to preserve
    individual snapshots of their data over time, but it’s very processing-intensive
    and leaves a big financial footprint. For organizations that don’t need to do
    this, CDC can save a lot of paid processing time.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种[快照复制的替代方案](https://ceur-ws.org/Vol-3369/invited1.pdf)，它涉及将一个数据库的整个快照不断移动到另一个数据库。快照复制可能适用于那些需要长期保留数据单个快照的组织，但它非常耗费处理能力，并且会产生巨大的财务开支。对于那些不需要这样做的组织，CDC
    可以节省大量的处理时间。
- en: Changes to data can be captured and delivered to their new destination in real
    time or in small batches (e.g. every hour).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 数据更改可以实时或以小批量（例如每小时）捕获并传递到其新目标。
- en: '![CDC Data Replication: Techniques, Tradeoffs, Insights](../Images/45ccb8b2d082582facb91e4d7957cf4d.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![CDC 数据复制：技术、权衡、见解](../Images/45ccb8b2d082582facb91e4d7957cf4d.png)'
- en: This image illustrates log-based CDC, where the red row is newly added data.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这张图展示了基于日志的 CDC，其中红色行是新添加的数据。
- en: It’s worth mentioning that CDC is not a new process. However, until recently,
    only large organizations had the engineering resources to implement it. What *is*
    new is the growing selection of managed tools that enable it for a fraction of
    the cost, hence its newfound popularity.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 值得一提的是，CDC 并不是一个新过程。然而，直到最近，只有大型组织拥有实现它的工程资源。*新*的是越来越多的托管工具可实现它且成本低廉，因此它的新兴受欢迎程度。
- en: Most Common CDC Use Cases
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最常见的 CDC 使用案例
- en: There’s not enough space in this article to cover all the use cases of CDC data
    replication, but here are three of the most common.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本文的篇幅不足以涵盖 CDC 数据复制的所有用例，但以下是三种最常见的。
- en: Data Warehousing for Business Intelligence and Analytics
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 商业智能和分析的数据仓储
- en: Any organization that runs a proprietary, data-collecting system is likely to
    have a production database that stores key info from this system.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 任何运行专有数据收集系统的组织都可能有一个存储该系统关键数据的生产数据库。
- en: Since production databases are designed for write operations, they don’t do
    much to put data into profitable use. Many organizations will therefore want to
    copy the data into a [data warehouse](/2022/09/organizations-need-data-warehouses.html),
    where they can run complex read operations for analytics and business intelligence.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 由于生产数据库是为写操作而设计的，因此它们不会将数据有效地利用。许多组织因此会希望将数据复制到一个[数据仓库](/2022/09/organizations-need-data-warehouses.html)中，以便可以进行复杂的读取操作以用于分析和商业智能。
- en: If your analytics team needs data in near real time, CDC is a good way to give
    it to them, because it will quickly deliver the changes to the analytics warehouse
    as they are made.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的分析团队需要近实时的数据，CDC 是一个很好的方式，因为它会迅速将更改传递到分析仓库中。
- en: Database Migration
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据库迁移
- en: CDC is also useful when you are migrating from one database technology to another,
    and you need to keep everything available in case of downtime. A classic example
    would be [migration from an on-premise database](/2023/04/11-best-practices-cloud-data-migration-aws-cloud.html)
    to a cloud database.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当你从一种数据库技术迁移到另一种时，CDC 也非常有用，你需要在停机情况下保持一切可用。一个经典的例子是[从本地数据库迁移](/2023/04/11-best-practices-cloud-data-migration-aws-cloud.html)到云数据库。
- en: Disaster Recovery
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 灾难恢复
- en: Similar to the migration case, CDC is an efficient and potentially cost-effective
    way to ensure all your data is available in multiple physical locations all the
    time, in case of downtime in one.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于迁移案例，CDC 是一种高效且可能具有成本效益的方式，可以确保所有数据始终在多个物理位置可用，以防其中一个位置出现停机。
- en: Common CDC Techniques and The Tradeoffs of Each
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 常见的 CDC 技术及其权衡
- en: There are three main CDC techniques, each with its own set of advantages and
    disadvantages.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: CDC 有三种主要技术，每种技术都有其自身的优缺点。
- en: '![CDC Data Replication: Techniques, Tradeoffs, Insights](../Images/1213377610dd04eabf3e4df83b21c638.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![CDC 数据复制：技术、权衡、见解](../Images/1213377610dd04eabf3e4df83b21c638.png)'
- en: CDC implementation involves tradeoffs between flexibility, fidelity, latency,
    maintenance, and security.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: CDC 实现涉及灵活性、保真度、延迟、维护和安全性之间的权衡。
- en: Query-Based CDC
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于查询的 CDC
- en: Query-based CDC is quite straightforward. All you do with this technique is
    [write a simple select query](/2023/03/sql-query-optimization-techniques.html)
    to select data from a specific table, followed by some condition, like “only select
    the data that was updated or added yesterday.” Assuming you already have the schema
    for a secondary table configured, these queries will then take this changed data
    and produce a new, two-dimensional table with the data, which can be inserted
    into a new location.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 基于查询的 CDC 非常简单。你只需使用这种技术[编写一个简单的选择查询](/2023/03/sql-query-optimization-techniques.html)来从特定表中选择数据，然后添加一些条件，比如“仅选择昨天更新或添加的数据。”假设你已经配置了一个备用表的模式，这些查询将捕获更改的数据并生成一个新的二维表，该表可以插入到新的位置。
- en: Advantages
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 优势
- en: '**Highly flexible**. Allows you to define which changes to capture and how
    to capture them. This makes it easier to customize the replication process in
    a very granular way.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高度灵活**。允许你定义要捕获哪些更改以及如何捕获它们。这使得以非常细粒度的方式自定义复制过程变得更容易。'
- en: '**Reduces overhead**. Only captures changes that meet specific criteria, so
    it’s much cheaper than CDC that captures all changes to a database.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**减少开销**。仅捕获符合特定标准的更改，因此比捕获所有数据库更改的 CDC 便宜得多。'
- en: '**Easier to troubleshoot**. Individual queries can easily be examined and corrected
    in case of any issues.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更容易故障排除**。可以轻松检查和纠正单独的查询，以解决任何问题。'
- en: Disadvantages
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺点
- en: '**Complex maintenance**. Each individual query has to be maintained. If you
    have a couple hundred tables in your database, for example, you would probably
    need this many queries as well, and maintaining all of them would be a nightmare.
    This is the main disadvantage.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**复杂的维护**。每个单独的查询都需要维护。例如，如果你的数据库中有几百个表，你可能需要这么多查询，而维护所有这些查询将是一个噩梦。这是主要的缺点。'
- en: '**Higher latency**. Relies on polling for changes, which can introduce delays
    in the replication process. This means that you cannot achieve real-time replications
    using select queries, and that you would need to schedule some kind of batch processing.
    This may not be much of a problem if you need to analyze something using a long
    time series, like customer behaviour.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**较高延迟**。依赖于轮询来检测更改，这可能会引入复制过程中的延迟。这意味着你无法通过选择查询实现实时复制，必须安排某种批处理。如果你需要分析长期时间序列的数据，如客户行为，这可能不是大问题。'
- en: Log-Based CDC
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于日志的CDC
- en: Most database technologies we use today support clustering, meaning you can
    run them in multiple replicas to achieve high availability. Such technologies
    must have some kind of binary log, which captures all changes to the database.
    In log-based CDC, changes are read from the log rather than the database itself,
    then replicated to the target system.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们今天使用的大多数数据库技术都支持集群，这意味着你可以在多个副本中运行它们以实现高可用性。这些技术必须有某种二进制日志，捕获数据库的所有更改。在基于日志的CDC中，更改是从日志中读取的，而不是数据库本身，然后复制到目标系统。
- en: Advantages
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 优势
- en: '**Low latency**. Data changes can be replicated very quickly to downstream
    systems.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**低延迟**。数据更改可以非常迅速地复制到下游系统。'
- en: '**High fidelity**. The logs capture *all* changes to the database, including
    data definition language (DDL) changes and data manipulation language (DML) changes.
    This makes it possible to track deleted rows (which is impossible with query-based
    CDC).'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高保真度**。日志捕获数据库的*所有*更改，包括数据定义语言（DDL）更改和数据操作语言（DML）更改。这使得追踪已删除的行成为可能（而基于查询的CDC无法做到这一点）。'
- en: Disadvantages
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺点
- en: '**Higher security risk**. Requires direct access to the database transaction
    log. This can raise security concerns, as it will require extensive access levels.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**较高的安全风险**。需要直接访问数据库事务日志。这可能引发安全问题，因为这需要广泛的访问权限。'
- en: '**Limited flexibility**. Captures all changes to the database, which limits
    the flexibility to define changes and customize the replication process. In case
    of high customization requirements, the logs will have to be heavily post-processed.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灵活性有限**。捕获数据库的所有更改，这限制了定义更改和定制复制过程的灵活性。如果有高度定制的需求，日志将需要进行大量后处理。'
- en: In general, log-based CDC is difficult to implement. See the “insights” section
    below for more information.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，基于日志的CDC实施起来很困难。有关更多信息，请参见下面的“见解”部分。
- en: Trigger-Based CDC
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于触发器的CDC
- en: Trigger-based CDC is kind of a blend between the first two techniques. It involves
    defining triggers for capturing certain changes in a table, which are then inserted
    into and tracked in a new table. It is from this new table that the changes are
    replicated to the target system.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 基于触发器的CDC是前三种技术的一种混合。它涉及为捕获表中的某些更改定义触发器，然后将这些更改插入并在新表中跟踪。从这个新表中，更改被复制到目标系统。
- en: Advantages
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 优势
- en: '**Flexibility**. Allows you to define which changes to capture and how to capture
    them (like in query-based CDC), including deleted rows (like in log-based CDC).'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灵活性**。允许你定义捕获哪些更改以及如何捕获它们（如基于查询的CDC），包括已删除的行（如基于日志的CDC）。'
- en: '**Low latency**. Each time a trigger fires, it counts as an event, and events
    can be processed in real time or near real time.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**低延迟**。每次触发器触发时，它都算作一个事件，事件可以实时或近实时处理。'
- en: Disadvantages
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺点
- en: '**Extremely complex maintenance**. Just like queries in query-based CDC, all
    triggers need to be maintained individually. So, if you have a database with 200
    tables and need to capture changes for all of them, your overall maintenance cost
    will be very high.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**极其复杂的维护**。就像基于查询的CDC中的查询一样，所有触发器都需要单独维护。因此，如果你有一个包含200个表的数据库，并需要捕获所有表的更改，你的整体维护成本将非常高。'
- en: Implementation Insights
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施见解
- en: As the CEO of a data integration company, I’ve had a lot of experience implementing
    CDC on scales large and small. Here are a few things I’ve learned along the way.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一家数据集成公司的首席执行官，我在大大小小的规模上实施CDC有很多经验。以下是我在过程中学到的一些东西。
- en: Different Implementations for Different Logs
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 针对不同日志的不同实现
- en: Log-based CDC is particularly complex. This is because all logs—e.g., BinLog
    for MySQL, WAL for Postgres, Redo Log for Oracle, Oplog for Mongo DB—although
    conceptually the same, are implemented differently. You will therefore need to
    dive deep into the low-level parameters of your chosen database to get things
    working.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 基于日志的 CDC 特别复杂。这是因为所有日志—例如 MySQL 的 BinLog、Postgres 的 WAL、Oracle 的 Redo Log、Mongo
    DB 的 Oplog—尽管概念上相同，但实现方式不同。因此，你需要深入了解所选数据库的低级参数，以使其正常工作。
- en: Writing Data Changes to the Target Destination
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将数据更改写入目标位置
- en: You will need to determine how exactly to insert, update, and delete data in
    your target destination.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要确定如何在目标位置插入、更新和删除数据。
- en: In general, inserting is easy, but volume plays a big role in dictating approach.
    Whether you use batch insert, data streaming, or decide to load changes using
    a file, you will always face technology tradeoffs.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，插入很简单，但数据量在决定方法上起着重要作用。无论你使用批量插入、数据流还是决定通过文件加载更改，你总会面临技术上的权衡。
- en: To ensure proper updating and avoid unnecessary duplicates, you will need to
    define a virtual key on top of your tables that tells your system what should
    be inserted and what should be updated.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保正确更新并避免不必要的重复，你需要在表上定义一个虚拟键，以告知系统哪些内容应该被插入，哪些内容应该被更新。
- en: To ensure proper deleting, you will need to have some failsafe mechanism to
    make sure that bad implementation won’t cause deletion of all the data in the
    target table.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保正确删除，你需要有一些备用机制，以确保错误的实现不会导致目标表中所有数据的删除。
- en: Maintaining Long-Running Jobs
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 维护长期运行的作业
- en: If you are transferring only a few rows, things will be quite easy, but if this
    is the case, then you probably don’t need CDC. So, in general, we can expect CDC
    jobs to take several minutes or even hours, and this will require reliable mechanisms
    for monitoring and maintenance.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只转移几行数据，事情会相当简单，但如果是这种情况，那么你可能不需要 CDC。因此，通常情况下，我们可以预期 CDC 作业将需要几分钟甚至几小时，这将需要可靠的监控和维护机制。
- en: Error Handling
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 错误处理
- en: This could be the topic of a separate article altogether. But, in short, I can
    say that each technology has a different way for how to raise exceptions and present
    errors. So, you should define a strategy for what to do if a connection fails.
    Should you retry it? Should you encapsulate everything in the transactions?
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能是另一个完全不同的主题。但简而言之，我可以说每种技术在引发异常和呈现错误方面的方式不同。因此，你应该定义一个策略来处理连接失败的情况。你应该重试吗？还是应该将所有内容封装在事务中？
- en: '![CDC Data Replication: Techniques, Tradeoffs, Insights](../Images/3dd7a5aeffc8c4bc67b20f33407900e9.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![CDC 数据复制：技术、权衡、见解](../Images/3dd7a5aeffc8c4bc67b20f33407900e9.png)'
- en: Implementing CDC data replication in-house is quite complicated and very case-specific.
    This is why it hasn’t traditionally been a popular replication solution, and also
    why it’s hard to give general advice about how to implement it. In recent years,
    managed tools like Dataddo, Informatica, SAP Replication Server, and others have
    significantly lowered the barrier to accessibility.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 实现内部 CDC 数据复制相当复杂且高度特定于案例。这就是为什么它传统上不被认为是一个流行的复制解决方案，也很难给出通用的实施建议。近年来，像 Dataddo、Informatica、SAP
    Replication Server 等托管工具显著降低了其可访问性门槛。
- en: Not for All, but Great for Some
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不是所有人都适用，但对某些人来说很棒
- en: 'As I mentioned at the beginning of this article, CDC has the potential save
    a lot of financial resources for companies:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我在文章开头提到的，CDC 有可能为公司节省大量财务资源：
- en: Whose main database consists largely of data that doesn’t frequently change
    (i.e. daily changes only account for a relatively small portion of the data in
    them)
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主要数据库中数据变化不频繁（即每日变化仅占其中数据的相对小部分）
- en: Whose analytics teams need data in near real time
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要实时接收数据的分析团队
- en: That don’t need to retain full snapshots of their main database over time
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不需要保留主数据库随时间变化的完整快照
- en: Nevertheless, there are no perfect technological solutions, only tradeoffs.
    And the same applies to CDC data replication. Those who choose to implement CDC
    will have to unequally prioritize flexibility, fidelity, latency, maintenance,
    and security.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，没有完美的技术解决方案，只有权衡。这同样适用于 CDC 数据复制。那些选择实现 CDC 的人将不得不不平等地优先考虑灵活性、准确性、延迟、维护和安全性。
- en: '**[Petr Nemeth](https://www.linkedin.com/in/petrnemeth/)** is the founder and
    CEO of Dataddo—a fully managed, no-code data integration platform that connects
    cloud-based services, dashboarding applications, data warehouses, and data lakes.
    The platform offers ETL, ELT, reverse ETL, and database replication functionality
    (including CDC), as well as an extensive portfolio of 200+ connectors, enabling
    business professionals with any level of technical expertise to send data from
    virtually any source to any destination. Before founding Dataddo, Petr worked
    as a developer, analyst, and system architect for telco, IT, and media companies
    on large-scale projects involving the internet of things, big data, and business
    intelligence.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Petr Nemeth](https://www.linkedin.com/in/petrnemeth/)** 是Dataddo的创始人兼首席执行官——一个完全托管的、无代码的数据集成平台，连接云服务、仪表盘应用程序、数据仓库和数据湖。该平台提供ETL、ELT、逆向ETL和数据库复制功能（包括CDC），以及200多个连接器的广泛组合，使得任何技术水平的业务专业人士都能够将数据从几乎任何来源发送到任何目的地。在创办Dataddo之前，Petr曾在电信、IT和媒体公司担任开发人员、分析师和系统架构师，参与涉及物联网、大数据和商业智能的大型项目。'
- en: More On This Topic
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关主题
- en: '[Software Mistakes and Tradeoffs: New book by Tomasz Lelek and…](https://www.kdnuggets.com/2021/12/manning-software-mistakes-tradeoffs-book.html)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[软件错误与权衡：Tomasz Lelek的新书](https://www.kdnuggets.com/2021/12/manning-software-mistakes-tradeoffs-book.html)'
- en: '[ChatGPT-Powered Data Exploration: Unlock Hidden Insights in Your Dataset](https://www.kdnuggets.com/2023/07/chatgptpowered-data-exploration-unlock-hidden-insights-dataset.html)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ChatGPT驱动的数据探索：揭示数据集中的隐藏洞察](https://www.kdnuggets.com/2023/07/chatgptpowered-data-exploration-unlock-hidden-insights-dataset.html)'
- en: '[5 Ways of Converting Unstructured Data into Structured Insights with LLMs](https://www.kdnuggets.com/5-ways-of-converting-unstructured-data-into-structured-insights-with-llms)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用LLMs将非结构化数据转化为结构化洞察的5种方法](https://www.kdnuggets.com/5-ways-of-converting-unstructured-data-into-structured-insights-with-llms)'
- en: '[Unlocking Data Insights: Key Pandas Functions for Effective Analysis](https://www.kdnuggets.com/unlocking-data-insights-key-pandas-functions-for-effective-analysis)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[解锁数据洞察：有效分析的关键Pandas函数](https://www.kdnuggets.com/unlocking-data-insights-key-pandas-functions-for-effective-analysis)'
- en: '[Key Factors Affecting the Time to Insights](https://www.kdnuggets.com/2023/03/key-factors-affecting-time-insights.html)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[影响洞察时间的关键因素](https://www.kdnuggets.com/2023/03/key-factors-affecting-time-insights.html)'
- en: '[Expert Insights on Developing Safe, Secure, and Trustworthy AI Frameworks](https://www.kdnuggets.com/expert-insights-on-developing-safe-secure-and-trustworthy-ai-frameworks)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开发安全、可靠和可信的AI框架的专家见解](https://www.kdnuggets.com/expert-insights-on-developing-safe-secure-and-trustworthy-ai-frameworks)'
