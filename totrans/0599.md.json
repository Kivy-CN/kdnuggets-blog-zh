["```py\nimport pandas as pd\nimport os\nimport numpy as np\nimport shutil\nimport ast\nfrom sklearn import model_selection\nfrom tqdm import tqdm\nimport wandb\nfrom sklearn.model_selection import GroupKFold\\\nfrom IPython.display import Image, clear_output  # to display images\nfrom os import listdir\nfrom os.path import isfile\nfrom glob import glob\nimport yaml\n# clear_output()\n```", "```py\nTRAIN_LABELS_PATH = './vinbigdata/labels/train'\nVAL_LABELS_PATH = './vinbigdata/labels/val'\nTRAIN_IMAGES_PATH = './vinbigdata/images/train' #12000\nVAL_IMAGES_PATH = './vinbigdata/images/val' #3000\nExternal_DIR = '../input/vinbigdata-512-image-dataset/vinbigdata/train' # 15000\nos.makedirs(TRAIN_LABELS_PATH, exist_ok = True)\nos.makedirs(VAL_LABELS_PATH, exist_ok = True)\nos.makedirs(TRAIN_IMAGES_PATH, exist_ok = True)\nos.makedirs(VAL_IMAGES_PATH, exist_ok = True)\nsize = 51\n```", "```py\ndf = pd.read_csv('../input/vinbigdata-512-image-dataset/vinbigdata/train.csv')\ndf.head()\n```", "```py\ndf = df[df.class_id!=14].reset_index(drop = True)\n```", "```py\ndf['x_min'] = df.apply(lambda row: (row.x_min)/row.width, axis = 1)*float(size)\ndf['y_min'] = df.apply(lambda row: (row.y_min)/row.height, axis = 1)*float(size)\ndf['x_max'] = df.apply(lambda row: (row.x_max)/row.width, axis =1)*float(size)\ndf['y_max'] = df.apply(lambda row: (row.y_max)/row.height, axis =1)*float(size)\n\ndf['x_mid'] = df.apply(lambda row: (row.x_max+row.x_min)/2, axis =1)\ndf['y_mid'] = df.apply(lambda row: (row.y_max+row.y_min)/2, axis =1)\n\ndf['w'] = df.apply(lambda row: (row.x_max-row.x_min), axis =1)\ndf['h'] = df.apply(lambda row: (row.y_max-row.y_min), axis =1)\n\ndf['x_mid'] /= float(size)\ndf['y_mid'] /= float(size)\n\ndf['w'] /= float(size)\ndf['h'] /= float(size)\n```", "```py\ndef preproccess_data(df, labels_path, images_path):\n    for column, row in tqdm(df.iterrows(), total=len(df)):\n        attributes = row[\n            [\"class_id\", \"x_mid\", \"y_mid\", \"w\", \"h\"]\n        ].values\n        attributes = np.array(attributes)\n        np.savetxt(\n            os.path.join(labels_path, f\"{row['image_id']}.txt\"),\n            [attributes],\n            fmt=[\"%d\", \"%f\", \"%f\", \"%f\", \"%f\"],\n        )\n        shutil.copy(\n            os.path.join(\n                \"/kaggle/input/vinbigdata-512-image-dataset/vinbigdata/train\",\n                f\"{row['image_id']}.png\",\n            ),\n            images_path,\n        )\n```", "```py\npreproccess_data(df, TRAIN_LABELS_PATH, TRAIN_IMAGES_PATH)\npreproccess_data(val_df, VAL_LABELS_PATH, VAL_IMAGES_PATH)\n```", "```py\n!git clone https://github.com/ultralytics/yolov5.git\n```", "```py\nclasses = [ 'Aortic enlargement',\n            'Atelectasis',\n            'Calcification',\n            'Cardiomegaly',\n            'Consolidation',\n            'ILD',\n            'Infiltration',\n            'Lung Opacity',\n            'Nodule/Mass',\n            'Other lesion',\n            'Pleural effusion',\n            'Pleural thickening',\n            'Pneumothorax',\n            'Pulmonary fibrosis']\n\ndata = dict(\n    train =  '../vinbigdata/images/train',\n    val   =  '../vinbigdata/images/val',\n    nc    = 14,\n    names = classes\n    )\n\nwith open('./yolov5/vinbigdata.yaml', 'w') as outfile:\n    yaml.dump(data, outfile, default_flow_style=False)\n\nf = open('./yolov5/vinbigdata.yaml', 'r')\nprint('\\nyaml:')\nprint(f.read())\n```", "```py\n%cd ./yolov5\n!pip install -U -r requirements.txt\n!pip install pycocotools>=2.0 seaborn>=0.11.0 pandas thop\nclear_output()\n```", "```py\n# b39dd18eed49a73a53fccd7b684ea7ecaed75b08\nwandb.login()\n```", "```py\n!python train.py --img 512 --batch 16 --epochs 100 --data ./vinbigdata.yaml --cfg models/yolov5x.yaml --weights yolov5x.pt --cache --name vin \n```", "```py\ntest_dir = (\n    f\"/kaggle/input/vinbigdata-{size}-image-dataset/vinbigdata/test\"\n)\nweights_dir = \"./runs/train/vin3/weights/best.pt\"\nos.listdir(\"./runs/train/vin3/weights\")\n```", "```py\n!python detect.py --weights $weights_dir\\\n--img 512\\\n--conf 0.15\\\n--iou 0.4\\\n--source $test_dir\\\n--save-txt --save-conf --exist-ok\n```"]