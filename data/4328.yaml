- en: Getting Started with 5 Essential Natural Language Processing Libraries
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用5个必备的自然语言处理库
- en: 原文：[https://www.kdnuggets.com/2021/02/getting-started-5-essential-nlp-libraries.html](https://www.kdnuggets.com/2021/02/getting-started-5-essential-nlp-libraries.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[https://www.kdnuggets.com/2021/02/getting-started-5-essential-nlp-libraries.html](https://www.kdnuggets.com/2021/02/getting-started-5-essential-nlp-libraries.html)'
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[comments](#comments)'
- en: Let's say that you have an understanding of how to [tackle natural language
    processing tasks](/2017/11/framework-approaching-textual-data-tasks.html). Let's
    also say that you have decided, more specifically, the type of [approach you will
    employ](/2018/10/main-approaches-natural-language-processing-tasks.html) in attempting
    to solve your task. You still need to put your plan into action, computationally,
    and there is a good chance you will be looking to leverage an existing NLP library
    to help you do so.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你已经理解了如何[处理自然语言处理任务](/2017/11/framework-approaching-textual-data-tasks.html)。假设你还决定了更具体的[方法](/2018/10/main-approaches-natural-language-processing-tasks.html)来尝试解决你的任务。你仍然需要在计算上付诸实践，很可能你会希望利用现有的NLP库来帮助你完成这项工作。
- en: Assuming you are programming in Python (I can't help you if not), there is quite
    a landscape of options to choose from. While this article is not an endorsement
    of any particular collection of such solutions, it serves as an overview to a
    curated list of 5 popular libraries you may look to in order to work on your problems.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你正在用Python编程（如果不是，我无法帮助你），有很多选项可以选择。尽管本文并不支持任何特定的解决方案集合，但它提供了一个概述，列出了5个你可能会考虑使用的流行库，以便解决你的问题。
- en: '![Image](../Images/9ba55d4188bf9f2b2ebbe9669cfeb28c.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/9ba55d4188bf9f2b2ebbe9669cfeb28c.png)'
- en: 1\. [Hugging Face Datasets](https://github.com/huggingface/datasets)
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1\. [Hugging Face Datasets](https://github.com/huggingface/datasets)
- en: Hugging Face's Datasets library is, in essence, a packaged collection of publicly-available
    NLP datasets with a common set of APIs and data formats, as well as some ancillary
    functionality.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Hugging Face的Datasets库本质上是一个包含公共NLP数据集的打包集合，提供了一组通用的API和数据格式，以及一些辅助功能。
- en: The largest hub of ready-to-use NLP datasets for ML models with fast, easy-to-use
    and efficient data manipulation tools.
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 最大的即用型NLP数据集中心，具有快速、易用和高效的数据操作工具。
- en: 'One can easily install Datasets with:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 可以轻松通过以下方式安装Datasets：
- en: '`pip install datasets`'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip install datasets`'
- en: 'Datasets is further described as providing two main features: one-line dataloaders
    for many public datasets, and efficient data pre-processing. This description
    glosses over another major piece of the library, however: a number of built-in
    evaluation metrics relevant to NLP tasks. The library also has additional features
    such as back-end memory management of datasets and interoperability with popular
    Python tools such as NumPy, Pandas, along with major machine learning platforms
    TensorFlow and PyTorch.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Datasets进一步描述了两个主要功能：对许多公共数据集的一行数据加载器，以及高效的数据预处理。然而，这种描述忽略了库的另一个主要部分：多个与NLP任务相关的内置评估指标。该库还具有其他功能，例如数据集的后端内存管理以及与流行Python工具（如NumPy、Pandas）及主要机器学习平台TensorFlow和PyTorch的互操作性。
- en: 'Let''s first look at loading a dataset:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 首先来看一下加载数据集：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Loading a metric is just as straightforward:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 加载一个评估指标同样简单：
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: What you do with them is up to you, but loading a publicly-accessible dataset
    and a tried and true evaluation metric has never been easier.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你如何使用它们取决于你，但加载一个公开可用的数据集和一个经过验证的评估指标从未如此简单。
- en: '![Image](../Images/a6beb9cb856e2446cd3b346147b3ffc6.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/a6beb9cb856e2446cd3b346147b3ffc6.png)'
- en: 2\. [TextHero](https://github.com/jbesomi/texthero)
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2\. [TextHero](https://github.com/jbesomi/texthero)
- en: 'TextHero is succinctly described in its Github repo as:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: TextHero在其Github仓库中简洁地描述为：
- en: Text preprocessing, representation and visualization from zero to hero.
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 从零到英雄的文本预处理、表示和可视化。
- en: 'Though this does a fine job of explaining in a few words what you might use
    this library for, the following answer to the question of "why TextHero?" from
    the repo sheds a little more light as to the reasoning behind the library:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这简要解释了你可能如何使用这个库，但以下对“为什么选择TextHero？”的回答则进一步阐明了库背后的理由：
- en: 'In a very pragmatic way, texthero has just one goal: make the developer spare
    time. Working with text data can be a pain and in most cases, a default pipeline
    can be quite good to start. There is always time to come back and improve previous
    work.'
  id: totrans-24
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 以一种非常务实的方式，texthero 只有一个目标：让开发者节省时间。处理文本数据可能很麻烦，而且在大多数情况下，默认管道足以作为起点。总是有时间回过头来改进之前的工作。
- en: 'Now that you know why you might use TextHero, here''s how to install it:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你知道了为什么可能会使用 TextHero，下面是如何安装它：
- en: '`pip install texthero`'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip install texthero`'
- en: A look at the [getting started guide](https://texthero.org/docs/getting-started)
    shows what you can accomplish in a few lines of code. With the below example from
    the TextHero Github repo, we will load a dataset, clean it, create a TF-IDF representation,
    perform principle component analysis, and plot the results of this PCA.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 [入门指南](https://texthero.org/docs/getting-started) 可以看到你在几行代码中可以完成的工作。通过下面的
    TextHero Github repo 示例，我们将加载一个数据集，清理它，创建一个 TF-IDF 表示，执行主成分分析，并绘制 PCA 的结果。
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Image](../Images/45004de2ba3bfec6fa40ae32d5e6c9ca.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/45004de2ba3bfec6fa40ae32d5e6c9ca.png)'
- en: There is much more you can accomplish with TextHero, so check the rest of the
    [documentation](https://texthero.org/docs/api-preprocessing) for info on data
    cleaning and preprocessing, visualization, representation, basic NLP tasks, and
    more.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以用 TextHero 完成更多的工作，所以请查看其余的 [文档](https://texthero.org/docs/api-preprocessing)，以获取有关数据清理和预处理、可视化、表示、基本
    NLP 任务等的更多信息。
- en: 3\. [spaCy](https://spacy.io/)
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3\. [spaCy](https://spacy.io/)
- en: spaCy is specifically designed with the goal of being a useful library for implementing
    production-ready systems.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: spaCy 专门设计为一个有用的库，旨在实现生产就绪的系统。
- en: spaCy is designed to help you do real work — to build real products, or gather
    real insights. The library respects your time, and tries to avoid wasting it.
    It's easy to install, and its API is simple and productive. We like to think of
    spaCy as the Ruby on Rails of Natural Language Processing.
  id: totrans-33
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: spaCy 旨在帮助你进行实际工作——构建真正的产品或获取实际的见解。这个库尊重你的时间，并尽量避免浪费它。它容易安装，API 简单而高效。我们喜欢把
    spaCy 视为自然语言处理领域的 Ruby on Rails。
- en: '![spaCy](../Images/ac8b64d9ed3e4f4dabebdebe8a412eca.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![spaCy](../Images/ac8b64d9ed3e4f4dabebdebe8a412eca.png)'
- en: 'So when you are ready to get to doing some real work, you need to first install
    spaCy and at least one language model. In this example we will use its English
    language model. The installation of both the library and the language model can
    be accomplished with these lines:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 所以当你准备好进行实际工作时，你首先需要安装 spaCy 和至少一个语言模型。在这个示例中，我们将使用它的英文语言模型。库和语言模型的安装可以通过以下命令完成：
- en: '`pip install spacy python -m spacy download en`'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip install spacy python -m spacy download en`'
- en: 'To get started with spaCy, we will use this sentence of sample text:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用 spaCy，我们将使用这个示例文本句子：
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now let's import spaCy and a list of English stop words. We also load the English
    language model as a `Language` object (we will call it 'nlp' out of spaCy convention),
    and then call the `nlp` object on our sample text, which returns a processed `Doc`
    object (which we cleverly call 'doc').
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们导入 spaCy 和一份英文停用词列表。我们还会加载英文语言模型作为一个 `Language` 对象（按照 spaCy 的惯例，我们将其称为
    'nlp'），然后在我们的示例文本上调用 `nlp` 对象，它返回一个处理后的 `Doc` 对象（我们巧妙地称之为 'doc'）。
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'So... that''s it? From the [spaCy documentation](https://spacy.io/usage/spacy-101):'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 所以……就这样？从 [spaCy 文档](https://spacy.io/usage/spacy-101)：
- en: Even though a Doc is processed – e.g. split into individual words and annotated
    – it still holds **all information of the original text**, like whitespace characters.
    You can always get the offset of a token into the original string, or reconstruct
    the original by joining the tokens and their trailing whitespace. This way, you'll
    never lose any information when processing text with spaCy.
  id: totrans-42
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 即使一个 Doc 已经被处理——例如，分割成单独的词汇并进行注释——它仍然保留**原始文本的所有信息**，如空白字符。你总是可以获取一个 token 在原始字符串中的偏移量，或者通过连接
    tokens 和它们的尾随空白字符来重建原始文本。这样，你在使用 spaCy 处理文本时不会丢失任何信息。
- en: 'Now, let''s have a look at that processed sample:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看这个处理后的示例：
- en: '[PRE7]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: spaCy is powerful, opinionated, and can be useful for a wide array of NLP tasks,
    from preprocessing, to representation, to modeling. Check out the [spaCy documentation](https://spacy.io/usage/spacy-101)
    to see where you can go from here.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: spaCy 强大且有明确的观点，可以用于各种 NLP 任务，从预处理到表示再到建模。查看 [spaCy 文档](https://spacy.io/usage/spacy-101)，了解你可以从这里开始做什么。
- en: '![Image](../Images/3ef26cbcf926105f40e47a653929b0dc.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/3ef26cbcf926105f40e47a653929b0dc.png)'
- en: 4\. [Hugging Face Transformers](https://github.com/huggingface/transformers)
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4\. [Hugging Face Transformers](https://github.com/huggingface/transformers)
- en: It's hard to overstate how integral to the practice of NLP the Hugging Face
    Transformers library has become. By providing access to
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 难以过分强调Hugging Face Transformers库在NLP实践中的重要性。通过提供访问
- en: 'The big picture, directly from the Github repo:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 从Github仓库直接获得的大图景：
- en: '**State-of-the-art Natural Language Processing for PyTorch and TensorFlow 2.0**'
  id: totrans-51
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**最先进的自然语言处理（NLP）用于PyTorch和TensorFlow 2.0**'
- en: ''
  id: totrans-52
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Transformers provides thousands of pretrained models to perform tasks on texts
    such as classification, information extraction, question answering, summarization,
    translation, text generation, etc in 100+ languages. Its aim is to make cutting-edge
    NLP easier to use for everyone.
  id: totrans-53
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Transformers提供了数千个预训练模型，用于执行文本分类、信息提取、问答、摘要、翻译、文本生成等任务，支持100多种语言。其目标是使尖端NLP技术对所有人更易使用。
- en: ''
  id: totrans-54
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Transformers provides APIs to quickly download and use those pretrained models
    on a given text, fine-tune them on your own datasets then share them with the
    community on our model hub. At the same time, each python module defining an architecture
    can be used as a standalone and modified to enable quick research experiments.
  id: totrans-55
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Transformers提供API，快速下载和使用这些预训练模型，针对给定文本进行微调，然后在我们的模型中心与社区分享。同时，每个定义架构的python模块可以作为独立模块使用并进行修改，以便进行快速研究实验。
- en: ''
  id: totrans-56
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Transformers is backed by the two most popular deep learning libraries, PyTorch
    and TensorFlow, with a seamless integration between them, allowing you to train
    your models with one then load it for inference with the other.
  id: totrans-57
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Transformers由两个最流行的深度学习库PyTorch和TensorFlow支持，它们之间的集成无缝，允许你使用一个库训练模型，然后用另一个库加载进行推理。
- en: You can test out the Transformer library online using [Write With Transformer](https://transformer.huggingface.co/),
    the official demo of just what the library is capable of.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用[Write With Transformer](https://transformer.huggingface.co/)在线测试Transformer库，这是该库功能的官方演示。
- en: 'Installation of this complex library is simple:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这个复杂库的安装很简单：
- en: '`pip install transformers`'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip install transformers`'
- en: 'There is an awful lot to the Transformers library, and you could spend a lot
    of time learning all of its ins and outs. However, the inclusion of the pipeline
    API allows for the immediate use of a model out of the gate, with little configuration
    necessary. Here is an example of how to use a Transformers pipeline for classification
    (note that either TensorFlow or PyTorch should be installed to proceed):'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Transformers库内容繁多，你可能需要花费很多时间了解它的方方面面。然而，管道API的加入允许立即使用模型，几乎无需配置。下面是如何使用Transformers管道进行分类的示例（注意，需要安装TensorFlow或PyTorch才能继续）：
- en: '[PRE9]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Ridiculously, that's it. The pipeline uses a pre-trained model as well as the
    preprocessing used for that model, and even without fine-tuning the results can
    be quite compelling.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 荒谬的是，仅此而已。该管道使用预训练模型以及该模型所用的预处理，即使不进行微调，结果也可以非常引人注目。
- en: 'Here is a second pipeline example, this time for question answering:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个第二个管道示例，这次用于问答：
- en: '[PRE11]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: A simple pair of examples, to be sure, but these pipelines are much more powerful
    than only being able to solve trivial KDnuggets-related tasks! You can read more
    about pipelines [here](https://huggingface.co/transformers/main_classes/pipelines.html).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是简单的例子，但这些管道比仅仅能够解决琐碎的KDnuggets相关任务要强大得多！你可以[在这里](https://huggingface.co/transformers/main_classes/pipelines.html)阅读更多关于管道的内容。
- en: Transformers makes state of the art models easy to use, and available to everyone.
    Visit the library's [Github repo](https://github.com/huggingface/transformers)
    to start exploring more.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Transformers使最先进的模型易于使用，并对所有人开放。访问库的[Github仓库](https://github.com/huggingface/transformers)开始探索更多。
- en: 5\. [Scattertext](https://github.com/JasonKessler/scattertext)
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5\. [Scattertext](https://github.com/JasonKessler/scattertext)
- en: 'Scattertext is made for creating attractive visualizations depicting how language
    differs among document types. From its Github repo:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Scattertext用于创建引人注目的可视化，展示语言在不同文档类型中的差异。来自其Github仓库：
- en: A tool for finding distinguishing terms in corpora, and presenting them in an
    interactive, HTML scatter plot. Points corresponding to terms are selectively
    labeled so that they don't overlap with other labels or points.
  id: totrans-72
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个用于在语料库中查找区分性术语并以交互式HTML散点图呈现的工具。对应术语的点被选择性标记，以避免与其他标签或点重叠。
- en: 'If you can''t guess by now, installation is accomplished with:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在还没猜到，安装方法如下：
- en: '`pip install scattertext`'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip install scattertext`'
- en: The following example is from the Github repo, visualizing terms used at the
    2012 US political conventions.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例来自 GitHub 仓库，展示了 2012 年美国政治大会上使用的术语。
- en: The 2,000 most party-associated unigrams are displayed as points in the scatter
    plot. Their x- and y- axes are the dense ranks of their usage by Republican and
    Democratic speakers respectively.
  id: totrans-76
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 2,000 个与政党相关的单词被显示为散点图中的点。它们的 x 轴和 y 轴分别是由共和党和民主党发言者使用的密集排名。
- en: Note that running the example code produces an HTML file which can then be viewed
    and interacted with in your browser.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，运行示例代码会生成一个 HTML 文件，之后可以在浏览器中查看和交互。
- en: '[PRE13]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The results of the saved HTML file, when viewed (not this is a static image
    shown below, and is therefore not interactive):'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 保存的 HTML 文件的结果在查看时（注意这只是下面显示的静态图像，因此不可交互）：
- en: '![Image](../Images/539bdcfecf11df6883253007c076844e.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../Images/539bdcfecf11df6883253007c076844e.png)'
- en: Scattertext serves a narrow and defined purpose, but does so very well. The
    visualizations are definitely beautiful, and, just as importantly, insightful.
    Visit their Github repository for more info and what else can be done with the
    library.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Scattertext 具有明确而狭窄的目的，但它做得非常好。其可视化效果绝对美丽，而且同样重要的是，具有深刻的洞察力。访问他们的 GitHub 仓库以获取更多信息和该库的其他用途。
- en: '**Related**:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关**：'
- en: '[Top Python Libraries for Deep Learning, Natural Language Processing & Computer
    Vision](/2020/11/top-python-libraries-deep-learning-natural-language-processing-computer-vision.html)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用于深度学习、自然语言处理和计算机视觉的顶级 Python 库](/2020/11/top-python-libraries-deep-learning-natural-language-processing-computer-vision.html)'
- en: '[5 Fantastic Natural Language Processing Books](/2020/07/5-fantastic-nlp-books.html)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5 本极好的自然语言处理书籍](/2020/07/5-fantastic-nlp-books.html)'
- en: '[The Best NLP with Deep Learning Course is Free](/2020/05/best-nlp-deep-learning-course-free.html)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[最佳 NLP 深度学习课程免费提供](/2020/05/best-nlp-deep-learning-course-free.html)'
- en: More On This Topic
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个数据科学家都应该了解的三个 R 库（即使你使用 Python）](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[是什么让 Python 成为初创企业理想的编程语言](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[停止学习数据科学以寻找目标，找到目标以…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[一个 90 亿美元的人工智能失败案例分析](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习数据科学统计的顶级资源](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[成功数据科学家的 5 个特征](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
