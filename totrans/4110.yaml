- en: 5 Ways of Filtering Python Lists
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 筛选 Python 列表的 5 种方法
- en: 原文：[https://www.kdnuggets.com/2022/11/5-ways-filtering-python-lists.html](https://www.kdnuggets.com/2022/11/5-ways-filtering-python-lists.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2022/11/5-ways-filtering-python-lists.html](https://www.kdnuggets.com/2022/11/5-ways-filtering-python-lists.html)
- en: '![5 Ways of Filtering Python Lists](../Images/ed355b7ccc3f6c42d2f034242454ba60.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![筛选 Python 列表的 5 种方法](../Images/ed355b7ccc3f6c42d2f034242454ba60.png)'
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片作者
- en: In this quick tutorial, you will learn 5 simple ways to filter the list elements.
    It is not limited to data folks, even web developers and software engineers use
    it on a daily basis. In short, filtering the list is the basic functionality that
    every Python programmer should learn at the beginning.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个简短的教程中，你将学习 5 种简单的列表筛选方法。它不仅限于数据工作者，甚至网页开发人员和软件工程师也每天使用它。简而言之，筛选列表是每个 Python
    程序员在开始时应该学习的基本功能。
- en: 1\. Using for Loop
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 使用 for 循环
- en: By using the for loop and if-else statements, we will iterate over the list
    and select the elements that fit the specific condition. In our case, we will
    filter out the profits that are greater than or equal to 100.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 for 循环和 if-else 语句，我们将迭代列表并选择符合特定条件的元素。在我们的例子中，我们将筛选出大于或等于 100 的利润。
- en: By using this method, we are creating a new list and adding the filtered value
    to the new list. It is a simple, but not efficient way of filtering the list.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种方法，我们创建了一个新列表，并将筛选出的值添加到新列表中。这是一种简单但效率不高的列表筛选方式。
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 2\. List Comprehension
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 列表推导式
- en: List comprehension is a smart way of using for-loop and if-else conditions on
    lists. You can translate method one into a single line of code. It is clean.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 列表推导式是对列表使用 for 循环和 if-else 条件的一种聪明方法。你可以将方法一转换为一行代码。这种方法很简洁。
- en: In our case, we are running the loop over all of the list elements and selecting
    the score that is greater than or equal to 150.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，我们对所有列表元素进行循环，并选择大于或等于 150 的分数。
- en: It is easy to write, and you can even add multiple if-else conditions without
    an issue.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 编写起来很简单，你甚至可以添加多个 if-else 条件而没有问题。
- en: Learn list comprehension with code examples by reading [When to Use a List Comprehension
    in Python](https://realpython.com/list-comprehension-python/).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 通过阅读 [Python 中何时使用列表推导式](https://realpython.com/list-comprehension-python/)
    来学习列表推导式的代码示例。
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 3\. Pattern Matching
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 模式匹配
- en: To filter the string list, we will use `re.match()`. It requires the string
    pattern and the string.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要筛选字符串列表，我们将使用 `re.match()`。它需要字符串模式和字符串。
- en: In our case, we are using lists comprehension to filter out the names that start
    with “N” by providing a regex pattern of “N.*” to `re.match()`.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，我们使用列表推导式通过提供正则表达式模式 “N.*” 给 `re.match()` 来筛选出以 “N” 开头的名称。
- en: You can learn, build, and test regex patterns by visiting [regex101](https://regex101.com/).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过访问 [regex101](https://regex101.com/) 来学习、构建和测试正则表达式模式。
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 4\. Using filter() Method
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 使用 filter() 方法
- en: The `filter()` is a built-in Python function to filter list items. It requires
    a filter function and list `filter(fn, list)`.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`filter()` 是一个内置的 Python 函数，用于筛选列表项。它需要一个筛选函数和列表 `filter(fn, list)`。'
- en: In our case, we will create a **filter_height** function. It returns *True*
    when height is less than 150 else *False*.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，我们将创建一个 **filter_height** 函数。它在高度小于 150 时返回 *True*，否则返回 *False*。
- en: After that, we will apply the filter_height function to the list using the `filter()`
    function, and in return, we get an iterator of filtered elements. You can either
    use a loop to extract all of the elements or convert it into a list using the
    `list(<iter>)` function.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将使用 `filter()` 函数将 `filter_height` 函数应用于列表，然后返回一个筛选后的元素迭代器。你可以使用循环提取所有元素，也可以使用
    `list(<iter>)` 函数将其转换为列表。
- en: '[PRE6]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 5\. Using Lambda Function
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 使用 Lambda 函数
- en: You can convert method four (filter() Method) into a single line by using lambda
    function.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过使用 Lambda 函数将方法四（`filter()` 方法）转换为一行代码。
- en: Instead of creating a **filter_age** function separately, we can write the condition
    within the `filter()` function using lambda.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 与其单独创建一个 **filter_age** 函数，不如在 `filter()` 函数中使用 Lambda 编写条件。
- en: In our case, we are filtering the age that is greater than 50 and converting
    the filtered iterator into the list.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，我们筛选出年龄大于 50 的项，并将筛选后的迭代器转换为列表。
- en: Learn more about lambda functions by following the [Python Lambda](https://www.w3schools.com/python/python_lambda.asp)
    tutorial.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 通过阅读 [Python Lambda](https://www.w3schools.com/python/python_lambda.asp) 教程，了解更多关于
    Lambda 函数的信息。
- en: '[PRE8]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**[Abid Ali Awan](https://www.polywork.com/kingabzpro)** ([@1abidaliawan](https://twitter.com/1abidaliawan))
    is a certified data scientist professional who loves building machine learning
    models. Currently, he is focusing on content creation and writing technical blogs
    on machine learning and data science technologies. Abid holds a Master''s degree
    in Technology Management and a bachelor''s degree in Telecommunication Engineering.
    His vision is to build an AI product using a graph neural network for students
    struggling with mental illness.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Abid Ali Awan](https://www.polywork.com/kingabzpro)** ([@1abidaliawan](https://twitter.com/1abidaliawan))
    是一位认证的数据科学专业人士，热衷于构建机器学习模型。目前，他专注于内容创作，并撰写关于机器学习和数据科学技术的技术博客。Abid 拥有技术管理硕士学位和电信工程学士学位。他的愿景是利用图神经网络为那些挣扎于心理健康问题的学生开发一个
    AI 产品。'
- en: '* * *'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升您的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持组织的 IT 需求'
- en: '* * *'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Five Ways to do Conditional Filtering in Pandas](https://www.kdnuggets.com/2022/12/five-ways-conditional-filtering-pandas.html)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Pandas 中进行条件过滤的五种方法](https://www.kdnuggets.com/2022/12/five-ways-conditional-filtering-pandas.html)'
- en: '[An Intuitive Explanation of Collaborative Filtering](https://www.kdnuggets.com/2022/09/intuitive-explanation-collaborative-filtering.html)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[直观解释协作过滤](https://www.kdnuggets.com/2022/09/intuitive-explanation-collaborative-filtering.html)'
- en: '[5 Different Ways to Load Data in Python](https://www.kdnuggets.com/2020/08/5-different-ways-load-data-python.html)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Python 中加载数据的 5 种不同方法](https://www.kdnuggets.com/2020/08/5-different-ways-load-data-python.html)'
- en: '[3 Ways to Process CSV Files in Python](https://www.kdnuggets.com/2022/10/3-ways-process-csv-files-python.html)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Python 中处理 CSV 文件的 3 种方法](https://www.kdnuggets.com/2022/10/3-ways-process-csv-files-python.html)'
- en: '[3 Simple Ways to Speed Up Your Python Code](https://www.kdnuggets.com/2022/10/3-simple-ways-speed-python-code.html)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[加速 Python 代码的 3 种简单方法](https://www.kdnuggets.com/2022/10/3-simple-ways-speed-python-code.html)'
- en: '[3 Ways of Building Python Projects using GPT-4o](https://www.kdnuggets.com/3-ways-of-building-python-projects-using-gpt-4o)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 GPT-4o 构建 Python 项目的 3 种方法](https://www.kdnuggets.com/3-ways-of-building-python-projects-using-gpt-4o)'
