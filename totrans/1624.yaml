- en: Data Scientist guide for getting started with Docker
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2018/08/data-scientist-guide-getting-started-docker.html](https://www.kdnuggets.com/2018/08/data-scientist-guide-getting-started-docker.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '![](../Images/697b3b027b367f7b51f2490ec6639d33.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Introduction**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Docker is an increasingly popular tool designed to make it easier to create,
    deploy and run applications within a container. Containers are extremely useful
    as they allow developers to package up an application with all the parts it needs,
    such as libraries and other dependencies, and ship it all out as one package.
    It’s commonly used by software engineers, but how can Data Scientist’s get started
    with this powerful tool? Well, before we get into the guide for getting started,
    let’s discuss some of the reasons you may want to use Docker for Data Science.
  prefs: []
  type: TYPE_NORMAL
- en: '**Why Docker?**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Reproducibility
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: One of Docker’s biggest draws is its reproducibility. Aside from sharing the
    Docker image itself, you could in theory share a python script with the results
    baked inside the Docker. A colleague could then run this to see for themselves
    what’s in the Docker image.
  prefs: []
  type: TYPE_NORMAL
- en: '**Time**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: You can save a lot of time as you don’t have to install the individual packages
    as they’re all contained within the Docker image itself. Furthermore, a Docker
    container’s start time to boot up is around 50ms, significantly quicker than running
    a more traditional virtual machine.
  prefs: []
  type: TYPE_NORMAL
- en: Flexibility
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: It’s an extremely flexible tool because you can quickly run any software that
    has a Docker image created in the Docker library.
  prefs: []
  type: TYPE_NORMAL
- en: ­Build Environment
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Docker is useful for testing a build environment before you host it on the live
    server. You can configure the Docker container to be the same as the server’s
    environment, making it easy to test.
  prefs: []
  type: TYPE_NORMAL
- en: Distribution
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Data scientists can spend hours preparing their machines to accommodate a specific
    framework. For example, there are 30 + unique ways for someone to setup a Caffe
    environment. Docker provides a consistent platform to share these tools, reducing
    the time wasted in searching for operating system specific installers and libraries.
  prefs: []
  type: TYPE_NORMAL
- en: Accessibility
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The Docker eco-system – docker compose and docker machine – make it easily accessible
    for anyone. It means that a member of the company who isn’t familiar with the
    code inside it can still run it. Perfect for members of the sales team, or higher
    management to show off that new data science application you’ve been building!
  prefs: []
  type: TYPE_NORMAL
- en: '**Getting Started**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Hopefully we’ve managed to sell to you the benefits of using Docker, so now
    it’s time to get started. First off, you’ll need to head over to the [Docker](https://docs.docker.com/install/)
    site to install a version of the software.
  prefs: []
  type: TYPE_NORMAL
- en: 'To ensure it’s been installed correctly, open the command line and type **docker
    version**. This should display something like the below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Docker version](../Images/a77e5616411390a804a47a508c476a3c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we’ve got Docker installed, lets investigate a relatively straight-forward,
    common example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'It looks a little daunting to someone new to Docker, so let’s break it down:'
  prefs: []
  type: TYPE_NORMAL
- en: '**docker run** – this command finds the image (which in this example is jupyter
    notebook), loads up a container and then runs a command in that container.'
  prefs: []
  type: TYPE_NORMAL
- en: '**-p 8000:8000** – the ‘p’ keyword stands for port and so this part of the
    command is opening up the ports between the host and the container, in the format
    **-p <host_port>:<container_port>**.'
  prefs: []
  type: TYPE_NORMAL
- en: '**jupyter/notebook** – the image to be loaded in. Away for Jupyter notebook,
    you can browse the official [Docker library](https://hub.docker.com/) for thousands
    of the most popular software tools out there.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you’ve ran this command and navigated to [http://localhost:8000/](http://localhost:8000/),
    you should see the below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Jupyter notebook](../Images/a641a67e7cf791bbc2fe6eb218553b82.png)'
  prefs: []
  type: TYPE_IMG
- en: Pretty easy, right? When you consider that you’d normally have to download Python,
    the runtime libraries and the Jupyter package, running this through Docker is
    extremely efficient.
  prefs: []
  type: TYPE_NORMAL
- en: 'OK, now that’s up and running let’s dive into sharing Jupyter notebooks between
    the host and the container. Firstly, we need to create a directory on our host
    machine that will store the notebooks, we’ll call it /jupyter-notebooks. Sharing
    directories when running the Docker command is similar to how the ports work and
    we need to add the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: So, what we’re doing here is mapping **<host_directory>:<container_directory>**
    (e.g. **~/jupyter-notebooks** on the host, to **/home/joyvan** on the container).
    This container directory comes from the Jupyter Docker documentation as the specified
    working directory for this type of image.
  prefs: []
  type: TYPE_NORMAL
- en: 'Combining this with what we were running before, the full command should like
    this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Now simple load up the localhost server, create a new notebook and rename it
    from Untitled to ‘Example Notebook’. Finally, check your local machines **~/jupyter-notebooks**
    directory and you should see: Example Notebook.ipynb. Voila!'
  prefs: []
  type: TYPE_NORMAL
- en: '![New Jupyter notebook](../Images/7879acdacbf4c5b8100657c124e2b449.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Dockerfile**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A Dockerfile is a text document that contains commands that can be used to create
    a Docker image automatically. It’s an effective way of saving Docker commands
    and executing them in succession through the **Docker build /path/to/dockerfile**
    command.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Dockerfile for our Jupyter notebook example above would look like the below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let’s discuss each part:'
  prefs: []
  type: TYPE_NORMAL
- en: '**FROM ubuntu:latest**'
  prefs: []
  type: TYPE_NORMAL
- en: This tells Docker what the base should be for the new image, in this case ubuntu.
    The **:latest** simple grabs the latest version. You can enter in a version number
    instead if you’re trying to test an older version.
  prefs: []
  type: TYPE_NORMAL
- en: '**RUN apt-get update && apt-get install -y python3 \ python3-pip**'
  prefs: []
  type: TYPE_NORMAL
- en: This line ensures the system is up-to-date and then installs python3 and pip3.
  prefs: []
  type: TYPE_NORMAL
- en: '**RUN pip3 install jupyter**'
  prefs: []
  type: TYPE_NORMAL
- en: This then installs Jupyter.
  prefs: []
  type: TYPE_NORMAL
- en: '**WORKDIR /home/jupyter**'
  prefs: []
  type: TYPE_NORMAL
- en: '**COPY  /src/jupyter ./**'
  prefs: []
  type: TYPE_NORMAL
- en: Sets the working directory on the Docker image container and then copies the
    files you want from your local host over.
  prefs: []
  type: TYPE_NORMAL
- en: '**EXPOSE 8000**'
  prefs: []
  type: TYPE_NORMAL
- en: Similar to how -p worked earlier, this exposes port 8000.
  prefs: []
  type: TYPE_NORMAL
- en: '**ENTRYPOINT ["jupyter", "notebook", "--ip=*"]**'
  prefs: []
  type: TYPE_NORMAL
- en: Starts Jupyter notebook.
  prefs: []
  type: TYPE_NORMAL
- en: Dockerfile’s are extremely useful as they allow other team members to run a
    Docker container with ease.
  prefs: []
  type: TYPE_NORMAL
- en: '**Conclusion**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As you can see, we managed to get a working use case for Docker with data science
    up and running very quickly. We barely scratched the surface with what you could
    do, but thanks to Docker’s fantastic library, the possibilities are endless! Becoming
    a master at Docker can not only assist you with local development, but can save
    a vast amount of time, money and effort when working with a team of data scientists.
    Stay tuned to KDnuggets, as we’ll be posting a Docker Cheat Sheet article very
    soon.
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[How Docker Can Help You Become A More Effective Data Scientist](https://www.kdnuggets.com/2018/01/docker-help-become-more-effective-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Torus for Docker-First Data Science](https://www.kdnuggets.com/2018/05/torus-docker-first-data-science.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Seven Practical Ideas For Beginner Data Scientists](https://www.kdnuggets.com/2018/08/seven-practical-ideas-beginner-data-scientists.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Best ETL Tools in 2021](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
