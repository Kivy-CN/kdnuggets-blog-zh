- en: Supercharge Your Machine Learning Experiments with PyCaret and Gradio
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 PyCaret 和 Gradio 超级充电你的机器学习实验
- en: 原文：[https://www.kdnuggets.com/2021/05/supercharge-machine-learning-experiments-pycaret-gradio.html](https://www.kdnuggets.com/2021/05/supercharge-machine-learning-experiments-pycaret-gradio.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/05/supercharge-machine-learning-experiments-pycaret-gradio.html](https://www.kdnuggets.com/2021/05/supercharge-machine-learning-experiments-pycaret-gradio.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Moez Ali](https://www.linkedin.com/in/profile-moez/), Founder & Author
    of PyCaret**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Moez Ali](https://www.linkedin.com/in/profile-moez/)、PyCaret的创始人兼作者** '
- en: ???? Introduction
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 介绍
- en: This tutorial is a step-by-step, beginner-friendly explanation of how you can
    integrate [PyCaret](https://www.pycaret.org/) and [Gradio](https://www.gradio.app/),
    the two powerful open-source libraries in Python, and supercharge your machine
    learning experimentation within minutes.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程是一个逐步的、初学者友好的解释，展示如何将两个强大的开源 Python 库 [PyCaret](https://www.pycaret.org/)
    和 [Gradio](https://www.gradio.app/) 集成起来，在几分钟内提升你的机器学习实验。
- en: This tutorial is a “hello world” example, I have used [Iris Dataset](https://archive.ics.uci.edu/ml/datasets/iris) from
    UCI, which is a multiclassification problem where the goal is to predict the class
    of iris plants. The code given in this example can be reproduced on any other
    dataset, without any major modifications.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程是一个“hello world”示例，我使用了来自UCI的[Iris Dataset](https://archive.ics.uci.edu/ml/datasets/iris)，这是一个多分类问题，目标是预测虹膜植物的类别。此示例中的代码可以在任何其他数据集上复现，无需重大修改。
- en: ???? PyCaret
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? PyCaret
- en: PyCaret is an open-source, low-code machine learning library and end-to-end
    model management tool built-in Python for automating machine learning workflows.
    It is incredibly popular for its ease of use, simplicity, and ability to build
    and deploy end-to-end ML prototypes quickly and efficiently.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 是一个开源的低代码机器学习库和端到端模型管理工具，内置于 Python 中，用于自动化机器学习工作流。它因易于使用、简单性以及能够快速高效地构建和部署端到端的
    ML 原型而非常受欢迎。
- en: PyCaret is an alternate low-code library that can be used to replace hundreds
    of lines of code with few lines only. This makes the experiment cycle exponentially
    fast and efficient.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 是一个低代码的替代库，可以用少量代码替代成百上千行代码。这使得实验周期指数级地快速和高效。
- en: PyCaret is **simple and** **easy to use**. All the operations performed in PyCaret
    are sequentially stored in a **Pipeline** that is fully automated for **deployment. **Whether
    it’s imputing missing values, one-hot-encoding, transforming categorical data,
    feature engineering, or even hyperparameter tuning, PyCaret automates all of it.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 是 **简单且** **易于使用** 的。PyCaret 中执行的所有操作都按顺序存储在一个 **Pipeline** 中，这个 **Pipeline**
    完全自动化用于 **部署**。无论是填补缺失值、独热编码、转换分类数据、特征工程，还是超参数调整，PyCaret 都能自动完成。
- en: To learn more about PyCaret, check out their [GitHub](https://www.github.com/pycaret/pycaret).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于 PyCaret 的信息，可以查看他们的 [GitHub](https://www.github.com/pycaret/pycaret)。
- en: ???? Gradio
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? Gradio
- en: Gradio is an open-source Python library for creating customizable UI components
    around your machine learning models. Gradio makes it easy for you to “play around”
    with your model in your browser by dragging and dropping in your own images, pasting
    your own text, recording your own voice, etc., and seeing what the model outputs.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Gradio 是一个开源 Python 库，用于在你的机器学习模型周围创建可自定义的 UI 组件。Gradio 使你可以通过拖放自己的图片、粘贴自己的文本、录制自己的声音等方式，在浏览器中“玩转”你的模型，并查看模型的输出。
- en: 'Gradio is useful for:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Gradio 的用途包括：
- en: Creating quick demos around your trained ML pipelines
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速演示你训练的 ML 管道
- en: Getting live feedback on model performance
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实时获取模型性能反馈
- en: Debugging your model interactively during development
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在开发过程中交互式地调试你的模型
- en: To learn more about Gradio, check out their [GitHub](https://github.com/gradio-app/gradio).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于 Gradio 的信息，可以查看他们的 [GitHub](https://github.com/gradio-app/gradio)。
- en: '![](../Images/6b5b2bec4a3fa1212dcda34a60ffae00.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6b5b2bec4a3fa1212dcda34a60ffae00.png)'
- en: The workflow for PyCaret and Gradio
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 和 Gradio 的工作流程
- en: ???? Installing PyCaret
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 安装 PyCaret
- en: Installing PyCaret is very easy and takes only a few minutes. We strongly recommend
    using a virtual environment to avoid potential conflicts with other libraries.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 PyCaret 非常简单，只需几分钟。我们强烈建议使用虚拟环境，以避免与其他库的潜在冲突。
- en: PyCaret’s default installation is a slim version of pycaret which only installs
    hard dependencies that are [listed here](https://github.com/pycaret/pycaret/blob/master/requirements.txt).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 的默认安装是一个精简版，只安装了必要的依赖项，这些依赖项在[此处列出](https://github.com/pycaret/pycaret/blob/master/requirements.txt)。
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When you install the full version of pycaret, all the optional dependencies
    as [listed here](https://github.com/pycaret/pycaret/blob/master/requirements-optional.txt) are
    also installed.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当你安装 PyCaret 的完整版本时，所有可选的依赖项也会被安装，如 [这里列出](https://github.com/pycaret/pycaret/blob/master/requirements-optional.txt)。
- en: ???? Installing Gradio
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 安装 Gradio
- en: You can install gradio from pip.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过 pip 安装 gradio。
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: ???? Let’s get started
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 让我们开始吧
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/68a4c217ba36c111fda107572bf06777.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/68a4c217ba36c111fda107572bf06777.png)'
- en: Sample rows from iris dataset
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 iris 数据集的示例行
- en: ???? Initialize Setup
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 初始化 Setup
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/3991ce23b61d9448e9bf124772818497.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3991ce23b61d9448e9bf124772818497.png)'
- en: Whenever you initialize the `setup` function in PyCaret, it profiles the dataset
    and infers the data types for all input features. In this case, you can see all
    the four features (*sepal_length, sepal_width, petal_length, and petal_width*)
    are identified correctly as Numeric datatype. You can press enter to continue.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 每当你初始化 PyCaret 中的 `setup` 函数时，它会对数据集进行概况分析，并推断所有输入特征的数据类型。在这种情况下，你可以看到四个特征（*sepal_length,
    sepal_width, petal_length, 和 petal_width*）都被正确识别为数值型数据类型。你可以按 Enter 键继续。
- en: '![](../Images/dbd7bfd8b0d2c8cb64cb2bc73e52b569.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dbd7bfd8b0d2c8cb64cb2bc73e52b569.png)'
- en: Output from setup — truncated for display
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 setup 的输出 — 为了显示而被截断
- en: Common to all modules in PyCaret, the `setup` function is the first and the
    only mandatory step to start any machine learning experiment in PyCaret. Besides
    performing some basic processing tasks by default, PyCaret also offers a wide
    array of pre-processing features such as [scaling and transformation](https://pycaret.org/normalization/), [feature
    engineering](https://pycaret.org/feature-interaction/), [feature selection](https://pycaret.org/feature-importance/),
    and several key data preparatory steps such as [one-hot-encoding](https://pycaret.org/one-hot-encoding/), [missing
    values imputation](https://pycaret.org/missing-values/), [over-sampling/under-sampling](https://pycaret.org/fix-imbalance/),
    etc. To learn more about all the preprocessing functionalities in PyCaret, you
    can see this [link](https://pycaret.org/preprocessing/).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在 PyCaret 的所有模块中，`setup` 函数是开始任何机器学习实验的第一个也是唯一的强制步骤。除了默认执行一些基本处理任务外，PyCaret
    还提供了各种预处理功能，如 [缩放和变换](https://pycaret.org/normalization/)、[特征工程](https://pycaret.org/feature-interaction/)、[特征选择](https://pycaret.org/feature-importance/)，以及若干关键数据准备步骤，如
    [独热编码](https://pycaret.org/one-hot-encoding/)、[缺失值填补](https://pycaret.org/missing-values/)、[过采样/欠采样](https://pycaret.org/fix-imbalance/)
    等。要了解更多有关 PyCaret 中所有预处理功能的信息，你可以查看这个 [链接](https://pycaret.org/preprocessing/)。
- en: '![](../Images/0c3ca66dbbf45cd55fd9adab8c167655.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0c3ca66dbbf45cd55fd9adab8c167655.png)'
- en: '[https://pycaret.org/preprocessing/](https://pycaret.org/preprocessing/)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://pycaret.org/preprocessing/](https://pycaret.org/preprocessing/)'
- en: ???? Compare Models
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? 比较模型
- en: This is the first step we recommend in the workflow of *any* supervised experiment
    in PyCaret. This function trains all the available models in the model library
    using default hyperparameters and evaluates performance metrics using cross-validation.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们在 PyCaret 的*任何*监督实验工作流中推荐的第一步。此函数使用默认超参数训练模型库中的所有可用模型，并通过交叉验证评估性能指标。
- en: The output of this function is a table showing the mean cross-validated scores
    for all the models. The number of folds can be defined using the `fold`parameter
    (default = 10 folds). The table is sorted (highest to lowest) by the metric of
    choice which can be defined using the `sort`parameter (default = ‘Accuracy’).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数的输出是一个表格，显示所有模型的平均交叉验证分数。折数可以通过 `fold` 参数（默认 = 10 折）来定义。表格按选择的指标（从高到低）排序，可以通过
    `sort` 参数（默认 = ‘Accuracy’）来定义。
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '`n_select` parameter in the setup function controls the return of trained models.
    In this case, I am setting it to 15, meaning return the top 15 models as a list. `pull` function
    in the second line stores the output of `compare_models` as `pd.DataFrame` .'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`n_select` 参数在 setup 函数中控制训练模型的返回。在这种情况下，我将其设置为 15，意味着将前 15 个模型作为列表返回。第二行中的
    `pull` 函数将 `compare_models` 的输出存储为 `pd.DataFrame`。'
- en: '![](../Images/a40c5b924d1a33c140f262e7d0e1c972.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a40c5b924d1a33c140f262e7d0e1c972.png)'
- en: Output from compare_models
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 `compare_models` 的输出
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/c38744faa6461922f7018289e6bcfa6f.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c38744faa6461922f7018289e6bcfa6f.png)'
- en: Output from print(best[:5])
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 `print(best[:5])` 的输出
- en: ???? Gradio
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ???? Gradio
- en: Now that we are done with the modeling process, let’s create a simple UI using
    Gradio to interact with our models. I will do it in two parts, first I will create
    a function that will use PyCaret’s `predict_model` functionality to generate and
    return predictions and the second part will be feeding that function into Gradio
    and designing a simple input form for interactivity.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们完成了建模过程，让我们使用 Gradio 创建一个简单的用户界面以便与我们的模型进行交互。我将分两个部分进行，首先我会创建一个函数，利用 PyCaret
    的 `predict_model` 功能生成并返回预测结果；其次，将这个函数输入到 Gradio 中，并设计一个简单的输入表单来实现互动。
- en: '**Part I — Creating an internal function**'
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**第一部分 — 创建内部函数**'
- en: The first two lines of the code take the input features and convert them into
    pandas DataFrame. Line 7 is creating a unique list of model names displayed in
    the `compare_models` output (this will be used as a dropdown in the UI). Line
    8 selects the best model based on the index value of the list (which will be passed
    in through UI) and Line 9 uses the `predict_model` functionality of PyCaret to
    score the dataset.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的前两行获取输入特征并将其转换为 pandas DataFrame。第 7 行创建了一个在 `compare_models` 输出中显示的模型名称的唯一列表（这将用作用户界面中的下拉菜单）。第
    8 行根据列表的索引值选择最佳模型（这将通过用户界面传入），第 9 行使用 PyCaret 的 `predict_model` 功能对数据集进行评分。
- en: '[https://gist.github.com/moezali1/2a383489a08757df93572676d20635e0](https://gist.github.com/moezali1/2a383489a08757df93572676d20635e0)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://gist.github.com/moezali1/2a383489a08757df93572676d20635e0](https://gist.github.com/moezali1/2a383489a08757df93572676d20635e0)'
- en: Part II — Creating a UI with Gradio
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第二部分 — 使用 Gradio 创建用户界面
- en: Line 3 in the code below creates a dropdown for model names, Line 4–7 creates
    a slider for each of the input features and I have set the default value to the
    mean of each feature. Line 9 initiates a UI (in the notebook as well as on your
    local host so you can view it in the browser).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 下方代码的第 3 行创建了一个用于模型名称的下拉菜单，第 4–7 行为每个输入特征创建了一个滑块，我将默认值设置为每个特征的均值。第 9 行初始化了一个用户界面（在笔记本和你的本地主机上都可以查看）。
- en: '[https://gist.github.com/moezali1/a1d83fb61e0ce14adcf4dffa784b1643](https://gist.github.com/moezali1/a1d83fb61e0ce14adcf4dffa784b1643)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://gist.github.com/moezali1/a1d83fb61e0ce14adcf4dffa784b1643](https://gist.github.com/moezali1/a1d83fb61e0ce14adcf4dffa784b1643)'
- en: '![](../Images/2be1a04ec464e208c77ed2a305057953.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2be1a04ec464e208c77ed2a305057953.png)'
- en: Output from running Gradio interface
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 Gradio 界面的输出
- en: You can see this quick video here to see how easy it is to interact with your
    pipelines and query your models without writing hundreds of lines of code or developing
    a full-fledged front-end.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以观看这个简短的视频，了解如何轻松地与管道进行交互并查询你的模型，而无需编写数百行代码或开发完整的前端。
- en: Supercharge your Machine Learning Experiments with PyCaret and Gradio
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 PyCaret 和 Gradio 提升你的机器学习实验
- en: I hope that you will appreciate the ease of use and simplicity in PyCaret and
    Gradio. In less than 25 lines of code and few minutes of experimentation, I have
    trained and evaluated multiple models using PyCaret and developed a lightweight
    UI to interact with models in the Notebook.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你能欣赏到 PyCaret 和 Gradio 的易用性和简洁性。在不到 25 行代码和几分钟的实验时间里，我使用 PyCaret 训练和评估了多个模型，并开发了一个轻量级用户界面以在笔记本中与模型进行交互。
- en: Coming Soon!
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 敬请期待！
- en: Next week I will be writing a tutorial on unsupervised anomaly detection on
    time-series data using [PyCaret Anomaly Detection Module](https://pycaret.readthedocs.io/en/latest/api/anomaly.html).
    Please follow me on [Medium](https://medium.com/@moez-62905), [LinkedIn](https://www.linkedin.com/in/profile-moez/),
    and [Twitter](https://twitter.com/moezpycaretorg1) to get more updates.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 下周我将撰写一个关于使用 [PyCaret 异常检测模块](https://pycaret.readthedocs.io/en/latest/api/anomaly.html)
    对时间序列数据进行无监督异常检测的教程。请关注我的 [Medium](https://medium.com/@moez-62905)、[LinkedIn](https://www.linkedin.com/in/profile-moez/)
    和 [Twitter](https://twitter.com/moezpycaretorg1) 以获取更多更新。
- en: There is no limit to what you can achieve using this lightweight workflow automation
    library in Python. If you find this useful, please do not forget to give us ⭐️
    on our GitHub repository.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个轻量级的 Python 工作流自动化库，你可以实现无限的可能。如果你觉得这很有用，请不要忘记在我们的 GitHub 仓库上给我们 ⭐️。
- en: To hear more about PyCaret follow us on [LinkedIn](https://www.linkedin.com/company/pycaret/) and [Youtube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于 PyCaret 的信息，请关注我们的 [LinkedIn](https://www.linkedin.com/company/pycaret/)
    和 [Youtube](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g)。
- en: Join us on our slack channel. Invite link [here](https://join.slack.com/t/pycaret/shared_invite/zt-p7aaexnl-EqdTfZ9U~mF0CwNcltffHg).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 加入我们的 slack 频道。邀请链接 [这里](https://join.slack.com/t/pycaret/shared_invite/zt-p7aaexnl-EqdTfZ9U~mF0CwNcltffHg)。
- en: 'You may also be interested in:'
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你可能还会感兴趣：
- en: '[Build your own AutoML in Power BI using PyCaret 2.0](https://towardsdatascience.com/build-your-own-automl-in-power-bi-using-pycaret-8291b64181d)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 Power BI 中使用 PyCaret 2.0 构建自己的 AutoML](https://towardsdatascience.com/build-your-own-automl-in-power-bi-using-pycaret-8291b64181d)'
- en: '[Deploy Machine Learning Pipeline on Azure using Docker](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-cloud-using-docker-container-bec64458dc01)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 Docker 在 Azure 上部署机器学习管道](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-cloud-using-docker-container-bec64458dc01)'
- en: '[Deploy Machine Learning Pipeline on Google Kubernetes Engine](https://towardsdatascience.com/deploy-machine-learning-model-on-google-kubernetes-engine-94daac85108b)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 Google Kubernetes Engine 上部署机器学习管道](https://towardsdatascience.com/deploy-machine-learning-model-on-google-kubernetes-engine-94daac85108b)'
- en: '[Deploy Machine Learning Pipeline on AWS Fargate](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-aws-fargate-eb6e1c50507)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 AWS Fargate 上部署机器学习管道](https://towardsdatascience.com/deploy-machine-learning-pipeline-on-aws-fargate-eb6e1c50507)'
- en: '[Build and deploy your first machine learning web app](https://towardsdatascience.com/build-and-deploy-your-first-machine-learning-web-app-e020db344a99)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[构建并部署你的第一个机器学习 Web 应用](https://towardsdatascience.com/build-and-deploy-your-first-machine-learning-web-app-e020db344a99)'
- en: '[Deploy PyCaret and Streamlit app using AWS Fargate serverless](https://towardsdatascience.com/deploy-pycaret-and-streamlit-app-using-aws-fargate-serverless-infrastructure-8b7d7c0584c2)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 AWS Fargate 无服务器基础设施部署 PyCaret 和 Streamlit 应用](https://towardsdatascience.com/deploy-pycaret-and-streamlit-app-using-aws-fargate-serverless-infrastructure-8b7d7c0584c2)'
- en: '[Build and deploy machine learning web app using PyCaret and Streamlit](https://towardsdatascience.com/build-and-deploy-machine-learning-web-app-using-pycaret-and-streamlit-28883a569104)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 和 Streamlit 构建并部署机器学习 Web 应用](https://towardsdatascience.com/build-and-deploy-machine-learning-web-app-using-pycaret-and-streamlit-28883a569104)'
- en: '[Deploy Machine Learning App built using Streamlit and PyCaret on GKE](https://towardsdatascience.com/deploy-machine-learning-app-built-using-streamlit-and-pycaret-on-google-kubernetes-engine-fd7e393d99cb)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 GKE 上部署使用 Streamlit 和 PyCaret 构建的机器学习应用](https://towardsdatascience.com/deploy-machine-learning-app-built-using-streamlit-and-pycaret-on-google-kubernetes-engine-fd7e393d99cb)'
- en: Important Links
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重要链接
- en: '[Documentation](https://pycaret.readthedocs.io/en/latest/installation.html)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[文档](https://pycaret.readthedocs.io/en/latest/installation.html)'
- en: '[Blog](https://medium.com/@moez_62905)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[博客](https://medium.com/@moez_62905)'
- en: '[GitHub](https://www.github.com/pycaret/pycaret)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[GitHub](https://www.github.com/pycaret/pycaret)'
- en: '[StackOverflow](https://stackoverflow.com/questions/tagged/pycaret)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[StackOverflow](https://stackoverflow.com/questions/tagged/pycaret)'
- en: '[Install PyCaret](https://pycaret.readthedocs.io/en/latest/installation.html)
    [Notebook Tutorials](https://pycaret.readthedocs.io/en/latest/tutorials.html)
    [Contribute in PyCaret](https://pycaret.readthedocs.io/en/latest/contribute.html)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[安装 PyCaret](https://pycaret.readthedocs.io/en/latest/installation.html) [笔记本教程](https://pycaret.readthedocs.io/en/latest/tutorials.html)
    [为 PyCaret 做贡献](https://pycaret.readthedocs.io/en/latest/contribute.html)'
- en: Want to learn about a specific module?
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 想了解特定模块？
- en: Click on the links below to see the documentation and working examples.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 点击下面的链接查看文档和工作示例。
- en: '[Classification](https://pycaret.readthedocs.io/en/latest/api/classification.html)
    [Regression](https://pycaret.readthedocs.io/en/latest/api/regression.html)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[分类](https://pycaret.readthedocs.io/en/latest/api/classification.html) [回归](https://pycaret.readthedocs.io/en/latest/api/regression.html)'
- en: '[Clustering](https://pycaret.readthedocs.io/en/latest/api/clustering.html)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[聚类](https://pycaret.readthedocs.io/en/latest/api/clustering.html)'
- en: '[Anomaly Detection](https://pycaret.readthedocs.io/en/latest/api/anomaly.html)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[异常检测](https://pycaret.readthedocs.io/en/latest/api/anomaly.html)'
- en: '[Natural Language Processing](https://pycaret.readthedocs.io/en/latest/api/nlp.html)
    [Association Rule Mining](https://pycaret.readthedocs.io/en/latest/api/arules.html)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[自然语言处理](https://pycaret.readthedocs.io/en/latest/api/nlp.html) [关联规则挖掘](https://pycaret.readthedocs.io/en/latest/api/arules.html)'
- en: '**Bio: [Moez Ali](https://www.linkedin.com/in/profile-moez/)** is a Data Scientist,
    and is Founder & Author of PyCaret.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**个人简介： [Moez Ali](https://www.linkedin.com/in/profile-moez/)** 是数据科学家，同时也是
    PyCaret 的创始人和作者。'
- en: '[Original](https://towardsdatascience.com/supercharge-your-machine-learning-experiments-with-pycaret-and-gradio-5932c61f80d9).
    Reposted with permission.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/supercharge-your-machine-learning-experiments-with-pycaret-and-gradio-5932c61f80d9)。经许可转载。'
- en: '**Related:**'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Write and train your own custom machine learning models using PyCaret](/2021/05/pycaret-write-train-custom-machine-learning-models.html)'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 编写和训练自定义机器学习模型](/2021/05/pycaret-write-train-custom-machine-learning-models.html)'
- en: '[Easy MLOps with PyCaret + MLflow](/2021/05/easy-mlops-pycaret-mlflow.html)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 和 MLflow 轻松实现 MLOps](/2021/05/easy-mlops-pycaret-mlflow.html)'
- en: '[Topic Modeling with Streamlit](/2021/05/topic-modeling-streamlit.html)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Streamlit 进行主题建模](/2021/05/topic-modeling-streamlit.html)'
- en: '* * *'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析能力'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT 工作'
- en: '* * *'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Build AI Chatbot in 5 Minutes with Hugging Face and Gradio](https://www.kdnuggets.com/2023/06/build-ai-chatbot-5-minutes-hugging-face-gradio.html)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Hugging Face 和 Gradio 在 5 分钟内构建 AI 聊天机器人](https://www.kdnuggets.com/2023/06/build-ai-chatbot-5-minutes-hugging-face-gradio.html)'
- en: '[Supercharge Your AI Journey! Join Uplimit''s Free Building AI…](https://www.kdnuggets.com/2024/01/uplimit-supercharge-your-ai-journey-openai-course)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[加速你的人工智能之旅！加入 Uplimit 的免费构建 AI 课程…](https://www.kdnuggets.com/2024/01/uplimit-supercharge-your-ai-journey-openai-course)'
- en: '[Versioning Machine Learning Experiments vs Tracking Them](https://www.kdnuggets.com/2021/12/versioning-machine-learning-experiments-tracking.html)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[机器学习实验的版本控制与跟踪](https://www.kdnuggets.com/2021/12/versioning-machine-learning-experiments-tracking.html)'
- en: '[Hydra Configs for Deep Learning Experiments](https://www.kdnuggets.com/2023/03/hydra-configs-deep-learning-experiments.html)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Hydra 配置用于深度学习实验](https://www.kdnuggets.com/2023/03/hydra-configs-deep-learning-experiments.html)'
- en: '[Announcing PyCaret 3.0: Open-source, Low-code Machine Learning in Python](https://www.kdnuggets.com/2023/03/announcing-pycaret-30-opensource-lowcode-machine-learning-python.html)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[宣布 PyCaret 3.0：开源、低代码的 Python 机器学习](https://www.kdnuggets.com/2023/03/announcing-pycaret-30-opensource-lowcode-machine-learning-python.html)'
- en: '[How to Design Experiments for Data Collection](https://www.kdnuggets.com/2022/04/design-experiments-data-collection.html)'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何设计数据收集实验](https://www.kdnuggets.com/2022/04/design-experiments-data-collection.html)'
