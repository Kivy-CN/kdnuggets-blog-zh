- en: 'Working With Numpy Matrices: A Handy First Reference'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2017/03/working-numpy-matrices.html](https://www.kdnuggets.com/2017/03/working-numpy-matrices.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**By Ieva Zarina, Software Developer, Nordigen.**'
  prefs: []
  type: TYPE_NORMAL
- en: At the beginning when I started working with natural language processing, I
    used the default Python lists. But soon enough with bigger experiments and more
    data I run out of RAM. Python lists are not optimized for memory space so onto
    [Numpy](http://www.numpy.org/).
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '![Numpy](../Images/d021f4f813085ed85b4cb6a6984b9721.png)'
  prefs: []
  type: TYPE_IMG
- en: Numpy is the *de facto* ndarray tool for the Python scientific ecosystem.
  prefs: []
  type: TYPE_NORMAL
- en: Numpy arrays are much like in C – generally you create the array the size you
    need beforehand and then fill it. Merging, appending is not recommended as Numpy
    will create one empty array in the size of arrays being merged  and then just
    copy the contents into it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some ways Numpy arrays ([ndarray](http://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.html))
    can be manipulated:'
  prefs: []
  type: TYPE_NORMAL
- en: Create ndarray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Some ways to create numpy matrices are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Cast** from Python list with [numpy.asarray()](http://docs.scipy.org/doc/numpy-1.10.1/reference/generated/numpy.asarray.html) :'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Create an ndarray in the size** you need filled with ones, zeros or random
    values:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'You can also create an array **in the shape of another array** with [numpy.empty_like()](http://docs.scipy.org/doc/numpy/reference/generated/numpy.empty_like.html#numpy.empty_like):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Slice
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Sometimes I need to **select** only a part of all **columns** or **rows** in
    a 2d matrix. For example, matrices:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Merge arrays
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Merging  numpy arrays is **not advised** because because internally numpy will
    create empty big array and then copy the contents into it. It would be best to
    create the intended size at the beginning and then just fill it up. However, sometimes
    you cannot avoid merging. In this case, numpy has some **built-in functions:**
  prefs: []
  type: TYPE_NORMAL
- en: '**[Concatenate](http://docs.scipy.org/doc/numpy/reference/generated/numpy.concatenate.html)**'
  prefs: []
  type: TYPE_NORMAL
- en: '1d arrays:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '2d arrays:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '**[Append](http://docs.scipy.org/doc/numpy/reference/generated/numpy.append.html) –
    append values to the end of an array**'
  prefs: []
  type: TYPE_NORMAL
- en: '1d arrays:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '2d arrays – both arrays must match the shape of rows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '**[Hstack](http://docs.scipy.org/doc/numpy-1.10.1/reference/generated/numpy.hstack.html)
    (stack horizontally) and [vstack](http://docs.scipy.org/doc/numpy-1.10.1/reference/generated/numpy.vstack.html#numpy.vstack)
    (stack vertically)**'
  prefs: []
  type: TYPE_NORMAL
- en: '1d arrays:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '2d arrays:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Types in ndarray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Without the default float, numpy can hold all the common **[types](http://docs.scipy.org/doc/numpy/user/basics.types.html).**
    If any of numbers in array is float, all numbers will be converted to float:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'But you can easily **cast the type** to int, float or other:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '**String arrays** need to be created as arrays with the type S1 for string
    with length 1, S2 for length of 2 and so on .  [`numpy.``chararray()`](http://docs.scipy.org/doc/numpy/reference/generated/numpy.chararray.html) creates
    array with this type. You need to specify the shape of the array and itemsize
    – the length of each string.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Read/write to file
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Write numpy array to a file with [numpy.savetext()](http://docs.scipy.org/doc/numpy/reference/generated/numpy.savetxt.html)
    in plain text form and load it with  [numpy.loadtext()](http://docs.scipy.org/doc/numpy/reference/generated/numpy.loadtxt.html):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '**Writing sparse matrices**'
  prefs: []
  type: TYPE_NORMAL
- en: 'However, in machine learning if you have a large, **[sparse](https://en.wikipedia.org/wiki/Sparse_matrix)
    matrix** (with a lot of values that are 0), reading and writing large matrices
    is faster and the file is smaller if you use the **svmlight format**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Use .toarray() to get matrix back from the svmlight Compressed Sparse Row format:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'To sum up, this post looked at how to :'
  prefs: []
  type: TYPE_NORMAL
- en: create numpy arrays,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: slice arrays,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: merge arrays,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: basic types of numpy arrays,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: reading and writing arrays to file,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: reading and writing sparse matrices to svmlight format.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This was just an introduction into numpy matrices on how to get started and
    do basic manipulations. More information can be found in this [MIT guide book](http://web.mit.edu/dvp/Public/numpybook.pdf) as
    well as in the official [documentation](http://docs.scipy.org/doc/).
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Ieva Zarina](https://www.linkedin.com/in/ieva-zarina-60515a72/)** is
    a Software Developer at Nordigen.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](http://ieva.rocks/2016/08/24/working-with-numpy-matrices/). Reposted
    with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[7 More Steps to Mastering Machine Learning With Python](/2017/03/seven-more-steps-machine-learning-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[K-Means & Other Clustering Algorithms: A Quick Intro with Python](/2017/03/k-means-clustering-algorithms-intro-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Simple XGBoost Tutorial Using the Iris Dataset](/2017/03/simple-xgboost-tutorial-iris-dataset.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Working With Sparse Features In Machine Learning Models](https://www.kdnuggets.com/2021/01/sparse-features-machine-learning-models.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Working with Big Data: Tools and Techniques](https://www.kdnuggets.com/working-with-big-data-tools-and-techniques)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Guide to Working with SQLite Databases in Python](https://www.kdnuggets.com/a-guide-to-working-with-sqlite-databases-in-python)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Deep Learning working in the wild: A Data-Centric Course](https://www.kdnuggets.com/2022/04/corise-deep-learning-wild-data-centric-course.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 Soft Skills for Data Scientists Working Remotely](https://www.kdnuggets.com/2022/05/6-soft-skills-data-scientists-working-remotely.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting Deep Learning working in the wild: A Data-Centric Course](https://www.kdnuggets.com/2022/11/corise-deep-learning-wild-data-centric-course.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
