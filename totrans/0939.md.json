["```py\npip install matplotlib\n```", "```py\n!pip install matplotlib\n```", "```py\nconda install matplotlib\n```", "```py\nimport numpy as np\nimport pandas as pd  #If you are reading data from CSV\nimport matplotlib.pyplot as plt\n```", "```py\nx = np.arange(0,8) \ny = x  \n\nplt.plot(x, y) \nplt.xlabel('Hours of Study')\nplt.ylabel('Class Performance')\nplt.title('Student Performance Analysis')\nplt.show() # For non-jupyter users\n```", "```py\nfig = plt.figure()\n```", "```py\nfigureobject.add_axes([a,b,c,d])\n```", "```py\nfig = plt.figure() # blank canvas\naxes = fig.add_axes([0, 0, 0.5, 0.5]) \naxes.plot(x, y)\nplt.show()\n```", "```py\nfig = plt.figure(figsize=(0.5,0.5),dpi=200) # blank canvas\naxes = fig.add_axes([0, 0, 0.5, 0.5]) \naxes.plot(x, y)\nplt.show()\n```", "```py\na = np.arange(0,50)\nb = a**3\nfig = plt.figure()\nouter_axes = fig.add_axes([0,0,1,1])\ninner_axes = fig.add_axes([0.25,0.5,0.25,0.25])\nouter_axes.plot(a,b)\ninner_axes.set_xlim(10,20)   #sets the range on x-axis\ninner_axes.set_ylim(0,10000) #sets the range on y-axis\ninner_axes.set_title(\"Zoomed Version\")\ninner_axes.plot(a,b)\nplt.show()\n```", "```py\nfig, axes = plt.subplots(nrows=1, ncols=2)\n```", "```py\nexercise_hrs = np.arange(0, 5)\nmale_cal = exercise_hrs\nfemale_cal = 0.70 * exercise_hrs\nfig, axes = plt.subplots(nrows=1, ncols=2)\naxes[0].plot(exercise_hrs, male_cal)\naxes[0].set_ylim(0, 5)  # Sets range of y\naxes[0].set_title(\"Male\")\naxes[1].plot(exercise_hrs, female_cal)\naxes[1].set_ylim(0, 5)\naxes[1].set_title(\"Female\")\nfig.suptitle(\n    \"Calories Burnt vs Workout Hours Analysis\", fontsize=16\n)  # Displays the main title\nfig.tight_layout()  # Prevents overlapping of subplots\n```", "```py\nfig.subplots_adjust(left=None,top=None,right=None,top=None,wspace=None,    hspace=None)\n```", "```py\nfig.subplots_adjust(left=0.2,top=0.8,wspace=0.9, hspace=0.1)\n```", "```py\naxes.legend(loc=0) or axes.legend() #Default - Matplotlib decides position\naxes.legend(loc=1) # upper right\naxes.legend(loc=2) # upper left\naxes.legend(loc=3) # lower left\naxes.legend(loc=4) # lower right \naxes.legend(loc=(x,y)) # At (x,y) position \n```", "```py\nx = np.arange(0,11)\nfig = plt.figure()\nax = fig.add_axes([0,0,0.75,0.75])\nax.plot(x, x**2, label=\"X^2\")\nax.plot(x, x**3, label=\"X^3\")\nax.legend(loc=0) #Let matplotlib decide\n```", "```py\naxes.plot(x, y, color or c = 'red',alpha= ‘0.5’, linestyle or ls = ':', linewidth or lw= 5)\n```", "```py\nlinestyle = “-”  or linestyle = “solid”\nlinestyle = “:”  or linestyle = “dotted”\nlinestyle = “--” or linestyle = “dashed”\nlinestyle = “-.” or linestyle = “dashdot”\n```", "```py\nfig, ax = plt.subplots()\nax.plot(x, x-2, color=\"#000000\", linewidth=1 , linestyle='solid')\nax.plot(x, x-4, color=\"red\", lw=2 ,ls=\":\")\nax.plot(x, x-6, color=\"blue\",alpha=0.4,lw=4 , ls=\"-.\")\n```", "```py\naxes.plot(x, y,marker =”+” , markersize or ms= 20)\n```", "```py\nmarker='+' # plus\nmarker='o' # circle\nmarker='s' # square\nmarker='.' # point\n```", "```py\nfig, ax = plt.subplots()\nax.plot(x, x+2,marker='+',markersize=20)\nax.plot(x, x+4,marker='o',ms=10) \nax.plot(x, x+6,marker='s',ms=15,lw=0) \nax.plot(x, x+8,marker='.',ms=10) \n```", "```py\n# Data is collected from worldometer\nyears = [\"1980\", \"1990\", \"2000\", \"2010\", \"2020\"]\nAsia = [2649578300, 3226098962, 3741263381, 4209593693, 4641054775]\nEurope = [693566517, 720858450, 725558036, 736412989, 747636026]\nfig, ax = plt.subplots()\nax.set_title(\"Population Analysis (1980 - 2020)\")\nax.set_xlabel(\"Years\")\nax.set_ylabel(\"Population in billions\")\nax.plot(years, Asia, label=\"Asia\")\nax.plot(years, Europe, label=\"Europe\")\nax.legend()\n```", "```py\nmatplotlib.pyplot.pie(data,explode=None,labels=None,colors=None,autopct=None, shadow=False) \n```", "```py\nlabels = [\n    \"Rent\",\n    \"Utility bills\",\n    \"Transport\",\n    \"University fees\",\n    \"Grocery\",\n    \"Savings\",\n]\nexpenses = [200, 100, 80, 500, 100, 60]\nexplode = [0.0, 0.0, 0.0, 0.0, 0.0, 0.4]\ncolors = [\n    \"lightblue\",\n    \"orange\",\n    \"lightgreen\",\n    \"purple\",\n    \"crimson\",\n    \"red\",\n]\nfig, ax = plt.subplots()\nax.set_title(\"University Student Expenses\")\nax.pie(\n    expenses,\n    labels=labels,\n    explode=explode,\n    colors=colors,\n    autopct=\"%.1f%%\",\n    shadow=True,\n)\nplt.show()\n```", "```py\nmatplotlib.pyplot.scatter(x, y, s=None, c=None, marker=None,alpha=None, linewidths=None, edgecolors=None)\n```", "```py\nx = np.linspace(0, 11, 40)\ny = np.cos(x)\nfig, ax = plt.subplots()\nax.scatter(\n    x,\n    y,\n    s=50,\n    c=\"green\",\n    marker=\"o\",\n    alpha=0.4,\n    linewidth=2,\n    edgecolor=\"black\",\n) \n```", "```py\nmatplotlib.pyplot.bar(x, height, width, bottom, align)\n```", "```py\nfig,ax = plt.subplots()\ncourses = ['Maths', 'Science', 'History', 'Computer', 'English']\nstudents = [24,12,15,31,22]\nax.bar(courses,students,width=0.5,color=\"red\",alpha=0.6,edgecolor=\"red\",linewidth=2)\n```", "```py\n# For Horizontal Bar Chart\nax.barh(\n    courses,\n    students,\n    height=0.7,\n    color=\"red\",\n    alpha=0.6,\n    edgecolor=\"red\",\n    linewidth=2,\n) \n```", "```py\nfig,ax = plt.subplots()\ncourses = ['Maths', 'Science', 'History', 'Computer', 'English']\nstudents = [[24,12,15,31,22],[19,14,19,26,18]] #Male array then female array\nax.bar(courses,students[0],width=0.5,label=\"male\")\nax.bar(courses,students[1],width=0.5,bottom=students[0],label=\"female\")\nax.set_ylabel(\"No of Students\")\nax.legend()\n```", "```py\nfig,ax = plt.subplots()\ncourses = ['Maths', 'Science', 'History', 'Computer', 'English']\nmales = (24,12,15,31,22)\nfemales = (19,14,19,26,18)\nindex=np.arange(5)\nbar_width=0.4\nax.bar(index,males,bar_width,alpha=.9,label=\"Male\")\n# We will adjust the bar_width so it is placed side to side \nax.bar(index + bar_width ,females,bar_width,alpha=.9,label=\"Female\") \nax.set_xticks(index + 0.2,courses) # Show labels\nax.legend()\n```", "```py\nmatplotlib.pyplot.hist(x,bins=None,cumulative=False,range=None,bottom=None,histtype=’bar’,rwidth=None, color=None, label=None, stacked=False)\n```", "```py\ndata = np.random.normal(140, 10,100) # Generating height of 100 people\nbins = 10\nfig,ax = plt.subplots()\nax.set_xlabel(\"Height in cm\")\nax.set_ylabel(\"No of people\")\nax.hist(data,bins=bins, color=\"green\",alpha=0.5,edgecolor=\"green\")\n```", "```py\nmale = np.random.normal(140, 10,100) # Generating height of 100 males\nfemale = np.random.normal(125,10,100) # Generating height of 100 females\nbins = 10\nfig,ax = plt.subplots()\nax.set_xlabel(\"Height in cm\")\nax.set_ylabel(\"No of people\")\nax.hist([male,female],bins=bins,label=[\"Male\",\"Female\"])\nax.legend()\n```"]