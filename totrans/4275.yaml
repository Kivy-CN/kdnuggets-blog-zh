- en: Super Charge Python with Pandas on GPUs Using Saturn Cloud
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Saturn Cloud 在 GPU 上超级充电 Python 和 Pandas
- en: 原文：[https://www.kdnuggets.com/2021/05/super-charge-python-pandas-gpus-saturn-cloud.html](https://www.kdnuggets.com/2021/05/super-charge-python-pandas-gpus-saturn-cloud.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/05/super-charge-python-pandas-gpus-saturn-cloud.html](https://www.kdnuggets.com/2021/05/super-charge-python-pandas-gpus-saturn-cloud.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Tyler Folkman](https://www.linkedin.com/in/tylerfolkman/), Head of Artificial
    Intelligence at BEN Group**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Tyler Folkman](https://www.linkedin.com/in/tylerfolkman/)，BEN Group 人工智能负责人**'
- en: '![](../Images/a44c71944414a7fbdd262612be3e04cd.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a44c71944414a7fbdd262612be3e04cd.png)'
- en: Photo by [Guillaume Jaillet](https://unsplash.com/@i_am_g?utm_source=medium&utm_medium=referral) on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 由 [Guillaume Jaillet](https://unsplash.com/@i_am_g?utm_source=medium&utm_medium=referral)
    提供的照片，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: I once asked on LinkedIn what libraries people are most likely to import when
    first opening up a Jupyter Notebook.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我曾在 LinkedIn 上询问，人们在首次打开 Jupyter Notebook 时最可能导入哪些库。
- en: Do you know what the number one response was?
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道最常见的回答是什么吗？
- en: Pandas
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Pandas
- en: The Pandas library is used extensively by data scientists, but the truth is
    it can often be **quite slow. **And if your data processing is slow it can really
    lead to a lot of delays in a project. If every time you want to generate a new
    feature for your model takes even 10 minutes, you find yourself sitting around
    just waiting (or doing other things :) ).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Pandas 库被数据科学家广泛使用，但事实是，它往往**相当慢**。如果数据处理速度慢，可能会导致项目的延迟。如果每次生成模型的新特征都需要 10 分钟，你会发现自己只是坐在那儿等待（或者做其他事情
    :) ）。
- en: '![](../Images/fcde395d5ecbc78a921a791600066ba8.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fcde395d5ecbc78a921a791600066ba8.png)'
- en: Source: [https://xkcd.com/303/](https://xkcd.com/303/)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[https://xkcd.com/303/](https://xkcd.com/303/)
- en: The time it takes for data to process and models to train is similar to the
    compiling time for programmers. And while you might enjoy some of your data processing
    breaks due to long processing times, I want to show you a better way.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 数据处理和模型训练的时间类似于程序员的编译时间。虽然你可能会因为处理时间长而享受一些数据处理的休息时间，但我想给你展示一种更好的方法。
- en: I want to show you how you can **easily avoid being over 1,000,000% slower** when
    using Pandas.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我想展示如何**轻松避免慢速超过 1,000,000%**的 Pandas 使用情况。
- en: The Setup
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置
- en: Before we dig into the experiments, let’s talk about the hardware we will be
    using.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入实验之前，先谈谈我们将使用的硬件。
- en: To make this incredibly easy for you to follow along with, we will be using [Saturn
    Cloud](https://www.google.com/url?q=https://www.saturncloud.io/s/freehosted/?utm_source%3DSuper%2520Charge%2520Python%2520with%2520Pandas%2520on%2520GPUs%2520using%2520Saturn%2520Cloud%26utm_medium%3Dsaturn%2520hosted%2520free&sa=D&source=editors&ust=1619151968592000&usg=AOvVaw2RRkUYh5nLiKYEOmrk-GvU).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让你跟随起来非常简单，我们将使用 [Saturn Cloud](https://www.google.com/url?q=https://www.saturncloud.io/s/freehosted/?utm_source%3DSuper%2520Charge%2520Python%2520with%2520Pandas%2520on%2520GPUs%2520using%2520Saturn%2520Cloud%26utm_medium%3Dsaturn%2520hosted%2520free&sa=D&source=editors&ust=1619151968592000&usg=AOvVaw2RRkUYh5nLiKYEOmrk-GvU)。
- en: '![](../Images/a3cd3a8fd0a7862e0bde8a217014a150.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a3cd3a8fd0a7862e0bde8a217014a150.png)'
- en: 'Source: Saturn Cloud'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：Saturn Cloud
- en: 'Saturn Cloud is a really slick platform that gives you access to:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Saturn Cloud 是一个非常流畅的平台，提供以下功能：
- en: 10 hours of free Jupyter per month (including GPU)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每月 10 小时免费使用 Jupyter（包括 GPU）
- en: 3 hours of Dask per month (including GPU)
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每月 3 小时的 Dask（包括 GPU）
- en: Deploy dashboards
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署仪表盘
- en: You can use it for free [here](https://www.google.com/url?q=https://www.saturncloud.io/s/freehosted/?utm_source%3DSuper%2520Charge%2520Python%2520with%2520Pandas%2520on%2520GPUs%2520using%2520Saturn%2520Cloud%26utm_medium%3Dsaturn%2520hosted%2520free&sa=D&source=editors&ust=1619151968592000&usg=AOvVaw2RRkUYh5nLiKYEOmrk-GvU).
    Making it a great place to experiment with large-scale data processing!
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 [这里](https://www.google.com/url?q=https://www.saturncloud.io/s/freehosted/?utm_source%3DSuper%2520Charge%2520Python%2520with%2520Pandas%2520on%2520GPUs%2520using%2520Saturn%2520Cloud%26utm_medium%3Dsaturn%2520hosted%2520free&sa=D&source=editors&ust=1619151968592000&usg=AOvVaw2RRkUYh5nLiKYEOmrk-GvU)
    免费使用它，使其成为实验大规模数据处理的绝佳场所！
- en: When you start up a project on Saturn, you get access to two very important
    pieces of hardware. A Jupyter Server and a Dask Cluster.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在 Saturn 上启动一个项目时，你将获得两个非常重要的硬件：Jupyter 服务器和 Dask 集群。
- en: '![](../Images/287800c914b3167103281790882ad50f.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/287800c914b3167103281790882ad50f.png)'
- en: 'Source: Saturn Cloud'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：Saturn Cloud
- en: Our Jupyter Server is running with 4 cores, 16 GB of RAM, and a single GPU.
    The Dask cluster is 3 workers with 4 cores, 16GB of RAM, and a single GPU.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 Jupyter 服务器运行在 4 个核心、16 GB 内存和一个 GPU 上。Dask 集群有 3 个工作节点，每个节点配有 4 个核心、16GB
    内存和一个 GPU。
- en: The other amazing thing you get when selecting the RAPIDS base project is a
    Python kernel with all of NVIDIA’s RAPIDs libraries including CUDF, which allows
    us to run our Pandas processing on a GPU.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个选择 RAPIDS 基础项目时你会获得的惊人功能是一个包含所有 NVIDIA RAPIDs 库的 Python 内核，包括 CUDF，这允许我们在
    GPU 上运行 Pandas 处理。
- en: Getting this setup with a few clicks is no small win. Even if you have a computer
    with a GPU, getting the RAPIDs libraries working can be time-consuming because
    you have to make sure you have the right drivers and CUDA library.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 使用几次点击完成这项设置并不是小胜利。即使你有一台配有 GPU 的计算机，安装 RAPIDs 库也可能需要时间，因为你必须确保有正确的驱动程序和 CUDA
    库。
- en: The Data
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据
- en: Alright — now that we have our hardware setup, we need to talk about the dataset
    we will be using.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 好了 — 现在我们已经设置好硬件，我们需要讨论我们将使用的数据集。
- en: We will use the Yellow Taxi trip record data.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 Yellow Taxi 行程记录数据。
- en: 'These data have 7,667,792 rows and 18 columns. Here is what you get when running *info() *on
    the data frame:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数据有 7,667,792 行和 18 列。运行*info()*在数据框上的结果如下：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: So, a decently sized dataset, but nothing too crazy. It comes in at about 1GB
    of memory usage.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这是一个相当大的数据集，但还算不上太疯狂。它的内存使用量大约为 1GB。
- en: The Function
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 函数
- en: Lastly, for our experiments, we need a function to run on our data. I selected
    a pretty simple function that creates a new feature for a potential model. Our
    function will calculate the total amount paid divided by the trip distance.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，对于我们的实验，我们需要一个在数据上运行的函数。我选择了一个相当简单的函数，它为潜在的模型创建了一个新特征。我们的函数将计算总支付金额除以旅行距离。
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: When we find a zero value for trip_distance, we will just return a value of
    zero.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们找到 trip_distance 为零的值时，我们将返回零值。
- en: 'Note: You can easily vectorize this function as taxi_df[“total_per_mile”] =
    taxi_df.total_amount / taxi_df.trip_distance, which would be significantly faster.
    We are using a function instead so we can compare apply speeds for our experiments.
    If you’re curious, the vectorized version took about 50 ms.'
  id: totrans-40
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意：你可以很容易地将这个函数矢量化为 taxi_df[“total_per_mile”] = taxi_df.total_amount / taxi_df.trip_distance，这会快得多。我们使用函数是为了能够比较我们实验中的
    apply 速度。如果你感兴趣，矢量化版本大约花费 50 ms。
- en: 'Experiment #1 — Raw Pandas'
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '实验 #1 — 原始 Pandas'
- en: 'For our first experiment, we are just going the read the data using raw Pandas.
    Here is the code:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一次实验中，我们只是使用原始 Pandas 读取数据。这里是代码：
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'With the data read in, we can apply our function to all our rows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 数据读取完毕后，我们可以将我们的函数应用于所有行：
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: It took **159,198 ms** (2 minutes and 39.21 seconds) to run this calculation.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 运行这个计算花费了**159,198 ms**（2 分钟 39.21 秒）。
- en: While that isn’t terribly slow, it is definitely slow enough that you notice
    the time it takes and it throws off your flow. I found myself sitting around waiting
    and that waiting time could easily tempt you to get distracted by email, Slack,
    or social media. And those types of distractions can really kill productivity
    beyond the time almost 3 minutes this calculation took to run.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这并不是特别慢，但绝对足够慢到让你注意到所花的时间，并且打乱了你的工作流程。我发现自己坐在那里等待，这段等待时间很容易让你被电子邮件、Slack 或社交媒体分散注意力。这些类型的干扰会严重影响生产力，超出了这次计算运行所需的将近
    3 分钟时间。
- en: Can we do better?
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能做得更好吗？
- en: 'Experiment #2 — Parallel Pandas'
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '实验 #2 — 并行 Pandas'
- en: Swifter is a library that makes it incredibly simple to use all the threads
    of your CPU when running Pandas *apply*.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Swifter 是一个库，使得在运行 Pandas *apply* 时，利用 CPU 的所有线程变得极其简单。
- en: 'Since *apply *is easily parallelized because you can just break the data frame
    into chunks for each thread, this should help. Here is the code:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 由于*apply*容易并行化，因为你可以将数据框拆分为每个线程的块，这应该有所帮助。这里是代码：
- en: '[PRE4]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Adding swifter to the mix brought our processing time to **88,690 ms** (1 minute
    and 28.69 seconds). Raw pandas was 1.795 times slower and you definitely notice
    when running the code that it got faster. That being said, you still find yourself
    waiting for it to finish.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 添加 swifter 后，我们的处理时间变为**88,690 ms**（1 分钟 28.69 秒）。原生 pandas 慢了 1.795 倍，你在运行代码时会明显感觉到加速。然而，你仍然会发现自己在等待其完成。
- en: 'Experiment #3 — Pandas on a GPU'
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '实验 #3 — 在 GPU 上使用 Pandas'
- en: This is where things start to get interesting. Thanks to the cuDF library will
    allow us to run our function on the GPU. The cuDF library, “provides a pandas-like
    API that will be familiar to data engineers & data scientists, so they can use
    it to easily accelerate their workflows without going into the details of CUDA
    programming.”
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是事情开始变得有趣的地方。得益于 cuDF 库，它允许我们在 GPU 上运行函数。cuDF 库，“提供了一个类似 pandas 的 API，对数据工程师和数据科学家来说非常熟悉，因此他们可以轻松加速他们的工作流程，而无需深入了解
    CUDA 编程。”
- en: 'To use the cuDF library, though, we have to change the format of our function
    slightly:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，要使用 cuDF 库，我们必须稍微改变一下函数的格式：
- en: '[PRE5]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now our function takes in the *total_amount*, *trip_distance*, and *out*. *Out* is
    the array in which we will store the results. Our function then loops over all
    the values of *total_amount* and *trip_distance* from our data frame, calculates
    our *total_per_mile*, and stores the results in *out*.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的函数接受 *total_amount*、*trip_distance* 和 *out*。*Out* 是我们将存储结果的数组。我们的函数随后会遍历数据框中的所有
    *total_amount* 和 *trip_distance* 的值，计算 *total_per_mile*，并将结果存储在 *out* 中。
- en: 'We also have to change how we apply this function to our data frame:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还必须改变将此函数应用于数据框的方式：
- en: '[PRE6]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We now specify what the input columns are from our data frame and how they map
    to the function parameters. We also specify which parameter is the output (*outcols) *and
    what type of value it is (*np.float64*).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在指定数据框中的输入列是什么，以及它们如何映射到函数参数。我们还指定哪个参数是输出 (*outcols*) 和它的值类型 (*np.float64*)。
- en: 'Note: reading in the data remains the same except you use cudf.read_csv() instead
    of pd.read_csv().'
  id: totrans-62
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意：读取数据的方式保持不变，只是使用 cudf.read_csv() 代替 pd.read_csv()。
- en: Using the cuDF library and leveraging our GPU takes the processing time down
    to **43 ms! **That means raw pandas was 3,702 times slower! That is insane! At
    this point, the processing time doesn’t feel like a delay at all. You run the
    function and before you know it, you have results. Honestly, I was amazed by how
    much faster it was to run our processing on the GPU.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 cuDF 库并利用 GPU 将处理时间降至 **43 ms**！这意味着原始 Pandas 慢了 3,702 倍！太疯狂了！此时，处理时间感觉不到任何延迟。你运行函数，结果很快就会出来。老实说，我对在
    GPU 上运行我们的处理速度如此之快感到惊讶。
- en: But! We have 1 more experiment to run to see if we can make it even faster.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 但是！我们还有一个实验要做，看看是否可以让速度更快。
- en: 'Experiment #4— Pandas on a Multiple GPUs'
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '实验 #4— 多 GPU 上的 Pandas'
- en: Dask_cuDF is a library that we can use in order to leverage our dask cluster
    which has 3 workers, each with a GPU. Essentially, we will be running our function
    on 3 GPUs distributed across our dask cluster.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Dask_cuDF 是一个我们可以使用的库，以利用我们拥有的 3 个工作节点的 dask 集群，每个工作节点都配备了 GPU。实质上，我们将在分布于 dask
    集群的 3 个 GPU 上运行我们的函数。
- en: 'This might sound complicated, but Saturn makes it really easy. With the following
    code, you can connect to your dask cluster:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能听起来很复杂，但 Saturn 让它变得非常简单。使用以下代码，你可以连接到你的 dask 集群：
- en: '[PRE7]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Once connected, you read in the data as so:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦连接，你可以这样读取数据：
- en: '[PRE8]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: And finally, you can run the function in the exact same way you did with cuDF.
    The only difference is that we are now running on a data frame read-in with the
    dask_cudf library, so we will be leveraging our dask cluster.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可以以与 cuDF 完全相同的方式运行函数。唯一的区别是我们现在运行的是通过 dask_cudf 库读取的数据框，因此我们将利用我们的 dask
    集群。
- en: How long did it take?
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 花了多长时间？
- en: '**12 ms**'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**12 ms**'
- en: That is 13,267 times faster than raw Pandas or you could also say that Pandas
    is 1,326,650% slower than running on a cluster of 3 GPUs.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这比原始 Pandas 快了 13,267 倍，或者你也可以说 Pandas 比在 3 个 GPU 集群上运行要慢 1,326,650%。
- en: Wow. That is fast. You could get a much larger dataset and still run this function
    fast enough to not notice much of a delay at all.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 哇。那真是太快了。你可以处理更大的数据集，函数的运行速度仍然足够快，不会感到明显的延迟。
- en: 'Note: This is still over 4 times faster than the Pandas vectorized version
    of our function!'
  id: totrans-76
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意：这比我们函数的 Pandas 矢量化版本快了 4 倍以上！
- en: Speed Matters
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 速度很重要
- en: Hopefully, I’ve convinced you to drop everything right now and go try out Pandas
    on a GPU using Saturn Cloud.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 希望我已经说服你现在就放下手头的一切，尝试在 Saturn Cloud 上使用 GPU 运行 Pandas。
- en: You could argue that almost 3 minutes to wait for a function to run really isn’t
    that long, but when you’re focused on programming and in the flow, 3 minutes really
    feels like forever. It is enough time that you start to get distracted and could
    easily end up wasting even more time via distraction.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以争辩说，等待一个函数运行近 3 分钟其实不算太长，但当你专注于编程并进入状态时，3 分钟真的感觉像是永恒。这段时间足够让你开始分心，可能会浪费更多时间。
- en: And if you have even larger data, those wait times will only get longer.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有更大的数据，这些等待时间只会更长。
- en: So, go try it out for yourself. I think you will be amazed by how much better
    12 ms or even 43 ms feels when running on a GPU as compared to over 159,000 seconds.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，自己去尝试一下吧。我认为当你在GPU上运行时，12毫秒甚至43毫秒相比于超过159,000秒的感觉会让你惊讶。
- en: Also, thank you to [Saturn Cloud](https://www.google.com/url?q=https://www.saturncloud.io/s/freehosted/?utm_source%3DSuper%2520Charge%2520Python%2520with%2520Pandas%2520on%2520GPUs%2520using%2520Saturn%2520Cloud%26utm_medium%3Dsaturn%2520hosted%2520free&sa=D&source=editors&ust=1619151968594000&usg=AOvVaw2JCPkeMfcMZKVLdtIsbtjm) for
    working with me on this article! It was my first deep dive into the platform and
    I was truly impressed.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，感谢[Saturn Cloud](https://www.google.com/url?q=https://www.saturncloud.io/s/freehosted/?utm_source%3DSuper%2520Charge%2520Python%2520with%2520Pandas%2520on%2520GPUs%2520using%2520Saturn%2520Cloud%26utm_medium%3Dsaturn%2520hosted%2520free&sa=D&source=editors&ust=1619151968594000&usg=AOvVaw2JCPkeMfcMZKVLdtIsbtjm)与我合作撰写这篇文章！这是我第一次深入了解这个平台，真的让我印象深刻。
- en: '**Bio: [Tyler Folkman](https://www.linkedin.com/in/tylerfolkman/)** is the
    Head of Artificial Intelligence at BEN Group. His work explores applications of
    machine learning in disrupting and transforming the entertainment and marketing
    industries. Tyler''s work has earned multiple patents in the areas of entity resolution
    and knowledge extraction from unstructured data.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介: [Tyler Folkman](https://www.linkedin.com/in/tylerfolkman/)** 是BEN Group的人工智能主管。他的工作探索了机器学习在颠覆和转变娱乐与营销行业中的应用。Tyler在实体解析和从非结构化数据中提取知识方面获得了多项专利。'
- en: '**Related:**'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关内容:**'
- en: '[Applying Python’s Explode Function to Pandas DataFrames](/2021/05/applying-pythons-explode-function-pandas-dataframes.html)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将Python的Explode函数应用于Pandas DataFrames](/2021/05/applying-pythons-explode-function-pandas-dataframes.html)'
- en: '[How to Speed Up Pandas with Modin](/2021/03/speed-up-pandas-modin.html)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何通过Modin加速Pandas](/2021/03/speed-up-pandas-modin.html)'
- en: '[ETL in the Cloud: Transforming Big Data Analytics with Data Warehouse Automation](/2021/04/etl-cloud-transforming-big-data-analytics-data-warehouse-automation.html)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[云中的ETL：利用数据仓库自动化转型大数据分析](/2021/04/etl-cloud-transforming-big-data-analytics-data-warehouse-automation.html)'
- en: '* * *'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速入门网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你所在的组织的IT工作'
- en: '* * *'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Mastering GPUs: A Beginner''s Guide to GPU-Accelerated DataFrames in Python](https://www.kdnuggets.com/2023/07/mastering-gpus-beginners-guide-gpu-accelerated-dataframes-python.html)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[掌握GPU：Python中GPU加速DataFrames的初学者指南](https://www.kdnuggets.com/2023/07/mastering-gpus-beginners-guide-gpu-accelerated-dataframes-python.html)'
- en: '[Leveraging the Power of GPUs with CuPy in Python](https://www.kdnuggets.com/leveraging-the-power-of-gpus-with-cupy-in-python)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在Python中利用CuPy发挥GPU的力量](https://www.kdnuggets.com/leveraging-the-power-of-gpus-with-cupy-in-python)'
- en: '[From Google Colab to a Ploomber Pipeline: ML at Scale with GPUs](https://www.kdnuggets.com/2022/03/google-colab-ploomber-pipeline-ml-scale-gpus.html)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[从Google Colab到Ploomber管道：使用GPU的规模化ML](https://www.kdnuggets.com/2022/03/google-colab-ploomber-pipeline-ml-scale-gpus.html)'
- en: '[Cloud-Native Super Computing](https://www.kdnuggets.com/2022/03/nvidia-cloud-native-super-computing.html)'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[云原生超级计算](https://www.kdnuggets.com/2022/03/nvidia-cloud-native-super-computing.html)'
- en: '[11 Best Practices of Cloud and Data Migration to AWS Cloud](https://www.kdnuggets.com/2023/04/11-best-practices-cloud-data-migration-aws-cloud.html)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[迁移到AWS云的11个最佳实践](https://www.kdnuggets.com/2023/04/11-best-practices-cloud-data-migration-aws-cloud.html)'
- en: '[7 Super Cheat Sheets You Need To Ace Machine Learning Interview](https://www.kdnuggets.com/2022/12/7-super-cheat-sheets-need-ace-machine-learning-interview.html)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[7个超级备忘单，助你在机器学习面试中取得成功](https://www.kdnuggets.com/2022/12/7-super-cheat-sheets-need-ace-machine-learning-interview.html)'
