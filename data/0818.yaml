- en: Creating Visuals with Matplotlib and Seaborn
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Matplotlib 和 Seaborn 创建可视化
- en: 原文：[https://www.kdnuggets.com/creating-visuals-with-matplotlib-and-seaborn](https://www.kdnuggets.com/creating-visuals-with-matplotlib-and-seaborn)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/creating-visuals-with-matplotlib-and-seaborn](https://www.kdnuggets.com/creating-visuals-with-matplotlib-and-seaborn)
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/f0c896249a7b05ed54bf272c9ddb2a55.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建可视化](../Images/f0c896249a7b05ed54bf272c9ddb2a55.png)'
- en: Image by [storyset](https://www.freepik.com/free-vector/site-stats-concept-illustration_7140744.htm#query=visualization&position=31&from_view=search&track=sph)
    on [Freepik](https://www.freepik.com/)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自 [storyset](https://www.freepik.com/free-vector/site-stats-concept-illustration_7140744.htm#query=visualization&position=31&from_view=search&track=sph)
    由 [Freepik](https://www.freepik.com/) 提供
- en: Data visualization is essential in data work as it helps people understand what
    happens with our data. It’s hard to ingest the data information directly in a
    raw form, but visualization would spark people's interest and engagement. This
    is why learning data visualization is important to succeed in the data field.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可视化在数据工作中至关重要，因为它帮助人们理解数据的变化。直接处理原始数据很困难，但可视化可以激发人们的兴趣和参与感。这就是为什么学习数据可视化对在数据领域取得成功非常重要。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你组织的 IT 需求'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Matplotlib is one of Python's most popular data visualization libraries because
    it’s very versatile, and you can visualize virtually everything from scratch.
    You can control many aspects of your visualization with this package.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 是 Python 中最受欢迎的数据可视化库之一，因为它非常多功能，你可以从零开始几乎可视化任何东西。使用这个包，你可以控制可视化的许多方面。
- en: On the other hand, [Seaborn](https://seaborn.pydata.org/) is a Python data visualization
    package that is built on top of Matplotlib. It offers much simpler high-level
    code with various in-built themes inside the package. The package is great if
    you want a quick data visualization with a nice look.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，[Seaborn](https://seaborn.pydata.org/) 是一个建立在 Matplotlib 之上的 Python 数据可视化包。它提供了更简单的高级代码，并且包内含有多种内置主题。如果你想快速进行美观的数据可视化，这个包非常适合你。
- en: In this article, we will explore both packages and learn how to visualize your
    data with these packages. Let’s get into it.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将探索这两个包，并学习如何使用这些包来可视化你的数据。让我们开始吧。
- en: Visualization with Matplotlib
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Matplotlib 进行可视化
- en: As mentioned above, Matplotlib is a versatile Python package where we can control
    various aspects of the visualization. The package is based on the [Matlab](http://mathworks.com/products/matlab.html)
    programming language, but we applied it in Python.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所述，Matplotlib 是一个多功能的 Python 包，我们可以控制可视化的各种方面。这个包基于 [Matlab](http://mathworks.com/products/matlab.html)
    编程语言，但我们在 Python 中使用了它。
- en: Matplotlib library is usually already available in your environment, especially
    if you use Anaconda.  If not, you can install them with the following code.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 库通常已经在你的环境中可用，特别是如果你使用 Anaconda。如果没有，你可以使用以下代码进行安装。
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After the installation, we would import the Matplotlib package for visualization
    with the following code.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 安装后，我们将使用以下代码导入 Matplotlib 包进行可视化。
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Let’s start with the basic plotting with Matplotlib. For starters, I would create
    sample data.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从使用 Matplotlib 进行基本绘图开始。首先，我会创建一些示例数据。
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: With this data, we would create a line plot with the Matplotlib package.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 利用这些数据，我们将使用 Matplotlib 包创建一个折线图。
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/ff53230a30b21fa4f127cdf83e507186.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建可视化](../Images/ff53230a30b21fa4f127cdf83e507186.png)'
- en: In the code above, we pass the data into the matplotlib function (x and y) to
    create a simple line plot with a blue line. Additionally, we control the axis
    label and title with the code above.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码中，我们将数据传递给matplotlib函数（x和y），以创建一个简单的蓝色折线图。此外，我们使用上述代码控制轴标签和标题。
- en: Let’s try to create a multiple matplotlib plot with the subplot function.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试使用`subplot`函数创建多个matplotlib图表。
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/2d5c04a01628c7dac4d74a8cfe60dad7.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![使用Matplotlib和Seaborn创建视觉效果](../Images/2d5c04a01628c7dac4d74a8cfe60dad7.png)'
- en: In the code above, we create two plot side by side. The subplot function controls
    the plot position; for example, plt.subplot(1,2,1) means that we would have two
    plots in one row (first parameter) and two columns (second parameter). The third
    parameter is to control which plot we are now referring to. So plt.subplot(1,2,1)
    means the first plot of the single row and double columns plots.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码中，我们并排创建了两个图表。`subplot`函数控制图表的位置；例如，`plt.subplot(1,2,1)`意味着我们将有两个图表在一行（第一个参数）和两列（第二个参数）。第三个参数用于控制我们现在引用的是哪个图表。所以`plt.subplot(1,2,1)`意味着单行双列图表中的第一个图表。
- en: That is the basis of the Matplotlib functions, but if we want more control over
    the Matplotlib visualization, we need to use the Object Oriented Method (OOM).
    With OOM, we would produce visualization directly from the figure object and call
    any attribute from the specified object.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是Matplotlib函数的基础，但如果我们想对Matplotlib可视化进行更多控制，我们需要使用面向对象方法（OOM）。使用OOM，我们可以直接从图形对象生成可视化，并调用指定对象的任何属性。
- en: Let me give you an example visualization with Matplotlib OOM.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 让我给你一个使用Matplotlib OOM的可视化示例。
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/8c7458618dec4593d0cdacef53cccb25.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![使用Matplotlib和Seaborn创建视觉效果](../Images/8c7458618dec4593d0cdacef53cccb25.png)'
- en: The result is similar to the plot we created, but the code is more complex.
    At first, it seemed counterproductive, but using the OOM allowed us to control
    virtually everything with our visualization. For example, in the plot above, we
    can control where the axes are located within the canvas.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 结果类似于我们创建的图表，但代码更复杂。一开始，这似乎是适得其反的，但使用OOM让我们几乎可以完全控制我们的可视化。例如，在上面的图表中，我们可以控制坐标轴在画布上的位置。
- en: To see how we see the differences in using OOM compared to the normal plotting
    function, let’s put two plots with their respective axes overlapping on each other.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看使用OOM与普通绘图函数的区别，我们将两个图表及其各自的坐标轴重叠在一起。
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/0e22c0956b8ec2689e95af70ca2d1644.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![使用Matplotlib和Seaborn创建视觉效果](../Images/0e22c0956b8ec2689e95af70ca2d1644.png)'
- en: In the code above, we specified a canvas object with the plt.figure function
    and produced all these plots from the figure object. We can produce as many axes
    as possible within one canvas and put a visualization plot inside them.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码中，我们使用`plt.figure`函数指定了一个画布对象，并从该画布对象生成了所有这些图表。我们可以在一个画布中生成尽可能多的坐标轴，并在其中放置可视化图表。
- en: It’s also possible to automatically create the figure, and axes object with
    the subplot function.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以通过`subplot`函数自动创建图形和坐标轴对象。
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/a282c6ee4cfcce188adda921fb7c9f8b.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![使用Matplotlib和Seaborn创建视觉效果](../Images/a282c6ee4cfcce188adda921fb7c9f8b.png)'
- en: Using the subplots function, we create both figures and a list of axes objects.
    In the function above, we specify the number of plots and the position of one
    row with two column plots.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`subplots`函数，我们创建了图形以及坐标轴对象的列表。在上述函数中，我们指定了图表的数量和一行两列图表的位置。
- en: For the axes object, it’s a list of all the axes for the plots we can access.
    In the code above, we access the first object on the list to create the plot.
    The result is two plots, one filled with the line plot while the other only the
    axes.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 对于坐标轴对象，它是一个包含所有可访问图表坐标轴的列表。在上面的代码中，我们访问了列表中的第一个对象来创建图表。结果是两个图表，一个填充了折线图，而另一个只有坐标轴。
- en: Because subplots produce a list of axes objects, you can iterate them similarly
    to the code below.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 因为`subplots`生成了一个坐标轴对象的列表，你可以像下面的代码一样对它们进行迭代。
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/718427096d3f34d87dfe1594d9752524.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![使用Matplotlib和Seaborn创建视觉效果](../Images/718427096d3f34d87dfe1594d9752524.png)'
- en: You can play with the code to produce the needed plots. Additionally, we use
    the tight_layout function because there is a possibility of plots overlapping.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以修改代码以生成所需的图表。此外，我们使用`tight_layout`函数，因为图表可能会重叠。
- en: Let’s try some basic parameters we can use to control our Matplotlib plot. First,
    let’s try changing the canvas and pixel sizes.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试一些可以用来控制 Matplotlib 图的基本参数。首先，尝试更改画布和像素大小。
- en: '[PRE9]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/80ca2e2b66776773bd26579fb14d0618.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉效果](../Images/80ca2e2b66776773bd26579fb14d0618.png)'
- en: The parameter figsize accept a tuple of two number (width, height) where the
    result is similar to the plot above.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 参数 figsize 接受一个由两个数字（宽度，高度）组成的元组，结果与上述图类似。
- en: Next, let’s try to add a legend to the plot.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们尝试为图添加图例。
- en: '[PRE10]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/4661c2b21ccbe9bf5c15f76a01c4ceed.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉效果](../Images/4661c2b21ccbe9bf5c15f76a01c4ceed.png)'
- en: By assigning the label parameter to the plot and using the legend function,
    we can show the label as a legend.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将标签参数分配给图并使用图例函数，我们可以将标签显示为图例。
- en: Lastly, we can use the following code to save our plot.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以使用以下代码来保存我们的图。
- en: '[PRE11]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: There are many special plots outside the line plot shown above. We can access
    these plots using these functions. Let’s try several plots that might help your
    work.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 直方图可视化了以箱体形式表示的数据分布。
- en: '**Scatter Plot**'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多线图之外的特殊图。我们可以使用这些函数访问这些图。让我们尝试几种可能对你的工作有帮助的图。
- en: Instead of a line plot, we can create a scatter plot to visualize the feature
    relationship using the following code.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以创建一个散点图来可视化特征关系，使用以下代码。
- en: '[PRE12]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/448f49532d809a70ebf21df2fe0cf194.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉效果](../Images/448f49532d809a70ebf21df2fe0cf194.png)'
- en: '**Histogram Plot**'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**直方图**'
- en: A histogram plot visualizes the data distribution represented in the bins.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**散点图**'
- en: '[PRE13]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/a282c6ee4cfcce188adda921fb7c9f8b.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉效果](../Images/a282c6ee4cfcce188adda921fb7c9f8b.png)'
- en: '**Boxplot**'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**箱线图**'
- en: The boxplot is a visualization technique representing data distribution into
    quartiles.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 箱线图是一种将数据分布表示为四分位数的可视化技术。
- en: '[PRE14]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/0628557a97b35967115c2d143d190ade.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉效果](../Images/0628557a97b35967115c2d143d190ade.png)'
- en: '**Pie Plot**'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**饼图**'
- en: The Pie plot is a circular shape plot that represents the numerical proportions
    of the categorical plot—for example, the frequency of the categorical values in
    the data.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 饼图是一种圆形图，用于表示分类图的数值比例，例如数据中分类值的频率。
- en: '[PRE15]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/3f69aeeb1f8423712c3f108f3c126993.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉效果](../Images/3f69aeeb1f8423712c3f108f3c126993.png)'
- en: There are still many special plots from the Matplotlib library that you can
    check out [here](https://matplotlib.org/stable/plot_types/index.html).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以在 [这里](https://matplotlib.org/stable/plot_types/index.html) 查看 Matplotlib
    库中的许多特殊图。
- en: Visualization with Seaborn
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Seaborn 进行可视化
- en: '[Seaborn](https://seaborn.pydata.org/) is a Python package for statistical
    visualization built on top of Matplotlib. What makes Seaborn stand out is that
    it simplifies creating visualization with an excellent style. The package also
    works with Matplotlib, as many Seaborn APIs are tied to Matplotlib.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[Seaborn](https://seaborn.pydata.org/) 是一个构建在 Matplotlib 之上的 Python 统计可视化包。Seaborn
    的突出之处在于它通过优秀的样式简化了可视化的创建。这个包也与 Matplotlib 配合使用，因为许多 Seaborn API 依赖于 Matplotlib。'
- en: Let’s try out the Seaborn package. If you haven’t installed the package, you
    can do that by using the following code.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试一下 Seaborn 包。如果你还没有安装这个包，可以使用以下代码进行安装。
- en: '[PRE16]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Seaborn has an in-built API to get sample datasets that we can use for testing
    the package. We would use this dataset to create various visualization with Seaborn.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Seaborn 内置了一个 API，可以获取用于测试包的样本数据集。我们将使用这个数据集来创建各种 Seaborn 可视化效果。
- en: '[PRE17]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/48050471847e87be6104aa2c979c87cf.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉效果](../Images/48050471847e87be6104aa2c979c87cf.png)'
- en: Using the data above, we would explore the Seaborn plot, including distributional,
    categorical, relation, and matrix plots.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 使用上述数据，我们将探索 Seaborn 绘图，包括分布图、分类图、关系图和矩阵图。
- en: '**Distributional Plots**'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**分布图**'
- en: The first plot we would try with Seaborn is the distributional plot to visualize
    the numerical feature distribution. We can do that we the following code.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将尝试的第一个图是分布图，用于可视化数值特征的分布。我们可以使用以下代码完成这项任务。
- en: '[PRE18]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/e13b19abaca3afadb943cae3acbef03b.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉效果](../Images/e13b19abaca3afadb943cae3acbef03b.png)'
- en: By default, the displot function would produce a histogram plot. If we want
    to smoothen the plot, we can use the KDE parameter.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，displot 函数会生成一个直方图。如果我们想要平滑图形，可以使用 KDE 参数。
- en: '[PRE19]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/f591a0460b704f826797ffc622b032bc.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉图像](../Images/f591a0460b704f826797ffc622b032bc.png)'
- en: The distributional plot can also be split according to the categorical values
    in the DataFrame using the hue parameter.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 分布图也可以根据 DataFrame 中的分类值进行拆分，使用 hue 参数。
- en: '[PRE20]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/f4b19c6a5983381bf3ded64da25cf37b.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉图像](../Images/f4b19c6a5983381bf3ded64da25cf37b.png)'
- en: We can even split the plot even further with the row or col parameter. With
    this parameter, we produce several plots divided with a combination of categorical
    values.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至可以通过 row 或 col 参数进一步拆分图形。通过这些参数，我们可以生成多个图形，这些图形按照分类值的组合进行划分。
- en: '[PRE21]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/7a23d4602d8492a55777ced2b70f3dea.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉图像](../Images/7a23d4602d8492a55777ced2b70f3dea.png)'
- en: Another way to display the data distribution is by using the boxplot. Seabron
    could facilitate the visualization easily with the following code.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种展示数据分布的方式是使用箱形图。Seaborn 可以通过以下代码轻松实现可视化。
- en: '[PRE22]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/276c54bf19d87fbe3b5acad1b749d479.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉图像](../Images/276c54bf19d87fbe3b5acad1b749d479.png)'
- en: Using the violin plot, we can display the data distribution that combines the
    boxplot with KDE.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 使用小提琴图，我们可以展示结合了箱形图和核密度估计（KDE）的数据分布。
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/4be3161d7ffe2b82b24c40d4d743b756.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉图像](../Images/4be3161d7ffe2b82b24c40d4d743b756.png)'
- en: Lastly, we can show the data point to the plot by combining the violin and swarm
    plots.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以通过结合小提琴图和散点图将数据点展示到图中。
- en: '[PRE23]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/3d0660a41d594096bff54199e0d2f980.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉图像](../Images/3d0660a41d594096bff54199e0d2f980.png)'
- en: '**Categorical Plots**'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**分类图**'
- en: A categorical plot is a various Seaborn API that applies to produce the visualization
    with categorical data. Let’s explore some of the available plots.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 分类图是一种多种 Seaborn API 的可视化方法，适用于处理分类数据。让我们探索一些可用的图形。
- en: First, we would try to create a count plot.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们会尝试创建一个计数图。
- en: '[PRE24]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/387eba29a61798c066b7953f465a778c.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉图像](../Images/387eba29a61798c066b7953f465a778c.png)'
- en: The count plot would show a bar with the frequency of the categorical values.
    If we want to show the count number in the plot, we need to combine the Matplotlib
    function into the Seaborn API.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 计数图会显示分类值的频率条形图。如果我们想要在图中显示计数数字，我们需要将 Matplotlib 函数结合到 Seaborn API 中。
- en: '[PRE25]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/e8f9b9adac6bb3ad627b9b4ff86a041f.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉图像](../Images/e8f9b9adac6bb3ad627b9b4ff86a041f.png)'
- en: We can extend the plot further with the hue parameter and show the frequency
    values with the following code.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用 hue 参数进一步扩展图形，并用以下代码显示频率值。
- en: '[PRE26]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/573220835749102df28b1a16ca92eb4a.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉图像](../Images/573220835749102df28b1a16ca92eb4a.png)'
- en: Next, we would try to develop a barplot. Barplot is a categorical plot that
    shows data aggregation with an error bar.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将尝试开发一个条形图。条形图是一种分类图，展示了数据的聚合以及误差条。
- en: '[PRE27]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/1056127658caac3d58016e9465972ffb.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉图像](../Images/1056127658caac3d58016e9465972ffb.png)'
- en: Barplot uses a combination of categorical and numerical features to provide
    the aggregation statistic. By default, the barplot uses an average aggregation
    function with a confidence interval 95% error bar.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 条形图使用分类特征和数值特征的组合来提供聚合统计数据。默认情况下，条形图使用平均聚合函数，并具有 95% 置信区间的误差条。
- en: If we want to change the aggregation function, we can pass the function into
    the estimator parameter.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要更改聚合函数，可以将函数传递给 estimator 参数。
- en: '[PRE28]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/53802206efe9c210213bed5f839dcd3f.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建视觉图像](../Images/53802206efe9c210213bed5f839dcd3f.png)'
- en: '**Relational Plots**'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**关系图**'
- en: A relational plot is a visualization technique to show the relationship between
    features. It’s mainly used to identify any kind of patterns that exist within
    the dataset.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 关系图是一种可视化技术，用于展示特征之间的关系。它主要用于识别数据集中存在的任何模式。
- en: First, we would use a scatter plot to show the relation between certain numerical
    features.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将使用散点图来展示某些数值特征之间的关系。
- en: '[PRE29]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/c9919188862d9d0b5975edda917985c0.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建可视化](../Images/c9919188862d9d0b5975edda917985c0.png)'
- en: We can combine the scatter plot with the distributional plot using a joint plot.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用联合图将散点图与分布图结合起来。
- en: '[PRE30]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/47fd2d5f59f8994ce79d7ead8a7e540a.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建可视化](../Images/47fd2d5f59f8994ce79d7ead8a7e540a.png)'
- en: Lastly, we can automatically plot pairwise relationships between features in
    the DataFrame using the pairplot.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以使用 pairplot 自动绘制数据框中各特征之间的成对关系。
- en: '[PRE31]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/6d6c11604260571653f0a9bbf33220e5.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建可视化](../Images/6d6c11604260571653f0a9bbf33220e5.png)'
- en: '**Matrix Plots**'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '**矩阵图**'
- en: Matrix plot is used to visualize the data as a color-encoded matrix. It is used
    to see the relationship between the features or help recognize the clusters within
    the data.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵图用于将数据可视化为颜色编码的矩阵。它用于查看特征之间的关系或帮助识别数据中的簇。
- en: For example, we have a correlation data matrix from our dataset.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们有来自数据集的相关性数据矩阵。
- en: '[PRE32]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/4926467db3382f51ec936ceb7f5773cf.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建可视化](../Images/4926467db3382f51ec936ceb7f5773cf.png)'
- en: We could understand the dataset above better if we represented them in a color-encoded
    plot. That is why we would use a heatmap plot.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将这些数据表示为颜色编码的图，我们可以更好地理解上述数据集。这就是我们使用热图的原因。
- en: '[PRE33]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/88542f674a16cc65d83ee1c8f9c59b75.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建可视化](../Images/88542f674a16cc65d83ee1c8f9c59b75.png)'
- en: The matrix plot could also produce a hierarchal clustering plot that infers
    the values within our dataset and clusters them according to the existing similarity
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵图还可以生成一个层次聚类图，推断数据集中的值，并根据现有相似性将它们分组。
- en: '[PRE34]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '![Creating Visuals with Matplotlib and Seaborn](../Images/c359443fa899ae9be08234fb48f15130.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Matplotlib 和 Seaborn 创建可视化](../Images/c359443fa899ae9be08234fb48f15130.png)'
- en: Conclusion
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Data visualization is a crucial part of the data world as it helps the audience
    to understand what happens with our data quickly. The standard Python packages
    for data visualization are Matplotlib and Seaborn. In this article, we have learned
    the primary usage of the packagesWhat other packages besides Matplotlib and Seaborn
    are available for data visualization in Python? and introduced several visualizations
    that could help our work.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可视化是数据世界中的关键部分，它帮助观众快速理解我们的数据发生了什么。标准的 Python 数据可视化包是 Matplotlib 和 Seaborn。在本文中，我们学习了这些包的主要用途，除了
    Matplotlib 和 Seaborn 外，还有哪些包可用于 Python 数据可视化，并介绍了几种可能帮助我们工作的可视化方式。
- en: '**[Cornellius Yudha Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**
    is a data science assistant manager and data writer. While working full-time at
    Allianz Indonesia, he loves to share Python and Data tips via social media and
    writing media.'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Cornellius Yudha Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**
    是数据科学助理经理和数据撰稿人。在 Allianz 印度尼西亚全职工作的同时，他喜欢通过社交媒体和写作媒体分享 Python 和数据技巧。'
- en: More On This Topic
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关内容
- en: '[Creating Beautiful Histograms with Seaborn](https://www.kdnuggets.com/2023/01/creating-beautiful-histograms-seaborn.html)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Seaborn 创建美丽的直方图](https://www.kdnuggets.com/2023/01/creating-beautiful-histograms-seaborn.html)'
- en: '[Data Visualization in Python with Seaborn](https://www.kdnuggets.com/2022/04/data-visualization-python-seaborn.html)'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Seaborn 进行 Python 数据可视化](https://www.kdnuggets.com/2022/04/data-visualization-python-seaborn.html)'
- en: '[KDnuggets News 22:n16, Apr 20: Top YouTube Channels for Learning…](https://www.kdnuggets.com/2022/n16.html)'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻 22:n16, 4 月 20 日: 学习的最佳 YouTube 频道…](https://www.kdnuggets.com/2022/n16.html)'
- en: '[Introduction to Data Visualization Using Matplotlib](https://www.kdnuggets.com/2022/12/introduction-data-visualization-matplotlib.html)'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Matplotlib 进行数据可视化入门](https://www.kdnuggets.com/2022/12/introduction-data-visualization-matplotlib.html)'
- en: '[Python Matplotlib Cheat Sheets](https://www.kdnuggets.com/2023/01/python-matplotlib-cheat-sheets.html)'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python Matplotlib 速查表](https://www.kdnuggets.com/2023/01/python-matplotlib-cheat-sheets.html)'
- en: '[Winning The Room: Creating and Delivering an Effective Data-Driven…](https://www.kdnuggets.com/2022/04/franks-winning-room-creating-delivering-effective-data-driven-presentation.html)'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[赢得房间: 创建和呈现有效的数据驱动…](https://www.kdnuggets.com/2022/04/franks-winning-room-creating-delivering-effective-data-driven-presentation.html)'
