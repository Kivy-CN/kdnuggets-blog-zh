["```py\n*classifier.compile(optimizer= ‘adam’,\n                  loss = ‘binary_crossentropy’,\n                  metrics = [‘accuracy’])*\n```", "```py\n*classifier.fit(X_train, y_train, batch_size = 10, epochs = 100)*\n```", "```py\n*y_pred = classifier.predict(X_test)*\n```", "```py\n*y_pred = (y_pred > 0.5)*\n```", "```py\n*from sklearn.metrics import confusion_matrix*\n\n*cm = confusion_matrix(y_test, y_pred)*\n```", "```py\n*new_pred = classifier.predict(sc.transform(np.array([[a,b,c,d]])))*\n```", "```py\n*new_pred = (new_prediction > 0.5)*\n```", "```py\n*from keras.wrappers.scikit_learn import KerasClassifier*\n```", "```py\n*from sklearn.model_selection import cross_val_score*\n```", "```py\n*classiifier = KerasClassifier(build_fn = make_classifier,\n                            batch_size=10, nb_epoch=100)*\n```", "```py\n*accuracies = cross_val_score(estimator = classifier,\n                             X = X_train,\n                             y = y_train,\n                             cv = 10,\n                             n_jobs = -1)*\n```", "```py\n*mean = accuracies.mean()*\n```", "```py\n*variance = accuracies.var()*\n```", "```py\n*from sklearn.model_selection import GridSearchCV*\n```", "```py\n*classifier = KerasClassifier(build_fn = make_classifier)*\n```", "```py\n*params = {\n    'batch_size':[20,35],*\n\n *'nb_epoch':[150,500],*\n\n *'Optimizer':['adam','rmsprop'**]\n}*\n```", "```py\n*grid_search = GridSearchCV(estimator=classifier,\n                           param_grid=params,\n                           scoring=’accuracy’,\n                           cv=10)*\n```", "```py\n*grid_search = grid_search.fit(X_train,y_train)*\n```", "```py\n*best_param = grid_search.best_params_*\n\n*best_accuracy = grid_search.best_score_*\n```"]