- en: Keras Callbacks Explained In Three Minutes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/08/keras-callbacks-explained-three-minutes.html](https://www.kdnuggets.com/2019/08/keras-callbacks-explained-three-minutes.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '**By [Andre Duong](https://www.linkedin.com/in/andreduong/), UT Dallas**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/ee815a0cbb38fb79a1ddf4df0d08caae.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Image Source](https://keras.io/)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Building Deep Learning models without callbacks is like driving a car with no
    functioning brakes — you have little to no control over the whole process that
    is very likely to result in a disaster. In this article, you will learn how to
    monitor and improve your Deep Learning models using Keras callbacks like ModelCheckpoint
    and EarlyStopping.
  prefs: []
  type: TYPE_NORMAL
- en: What are callbacks?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'From the [Keras documentation](https://keras.io/callbacks/):'
  prefs: []
  type: TYPE_NORMAL
- en: A callback is a set of functions to be applied at given stages of the training
    procedure. You can use callbacks to get a view on internal states and statistics
    of the model during training.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: You define and use a callback when you want to automate some tasks after every
    training/epoch that help you have controls over the training process. This includes
    stopping training when you reach a certain accuracy/loss score, saving your model
    as a checkpoint after each successful epoch, adjusting the learning rates over
    time, and more. Let’s dive deep into some callback functions!
  prefs: []
  type: TYPE_NORMAL
- en: EarlyStopping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Overfitting is a nightmare for Machine Learning practitioners. One way to avoid
    overfitting is to terminate the process early. The `EarlyStopping`function has
    various metrics/arguments that you can modify to set up when the training process
    should stop. Here are some relevant metrics:'
  prefs: []
  type: TYPE_NORMAL
- en: '**monitor**: value being monitored, i.e: val_loss'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**min_delta**: minimum change in the monitored value. For example, min_delta=1
    means that the training process will be stopped if the absolute change of the
    monitored value is less than 1'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**patience**: number of epochs with no improvement after which training will
    be stopped'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**restore_best_weights**: set this metric to True if you want to keep the best
    weights once stopped'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The code example below will define an EarlyStopping function that tracks the
    val_loss value, stops the training if there are no changes towards val_loss after
    3 epochs, and keeps the best weights once the training stops:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: ModelCheckpoint
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This callback saves the model after every epoch. Here are some relevant metrics:'
  prefs: []
  type: TYPE_NORMAL
- en: '**filepath**: the file path you want to save your model in'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**monitor**: the value being monitored'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**save_best_only**: set this to True if you do not want to overwrite the latest
    best model'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**mode**: auto, min, or max. For example, you set `mode=’min’` if the monitored
    value is `val_loss` and you want to minimize it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: LearningRateScheduler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'This one is pretty straightforward: it adjusts the learning rate over time
    using a `schedule` that you already write beforehand. This function returns the
    desired learning rate (output) based on the current epoch (epoch index as input).'
  prefs: []
  type: TYPE_NORMAL
- en: Other Callbacks functions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Along with the above functions, there are other callbacks that you might encounter
    or want to use in your Deep Learning project:'
  prefs: []
  type: TYPE_NORMAL
- en: '**History **and** BaseLogger**: callbacks that are applied automatically to
    your model by default'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**TensorBoard**: This is hands down my favorite Keras callback. This callback
    writes a log for TensorBoard, which is TensorFlow’s excellent visualization tool.
    If you have installed TensorFlow with pip, you should be able to launch TensorBoard
    from the command line: `tensorboard — logdir=/full_path_to_your_logs`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CSVLogger**: This callback streams epoch results to a csv file'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**LambdaCallback**: This callback allows you to build custom callback'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this article, you have learned the main concept of callbacks in Keras and
    the callback functions. Keras document has a very comprehensive page on callbacks
    that you should definitely check out: [http://keras.io/callbacks/](http://keras.io/callbacks/)
  prefs: []
  type: TYPE_NORMAL
- en: Leave comments if you have any suggestions on how to improve this post. Follow
    me up at [Medium](https://medium.com/@andreduong07) or connect with me on [LinkedIn](https://www.linkedin.com/in/andreduong/) for
    more quality content!
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Andre Duong](https://www.linkedin.com/in/andreduong/)** is a sophomore
    CS Undergrad @ UT Dallas. His interests include Machine Learning, Data Science,
    and Software Development.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://medium.com/towards-artificial-intelligence/keras-callbacks-explained-in-three-minutes-846a43b44a16).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Advanced Keras — Constructing Complex Custom Losses and Metrics](/2019/04/advanced-keras-constructing-complex-custom-losses-metrics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Convolutional Neural Networks: A Python Tutorial Using TensorFlow and Keras](/2019/07/convolutional-neural-networks-python-tutorial-tensorflow-keras.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Which Deep Learning Framework is Growing Fastest?](/2019/05/which-deep-learning-framework-growing-fastest.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[5 Machine Learning Models Explained in 5 Minutes](https://www.kdnuggets.com/5-machine-learning-models-explained-in-5-minutes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Building and Training Your First Neural Network with TensorFlow and Keras](https://www.kdnuggets.com/2023/05/building-training-first-neural-network-tensorflow-keras.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Keras 3.0: Everything You Need To Know](https://www.kdnuggets.com/2023/07/keras-30-everything-need-know.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Understanding Bias-Variance Trade-Off in 3 Minutes](https://www.kdnuggets.com/2020/09/understanding-bias-variance-trade-off-3-minutes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Build a Machine Learning Web App in 5 Minutes](https://www.kdnuggets.com/2022/03/build-machine-learning-web-app-5-minutes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
