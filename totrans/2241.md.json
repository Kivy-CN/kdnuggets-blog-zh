["```py\nimport pandas as pd\nfrom sklearn.feature_extraction.text import TfidfVectorizer\n\ndf = pd.read_csv('PubMed Multi Label Text Classification Dataset Processed.csv')\ndf = df.drop(['Title', 'meshMajor', 'pmid', 'meshid', 'meshroot'], axis =1)\n\nX = df[\"abstractText\"]\ny = np.asarray(df[df.columns[1:]])\n\nvectorizer = TfidfVectorizer(max_features=2500, max_df=0.9)\nvectorizer.fit(X)\n```", "```py\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=101)\n\nX_train_tfidf = vectorizer.transform(X_train)\nX_test_tfidf = vectorizer.transform(X_test)\n```", "```py\nfrom sklearn.multioutput import MultiOutputClassifier\nfrom sklearn.linear_model import LogisticRegression\n\nclf = MultiOutputClassifier(LogisticRegression()).fit(X_train_tfidf, y_train)\n```", "```py\nprediction = clf.predict(X_test_tfidf)\nprediction\n```", "```py\nfrom sklearn.metrics import accuracy_score\nprint('Accuracy Score: ', accuracy_score(y_test, prediction))\n```", "```py\nfrom sklearn.metrics import hamming_loss\nprint('Hamming Loss: ', round(hamming_loss(y_test, prediction),2))\n```"]