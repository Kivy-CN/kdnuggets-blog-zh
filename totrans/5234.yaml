- en: SQL Cheat Sheet
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2018/07/sql-cheat-sheet.html](https://www.kdnuggets.com/2018/07/sql-cheat-sheet.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '![SQL cheat sheet](../Images/6e35b8c6a9cceb36baf0ef9a0dea61cb.png)'
  prefs: []
  type: TYPE_IMG
- en: 'SQL (Structured Query Language) is a domain-specific language used in programming
    and designed for querying a database. As with any language, it can useful to have
    a list of common queries and function names as a reference. We hope this cheat
    sheet can be of help to you:'
  prefs: []
  type: TYPE_NORMAL
- en: Basic keywords
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'Before we delve in to some basic common queries, lets take a look at some of
    the keywords that you’ll come across:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Keyword | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT** | Used to state which columns to query. Use * for all |'
  prefs: []
  type: TYPE_TB
- en: '| **FROM** | Declares which table/view etc to select from |'
  prefs: []
  type: TYPE_TB
- en: '| **WHERE** | Introduces a condition |'
  prefs: []
  type: TYPE_TB
- en: '| **=** | Used for comparing a value to a specified input |'
  prefs: []
  type: TYPE_TB
- en: '| **LIKE** | Special operator used with the WHERE clause to search for a specific
    pattern in a column |'
  prefs: []
  type: TYPE_TB
- en: '| **GROUP BY** | Arranges identical data into groups |'
  prefs: []
  type: TYPE_TB
- en: '| **HAVING** | Specifies that only rows where aggregate values meet the specified
    conditions should be returned. Used because the WHERE keyword cannot be used with
    aggregate functions |'
  prefs: []
  type: TYPE_TB
- en: '| **INNER JOIN** | Returns all rows where key record of one table is equal
    to key records of another |'
  prefs: []
  type: TYPE_TB
- en: '| **LEFT JOIN** | Returns all rows from the ‘left’ (1st) table with the matching
    rows in the right (2nd) |'
  prefs: []
  type: TYPE_TB
- en: '| **RIGHT JOIN** | Returns all rows from the ‘right’ (2nd) table with the matching
    rows in the left (1st) |'
  prefs: []
  type: TYPE_TB
- en: '| **FULL OUTER JOIN** | Returns rows that match either in the left or right
    table |'
  prefs: []
  type: TYPE_TB
- en: Reporting aggregate functions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In database management, an aggregate function is a function where the values
    of multiples rows are grouped to form a single value. They are useful for reporting
    and some examples of common aggregate functions can be found below:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Function | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| **COUNT** | Return the number of rows in a certain table/view |'
  prefs: []
  type: TYPE_TB
- en: '| **SUM** | Accumulate the values |'
  prefs: []
  type: TYPE_TB
- en: '| **AVG** | Returns the average for a group of values |'
  prefs: []
  type: TYPE_TB
- en: '| **MIN** | Returns the smallest value of the group |'
  prefs: []
  type: TYPE_TB
- en: '| **MAX** | Returns the largest value of the group |'
  prefs: []
  type: TYPE_TB
- en: Querying data from a table
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A database table is a set of data elements (values) stored in a model of vertical
    columns and horizontal rows. Use any of the below to query a table in SQL:'
  prefs: []
  type: TYPE_NORMAL
- en: '| SQL | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1 FROM t** | Select data in column c1 from a table named t |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT * FROM t** | Select all rows and columns from a table named t |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1 FROM t****WHERE c1 = ‘test’**  | Select data in column c1 from
    a table named t where the value in c1 = ‘test’ |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1 FROM t****ORDER BY c1 ASC (DESC)**  | Select data in column c1
    from a table name t and order by c1, either in ascending (default) or descending
    order |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1 FROM t****ORDER BY c1LIMIT n OFFSET offset**  | Select data in
    column c1 from a table named t and skip offset of rows and return the next n rows
    |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1, aggregate(c2)****FROM t****GROUP BY c1**  | Select data in column
    c1 from a table named t and group rows using an aggregate function |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1, aggregate(c2)****FROM t****GROUP BY c1HAVING condition**  |
    Select data in column c1 from a table named t and group rows using an aggregate
    function and filter these groups using ‘HAVING’ clause |'
  prefs: []
  type: TYPE_TB
- en: Querying data from multiple tables
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'As well as querying from a single table, SQL gives you the ability to query
    data from multiple tables:'
  prefs: []
  type: TYPE_NORMAL
- en: '| SQL | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1, c2****FROM t1****INNER JOIN t2 on condition** | Select columns
    c1 and c2 from a table named t1 and perform an inner join between t1 and t2 |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1, c2****FROM t1****LEFT JOIN t2 on condition**  | Select columns
    c1 and c2 from a table named t1 and perform a left join between t1 and t2 |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1, c2****FROM t1****RIGHT JOIN t2 on condition**  | Select columns
    c1 and c2 from a table named t1 and perform a right join between t1 and t2 |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1, c2****FROM t1****FULL OUTER JOIN t2 on condition** | Select
    columns c1 and c2 from a table named t1 and perform a full outer join between
    t1 and t2 |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1, c2****FROM t1****CROSS JOIN t2** | Select columns c1 and c2
    from a table named t1 and produce a Cartesian product of rows in tables |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1, c2****FROM t1, t2** | Same as above - Select columns c1 and
    c2 from a table named t1 and produce a Cartesian product of rows in tables |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1, c2****FROM t1 A****INNER JOIN t2 B on condition** | Select columns
    c1 and c2 from a table named t1 and joint it to itself using an INNER JOIN clause
    |'
  prefs: []
  type: TYPE_TB
- en: Using SQL Operators
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'SQL operators are reserved words or characters used primarily in an SQL statement
    where clause to perform operations:'
  prefs: []
  type: TYPE_NORMAL
- en: '| SQL | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1 FROM t1****UNION [ALL]****SELECT c1 FROM t2** | Select column
    c1 from a table named t1 and column c1 from a table named t2 and combine the rows
    from these two queries |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1 FROM t1****INTERSECT****SELECT c1 FROM t2** | Select column c1
    from a table named t1 and column c1 from a table named t2 and return the intersection
    of two queries |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1 FROM t1****MINUS****SELECT c1 FROM t2** | Select column c1 from
    a table named t1 and column c1 from a table named t2 and subtract the 2nd result
    set from the 1st |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1 FROM t****WHERE c1 [NOT] LIKE pattern** | Select column c1 from
    a table named t and query the rows using pattern matching % |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1 FROM t****WHERE c1 [NOT] in test_list** | Select column c1 from
    a table name t and return the rows that are (or are not) in test_list |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1 FROM t****WHERE c1 BETWEEN min AND max** | Select column c1 from
    a table named t and return the rows where c1 is between min and max |'
  prefs: []
  type: TYPE_TB
- en: '| **SELECT c1 FROM t****WHERE c1 IS [NOT] NULL** | Select column c1 from a
    table named t and check if the values are NULL or not |'
  prefs: []
  type: TYPE_TB
- en: Data modification
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Data modification is a key part of SQL, giving the ability to not only add
    and delete data, but modify existing records:'
  prefs: []
  type: TYPE_NORMAL
- en: '| SQL | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| **INSERT INTO t(column_list)****VALUES(value_list)** | Insert one row into
    a table named t |'
  prefs: []
  type: TYPE_TB
- en: '| **INSERT INTO t(column_list)****VALUES (value_list), (value_list), …** |
    Insert multiple rows into a table named t |'
  prefs: []
  type: TYPE_TB
- en: '| **INSERT INTO t1(column_list)****SELECT column_list FROM t2** | Insert rows
    from t2 into a table named t1 |'
  prefs: []
  type: TYPE_TB
- en: '| **UPDATE tSET c1 = new_value** | Update a new value in table t in the column
    c1 for all rows |'
  prefs: []
  type: TYPE_TB
- en: '| **UPDATE tSET c1 = new_value, c2 = new_value****WHERE condition** | Update
    values in column c1 and c2 in table t that match the condition |'
  prefs: []
  type: TYPE_TB
- en: '| **DELETE FROM t** | Delete all the rows from a table named t |'
  prefs: []
  type: TYPE_TB
- en: '| **DELETE FROM tWHERE condition** | Delete all rows from that a table named
    t that match a certain condition |'
  prefs: []
  type: TYPE_TB
- en: Views
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A view is a virtual table that is a result of a query. They can be extremely
    useful and are often used as a security mechanism, letting users access the data
    through the view, rather than letting them access the underlying base table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| SQL | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| **CREATE VIEW view1 AS****SELECT c1, c2****FROM t1****WHERE condition** |
    Create a view, comprising of columns c1 and c2 from a table named t1 where a certain
    condition has been met. |'
  prefs: []
  type: TYPE_TB
- en: Indexes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'An index is used to speed up the performance of queries by reducing the number
    of database pages that have to be visited:'
  prefs: []
  type: TYPE_NORMAL
- en: '| SQL | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| **CREATE INDEX index_nameON t(c1, c2)** | Create an index on columns c1 and
    c2 of the table t |'
  prefs: []
  type: TYPE_TB
- en: '| **CREATE UNIQUE INDEX index_name****ON t(c3, c4)** | Create a unique index
    on columns c3 and c4 of the table t |'
  prefs: []
  type: TYPE_TB
- en: '| **DROP INDEX index_name** | Drop an index |'
  prefs: []
  type: TYPE_TB
- en: Stored procedure
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A stored procedure is a set of SQL statements with an assigned name that can
    then be easily reused and share by multiple programs:'
  prefs: []
  type: TYPE_NORMAL
- en: '| SQL | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| **CREATE PROCEDURE procedure_name****    @variable AS datatype = value****AS**** 
     -- Comments****SELECT * FROM tGO** | Create a procedure called procedure_name,
    create a local variable and then select from table t |'
  prefs: []
  type: TYPE_TB
- en: Triggers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A trigger is a special type of stored procedure that automatically executes
    when a user tries to modify data through a DML event (data manipulation language).
    A DML event is an INSERT, UPDATE or DELETE statement on a table or view:'
  prefs: []
  type: TYPE_NORMAL
- en: '| SQL | Explanation |'
  prefs: []
  type: TYPE_TB
- en: '| **CREATE OR MODIFY TRIGGER trigger_name****WHEN EVENT****ON table_name TRIGGER_TYPE****EXECUTE
    stored_procedure** | WHEN:'
  prefs: []
  type: TYPE_NORMAL
- en: '**BEFORE** – invoke before the event occurs'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AFTER** – invoke after the event occurs'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'EVENT:'
  prefs: []
  type: TYPE_NORMAL
- en: '**INSERT** – invoke for insert'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**UPDATE** – invoke for update'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**DELETE** – invoke for delete'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'TRIGGER_TYPE:'
  prefs: []
  type: TYPE_NORMAL
- en: '**FOR EACH ROW**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**FOR EACH STATEMENT**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| **DROP TRIGGER trigger_name** | Delete a specific trigger |'
  prefs: []
  type: TYPE_TB
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Simple Tips for PostgreSQL Query Optimization](https://www.kdnuggets.com/2018/06/simple-tips-postgresql-query-optimization.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Execute R and Python in SQL Server with Machine Learning Services](https://www.kdnuggets.com/2018/06/microsoft-azure-machine-learning-r-python-sql-server.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python Regular Expressions Cheat Sheet](https://www.kdnuggets.com/2018/04/python-regular-expressions-cheat-sheet.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Best ETL Tools in 2021](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Building a solid data team](https://www.kdnuggets.com/2021/12/build-solid-data-team.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
