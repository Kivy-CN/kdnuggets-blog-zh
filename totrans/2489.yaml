- en: Introduction to Clustering in Python with PyCaret
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 PyCaret 在 Python 中进行聚类介绍
- en: 原文：[https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html](https://www.kdnuggets.com/2021/12/introduction-clustering-python-pycaret.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Moez Ali](https://www.linkedin.com/in/profile-moez/), Founder & Author
    of PyCaret**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Moez Ali](https://www.linkedin.com/in/profile-moez/)，PyCaret 创始人兼作者**'
- en: '![](../Images/fc7472016349710a0e02607ac1793c1e.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fc7472016349710a0e02607ac1793c1e.png)'
- en: Photo by [Paola Galimberti](https://unsplash.com/@paolaccia?utm_source=medium&utm_medium=referral) on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Paola Galimberti](https://unsplash.com/@paolaccia?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 1\. Introduction
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1. 介绍
- en: '[PyCaret](https://www.pycaret.org/) is an open-source, low-code machine learning
    library in Python that automates machine learning workflows. It is an end-to-end
    machine learning and model management tool that speeds up the experiment cycle
    exponentially and makes you more productive.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[PyCaret](https://www.pycaret.org/) 是一个开源的低代码机器学习库，用于自动化机器学习工作流程。它是一个端到端的机器学习和模型管理工具，能够显著加快实验周期，提高工作效率。'
- en: In comparison with the other open-source machine learning libraries, PyCaret
    is an alternate low-code library that can be used to replace hundreds of lines
    of code with few lines only. This makes experiments exponentially fast and efficient.
    PyCaret is essentially a Python wrapper around several machine learning libraries
    and frameworks such as scikit-learn, XGBoost, LightGBM, CatBoost, spaCy, Optuna,
    Hyperopt, Ray, and a few more.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他开源机器学习库相比，PyCaret 是一个替代的低代码库，可以用少量代码替代数百行代码。这使得实验变得极为快速和高效。PyCaret 本质上是一个围绕多个机器学习库和框架（如
    scikit-learn、XGBoost、LightGBM、CatBoost、spaCy、Optuna、Hyperopt、Ray 等）构建的 Python
    封装库。
- en: The design and simplicity of PyCaret are inspired by the emerging role of citizen
    data scientists, a term first used by Gartner. Citizen Data Scientists are power
    users who can perform both simple and moderately sophisticated analytical tasks
    that would previously have required more technical expertise.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 的设计和简洁性受到“公民数据科学家”这一新兴角色的启发，这一术语首次由 Gartner 提出。公民数据科学家是能够执行简单和中等复杂的分析任务的高级用户，这些任务在以前需要更多的技术专长。
- en: To learn more about PyCaret, you can check the official [website](https://www.pycaret.org/) or [GitHub](https://www.github.com/pycaret/pycaret).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于 PyCaret 的信息，你可以查看官方 [网站](https://www.pycaret.org/) 或 [GitHub](https://www.github.com/pycaret/pycaret)。
- en: 2\. Tutorial Objective
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2. 教程目标
- en: 'In this tutorial we will learn:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中我们将学习：
- en: '**Getting Data:** How to import data from the PyCaret repository.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**获取数据：** 如何从 PyCaret 仓库导入数据。'
- en: '**Set up Environment:** How to set up an experiment in PyCaret’s unsupervised [clustering
    module](https://pycaret.readthedocs.io/en/latest/api/clustering.html).'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设置环境：** 如何在 PyCaret 的无监督 [聚类模块](https://pycaret.readthedocs.io/en/latest/api/clustering.html)
    中设置实验。'
- en: '**Create Model:** How to train unsupervised clustering models and assign cluster
    labels to the training dataset for further analysis.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建模型：** 如何训练无监督聚类模型并将聚类标签分配给训练数据集以进行进一步分析。'
- en: '**Plot Model:** How to analyze model performance using various plots (Elbow,
    Silhouette, Distribution, etc.).'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**绘制模型：** 如何使用各种图表（肘部图、轮廓图、分布图等）分析模型性能。'
- en: '**Predict Model:** How to assign cluster labels to new and unseen datasets
    based on a trained model.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预测模型：** 如何根据训练好的模型将聚类标签分配给新的和未见过的数据集。'
- en: '**Save/Load Model:** How to save/load model for future use.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保存/加载模型：** 如何保存/加载模型以供将来使用。'
- en: 3\. Installing PyCaret
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3. 安装 PyCaret
- en: Installation is easy and will only take a few minutes. PyCaret’s default installation
    from pip only installs hard dependencies as listed in the [requirements.txt](https://github.com/pycaret/pycaret/blob/master/requirements.txt) file.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 安装很简单，只需几分钟时间。PyCaret 从 pip 的默认安装仅安装了 requirements.txt 文件中列出的硬依赖项。
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To install the full version:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装完整版本：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 4\. What is Clustering?
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4. 什么是聚类？
- en: 'Clustering is the task of grouping a set of objects in such a way that those
    in the same group (called a cluster) are more similar to each other than to those
    in other groups. It is an exploratory data mining activity, and a common technique
    for statistical data analysis used in many fields including machine learning,
    pattern recognition, image analysis, information retrieval, bioinformatics, data
    compression, and computer graphics. Some common real-life use cases of clustering
    are:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类是将一组对象分组的任务，使得同一组（称为簇）中的对象彼此之间比与其他组中的对象更相似。它是一种探索性数据挖掘活动，是许多领域中用于统计数据分析的常用技术，包括机器学习、模式识别、图像分析、信息检索、生物信息学、数据压缩和计算机图形学。一些常见的实际聚类应用包括：
- en: Customer segmentation based on purchase history or interests to design targeted
    marketing campaigns.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于购买历史或兴趣进行客户细分，以设计有针对性的营销活动。
- en: Cluster documents into multiple categories based on tags, topics, and the content
    of the document.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据标签、主题和文档内容将文档分成多个类别。
- en: Analysis of outcome in social / life science experiments to find natural groupings
    and patterns in the data.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析社会/生命科学实验中的结果，以寻找数据中的自然分组和模式。
- en: 5\. Overview of Clustering Module in PyCaret
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5. PyCaret中的聚类模块概述
- en: '[PyCaret’s clustering module](https://pycaret.readthedocs.io/en/latest/api/clustering.html) (`pycaret.clustering`)
    is an unsupervised machine learning module that performs the task of grouping
    a set of objects in such a way that those in the same group (called a cluster)
    are more similar to each other than to those in other groups.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[PyCaret的聚类模块](https://pycaret.readthedocs.io/en/latest/api/clustering.html)（`pycaret.clustering`）是一个无监督机器学习模块，执行将一组对象分组的任务，使得同一组（称为簇）中的对象彼此之间比与其他组中的对象更相似。'
- en: PyCaret’s clustering module provides several pre-processing features that can
    be configured when initializing the setup through the `setup` function. It has
    over 8 algorithms and several plots to analyze the results. PyCaret's clustering
    module also implements a unique function called `tune_model` that allows you to
    tune the hyperparameters of a clustering model to optimize a supervised learning
    objective such as `AUC` for classification or `R2` for regression.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret的聚类模块提供了几个预处理功能，可以在通过`setup`函数初始化设置时进行配置。它具有超过8种算法和几种用于分析结果的图表。PyCaret的聚类模块还实现了一个独特的函数`tune_model`，允许你调整聚类模型的超参数，以优化如分类的`AUC`或回归的`R2`等监督学习目标。
- en: 6\. Dataset for the Tutorial
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6. 教程数据集
- en: In this tutorial, we will use a dataset from UCI called [**Mice Protein Expression**](https://archive.ics.uci.edu/ml/datasets/Mice+Protein+Expression).
    The data set consists of the expression levels of 77 proteins that produced detectable
    signals in the nuclear fraction of the cortex. The dataset contains a total of
    1080 measurements per protein. Each measurement can be considered as an independent
    sample (mouse).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将使用来自UCI的数据集，称为[**小鼠蛋白质表达**](https://archive.ics.uci.edu/ml/datasets/Mice+Protein+Expression)。该数据集包含77种蛋白质的表达水平，这些蛋白质在皮质的核部分产生了可检测的信号。数据集中每种蛋白质总共有1080次测量。每次测量可以视为一个独立样本（小鼠）。
- en: 'Dataset Citation:'
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据集引用：
- en: 'Higuera C, Gardiner KJ, Cios KJ (2015) Self-Organizing Feature Maps Identify
    Proteins Critical to Learning in a Mouse Model of Down Syndrome. PLoS ONE 10(6):
    e0129126\. [Web Link] journal.pone.0129126'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 'Higuera C, Gardiner KJ, Cios KJ (2015) 自组织特征图识别在小鼠唐氏综合症模型中对学习至关重要的蛋白质。PLoS
    ONE 10(6): e0129126。 [Web Link] journal.pone.0129126'
- en: You can download the data from the original source [**found here**](https://archive.ics.uci.edu/ml/datasets/Mice+Protein+Expression) and
    load it using pandas [**(Learn How)**](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html) or
    you can use PyCaret’s data repository to load the data using the `get_data()` function
    (This will require an internet connection).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从原始来源[**下载数据**](https://archive.ics.uci.edu/ml/datasets/Mice+Protein+Expression)，并使用pandas[**（了解如何）**](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html)加载数据，或者你可以使用PyCaret的数据仓库，通过`get_data()`函数加载数据（这需要互联网连接）。
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![png](../Images/657e29e336d10bd35040234bd05d7f04.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![png](../Images/657e29e336d10bd35040234bd05d7f04.png)'
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In order to demonstrate the use of the `predict_model` function on unseen data,
    a sample of 5% (54 records) has been withheld from the original dataset to be
    used for predictions at the end of the experiment.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示`predict_model`函数在未见数据上的使用，原始数据集中有5%（54条记录）被保留，用于实验结束时的预测。
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 8\. Setting up Environment in PyCaret
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8. 在PyCaret中设置环境
- en: 'The `setup` function in PyCaret initializes the environment and creates the
    transformation pipeline for modeling and deployment. `setup` must be called before
    executing any other function in pycaret. It takes only one mandatory parameter:
    a pandas dataframe. All other parameters are optional can be used to customize
    the preprocessing pipeline.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: PyCaret 中的`setup`函数初始化环境并创建建模和部署的转换管道。`setup`必须在执行 pycaret 中的任何其他函数之前调用。它仅接受一个必需的参数：一个
    pandas 数据框。所有其他参数是可选的，可以用于自定义预处理管道。
- en: When `setup` is executed, PyCaret's inference algorithm will automatically infer
    the data types for all features based on certain properties. The data type should
    be inferred correctly but this is not always the case. To handle this, PyCaret
    displays a prompt, asking for data types confirmation, once you execute the `setup`.
    You can press enter if all data types are correct or type `quit` to exit the setup.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 当`setup`被执行时，PyCaret 的推断算法将自动根据某些属性推断所有特征的数据类型。数据类型应该被正确推断，但这并不总是如此。为了解决这个问题，PyCaret
    在你执行`setup`后会显示一个提示，要求确认数据类型。如果所有数据类型都正确，可以按回车键；如果需要退出设置，可以输入`quit`。
- en: Ensuring that the data types are correct is really important in PyCaret as it
    automatically performs multiple type-specific preprocessing tasks which are imperative
    for machine learning models.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 确保数据类型正确在 PyCaret 中非常重要，因为它会自动执行多个特定类型的预处理任务，这对机器学习模型至关重要。
- en: Alternatively, you can also use `numeric_features` and `categorical_features` parameters
    in the `setup` to pre-define the data types.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，你也可以在`setup`中使用`numeric_features`和`categorical_features`参数来预定义数据类型。
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![png](../Images/7bc0d5c1072a1b0f44f936c090029741.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![png](../Images/7bc0d5c1072a1b0f44f936c090029741.png)'
- en: 'Once the setup has been successfully executed it displays the information grid
    which contains some important information about the experiment. Most of the information
    is related to the pre-processing pipeline which is constructed when `setup` is
    executed. The majority of these features are out of scope for this tutorial, however,
    a few important things to note are:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设置成功执行，它将显示包含一些重要信息的信息网格。这些信息大多数与`setup`执行时构建的预处理管道有关。这些特征中的大部分超出了本教程的范围，但需要注意一些重要的事项：
- en: '**session_id:** A pseduo-random number distributed as a seed in all functions
    for later reproducibility. If no `session_id` is passed, a random number is automatically
    generated that is distributed to all functions. In this experiment, the `session_id` is
    set as `123` for later reproducibility.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**session_id：** 作为种子的伪随机数，分配给所有函数以便后续重现。如果没有传递`session_id`，则会自动生成一个随机数并分配给所有函数。在本实验中，`session_id`设置为`123`以便后续重现。'
- en: '**Missing Values:** When there are missing values in original data this will
    show as True. Notice that `Missing Values` in the information grid above is `True`as
    the data contains missing values which are automatically imputed using `mean` for
    the numeric features and `constant` for the categorical features in the dataset.
    The method of imputation can be changed using the `numeric_imputation` and `categorical_imputation` parameters
    in the `setup` function.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺失值：** 当原始数据中存在缺失值时，这将显示为 True。注意上面信息网格中的`缺失值`为`True`，因为数据包含缺失值，这些缺失值会被自动用数据集中数值特征的`mean`和分类特征的`constant`填补。可以使用`numeric_imputation`和`categorical_imputation`参数在`setup`函数中更改填补方法。'
- en: '**Original Data:** Displays the original shape of the dataset. In this experiment
    (1026, 82) means 1026 samples and 82 features.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原始数据：** 显示数据集的原始形状。在本实验中 (1026, 82) 表示 1026 个样本和 82 个特征。'
- en: '**Transformed Data:** Displays the shape of the transformed dataset. Notice
    that the shape of the original dataset (1026, 82) is transformed into (1026, 91).
    The number of features has increased due to the encoding of categorical features
    in the dataset.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**转化数据：** 显示转化后数据集的形状。注意原始数据集的形状 (1026, 82) 被转化为 (1026, 91)。特征数量的增加是由于数据集中分类特征的编码。'
- en: '**Numeric Features:** The number of features inferred as numeric. In this dataset,
    77 out of 82 features are inferred as numeric.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数值特征：** 推断为数值的特征数量。在这个数据集中，82 个特征中有 77 个被推断为数值。'
- en: '**Categorical Features:** The number of features inferred as categorical. In
    this dataset, 5 out of 82 features are inferred as categorical. Also notice that
    we have ignored one categorical feature `MouseID` using the `ignore_feature` parameter
    since it''s a unique identifier for each sample and we don’t want it to be considered
    during model training.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分类特征：** 推断为分类的特征数量。在此数据集中，82个特征中有5个被推断为分类特征。还要注意，我们通过`ignore_feature`参数忽略了一个分类特征`MouseID`，因为它是每个样本的唯一标识符，我们不希望它在模型训练中被考虑。'
- en: Notice how a few tasks that are imperative to perform modeling are automatically
    handled such as missing value imputation, categorical encoding, etc. Most of the
    parameters in the `setup` function are optional and used for customizing the pre-processing
    pipeline. These parameters are out of scope for this tutorial but I will write
    more about them later.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，一些执行建模的关键任务会被自动处理，如缺失值插补、分类编码等。`setup`函数中的大多数参数是可选的，用于自定义预处理管道。这些参数超出了本教程的范围，但我会在后面详细介绍。
- en: 9\. Create a Model
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9\. 创建模型
- en: 'Training a clustering model in PyCaret is simple and similar to how you would
    create a model in the supervised learning modules of PyCaret. A clustering model
    is created using the `create_model` function. This function returns a trained
    model object and a few unsupervised metrics. See an example below:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在PyCaret中训练聚类模型很简单，与在PyCaret的监督学习模块中创建模型类似。使用`create_model`函数可以创建一个聚类模型。此函数返回一个训练好的模型对象和一些无监督指标。请参见下面的示例：
- en: '[PRE6]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![png](../Images/0b77964131d6a3c070f6e9738cd4632d.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![png](../Images/0b77964131d6a3c070f6e9738cd4632d.png)'
- en: '[PRE7]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We have trained an unsupervised K-Means model using the `create_model`. Notice
    the `n_clusters` parameter is set to `4` which is the default when you do not
    pass a value to the `num_clusters` parameter. In the below example we will create
    a `kmodes` model with 6 clusters.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`create_model`训练了一个无监督的K-Means模型。注意，`n_clusters`参数被设置为`4`，这是当你没有为`num_clusters`参数传递值时的默认值。在下面的示例中，我们将创建一个具有6个聚类的`kmodes`模型。
- en: '[PRE8]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![png](../Images/2e3b6fbe455ac28775ce94baddc28e16.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![png](../Images/2e3b6fbe455ac28775ce94baddc28e16.png)'
- en: '[PRE9]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: To see the complete list of models available in the model library, please check
    the documentation or use the `models` function.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看模型库中所有可用模型的完整列表，请查看文档或使用`models`函数。
- en: '[PRE10]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![png](../Images/6e01069c865b88739d2192d86cf619b9.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![png](../Images/6e01069c865b88739d2192d86cf619b9.png)'
- en: 10\. Assign a Model
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 10\. 分配模型
- en: Now that we have trained a model, we can assign the cluster labels to our training
    dataset (1026 samples) by using the `assign_model` function.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经训练了一个模型，我们可以使用`assign_model`函数将聚类标签分配到我们的训练数据集（1026个样本）中。
- en: '[PRE11]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![png](../Images/8ae2a7a8aab33373255038ff427e28da.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![png](../Images/8ae2a7a8aab33373255038ff427e28da.png)'
- en: Notice that a new column called `Cluster` has been added to the original dataset.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，原始数据集中新增了一列名为`Cluster`的列。
- en: Note that the results also include the `MouseID` column that we actually dropped
    during the `setup`. Don’t worry, it is not used for the model training, rather
    is only appended to the dataset only when `assign_model` is called.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，结果中还包含了我们在`setup`过程中实际删除的`MouseID`列。不要担心，它不会用于模型训练，而是仅在调用`assign_model`时才会被添加到数据集中。
- en: 11\. Plot a Model
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 11\. 绘制模型
- en: The `plot_model` function is used to analyze clustering models. This function
    takes a trained model object and returns a plot.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`plot_model`函数用于分析聚类模型。该函数接受一个训练好的模型对象并返回一个图形。'
- en: 11.1 Cluster PCA Plot
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 11.1 聚类PCA图
- en: '[PRE12]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](../Images/cce4b8b108eeec3e5996a27d73b7d3db.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cce4b8b108eeec3e5996a27d73b7d3db.png)'
- en: The cluster labels are automatically colored and shown in a legend. When you
    hover over the data points you will see additional features which by default use
    the first column of the dataset (in this case MouseID). You can change this by
    passing the `feature` parameter and you may also set `label` to `True` if you
    want labels to be printed on the plot.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类标签会自动上色并显示在图例中。当你将鼠标悬停在数据点上时，你会看到额外的特征，默认情况下使用数据集的第一列（在此案例中为MouseID）。你可以通过传递`feature`参数来更改这一点，如果你希望在图上打印标签，你也可以将`label`设置为`True`。
- en: 11.2 Elbow Plot
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 11.2 肘部图
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![png](../Images/5633be05572b3a121b43b9a538be838e.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![png](../Images/5633be05572b3a121b43b9a538be838e.png)'
- en: The elbow method is a heuristic method of interpretation and validation of consistency
    within-cluster analysis designed to help find the appropriate number of clusters
    in a dataset. In this example, the Elbow plot above suggests that `5` is the optimal
    number of clusters.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 肘部法则是一种启发式解释和验证集群一致性的方法，旨在帮助找出数据集中适当的集群数量。在这个例子中，上面的肘部图表明`5`是最佳的集群数量。
- en: '[**Learn More about Elbow Plot**](https://blog.cambridgespark.com/how-to-determine-the-optimal-number-of-clusters-for-k-means-clustering-14f27070048f)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[**了解更多关于肘部图**](https://blog.cambridgespark.com/how-to-determine-the-optimal-number-of-clusters-for-k-means-clustering-14f27070048f)'
- en: 11.3 Silhouette Plot
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 11.3 轮廓图
- en: '[PRE14]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![png](../Images/a7d462fbd371c0368a2c6dbee00ec4b5.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![png](../Images/a7d462fbd371c0368a2c6dbee00ec4b5.png)'
- en: Silhouette is a method of interpretation and validation of consistency within
    clusters of data. The technique provides a succinct graphical representation of
    how well each object has been classified. In other words, the silhouette value
    is a measure of how similar an object is to its own cluster (cohesion) compared
    to other clusters (separation).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 轮廓图是一种解释和验证数据集群一致性的方法。这项技术提供了每个对象分类效果的简洁图形表示。换句话说，轮廓值是衡量一个对象与其自身集群（凝聚性）相比与其他集群（分离性）相似程度的指标。
- en: '[**Learn More about Silhouette Plot**](https://scikit-learn.org/stable/auto_examples/cluster/plot_kmeans_silhouette_analysis.html)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[**了解更多关于轮廓图**](https://scikit-learn.org/stable/auto_examples/cluster/plot_kmeans_silhouette_analysis.html)'
- en: 11.4 Distribution Plot
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 11.4 分布图
- en: '[PRE15]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![](../Images/e2832fd87bdf4676423c3e743d8aa70b.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e2832fd87bdf4676423c3e743d8aa70b.png)'
- en: The distribution plot shows the size of each cluster. When hovering over the
    bars you will see the number of samples assigned to each cluster. From the example
    above, we can observe that cluster 3 has the highest number of samples. We can
    also use the `distribution` plot to see the distribution of cluster labels in
    association with any other numeric or categorical feature.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 分布图显示了每个集群的大小。当悬停在条形图上时，你将看到分配给每个集群的样本数量。从上面的示例中，我们可以观察到集群3的样本数量最多。我们还可以使用`distribution`图来查看与任何其他数字或分类特征相关的集群标签分布。
- en: '[PRE16]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![](../Images/fcbbe1f08dbe3ecaccbf6a02760d2a39.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fcbbe1f08dbe3ecaccbf6a02760d2a39.png)'
- en: In the above example, we have used the `class` as a feature so each bar represents
    a `class` which is colored with a cluster label (legend on right). We can observe
    that class `t-SC-m` and `c-SC-m` are mostly dominated by `Cluster 3`. We can also
    use the same plot to see the distribution of any continuous feature.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，我们使用了`class`作为特征，因此每个条形图表示一个`class`，并用集群标签着色（右侧图例）。我们可以观察到`t-SC-m`和`c-SC-m`类主要被`Cluster
    3`主导。我们还可以使用相同的图来查看任何连续特征的分布。
- en: '[PRE17]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![](../Images/76777e1b2968d80defa8ef750dfb8388.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/76777e1b2968d80defa8ef750dfb8388.png)'
- en: 12\. Predict on unseen data
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 12. 在未见数据上预测
- en: The `predict_model` function is used to assign cluster labels to a new unseen
    dataset. We will now use our trained `kmeans` model to predict the data stored
    in `data_unseen`. This variable was created at the beginning of the tutorial and
    contains 54 samples from the original dataset that were never exposed to PyCaret.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '`predict_model`函数用于将集群标签分配给新的未见数据集。我们将使用训练好的`kmeans`模型对存储在`data_unseen`中的数据进行预测。这个变量是在教程开始时创建的，包含54个原始数据集中从未暴露于PyCaret的样本。'
- en: '[PRE18]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![](../Images/14fa23d37e3c645e04793c92363e0030.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/14fa23d37e3c645e04793c92363e0030.png)'
- en: 13\. Saving the model
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 13. 保存模型
- en: We have now finished the experiment by using our `kmeans` model to predict labels
    on unseen data.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经完成了实验，通过使用我们的`kmeans`模型对未见数据进行标签预测。
- en: 'This brings us to the end of our experiment, but one question is still to be
    asked: What happens when you have more new data to predict? Do you have to go
    through the entire experiment again? The answer is no, PyCaret’s inbuilt function `save_model` allows
    you to save the model along with the entire transformation pipeline for later
    use.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这标志着我们实验的结束，但仍有一个问题待解答：当你有更多新数据需要预测时会发生什么？你是否需要重新进行整个实验？答案是否定的，PyCaret的内置函数`save_model`允许你保存模型及整个转换管道以供以后使用。
- en: '[PRE19]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![](../Images/3b14666198f4b9c49ae4b1e0f3452094.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3b14666198f4b9c49ae4b1e0f3452094.png)'
- en: To load a saved model at a future date in the same or an alternative environment,
    we would use PyCaret’s `load_model` function and then easily apply the saved model
    on new unseen data for prediction.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 要在未来的同一或其他环境中加载已保存的模型，我们可以使用PyCaret的`load_model`函数，然后轻松地将保存的模型应用于新未见数据的预测。
- en: '[PRE20]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![](../Images/0ce9c1393adb9775cd1b9cfa72d698c8.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0ce9c1393adb9775cd1b9cfa72d698c8.png)'
- en: 14\. Wrap-up / Next Steps?
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 14\. 总结 / 下一步？
- en: We have only covered the basics of [PyCaret’s clustering module](https://pycaret.readthedocs.io/en/latest/api/clustering.html).
    In the following tutorials, we will go deeper into advanced pre-processing techniques
    that allow you to fully customize your machine learning pipeline and are a must-know
    for any data scientist.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们仅涵盖了 [PyCaret 的聚类模块](https://pycaret.readthedocs.io/en/latest/api/clustering.html)
    的基础知识。在接下来的教程中，我们将深入探讨高级预处理技术，这些技术允许您完全自定义机器学习管道，是任何数据科学家必知的知识。
- en: Thank you for reading [????](https://emojipedia.org/folded-hands/)
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读 [????](https://emojipedia.org/folded-hands/)
- en: Important Links
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重要链接
- en: ⭐ [Tutorials](https://github.com/pycaret/pycaret/tree/master/tutorials) New
    to PyCaret? Check out our official notebooks!
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: ⭐ [教程](https://github.com/pycaret/pycaret/tree/master/tutorials) 刚接触 PyCaret？查看我们的官方笔记本！
- en: ???? [Example Notebooks](https://github.com/pycaret/pycaret/tree/master/examples) created
    by the community.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: ???? [示例笔记本](https://github.com/pycaret/pycaret/tree/master/examples) 由社区创建。
- en: ???? [Blog](https://github.com/pycaret/pycaret/tree/master/resources) Tutorials
    and articles by contributors.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: ???? [博客](https://github.com/pycaret/pycaret/tree/master/resources) 贡献者撰写的教程和文章。
- en: ???? [Documentation](https://pycaret.readthedocs.io/en/latest/index.html) The
    detailed API docs of PyCaret
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: ???? [文档](https://pycaret.readthedocs.io/en/latest/index.html) PyCaret 的详细 API
    文档。
- en: ???? [Video Tutorials](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g) Our
    video tutorial from various events.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: ???? [视频教程](https://www.youtube.com/channel/UCxA1YTYJ9BEeo50lxyI_B3g) 我们来自各种活动的视频教程。
- en: ???? [Discussions](https://github.com/pycaret/pycaret/discussions) Have questions?
    Engage with community and contributors.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: ???? [讨论](https://github.com/pycaret/pycaret/discussions) 有问题？与社区和贡献者互动。
- en: ????️ [Changelog](https://github.com/pycaret/pycaret/blob/master/CHANGELOG.md) Changes
    and version history.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: ????️ [更新日志](https://github.com/pycaret/pycaret/blob/master/CHANGELOG.md) 变更和版本历史。
- en: ???? [Roadmap](https://github.com/pycaret/pycaret/issues/1756) PyCaret’s software
    and community development plan.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: ???? [路线图](https://github.com/pycaret/pycaret/issues/1756) PyCaret 的软件和社区发展计划。
- en: '**Bio: [Moez Ali](https://www.linkedin.com/in/profile-moez/)** writes about
    PyCaret and its use-cases in the real world, If you would like to be notified
    automatically, you can follow Moez on [Medium](https://medium.com/@moez-62905),
    [LinkedIn](https://www.linkedin.com/in/profile-moez/), and [Twitter](https://twitter.com/moezpycaretorg1).'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**简介：[Moez Ali](https://www.linkedin.com/in/profile-moez/)** 讲述了 PyCaret 及其在现实世界中的应用。如果您希望自动接收通知，可以关注
    Moez 在 [Medium](https://medium.com/@moez-62905)、[LinkedIn](https://www.linkedin.com/in/profile-moez/)
    和 [Twitter](https://twitter.com/moezpycaretorg1) 上。'
- en: '[Original](https://towardsdatascience.com/introduction-to-clustering-in-python-with-pycaret-5d869b9714a3).
    Reposted with permission.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/introduction-to-clustering-in-python-with-pycaret-5d869b9714a3)。经许可转载。'
- en: '**Related:**'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Using PyCaret’s New Time Series Module](/2021/12/pycaret-new-time-series-module.html)'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 的新时间序列模块](/2021/12/pycaret-new-time-series-module.html)'
- en: '[Introduction to Binary Classification with PyCaret](/2021/12/introduction-binary-classification-pycaret.html)'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 PyCaret 的二分类介绍](/2021/12/introduction-binary-classification-pycaret.html)'
- en: '[A Beginner’s Guide to End to End Machine Learning](/2021/12/beginner-guide-end-end-machine-learning.html)'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[端到端机器学习初学者指南](/2021/12/beginner-guide-end-end-machine-learning.html)'
- en: '* * *'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升您的数据分析技能。'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持您组织的 IT。'
- en: '* * *'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[Clustering Unleashed: Understanding K-Means Clustering](https://www.kdnuggets.com/2023/07/clustering-unleashed-understanding-kmeans-clustering.html)'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[聚类释放：理解 K-Means 聚类](https://www.kdnuggets.com/2023/07/clustering-unleashed-understanding-kmeans-clustering.html)'
- en: '[Introduction to Binary Classification with PyCaret](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyCaret 二分类介绍](https://www.kdnuggets.com/2021/12/introduction-binary-classification-pycaret.html)'
- en: '[Unveiling Hidden Patterns: An Introduction to Hierarchical Clustering](https://www.kdnuggets.com/unveiling-hidden-patterns-an-introduction-to-hierarchical-clustering)'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[揭示隐藏模式：层次聚类简介](https://www.kdnuggets.com/unveiling-hidden-patterns-an-introduction-to-hierarchical-clustering)'
- en: '[Announcing PyCaret 3.0: Open-source, Low-code Machine Learning in Python](https://www.kdnuggets.com/2023/03/announcing-pycaret-30-opensource-lowcode-machine-learning-python.html)'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[宣布 PyCaret 3.0：Python 中的开源低代码机器学习](https://www.kdnuggets.com/2023/03/announcing-pycaret-30-opensource-lowcode-machine-learning-python.html)'
- en: '[Getting Started with PyCaret](https://www.kdnuggets.com/2022/11/getting-started-pycaret.html)'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyCaret 入门指南](https://www.kdnuggets.com/2022/11/getting-started-pycaret.html)'
- en: '[Centroid Initialization Methods for k-means Clustering](https://www.kdnuggets.com/2020/06/centroid-initialization-k-means-clustering.html)'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[k-means 聚类的质心初始化方法](https://www.kdnuggets.com/2020/06/centroid-initialization-k-means-clustering.html)'
