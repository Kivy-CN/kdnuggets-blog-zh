- en: Animations with Matplotlib
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Matplotlib进行动画
- en: 原文：[https://www.kdnuggets.com/2019/05/animations-with-matplotlib.html](https://www.kdnuggets.com/2019/05/animations-with-matplotlib.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/05/animations-with-matplotlib.html](https://www.kdnuggets.com/2019/05/animations-with-matplotlib.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Parul Pandey](https://www.linkedin.com/in/parul-pandey-a5498975/), Data
    Science Enthusiast**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [Parul Pandey](https://www.linkedin.com/in/parul-pandey-a5498975/), 数据科学爱好者** '
- en: '![figure-name](../Images/5495a114c5b4b0da457f7b13a9ec48cd.png)[Rain Simulation
    with Matplotlib](https://matplotlib.org/gallery/animation/rain.htm)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![figure-name](../Images/5495a114c5b4b0da457f7b13a9ec48cd.png)[使用Matplotlib进行降雨模拟](https://matplotlib.org/gallery/animation/rain.htm)'
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的IT需求'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Animations are an interesting way of demonstrating a phenomenon. We as humans
    are always enthralled by animated and interactive charts rather than the static
    ones. Animations make even more sense when depicting time series data like stock
    prices over the years, climate change over the past decade, seasonalities and
    trends since we can then see how a particular parameter behaves with time.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 动画是一种有趣的现象演示方式。作为人类，我们总是被动画和交互式图表所吸引，而不是静态图表。当展示时间序列数据（如多年来的股票价格、过去十年的气候变化、季节性和趋势）时，动画更有意义，因为我们可以看到某个参数随着时间的变化情况。
- en: The above image is a [**simulation of Rain**](https://matplotlib.org/gallery/animation/rain.html)
    and has been achieved with Matplotlib library which is fondly known as the **grandfather
    of python visualization packages.** Matplotlib simulates raindrops on a surface
    by animating the scale and opacity of 50 scatter points. Today Python boasts of
    a large number of powerful visualisation tools like Plotly, Bokeh, Altair to name
    a few. These libraries are able to achieve state of the art animations and interactiveness.
    Nonetheless, the aim of this article is to highlight one aspect of this library
    which isn’t explored much and that is **Animations** and we are going to look
    at some of the ways of doing that.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的图像是一个 [**降雨模拟**](https://matplotlib.org/gallery/animation/rain.html)，使用了被亲切称为**Python可视化包的祖父**的Matplotlib库。Matplotlib通过对50个散点的规模和透明度进行动画处理来模拟表面上的雨滴。如今，Python拥有大量强大的可视化工具，比如Plotly、Bokeh和Altair等。这些库能够实现先进的动画和交互功能。然而，本文的目的是突出这个库中一个不常被探索的方面，那就是**动画**，我们将探讨一些实现动画的方法。
- en: Overview
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 概述
- en: '[Matplotlib](http://matplotlib.org/) is a Python 2D plotting library and also
    the most popular one. Most of the people start their Data Visualisation journey
    with Matplotlib. One can generate plots, histograms, power spectra, bar charts,
    error charts, scatterplots, etc easily with matplotlib. It also integrates seamlessly
    with libraries like Pandas and Seaborn to create even more sophisticated visualisations.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[Matplotlib](http://matplotlib.org/) 是一个Python 2D绘图库，也是最受欢迎的一个。大多数人都从Matplotlib开始他们的数据可视化之旅。可以轻松生成图表、直方图、功率谱、条形图、误差图、散点图等。它还与Pandas和Seaborn等库无缝集成，以创建更复杂的可视化。'
- en: 'Some of the nice features of matplotlib are:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib的一些优点包括：
- en: It is designed like MATLAB hence switching between the two is fairly easy.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计类似于MATLAB，因此在两者之间切换相对容易。
- en: Comprises of a lot of rendering backends.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含了许多渲染后端。
- en: Can reproduce just about any plots( with a bit of effort).
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 几乎可以重现任何图表（虽然需要一些努力）。
- en: Has been out there for over a decade, therefore, boasts of a huge user base.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已经存在了十多年，因此拥有庞大的用户基础。
- en: However, there are also areas where Matplotlib doesn’t shine out so much and
    lags behind its powerful counterparts.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，Matplotlib也有一些不足之处，相比于其强大的竞争对手稍显逊色。
- en: Matplotlib has an imperative API which is often overly verbose.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Matplotlib有一个命令式API，通常过于冗长。
- en: Sometimes poor stylistic defaults.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有时样式默认设置较差。
- en: Poor support for web and interactive graphs.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对网页和交互式图形的支持较差。
- en: Often slow for large & complicated data.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于大型和复杂数据，通常较慢。
- en: As for a refresher here is a Matplotlib Cheat sheet from [**Datacamp**](https://s3.amazonaws.com/assets.datacamp.com/blog_assets/Python_Matplotlib_Cheat_Sheet.pdf)
    which you can go through to brush up your basics.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 作为补充，这里有一个来自[**Datacamp**](https://s3.amazonaws.com/assets.datacamp.com/blog_assets/Python_Matplotlib_Cheat_Sheet.pdf)的Matplotlib速查表，你可以通过它来复习基础知识。
- en: '![figure-name](../Images/426365c45208897271aec96766ddf50c.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![figure-name](../Images/426365c45208897271aec96766ddf50c.png)'
- en: Animations
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 动画
- en: 'Matplotlib’s `animation` base class deals with the animation part. It provides
    a framework around which the animation functionality is built. There are two main
    interfaces to achieve that using:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib的`animation`基类处理动画部分。它提供了一个框架，围绕这个框架构建了动画功能。实现这一功能的主要有两个接口：
- en: '`[FuncAnimation](https://matplotlib.org/api/_as_gen/matplotlib.animation.FuncAnimation.html#matplotlib.animation.FuncAnimation)`
    makes an animation by repeatedly calling a function *func*.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`[FuncAnimation](https://matplotlib.org/api/_as_gen/matplotlib.animation.FuncAnimation.html#matplotlib.animation.FuncAnimation)`通过重复调用一个函数*func*来创建动画。'
- en: '`[ArtistAnimation](https://matplotlib.org/api/_as_gen/matplotlib.animation.ArtistAnimation.html#matplotlib.animation.ArtistAnimation):`
    Animation using a fixed set of `Artist` objects.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`[ArtistAnimation](https://matplotlib.org/api/_as_gen/matplotlib.animation.ArtistAnimation.html#matplotlib.animation.ArtistAnimation):`
    使用固定的一组`Artist`对象进行动画。'
- en: However, out of the two, **FuncAnimation** is the most convenient one to use.
    You can read more about them in the [documentation](http://matplotlib.sourceforge.net/api/animation_api.html)
    since we will only concern ourselves with the `FuncAnimation` tool.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在这两个接口中，**FuncAnimation**是使用起来最方便的。你可以在[文档](http://matplotlib.sourceforge.net/api/animation_api.html)中阅读更多内容，因为我们只关注`FuncAnimation`工具。
- en: '**Requirements**'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**要求**'
- en: Modules including `numpy` and `matplotlib` should be installed.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要安装包括`numpy`和`matplotlib`在内的模块。
- en: To save the animation on your system as mp4 or gif, `[ffmpeg](https://www.ffmpeg.org/)`
    or `[imagemagick](https://sourceforge.net/projects/imagemagick/files/)` is required
    to be installed.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要将动画保存为mp4或gif格式，需要安装`[ffmpeg](https://www.ffmpeg.org/)`或`[imagemagick](https://sourceforge.net/projects/imagemagick/files/)`。
- en: Once ready, we can begin with our first basic animation in the Jupyter Notebooks.
    The code for this article can be accessed from the associated [**Github Repository**](https://github.com/parulnith/Animations-with-Matplotlib)
    or you can view it on my binder by clicking the image below.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 准备好后，我们可以在Jupyter Notebooks中开始我们的第一个基本动画。本文的代码可以从相关的[**Github仓库**](https://github.com/parulnith/Animations-with-Matplotlib)中获取，或者你可以点击下面的图片在我的binder中查看。
- en: '![figure-name](../Images/dd4a24af5ff3e6272333553c003858a9.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![figure-name](../Images/dd4a24af5ff3e6272333553c003858a9.png)'
- en: '**Basic Animation: Moving Sine Wave**'
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**基本动画：移动的正弦波**'
- en: Let’s use `FuncAnimation` to create a basic animation of a sine wave moving
    across the screen. The source code for the animation has been taken from the [Matplotlib
    Animation tutorial](http://jakevdp.github.io/blog/2012/08/18/matplotlib-animation-tutorial/).
    Let’s first see the output and then we shall break down the code to understand
    what’s going under the hood.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用`FuncAnimation`创建一个在屏幕上移动的正弦波的基本动画。动画的源代码来自于[Matplotlib动画教程](http://jakevdp.github.io/blog/2012/08/18/matplotlib-animation-tutorial/)。我们先看看结果，然后将分解代码以理解其内部工作原理。
- en: '[PRE0]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![figure-name](../Images/9c0d243d924a97a321a807add52079fb.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![figure-name](../Images/9c0d243d924a97a321a807add52079fb.png)'
- en: In lines(7–9), we simply create a figure window with a single axis in the figure.
    Then we create our empty line object which is essentially the one to be modified
    in the animation. The line object will be populated with data later.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在第(7–9)行，我们简单地创建了一个带有单个坐标轴的图形窗口。然后我们创建了一个空的线对象，这个对象在动画中将被修改。线对象稍后将被填充数据。
- en: In lines(11–13), we create the `init` function that will make the animation
    happen. The init function initializes the data and also sets the axis limits.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在第(11–13)行，我们创建了`init`函数来实现动画效果。`init`函数初始化数据并设置坐标轴范围。
- en: In lines(14–18), we finally define the animation function which takes in the
    frame number(i) as the parameter and creates a sine wave(or any other animation)
    which a shift depending upon the value of i. This function here returns a tuple
    of the plot objects which have been modified which tells the animation framework
    what parts of the plot should be animated.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在第（14–18）行，我们最终定义了动画函数，该函数以帧编号(i)作为参数，并创建一个正弦波（或其他任何动画），其偏移量取决于i的值。这个函数返回一个包含已修改的绘图对象的元组，这告诉动画框架图表的哪些部分应该被动画化。
- en: In line **20**, we create the actual animation object. The `blit` parameter
    ensures that only those pieces of the plot are re-drawn which have been changed.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在第**20**行，我们创建实际的动画对象。`blit`参数确保只有那些已经改变的图表部分会被重新绘制。
- en: This is the basic intuition behind creating animations in Matplotlib. With a
    little tweak in the code, interesting visualisations can be created. Let’s have
    a look at some of them
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在Matplotlib中创建动画的基本直观理解。通过对代码做一些小的调整，可以创建有趣的可视化效果。让我们看看一些例子。
- en: A Growing Coil
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一个增长的线圈
- en: Similarly, there is a nice example of creating shapes at [GeeksforGeeks](https://www.geeksforgeeks.org/graph-plotting-python-set-3/).
    Let’s now create a moving coil which slowly unwinds, with the help of `animation`
    class of matplotlib. The code is quite similar to the sine wave plot with minor
    adjustments.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，在[GeeksforGeeks](https://www.geeksforgeeks.org/graph-plotting-python-set-3/)上有一个很好的创建形状的例子。现在，我们通过matplotlib的`animation`类创建一个慢慢展开的移动线圈。代码与正弦波图相似，只有一些微小的调整。
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![figure-name](../Images/66cc4f449043536a5a6598fd9f341f5c.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![figure-name](../Images/66cc4f449043536a5a6598fd9f341f5c.png)'
- en: Live Updating Graphs
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实时更新图表
- en: Live updating graphs come in handy when plotting dynamic quantities like stock
    data, sensor data or any other time-dependent data. We plot a base graph which
    automatically gets updated as more data is fed into the system. Let’s plot stock
    prices of a hypothetical company in a month.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 实时更新图表在绘制动态数据（如股票数据、传感器数据或任何其他时间相关数据）时非常有用。我们绘制一个基础图表，当更多数据被输入系统时，它会自动更新。让我们绘制一个假设公司一个月的股票价格。
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now, open the terminal and run the python file. You will get a graph like the
    one below which automatically updates as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，打开终端并运行python文件。你将得到一个如下面所示的图表，它会自动更新：
- en: '![figure-name](../Images/4a6e88e72608a817f55a9a29eafef265.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![figure-name](../Images/4a6e88e72608a817f55a9a29eafef265.png)'
- en: Here interval is 1000 milliseconds or one second.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的间隔时间是1000毫秒或一秒钟。
- en: Animation on a 3D plot
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3D图表上的动画
- en: Creating 3D graphs is common but what if we can animate the angle of view of
    those graphs. The idea is to change the camera view and then use every resulting
    image to create an animation. There is a nice section dedicated to it at [The
    Python Graph Gallery](https://python-graph-gallery.com/342-animation-on-3d-plot/).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 创建3D图表很常见，但如果我们可以对这些图表的视角进行动画处理呢？这个想法是改变相机视角，然后使用每个生成的图像来创建动画。有关这方面的一个很好的部分可以在[The
    Python Graph Gallery](https://python-graph-gallery.com/342-animation-on-3d-plot/)中找到。
- en: Create a folder called **volcano** in the same directory as the notebook. All
    the images will be stored in this folder which will be then used in the animation.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在与笔记本相同的目录下创建一个名为**volcano**的文件夹。所有的图像将存储在这个文件夹中，然后用于动画制作。
- en: '[PRE3]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This will create multiple PNG files in the Volcano folder. Now, use ImageMagick
    to transform them into animation. Open Terminal and navigate to the Volcano folder
    and enter the following command:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建多个PNG文件在Volcano文件夹中。现在，使用ImageMagick将它们转换成动画。打开终端，导航到Volcano文件夹并输入以下命令：
- en: '[PRE4]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![figure-name](../Images/eeb13aa85228fe4b855d296521488b23.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![figure-name](../Images/eeb13aa85228fe4b855d296521488b23.png)'
- en: Animations using Celluloid Module
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Celluloid模块的动画
- en: '[Celluloid](https://github.com/jwkvam/celluloid) is a Python module that simplifies
    the process of creating animations in matplotlib. This library creates a matplotlib
    figure and creates a `Camera` from it. It then reuses figure and after each frame
    is created, take a snapshot with the camera. Finally, an animation is created
    with all the captured frames.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[Celluloid](https://github.com/jwkvam/celluloid)是一个Python模块，它简化了在matplotlib中创建动画的过程。这个库创建了一个matplotlib图形，并从中创建了一个`Camera`。然后，它重用图形，并在每一帧创建后，用相机拍摄快照。最后，使用所有捕获的帧创建一个动画。'
- en: '**Installation**'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**安装**'
- en: '[PRE5]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Here are a few examples using the Celluloid module.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些使用Celluloid模块的例子。
- en: '**Minimal**'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**最小化**'
- en: '[PRE6]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![figure-name](../Images/c63fd4dcb559b39fc765cb3434d68191.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![figure-name](../Images/c63fd4dcb559b39fc765cb3434d68191.png)'
- en: '**Subplots**'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**子图**'
- en: '[PRE7]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![figure-name](../Images/0f3966016881025d1bc2d6e0c77b7ec9.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![figure-name](../Images/0f3966016881025d1bc2d6e0c77b7ec9.png)'
- en: '**Legends**'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**图例**'
- en: '[PRE8]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![figure-name](../Images/70717418d39057c540045b6322003259.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![figure-name](../Images/70717418d39057c540045b6322003259.png)'
- en: Wrap Up
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结
- en: Animations help to highlight certain features of the visualisation which otherwise
    cannot be communicated easily with static charts. Having said that it is also
    important to keep in mind that unnecessary and overuse of visualisations can sometimes
    complicate things. Every feature in data visualisation should be used judiciously
    to have the best impact.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 动画有助于突出可视化的某些特征，这些特征在静态图表中很难传达。尽管如此，也需要注意，不必要和过度使用可视化有时会使事情复杂化。数据可视化中的每一个特性都应审慎使用，以获得最佳效果。
- en: '**Bio: [Parul Pandey](https://www.linkedin.com/in/parul-pandey-a5498975/)**
    is a Data Science enthusiast who frequently writes for Data Science publications
    such as Towards Data Science.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**个人简介：[Parul Pandey](https://www.linkedin.com/in/parul-pandey-a5498975/)**
    是一位数据科学爱好者，经常为数据科学出版物撰写文章，如 Towards Data Science。'
- en: '[Original](https://towardsdatascience.com/animations-with-matplotlib-d96375c5442c).
    Reposted with permission.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://towardsdatascience.com/animations-with-matplotlib-d96375c5442c)。已获许可转载。'
- en: '**Related:**'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[5 Quick and Easy Data Visualizations in Python with Code](/2018/07/5-quick-easy-data-visualizations-python-code.html)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用代码在 Python 中创建 5 种快速简易的数据可视化](/2018/07/5-quick-easy-data-visualizations-python-code.html)'
- en: '[The Python Graph Gallery](/2017/11/python-graph-gallery.html)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 图表画廊](/2017/11/python-graph-gallery.html)'
- en: '[D3.js Graph Gallery for Data Visualization](/2019/03/d3js-graph-gallery-data-visualization.html)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[D3.js 图表画廊用于数据可视化](/2019/03/d3js-graph-gallery-data-visualization.html)'
- en: More On This Topic
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关主题
- en: '[Introduction to Data Visualization Using Matplotlib](https://www.kdnuggets.com/2022/12/introduction-data-visualization-matplotlib.html)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Matplotlib 数据可视化入门](https://www.kdnuggets.com/2022/12/introduction-data-visualization-matplotlib.html)'
- en: '[Python Matplotlib Cheat Sheets](https://www.kdnuggets.com/2023/01/python-matplotlib-cheat-sheets.html)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python Matplotlib 备忘单](https://www.kdnuggets.com/2023/01/python-matplotlib-cheat-sheets.html)'
- en: '[Creating Visuals with Matplotlib and Seaborn](https://www.kdnuggets.com/creating-visuals-with-matplotlib-and-seaborn)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Matplotlib 和 Seaborn 创建可视化图形](https://www.kdnuggets.com/creating-visuals-with-matplotlib-and-seaborn)'
