- en: '3 Reasons to Use Random Forest® Over a Neural Network: Comparing Machine Learning
    versus Deep Learning'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2020/04/3-reasons-random-forest-neural-network-comparison.html](https://www.kdnuggets.com/2020/04/3-reasons-random-forest-neural-network-comparison.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Neural networks](https://blog.exxactcorp.com/?s=neural+network) have been
    shown to outperform a number of machine learning algorithms in many industry domains.
    They keep learning until it comes out with the best set of features to obtain
    a satisfying predictive performance. However, a neural network will scale your
    variables into a series of numbers that once the neural network finishes the learning
    stage, the features become indistinguishable to us.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/46aea79146c807b65c75ca95ffd2b94d.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Image Source](http://unsplash.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: If all we cared about was the prediction, a neural net would be the de-facto
    algorithm used all the time. But in an industry setting, we need a model that
    can give meaning to a feature/variable to stakeholders. And these stakeholders
    will likely be anyone other than someone with a knowledge of deep learning or
    machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: What’s the Main Difference Between the random forest algorithm and Neural Networks?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Both the random forest algorithm and Neural Networks are different techniques
    that learn differently but can be used in similar domains. The random forest algorithm
    is a technique of[ Machine Learning](https://blog.exxactcorp.com/?s=machine+learning) while
    Neural Networks are exclusive to [Deep Learning.](https://blog.exxactcorp.com/category/deep-learning/)
  prefs: []
  type: TYPE_NORMAL
- en: What are Neural Networks?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A **Neural Network** is a computational model loosely based on the functioning
    cerebral cortex of a human to replicate the same style of thinking and perception.
    Neural Networks are organized in layers made up of interconnected nodes which
    contain an activation function that computes the output of the network.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/c7f1dc993a06a680cfb52bfe0f1bcfe4.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Image Source](https://www.intellisystem.it/en/category/news/news-tecnologia/)'
  prefs: []
  type: TYPE_NORMAL
- en: Neural nets are another means of machine learning in which a computer learns
    to perform a task by analyzing training examples. As the neural net is loosely
    based on the human brain, it will consist of thousands or millions of nodes that
    are interconnected. A node can be connected to several nodes in the layer beneath
    it, from which it receives data, and several nodes above it which receive data.
    Each incoming data point receives a weight and is multiplied and added. A bias
    is added if the weighted sum equates to zero and then passed to the activation
    function.
  prefs: []
  type: TYPE_NORMAL
- en: The Architecture of Neural Networks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A Neural Network has 3 basic architectures:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Single Layer Feedforward Networks
  prefs: []
  type: TYPE_NORMAL
- en: It is the simplest network that is an extended version of the perceptron. It
    has additional hidden nodes between the input layer and output layer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. Multi Layer Feedforward Networks
  prefs: []
  type: TYPE_NORMAL
- en: This type of network has one or more hidden layers except for the input and
    output. Its role is to intervene in data transfer between the input and output
    layer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[3\. Recurrent Networks](https://blog.exxactcorp.com/5-types-lstm-recurrent-neural-network/)'
  prefs: []
  type: TYPE_NORMAL
- en: Recurrent neural networks are similar to the above but are widely adopted to
    predict sequential data such as text and time series. The most famous Recurrent
    Neural Network is the ‘[Long — Short Term Memory’ Model (LSTM)](https://blog.exxactcorp.com/5-types-lstm-recurrent-neural-network/).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is the random forest algorithm?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Figure](../Images/edada7a9d76fa2238a07e00aeaeaca8f.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Image Source](http://events.constantcontact.com/register/event?llr=x9cqvsdab&oeidk=a07egvxohhadf4625dc)'
  prefs: []
  type: TYPE_NORMAL
- en: '**The random forest algorithm** is an ensemble of Decision Trees whereby the
    final/leaf node will be either the majority class for classification problems
    or the average for regression problems.'
  prefs: []
  type: TYPE_NORMAL
- en: 'A random forest algorithm will grow many Classification trees and for each
    output from that tree, we say the tree ‘*votes’* for that class. A tree is grown
    using the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: A random sample of rows from the training data will be taken for each tree.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From the sample taken in Step (1), a subset of features will be taken to be
    used for splitting on each tree.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Each tree is grown to the largest extent specified by the parameters until it
    reaches a vote for the class.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why Should You Use the random forest algorithm?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The fundamental reason to use the random forest algorithm instead of a decision
    tree is to combine the predictions of many decision trees into a single model.
    The logic is that a single even made up of many mediocre models will still be
    better than one good model. There is truth to this given the mainstream performance
    of the random forest algorithm. The random forest algorithm are less prone to
    overfitting because of this.
  prefs: []
  type: TYPE_NORMAL
- en: Over-fitting can occur with a flexible model like decision trees where the model
    with memorize the training data and learn any noise in the data as well. This
    will make it unable to predict the test data.
  prefs: []
  type: TYPE_NORMAL
- en: '***A random forest algorithm can reduce the high variance from a flexible model
    like a decision tree by combining many trees into one ensemble model.***'
  prefs: []
  type: TYPE_NORMAL
- en: When Should You Use the random forest algorithm Versus a Neural Network?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The random forest algorithm is less computationally expensive and does not require
    a GPU to finish training. A random forest algorithm can give you a different interpretation
    of a decision tree but with better performance. Neural Networks will require much
    more data than an everyday person might have on hand to actually be effective.
    The neural network will simply decimate the interpretability of your features
    to the point where it becomes meaningless for the sake of performance. While that
    may sound reasonable to some, it is dependent on each project.
  prefs: []
  type: TYPE_NORMAL
- en: If the goal is to create a prediction model without care for the variables at
    play, by all means use a neural network, but you’ll need the resources to do so.
    If an understanding of the variables are required, then whether we like it or
    not, typically what happens in this situation is that performance will have to
    take a slight hit to make sure that we can still understand how each variable
    is contributing to the prediction model.
  prefs: []
  type: TYPE_NORMAL
- en: RANDOM FORESTS and RANDOMFORESTS are registered marks of Minitab, LLC.
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://blog.exxactcorp.com/3-reasons-to-use-random-forest-over-a-neural-network-comparing-machine-learning-versus-deep-learning/).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Random Forest® — A Powerful Ensemble Learning Algorithm](/2020/01/random-forest-powerful-ensemble-learning-algorithm.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Random Forest® vs Neural Networks for Predicting Customer Churn](/2019/12/random-forest-vs-neural-networks-predicting-customer-churn.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Comparing Decision Tree Algorithms: Random Forest® vs. XGBoost](/2019/08/activestate-decision-tree-random-forest-xgboost.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Random Forest vs Decision Tree: Key Differences](https://www.kdnuggets.com/2022/02/random-forest-decision-tree-key-differences.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Does the Random Forest Algorithm Need Normalization?](https://www.kdnuggets.com/2022/07/random-forest-algorithm-need-normalization.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Tuning Random Forest Hyperparameters](https://www.kdnuggets.com/2022/08/tuning-random-forest-hyperparameters.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[3 Reasons Why You Should Use Linear Regression Models Instead of…](https://www.kdnuggets.com/2021/08/3-reasons-linear-regression-instead-neural-networks.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Learn Deep Learning by Building 15 Neural Network Projects in 2022](https://www.kdnuggets.com/2022/01/15-neural-network-projects-build-2022.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[4 Reasons Why You Shouldn’t Use Machine Learning](https://www.kdnuggets.com/2021/12/4-reasons-shouldnt-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
