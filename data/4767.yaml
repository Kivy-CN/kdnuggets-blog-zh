- en: Naive Bayes from Scratch using Python only – No Fancy Frameworks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 仅使用Python从零开始的朴素贝叶斯 – 无需华丽的框架
- en: 原文：[https://www.kdnuggets.com/2018/10/naive-bayes-from-scratch-python.html](https://www.kdnuggets.com/2018/10/naive-bayes-from-scratch-python.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2018/10/naive-bayes-from-scratch-python.html](https://www.kdnuggets.com/2018/10/naive-bayes-from-scratch-python.html)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](/2018/10/naive-bayes-from-scratch-python.html/2#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](/2018/10/naive-bayes-from-scratch-python.html/2#comments)'
- en: '**By [Aisha Javed](https://towardsdatascience.com/@aisha.jv70)** .'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者 [Aisha Javed](https://towardsdatascience.com/@aisha.jv70)**。'
- en: '![](../Images/2ad3a747bf9c8c8e67cdfb4deec57050.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2ad3a747bf9c8c8e67cdfb4deec57050.png)'
- en: '**Unfolding Naive Bayes from Scratch! Take-2 ****????**'
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**从零开始展开朴素贝叶斯! 第2部分 ****????**'
- en: '* * *'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的IT'
- en: '* * *'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: So in my previous blog post of [**Unfolding Naive Bayes from Scratch! Take-1**](https://www.kdnuggets.com/2018/09/unfolding-naive-bayes.html)????,
    I tried to decode the rocket science behind the working of The [Naive Bayes](https://www.kdnuggets.com/2020/06/naive-bayes-algorithm-everything.html)
    (NB) ML algorithm, and after going through it’s algorithmic insights, you too
    must have realized that it’s quite a painless algorithm. In this blog post, we
    will walk-through it’s complete step by step pythonic implementation ( using basic
    python only) and it will be quite evident that *how easy it is to code NB from
    scratch* and that NB is *not that Naive at classifying !*
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 所以在我之前的博客文章[**从零开始展开朴素贝叶斯! 第1部分**](https://www.kdnuggets.com/2018/09/unfolding-naive-bayes.html)????中，我试图解码朴素贝叶斯（NB）机器学习算法的工作原理，通过它的算法洞察，你也一定会发现这个算法相当简单。在这篇博客中，我们将详细讲解其完整的逐步Python实现（仅使用基础Python），并且会非常明显*从零开始编码NB有多么简单*，而且NB*在分类上并不那么天真！*
- en: '**Who’s the Target Audience?** **????** **????** **????****ML Beginners** **????****????????**'
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**目标受众是谁？** **????** **????** **????** **机器学习初学者** **????** **????????**'
- en: Since I always wanted to decipher ML for absolute beginners and as it is said
    that if you can’t explain it, you probably didn't understand it, so yeah this
    blog post too is especially intended for *ML beginners looking for humanistic
    ML resources for an in depth yet without any gibberish jargon of those creepy
    Greek mathematical formulas *( honestly that scary looking math never made any
    sense to me too ! )
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我一直想为绝对初学者解读机器学习，而且有人说如果你不能解释清楚，那你可能没真正理解它，所以这篇博客也特别针对*寻找深入但没有那些可怕的希腊数学公式的机器学习初学者*（老实说，那些吓人的数学对我来说也没什么意义！）
- en: '**Outcome of this Tutorial — A Hands-On Pythonic Implementation of NB**'
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**本教程的成果 — 朴素贝叶斯的实用Python实现**'
- en: As I just mentioned above, a complete walk-through of NB pythonic implementation
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如我刚刚提到的，完整的朴素贝叶斯Python实现讲解
- en: '*Once you reach the end of this blog post, you will be done completely with
    90% of understanding & implementing NB and only 10% will be remaining to master
    it from application point of view!*'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*一旦你阅读完这篇博客文章，你将完全掌握90%的朴素贝叶斯理解和实现，剩下的10%则是从应用角度掌握它！*'
- en: '![](../Images/d107ef572d935909b0b62daf11e48e7a.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d107ef572d935909b0b62daf11e48e7a.png)'
- en: '**ML Little Birdy Transforming from Zero to Hero !!!**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**机器学习小鸟从零到英雄！！！**'
- en: Defining The Roadmap….. ????
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义路线图….. ????
- en: '**Milestone # 1: **[**Data Preprocessing Function**](https://towardsdatascience.com/na%C3%AFve-bayes-from-scratch-using-python-only-no-fancy-frameworks-a1904b37222d#6154)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**里程碑 # 1: **[**数据预处理函数**](https://towardsdatascience.com/na%C3%AFve-bayes-from-scratch-using-python-only-no-fancy-frameworks-a1904b37222d#6154)'
- en: '**Milestone # 2: **[**Implementation of NaiveBayes Class****—****Defining Functions
    for Training & Testing**](https://towardsdatascience.com/na%C3%AFve-bayes-from-scratch-using-python-only-no-fancy-frameworks-a1904b37222d#fc37)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**里程碑 # 2：**[**实现 NaiveBayes 类——定义训练和测试函数**](https://towardsdatascience.com/na%C3%AFve-bayes-from-scratch-using-python-only-no-fancy-frameworks-a1904b37222d#fc37)'
- en: '**Milestone # 3: **[**Training NB Model on Training Dataset**](https://towardsdatascience.com/na%C3%AFve-bayes-from-scratch-using-python-only-no-fancy-frameworks-a1904b37222d#0287)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**里程碑 # 3：**[**在训练数据集上训练 NB 模型**](https://towardsdatascience.com/na%C3%AFve-bayes-from-scratch-using-python-only-no-fancy-frameworks-a1904b37222d#0287)'
- en: '**Milestone # 4: **[**Testing Using Trained NB Model**](https://towardsdatascience.com/na%C3%AFve-bayes-from-scratch-using-python-only-no-fancy-frameworks-a1904b37222d#a15f)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**里程碑 # 4：**[**使用训练好的 NB 模型进行测试**](https://towardsdatascience.com/na%C3%AFve-bayes-from-scratch-using-python-only-no-fancy-frameworks-a1904b37222d#a15f)'
- en: '**Milestone # 5: **[**Proving that the Code for NaiveBayes Class is Absolutely
    Generic!**](https://towardsdatascience.com/na%C3%AFve-bayes-from-scratch-using-python-only-no-fancy-frameworks-a1904b37222d#02f4)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**里程碑 # 5：**[**证明 NaiveBayes 类的代码绝对通用！**](https://towardsdatascience.com/na%C3%AFve-bayes-from-scratch-using-python-only-no-fancy-frameworks-a1904b37222d#02f4)'
- en: 'Before we begin writing code for Naive Bayes in python, I assume you are familiar
    with:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始编写 Naive Bayes 的 Python 代码之前，我假设你已经熟悉：
- en: Python Lists
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Python 列表
- en: Numpy & just a tad bit of vectorized code
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Numpy 以及一点向量化代码
- en: Dictionaries
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 字典
- en: Regex
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正则表达式
- en: '*Let’s Begin the with the Pythonic Implementation !*'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*让我们开始 Pythonic 的实现吧！*'
- en: '**Defining Data Preprocessing Function**'
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**定义数据预处理函数**'
- en: Let’s begin with a few imports that we would need while implementing Naive Bayes
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从几个在实现 Naive Bayes 时需要的导入开始
- en: '**Milestone # 1 Achieved** ????'
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**里程碑 # 1 达成** 🤩'
- en: '**Implementation of NaiveBayes Class — Defining Functions for Training & Testing**'
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**实现 NaiveBayes 类——定义训练和测试函数**'
- en: '***The Bonus Part ***: We will be writing a a fully generic code for the NB
    Classifier! No matter how many classes come into the training dataset and whatever
    text dataset is given — it will still be able to train a fully working model ????
    ???? ????'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '***附加部分***：我们将为 NB 分类器编写一个完全通用的代码！无论训练数据集中有多少类，以及给定什么文本数据集——它仍然能够训练一个完全有效的模型
    🤔 🤔 🤔'
- en: The code for NaiveBayes is just a *little extensive **—*but we just to need
    to spend a maximum of 10–15 minutes to grasp it! After that, you can surely technically
    call yourself a “NB Guru” ????
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: NaiveBayes 的代码只是 *稍微复杂*——但我们只需要花费最多 10-15 分钟就能掌握它！之后，你绝对可以自称为“NB 大师” 🤓
- en: What is this code doing ??
  id: totrans-38
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 这段代码在做什么？🤔
- en: 'There are in total four functions defined in the NaiveBayes Class:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: NaiveBayes 类中总共定义了四个函数：
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: And the code is divided into two major functions i.e train & test functions.
    Once you understand the statements defined inside these two functions, you will
    surely get to know what the code is actually doing and in what order the other
    two functions are being called.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 代码被分为两个主要函数，即训练和测试函数。一旦你理解了这两个函数内部定义的语句，你将确切了解代码的实际作用以及其他两个函数的调用顺序。
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The other two functions are defined to supplement these two major functions
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 另外两个函数是为了补充这两个主要函数而定义的
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You can view the above code in this [**Jupyter Notebook**](https://github.com/aishajv/Unfolding-Naive-Bayes-from-Scratch/blob/master/%23%20Unfolding%20Na%C3%AFve%20Bayes%20from%20Scratch!%20Take-2%20%F0%9F%8E%AC.ipynb) too
  id: totrans-45
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你也可以在这个 [**Jupyter Notebook**](https://github.com/aishajv/Unfolding-Naive-Bayes-from-Scratch/blob/master/%23%20Unfolding%20Na%C3%AFve%20Bayes%20from%20Scratch!%20Take-2%20%F0%9F%8E%AC.ipynb)
    中查看上述代码
- en: It is much much more easier to organize and reuse the code if we define a class
    of NB rather than use the traditional structured programming approach. That’s
    the reason of defining a NB class and all it’s relevant functions inside it.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们定义一个 NB 类，而不是使用传统的结构化编程方法，组织和重用代码会容易得多。这就是定义一个 NB 类及其相关函数的原因。
- en: We don’t just want to write code, rather we want to write beautiful, neat &
    clean, handy, and reusable code . Yes that’s right - we want to possess all the
    traits that a good data scientist could possibly have !
  id: totrans-47
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们不仅仅想编写代码，更希望编写美观、整洁、实用且可重用的代码。没错，我们希望拥有一个优秀数据科学家可能具备的所有特质！
- en: And guess what? Whenever we will be dealing with a text classification problem
    that we intend to solve using NB, we will simply instantiate its object and by
    using the same programming interface, we will be able to train a NB classifier.
    Plus, as its the general principle of Object Oriented Programming that we only
    define functions relevant to a class inside that class, so all functions that
    are not relevant to NB class will be defined separately
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道吗？每当我们处理一个文本分类问题并打算使用NB解决时，我们只需实例化其对象，通过相同的编程接口，就可以训练一个NB分类器。而且，根据面向对象编程的一般原则，我们只在类内部定义与该类相关的函数，因此所有与NB类无关的函数将会被单独定义。
- en: '**Milestone # 2 Achieved** ???? ????'
  id: totrans-49
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**里程碑 # 2 达成** 🎉 🎉'
- en: More On This Topic
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关话题
- en: '[KDnuggets News, April 13: Python Libraries Data Scientists Should…](https://www.kdnuggets.com/2022/n15.html)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets新闻，4月13日：数据科学家应该关注的Python库…](https://www.kdnuggets.com/2022/n15.html)'
- en: '[Gaussian Naive Bayes, Explained](https://www.kdnuggets.com/2023/03/gaussian-naive-bayes-explained.html)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[高斯朴素贝叶斯，解释](https://www.kdnuggets.com/2023/03/gaussian-naive-bayes-explained.html)'
- en: '[Naïve Bayes Algorithm: Everything You Need to Know](https://www.kdnuggets.com/2020/06/naive-bayes-algorithm-everything.html)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[朴素贝叶斯算法：你需要知道的一切](https://www.kdnuggets.com/2020/06/naive-bayes-algorithm-everything.html)'
- en: '[3 Ways Understanding Bayes Theorem Will Improve Your Data Science](https://www.kdnuggets.com/2022/06/3-ways-understanding-bayes-theorem-improve-data-science.html)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[理解贝叶斯定理的3种方式将提升你的数据科学技能](https://www.kdnuggets.com/2022/06/3-ways-understanding-bayes-theorem-improve-data-science.html)'
- en: '[Frameworks for Approaching the Machine Learning Process](https://www.kdnuggets.com/2018/05/general-approaches-machine-learning-process.html)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[接近机器学习过程的框架](https://www.kdnuggets.com/2018/05/general-approaches-machine-learning-process.html)'
- en: '[Chip Huyen shares frameworks and case studies for implementing ML systems](https://www.kdnuggets.com/2023/02/sphere-chip-huyen-shares-frameworks-case-studies-implementing-ml-systems.html)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Chip Huyen 分享实施ML系统的框架和案例研究](https://www.kdnuggets.com/2023/02/sphere-chip-huyen-shares-frameworks-case-studies-implementing-ml-systems.html)'
