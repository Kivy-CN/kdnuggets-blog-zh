["```py\npip install scikit-llm\n```", "```py\npip install scikit-llm[gpt4all]\n```", "```py\nfrom skllm.config import SKLLMConfig\n\nSKLLMConfig.set_openai_key(\"<your_key>\")\nSKLLMConfig.set_openai_org(\"<your_organisation>\")</your_organisation></your_key>\n```", "```py\nfrom skllm import ZeroShotGPTClassifier\nfrom skllm.datasets import get_classification_dataset\n\n#label: Positive, Neutral, Negative\nX, y = get_classification_dataset()\n\n#Initiate the model with GPT-3.5\nclf = ZeroShotGPTClassifier(openai_model=\"gpt-3.5-turbo\")\nclf.fit(X, y)\nlabels = clf.predict(X)\n```", "```py\nX, _ = get_classification_dataset()\n\nclf = ZeroShotGPTClassifier()\nclf.fit(None, [\"positive\", \"negative\", \"neutral\"])\nlabels = clf.predict(X)\n```", "```py\nfrom skllm import MultiLabelZeroShotGPTClassifier\nfrom skllm.datasets import get_multilabel_classification_dataset\nX, _ = get_multilabel_classification_dataset()\ncandidate_labels = [\n    \"Quality\",\n    \"Price\",\n    \"Delivery\",\n    \"Service\",\n    \"Product Variety\",\n    \"Customer Support\",\n    \"Packaging\",,\n]\nclf = MultiLabelZeroShotGPTClassifier(max_labels=4)\nclf.fit(None, [candidate_labels])\nlabels = clf.predict(X)\n```", "```py\nfrom sklearn.preprocessing import LabelEncoder\n\nX, y = get_classification_dataset()\n\nle = LabelEncoder()\ny_train_enc = le.fit_transform(y_train)\ny_test_enc = le.transform(y_test)\n```", "```py\nfrom sklearn.pipeline import Pipeline\nfrom xgboost import XGBClassifier\nfrom skllm.preprocessing import GPTVectorizer\n\nsteps = [(\"GPT\", GPTVectorizer()), (\"Clf\", XGBClassifier())]\nclf = Pipeline(steps)\n\n#Fitting the dataset\nclf.fit(X_train, y_train_enc)\n```", "```py\npred_enc = clf.predict(X_test)\npreds = le.inverse_transform(pred_enc)\n```"]