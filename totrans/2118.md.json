["```py\npip install anthropic\n```", "```py\nimport os\nimport anthropic\nfrom IPython.display import Markdown, display\n\nclient = anthropic.Anthropic(\n    api_key=os.environ[\"ANTHROPIC_API_KEY\"],\n)\n```", "```py\nfrom anthropic import HUMAN_PROMPT, AI_PROMPT\n\ncompletion = client.completions.create(\n    model=\"claude-3-opus-20240229\",\n    max_tokens_to_sample=300,\n    prompt=f\"{HUMAN_PROMPT} How do I cook a original pasta?{AI_PROMPT}\",\n)\nMarkdown(completion.completion)\n```", "```py\nPrompt = \"Write the Julia code for the simple data analysis.\"\nmessage = client.messages.create(\n    model=\"claude-3-opus-20240229\",\n    max_tokens=1024,\n    messages=[\n        {\"role\": \"user\", \"content\": Prompt}\n    ]\n)\nMarkdown(message.content[0].text)\n```", "```py\nclient = anthropic.Anthropic(\n    api_key=os.environ[\"ANTHROPIC_API_KEY\"],\n)\n\nPrompt = \"Write a blog about neural networks.\"\n\nmessage = client.messages.create(\n    model=\"claude-3-opus-20240229\",\n    max_tokens=1024,\n    system=\"Respond only in Urdu.\",\n    messages=[\n        {\"role\": \"user\", \"content\": Prompt}\n    ]\n)\n\nMarkdown(message.content[0].text)\n```", "```py\nimport asyncio\nfrom anthropic import AsyncAnthropic\n\nclient = AsyncAnthropic(\n    api_key=os.environ[\"ANTHROPIC_API_KEY\"],\n)\n\nasync def main() -> None:\n\n    Prompt = \"What is LLMOps and how do I start learning it?\"\n\n    message = await client.messages.create(\n        max_tokens=1024,\n        messages=[\n            {\n                \"role\": \"user\",\n                \"content\": Prompt,\n            }\n        ],\n        model=\"claude-3-opus-20240229\",\n    )\n    display(Markdown(message.content[0].text))\n\nawait main()\n```", "```py\nfrom anthropic import Anthropic\n\nclient = anthropic.Anthropic(\n    api_key=os.environ[\"ANTHROPIC_API_KEY\"],\n)\n\nPrompt = \"Write a mermaid code for typical MLOps workflow.\"\n\ncompletion = client.messages.stream(\n    max_tokens=1024,\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": Prompt,\n        }\n    ],\n    model=\"claude-3-opus-20240229\",\n)\n\nwith completion as stream:\n    for text in stream.text_stream:\n            print(text, end=\"\", flush=True)\n```", "```py\nimport asyncio\nfrom anthropic import AsyncAnthropic\n\nclient = AsyncAnthropic()\n\nasync def main() -> None:\n\n    completion = client.messages.stream(\n        max_tokens=1024,\n        messages=[\n            {\n                \"role\": \"user\",\n                \"content\": Prompt,\n            }\n        ],\n        model=\"claude-3-opus-20240229\",\n    )\n    async with completion as stream:\n        async for text in stream.text_stream:\n            print(text, end=\"\", flush=True)\n\nawait main()\n```", "```py\nimport anthropic\nimport base64\nimport httpx\n\nclient = anthropic.Anthropic()\n\nmedia_type = \"image/jpeg\"\n\nimg_url_1 = \"https://images.pexels.com/photos/20230232/pexels-photo-20230232/free-photo-of-tulips-in-a-vase-against-a-green-background.jpeg\"\n\nimage_data_1 = base64.b64encode(httpx.get(img_url_1).content).decode(\"utf-8\")\n\nimg_url_2 = \"https://images.pexels.com/photos/20255306/pexels-photo-20255306/free-photo-of-flamingos-in-the-water.jpeg\"\n\nimage_data_2 = base64.b64encode(httpx.get(img_url_2).content).decode(\"utf-8\")\n```", "```py\nmessage = client.messages.create(\n    model=\"claude-3-opus-20240229\",\n    max_tokens=1024,\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": [\n                {\n                    \"type\": \"image\",\n                    \"source\": {\n                        \"type\": \"base64\",\n                        \"media_type\": media_type,\n                        \"data\": image_data_1,\n                    },\n                },\n                {\n                    \"type\": \"text\",\n                    \"text\": \"Write a poem using this image.\"\n                }\n            ],\n        }\n    ],\n)\nMarkdown(message.content[0].text)\n```", "```py\nmessage = client.messages.create(\n    model=\"claude-3-opus-20240229\",\n    max_tokens=1024,\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": [\n                {\n                    \"type\": \"text\",\n                    \"text\": \"Image 1:\"\n                },\n                {\n                    \"type\": \"image\",\n                    \"source\": {\n                        \"type\": \"base64\",\n                        \"media_type\": media_type,\n                        \"data\": image_data_1,\n                    },\n                },\n                {\n                    \"type\": \"text\",\n                    \"text\": \"Image 2:\"\n                },\n                {\n                    \"type\": \"image\",\n                    \"source\": {\n                        \"type\": \"base64\",\n                        \"media_type\": media_type,\n                        \"data\": image_data_2,\n                    },\n                },\n                {\n                    \"type\": \"text\",\n                    \"text\": \"Write a short story using these images.\"\n                }\n            ],\n        }\n    ],\n)\nMarkdown(message.content[0].text)\n```"]