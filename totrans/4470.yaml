- en: Taming Complexity in MLOps
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MLOps中的复杂性管理
- en: 原文：[https://www.kdnuggets.com/2020/05/taming-complexity-mlops.html](https://www.kdnuggets.com/2020/05/taming-complexity-mlops.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2020/05/taming-complexity-mlops.html](https://www.kdnuggets.com/2020/05/taming-complexity-mlops.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Sourav Dey](https://www.linkedin.com/in/souravdeymit/), CTO at Manifold.ai**.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由[苏拉夫·戴](https://www.linkedin.com/in/souravdeymit/)，Manifold.ai的CTO**。'
- en: Almost two years ago now, my colleague Alexander Ng [shared our thinking](https://www.kdnuggets.com/2018/05/torus-docker-first-data-science.html) around
    why the rise of Machine Learning Engineers (MLEs) meant we needed a DevOps approach
    to machine learning (ML), and why our team created an open-source tool to make
    life easier for other teams doing AI and data science. The 1.0 release of Orbyter
    (called Torus at the time) focused on helping to streamline ML pipelines by making
    it dead simple to spin up a fully configured, out-of-the-box, Dockerized local
    development setup for data science projects.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 将近两年前，我的同事亚历山大·吴[分享了我们的想法](https://www.kdnuggets.com/2018/05/torus-docker-first-data-science.html)，即为什么机器学习工程师（MLEs）的兴起意味着我们需要一种DevOps方法来处理机器学习（ML），以及为什么我们的团队创建了一个开源工具，以使其他从事AI和数据科学的团队的工作更加轻松。Orbyter
    1.0（当时称为Torus）的发布重点是通过简化创建一个完全配置的开箱即用的Docker化本地开发环境来简化ML管道，以支持数据科学项目。
- en: For the just-released version 2.0, we focused on reducing incidental complexity
    as we continued to add features that make your life easier.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 对于刚刚发布的2.0版本，我们专注于减少偶然复杂性，同时继续添加使你的工作更轻松的功能。
- en: Making Best Practices Turnkey
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实现最佳实践的即开即用
- en: 'Orbyter 2.0 has a built-in reduction of incidental complexity. If you''re not
    already familiar with the dichotomy of inherent complexity versus incidental complexity
    in software, you can read a [great explanation](https://pressupinc.com/blog/2014/05/root-causes-software-complexity/) of
    it from David Hayes:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Orbyter 2.0内置了偶然复杂性的减少。如果你还不熟悉软件中的固有复杂性与偶然复杂性的对立面，你可以阅读[David Hayes的精彩解释](https://pressupinc.com/blog/2014/05/root-causes-software-complexity/)：
- en: All complexity in software can be accurately thought of as falling into one
    of the two sides of this dichotomy of inherent and incidental. Take everything
    that sucks about your software, subtract out anything that sucks because it's
    a hard problem, and you're left with the (molehill or mountain, I'll let you choose)
    of incidental complexity...
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 所有软件的复杂性可以准确地被视为属于固有复杂性和偶然复杂性这两种对立面之一。将你软件中的所有糟糕问题都拿出来，去掉那些因为难题而糟糕的部分，你剩下的就是那（小山还是大山，由你选择）的偶然复杂性……
- en: 'Data science and AI are full of difficult problems, so writing ML software
    often comes with significant inherent complexity. We can''t really address that
    in a tool; hard problems are going to be hard. However, we can bake reducing incidental
    complexity into the tool by being prescriptive about software engineering best
    practices, such as:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学和AI充满了难题，因此编写ML软件往往伴随着显著的固有复杂性。我们实际上无法在工具中解决这个问题；难题就是难。然而，我们可以通过对软件工程最佳实践进行规范，以减少偶然复杂性，例如：
- en: linting to PEP8 standards using [Black](https://black.readthedocs.io/en/stable/)
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用[Black](https://black.readthedocs.io/en/stable/)符合PEP8标准的代码格式检查
- en: easy unit testing using [pytest](https://docs.pytest.org/en/latest/)
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用[pytest](https://docs.pytest.org/en/latest/)进行轻松的单元测试
- en: centralized logging setup
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集中式日志设置
- en: adding hooks for continuous integration in GitHub
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为GitHub中的持续集成添加钩子
- en: conforming to the data pipeline abstraction
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 符合数据管道抽象
- en: For example, Orbyter 2.0 now allows you to automatically format your code to
    the [Python PEP 8](https://www.python.org/dev/peps/pep-0008/) standard using included
    local scripts. It also has ready-to-go continuous integration with [GitHub Actions](https://github.com/features/actions),
    so when you push your code to GitHub it automatically does a lint check and runs
    the unit tests. A YAML file provides a single place for you to configure robust
    logging. In addition, the code is scaffolded to conform to an isolated input/output
    architecture that allows rapid iteration in a data pipeline. We have also prescribed
    some clearly defined endpoints — train, predict, evaluate — as Click command line
    scripts that can be called as a Docker entry point.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，Orbyter 2.0现在允许你使用内置的本地脚本自动将代码格式化为[Python PEP 8](https://www.python.org/dev/peps/pep-0008/)标准。它还与[GitHub
    Actions](https://github.com/features/actions)进行了即开即用的持续集成，因此当你将代码推送到GitHub时，它会自动进行lint检查并运行单元测试。一个YAML文件提供了一个单一的位置来配置强大的日志记录。此外，代码被构建成符合隔离输入/输出架构，以允许在数据管道中快速迭代。我们还定义了一些明确的端点——train、predict、evaluate——作为Click命令行脚本，可以作为Docker入口点调用。
- en: '![](../Images/2bc22ef5c66306e53a412ecd17f81cf8.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2bc22ef5c66306e53a412ecd17f81cf8.png)'
- en: '*Sample project architecture.*'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*示例项目架构。*'
- en: Essentially, we have tried to make good software engineering discipline as turnkey
    as possible. Your future self will thank you.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，我们尽力将良好的软件工程纪律做得尽可能一键式。你未来的自己会感谢你。
- en: Tracking Your Experiments
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 跟踪你的实验
- en: While many organizations now have robust data science teams that do important
    experiments and modeling R&D, those same companies often struggle to move the
    results of that work [from the lab to the factory](https://hbr.org/2013/04/two-departments-for-data-succe).
    No one wants to see their hard work languish in a silo; the thrill is seeing your
    models make an impact in the real world. But it takes a lot of engineering work
    to make that transition happen, and many organizations are still ill-equipped
    for production deployment.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管许多组织现在拥有强大的数据科学团队进行重要的实验和建模研发，但这些公司往往仍然难以将这些工作的结果[from the lab to the factory](https://hbr.org/2013/04/two-departments-for-data-succe)。没有人希望看到他们的辛勤工作在孤岛中消沉；兴奋在于看到你的模型在现实世界中产生影响。但要实现这种过渡需要大量的工程工作，许多组织仍然没有准备好进行生产部署。
- en: 'To address that disconnect, we''ve added a new container with MLflow. Orbyter
    1.0 offered a single container and was a fork of the popular [Cookiecutter Data
    Science](https://drivendata.github.io/cookiecutter-data-science/), great for easily
    setting up a Dockerized workflow. Orbyter 2.0 is still fundamentally Dockerized
    data science, but now when you start it up, you get three different containers:
    the first offers Jupyter, as before; the second offers Bash, for running scripts;
    and the third offers [MLflow](https://mlflow.org/), for experiment tracking.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这种脱节，我们添加了一个带有MLflow的新容器。Orbyter 1.0提供了一个单一的容器，是流行的[Cookiecutter Data Science](https://drivendata.github.io/cookiecutter-data-science/)的一个分支，适合轻松设置Docker化的工作流程。Orbyter
    2.0仍然是基本的Docker化数据科学，但现在当你启动它时，你会得到三个不同的容器：第一个提供Jupyter，和以前一样；第二个提供Bash，用于运行脚本；第三个提供[MLflow](https://mlflow.org/)，用于实验跟踪。
- en: We believe experiment tracking is a vital part of applied ML, and are big fans
    of using MLflow for that step. It can also help with packaging for reproducible
    runs and sending models to deployment.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们认为实验跟踪是应用机器学习中的一个重要部分，并且非常喜欢使用MLflow来完成这一步骤。它还可以帮助打包以实现可重复运行，并将模型发送到部署。
- en: Continuing to Lower the Bar to Entry
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 持续降低准入门槛
- en: 'We started building Orbyter in the first place because we believe that Docker
    and containerization is the way forward. Alex explained it well in his initial
    post:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最初开始构建Orbyter，是因为我们相信Docker和容器化是未来的发展方向。Alex在他的初始帖子中解释得很好：
- en: 'While this same consistency can be achieved with careful use of virtual environments
    and disciplined system-level configuration management, containers still provide
    a significant advantage in terms of spin up/down time for new environments and
    developer productivity. However, what we have heard repeatedly from the data science
    community is: I know Docker will make this easier, but I don''t have the time
    or resources to set it up and figure it all out.'
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 尽管通过小心使用虚拟环境和严格的系统级配置管理可以实现相同的一致性，但容器在新环境的启动/关闭时间和开发者生产力方面仍然提供了显著的优势。然而，我们从数据科学社区那里听到的反馈是：我知道Docker会让这变得更容易，但我没有时间或资源来设置和搞清楚这一切。
- en: 'Orbyter was born to lower the bar for getting onto a Docker-first workflow.
    With the additional changes in Orbyter 2.0, moving to a Docker-first workflow
    is simpler than ever. Moving to this Dockerized workflow opens up the ability
    to use a variety of cloud tools—including SageMaker, Kubernetes, ECS, etc.For
    example:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Orbyter 诞生的目的是降低进入 Docker 优先工作流的门槛。通过 Orbyter 2.0 的额外改进，转向 Docker 优先工作流变得比以往更简单。转向这种
    Docker 化的工作流可以使用各种云工具—包括 SageMaker、Kubernetes、ECS 等。例如：
- en: We used AWS Batch to build an AWS experimentation-at-scale platform for a pharmaceutical
    customer. We did this quickly, thanks to being in Docker containers, and tracked
    them in MLflow. We would run jobs overnight and could look at them in the morning.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们使用 AWS Batch 为一家制药客户构建了一个 AWS 大规模实验平台。由于在 Docker 容器中进行，我们快速完成了这项工作，并在 MLflow
    中进行跟踪。我们会在夜间运行任务，早上可以查看结果。
- en: We have developed sophisticated CI/CD pipelines for several customers that automatically
    bake production Docker images after a Git tag and puts them into ECR, where they
    can easily be put into production.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们为几位客户开发了复杂的 CI/CD 管道，在 Git 标签后自动生成生产 Docker 镜像，并将其放入 ECR 中，从而可以轻松投入生产。
- en: Now that Orbyter itself is becoming more feature-rich, we're committed to keeping
    the onboarding as simple and straightforward as possible. We've created a demo
    repo that shows you how to use it—making publicly available a demo that we've
    presented, road-tested, and refined over the last year at the Strata Data Conference.
    You can find it [here](https://github.com/manifoldai/orbyter-demo).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在 Orbyter 本身变得更加功能丰富，我们致力于保持入门过程的简单和直接。我们创建了一个演示仓库，展示了如何使用它—公开了我们在 Strata 数据大会上展示、经过路测和完善的演示。你可以在[这里](https://github.com/manifoldai/orbyter-demo)找到它。
- en: Keep an eye out for further updates as we continue to build out Orbyter and
    streamline the development process.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 请留意进一步的更新，因为我们正在继续构建 Orbyter 并优化开发过程。
- en: '**Related:**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[Demystifying the AI Infrastructure Stack](https://www.kdnuggets.com/2020/05/demystifying-ai-infrastructure-stack.html)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[揭开 AI 基础设施堆栈的神秘面纱](https://www.kdnuggets.com/2020/05/demystifying-ai-infrastructure-stack.html)'
- en: '[What Does it Mean to Deploy a Machine Learning Model?](https://www.kdnuggets.com/2020/02/deploy-machine-learning-model.html)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[部署机器学习模型意味着什么？](https://www.kdnuggets.com/2020/02/deploy-machine-learning-model.html)'
- en: '[10 Useful Machine Learning Practices For Python Developers](https://www.kdnuggets.com/2020/05/10-useful-machine-learning-practices-python-developers.html)'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[10 个有用的 Python 开发者机器学习实践](https://www.kdnuggets.com/2020/05/10-useful-machine-learning-practices-python-developers.html)'
- en: '* * *'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业轨道。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升您的数据分析水平'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持您的组织 IT'
- en: '* * *'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 了解更多相关话题
- en: '[Memory Complexity with Transformers](https://www.kdnuggets.com/2022/12/memory-complexity-transformers.html)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[变压器的内存复杂性](https://www.kdnuggets.com/2022/12/memory-complexity-transformers.html)'
- en: '[Linear Regression Model Selection: Balancing Simplicity and Complexity](https://www.kdnuggets.com/2023/02/linear-regression-model-selection-balancing-simplicity-complexity.html)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[线性回归模型选择：平衡简单性与复杂性](https://www.kdnuggets.com/2023/02/linear-regression-model-selection-balancing-simplicity-complexity.html)'
- en: '[Design Patterns in Machine Learning for MLOps](https://www.kdnuggets.com/2022/02/design-patterns-machine-learning-mlops.html)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[MLOps 机器学习设计模式](https://www.kdnuggets.com/2022/02/design-patterns-machine-learning-mlops.html)'
- en: '[MLOps Is a Mess But That''s to be Expected](https://www.kdnuggets.com/2022/03/mlops-mess-expected.html)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[MLOps 是一团乱麻，但这在预期之中](https://www.kdnuggets.com/2022/03/mlops-mess-expected.html)'
- en: '[A Comprehensive Guide to MLOps](https://www.kdnuggets.com/2023/08/comprehensive-guide-mlops.html)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[全面的 MLOps 指南](https://www.kdnuggets.com/2023/08/comprehensive-guide-mlops.html)'
- en: '[Ploomber vs Kubeflow: Making MLOps Easier](https://www.kdnuggets.com/2022/02/ploomber-kubeflow-mlops-easier.html)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Ploomber 与 Kubeflow：简化 MLOps 的方法](https://www.kdnuggets.com/2022/02/ploomber-kubeflow-mlops-easier.html)'
