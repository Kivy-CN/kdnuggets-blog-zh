- en: How to Create a Simple Neural Network in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在 Python 中创建一个简单的神经网络
- en: 原文：[https://www.kdnuggets.com/2018/10/simple-neural-network-python.html](https://www.kdnuggets.com/2018/10/simple-neural-network-python.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2018/10/simple-neural-network-python.html](https://www.kdnuggets.com/2018/10/simple-neural-network-python.html)
- en: '[comments](#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](#comments)'
- en: '**By [Dr. Michael J. Garbade](https://www.linkedin.com/in/garbade)**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**由 [迈克尔·J·加尔巴德博士](https://www.linkedin.com/in/garbade) 提供**'
- en: Neural networks (NN), also called artificial neural networks (ANN) are a subset
    of learning algorithms within the machine learning field that are loosely based
    on the concept of biological neural networks.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 神经网络（NN），也称为人工神经网络（ANN），是机器学习领域中一种学习算法的子集，松散地基于生物神经网络的概念。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速开启网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持您的组织进行 IT 管理'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[Andrey Bulezyuk](https://www.liveedu.tv/andreybu/REaxr-machine-learning-model-python-sklearn-kera/oPGdP-machine-learning-model-python-sklearn-kera/),
    who is a German-based machine learning specialist with more than five years of
    experience, says that “neural networks are revolutionizing machine learning because
    they are capable of efficiently modeling sophisticated abstractions across an
    extensive range of disciplines and industries.”'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[安德雷·布列祖克](https://www.liveedu.tv/andreybu/REaxr-machine-learning-model-python-sklearn-kera/oPGdP-machine-learning-model-python-sklearn-kera/)，一位在德国工作的机器学习专家，拥有超过五年的经验，他表示：“神经网络正在彻底改变机器学习，因为它们能够高效地建模广泛领域和行业中的复杂抽象。”'
- en: 'Basically, an ANN comprises of the following components:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，人工神经网络包括以下组件：
- en: An input layer that receives data and pass it on
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个接收数据并传递数据的输入层
- en: A hidden layer
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐藏层
- en: An output layer
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个输出层
- en: Weights between the layers
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 层间权重
- en: A deliberate activation function for every hidden layer. In this simple neural
    network Python tutorial, we’ll employ the Sigmoid activation function.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为每个隐藏层使用特定的激活函数。在这个简单的神经网络 Python 教程中，我们将使用 Sigmoid 激活函数。
- en: There are several types of neural networks. In this project, we are going to
    create the feed-forward or perception neural networks. This type of ANN relays
    data directly from the front to the back.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 神经网络有多种类型。在这个项目中，我们将创建前馈神经网络或感知神经网络。这种类型的人工神经网络直接从前到后传递数据。
- en: Training the feed-forward neurons often need back-propagation, which provides
    the network with corresponding set of inputs and outputs. When the input data
    is transmitted into the neuron, it is processed, and an output is generated.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 训练前馈神经元通常需要反向传播，这为网络提供了相应的输入和输出集。当输入数据传递到神经元时，它会被处理并生成输出。
- en: 'Here is a diagram that shows the structure of a simple neural network:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个展示简单神经网络结构的图示：
- en: '![Simple Neural Network](../Images/29d7e7f6e21746e8ed80b14139130709.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![简单神经网络](../Images/29d7e7f6e21746e8ed80b14139130709.png)'
- en: And, the best way to understand how neural networks work is to learn how to
    build one from scratch (without using any library).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 而且，理解神经网络如何工作的最佳方法是从头开始学习如何构建一个（不使用任何库）。
- en: In this article, we’ll demonstrate how to use the Python programming language
    to create a simple neural network.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将演示如何使用 Python 编程语言创建一个简单的神经网络。
- en: '**The problem**'
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**问题**'
- en: Here is a table that shows the problem.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个展示问题的表格。
- en: '|  | Input |  | Output |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '|  | 输入 |  | 输出 |'
- en: '| **Training data 1** | 0 | 0 | 1 | 0 |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| **训练数据 1** | 0 | 0 | 1 | 0 |'
- en: '| **Training data 2** | 1 | 1 | 1 | 1 |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| **训练数据 2** | 1 | 1 | 1 | 1 |'
- en: '| **Training data 3** | 1 | 0 | 1 | 1 |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| **训练数据 3** | 1 | 0 | 1 | 1 |'
- en: '| **Training data 4** | 0 | 1 | 1 | 0 |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| **训练数据 4** | 0 | 1 | 1 | 0 |'
- en: '|  |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '|  |'
- en: '| **New Situation** | 1 | 0 | 0 | **?** |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| **新情况** | 1 | 0 | 0 | **?** |'
- en: We are going to train the neural network such that it can predict the correct
    output value when provided with a new set of data.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将训练神经网络，使其在提供新的数据集时能够预测正确的输出值。
- en: As you can see on the table, the value of the output is always equal to the
    first value in the input section. Therefore, we expect the value of the output
    (**?**) to be 1.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如表中所示，输出的值总是等于输入部分的第一个值。因此，我们期望输出值 (**?**) 为 1。
- en: Let’s see if we can use some Python code to give the same result (You can peruse
    the code for this project at the end of this article before continuing with the
    reading).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看是否可以使用一些 Python 代码来获得相同的结果（在继续阅读之前，您可以在本文末尾查看这个项目的代码）。
- en: '**Creating a NeuralNetwork Class**'
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**创建 NeuralNetwork 类**'
- en: We’ll create a **NeuralNetwork** class in Python to train the neuron to give
    an accurate prediction. The class will also have other helper functions.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 Python 中创建一个 **NeuralNetwork** 类，以训练神经元以给出准确的预测。该类还将具有其他辅助函数。
- en: Even though we’ll not use a neural network library for this simple neural network
    example, we’ll import the **numpy** library to assist with the calculations.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在这个简单的神经网络示例中我们不会使用神经网络库，但我们将导入**numpy**库以协助计算。
- en: 'The library comes with the following four important methods:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 该库提供了以下四个重要方法：
- en: '**exp**—for generating the natural exponential'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**exp**—用于生成自然指数'
- en: '**array**—for generating a matrix'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**数组**—用于生成矩阵'
- en: '**dot**—for multiplying matrices'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**点积**—用于矩阵乘法'
- en: '**random**—for generating random numbers. Note that we’ll seed the random numbers
    to ensure their efficient distribution.'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**随机**—用于生成随机数。请注意，我们将对随机数进行种子设置，以确保其有效分布。'
- en: '**Applying the Sigmoid function**'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用 Sigmoid 函数**'
- en: We’ll use the [Sigmoid function](https://en.wikipedia.org/wiki/Sigmoid_function),
    which draws a characteristic “S”-shaped curve, as an activation function to the
    neural network.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 [Sigmoid 函数](https://en.wikipedia.org/wiki/Sigmoid_function)，它绘制了一个典型的“S”形曲线，作为神经网络的激活函数。
- en: '![Sigmoid Function](../Images/23dc35355351fe8b4fbed81bcc47a082.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![Sigmoid Function](../Images/23dc35355351fe8b4fbed81bcc47a082.png)'
- en: This function can map any value to a value from 0 to 1\. It will assist us to
    normalize the weighted sum of the inputs.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数可以将任何值映射到 0 到 1 的范围内。它将帮助我们标准化输入的加权和。
- en: Thereafter, we’ll create the derivative of the Sigmoid function to help in computing
    the essential adjustments to the weights.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将创建 Sigmoid 函数的导数，以帮助计算对权重的必要调整。
- en: The output of a Sigmoid function can be employed to generate its derivative.
    For example, if the output variable is “x”, then its derivative will be x * (1-x).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Sigmoid 函数的输出可以用来生成其导数。例如，如果输出变量为“x”，则其导数为 x * (1-x)。
- en: '**Training the model**'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**训练模型**'
- en: This is the stage where we’ll teach the neural network to make an accurate prediction.
    Every input will have a weight—either positive or negative.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们将教神经网络进行准确预测的阶段。每个输入都会有一个权重—正的或负的。
- en: This implies that an input having a big number of positive weight or a big number
    of negative weight will influence the resulting output more.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着输入具有大正权重或大负权重会对结果输出产生更大影响。
- en: Remember that we initially began by allocating every weight to a random number.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，我们最初开始时将每个权重分配给一个随机数。
- en: 'Here is the procedure for the training process we used in this neural network
    example problem:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们在这个神经网络示例问题中使用的训练过程步骤：
- en: We took the inputs from the training dataset, performed some adjustments based
    on their weights, and siphoned them via a method that computed the output of the
    ANN.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们从训练数据集中获取输入，根据其权重进行了一些调整，并通过计算 ANN 输出的方法将其转移。
- en: We computed the back-propagated error rate. In this case, it is the difference
    between neuron’s predicted output and the expected output of the training dataset.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们计算了反向传播的错误率。在这种情况下，它是神经元预测输出与训练数据集预期输出之间的差异。
- en: Based on the extent of the error got, we performed some minor weight adjustments
    using the [Error Weighted Derivative formula](https://en.wikipedia.org/wiki/Backpropagation#Finding_the_derivative_of_the_error).
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据获得的错误程度，我们使用 [错误加权导数公式](https://en.wikipedia.org/wiki/Backpropagation#Finding_the_derivative_of_the_error)
    进行了一些微调。
- en: We iterated this process an arbitrary number of 15,000 times. In every iteration,
    the whole training set is processed simultaneously.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将这个过程迭代了任意次数，共15,000次。在每次迭代中，整个训练集会同时处理。
- en: 'We used the “.T” function for transposing the matrix from horizontal position
    to vertical position. Therefore, the numbers will be stored this way:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了“.T”函数将矩阵从水平位置转置到垂直位置。因此，数字将以这种方式存储：
- en: '![T Function](../Images/3d92ccc4641d7bf781369d1a550dcd5b.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![T 函数](../Images/3d92ccc4641d7bf781369d1a550dcd5b.png)'
- en: Ultimately, the weights of the neuron will be optimized for the provided training
    data. Consequently, if the neuron is made to think about a new situation, which
    is the same as the previous one, it could make an accurate prediction. This is
    how back-propagation takes place.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，神经元的权重将针对提供的训练数据进行优化。因此，如果神经元被要求处理一个新的情况，而这个情况与之前的情况相同，它可以做出准确的预测。这就是反向传播的过程。
- en: '**Wrapping up**'
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: Finally, we initialized the NeuralNetwork class and ran the code.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们初始化了 NeuralNetwork 类并运行了代码。
- en: 'Here is the entire code for this how to make a neural network in Python project:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这是有关如何在 Python 项目中创建神经网络的完整代码：
- en: '[PRE0]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here is the output for running the code:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这是运行代码后的输出：
- en: '![Code Output](../Images/5837a16e4584cf2dab3d923e14ff06d5.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![代码输出](../Images/5837a16e4584cf2dab3d923e14ff06d5.png)'
- en: We managed to create a simple neural network.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们成功创建了一个简单的神经网络。
- en: The neuron began by allocating itself some random weights. Thereafter, it trained
    itself using the training examples.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 神经元首先分配了一些随机权重。之后，它使用训练样本进行自我训练。
- en: Consequently, if it was presented with a new situation [1,0,0], it gave the
    value of 0.9999584.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果它被展示了一个新的情况 [1,0,0]，它给出了 0.9999584 的值。
- en: You remember that the correct answer we wanted was 1?
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 你记得我们想要的正确答案是 1 吗？
- en: Then, that’s very close—considering that the Sigmoid function outputs values
    between 0 and 1.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，这非常接近——考虑到 Sigmoid 函数的输出值在 0 和 1 之间。
- en: Of course, we only used one neuron network to carry out the simple task. What
    if we connected several thousands of these artificial neural networks together?
    Could we possibly mimic how the human mind works 100%?
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们仅使用了一个神经元网络来完成这个简单的任务。如果我们将几千个这样的人工神经网络连接在一起呢？我们是否能够 100% 模拟人类大脑的工作方式？
- en: Do you have any questions or comments?
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 你有任何问题或评论吗？
- en: Please provide them below.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 请在下面提供它们。
- en: '**Bio**: [Dr. Michael J. Garbade](https://www.linkedin.com/in/garbade) is the
    founder and CEO of Los Angeles-based blockchain education company [LiveEdu](https://www.liveedu.tv/)
    . It’s the world’s leading platform that equips people with practical skills on
    creating complete products in future technological fields, including machine learning.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**个人简介**：[Michael J. Garbade 博士](https://www.linkedin.com/in/garbade) 是位于洛杉矶的区块链教育公司
    [LiveEdu](https://www.liveedu.tv/) 的创始人兼首席执行官。这是世界领先的平台，致力于为人们提供在未来技术领域（包括机器学习）中创建完整产品的实用技能。'
- en: '**Related:**'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关内容：**'
- en: '[More Effective Transfer Learning for NLP](https://www.kdnuggets.com/2018/10/more-effective-transfer-learning-nlp.html)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[更有效的 NLP 转移学习](https://www.kdnuggets.com/2018/10/more-effective-transfer-learning-nlp.html)'
- en: '[Introduction to Deep Learning](https://www.kdnuggets.com/2018/09/introduction-deep-learning.html)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[深度学习介绍](https://www.kdnuggets.com/2018/09/introduction-deep-learning.html)'
- en: '[Basic Image Data Analysis Using Python – Part 3](https://www.kdnuggets.com/2018/09/image-data-analysis-python-p3.html)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 进行基本图像数据分析 – 第 3 部分](https://www.kdnuggets.com/2018/09/image-data-analysis-python-p3.html)'
- en: More On This Topic
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[成为优秀数据科学家所需的 5 项关键技能](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个初学者数据科学家都应该掌握的 6 种预测模型](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
- en: '[The Best ETL Tools in 2021](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2021 年最佳 ETL 工具](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
- en: '[Write Clean Python Code Using Pipes](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用管道编写干净的 Python 代码](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)'
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[为什么 Python 是初创公司的理想编程语言](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个数据科学家都应该知道的三个 R 库（即使你使用 Python）](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
