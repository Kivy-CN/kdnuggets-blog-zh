["```py\nSELECT * FROM feedbacks WHERE rating < 3;\n```", "```py\nSELECT month, sales FROM products ORDER BY month;\n```", "```py\nSELECT users.id, SUM(purchases.amount) FROM users\nJOIN purchases ON users.id = purchases.user_id\nGROUP BY users.id; \n```", "```py\nSELECT section, AVG(time_spent) FROM website_data\nGROUP BY section; \n```", "```py\n# SQL code to find the average age of users in each city\nSELECT city, AVG(age)\nFROM users\nGROUP BY city; \n```", "```py\nimport matplotlib.pyplot as plt\n\n# Assuming grouped_df contains the average age data\nplt.figure(figsize=(10, 6))\nplt.bar(grouped_df['city'], grouped_df['age'], color='blue')\nplt.xlabel('City')\nplt.ylabel('Average Age')\nplt.title('Average Age of Users by City')\nplt.show() \n```", "```py\n-- SQL code to find the daily average loading time\nSELECT DATE(loading_time), AVG(speed)\nFROM website_speed\nGROUP BY DATE(loading_time); \n```", "```py\nimport plotly.express as px\n\nfig = px.line(time_series_df, x='loading_time', y='speed', title='Website Speed Over Time')\nfig \n```", "```py\n-- SQL code to find the current number of active users and average session time\nSELECT COUNT(DISTINCT user_id) as active_users, AVG(session_time)\nFROM user_sessions\nWHERE session_end IS NULL; \n```"]