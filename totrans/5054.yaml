- en: 'Scikit Flow: Easy Deep Learning with TensorFlow and Scikit-learn'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2016/02/scikit-flow-easy-deep-learning-tensorflow-scikit-learn.html](https://www.kdnuggets.com/2016/02/scikit-flow-easy-deep-learning-tensorflow-scikit-learn.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: Google's [TensorFlow](https://github.com/tensorflow/tensorflow) has been publicly
    available since November, 2015, and there is no disputing that, in a few short
    months, it has made an impact on machine learning in general, and on deep learning
    specifically. There is evidence of widespread acceptance via blog posts, academic
    papers, and tutorials all over the web.
  prefs: []
  type: TYPE_NORMAL
- en: It is, of course, difficult to estimate true adoption rates, but TensorFlow's
    Github repository has [nearly twice the number of stars](https://github.com/showcases/machine-learning)
    of both the next most-starred machine learning project, [Scikit-learn](https://github.com/scikit-learn/scikit-learn),
    and closest deep learning project, Berkeley Vision and Learning Center's [Caffe](https://github.com/BVLC/caffe).
    While not concretely indicative of TensorFlow having become the leader in the
    space, it is fairly easy to surmise that, given its fairly recent release, there
    has been considerable interest in, and use of, Google's deep learning library.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '![TensorFlow](../Images/e09c1745abd025c932b954fd964eedfb.png)'
  prefs: []
  type: TYPE_IMG
- en: For the most part, TensorFlow is relatively straightforward to use, and neural
    network afficianados without experience using the library could look at a given
    network's code and get an intuititive sense of what is going on. Syntax **could**
    likely be more to-the-point and concise, without the use of any wrappers, but
    there is a clear reason why it is not. Technically, TensorFlow is "an open source
    software library for numerical computation using data flow graphs," and while
    it is (predominantly) used for machine learning and deep learning research (and
    production), the system is general enough so that it is applicable to a wide array
    of additional domains. If TensorFlow were any more deep learning-friendly, this
    specificity would detract from these potential additional uses.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Yet, one of the reasons why so many machine learning researchers and practitioners
    use Python, the language through which the TensorFlow library API is generally
    accessed, is because of its rapid prototyping abilities. TensorFlow doesn't necessarily
    prohibit this quick turnaround time, per se, yet there **is** a learning curve
    of some sort that comes along with it, especially if one is unfamiliar with other
    similar libraries, such as Theano, for example.
  prefs: []
  type: TYPE_NORMAL
- en: But what if you could pick up TensorFlow and get to training neural networks
    almost immediately, with no concern for learning any additional syntax or configuration?
    That's where Scikit Flow comes in. However, I will first digress momentarily.
  prefs: []
  type: TYPE_NORMAL
- en: Scikit-learn + TensorFlow = Scikit Flow
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Scikit-learn has a rich history as the *de facto* official Python general machine
    learning framework. While I'm sure that sentence will (and can) be disputed, and
    maybe it is a bit strong, there is no denying that Scikit-learn has a prominent
    place in the Python machine learning ecosystem, and in the discipline of machine
    learning in general.
  prefs: []
  type: TYPE_NORMAL
- en: '![Scikit-learn classifiers](../Images/9fa0428e6051ec171b4c183269e92b8d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'And its ease of use and standardized interface have something to do with that.
    For example, Scikit-learn makes use of a simple **fit/predict** workflow model
    [for its classification algorithms](https://github.com/mmmayo13/scikit-learn-classifiers/blob/master/sklearn-classifiers-tutorial.ipynb).
    This makes building, training, and testing models incredibly easy. The relevant
    code of a typical logistic regression model test/train might look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Want to try a Naive Bayes classifier? That doesn''t require much of a change:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The only changes were the import statement on the first line and the classifier
    instantiation statement. Given this, we can easily see the uniformity and conciseness
    of Scikit's model interface. Even if you weren't aware of it before reading this
    you already get it, since there is nothing to it. And while there is, of course,
    more to machine learning pipelines than the 7 lines of code in the above excerpts,
    those 7 lines cover a large and important aspect of it, and covers it the same
    regardless of classifier.
  prefs: []
  type: TYPE_NORMAL
- en: 'And now back to [Scikit Flow (skflow)](https://github.com/tensorflow/skflow):
    Since (almost) everyone in the Python machine learning ecosystem has some knowledge
    of Scikit-learn, what if you could immediately harness the modelling power of
    TensorFlow by channelling the syntactical brevity of Scikit-learn? Scikit Flow
    (the very name name alone alludes to this harnessing and channelling) is officially
    billed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: This is a simplified interface for TensorFlow, to get people started on predictive
    analytics and data mining.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Practically, and more explicitly, Scikit Flow is a high level wrapper for the
    TensorFlow deep learning library, which allows the training and fitting of neural
    networks using the brief, familiar approach of Scikit-learn.
  prefs: []
  type: TYPE_NORMAL
- en: 'To answer the question, "Why Scikit Flow?", its repository README explains:'
  prefs: []
  type: TYPE_NORMAL
- en: To smooth the transition from the Scikit Learn world of one-liner machine learning
    into the more open world of building different shapes of ML models. You can start
    by using fit/predict and slide into TensorFlow APIs as you are getting comfortable.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Scikit-learn + TensorFlow = Scikit Flow](../Images/d11b9270cef82e147c0b7ef846ba4618.png)'
  prefs: []
  type: TYPE_IMG
- en: Importantly, Scikit Flow is an official TensorFlow project coming out of Google;
    it's not a hacked third party solution... not that there's anything wrong with
    that. At all. But the fact that Google has developed, released, and backed this
    project should give you the confidence you need that it **will** allow the 2 libraries
    to work in concert as promised. It's popular, too; at the time of writing, the
    Scikit Flow repo has nearly 1700 stars of its very own.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We will now take a look at a few examples. If you want to play along at home,
    first ensure that you have the following installed:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Python: 2.7, 3.4+'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Scikit learn: 0.16, 0.17, 0.18+'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Tensorflow: 0.6+'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Scikit Flow is easily installed using `pip` with the following single line
    of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: To start out, we will first look at implementing a generic linear classifier
    in Scikit Flow.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: As is evident, the above example follows the similar **fit/predict** model of
    Scikit-learn. If you look at the earlier Scikit-learn models, you will notice
    their similarity to the above.
  prefs: []
  type: TYPE_NORMAL
- en: 'But that''s only a linear classifier, not real deep learning. With deep neural
    networks is where we can see the real power of Scikit Flow. A generic 3 layer
    neural network with 10, 20, and 10 hidden nodes can be easily coded as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Again, very little has changed. Instead of using the TensorFlowLinearClassifier
    from the immediately previous example, we have instead used the TensorFlowDNNClassifier,
    which has allowed us to build, train and test a deep neural classifier in 7 lines
    of (heavily-assisted) code. We have only explicitly specified the number of nodes
    and the number of hidden layers. Scikit Flow also has a stock recurrent neural
    network, some additional classifiers, and as an early work and one of the official
    TensorFlow projects, one could assume additional stock architectures and classifiers
    will soon be added.
  prefs: []
  type: TYPE_NORMAL
- en: For an almost apples to apples comparison, check out the [Scikit Flow](https://github.com/tensorflow/skflow/blob/master/examples/mnist.py)
    and "raw" [TensorFlow](https://www.tensorflow.org/versions/0.6.0/tutorials/mnist/pros/index.html)
    implementations of MNIST image classifiers. There are also [many more examples](https://github.com/tensorflow/skflow/tree/master/examples)
    in the Github repo (including an interesting one which interfaces with [Dask](https://github.com/blaze/dask),
    the parallel processing engine, for out-of-core data classification).
  prefs: []
  type: TYPE_NORMAL
- en: Scikit Flow also allows for mixed-in interaction between low level TensorFlow.
    For those interested in creating architectures at a lower level and then training
    and testing them via a high level interface, Scikit Flow could conceivably be
    a good fit. It may also assist with the distributability of deep architectures;
    when sharing architectures created at a low level, providing the familiar Scikit-learn
    interface for others to train and test with may not be a bad idea, circumstance-dependent,
    of course.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: While skflow may not provide the flexibility of "raw" TensorFlow, the high level
    abstraction allows for the rapid prototyping of neural networks. It also allows
    newcomers to deep learning and TensorFlow become productive almost immediately.
    Given that TensorFlow code can still be written alongside, there is an opportunity
    to mix code and provide even greater flexibility when required.
  prefs: []
  type: TYPE_NORMAL
- en: That Scikit Flow may find a niche in other circumstances, such as model-sharing
    or managing the training and testing of lower-level networks, it seems as though
    Google has produced a well-conceived addition to TensorFlow, an addition that
    certainly will not hinder its further adoption.
  prefs: []
  type: TYPE_NORMAL
- en: '*Update*: A [new Reddit post](https://www.reddit.com/r/MachineLearning/comments/457az3/what_do_you_want_to_see_next_in_tensorflowskflow/)
    from the developers of Scikit Flow is soliciting input on features to add. Have
    an idea? Drop a comment over there.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Matthew Mayo](https://twitter.com/mattmayo13)** is a computer science
    graduate student currently working on his thesis parallelizing machine learning
    algorithms. He is also a student of data mining, a data enthusiast, and an aspiring
    machine learning scientist.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[TensorFlow Disappoints – Google Deep Learning falls shallow](/2015/11/google-tensorflow-deep-learning-disappoints.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Microsoft Deep Learning Brings Innovative Features – CNTK Shows Promise](/2016/02/microsoft-deep-learning-brings-innovative-features.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Steps to Understanding Deep Learning](/2016/01/seven-steps-deep-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Building a solid data team](https://www.kdnuggets.com/2021/12/build-solid-data-team.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Write Clean Python Code Using Pipes](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top Resources for Learning Statistics for Data Science](https://www.kdnuggets.com/2021/12/springboard-top-resources-learn-data-science-statistics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A $9B AI Failure, Examined](https://www.kdnuggets.com/2021/12/9b-ai-failure-examined.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
