- en: How to Build Your Own Logistic Regression Model in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/10/build-logistic-regression-model-python.html](https://www.kdnuggets.com/2019/10/build-logistic-regression-model-python.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: The name of this algorithm could be a little confusing in the sense that the
    Logistic Regression machine learning algorithm is for classification tasks and
    not regression problems. The name ‘Regression’ here implies that a linear model
    is fit into the feature space. This algorithm applies a logistic function to a
    linear combination of features to predict the outcome of a categorical dependent
    variable based on predictor variables. Logistic regression algorithms help estimate
    the probability of falling into a specific level of the categorical dependent
    variable based on the given predictor variables.
  prefs: []
  type: TYPE_NORMAL
- en: Suppose that you want to predict if there will be rain tomorrow in Toronto.
    Here the outcome of the prediction is not a continuous number because there will
    either be rain or no rain and hence linear regression cannot be applied. Here
    the outcome variable is one of the several categories and using logistic regression
    helps.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Applications of Logistic Regression
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Logistic regression algorithm is applied in the field of epidemiology to identify
    risk factors for diseases and plan accordingly for preventive measures.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Used to predict whether a candidate will win or lose a political election or
    to predict whether a voter will vote for a particular candidate.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Used in weather forecasting to predict the probability of rain.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Used in credit scoring systems for risk management to predict the defaulting
    of an account.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Environment and tools
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[numpy](https://numpy.org/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[matplotlib](https://matplotlib.org/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Where is the code?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Without much ado, let’s get started with the code. The complete project on github
    can be found [here](https://github.com/abhinavsagar/Machine-learning-tutorials/blob/master/logistic%20regression/logistic_regression.py).
  prefs: []
  type: TYPE_NORMAL
- en: Let’s start with loading the libraries and dependencies.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The first function is used for defining the sigmoid activation function. The
    plot of the sigmoid function looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/9052a633e687e3cf8857f3300053d52d.png)'
  prefs: []
  type: TYPE_IMG
- en: Sigmoid function
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The sigmoid function is represented as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b0ce537c506a545ebe03b193e995d5cc.png)'
  prefs: []
  type: TYPE_IMG
- en: The sigmoid function also called the logistic function gives an ‘S’ shaped curve
    that can take any real-valued number and map it into a value between 0 and 1\.
    If the curve goes to positive infinity, y predicted will become 1, and if the
    curve goes to negative infinity, y predicted will become 0\. If the output of
    the sigmoid function is more than 0.5, we can classify the outcome as 1 or yes,
    and if it is less than 0.5, we can classify it like 0 or no.
  prefs: []
  type: TYPE_NORMAL
- en: The next function is used for returning the log likelihood value. The parameters
    associated with this function are feature vectors, target value and weights of
    the model.
  prefs: []
  type: TYPE_NORMAL
- en: The log-likelihood is as the term suggests, the natural logarithm of the likelihood.
    In turn, given a sample and a parametric family of distributions (i.e., a set
    of distributions indexed by a parameter) that could have been generated from the
    sample the likelihood is a function that associates to each parameter the probability
    of observing the given sample.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The next function is used to make the logistic regression model. The parameters
    associated with this function are feature vectors, target value, number of steps
    for training, learning rate and a parameter for adding intercept which is set
    to false by default.
  prefs: []
  type: TYPE_NORMAL
- en: First weights are assigned using feature vectors. Next score is calculated using
    dot product of feature and weight vectors. The prediction is found by applying
    the sigmoid function to the score. Now error can be calculated which is the difference
    between target and prediction values. This error is used for finding out the gradient
    which is the dot product of transposed feature vector and error. The new weights
    can be calculated by adding learning rate multiplied by gradient to the old weights.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '`**random()**` function is used to generate random numbers in Python. Seed
    function is used to save the state of random function, so that it can generate
    some random numbers on multiple execution of the code on the same machine or on
    different machines. The seed value chosen is 10 with 10000 data points.'
  prefs: []
  type: TYPE_NORMAL
- en: The multivariate normal is a generalization of the one-dimensional normal distribution
    to higher dimensions. Such a distribution is specified by its mean and covariance
    matrix.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: hstack is used for appending data horizontally while vstack is used for appending
    data vertically. First vstack is used to separate the data points using features
    and then hstack is used for separating the data points using labels.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Let’s visualize the results by plotting the separated data points using scatter
    function where alpha blending value is chosen to be 0.3\. The blending value can
    range between 0 (transparent) and 1 (opaque).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Results
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Figure](../Images/1d6f43f3168a908d86c3d3c4483e9ec3.png)'
  prefs: []
  type: TYPE_IMG
- en: Classification of sample data points
  prefs: []
  type: TYPE_NORMAL
- en: Conclusions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To conclude, I demonstrated how to make a logistic regression model from scratch
    in python. Logistic regression is a widely used supervised machine learning technique.
    It is one of the best tools for statisticians, researchers and data scientists
    in predictive analytics. It offers several advantages like it is a robust algorithm
    as the independent variables need not have equal variance or normal distribution,
    do not assume a linear relationship between the dependent and independent variables
    and hence can also handle non-linear effects and they are also easier to inspect
    and less complex.
  prefs: []
  type: TYPE_NORMAL
- en: References/Further Readings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[**Logistic Regression — Detailed Overview**'
  prefs: []
  type: TYPE_NORMAL
- en: Logistic Regression was used in the biological sciences in early twentieth century.
    It was then used in many social…](https://towardsdatascience.com/logistic-regression-detailed-overview-46c4da4303bc?source=post_page-----de8d2d8feae5----------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '[**Tips for honing your logistic regression models | Zopa Blog**'
  prefs: []
  type: TYPE_NORMAL
- en: When we create our Credit Risk assessment or Fraud prevention machine learning
    models at Zopa, we use a variety of…](https://blog.zopa.com/2017/07/20/tips-honing-logistic-regression-models/?source=post_page-----de8d2d8feae5----------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '[**Logistic Regression: Concept & Application | Blog | Dimensionless**'
  prefs: []
  type: TYPE_NORMAL
- en: Through this article, we try to understand the concept of the logistic regression
    and its application. We will, as…](https://dimensionless.in/logistic-regression-concept-application/?source=post_page-----de8d2d8feae5----------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Before You Go
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The corresponding source code can be found here.
  prefs: []
  type: TYPE_NORMAL
- en: '[**abhinavsagar/Machine-learning-tutorials**'
  prefs: []
  type: TYPE_NORMAL
- en: You can't perform that action at this time. You signed in with another tab or
    window. You signed out in another tab or…](https://github.com/abhinavsagar/Machine-learning-tutorials/blob/master/logistic%20regression/logistic_regression.py?source=post_page-----de8d2d8feae5----------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Contacts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you want to keep updated with my latest articles and projects [follow me
    on Medium](https://medium.com/@abhinav.sagar). These are some of my contacts details:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Personal Website](https://abhinavsagar.github.io/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Linkedin](https://in.linkedin.com/in/abhinavsagar4)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Medium Profile](https://medium.com/@abhinav.sagar)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[GitHub](https://github.com/abhinavsagar)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Kaggle](https://www.kaggle.com/abhinavsagar)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Happy reading, happy learning and happy coding.
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Abhinav Sagar](https://www.linkedin.com/in/abhinavsagar4)** is a senior
    year undergrad at VIT Vellore. He is interested in data science, machine learning
    and their applications to real-world problems.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/how-to-build-your-own-logistic-regression-model-in-python-de8d2d8feae5).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Logistic Regression: A Concise Technical Overview](/2019/01/logistic-regression-concise-technical-overview.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Convolutional Neural Network for Breast Cancer Classification](/2019/10/convolutional-neural-network-breast-cancer-classification.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Easily Deploy Machine Learning Models Using Flask](/2019/10/easily-deploy-machine-learning-models-using-flask.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Building Predictive Models: Logistic Regression in Python](https://www.kdnuggets.com/building-predictive-models-logistic-regression-in-python)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[LangChain 101: Build Your Own GPT-Powered Applications](https://www.kdnuggets.com/2023/04/langchain-101-build-gptpowered-applications.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Build Your Own PandasAI with LlamaIndex](https://www.kdnuggets.com/build-your-own-pandasai-with-llamaindex)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Comparing Linear and Logistic Regression](https://www.kdnuggets.com/2022/11/comparing-linear-logistic-regression.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[An Overview of Logistic Regression](https://www.kdnuggets.com/2022/02/overview-logistic-regression.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Linear vs Logistic Regression: A Succinct Explanation](https://www.kdnuggets.com/2022/03/linear-logistic-regression-succinct-explanation.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
