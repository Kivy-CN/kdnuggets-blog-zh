- en: Building a Recommender System for Amazon Products with Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 为 Amazon 产品构建推荐系统
- en: 原文：[https://www.kdnuggets.com/2023/02/building-recommender-system-amazon-products-python.html](https://www.kdnuggets.com/2023/02/building-recommender-system-amazon-products-python.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2023/02/building-recommender-system-amazon-products-python.html](https://www.kdnuggets.com/2023/02/building-recommender-system-amazon-products-python.html)
- en: '![Building a Recommender System for Amazon Products with Python](../Images/3f776ba892d59933aec09a0e9ab3bd92.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Python 为 Amazon 产品构建推荐系统](../Images/3f776ba892d59933aec09a0e9ab3bd92.png)'
- en: Photo by [Marques Thomas](https://unsplash.com/@querysprout?utm_source=medium&utm_medium=referral) on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由 [Marques Thomas](https://unsplash.com/@querysprout?utm_source=medium&utm_medium=referral)
    提供，来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Introduction
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三个课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google 数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你在 IT 领域的组织'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: The project’s goal is to **partially recreate** the **Amazon Product Recommender
    System** for the **Electronics** product category.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目的目标是**部分重建****Amazon 产品推荐系统**，针对**电子产品**类别。
- en: It’s November and **Black Friday** is here! What type of shopper are you? Do
    you save all the products you would like to buy for the day or would you rather
    open the website and see the **live offers** with their great discounts?
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是十一月，**黑色星期五**来了！你是什么类型的购物者？你会把所有想买的产品都保存到那一天，还是更愿意打开网站查看**实时优惠**及其巨大折扣？
- en: Even though online shops have been incredibly successful in the past decade,
    showing huge potential and growth, one of the fundamental differences between
    a physical and online store is the consumers’ **impulse purchases**.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在线商店在过去十年中取得了巨大的成功，显示出巨大的潜力和增长，但实体店和在线商店之间的一个根本区别是消费者的**冲动购买**。
- en: If clients are presented with an **assortment of products**, they’re much more
    likely to purchase an item they didn’t originally plan on purchasing. The **phenomenon** of **impulse
    buying** is incredibly **limited** by the configuration of an **online** store.
    The same **does not happen** for their **physical** counterparts. The biggest
    physical retail chains make their customers go through a **precise path** to ensure
    they visit every aisle before exiting the store.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果客户面临一个**产品组合**，他们更有可能购买原本没有计划购买的商品。**冲动购买**的**现象**在**在线**商店的配置下受到极大的**限制**。而**实体**店则不会发生这种情况。最大的实体零售连锁店会让顾客经过一个**精确的路径**，以确保他们在离开商店之前访问每个货架。
- en: A way online stores like Amazon thought could **recreate** an impulse buying
    phenomenon is through **recommender systems**. Recommender systems identify the **most
    similar** or **complementary** products the customer just bought or viewed. The
    intent is to maximize the **random purchases** phenomenon that online stores normally
    lack.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 像 Amazon 这样的在线商店认为，**重新创建**冲动购买现象的一种方法是通过**推荐系统**。推荐系统识别出**最相似**或**互补**的产品，客户刚刚购买或浏览的产品。其目的是最大化在线商店通常缺乏的**随机购买**现象。
- en: '**Purchasing on Amazon** made me quite interested in the mechanics and I wanted
    to** re-create **(even partially) the results of their recommender system.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**在 Amazon 上购物**让我对推荐系统的机制产生了浓厚的兴趣，我希望**重新创建**（即使只是部分地）它们推荐系统的结果。'
- en: According to the blog “Recostream”, the Amazon product recommender system has **three
    types of dependencies**, one of them being **product-to-product recommendations**.
    When a user has virtually no search history, the algorithm clusters products together
    and suggests them to that same user based on the items’ metadata.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 根据博客“Recostream”，亚马逊的产品推荐系统有**三种依赖关系**，其中之一是**产品对产品推荐**。当用户几乎没有搜索历史时，算法会将产品进行聚类，并根据商品的元数据向同一用户推荐这些产品。
- en: The Data
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据
- en: The first step of the project is gathering the **data**. Luckily, the researchers
    at the **University of California** in San Diego have a repository to let the
    students, and individuals outside of the organization, use the data for research
    and projects. Data can be accessed through the following [link](http://jmcauley.ucsd.edu/data/amazon/links.html) along
    with **many other interesting datasets** related to recommender systems[2][3].
    The product metadata was **last updated in 2014**; a lot of the products might
    not be available today.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 项目的第一步是收集**数据**。幸运的是，加州大学圣地亚哥分校的研究人员有一个仓库，让学生和组织外的个人使用这些数据进行研究和项目。数据可以通过以下[链接](http://jmcauley.ucsd.edu/data/amazon/links.html)访问，并且有**许多其他有趣的数据集**与推荐系统相关[2][3]。产品元数据**最后更新于2014年**；许多产品可能现在已经不再可用。
- en: 'The electronics category metadata contains **498,196 records** and has **8
    columns** in total:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 电子产品类别的元数据包含**498,196条记录**，总共有**8列**。
- en: '`asin` — the unique ID associated with each product'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`asin` — 每个产品的唯一ID'
- en: '`imUrl` — the URL link of the image associated with each product'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`imUrl` — 每个产品关联的图片URL链接'
- en: '`description` — The product’s description'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`description` — 产品的描述'
- en: '`categories` — a python list of all the categories each product falls into'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`categories` — 所有产品所属类别的 Python 列表'
- en: '`title` — the title of the product'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`title` — 产品的标题'
- en: '`price` — the price of the product'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`price` — 产品的价格'
- en: '`salesRank` — the ranking of each product within a specific category'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`salesRank` — 每个产品在特定类别中的排名'
- en: '`related` — products viewed and bought by customers related to each product'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`related` — 与每个产品相关的客户浏览和购买的产品'
- en: '`brand` — the brand of the product.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`brand` — 产品的品牌'
- en: You will notice that the file is in a “loose” `JSON` format, where each line
    is a `JSON `containing all the columns previously mentioned as one of the fields.
    We’ll see how to deal with this in the code deployment section.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到文件采用了“松散”的`JSON`格式，每一行是一个`JSON`，包含之前提到的所有列作为字段。我们将在代码部署部分看到如何处理这个问题。
- en: EDA
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索性数据分析
- en: Let’s start with a quick Exploratory Data Analysis. After **cleaning all the
    records** that contained at least a `NaN` value in one of the columns, I created
    the visualizations for the electronics category.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从快速的探索性数据分析开始。经过**清理所有包含至少一个`NaN`值的记录**后，我创建了电子产品类别的可视化图。
- en: '![Building a Recommender System for Amazon Products with Python](../Images/4dabaf4aa97a121f6cc23ea6b20514ad.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![构建亚马逊产品推荐系统（Python）](../Images/4dabaf4aa97a121f6cc23ea6b20514ad.png)'
- en: Price Boxplot with Outliers — Image by Author
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 带有异常值的价格箱线图 — 作者图片
- en: The first chart is a **boxplot** showing the maximum, minimum, 25th percentile,
    75th percentile, and average price of each product. For example, we know the **maximum** worth
    of a product is going to be $1000, whereas the **minimum** is around $1\. The
    line above the $160 mark is made of **dots**, and each of these dots identifies
    an **outlier**. An outlier represents a record only happening once in the whole
    dataset. As a result, we know that there is only 1 product priced at around $1000.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个图表是**箱线图**，显示了每个产品的最大值、最小值、25百分位数、75百分位数和平均价格。例如，我们知道一个产品的**最大**价值是1000美元，而**最小**价值约为1美元。160美元标记以上的线由**点**构成，每个点代表一个**异常值**。异常值表示数据集中仅出现一次的记录。因此，我们知道只有一个产品的价格接近1000美元。
- en: The **average** price seems to be around the $25 mark. It is important to note
    that the library `matplotlib` automatically excludes outliers with the option`showfliers=False`.
    In order to make our boxplot look cleaner we can set the parameter equal to false.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**平均**价格似乎在25美元左右。重要的是要注意，库`matplotlib`自动排除异常值，选项为`showfliers=False`。为了让我们的箱线图看起来更干净，我们可以将参数设置为false。'
- en: '![Building a Recommender System for Amazon Products with Python](../Images/76f444d4bd5a06863c75c073431c478d.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![构建亚马逊产品推荐系统（Python）](../Images/76f444d4bd5a06863c75c073431c478d.png)'
- en: Price Boxplot — Image by Author
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 价格箱线图 — 作者图片
- en: The result is a much cleaner Boxplot without the outliers. The chart also suggests
    that the vast majority of electronics products are priced around the $1 to $160
    range.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个更干净的箱线图，没有离群值。图表还建议，绝大多数电子产品的价格在 1 到 160 美元之间。
- en: '![Building a Recommender System for Amazon Products with Python](../Images/9bdc4e7f113b83420ec086cd4cf63a26.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![用 Python 为 Amazon 产品构建推荐系统](../Images/9bdc4e7f113b83420ec086cd4cf63a26.png)'
- en: Top 10 Brands by Number of Products Listed — Image by Author
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 按上市产品数量排序的前 10 个品牌 — 作者提供的图像
- en: The chart shows the **top 10 brands** by the number of **listed products** selling
    on Amazon within the Electronics category. Among them, there are HP, Sony, Dell,
    and Samsung.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图表显示了在电子产品类别中，**前 10 个品牌**按**上市产品数量**排序。其中包括 HP、Sony、Dell 和 Samsung。
- en: '![Building a Recommender System for Amazon Products with Python](../Images/aec9cd7244aaaf6064eebece50d4efdd.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![用 Python 为 Amazon 产品构建推荐系统](../Images/aec9cd7244aaaf6064eebece50d4efdd.png)'
- en: Top 10 Retailers Pricing Boxplot — Image by Author
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 前 10 大零售商定价箱线图 — 作者提供的图像
- en: Finally, we can see the **price distribution** for each of the **top 10 sellers**.
    Sony and Samsung definitely offer a **wide range of products**, from a few dollars
    all the way to $500 and $600, as a result, their average price is higher than
    most of the top competitors. Interestingly enough, **SIB and SIB-CORP** offer
    more products but at a much more affordable price on average.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以看到**前 10 大卖家的价格分布**。Sony 和 Samsung 确实提供了**种类繁多的产品**，从几美元到 500 和 600 美元不等，因此它们的平均价格高于大多数顶级竞争对手。有趣的是，**SIB
    和 SIB-CORP** 提供了更多的产品，但平均价格要便宜得多。
- en: The chart also tells us that Sony offers products that are roughly 60% of the
    highest-priced product in the dataset.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图表还告诉我们，Sony 提供的产品价格大约是数据集中最高价产品的 60%。
- en: Cosine Similarity
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 余弦相似度
- en: A possible solution to cluster products together by their characteristics is **cosine
    similarity**. We need to understand this concept thoroughly to then build our
    recommender system.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 将产品按其特征进行聚类的一个可能解决方案是**余弦相似度**。我们需要彻底理解这个概念，然后构建我们的推荐系统。
- en: '**Cosine similarity** measures how “close” two sequences of numbers are. How
    does it apply to our case? Amazingly enough, sentences can be transformed into
    numbers, or better, into vectors.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**余弦相似度**衡量两个数字序列的“接近”程度。这在我们的案例中如何应用呢？令人惊讶的是，句子可以被转换成数字，或者更好地，转换成向量。'
- en: Cosine similarity can take values **between -1 and 1**, where **1** indicates
    two vectors are **formally the same** whereas **-1** indicates they’re as **different** as
    they can get.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦相似度的值可以在**-1 和 1 之间**，其中**1**表示两个向量**完全相同**，而**-1**表示它们**完全不同**。
- en: Mathematically, **cosine similarity** is the dot product of two multidimensional
    vectors divided by the product of their magnitude [4]. I understand there are
    a lot of bad words in here but let’s try to break it down using a practical example.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 从数学上讲，**余弦相似度**是两个多维向量的点积除以它们的大小乘积 [4]。我知道这里有很多复杂的术语，但让我们通过一个实际的例子来分解它。
- en: 'Let’s suppose we’re** analyzing document A** and **document B**. Document A
    has three most common terms: “today”, “good”, and “sunshine” which respectively
    appear 4, 2, and 3 times. The same three terms in document B appear 3, 2, and
    2 times. We can therefore write them like the following:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们正在**分析文档 A**和**文档 B**。文档 A 中最常见的三个词是：“today”、“good”和“sunshine”，分别出现了 4 次、2
    次和 3 次。文档 B 中相同的三个词分别出现了 3 次、2 次和 2 次。因此，我们可以这样写：
- en: A = (2, 2, 3) ; B = (3, 2, 2)
  id: totrans-53
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: A = (2, 2, 3) ; B = (3, 2, 2)
- en: 'The formula for the **dot product** of two vectors can be written as:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 两个向量的**点积**公式可以写成：
- en: Their vector **dot product** is no other than 2x3 + 2x2 + 3x2 = 16
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 它们的向量**点积**是 2x3 + 2x2 + 3x2 = 16
- en: 'The **single vector magnitude** on the other hand is calculated as:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，**单个向量的大小**计算为：
- en: If I apply the formula I get
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我应用公式，我得到
- en: '||A|| = 4.12 ; ||B|| = 4.12'
  id: totrans-58
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '||A|| = 4.12 ; ||B|| = 4.12'
- en: their cosine similarity is therefore
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 因此它们的余弦相似度是
- en: 16 / 17 = 0.94 = 19.74°
  id: totrans-60
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 16 / 17 = 0.94 = 19.74°
- en: the two vectors are very similar.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个向量非常相似。
- en: As of now, we calculated the score only **between two vectors** with **three
    dimensions**. A word vector can virtually have **an infinite number** of dimensions
    (depending on how many words it contains) but the logic behind the process is
    mathematically the same. In the next section, we’ll see how to apply all the concepts
    in practice.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只计算了**两个向量之间**的**三维**分数。一个词向量可以有**无限多个**维度（取决于它包含多少个词），但处理过程中的逻辑在数学上是相同的。在下一节中，我们将看到如何将所有概念应用于实践。
- en: Code Deployment
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码部署
- en: Let’s move on to the **code deployment phase** to build our recommender system
    on the dataset.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进入**代码部署阶段**，在数据集上构建我们的推荐系统。
- en: Importing the libraries
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入库
- en: 'The first cell of every data science notebook should **import the libraries, **the
    ones we need for the project are:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 每个数据科学笔记本的第一个单元格应当**导入所需的库**，我们项目所需的库包括：
- en: '[PRE0]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`gzip` unzips the data files'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`gzip` 解压数据文件'
- en: '`json` decodes them'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`json` 解码它们'
- en: '`pandas` transforms JSON data into a more manageable dataframe format'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas` 将JSON数据转换为更易管理的数据框格式'
- en: '`tqdm` creates progress bars'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tqdm` 创建进度条'
- en: '`nltk` to process text strings'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nltk` 用于处理文本字符串'
- en: '`re` provides regular expression support'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`re` 提供正则表达式支持'
- en: finally, `sklearn` is needed for text pre-processing
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，`sklearn` 是进行文本预处理所需的
- en: Reading the data
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 读取数据
- en: As previously mentioned, the data has been uploaded in a **loose JSON** format.
    The solution to this issue is first to transform the file into **JSON readable
    format lines** with the command `json.dumps` . Then, we can transform this file
    into a **python list** made of JSON lines by setting `\n` as the linebreak. Finally,
    we can append each line to the `data` empty list while reading it **as a JSON** with
    the command `json.loads` .
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，数据以**松散的JSON**格式上传。解决此问题的方法是首先使用命令`json.dumps`将文件转换为**JSON可读格式行**。然后，我们可以通过将`\n`设置为换行符，将该文件转换为**python列表**，其中包含JSON行。最后，我们可以在读取时**作为JSON**将每行附加到`data`空列表中，命令为`json.loads`。
- en: With the command `pd.DataFrame` the `data` list is read as a dataframe that
    we can now use to build our recommender.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 使用命令`pd.DataFrame`，`data`列表被读取为数据框，我们现在可以用来构建我们的推荐系统。
- en: '[PRE1]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: To give you an idea of how each line of the `data` list looks like we can run
    a **simple command** `print(data[0])` , the console **prints the line at index
    0**.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让你了解`data`列表中每一行的样子，我们可以运行一个**简单的命令** `print(data[0])`，控制台**打印出索引0处的行**。
- en: '[PRE2]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: As you can see the output is a JSON file, it has the `{}` to open and close
    the string, and each column name is followed by the `:` and the correspondent
    string. You can notice this first product is missing the `price`, `salesRank`, `related`,
    and `brand information` . Those columns are automatically filled with `NaN` values.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，输出是一个JSON文件，它有`{}`来开闭字符串，每个列名后面跟着`:`和相应的字符串。你可以注意到第一个产品缺少`price`、`salesRank`、`related`和`brand
    information`。这些列自动填充为`NaN`值。
- en: 'Once we read the entire list as a dataframe, the electronics products show
    the following 8 features:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们将整个列表读取为数据框，电子产品展示了以下8个特征：
- en: '[PRE3]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Feature Engineering
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特征工程
- en: '**Feature engineering** is responsible for **data cleaning and creating** the
    column in which we’ll calculate **the cosine similarity score**. Because of RAM
    memory limitations, I didn’t want the columns to be particularly long, as a review
    or product description could be. Conversely, I decided to create a **“data soup”** with
    the `categories`, `title`, and `brand `columns. Before that though, we need to
    eliminate every single row that contains a NaN value in either one of those three
    columns.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**特征工程**负责**数据清理和创建**我们将用来计算**余弦相似度分数**的列。由于RAM内存限制，我不希望这些列特别长，例如评论或产品描述。相反，我决定创建一个**“数据汤”**，包括`categories`、`title`和`brand`列。在此之前，我们需要删除每一行中包含NaN值的列。'
- en: The selected columns contain valuable and essential information in the form
    of text we need for our recommender. The `description` column could also be a
    potential candidate but the string is often too long and it’s not standardized
    across the entire dataset. It doesn’t represent a reliable enough piece of information
    for what we’re trying to accomplish.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 选择的列包含我们推荐系统所需的有价值和基本的信息形式。`description`列也可能是一个潜在的候选列，但字符串通常过长，并且在整个数据集中不标准化。它不是我们要实现目标的可靠信息。
- en: '[PRE4]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'After running this first portion of code, the rows vertiginously decrease from **498,196** to
    roughly **142,000**, a big change. It’s only at this point we can create the so-called
    data soup:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行这部分代码后，行数从**498,196**急剧减少到大约**142,000**，变化很大。只有在这个时候我们才能创建所谓的数据集合：
- en: '[PRE5]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The name of the **brand** needs to be included since the title does not always
    contain it.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 由于标题中不总是包含品牌名称，因此需要包含**品牌**。
- en: Now I can move on to the **cleaning portion**. The function `text_cleaning` is
    responsible for removing every `amp` string from the ensemble column. On top of
    that, the string`[^A-Za-z0–9]` filters out every **special character**. Finally,
    the last line of the function eliminates every **stopword** the string contains.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我可以进入**清理部分**。函数`text_cleaning`负责从ensemble列中删除每一个`amp`字符串。此外，字符串`[^A-Za-z0–9]`过滤掉每一个**特殊字符**。最后，函数的最后一行消除字符串中包含的每一个**停用词**。
- en: '[PRE6]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: With the **lambda function**, we can apply `text_cleaning` to the entire column
    called `ensemble` , we can randomly select a data soup of a random product by
    calling `iloc` and indicating the index of the random record.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**lambda函数**，我们可以将`text_cleaning`应用于名为`ensemble`的整列数据，我们可以通过调用`iloc`并指定随机记录的索引来随机选择一个产品的数据集合。
- en: '[PRE7]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The record on the** 10001st row** (indexing starts from 0) is the **vcool VGA
    cooler from Antec**. This is a scenario in which the brand name was not in the
    title.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在**第10001行**（索引从0开始）的记录是**来自Antec的vcool VGA冷却器**。这是一个品牌名称不在标题中的情况。
- en: Cosine Computation and Recommender Function
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 余弦计算和推荐函数
- en: The computation of cosine similarity starts with **building a matrix containing
    all the words that ever appear in the ensemble column**. The method we’re going
    to use is called “**Count Vectorization**” or more commonly “**Bag of words**”.
    If you’d like to read more about count vectorization, you can read one of my previous
    articles at the following [link](https://medium.com/mlearning-ai/a-bow-vs-a-tfidf-feature-extractor-a-practical-application-on-a-na%C3%AFve-bayes-classifier-in-python-a68e8fb2248c).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦相似度的计算开始于**构建一个包含ensemble列中所有出现过的单词的矩阵**。我们将使用的方法称为“**计数向量化**”或更常见的“**词袋模型**”。如果你想了解更多关于计数向量化的内容，可以阅读我以前的一篇文章，点击以下[链接](https://medium.com/mlearning-ai/a-bow-vs-a-tfidf-feature-extractor-a-practical-application-on-a-na%C3%AFve-bayes-classifier-in-python-a68e8fb2248c)。
- en: Because of RAM limitations, the cosine similarity score will be computed only
    on the first **35,000** records out of the **142,000** available after the pre-processing
    phase. This most likely affects the final performance of the recommender.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 由于RAM的限制，余弦相似度分数将仅在**35,000**条记录中计算，而不是在**142,000**条经过预处理阶段的记录中。这很可能会影响推荐系统的最终性能。
- en: '[PRE8]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The command `cosine_similarity` , as the name suggests, calculates cosine similarity
    for each line in the `count_matrix` . Each line on the `count_matrix` is no other
    than a vector with the word count of every word that appears in the ensemble column.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 命令`cosine_similarity`顾名思义，会计算`count_matrix`中每一行的余弦相似度。`count_matrix`中的每一行就是每个出现在ensemble列中的单词的词频向量。
- en: '[PRE9]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Before running the **actual recommender system**, we need to make sure to create
    an index and that this index has no duplicates.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行**实际推荐系统**之前，我们需要确保创建一个索引，并且该索引没有重复项。
- en: It’s only at this point we can define the `content_recommender`function. It
    has 4 arguments: `title`, `cosine_sim`, `df`, and `indices`. The title will be
    the only element to input when calling the function.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在这个时候我们才能定义`content_recommender`函数。它有4个参数：`title`、`cosine_sim`、`df`和`indices`。调用函数时，标题将是唯一的输入元素。
- en: '`content_recommender` works in the following way:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '`content_recommender`的工作方式如下：'
- en: It finds the **product’s index** associated with the title the user provides
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它找到与用户提供的标题相关的**产品索引**。
- en: It searches the product’s index within the **cosine similarity matrix** and
    gathers all the scores of all the products
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它在**余弦相似度矩阵**中搜索产品的索引，并收集所有产品的所有分数。
- en: It **sorts** all the scores from the **most similar product** (closer to 1)
    to the least similar (closer to 0)
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它**排序**所有分数，从**最相似的产品**（接近1）到最不相似的（接近0）。
- en: It only selects the **first 30 most similar** products
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它仅选择**前30个最相似**的产品。
- en: It adds an index and **returns a pandas series** with the result
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它添加一个索引并**返回一个pandas系列**作为结果。
- en: '[PRE10]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Now let’s test it on the “Vcool VGA Cooler”. We want 30 products that are similar
    and customers would be interested in buying. By running the command `content_recommender(product_title)` ,
    the **function returns a list of 30 recommendations**.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在“Vcool VGA Cooler”上进行测试。我们需要30个相似的产品，且顾客可能有兴趣购买。通过运行命令`content_recommender(product_title)`，**函数返回了30条推荐列表**。
- en: '[PRE11]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Among the **5 most similar products** we find other Antec products such as the
    Tricool Computer Case Fan, the Expansion Slot Cooling Fan, and so forth.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在**5个最相似的产品**中，我们找到了其他Antec产品，如Tricool计算机机箱风扇、扩展槽散热风扇等。
- en: '[PRE12]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The `related` column in the original dataset contains a list of products consumers
    also bought, bought together, and bought after viewing the VGA Cooler.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 原始数据集中的`related`列包含了消费者还购买的产品、一起购买的产品以及在查看VGA Cooler后购买的产品列表。
- en: '[PRE13]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: By printing the head of the python dictionary in that column the console returns
    the following dataset.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 通过打印该列的Python字典头部，控制台返回了以下数据集。
- en: '[PRE14]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Let’s test if our recommender did well. Let’s see if some of the `asin` ids
    in the `also_bought` list are present in the recommendations.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们测试一下我们的推荐系统是否表现良好。查看`asin` id 是否在`also_bought`列表中的推荐中出现。
- en: '[PRE15]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Our recommender correctly suggested** 5 out of 44 products.**
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的推荐系统正确建议了**44个产品中的5个**。
- en: '[PRE16]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: I agree it’s **not an optimal result** but considering we only used **35,000** out
    of the **498,196** rows available in the full dataset, it’s acceptable. It certainly
    has a lot of room for improvement. If NaN values were less frequent or even non-existent
    for target columns, recommendations could be more accurate and close to the actual
    Amazon ones. Secondly, having access to **larger RAM memory**, or even distributed
    computing, could allow the practitioner to compute even larger matrices.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我同意这**不是最佳结果**，但考虑到我们仅使用了**35,000**行数据中的**498,196**行，它是可以接受的。这显然还有很大的改进空间。如果NaN值在目标列中较少甚至不存在，推荐可能会更准确，更接近实际的Amazon推荐。其次，拥有**更大的RAM内存**或甚至分布式计算，可以使实践者计算更大的矩阵。
- en: Conclusion
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: I hope you enjoyed the project and that it’ll be useful for any future use.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你喜欢这个项目，并且它对未来使用会有所帮助。
- en: As mentioned in the article, the final result can be further improved by **including
    all lines of the dataset** in the cosine similarity matrix. On top of that, we
    could add each product’s **review average score** by merging the metadata dataset
    with others available in the repository. We could **include the price** in the
    computation of the cosine similarity. Another possible improvement could be building
    a recommender system completely based on each **product’s descriptive **images.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 正如文章中提到的，通过**包含数据集中的所有行**在余弦相似度矩阵中，最终结果可以进一步改进。此外，我们还可以通过将元数据集与其他可用的数据集合并来添加每个产品的**评论平均分数**。我们可以在余弦相似度计算中**包括价格**。另一个可能的改进是建立一个完全基于每个**产品描述性**图像的推荐系统。
- en: The main solutions for further improvements have been listed. Most of them are
    even worth pursuing from the perspective of future implementation into actual **production**.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 列出了进一步改进的主要解决方案。其中大多数从未来实际**生产**的实施角度来看都是值得追求的。
- en: '* * *'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '*As a final note, if you liked the content please consider dropping a follow
    to be notified when new articles are published. If you have any observations about
    the article, write them in the comments! I’d love to read them :) Thank you for
    reading!*'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '*最后，如果你喜欢这个内容，请考虑关注，以便在发布新文章时收到通知。如果你对文章有任何观察，请在评论中写出来！我很愿意阅读 :) 谢谢阅读！*'
- en: '*PS: If you like my writing, it would mean the world to me if you could subscribe
    to a medium membership through *[*this link*](https://giovanni-valdata.medium.com/membership)*.
    With the membership, you get the amazing value that medium articles provide and
    it’s an indirect way of supporting my content!*'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '*PS：如果你喜欢我的写作，能通过*[*这个链接*](https://giovanni-valdata.medium.com/membership)*订阅Medium会员对我来说意义重大！通过会员，你可以获得Medium文章提供的惊人价值，并且这也是支持我内容的一种间接方式！*'
- en: Reference
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考
- en: '[1] Amazon’s Product Recommendation System In 2021: How Does The Algorithm
    Of The eCommerce Giant Work? — Recostream. (2021). Retrieved November 1, 2022,
    from Recostream.com website: [https://recostream.com/blog/amazon-recommendation-system](https://recostream.com/blog/amazon-recommendation-system)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] 亚马逊产品推荐系统2021：电商巨头的算法如何运作？— Recostream。（2021）。从Recostream.com网站检索： [https://recostream.com/blog/amazon-recommendation-system](https://recostream.com/blog/amazon-recommendation-system)'
- en: '[2] He, R., & McAuley, J. (2016, April). Ups and downs: Modeling the visual
    evolution of fashion trends with one-class collaborative filtering. In *Proceedings
    of the 25th international conference on world wide web* (pp. 507–517).'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] He, R., & McAuley, J. (2016年4月). 高潮与低谷：通过单类协同过滤建模时尚趋势的视觉演变。收录于*第25届国际万维网会议论文集*（第507–517页）。'
- en: '[3] McAuley, J., Targett, C., Shi, Q., & Van Den Hengel, A. (2015, August).
    Image-based recommendations on styles and substitutes. In *Proceedings of the
    38th international ACM SIGIR conference on research and development in information
    retrieval* (pp. 43–52).'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] McAuley, J., Targett, C., Shi, Q., & Van Den Hengel, A. (2015年8月). 基于图像的风格与替代品推荐。收录于*第38届国际ACM
    SIGIR信息检索研究与发展会议论文集*（第43–52页）。'
- en: '[4] Rahutomo, F., Kitasuka, T., & Aritsugi, M. (2012, October). Semantic cosine
    similarity. In *The 7th international student conference on advanced science and
    technology ICAST* (Vol. 4, ?1, p. 1).'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '[4] Rahutomo, F., Kitasuka, T., & Aritsugi, M. (2012年10月). 语义余弦相似度。收录于*第7届国际学生高级科学与技术会议ICAST*（第4卷，?1，第1页）。'
- en: '[5] Rounak Banik. 2018\. Hands-On Recommendation Systems with Python: Start
    building powerful and personalized, recommendation engines with Python.* Packt
    Publishing.*'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '[5] Rounak Banik. 2018年。使用Python的实用推荐系统：开始构建强大且个性化的推荐引擎。*Packt Publishing*。'
- en: '**[Giovanni Valdata](https://www.linkedin.com/in/giovanni-valdata/)** holds
    two BBAs and a Msc. in Management, at the end of which leveraged NLP for his thesis
    in Data Science and Management. Giovanni enjoys helping readers to learn more
    about the field by developing technical projects with practical applications.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Giovanni Valdata](https://www.linkedin.com/in/giovanni-valdata/)** 拥有两个BBA学位和一个管理学硕士学位，在硕士期间将自然语言处理应用于数据科学与管理的论文。Giovanni喜欢通过开发具有实际应用的技术项目，帮助读者更好地了解该领域。'
- en: '[Original](https://towardsdatascience.com/building-a-recommender-system-for-amazon-products-with-python-8e0010ec772c).
    Reposted with permission.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '[原始](https://towardsdatascience.com/building-a-recommender-system-for-amazon-products-with-python-8e0010ec772c)。经许可转载。'
- en: More On This Topic
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Next Level AI Programming: Prompt Design & Building AI Products](https://www.kdnuggets.com/2023/03/corise-prompt-design-building-ai-products.html)'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[下一阶段的AI编程：提示设计与构建AI产品](https://www.kdnuggets.com/2023/03/corise-prompt-design-building-ai-products.html)'
- en: '[Building AI Products with OpenAI: A Free Course from CoRise](https://www.kdnuggets.com/2023/07/corise-building-ai-products-openai-free-course-corise.html)'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[与OpenAI一起构建AI产品：CoRise提供的免费课程](https://www.kdnuggets.com/2023/07/corise-building-ai-products-openai-free-course-corise.html)'
- en: '[Supercharge Your AI Journey! Join Uplimit''s Free Building AI…](https://www.kdnuggets.com/2024/01/uplimit-supercharge-your-ai-journey-openai-course)'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[让您的AI之旅更上一层楼！加入Uplimit的免费AI构建课程](https://www.kdnuggets.com/2024/01/uplimit-supercharge-your-ai-journey-openai-course)'
- en: '[Building a Recommendation System with Hugging Face Transformers](https://www.kdnuggets.com/building-a-recommendation-system-with-hugging-face-transformers)'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用Hugging Face Transformers构建推荐系统](https://www.kdnuggets.com/building-a-recommendation-system-with-hugging-face-transformers)'
- en: '[Tapping into the Potential of Data Products in 2023](https://www.kdnuggets.com/2023/01/tapping-potential-data-products-2023.html)'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2023年数据产品的潜力](https://www.kdnuggets.com/2023/01/tapping-potential-data-products-2023.html)'
- en: '[Monitor Your File System With Python’s Watchdog](https://www.kdnuggets.com/monitor-your-file-system-with-pythons-watchdog)'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用Python的Watchdog监控您的文件系统](https://www.kdnuggets.com/monitor-your-file-system-with-pythons-watchdog)'
