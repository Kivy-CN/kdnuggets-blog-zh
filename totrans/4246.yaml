- en: ROC Curve Explained
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2021/07/roc-curve-explained.html](https://www.kdnuggets.com/2021/07/roc-curve-explained.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Zolzaya Luvsandorj](https://zluvsand.medium.com/), Data Scientist at
    iSelect**'
  prefs: []
  type: TYPE_NORMAL
- en: Area under the ROC curve is one of the most useful metrics to evaluate a supervised
    classification model. This metric is commonly referred to as ROC-AUC. Here, the
    ROC stands for Receiver Operating Characteristic and AUC stands for Area Under
    the Curve. In my opinion, AUROCC is a more accurate abbreviation but perhaps doesn’t
    sound as nice. In the right context, AUC can also imply ROC-AUC even though it
    can refer to area under any curve.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d731b15b6d855003e872451b2a8ee567.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Joel Filipe](https://unsplash.com/@joelfilip?utm_source=medium&utm_medium=referral) on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: In this post, we will understand how the ROC curve is constructed conceptually,
    and visualise the curve in a static and interactive format in Python.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the curve
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A ROC curve shows us the relationship between *False Positive Rate (aka FPR) *and *True
    Positive Rate (aka TPR)* across different *thresholds*. Let’s understand what
    each of these three terms mean.
  prefs: []
  type: TYPE_NORMAL
- en: 'Firstly, let’s start with a refresher on how a confusion matrix looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/47e1a57c76c07e8974dae8cb5ffc9646.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: Having refreshed our memory on confusion matrix, let’s look at the terms.
  prefs: []
  type: TYPE_NORMAL
- en: False Positive Rate
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We can find the FPR using the simple formula below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3601633f63f226e932cb43ece570b745.png)'
  prefs: []
  type: TYPE_IMG
- en: FPR tells us the percentage of incorrectly predicted negative records.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/0c120fc984703326759b492e91548ab8.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: True Positive Rate
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We can find the TPR using the simple formula below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/53307b28935630103759f34714e0bdd9.png)'
  prefs: []
  type: TYPE_IMG
- en: TPR tells us the percentage of correctly predicted positive records. This is
    also known as Recall or Sensitivity.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/1e2b15dae50b1077b6721bcd45cdd33c.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: Threshold
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In general, a classification model can predict the probability of being a certain
    class for a given record. By comparing the probability value to a threshold value
    we set, we can classify the record into a class. In other words, you will need
    to define a rule similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: If the probability of being positive is greater than or equal to the threshold,
    then a record is classified as a positive prediction; otherwise, a negative prediction.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In the small example below, we can see the probability scores for three records.
    Using two different threshold values (0.5 and 0.6), we classified each record
    into a class. As you can see, the predicted classes vary depending on the threshold
    value we choose.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/42a547cac4253515b954fcb99dcb8eac.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: When building a confusion matrix and calculating rates like FPR and TPR, we
    need predicted classes rather than probability scores.
  prefs: []
  type: TYPE_NORMAL
- en: ROC curve
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now that we know what FPR, TPR and threshold values are, it’s easy to understand
    what a ROC curve shows. When constructing the curve, we first calculate FPR and
    TPR across many threshold values. Once we have the FPR and TPR for the thresholds,
    we then plot FPR on the x-axis and TPR on the y-axis to get a ROC curve. That’s
    it! ✨
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/33b29050e36a4ef4f1c54d8b56ce9289.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: Area under a ROC curve ranges from 0 to 1\. A completely random model has an
    AUROCC of 0.5 which is represented by the dashed blue triangle diagonal line below.
    The further the ROC curve is from this line, the more predictive the model is.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/761e3f10c1e26dcb05c35d1fd6179eff.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: Now, it’s time to look at some code examples to consolidate our knowledge.
  prefs: []
  type: TYPE_NORMAL
- en: Build static ROC curve in Python
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let’s first import the libraries that we need for the rest of this post:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we will build a function that will find us the number of *false positives *and *true
    positives* given the correct class, predicted probability of being a positive
    class and a threshold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '*Please note that you will be working with partitioned data sets (e.g. training,
    test) in reality. But we will not partition our data for simplicity in this post.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'We will build a simple model on a toy dataset and get the probabilities of
    being positive (represented by a value of 1) for the records:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: We will use 1001 different thresholds between 0 and 1 with increments of 0.001\.
    In other words, threshold values will look something like 0, 0.001, 0.002, … 0.998,
    0.999, 1\. Let’s find the FPR and TPR for the threshold values.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/7cc01600a892396d4d4439fc33062c34.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Data for the plot is ready. Let’s plot it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/a2b51ef4e21ff66fe62768a1a860da71.png)'
  prefs: []
  type: TYPE_IMG
- en: 'While building a custom function helps us understand the curve and its inputs,
    and control them better, we can also take advantage of *sklearn’s *capabilities
    that are more optimised. For instance, we can get FPR, TPR and thresholds with
    a `roc_curve()` function. We can plot the data the same way using our custom plotting
    function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/11b9bcff93f3eee268fb28d4bc06f427.png)'
  prefs: []
  type: TYPE_IMG
- en: '*Sklearn *also provides a `plot_roc_curve()` function which does all the work
    for us. All you need is a single line (adding title is optional):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/5e61ea3616c62dbf0022b2b70e528536.png)'
  prefs: []
  type: TYPE_IMG
- en: Plot interactive ROC curve in Python
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'When using static plots, it’s hard to see the corresponding threshold value
    for different points across the curve. One option is to inspect the `inputs `dataframe
    we created. Another option is to create an interactive version of the plot so
    that we can see the FPR and TPR alongside the corresponding threshold value when
    we hover over the graph:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![Animation](../Images/ea6232f61b1246dacabd34aa181365df.png)'
  prefs: []
  type: TYPE_IMG
- en: The interactivity is quite useful, isn’t it?
  prefs: []
  type: TYPE_NORMAL
- en: Hope you enjoyed learning how to build and visualise a ROC curve. Once you understand
    this curve, it’s easy to understand another related curve: [*Precision-Recall
    curve*](https://levelup.gitconnected.com/precision-recall-curve-explained-fabfe58fb52e).
  prefs: []
  type: TYPE_NORMAL
- en: 'Thank you for reading this article. If you are interested, here are links to
    some of my other posts:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Interesting Ways to Use Punctuations in Python](https://towardsdatascience.com/interesting-ways-to-use-punctuations-in-python-43205a0bd67d)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 tips to learn Python from zero](https://towardsdatascience.com/5-tips-to-learn-python-from-zero-e4f6a9106558)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Python Virtual Environment for Data Science](https://towardsdatascience.com/introduction-to-python-virtual-environment-for-data-science-3c216929f1a7)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Git for Data Science](https://towardsdatascience.com/introduction-to-git-for-data-science-ca5ffd1cebbe?source=your_stories_page-------------------------------------)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Organise your Jupyter Notebook with these tips](https://towardsdatascience.com/organise-your-jupyter-notebook-with-these-tips-d164d5dcd51f)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 simple tips for prettier and customised plots in Seaborn (Python)](https://towardsdatascience.com/6-simple-tips-for-prettier-and-customised-plots-in-seaborn-python-22f02ecc2393)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 tips for pandas users](https://towardsdatascience.com/5-tips-for-pandas-users-e73681d16d17)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Writing advanced SQL queries in pandas](https://towardsdatascience.com/writing-advanced-sql-queries-in-pandas-1dc494a17afe?source=your_stories_page-------------------------------------)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bye for now ????????
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Zolzaya Luvsandorj](https://zluvsand.medium.com/)** works as a Data
    Scientist at iSelect. Upon completing her BCom as a top student with multiple
    prestigious awards, Zolzaya worked as a Data Analyst in a consultancy firm for
    3 years before moving on to her current role. She loves expanding her knowledge
    in data science, computer science and statistics and explaining data science concepts
    in simple words in her blogs.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/roc-curve-explained-50acab4f7bd8).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Get Interactive Plots Directly With Pandas](/2021/06/interactive-plots-directly-pandas.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to create an interactive 3D chart and share it easily with anyone](/2021/06/create-interactive-3d-chart-share.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Metric Matters, Part 1: Evaluating Classification Models](/2021/03/metrics-evaluating-classification-models-part1.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Classification Metrics Walkthrough: Logistic Regression with…](https://www.kdnuggets.com/2022/10/classification-metrics-walkthrough-logistic-regression-accuracy-precision-recall-roc.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Database Key Terms, Explained](https://www.kdnuggets.com/2016/07/database-key-terms-explained.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Descriptive Statistics Key Terms, Explained](https://www.kdnuggets.com/2017/05/descriptive-statistics-key-terms-explained.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Decision Tree Algorithm, Explained](https://www.kdnuggets.com/2020/01/decision-tree-algorithm-explained.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Key-Value Databases, Explained](https://www.kdnuggets.com/2021/04/nosql-explained-understanding-key-value-databases.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Micro, Macro & Weighted Averages of F1 Score, Clearly Explained](https://www.kdnuggets.com/2023/01/micro-macro-weighted-averages-f1-score-clearly-explained.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
