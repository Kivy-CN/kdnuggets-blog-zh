- en: A Tour of Python NLP Libraries
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/a-tour-of-python-nlp-libraries](https://www.kdnuggets.com/a-tour-of-python-nlp-libraries)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![A Tour of Python NLP Libraries](../Images/58939d9717841e882b2724e949acdeaf.png)'
  prefs: []
  type: TYPE_IMG
- en: Image Generated with DALL·E 3
  prefs: []
  type: TYPE_NORMAL
- en: NLP, or Natural Language Processing, is a field within Artificial Intelligence
    that focuses on the interaction between human language and computers. It tries
    to explore and apply text data so computers can understand the text meaningfully.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: As the NLP field research progresses, how we process text data in computers
    has evolved. Modern times, we have used Python to help explore and process data
    easily.
  prefs: []
  type: TYPE_NORMAL
- en: With Python becoming the go-to language for exploring text data, many libraries
    have been developed specifically for the NLP field. In this article, we will explore
    various incredible and useful NLP libraries.
  prefs: []
  type: TYPE_NORMAL
- en: So, let’s get into it.
  prefs: []
  type: TYPE_NORMAL
- en: NLTK
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[NLTK](https://www.nltk.org/), or Natural Language Tool Kit, is an NLP Python
    library with many text-processing APIs and industrial-grade wrappers. It’s one
    of the biggest NLP Python libraries used by researchers, data scientists, engineers,
    and others. It’s a standard NLP Python library for NLP tasks.'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s try to explore what NLTK could do. First, we would need to install the
    library with the following code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we would see what NLTK could do. First, NLTK can perform the tokenization
    process using the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Tokenization basically would divide each word in a sentence into individual
    data.
  prefs: []
  type: TYPE_NORMAL
- en: With NLTK, we can also perform Part-of-Speech (POS) Tags on the text sample.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The output of the POS tagger with NLTK is each token and its intended POS tags.
    For example, the word Fruit is Noun (NN), and the word ‘a’ is Determinant (DT).
  prefs: []
  type: TYPE_NORMAL
- en: It’s also possible to perform Stemming and Lemmatization with NLTK. Stemming
    is reducing a word to its base form by cutting its prefixes and suffixes, while
    Lemmatization also transforms to the base form by considering the words' POS and
    morphological analysis.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: You can see that the stemming and lentmatization processes have slightly different
    results from the words.
  prefs: []
  type: TYPE_NORMAL
- en: That’s the simple usage of NLTK. You can still do many things with them, but
    the above APIs are the most commonly used.
  prefs: []
  type: TYPE_NORMAL
- en: SpaCy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[SpaCy](https://spacy.io/) is an NLP Python library that is designed specifically
    for production use. It’s an advanced library, and SpaCy is known for its performance
    and ability to handle large amounts of text data. It’s a preferable library for
    industry use in many NLP cases.'
  prefs: []
  type: TYPE_NORMAL
- en: To install SpaCy, you can look at their [usage page](https://spacy.io/usage).
    Depending on your requirements, there are many combinations to choose from.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s try using SpaCy for the NLP task. First, we would try performing Named
    Entity Recognition (NER) with the library. NER is a process of identifying and
    classifying named entities in text into predefined categories, such as person,
    address, location, and more.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: As you can see, the SpaCy pre-trained model understands which word within the
    document can be classified.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we can use SpaCy to perform Dependency Parsing and visualize them. Dependency
    Parsing is a process of understanding how each word relates to the other by forming
    a tree structure.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: The output should include all the words with their POS and where they are related.
    The code above would also provide tree visualization in your Jupyter Notebook.
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, let’s try performing text similarity with SpaCy. Text similarity measures
    how similar or related two pieces of text are. It has many techniques and measurements,
    but we will try the simplest one.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: The similarity measure measures the similarity between texts by providing an
    output score, usually between 0 and 1\. The closer the score is to 1, the more
    similar both texts are.
  prefs: []
  type: TYPE_NORMAL
- en: There are still many things you can do with SpaCy. Explore the documentation
    to find something useful for your work.
  prefs: []
  type: TYPE_NORMAL
- en: TextBlob
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[TextBlob](https://textblob.readthedocs.io/en/dev/) is an NLP Python library
    for processing textual data built on top of NLTK. It simplifies many of NLTK''s
    usage and can streamline text processing tasks.'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can install TextBlob using the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: First, let’s try to use TextBlob for NLP tasks. The first one we would try is
    to do sentiment analysis with TextBlob. We can do that with the code below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: The output is a polarity and subjectivity score. Polarity is the sentiment of
    the text where the score ranges from -1 (negative) to 1 (positive). At the same
    time, the subjectivity score ranges from 0 (objective) to 1 (subjective).
  prefs: []
  type: TYPE_NORMAL
- en: We can also use TextBlob for text correction tasks. You can do that with the
    following code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Try to explore the TextBlob packages to find the APIs for your text tasks.
  prefs: []
  type: TYPE_NORMAL
- en: Gensim
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Gensim](https://radimrehurek.com/gensim/) is an open-source Python NLP library
    specializing in topic modeling and document similarity analysis, especially for
    big and streaming data. It focuses more on industrial real-time applications.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s try the library. First, we can install them using the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: After the installation is finished, we can try the Gensim capability. Let’s
    try to do topic modeling with LDA using Gensim.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: The output is a combination of words from the document samples that cohesively
    become a topic. You can evaluate whether the result makes sense or not.
  prefs: []
  type: TYPE_NORMAL
- en: Gensim also provides a way for users to embed content. For example, we use Word2Vec
    to create embedding from words.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: There are still many applications you can use with Gensim. Try to see the documentation
    and evaluate your needs.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this article, we explored several Python NLP libraries essential for many
    text tasks. All of these libraries would be useful for your work, from Text Tokenization
    to Word Embedding. The libraries we are discussing are:'
  prefs: []
  type: TYPE_NORMAL
- en: NLTK
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: SpaCy
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: TextBlob
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Gensim
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: I hope it helps
  prefs: []
  type: TYPE_NORMAL
- en: '**[](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**[Cornellius Yudha
    Wijaya](https://www.linkedin.com/in/cornellius-yudha-wijaya/)**** is a data science
    assistant manager and data writer. While working full-time at Allianz Indonesia,
    he loves to share Python and data tips via social media and writing media. Cornellius
    writes on a variety of AI and machine learning topics.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Top 38 Python Libraries for Data Science, Data Visualization &…](https://www.kdnuggets.com/2020/11/top-python-libraries-data-science-data-visualization-machine-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python Libraries Data Scientists Should Know in 2022](https://www.kdnuggets.com/2022/04/python-libraries-data-scientists-know-2022.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Explainable AI: 10 Python Libraries for Demystifying Your Model''s Decisions](https://www.kdnuggets.com/2023/01/explainable-ai-10-python-libraries-demystifying-decisions.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Python Libraries for Data Cleaning](https://www.kdnuggets.com/2023/03/introduction-python-libraries-data-cleaning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Beyond Numpy and Pandas: Unlocking the Potential of Lesser-Known…](https://www.kdnuggets.com/2023/08/beyond-numpy-pandas-unlocking-potential-lesserknown-python-libraries.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Level 50 Data Scientist: Python Libraries to Know](https://www.kdnuggets.com/level-50-data-scientist-python-libraries-to-know)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
