- en: 14 Essential Git Commands for Data Scientists
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据科学家的14个必备Git命令
- en: 原文：[https://www.kdnuggets.com/2022/06/14-essential-git-commands-data-scientists.html](https://www.kdnuggets.com/2022/06/14-essential-git-commands-data-scientists.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2022/06/14-essential-git-commands-data-scientists.html](https://www.kdnuggets.com/2022/06/14-essential-git-commands-data-scientists.html)
- en: '![14 Essential Git Commands for Data Scientists](../Images/bc1e96a6b7d20a1e9400824cd14e2479.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![数据科学家的14个必备Git命令](../Images/bc1e96a6b7d20a1e9400824cd14e2479.png)'
- en: Photo by [RealToughCandy.com](https://www.pexels.com/photo/man-love-people-woman-11035539/)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[RealToughCandy.com](https://www.pexels.com/photo/man-love-people-woman-11035539/)提供
- en: Historically, most data scientists are unaware of software development practices
    and tools such as version control systems. But, this is changing, data science
    projects are adopting best practices from software engineering, and Git has become
    an essential tool for file and data versioning. Modern data teams use it to collaborate
    on codebase projects and resolve conflicts faster.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 历史上，大多数数据科学家对软件开发实践和工具（如版本控制系统）不太了解。但这种情况正在改变，数据科学项目正在采纳软件工程的最佳实践，Git已成为文件和数据版本控制的重要工具。现代数据团队利用它来协作处理代码库项目，并更快地解决冲突。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌IT支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织进行IT管理'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: In this post, we will learn about 14 essential Git commands that will help you
    initialize a project, create and merge branches, version the files, sync it with
    a remote server and monitor the changes.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将学习14个必备的Git命令，这些命令将帮助你初始化项目、创建和合并分支、版本控制文件、与远程服务器同步以及监控变更。
- en: '**Note:** make sure you have properly installed Git from the [official site](https://git-scm.com/downloads).'
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意：** 请确保你已从[官方站点](https://git-scm.com/downloads)正确安装Git。'
- en: 1\. Initialization
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 初始化
- en: 'You can initialize the Git version control system in the current directory
    by typing:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过输入以下命令在当前目录中初始化Git版本控制系统：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Or you can initialize Git in a specific directory.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 或者你可以在特定目录中初始化Git。
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![initialize Git in a specific directory](../Images/134072b98208116d3c05193c0944db4b.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![在特定目录中初始化Git](../Images/134072b98208116d3c05193c0944db4b.png)'
- en: 2\. Clone
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 克隆
- en: The **clone** command will copy all of the project files from a remote server
    to the local machine. It will also add a remote name as `origin` to sync files
    with the remote server.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**clone**命令将从远程服务器复制所有项目文件到本地计算机。它还会将远程名称添加为`origin`以便与远程服务器同步文件。'
- en: Git clone requires HTTPS link and for secure connection SSH link.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Git clone 需要HTTPS链接，安全连接需要SSH链接。
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 3\. Adding Remote
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 添加远程
- en: You can connect to a single or multiple remote servers by adding the name of
    the remote and HTTPS/SSH address.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过添加远程名称和HTTPS/SSH地址来连接到一个或多个远程服务器。
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Note:** Cloning a repository from GitHub or any remote server automatically
    adds remote as `origin`.'
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意：** 从GitHub或任何远程服务器克隆一个仓库会自动将远程添加为`origin`。'
- en: 4\. Create Branch
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 创建分支
- en: Branches are the best way to work on a new feature or debug the code. It allows
    you to work in isolation without disturbing the `main` branch.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 分支是处理新功能或调试代码的最佳方式。它允许你在不干扰`main`分支的情况下进行隔离工作。
- en: Create a new branch using the **checkout** command with the `-b` tag and branch
    name.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**checkout**命令和`-b`标签及分支名称创建一个新分支。
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Or use **switch** with `-c` tag and branch name
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 或使用**switch**与`-c`标签和分支名称
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Or simply use **branch** command
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 或者简单地使用**branch**命令
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Create Git Branch](../Images/e833ec961b40fe368ba8d4715abfd220.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![创建Git分支](../Images/e833ec961b40fe368ba8d4715abfd220.png)'
- en: 5\. Switch Branch
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 切换分支
- en: To switch a branch from current to a different branch, you can use the **checkout**
    or **switch** command followed by branch name.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要将分支从当前分支切换到不同的分支，你可以使用**checkout**或**switch**命令，后跟分支名称。
- en: '[PRE7]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 6\. Pull
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6\. 拉取
- en: To sync changes with a remote server, we need to first pull changes from the
    remote to the local repository by using the **pull** command. This is required
    when changes are made in a remote repository.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要与远程服务器同步更改，我们需要首先通过使用**pull**命令从远程拉取更改到本地仓库。这在远程仓库中进行了更改时是必需的。
- en: '[PRE8]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: You can add a remote name followed by a branch name to pull a single branch.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以添加远程名称后跟分支名称来拉取单个分支。
- en: '[PRE9]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: By default, the pull command fetches the changes and merges them with the current
    branch. To rebase, instead of merge, you can add the `--rebase` flag before the
    remote name and branch.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，pull命令会获取更改并将它们与当前分支合并。要进行变基，你可以在远程名称和分支之前添加`--rebase`标志。
- en: '[PRE10]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 7\. Add
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 7\. 添加
- en: Use **add** command to add files into the staging area. It requires the filename
    or list of file names.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**add**命令将文件添加到暂存区。它需要文件名或文件名列表。
- en: '[PRE11]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: You can also add all files using the `.` or `-A` flag.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用` . `或` -A `标志一次性添加所有文件。
- en: '[PRE12]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 8\. Commit
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 8\. 提交
- en: After adding files to the staging area, you can create a version by using the
    **commit** command.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在将文件添加到暂存区后，你可以使用**commit**命令创建一个版本。
- en: The commit command requires the title of the commit by using the `-m` flag.
    If you made multiple changes and want to list them all, add them to the description
    by using another `-m` flag.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 提交命令需要通过`-m`标志指定提交的标题。如果你做了多个更改并想列出它们，请通过另一个`-m`标志将它们添加到描述中。
- en: '[PRE13]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![Git Commit](../Images/d4b0dfc7e8867355a9925c38126285c6.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![Git Commit](../Images/d4b0dfc7e8867355a9925c38126285c6.png)'
- en: '**Note:** Make sure you have configured your **username** and **email** before
    committing changes.'
  id: totrans-56
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意：** 在提交更改之前，请确保你已经配置了**用户名**和**电子邮件**。'
- en: '[PRE14]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 9\. Push
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 9\. 推送
- en: To sync local changes to remote servers using the **push** command. You can
    simply type `git push` to push the changes to the remote repository.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要将本地更改同步到远程服务器，请使用**push**命令。你可以简单地输入`git push`来将更改推送到远程仓库。
- en: For pushing changes to a specific remote server and branche, use the command
    below.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要将更改推送到特定的远程服务器和分支，请使用下面的命令。
- en: '[PRE15]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 10\. Undo Commit
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 10\. 撤销提交
- en: Git **revert** undoes the changes back to a specific commit and adds it as a
    new commit, keeping the log intact. To revert, you need to provide a hash of a
    specific commit.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Git **revert**会将更改撤销到特定提交，并将其作为新提交添加，保持日志不变。要撤销更改，你需要提供特定提交的哈希值。
- en: '[PRE16]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: You can also undo changes by using the **reset** command. It reset the changes
    back to a specific commit, discarding all commits made after.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过使用**reset**命令撤销更改。它会将更改重置回特定提交，并丢弃之后所做的所有提交。
- en: '[PRE17]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '**Note:** Using reset command is discouraged as it modifies your git log history.'
  id: totrans-67
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意：** 使用reset命令是不推荐的，因为它会修改你的git日志历史记录。'
- en: 11\. Merge
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 11\. 合并
- en: The **merge** command will simply merge the changes of the specific branch into
    the current branch. The command requires a branch name.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**merge**命令将简单地将特定分支的更改合并到当前分支。该命令需要一个分支名称。'
- en: '[PRE18]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This command is quite handy when you are working with multiple branches and
    want to merge changes to the main branch.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在多个分支上工作并且希望将更改合并到主分支时，这个命令非常方便。
- en: 12\. Log
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 12\. 日志
- en: To check the complete history of previous commits, you can use the **log** command.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查之前提交的完整历史记录，你可以使用**log**命令。
- en: To show the most recent logs, you can add `-` followed by the number, and it
    will show you a limited number of recent commit history.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示最近的日志，你可以添加`-`后跟数字，它将显示有限数量的最近提交历史。
- en: 'For example limit logs to 5:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，将日志限制为5条：
- en: '[PRE19]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: You can also check the commits made by specific authors.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以查看特定作者所做的提交。
- en: '[PRE20]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '**Note:** git log has multiple flags to filter out specific types of commits.
    Check out full [documentation](https://www.git-scm.com/docs/git-log).'
  id: totrans-79
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意：** git log有多个标志可以过滤特定类型的提交。查看完整的[文档](https://www.git-scm.com/docs/git-log)。'
- en: '![Git log](../Images/65d38b967464f4a3e64922c1f6c7c1df.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![Git log](../Images/65d38b967464f4a3e64922c1f6c7c1df.png)'
- en: 13\. Difference
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 13\. 差异
- en: Using the **diff** command will display the comparison between uncommitted changes
    with the current commit.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**diff**命令将显示未提交更改与当前提交之间的比较。
- en: '[PRE21]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'For comparing two different commits, use:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 对于比较两个不同的提交，请使用：
- en: '[PRE22]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'And for comparing two branches, use:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 对于比较两个分支，可以使用：
- en: '[PRE23]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 14\. Status
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 14\. 状态
- en: The command **status** displays the current status of the working directory.
    It includes information about changes to be committed, unmerged paths, changes
    not staged for commit, and the list of untracked files.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**status**命令显示工作目录的当前状态。它包括有关要提交的更改、未合并路径、未暂存的更改以及未跟踪文件的列表的信息。'
- en: '[PRE24]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '**Note:** check out [Github and Git Tutorial for Beginners](https://www.datacamp.com/tutorial/github-and-git-tutorial-for-beginners)
    to learn more about version control systems in data science.'
  id: totrans-91
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意：** 查看 [Github 和 Git 初学者教程](https://www.datacamp.com/tutorial/github-and-git-tutorial-for-beginners)
    以了解更多关于数据科学中的版本控制系统的内容。'
- en: '**[Abid Ali Awan](https://www.polywork.com/kingabzpro)** ([@1abidaliawan](https://twitter.com/1abidaliawan))
    is a certified data scientist professional who loves building machine learning
    models. Currently, he is focusing on content creation and writing technical blogs
    on machine learning and data science technologies. Abid holds a Master''s degree
    in Technology Management and a bachelor''s degree in Telecommunication Engineering.
    His vision is to build an AI product using a graph neural network for students
    struggling with mental illness.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**[Abid Ali Awan](https://www.polywork.com/kingabzpro)** ([@1abidaliawan](https://twitter.com/1abidaliawan))
    是一位认证的数据科学专家，热衷于构建机器学习模型。目前，他专注于内容创作，并撰写关于机器学习和数据科学技术的技术博客。Abid 拥有技术管理硕士学位和电信工程学士学位。他的愿景是使用图神经网络构建一个人工智能产品，以帮助那些面临心理健康问题的学生。'
- en: More On This Topic
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[16 Essential DVC Commands for Data Science](https://www.kdnuggets.com/2022/07/16-essential-dvc-commands-data-science.html)'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学的16个基本DVC命令](https://www.kdnuggets.com/2022/07/16-essential-dvc-commands-data-science.html)'
- en: '[10 Essential SQL Commands for Data Science](https://www.kdnuggets.com/2022/10/10-essential-sql-commands-data-science.html)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学的10个基本SQL命令](https://www.kdnuggets.com/2022/10/10-essential-sql-commands-data-science.html)'
- en: '[12 Essential Commands for Streamlit](https://www.kdnuggets.com/2023/01/12-essential-commands-streamlit.html)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Streamlit的12个基本命令](https://www.kdnuggets.com/2023/01/12-essential-commands-streamlit.html)'
- en: '[KDnuggets News, June 29: 20 Basic Linux Commands for Data Science…](https://www.kdnuggets.com/2022/n26.html)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KDnuggets 新闻，6月29日：数据科学的20个基本Linux命令…](https://www.kdnuggets.com/2022/n26.html)'
- en: '[12 Docker Commands Every Data Scientist Should Know](https://www.kdnuggets.com/2023/01/12-docker-commands-every-data-scientist-know.html)'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每个数据科学家都应该知道的12个Docker命令](https://www.kdnuggets.com/2023/01/12-docker-commands-every-data-scientist-know.html)'
- en: '[20 Basic Linux Commands for Data Science Beginners](https://www.kdnuggets.com/2022/06/20-basic-linux-commands-data-science-beginners.html)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学初学者的20个基本Linux命令](https://www.kdnuggets.com/2022/06/20-basic-linux-commands-data-science-beginners.html)'
