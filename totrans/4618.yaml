- en: 'Kaggle Kernels Guide for Beginners: A Step by Step Tutorial'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/07/kaggle-kernels-guide-beginners-tutorial.html](https://www.kdnuggets.com/2019/07/kaggle-kernels-guide-beginners-tutorial.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: '**By [Abdul Majed Raja](https://www.linkedin.com/in/amrrs/), Analyst at Cisco**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ec1ca3209400fcee605ce57d486440c7.png)'
  prefs: []
  type: TYPE_IMG
- en: Sometime back, I wrote an article titled “[Show off your Data Science skills
    with Kaggle Kernels](https://towardsdatascience.com/show-off-your-data-science-skills-with-kaggle-kernels-762403618c5?source=post_page---------------------------)”
    and then later realized that even though the article made a good claim on how
    Kaggle Kernels could be a powerful portfolio for a Data scientist, it did nothing
    about how a complete beginner can get started with Kaggle Kernels.
  prefs: []
  type: TYPE_NORMAL
- en: This is an attempt to hold the hands of a complete beginner and walk them through
    the world of Kaggle Kernels — for them to get started.
  prefs: []
  type: TYPE_NORMAL
- en: Register on Kaggle — [https://www.kaggle.com/](https://www.kaggle.com/?source=post_page---------------------------)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you don’t have a Kaggle Account account, the first step is to register on
    Kaggle. You can either use your Google Account or Facebook Account to create your
    new Kaggle account and log in. If none of the above, you can enter your email
    id and your preferred password and create your new account.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/4bfe5a67d7383bcb283cd5b77b922f23.png)'
  prefs: []
  type: TYPE_IMG
- en: Kaggle Registration Page
  prefs: []
  type: TYPE_NORMAL
- en: Logging in into Kaggle
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have an account already or you just created one, Click the **sign in**button
    on the top-right corner of the page to initiate the login process. Again, you’ll
    be given an option to login with Google / Facebook / Yahoo or the last one, with
    the user name password that you entered while creating your account.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/5fc9c62213e0a74edbd24fe1f9059842.png)'
  prefs: []
  type: TYPE_IMG
- en: Kaggle Login/Signin Screen
  prefs: []
  type: TYPE_NORMAL
- en: '**Kaggle Dashboard**'
  prefs: []
  type: TYPE_NORMAL
- en: After you login, You’ll be taken to the Kaggle Dashboard. (It’s just the welcome
    page, I don’t know what else to call, so called it a Dashboard).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e26f2e956251de2daa53870361336140.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This is how your landing page appears immediately after you login (if you had
    logged in from [https://www.kaggle.com/](https://www.kaggle.com/?source=post_page---------------------------)).
    It has many components, few of them:'
  prefs: []
  type: TYPE_NORMAL
- en: A feed of Kaggle Kernels that are recently updated or recommended to you by
    Kaggle
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Profile summary (first of right sidebar)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Job Ad (right sidebar)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Your competitions (right sidebar — after scrolling down)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Your Kernels (right sidebar — after scrolling down)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Where we are heading next is the top *Kernels* button in the navigation bar.
  prefs: []
  type: TYPE_NORMAL
- en: 'Kaggle Kernels List (Hottest):'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Once we click the top Kernels button from any place of the Kaggle Journey, we’ll
    land on this screen.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ec1ca3209400fcee605ce57d486440c7.png)'
  prefs: []
  type: TYPE_IMG
- en: This is the screen where everyone tries to see their Kernel because this is
    like the Front Page of Kernels which means your Kernel has more likelihood of
    getting a lot more visibility if it ends up here. The default sort order in the
    Kernels page is **Hotness** which is based on Kaggle’s secret sauce Algorithm
    to keep showing relevant Kernels but it also has got other options (to sort) like
    New, Most Votes and so on. Kaggle also uses this page to advertise if there’s
    any Kernel Contest happening / going to happen.
  prefs: []
  type: TYPE_NORMAL
- en: While we are here, A Kernel Contest is a Kaggle Competition which doesn’t fall
    under the Competition tier because of the nature of the contest where the output
    is a Kaggle Kernel and more often focused on Storytelling. Data Science for Good
    is one such series of Kernel contests where the Data Scientist / Kaggler is expected
    to help in a Social Problem (for good) using Data Science. For understanding more
    of it, You should check out the Kernels of Kernel Grandmaster [**Shivam Bansal**](https://www.kaggle.com/shivamb?source=post_page---------------------------) who’s
    made a habit of winning them so many times.
  prefs: []
  type: TYPE_NORMAL
- en: 'Kaggle Kernels — New / Creation:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Now, that we’ve understood the meta of Kaggle Kernels, we can jump right into
    creation of New Kernels. There are two primary ways a Kaggle Kernel can be created:'
  prefs: []
  type: TYPE_NORMAL
- en: From the Kaggle Kernels (front page) using New Kernel Button
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From a Dataset Page using New Kernel Button
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Method #1: From the Kaggle Kernels (front page) using New Kernel Button**'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see in the above screenshot, Clicking the New Kernel button from
    the Kernels page would enable you create a new Kernel. This method is good if
    you are trying to practice something of your own or you’re planning to input your
    own dataset. This method isn’t advisable (in my opinion), if you want to create
    a Kernel for a dataset that’s already existing on Kaggle.
  prefs: []
  type: TYPE_NORMAL
- en: '**Method #2: From a Dataset Page using New Kernel Button**'
  prefs: []
  type: TYPE_NORMAL
- en: 'This is one of the most popularly used method (at least by me) for creating
    new Kernels. You can open the dataset page of the dataset of your interest (like
    the one in the screenshot below) and then click New Kernel button in there. The
    advantage with this method is that unlike the Method #1, in this method #2 the
    Kaggle Dataset from which the Kernel is created comes attached with the Kernel
    (by default) thus making this boring process of inputting a dataset to your kernel
    easier, faster and straightforward.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/feb3c8c89c886374f55aeeebef15d5d7.png)'
  prefs: []
  type: TYPE_IMG
- en: '[https://www.kaggle.com/google/google-landmarks-dataset](https://www.kaggle.com/google/google-landmarks-dataset?source=post_page---------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Kaggle Kernels — Kernel Type:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Irrespective of Method #1 or #2, Once you click the New Kernel, you’ll be presented
    with this modal screen to select the type of Kaggle Kernel you’d like to create.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6e44346ba74c5ee83bb3f1421f96c772.png)'
  prefs: []
  type: TYPE_IMG
- en: Broadly it’s two categories — 1\. Script vs 2\. Notebook.
  prefs: []
  type: TYPE_NORMAL
- en: As we all know about a Notebook (cell-based layout), It’s just what a Jupyter
    Notebook is and the Script is what you’d code on probably — Pycharm or Sublime
    Text or RStudio. Additionally for R users, the script is the Kernel type for RMarkdown
    — the beautiful way to programmatically generate a report from R.
  prefs: []
  type: TYPE_NORMAL
- en: 'To summarize the types of Kernels:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Script**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* Python'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '* R'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '* RMarkdown'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Notebook'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* **Python *****R'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Kaggle Kernels — Kernel Language:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This second level of Kernel Language selection happens only after the first
    level of Kernel Type Selection.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Kaggle GIF](../Images/dac2340054c09301983a11957a702b70.png)](https://miro.medium.com/max/700/1*jLJA3ONLFjFuLaZ_21ozug.gif)'
  prefs: []
  type: TYPE_NORMAL
- en: As in the above GIF of a Kaggle Kernel of Type Script, The language of the Kernel
    can be changed by going into Settings and then selecting desired Language — R
    / Py / RMarkdown. The same settings also provide option to make your Kernel Sharing
    Public (which by default is Private unless made Public). Private Kernels are usually
    used if you’re working on your university assignment or self-learning where you
    didn’t want to reveal the code. Private Kernels are also used by Kagglers who
    participate in competition to leverage Kaggle’s computation power but not reveal
    their code / approach.
  prefs: []
  type: TYPE_NORMAL
- en: 'Notebook Kernel:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Similar to the above GIF, where Kernel Type *Script* is selected, You can also
    select *Notebook* to create a Notebook Kernel.
  prefs: []
  type: TYPE_NORMAL
- en: 'RMarkdown Kernel — (Kernel Type: Script > RMarkdown)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: RMarkdown uses a combination of R and Markdown in generating Analytical Reports
    with interactive visualizations embedded on it. While this is the most simplistic
    way of explaining what’s RMarkdown, its uses and potential grow much farther and
    beyond the definition.
  prefs: []
  type: TYPE_NORMAL
- en: Fortunately, Kaggle Kernel Script supports Rmarkdown which means it can help
    create Interactive documentation and much more that wouldn’t be possible in a
    Notebook-based scenario. Here’s [a full-fledged Interactive Dashboard built on
    Kaggle Kernel](https://www.kaggle.com/tavoosi/suicide-data-full-interactive-dashboard?source=post_page---------------------------) by [Saba
    Tavoosi,](https://www.kaggle.com/tavoosi/suicide-data-full-interactive-dashboard?source=post_page---------------------------) that
    illustrates the potential of Kaggle Kernels not just for building Machine Learning
    models but also for interactive storytelling at its best form. Checkout [this
    course](https://bit.ly/2S2LSGS?source=post_page---------------------------), If
    you’re interested in learning [how to build dashboards with flexdashboard](https://bit.ly/2S2LSGS?source=post_page---------------------------).
  prefs: []
  type: TYPE_NORMAL
- en: '[![Figure](../Images/09795fd2acd60072afbdc49ec1404eb2.png)](https://miro.medium.com/max/700/1*u2lBm_oWelB7yWojaoeS4A.gif)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Kernel Courtesy: Saba Tavoosi'
  prefs: []
  type: TYPE_NORMAL
- en: Copy and Edit (formerly, Forking)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Similar to the **Fork** option in Github, If you would like to take an existing
    Kaggle Kernel and use it in your own space — to modify or give your own touch
    — you’d need to use the top right blue button `Copy and Edit` . In fact, In a
    lot of Machine Learning competitions on Kaggle Competitions track, many high scoring
    public kernels are usually `forks of forks forks` where one Kaggler would improve
    upon the model that was already built by some other Kaggler and made them available
    as a Public Kernel.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure](../Images/cef79b8c9df61716908fc6da58b45410.png)'
  prefs: []
  type: TYPE_IMG
- en: Marked Symbol denotes a Forked / Copied and Edited Kernel
  prefs: []
  type: TYPE_NORMAL
- en: Public / Private Kernel
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As we saw above in another section, Access setting of a Kaggle Kernel can be
    either Public or Private. A Public Kernel (as obviously the name suggests) is
    available and visible for everyone (including Kagglers and Non-Kagglers). A Private
    Kernel is available for only the owner (one who created it) and those with whom
    the owner shared the Kernel with. A Public Kernel can be also built on Private
    Dataset. Let’s say, It’s a Machine Learning competition and you’ve done some feature
    engineering with some 3rd Party data and you wouldn’t want to reveal the data
    during the period of the competition. This is a typical scenario where Kagglers
    usually keep their dataset private, yet make the Kernel a Public one so others
    can see their approach and learn from it.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/14e29e8a1640ef18942b1183eb28c510.png)'
  prefs: []
  type: TYPE_IMG
- en: The screenshot above illustrates how an existing Kernel’s access setting could
    be changed to either Private or Public. All newly created Kernels are Private
    by default (at this time of writing) and the owner then changes it Public if required.
  prefs: []
  type: TYPE_NORMAL
- en: TL;DR — How to create a New Kaggle Kernel
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If everything above seemed a bit too heavy to grasp at the first glance, this
    is the section to help you with creating your first Kaggle Kernel.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d761c65343f670e62e3237cd6f823180.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Login to Kaggle using your Credentials
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to any Public Kaggle Dataset
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click** New Kernel** on the top right (blue-colored button)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select Notebook/Script of your interest
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If Python is your language of choice leave it as it’s, If R, then go to the **Settings** at
    the right side and click to expand the items where you can see **Python** next
    to the Language which you can click to change to **R**
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to the Editor section / Pane (left-side) of the screen and Start writing
    your beautiful code (the above GIF also illustrates how you can use the dataset
    from where you created the Kernel)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once your code is complete, click **Commit** on the top right (blue-colored
    button)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If your Kernel execution is successful (without any errors), Make your Kernel
    Public (either by editing the Kernel **Settings > Sharing (Public)**or by opening
    the Kernel again and clicking the **Access** button on the top)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At this stage, your first Kaggle Kernel must be ready for being shared with
    your friends across your network!
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check out this [Kaggle Video](https://www.kaggle.com/static/video/homepage_landingvideo.mp4?source=post_page---------------------------) for
    assistance.
  prefs: []
  type: TYPE_NORMAL
- en: '**The END**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For a lot of Kagglers, Competition Track has been their fun ride but [for me](https://www.kaggle.com/nulldata?source=post_page---------------------------),
    Kaggle Kernels Track has been my thing which gives us the enormous potential of
    completing a *full-stack data science journey *from Data Prep to Data Visualization
    — Machine Learning Modelling to Storytelling. Hope you’d like it too. Good Luck
    on your Kaggle Kernel Journey.
  prefs: []
  type: TYPE_NORMAL
- en: '*Check out my *[*Kaggle Kernels at My Kaggle Profile*](https://www.kaggle.com/nulldata/kernels?source=post_page---------------------------)* and
    share your feedback with me at *[*My Linkedin Profile*](https://www.linkedin.com/in/amrrs/?source=post_page---------------------------)*.
    The videos/GIFs/screenshots used in this tutorial is available on *[*my github*](https://github.com/amrrs/kaggle-kernel-guide-rsc?source=post_page---------------------------)*.*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio:** [AbdulMajedRaja](https://www.linkedin.com/in/amrrs/) is an Analyst
    at Cisco.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](https://towardsdatascience.com/kaggle-kernels-for-beginners-a-step-by-step-guide-3db6b1cd7606).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Show off your Data Science skills with Kaggle Kernels](/2019/06/data-science-kaggle-kernels.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Make Stunning 3D Plots for Better Storytelling](/2019/07/stunning-3d-plots-better-storytelling.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Building a Daily Bitcoin Price Tracker with Coindeskr and Shiny in R](/2018/02/bitcoin-price-tracker-coindeskr-shiny-r.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Step-by-Step Tutorial to Building Your First Machine Learning Model](https://www.kdnuggets.com/step-by-step-tutorial-to-building-your-first-machine-learning-model)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deploying Machine Learning Models: A Step-by-Step Tutorial](https://www.kdnuggets.com/deploying-machine-learning-models-a-step-by-step-tutorial)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7 Free Kaggle Micro-Courses for Data Science Beginners](https://www.kdnuggets.com/7-free-kaggle-micro-courses-for-data-science-beginners)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Guide On How To Become A Data Scientist (Step By Step Approach)](https://www.kdnuggets.com/2021/05/guide-become-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How To Structure a Data Science Project: A Step-by-Step Guide](https://www.kdnuggets.com/2022/05/structure-data-science-project-stepbystep-guide.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Step-by-Step Guide to Web Scraping with Python and Beautiful Soup](https://www.kdnuggets.com/2023/04/stepbystep-guide-web-scraping-python-beautiful-soup.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
