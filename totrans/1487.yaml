- en: 5 Probability Distributions Every Data Scientist Should Know
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/07/5-probability-distributions-every-data-scientist-should-know.html](https://www.kdnuggets.com/2019/07/5-probability-distributions-every-data-scientist-should-know.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)'
  prefs: []
  type: TYPE_IMG
- en: Probability Distributions are like 3D glasses. They allow a skilled Data Scientist
    to recognize patterns in otherwise completely random variables.
  prefs: []
  type: TYPE_NORMAL
- en: In a way, most of the other Data Science or Machine Learning skills are based
    on certain assumptions about the probability distributions of your data.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This makes probability knowledge part of the basis on which you can build your
    toolkit as a statistician. The first steps if you are figuring out [how to become
    a Data Scientist](http://www.datastuff.tech/data-science/3-machine-learning-books-that-helped-me-level-up-as-a-data-scientist/).
  prefs: []
  type: TYPE_NORMAL
- en: Without further ado, let us cut to the chase.
  prefs: []
  type: TYPE_NORMAL
- en: What are Probability Distributions?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Probability and Statistics, a **random variable** is a thing that **takes
    random values**, like “the height of the next person I see” or “the amount of
    cook’s hairs in my next ramen bowl”.
  prefs: []
  type: TYPE_NORMAL
- en: Given a random variable *X*, we’d like to have a way of describing which values
    it takes. Even more than that, we’d like to characterize **how likely** it is
    for that variable to **take a certain value** *x*.
  prefs: []
  type: TYPE_NORMAL
- en: For instance, if *X* is “how many cats my girlfriend has”, then there’s a non-zero
    chance that number could be 1\. One could argue there’s a non-zero probability
    that value could even be 5 or 10.
  prefs: []
  type: TYPE_NORMAL
- en: However, there’s no way (and therefore no probability) that a person will have
    negative cats.
  prefs: []
  type: TYPE_NORMAL
- en: We therefore would like an unambiguous, mathematical way of expressing every
    possible value *x* a variable *X* can take, and how likely the event *(X= x)* is.
  prefs: []
  type: TYPE_NORMAL
- en: In order to do this, we define a function *P*, such that *P(X = x)* is the probability
    of the variable *X* having a value of *x*.
  prefs: []
  type: TYPE_NORMAL
- en: We could also ask for P(X < x), or P(X > x), for intervals instead of discrete
    values. This will become even more relevant soon.
  prefs: []
  type: TYPE_NORMAL
- en: '*P* is the variable’s **density function**, and it characterizes that variable’s **distribution**.'
  prefs: []
  type: TYPE_NORMAL
- en: Over time, scientists have come to realize many things in nature and real life
    tend to **behave similarly**, with variables sharing a distribution, or having
    the same density functions (or a similar function changing a few constants in
    it).
  prefs: []
  type: TYPE_NORMAL
- en: Interestingly, for *P* to be an actual density function, some things have to
    apply.
  prefs: []
  type: TYPE_NORMAL
- en: '***P(X =x)***** <= 1** for any value *x*. Nothing’s more certain than certain.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***P(X =x)***** >= 0** for any value *x*. A thing can be impossible, but not
    less likely than that.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'And the last one: the **sum** of *P(X=x)* for all possible values *x ***is
    1**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This last one means something like “the probability of X taking *any* value
    in the universe, *has* to add up to 1, since we know it will take *some* value”.
  prefs: []
  type: TYPE_NORMAL
- en: Discrete vs Continuous Random Variable Distributions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Lastly, random variables can be thought of as belonging to two groups: **discrete**
    and **continuous** random variables.'
  prefs: []
  type: TYPE_NORMAL
- en: Discrete Random Variables
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Discrete variables** have a discrete set of possible values, each of them
    with a non-zero probability.'
  prefs: []
  type: TYPE_NORMAL
- en: For instance, when flipping a coin, if we say
  prefs: []
  type: TYPE_NORMAL
- en: X = “1 if the coin is heads, 0 if tails”
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Then *P(X = 1) = P(X = 0) = 0.5*.
  prefs: []
  type: TYPE_NORMAL
- en: Note however, that a discrete set need not be finite.
  prefs: []
  type: TYPE_NORMAL
- en: A **geometric distribution**, is used for modelling the chance of some event
    with probability *p* **happening after *****k***** retries**.
  prefs: []
  type: TYPE_NORMAL
- en: It has the following density formula.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2694c928ccc40448cc7baf58e442e714.png)'
  prefs: []
  type: TYPE_IMG
- en: Where ***k***** can take any non-negative value with a positive probability**.
  prefs: []
  type: TYPE_NORMAL
- en: Notice how the sum of all possible values’ probabilities still **adds up to
    1**.
  prefs: []
  type: TYPE_NORMAL
- en: Continuous Random Variables
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you said
  prefs: []
  type: TYPE_NORMAL
- en: X = “the length in millimeters (without rounding) of a randomly plucked hair
    from my head”
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Which possible values can *X* take? We can all probably agree a negative value
    doesn’t make any sense here.
  prefs: []
  type: TYPE_NORMAL
- en: However if you said it is exactly 1 millimeter, and not 1.1853759… or something
    like that, I would either doubt your measuring skills, or your measuring error
    reporting.
  prefs: []
  type: TYPE_NORMAL
- en: A continuous random variable can take **any value** in a given (continuous)
    interval.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, if we assigned a **non-zero probability to all of its possible values**,
    their sum would **not add up to 1**.
  prefs: []
  type: TYPE_NORMAL
- en: To solve this, if *X* is continuous, we set* P(X=x) = 0* for all *k*, and instead
    assign a non-zero chance to *X* taking a value **in a certain interval.**
  prefs: []
  type: TYPE_NORMAL
- en: To express the probability of X laying between values* a* and *b*, we say *P(a
    < X < b)*.
  prefs: []
  type: TYPE_NORMAL
- en: Instead of just replacing values in a density function, to get *P(a < X < b)* for *X* a
    continuous variable, you’ll integrate *X*‘s density function from *a* to *b*.
  prefs: []
  type: TYPE_NORMAL
- en: Whoah, you’ve made it through the whole theory section! Here’s your reward.
  prefs: []
  type: TYPE_NORMAL
- en: '![A pug puppy.](../Images/b5df87640f30191c47f8a7ace3871973.png)'
  prefs: []
  type: TYPE_IMG
- en: Reward puppy. Source: [Pixabay](https://pixabay.com/photos/pug-puppy-dog-animal-cute-690566/).
  prefs: []
  type: TYPE_NORMAL
- en: Now that you know what a probability distribution is, let’s learn about some
    of the most common ones!
  prefs: []
  type: TYPE_NORMAL
- en: Bernoulli Probability Distribution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A Random Variable with a Bernoulli Distribution is among the simplest ones.
  prefs: []
  type: TYPE_NORMAL
- en: 'It represents a **binary event**: “this happened” vs “this didn’t happen”,
    and takes a value *p*as its **only parameter**, which represents the **probability** that **the
    event will occur**.'
  prefs: []
  type: TYPE_NORMAL
- en: 'A random variable *B* with a Bernoulli distribution with parameter *p* will
    have the following density function:'
  prefs: []
  type: TYPE_NORMAL
- en: '*P(B = 1) = p, P(B =0)= (1-p)*'
  prefs: []
  type: TYPE_NORMAL
- en: Here *B=1* means the event happened, and *B=0* means it didn’t.
  prefs: []
  type: TYPE_NORMAL
- en: Notice how both probabilities add up to 1, and therefore no other value for *B* will
    be possible.
  prefs: []
  type: TYPE_NORMAL
- en: Uniform Probability Distribution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'There are two kinds of uniform random variables: discrete and continuous ones.'
  prefs: []
  type: TYPE_NORMAL
- en: A **discrete uniform distribution** will take a **(finite)** set of values *S*,
    and assign a probability of *1/n* to each of them, where *n* is the amount of
    elements in* S*.
  prefs: []
  type: TYPE_NORMAL
- en: This way, if for instance my variable* Y* was uniform in {1,2,3}, then there’d
    be a 33% chance each of those values came out.
  prefs: []
  type: TYPE_NORMAL
- en: A very typical case of a discrete uniform random variable is found in **dice**,
    where your typical dice has the set of values {1,2,3,4,5,6}.
  prefs: []
  type: TYPE_NORMAL
- en: A **continuous uniform distribution**, instead, only takes **two values* a* and *b*** as
    parameters, and assigns the same density to each value in the **interval between
    them**.
  prefs: []
  type: TYPE_NORMAL
- en: That means the probability of Y taking a **value in an interval** (from *c* to *d*)
    is **proportional to its size** versus the size of the whole interval (*b-a*).
  prefs: []
  type: TYPE_NORMAL
- en: Therefore if* Y* is uniformly distributed between *a* and *b*, then
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/95b32696bc827b3059a0e6bfa549c775.png)'
  prefs: []
  type: TYPE_IMG
- en: This way, if *Y* is a uniform random variable between 1 and 2,
  prefs: []
  type: TYPE_NORMAL
- en: '*P(1 < X < 2)=1* and *P(1 < X < 1.5) = 0.5*'
  prefs: []
  type: TYPE_NORMAL
- en: Python’s `random` package’s `random` method samples a uniformly distributed
    continuous variable between 0 and 1.
  prefs: []
  type: TYPE_NORMAL
- en: Interestingly, it can be shown that **any other distribution** can be sampled
    given a [uniform random values generator and some calculus](https://www.mathworks.com/help/stats/generate-random-numbers-using-the-uniform-distribution-inversion-method.html).
  prefs: []
  type: TYPE_NORMAL
- en: Normal Probability Distributions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![](../Images/504c99d84e810d4b8c2f04abbc1f7288.png)'
  prefs: []
  type: TYPE_IMG
- en: Normal Distributions. source: [Wikipedia](https://en.wikipedia.org/wiki/Normal_distribution)
  prefs: []
  type: TYPE_NORMAL
- en: '**Normally distributed variables** are so commonly found in nature, they’re
    actually ***the norm***. That’s actually where the name comes from.'
  prefs: []
  type: TYPE_NORMAL
- en: If you round up all your workmates and measure their heights, or weigh them
    all and plot a histogram with the results, odds are it’s gonna approach a normal
    distribution.
  prefs: []
  type: TYPE_NORMAL
- en: I actually saw this effect when I showed you [Exploratory Data Analysis](http://www.datastuff.tech/data-analysis/data-analysis-pandas-seaborn-kaggle-dataset/) examples.
  prefs: []
  type: TYPE_NORMAL
- en: It can also be shown that if you **take a sample** of any random variable and **average
    those measures**, and repeat that process many times, that average will also have
    a **normal distribution**. That fact’s so important, it’s called the [fundamental
    theorem of statistics](https://math.tutorvista.com/statistics/fundamental-theorem-of-statistics.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'Normally distributed variables:'
  prefs: []
  type: TYPE_NORMAL
- en: Are **symmetrical**, centered around a mean (usually called **μ**).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can take **all values on the real space**, but only deviate two sigmas from
    the norm 5% of the time.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Are **literally everywhere**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Most often if you measure any empirical data and it’s symmetrical, assuming
    it’s normal will kinda work.
  prefs: []
  type: TYPE_NORMAL
- en: For example, rolling *K* dice and adding up the results will distribute pretty
    much normally.
  prefs: []
  type: TYPE_NORMAL
- en: Log-Normal Probability Distribution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![](../Images/fb31de9cc083b75eea7711df73b50fe8.png)'
  prefs: []
  type: TYPE_IMG
- en: Lognormal distribution. source: [Wikipedia](https://en.wikipedia.org/wiki/Log-normal_distribution)
  prefs: []
  type: TYPE_NORMAL
- en: Log-normal probability distribution is Normal Probability Distribution’s smaller,
    less frequently seen sister.
  prefs: []
  type: TYPE_NORMAL
- en: A variable *X* is said to be **log-normally distributed** if the variable *Y
    = log(X)* follows a normal distribution.
  prefs: []
  type: TYPE_NORMAL
- en: When plotted in a histogram, log-normal probability distributions are **asymmetrical**,
    and become even more so if their standard deviation is bigger.
  prefs: []
  type: TYPE_NORMAL
- en: I believe **lognormal** distributions to be worth mentioning, because **most
    money-based variables** behave this way.
  prefs: []
  type: TYPE_NORMAL
- en: If you look at the probability distributions of any variable that relates to
    money, like
  prefs: []
  type: TYPE_NORMAL
- en: Amount sent on the latest transfer of a certain bank.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Volume of the latest transaction in Wall Street.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A set of companies’ quarterly earnings for a given quarter.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They will usually not have a normal probability distribution, but will behave
    much closer to a lognormal random variable.
  prefs: []
  type: TYPE_NORMAL
- en: '*(For other Data Scientists: chime in in the comments if you can think of any
    other empirical lognormal variables you’ve come across in your work! Especially
    anything outside of finances)*.'
  prefs: []
  type: TYPE_NORMAL
- en: Exponential Probability Distribution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![](../Images/9658dbdb4a085f4993477d08c91a5985.png)'
  prefs: []
  type: TYPE_IMG
- en: Exponential distribution. source: [Wikipedia](https://en.wikipedia.org/wiki/Exponential_distribution)
  prefs: []
  type: TYPE_NORMAL
- en: '**Exponential probability distributions** appear everywhere, too.'
  prefs: []
  type: TYPE_NORMAL
- en: They are heavily linked to a Probability concept called a **Poisson Process**.
  prefs: []
  type: TYPE_NORMAL
- en: Stealing straight from Wikipedia, a [Poisson Process](https://en.wikipedia.org/wiki/Poisson_point_process) is
    “*a process in which events occur continuously and independently at a constant
    average rate*“.
  prefs: []
  type: TYPE_NORMAL
- en: 'All that means is, if:'
  prefs: []
  type: TYPE_NORMAL
- en: You have a lot of events going.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They happen at a certain rate (which **does not change** over time).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Just because one happened the chances of another one happening don’t change.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Then you have a Poisson process.
  prefs: []
  type: TYPE_NORMAL
- en: Some examples could be requests coming to a server, transactions happening in
    a supermarket, or birds fishing in a certain lake.
  prefs: []
  type: TYPE_NORMAL
- en: Imagine a Poisson Process with a frequency rate of λ (say, events happen once
    every second).
  prefs: []
  type: TYPE_NORMAL
- en: Exponential random variables model the time it takes, after an event, for the
    next event to occur.
  prefs: []
  type: TYPE_NORMAL
- en: Interestingly, in a Poisson Process **an event can happen anywhere between 0
    and infinity times** (*with decreasing probability*), in any interval of time.
  prefs: []
  type: TYPE_NORMAL
- en: This means there’s a **non-zero chance that the event won’t happen, no matter
    how long you wait**. It also means it could happen a lot of times in a very short
    interval.
  prefs: []
  type: TYPE_NORMAL
- en: In class we used to joke bus arrivals are Poisson Processes. I think the response
    time when you send a WhatsApp message to *some people* also fits the criteria.
  prefs: []
  type: TYPE_NORMAL
- en: However, the λ parameter **regulates the frequency** of the events.
  prefs: []
  type: TYPE_NORMAL
- en: It will make the **expected time** it actually takes for an event to happen **center
    around a certain value**.
  prefs: []
  type: TYPE_NORMAL
- en: This means if we know a taxi passes our block every 15 minutes, even though
    theoretically we *could* wait for it forever, it’s extremely likely we won’t wait
    longer than, say, 30 minutes.
  prefs: []
  type: TYPE_NORMAL
- en: Exponential Probability Distribution In Data Science
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here’s the density function for an exponential distribution random variable:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d86296452227e0012e91322faabe2d40.png)'
  prefs: []
  type: TYPE_IMG
- en: Suppose you have a sample from a variable and want to see if it can be modelled
    with an Exponential distribution Variable.
  prefs: []
  type: TYPE_NORMAL
- en: The optimum **λ parameter can be easily estimated** as the inverse of the average
    of your sampled values.
  prefs: []
  type: TYPE_NORMAL
- en: Exponential variables are very good for modelling any probability distributions
    with very infrequent, but huge (and mean-breaking) **outliers**.
  prefs: []
  type: TYPE_NORMAL
- en: This is because they can **take any non-negative value** but center in smaller
    ones, with decreased frequency as the value grows.
  prefs: []
  type: TYPE_NORMAL
- en: In a particularly **outlier-heavy sample**, you may want to estimate λ as the **median
    instead of the average**, since the median is more **robust to outliers**. Your
    mileage may vary on this one, so take it with a grain of salt.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To sum up, as Data Scientists, I think it’s important for us to learn the basics.
  prefs: []
  type: TYPE_NORMAL
- en: Probability and Statistics may not be as flashy as [Deep Learning](http://www.datastuff.tech/machine-learning/autoencoder-deep-learning-tensorflow-eager-api-keras/) or [Unsupervised
    Machine Learning](http://www.datastuff.tech/machine-learning/k-means-clustering-unsupervised-learning-for-recommender-systems/),
    but they are the **bedrock of Data Science**. Especially Machine Learning.
  prefs: []
  type: TYPE_NORMAL
- en: Feeding a Machine Learning model with features without knowing which distribution
    they follow is, in my experience, a poor choice.
  prefs: []
  type: TYPE_NORMAL
- en: It’s also good to remember the **ubiquity of Exponential and Normal Probability
    Distributions**, and their smaller counterpart, the lognormal distribution.
  prefs: []
  type: TYPE_NORMAL
- en: Knowing their properties, uses and appearance is **game-changing when training
    a Machine Learning model**. It’s also generally good to keep them in mind while
    doing any kind of Data Analysis.
  prefs: []
  type: TYPE_NORMAL
- en: Did you find any part of this article useful? Was it all stuff you already knew?
    did you learn anything new? Let me know in the comments!
  prefs: []
  type: TYPE_NORMAL
- en: '*Contact me on [Twitter](https://www.twitter.com/strikingloo), [Medium](https://www.medium.com/@strikingloo) of [dev.to](http://www.dev.to/strikingloo) if
    there’s anything you don’t think was clear enough, anything that you disagree
    with, or just anything that’s plain wrong. Don’t worry, I don’t bite.*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio: [Luciano Strika](http://www.datastuff.tech)** is a computer science
    student at Buenos Aires University, and a data scientist at MercadoLibre. He also
    writes about machine learning and data on [**www.datastuff.tech**](http://www.datastuff.tech).'
  prefs: []
  type: TYPE_NORMAL
- en: '[Original](http://www.datastuff.tech/data-science/5-probability-distributions-every-data-scientist-should-know/).
    Reposted with permission.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Data Science Basics: Power Laws and Distributions](/2016/12/data-science-basics-power-laws-distributions.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Basic Statistics in Python: Probability](/2018/08/basic-statistics-python-probability.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Probability Mass and Density Functions](/2019/05/probability-mass-density-functions.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Best ETL Tools in 2021](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The 5 Characteristics of a Successful Data Scientist](https://www.kdnuggets.com/2021/12/5-characteristics-successful-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Learning Data Science to Find Purpose and Find Purpose to…](https://www.kdnuggets.com/2021/12/stop-learning-data-science-find-purpose.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
