["```py\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport cv2img = cv2.imread(\"/Users/nageshsinghchauhan/Documents/images10.jpg\")\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nr, g, b = cv2.split(img)\nr = r.flatten()\ng = g.flatten()\nb = b.flatten()#plotting \nfig = plt.figure()\nax = Axes3D(fig)\nax.scatter(r, g, b)\nplt.show()\n```", "```py\nimport numpy as np\nimport cv2\nimport matplotlib.pyplot as plt\n```", "```py\noriginal_image = cv2.imread(\"/Users/nageshsinghchauhan/Desktop/image1.jpg\")\n```", "```py\nimg=cv2.cvtColor(original_image,cv2.COLOR_BGR2RGB)\n```", "```py\nvectorized = img.reshape((-1,3))\n```", "```py\nvectorized = np.float32(vectorized)\n```", "```py\ncriteria = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 10, 1.0)\n```", "```py\nK = 3\nattempts=10\nret,label,center=cv2.kmeans(vectorized,K,None,criteria,attempts,cv2.KMEANS_PP_CENTERS)\n```", "```py\ncenter = np.uint8(center)\n```", "```py\nres = center[label.flatten()]\nresult_image = res.reshape((img.shape))\n```", "```py\nfigure_size = 15\nplt.figure(figsize=(figure_size,figure_size))\nplt.subplot(1,2,1),plt.imshow(img)\nplt.title('Original Image'), plt.xticks([]), plt.yticks([])\nplt.subplot(1,2,2),plt.imshow(result_image)\nplt.title('Segmented Image when K = %i' % K), plt.xticks([]), plt.yticks([])\nplt.show()\n```", "```py\nedges = cv2.Canny(img,150,200)\nplt.figure(figsize=(figure_size,figure_size))\nplt.subplot(1,2,1),plt.imshow(img)\nplt.title('Original Image'), plt.xticks([]), plt.yticks([])\nplt.subplot(1,2,2),plt.imshow(edges,cmap = 'gray')\nplt.title('Edge Image'), plt.xticks([]), plt.yticks([])\nplt.show()\n```"]