- en: How to Create a Simple Neural Network in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2018/10/simple-neural-network-python.html](https://www.kdnuggets.com/2018/10/simple-neural-network-python.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Dr. Michael J. Garbade](https://www.linkedin.com/in/garbade)**'
  prefs: []
  type: TYPE_NORMAL
- en: Neural networks (NN), also called artificial neural networks (ANN) are a subset
    of learning algorithms within the machine learning field that are loosely based
    on the concept of biological neural networks.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '[Andrey Bulezyuk](https://www.liveedu.tv/andreybu/REaxr-machine-learning-model-python-sklearn-kera/oPGdP-machine-learning-model-python-sklearn-kera/),
    who is a German-based machine learning specialist with more than five years of
    experience, says that “neural networks are revolutionizing machine learning because
    they are capable of efficiently modeling sophisticated abstractions across an
    extensive range of disciplines and industries.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'Basically, an ANN comprises of the following components:'
  prefs: []
  type: TYPE_NORMAL
- en: An input layer that receives data and pass it on
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A hidden layer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An output layer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Weights between the layers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A deliberate activation function for every hidden layer. In this simple neural
    network Python tutorial, we’ll employ the Sigmoid activation function.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are several types of neural networks. In this project, we are going to
    create the feed-forward or perception neural networks. This type of ANN relays
    data directly from the front to the back.
  prefs: []
  type: TYPE_NORMAL
- en: Training the feed-forward neurons often need back-propagation, which provides
    the network with corresponding set of inputs and outputs. When the input data
    is transmitted into the neuron, it is processed, and an output is generated.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a diagram that shows the structure of a simple neural network:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Simple Neural Network](../Images/29d7e7f6e21746e8ed80b14139130709.png)'
  prefs: []
  type: TYPE_IMG
- en: And, the best way to understand how neural networks work is to learn how to
    build one from scratch (without using any library).
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we’ll demonstrate how to use the Python programming language
    to create a simple neural network.
  prefs: []
  type: TYPE_NORMAL
- en: '**The problem**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Here is a table that shows the problem.
  prefs: []
  type: TYPE_NORMAL
- en: '|  | Input |  | Output |'
  prefs: []
  type: TYPE_TB
- en: '| **Training data 1** | 0 | 0 | 1 | 0 |'
  prefs: []
  type: TYPE_TB
- en: '| **Training data 2** | 1 | 1 | 1 | 1 |'
  prefs: []
  type: TYPE_TB
- en: '| **Training data 3** | 1 | 0 | 1 | 1 |'
  prefs: []
  type: TYPE_TB
- en: '| **Training data 4** | 0 | 1 | 1 | 0 |'
  prefs: []
  type: TYPE_TB
- en: '|  |'
  prefs: []
  type: TYPE_TB
- en: '| **New Situation** | 1 | 0 | 0 | **?** |'
  prefs: []
  type: TYPE_TB
- en: We are going to train the neural network such that it can predict the correct
    output value when provided with a new set of data.
  prefs: []
  type: TYPE_NORMAL
- en: As you can see on the table, the value of the output is always equal to the
    first value in the input section. Therefore, we expect the value of the output
    (**?**) to be 1.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see if we can use some Python code to give the same result (You can peruse
    the code for this project at the end of this article before continuing with the
    reading).
  prefs: []
  type: TYPE_NORMAL
- en: '**Creating a NeuralNetwork Class**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We’ll create a **NeuralNetwork** class in Python to train the neuron to give
    an accurate prediction. The class will also have other helper functions.
  prefs: []
  type: TYPE_NORMAL
- en: Even though we’ll not use a neural network library for this simple neural network
    example, we’ll import the **numpy** library to assist with the calculations.
  prefs: []
  type: TYPE_NORMAL
- en: 'The library comes with the following four important methods:'
  prefs: []
  type: TYPE_NORMAL
- en: '**exp**—for generating the natural exponential'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**array**—for generating a matrix'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**dot**—for multiplying matrices'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**random**—for generating random numbers. Note that we’ll seed the random numbers
    to ensure their efficient distribution.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Applying the Sigmoid function**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We’ll use the [Sigmoid function](https://en.wikipedia.org/wiki/Sigmoid_function),
    which draws a characteristic “S”-shaped curve, as an activation function to the
    neural network.
  prefs: []
  type: TYPE_NORMAL
- en: '![Sigmoid Function](../Images/23dc35355351fe8b4fbed81bcc47a082.png)'
  prefs: []
  type: TYPE_IMG
- en: This function can map any value to a value from 0 to 1\. It will assist us to
    normalize the weighted sum of the inputs.
  prefs: []
  type: TYPE_NORMAL
- en: Thereafter, we’ll create the derivative of the Sigmoid function to help in computing
    the essential adjustments to the weights.
  prefs: []
  type: TYPE_NORMAL
- en: The output of a Sigmoid function can be employed to generate its derivative.
    For example, if the output variable is “x”, then its derivative will be x * (1-x).
  prefs: []
  type: TYPE_NORMAL
- en: '**Training the model**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This is the stage where we’ll teach the neural network to make an accurate prediction.
    Every input will have a weight—either positive or negative.
  prefs: []
  type: TYPE_NORMAL
- en: This implies that an input having a big number of positive weight or a big number
    of negative weight will influence the resulting output more.
  prefs: []
  type: TYPE_NORMAL
- en: Remember that we initially began by allocating every weight to a random number.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the procedure for the training process we used in this neural network
    example problem:'
  prefs: []
  type: TYPE_NORMAL
- en: We took the inputs from the training dataset, performed some adjustments based
    on their weights, and siphoned them via a method that computed the output of the
    ANN.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We computed the back-propagated error rate. In this case, it is the difference
    between neuron’s predicted output and the expected output of the training dataset.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Based on the extent of the error got, we performed some minor weight adjustments
    using the [Error Weighted Derivative formula](https://en.wikipedia.org/wiki/Backpropagation#Finding_the_derivative_of_the_error).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We iterated this process an arbitrary number of 15,000 times. In every iteration,
    the whole training set is processed simultaneously.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We used the “.T” function for transposing the matrix from horizontal position
    to vertical position. Therefore, the numbers will be stored this way:'
  prefs: []
  type: TYPE_NORMAL
- en: '![T Function](../Images/3d92ccc4641d7bf781369d1a550dcd5b.png)'
  prefs: []
  type: TYPE_IMG
- en: Ultimately, the weights of the neuron will be optimized for the provided training
    data. Consequently, if the neuron is made to think about a new situation, which
    is the same as the previous one, it could make an accurate prediction. This is
    how back-propagation takes place.
  prefs: []
  type: TYPE_NORMAL
- en: '**Wrapping up**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Finally, we initialized the NeuralNetwork class and ran the code.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the entire code for this how to make a neural network in Python project:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is the output for running the code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Code Output](../Images/5837a16e4584cf2dab3d923e14ff06d5.png)'
  prefs: []
  type: TYPE_IMG
- en: We managed to create a simple neural network.
  prefs: []
  type: TYPE_NORMAL
- en: The neuron began by allocating itself some random weights. Thereafter, it trained
    itself using the training examples.
  prefs: []
  type: TYPE_NORMAL
- en: Consequently, if it was presented with a new situation [1,0,0], it gave the
    value of 0.9999584.
  prefs: []
  type: TYPE_NORMAL
- en: You remember that the correct answer we wanted was 1?
  prefs: []
  type: TYPE_NORMAL
- en: Then, that’s very close—considering that the Sigmoid function outputs values
    between 0 and 1.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, we only used one neuron network to carry out the simple task. What
    if we connected several thousands of these artificial neural networks together?
    Could we possibly mimic how the human mind works 100%?
  prefs: []
  type: TYPE_NORMAL
- en: Do you have any questions or comments?
  prefs: []
  type: TYPE_NORMAL
- en: Please provide them below.
  prefs: []
  type: TYPE_NORMAL
- en: '**Bio**: [Dr. Michael J. Garbade](https://www.linkedin.com/in/garbade) is the
    founder and CEO of Los Angeles-based blockchain education company [LiveEdu](https://www.liveedu.tv/)
    . It’s the world’s leading platform that equips people with practical skills on
    creating complete products in future technological fields, including machine learning.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[More Effective Transfer Learning for NLP](https://www.kdnuggets.com/2018/10/more-effective-transfer-learning-nlp.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Introduction to Deep Learning](https://www.kdnuggets.com/2018/09/introduction-deep-learning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Basic Image Data Analysis Using Python – Part 3](https://www.kdnuggets.com/2018/09/image-data-analysis-python-p3.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[5 Key Skills Needed To Become a Great Data Scientist](https://www.kdnuggets.com/2021/12/5-key-skills-needed-become-great-data-scientist.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6 Predictive Models Every Beginner Data Scientist Should Master](https://www.kdnuggets.com/2021/12/6-predictive-models-every-beginner-data-scientist-master.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Best ETL Tools in 2021](https://www.kdnuggets.com/2021/12/mozart-best-etl-tools-2021.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Write Clean Python Code Using Pipes](https://www.kdnuggets.com/2021/12/write-clean-python-code-pipes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Makes Python An Ideal Programming Language For Startups](https://www.kdnuggets.com/2021/12/makes-python-ideal-programming-language-startups.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Three R Libraries Every Data Scientist Should Know (Even if You Use Python)](https://www.kdnuggets.com/2021/12/three-r-libraries-every-data-scientist-know-even-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
