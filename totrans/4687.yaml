- en: Which Face is Real?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2019/04/which-face-real-stylegan.html](https://www.kdnuggets.com/2019/04/which-face-real-stylegan.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](#comments)![which-face-is-real](../Images/3cb2907ee46dee9ce9e7997fd9958dd9.png)Which
    Face Is Real? ### Which Face is Real?'
  prefs: []
  type: TYPE_NORMAL
- en: '[Which Face Is Real?](https://www.whichfaceisreal.com/index.php) was developed
    by [Jevin West](https://www.jevinwest.org/) and [Carl Bergstrom](https://octavia.zoology.washington.edu/)
    from the [University of Washingtion](https://www.washington.edu/) as part of the
    [Calling Bullshit Project](https://callingbullshit.org/). It acts as a sort of
    game that anyone can play. Visitors to the site have a choice of two images, one
    of which is real and the other of which is a fake generated by [StyleGAN](#StyleGAN).'
  prefs: []
  type: TYPE_NORMAL
- en: The project was implemented by Jevin and Carl as a course that will teach its
    students how to identify misinformation.
  prefs: []
  type: TYPE_NORMAL
- en: Our aim in this course is to teach you how to think critically about the data
    and models that constitute evidence in the social and natural sciences.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The world is awash in bullshit. Politicians are unconstrained by facts. Science
    is conducted by press release. Higher education rewards bullshit over analytic
    thought. Startup culture elevates bullshit to high art. Advertisers wink conspiratorially
    and invite us to join them in seeing through all the bullshit — and take advantage
    of our lowered guard to bombard us with bullshit of the second order. The majority
    of administrative activity, whether in private business or the public sphere,
    seems to be little more than a sophisticated exercise in the combinatorial reassembly
    of bullshit.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: We're sick of it. It's time to do something, and as educators, one constructive
    thing we know how to do is to teach people. So, the aim of this course is to help
    students navigate the bullshit-rich modern environment by identifying bullshit,
    seeing through it, and combating it with effective analysis and argument.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*-Carl T. Bergstrom and Jevin West'
  prefs: []
  type: TYPE_NORMAL
- en: Seattle, WA.*
  prefs: []
  type: TYPE_NORMAL
- en: How do you tell the Difference?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Water splotches**'
  prefs: []
  type: TYPE_NORMAL
- en: The algorithm produces shiny blobs that look somewhat like water splotches on
    old photographic prints. These splotches can appear anywhere in the image, but
    often show up at the interface between the hair and the background.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![water-splotches](../Images/69553dbe85e7592cbdffa9b905132dcc.png)water splotches'
  prefs: []
  type: TYPE_NORMAL
- en: '**Background problems**'
  prefs: []
  type: TYPE_NORMAL
- en: The background of the image can appear in a weird state such as blurriness or
    mishaped objects. This is due to the fact that the neural net is trained on the
    face and less emphasis is given to the background of the image.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![background-problems](../Images/49af8987d14cec1d349be31cd39e3d9b.png)background
    problems'
  prefs: []
  type: TYPE_NORMAL
- en: '**Symmetry**'
  prefs: []
  type: TYPE_NORMAL
- en: At the moment, the generator is not able to produce realistic looking eyeglasses,
    however this may not be obvious at first. A common problem is asymmetry. Look
    at the frame structure; often the frame will take one style at the left and another
    at the right, or there will be a wayfarer-style ornament on one side but not on
    the other. Other times the frame will just be crooked or jagged. In addition,
    asymmetries in facial hair, different earrings in the left and right ear, and
    different forms of collar or fabric on the left and right side can be present.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![asymmetry](../Images/1f49498ac44791186e8d45b69686c30a.png)asymmetry'
  prefs: []
  type: TYPE_NORMAL
- en: '**Hair**'
  prefs: []
  type: TYPE_NORMAL
- en: Hair is known to be difficult for the algorithm to render properly. Disconnected
    strands, too straight, or too streaked will be common problems when generating
    hair.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![hair](../Images/4d0ae32dcfd4386715e28c33213bcd34.png)hair'
  prefs: []
  type: TYPE_NORMAL
- en: '**Fluorescent bleed**'
  prefs: []
  type: TYPE_NORMAL
- en: Fluorescent colors can sometimes bleed into the hair or face from the background.
    People can sometimes mistake this for colored hair.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![fluorescent-bleed](../Images/b1358a79846111e35502a1e7cfdfe3f3.png)fluorescent
    bleed'
  prefs: []
  type: TYPE_NORMAL
- en: '**Teeth**'
  prefs: []
  type: TYPE_NORMAL
- en: Teeth are also hard to render and can come out as odd-shaped, asymmetric or
    for those that can identify teeth, sometimes 3 incisors can appear in the image.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![teeth](../Images/929ea9c7c869fc76c92746f72968dd90.png)teeth'
  prefs: []
  type: TYPE_NORMAL
- en: Trying the algorithm
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: All the code for the StyleGAN have been open-sourced in the [stylegan](https://github.com/NVlabs/stylegan)
    repository. It gives details on how you can run the styleGAN algorithm yourself.
  prefs: []
  type: TYPE_NORMAL
- en: '**However, there are a few barriers:**'
  prefs: []
  type: TYPE_NORMAL
- en: System Requirements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Training time
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: System Requirements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Both Linux and Windows are supported, but we strongly recommend Linux for performance
    and compatibility reasons.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 64-bit Python 3.6 installation. We recommend Anaconda3 with numpy 1.14.3 or
    newer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TensorFlow 1.10.0 or newer with GPU support.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One or more high-end NVIDIA GPUs with at least 11GB of DRAM. We recommend NVIDIA
    DGX-1 with 8 Tesla V100 GPUs.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NVIDIA driver 391.35 or newer, CUDA toolkit 9.0 or newer, cuDNN 7.3.1 or newer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: That type of compute and storage capacity is not common among individuals.
  prefs: []
  type: TYPE_NORMAL
- en: Training time
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Below you will find NVIDIA's reported expected training times for default configuration
    of the `train.py` script (available in the stylegan repository) on a Tesla V100
    GPU for the [FFHQ dataset](https://github.com/NVlabs/ffhq-dataset) (available
    in the stylegan repository).
  prefs: []
  type: TYPE_NORMAL
- en: '![figure-name](../Images/545dbbff52e4504a8dd253a9b881ad24.png)'
  prefs: []
  type: TYPE_IMG
- en: The time taken to properly train this algorithm is far beyond the patience of
    an everyday individual.
  prefs: []
  type: TYPE_NORMAL
- en: '### Behind the scenes'
  prefs: []
  type: TYPE_NORMAL
- en: The science behind the app is thanks to a team at NVIDIA and their work on Generative
    Adversarial Networks. They created the StyleGAN. To learn a little more about
    this amazing technique, I have provided some resources and concise explanations
    below.
  prefs: []
  type: TYPE_NORMAL
- en: Generative Adversarial Network
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*For those wanting a refresher on GAN''s, this playlist of tutorials on [GAN''s
    by Ahlad Kumar](https://www.youtube.com/watch?v=RRTuumxm3CE&list=PLdxQ7SoCLQAMGgQAIAcyRevM8VvygTpCu)
    is quite helpful.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Generative Adversarial Networks first made the rounds in 2014 as an extension
    of generative models via an adversarial process in which we simultaneously train
    two models:'
  prefs: []
  type: TYPE_NORMAL
- en: A generative model that captures the data distribution (training)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A discriminative model that estimates the probability that a sample came from
    the
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: training data rather than the generative model.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The goal of GAN's is to generate artificial/fake samples that are indistinguishable
    from authentic/real samples. A common example is generating artificial images
    that are indistinguishable from real photos of people. The human visual processing
    system would not be able to differentiate these images so easily as the images
    will look like real people at first. We will later see how this happens and how
    we can distinguish a photo of a real person and a photo generated by an algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: StyleGAN
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The algorithm behind this amazing app was the brainchild of **Tero Karras, Samuli
    Laine and Timo Aila** at NVIDIA and called it ***StyleGAN***. The algorithm is
    based on earlier work by Ian Goodfellow and colleagues on General Adversarial
    Networks (GAN's). NVIDIA open sourced the code for their StyleGAN which uses GAN's
    in which two neural networks, one to generate indistinguishable artificial images
    while the other will attempt to distinguish between fake and real photographs.
  prefs: []
  type: TYPE_NORMAL
- en: But while we’ve learned to distrust user names and text more generally, pictures
    are different. You can't synthesize a picture out of nothing, we assume; a picture
    had to be of someone. Sure a scammer could appropriate someone else’s picture,
    but doing so is a risky strategy in a world with google reverse search and so
    forth. So we tend to trust pictures. A business profile with a picture obviously
    belongs to someone. A match on a dating site may turn out to be 10 pounds heavier
    or 10 years older than when a picture was taken, but if there’s a picture, the
    person obviously exists.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: No longer. New adversarial machine learning algorithms allow people to rapidly
    generate synthetic 'photographs' of people who have never existed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*- Jevin West and Carl Bergstrom*'
  prefs: []
  type: TYPE_NORMAL
- en: '***Generative models have a limitation in which it''s hard to control the characteristics
    such as facial features from photographs. NVIDIA''s StyleGAN is a fix to this
    limitation. The model allows the user to tune hyper-parameters that can control
    for the differences in the photographs.***'
  prefs: []
  type: TYPE_NORMAL
- en: 'StyleGAN solves the variability of photos by adding *styles* to images at each
    convolution layer. These styles represent different features of a photos of a
    human, such as facial features, background color, hair, wrinkles etc. The algorithm
    generates new images starting from a low resolution (4x4) to a higher resolution
    (1024x1024). The model generates two images A and B and then combines them by
    taking low-level features from A and rest from B. At each level, different features
    (styles) are used to generate an image:'
  prefs: []
  type: TYPE_NORMAL
- en: Coarse styles (resolution between 4 to 8) - *pose, hair, face, shape*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Middle styles (resolution between 16 to 32) - *facial features, eyes*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fine styles (resolution between 64 to 1024)- *color scheme*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![style-resolution](../Images/591b36c684a8ae3f4a02040a91063619.png)'
  prefs: []
  type: TYPE_IMG
- en: Properties of the style-based generator
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Style mixing**'
  prefs: []
  type: TYPE_NORMAL
- en: The generator employs *mixing regularization* where a given percentage of images
    are generated using two random latent codes instead of one during training. When
    generating such an image, the user simply switches from one latent code to another
    (i.e. style mixing) at a randomly selected point in the synthesis network. In
    the below image we can see how the styles generated by one latent code (source)
    override a subset of the styles of another latent code (destination)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![style-mixing](../Images/6d4d920fcbaf0228fb3c6c2bd985c582.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Stochastic Variation**'
  prefs: []
  type: TYPE_NORMAL
- en: Many aspects of a photograph are stochastic (i.e. random) such as wrinkles,
    hair placement, stubbles, freckles, pimples. The architecture of StyleGAN adds
    per-pixel noise after each convolution layer in order for images to show these
    variations as seen in real life. As seen in the below image, noise added by the
    generator only affects the stochastic aspects of the image and leaves the higher
    level styles as they are.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![stochastic-variation](../Images/6e4a07735ff32b05171a99da9df06cf6.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Separation of global effects from stochasticity**'
  prefs: []
  type: TYPE_NORMAL
- en: Changes to the style of the image will have global effects such as changing
    pose, gender, face etc. but the noise such as freckles, wrinkles, hair placement
    will only affect the stochastic variation. In StyleGAN, global effects such as
    pose, lighting or background style can be controlled coherently and the noise
    is added independently to each pixel and is thus ideally suited for controlling
    stochastic variation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Helpful resources
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[StyleGAN](https://arxiv.org/pdf/1812.04948.pdf)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Recognize Fake AI generated Images](https://medium.com/@kcimc/how-to-recognize-fake-ai-generated-images-4d1f6f9a2842)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NVIDIA Open-Sources Hyper-Realistic Face Generator StyleGAN](https://medium.com/syncedreview/nvidia-open-sources-hyper-realistic-face-generator-stylegan-f346e1a73826)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[The New Neural Internet is Coming](/2018/02/new-neural-internet-coming.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Generative Adversarial Networks, an overview](/2018/01/generative-adversarial-networks-overview.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[See NVIDIA Deep Learning In Action [Webinar Series]](/2018/09/nvidia-deep-learning-webinar-series.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Which is Best: Data Science Bootcamp vs Degree vs Online Course](https://www.kdnuggets.com/2022/09/best-data-science-bootcamp-degree-online-course.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Which Metric Should I Use? Accuracy vs. AUC](https://www.kdnuggets.com/2022/10/metric-accuracy-auc.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ETL vs ELT: Which One is Right for Your Data Pipeline?](https://www.kdnuggets.com/2023/03/etl-elt-one-right-data-pipeline.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RAG vs Finetuning: Which Is the Best Tool to Boost Your LLM Application?](https://www.kdnuggets.com/rag-vs-finetuning-which-is-the-best-tool-to-boost-your-llm-application)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Degree or Certificate? Which Credential Do Employers Value More?](https://www.kdnuggets.com/degree-or-certificate-which-credential-do-employers-value-more)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Real-time Translations with AI](https://www.kdnuggets.com/2022/07/realtime-translations-ai.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
