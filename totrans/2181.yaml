- en: Beginner’s Guide to Machine Learning with Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/beginners-guide-to-machine-learning-with-python](https://www.kdnuggets.com/beginners-guide-to-machine-learning-with-python)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Machine Learning with Python](../Images/7cd2c87585f7c595fc94b1a9f0c66bbd.png)'
  prefs: []
  type: TYPE_IMG
- en: '*Image by Author*'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Predicting the future isn't magic; it's an AI.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: As we stand on the brink of the AI revolution, Python allows us to participate.
  prefs: []
  type: TYPE_NORMAL
- en: In this one,  we’ll discover how you can use Python and Machine Learning to
    make predictions.
  prefs: []
  type: TYPE_NORMAL
- en: We’ll start with real fundamentals and go to the place where we’ll apply algorithms
    to the data to make a prediction. Let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: '**What is Machine Learning?**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Machine learning is a way of giving the computer the ability to make predictions.
    It is too popular now; you probably use it daily without noticing. Here are some
    technologies that are benefitting from Machine Learning;
  prefs: []
  type: TYPE_NORMAL
- en: Self Driving Cars
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Face Detection System
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Netflix Movie Recommendation System
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: But sometimes, AI & Machine Learning, and Deep learning can not be distinguished
    well. Here is a grand scheme that best represents those terms.
  prefs: []
  type: TYPE_NORMAL
- en: '![Machine Learning with Python](../Images/0eb5a95241894cd072523c1b4b1fff2d.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Classifying Machine Learning As a Beginner**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Machine Learning algorithms can be clustered by using two different methods.
    One of these methods involves determining whether a 'label' is associated with
    the data points. In this context, a 'label' refers to the specific attribute or
    characteristic of the data points you want to predict.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a label, your algorithm is classified as a supervised algorithm;
    otherwise, it is an unsupervised algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: 'Another method to classify machine learning algorithms is classifying the algorithm.
    If you do that, machine learning algorithms can be clustered as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Regression](https://scikit-learn.org/stable/supervised_learning.html#supervised-learning)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Classification](https://scikit-learn.org/stable/supervised_learning.html#supervised-learning)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Clustering](https://scikit-learn.org/stable/modules/clustering.html#clustering)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Like Sci-kit Learn did, [here](https://scikit-learn.org/stable/).
  prefs: []
  type: TYPE_NORMAL
- en: '![Machine Learning with Python](../Images/712e147cc26059c5260f47be2b612b64.png)'
  prefs: []
  type: TYPE_IMG
- en: '*Image source: [scikit-learn.org](https://scikit-learn.org/stable/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '**What is Sci-kit Learn?**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Sci-kit learn is the most famous machine learning library in Python; we’ll use
    this in this article. Using Sci-kit Learn, you will skip defining algorithms from
    scratch and use the built-in functions from Sci-kit Learn, which will ease your
    way of building machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we’ll build a machine-learning model using different regression
    algorithms from the sci-kit Learn. Let’s first explain regression.
  prefs: []
  type: TYPE_NORMAL
- en: '**What is Regression?**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![Machine Learning with Python](../Images/02a246d7bd2da21c4d0ecba6139b0906.png)'
  prefs: []
  type: TYPE_IMG
- en: Regression is a machine learning algorithm that makes predictions about continuous
    value. Here are some real-life examples of regression,
  prefs: []
  type: TYPE_NORMAL
- en: '[Weather Prediction](https://www.kaggle.com/datasets/smokingkrils/temperature-forecast-project-using-ml)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Tesla Stock Price Prediction](https://www.kaggle.com/code/ysthehurricane/tesla-stock-price-prediction-using-gru-tutorial)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[House Price Prediction](https://www.kaggle.com/code/shtrausslearning/bayesian-regression-house-price-prediction)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, before applying Regression models, let’s see three different regression
    algorithms with simple explanations;
  prefs: []
  type: TYPE_NORMAL
- en: 'Multiple Linear Regression: Predicts using a linear combination of multiple
    predictor variables.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Decision Tree Regressor: Creates a tree-like model of decisions to predict
    the value of a target variable based on several input features.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Support Vector Regression: Finds the best-fit line (or hyperplane in higher
    dimensions) with the maximum number of points within a certain distance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Before applying machine learning, you need to follow specific steps. Sometimes,
    these steps might differ; however, most of the time, they include;
  prefs: []
  type: TYPE_NORMAL
- en: Data Exploration and Analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data Manipulation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Train-test split
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building ML Model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data Visualization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this one, let’s use a data project from our platform to predict price [here](https://platform.stratascratch.com/data-projects/predicting-price?utm_source=blog&utm_medium=click&utm_campaign=kdn+ml+with+python).
  prefs: []
  type: TYPE_NORMAL
- en: '![Machine Learning with Python](../Images/f7c98dde1f2620d9a44a9c3f8ea580b0.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Data Exploration and Analysis**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In Python, we have several functions. By using them, you can become acquainted
    with the data you use.
  prefs: []
  type: TYPE_NORMAL
- en: But first of all, you should load the libraries with these functions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Excellent, let’s load our data and explore it a little bit
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Input the path of the file in your directory. Python has three functions that
    will help you explore the data. Let’s apply them one by one and see the result.
  prefs: []
  type: TYPE_NORMAL
- en: Here is the code to see the first five rows of our dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Here is the output.
  prefs: []
  type: TYPE_NORMAL
- en: '![Machine Learning with Python](../Images/1da563d6fa787ff346930a6a2ba2cb68.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, let’s examine our second function: view the information about our datasets
    column.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Here is the output.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Here is the last function, which will summarize our data statistically. Here
    is the code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Here is the output.
  prefs: []
  type: TYPE_NORMAL
- en: '![Machine Learning with Python](../Images/e7f8fb9b4e7546b63dd4d321db486468.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, you are more familiar with our data. In machine learning, all your predictor
    variables, which means the columns you intend to use to make a prediction, should
    be numerical.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we’ll make sure about it.
  prefs: []
  type: TYPE_NORMAL
- en: '**Data** **Manipulation**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now, we all know that we should convert the “dow” column to numbers, but before
    that, let’s check if other columns consist of numbers only for the sake of our
    machine-learning models.
  prefs: []
  type: TYPE_NORMAL
- en: We have two suspected columns, loc1, and loc2, because, as you can see from
    the output of the info() function, we have just two columns that are object data
    types, which can include numerical and string values.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s use this code to check;
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Here is the output.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Now, by using the following code, you can eliminate those rows.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: However, we must ensure that the other column, loc2, does not contain string
    values. Let's use the following code to ensure that all values are numerical.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: At the end of the code above, we use the dropna() function because the converting
    function from pandas will convert “na” to non-numerical values.
  prefs: []
  type: TYPE_NORMAL
- en: Excellent. We can solve this issue; let’s convert weekday columns into numbers.
    Here is the code to do that;
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: In this code, we define weekdays by defining a number for each day in the dictionary
    and then simply changing the day names with those numbers. Here is the output.
  prefs: []
  type: TYPE_NORMAL
- en: '![Machine Learning with Python](../Images/a77fdd9e6771e16d774f4e305663d0c3.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, we are almost there.
  prefs: []
  type: TYPE_NORMAL
- en: '**Train-Test Split**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before applying a machine learning model, you must split your data into training
    and test sets. This allows you to objectively assess your model's efficiency by
    training it on the training set and then evaluating its performance on the test
    set, which the model has not seen before.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '**Building Machine Learning Model**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now everything is ready. At this stage, we’ll apply the following algorithms
    at once.
  prefs: []
  type: TYPE_NORMAL
- en: Multiple Linear Regression
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decision Tree Regression
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Support Vector Regression
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are a beginner, this code might seem complicated, but rest assured, it
    is not. In the code, we first assign model names and their corresponding functions
    from scikit-learn to the model's dictionary.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we create an empty dictionary called results to store these results. In
    the first loop, we simultaneously apply all the machine learning models and evaluate
    them using metrics such as R^2 and MSE, which assess how well the algorithms perform.
  prefs: []
  type: TYPE_NORMAL
- en: In the final loop, we print out the results that we have saved. Here is the
    code
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Here is the output.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '**Data Visualization**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To see the results better, let’s visualize the output.
  prefs: []
  type: TYPE_NORMAL
- en: Here is the code where we first calculate RMSE (square root of MSE) and visualize
    the output.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Here is the output.
  prefs: []
  type: TYPE_NORMAL
- en: '![Machine Learning with Python](../Images/757e172aa44ea5ea903ee5fdffa00e2d.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Data Projects**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before wrapping up, here are a few data projects to start.
  prefs: []
  type: TYPE_NORMAL
- en: '[Data Engineer Salary 2024](https://www.kaggle.com/code/marcinkubowicz/data-science-eda)-
    Analyzed Data Engineer Salary trends for 2024'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[2018-2019 Premier League](https://www.kaggle.com/code/yusukefromjpn/2018-19-manchester-united-analysis)-
    Analyzed Manchester United 2018-2019 Statistics'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Delivery Duration Prediction](https://platform.stratascratch.com/data-projects/delivery-duration-prediction?utm_source=blog&utm_medium=click&utm_campaign=kdn+ml+with+python)-
    Analyzed Delivery Duration for Doordash'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Customer Churn Prediction](https://platform.stratascratch.com/data-projects/customer-churn-prediction?utm_source=blog&utm_medium=click&utm_campaign=kdn+ml+with+python)-
    Analyzed Customer Churn for Sony'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Also, if you want to do data projects about interesting datasets, here are a
    few datasets that might become interesting to you;
  prefs: []
  type: TYPE_NORMAL
- en: '[Heart Disease](https://archive.ics.uci.edu/dataset/45/heart+disease) - You
    can predict heart disease based on given features'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Human Activity Recognition Using Smartphones](https://archive.ics.uci.edu/dataset/240/human+activity+recognition+using+smartphones)
    - You can predict step count.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Forest Fire](https://archive.ics.uci.edu/dataset/162/forest+fires) - You can
    predict burned areas.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Conclusion**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Our results could be better because too many steps exist to improve the model's
    efficiency, but we made a great start here. Check out [Sci-kit Learn's official
    document](https://scikit-learn.org/stable/) to see what you can do more.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, after learning, you need to do data projects repeatedly to improve
    your capabilities and learn a few more things.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://twitter.com/StrataScratch)****[Nate Rosidi](https://twitter.com/StrataScratch)****
    is a data scientist and in product strategy. He''s also an adjunct professor teaching
    analytics, and is the founder of StrataScratch, a platform helping data scientists
    prepare for their interviews with real interview questions from top companies.
    Nate writes on the latest trends in the career market, gives interview advice,
    shares data science projects, and covers everything SQL.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Essential Machine Learning Algorithms: A Beginner''s Guide](https://www.kdnuggets.com/2021/05/essential-machine-learning-algorithms-beginners.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Beginner''s Guide to the Top 10 Machine Learning Algorithms](https://www.kdnuggets.com/a-beginner-guide-to-the-top-10-machine-learning-algorithms)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Beginner’s Guide to Machine Learning Testing With DeepChecks](https://www.kdnuggets.com/beginners-guide-to-machine-learning-testing-with-deepchecks)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Beginner’s Guide to Careers in AI and Machine Learning](https://www.kdnuggets.com/beginners-guide-to-careers-in-ai-and-machine-learning)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Beginner’s Guide to Web Scraping Using Python](https://www.kdnuggets.com/2022/10/beginner-guide-web-scraping-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Making Predictions: A Beginner''s Guide to Linear Regression in Python](https://www.kdnuggets.com/2023/06/making-predictions-beginner-guide-linear-regression-python.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
