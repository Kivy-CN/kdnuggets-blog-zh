- en: Build a Machine Learning Web App in 5 Minutes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2022/03/build-machine-learning-web-app-5-minutes.html](https://www.kdnuggets.com/2022/03/build-machine-learning-web-app-5-minutes.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The past year has seen a [massive increase in the scope of data related roles](https://www.bloomtech.com/article/data-science-job-growth-in-2021-and-beyond).
    Most aspiring data professionals tend to put a lot of focus on model building,
    and there is less emphasis placed on other elements of the data science lifecycle.
  prefs: []
  type: TYPE_NORMAL
- en: Due to this, many data scientists are unable to work in an environment outside
    of a Jupyter Notebook.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: They are unable to get their models into the hands of an end-user, and rely
    on external teams to do this from them. In smaller companies that don’t have a
    data pipeline in place, these models never see the light of day. They don’t generate
    any business value, since the company neglected to hire individuals with the required
    skillset to deploy and monitor models.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, you will learn to export your models and use them outside a
    Jupyter Notebook environment. You will build a simple web application that is
    able to feed user input into a machine learning model, and display an output prediction
    to the user.
  prefs: []
  type: TYPE_NORMAL
- en: 'By the end of this tutorial, you will learn to do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Build and tune a machine learning model to solve a classification problem.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Serialize and save ML models.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Load these models into different environments, allowing you to work beyond the
    confines of a Jupyter Notebook.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build web applications using Streamlit from a machine learning model.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The web app will take in a user’s demographic and health indicators as input,
    and generate a prediction as to whether they’d develop heart disease in the next
    ten years:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Build a Machine Learning Web App in 5 Minutes](../Images/045541431656df653f751f03a8c11eaf.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Step 1: Background'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Framingham Heart Study is a long-term cardiovascular study of residents
    of Framingham, Massachusetts. A series of clinical trials were conducted on a
    group of patients, and risk factors such as BMI, their blood pressure, and cholesterol
    levels were recorded.
  prefs: []
  type: TYPE_NORMAL
- en: These patients reported to a testing center every few years to provide updated
    health information.
  prefs: []
  type: TYPE_NORMAL
- en: In this tutorial, we will use a [dataset](https://github.com/Natassha/streamlit_fhs/blob/main/framingham.csv) from
    the Framingham Heart Study to predict whether patients in the study will develop
    heart disease in ten years. It can be obtained upon request from the [BioLincc
    website](https://biolincc.nhlbi.nih.gov/studies/framcohort/), and consists of
    risk factors of approximately 3600 patients.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 2: Pre-requisites'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You need to have a Python IDE installed on your device. If you generally work
    within a Jupyter Notebook, make sure to install another IDE or text-editor. We
    will be creating a web application using Streamlit, which cannot be run using
    a notebook.
  prefs: []
  type: TYPE_NORMAL
- en: I suggest writing out your code to build and save the model in Jupyter (Step
    3 & Step 4). Then, switch to a different IDE to load your model and run the application
    (Step 5).
  prefs: []
  type: TYPE_NORMAL
- en: If you don’t already have one installed, here are some options you can choose
    from: [Visual Studio Code](https://code.visualstudio.com/docs/python/python-tutorial), [Pycharm](https://www.jetbrains.com/help/pycharm/installation-guide.html), [Atom](https://atom.io/), [Eclipse](https://www.eclipse.org/).
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 3: Model Building'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Make sure to download [this](https://github.com/Natassha/streamlit_fhs/blob/main/framingham.csv) dataset.
    Then, import the Pandas library and load the dataframe.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![Build a Machine Learning Web App in 5 Minutes](../Images/a2a31618917370464105e45ff450f371.png)'
  prefs: []
  type: TYPE_IMG
- en: Taking a look at the head of the dataframe, notice that there are 15 risk factors.
    These are our independent variables, and we will be using them to predict the
    onset of heart disease in ten years (*TenYearCHD)*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let’s take a look at our target variable:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Notice that there are only two values in this column — 0 and 1\. A value of
    0 indicates that the patient did not develop CHD in ten years, and a value of
    1 indicates that they did.
  prefs: []
  type: TYPE_NORMAL
- en: The dataset is also fairly imbalanced. There are 3101 patients with the outcome
    of 0 and only 557 patients with an outcome of 1.
  prefs: []
  type: TYPE_NORMAL
- en: To ensure that our model isn’t trained on an imbalanced dataset and predicting
    the majority class 100% of the time, we will perform random oversampling on the
    training data. Then, we will fit a random forest classifier onto all the variables
    in the dataframe.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let’s evaluate model performance on the test set:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Our model’s final accuracy is approximately 0.85.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 4: Saving the Model'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s save the random forest classifier we just built. We will use the [Joblib](https://joblib.readthedocs.io/en/latest/installing.html) library
    to do this, so make sure you have it installed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: This model can easily be accessed in different environments, and can be used
    to make predictions on external data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 5: Building the web app'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**a) Creating the user interface**'
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we can start building a web application using the model created above.
    Make sure to have the [Streamlit](https://docs.streamlit.io/library/get-started/installation) library
    installed before we get started.
  prefs: []
  type: TYPE_NORMAL
- en: If you were using a Jupyter Notebook to build the classifier, you now need to
    move to a different Python IDE. Create a file named *streamlit_fhs.py.*
  prefs: []
  type: TYPE_NORMAL
- en: 'Your directory should contain the following files:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Build a Machine Learning Web App in 5 Minutes](../Images/609726e154e6e6681ff3b89bb48e48d6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Then, import the following libraries in your *.py *file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Let’s create a header for our web application and run it to check if everything
    is working fine:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'To run the Streamlit app, type the following command into the terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, navigate to [http://localhost:8501](http://localhost:8501/) where your
    app resides. You should see a page that looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Build a Machine Learning Web App in 5 Minutes](../Images/abc547aa03901db5995eedc635d234c5.png)'
  prefs: []
  type: TYPE_IMG
- en: Great! This means everything’s working.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s create input boxes for users to enter their data (their age, gender,
    BP, etc).
  prefs: []
  type: TYPE_NORMAL
- en: Here’s how to create a multiple choice drop-down in Streamlit for users to select
    their gender (*This is sample code. Delete this line once you run it, the complete
    example can be found below):*
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Navigate to your Streamlit app again and refresh the page. You will see this
    drop-down box appear on your screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Build a Machine Learning Web App in 5 Minutes](../Images/441bb801f8a16b754ca03e2416cf3a91.png)'
  prefs: []
  type: TYPE_IMG
- en: Remember, we have 15 independent variables we need to collect from the user.
  prefs: []
  type: TYPE_NORMAL
- en: Run the following lines of code to create input boxes for users to enter data
    into. We will divide the page into three columns to make the app more visually
    appealing.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Refresh the app again to view changes:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Build a Machine Learning Web App in 5 Minutes](../Images/9fc6edbe5dcdcc690c1914a25dffdfb9.png)'
  prefs: []
  type: TYPE_IMG
- en: Finally, we need to add a ‘*Predict*’ button to the bottom of the page. Once
    users click on this button, the output will be displayed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Great! You will see this button after refreshing the page again.
  prefs: []
  type: TYPE_NORMAL
- en: '**b) Making predictions**'
  prefs: []
  type: TYPE_NORMAL
- en: The app interface is ready. Now, all we need to do is collect user input every
    time it enters the system. We need to pass this data to our classifier in order
    to come up with an output prediction.
  prefs: []
  type: TYPE_NORMAL
- en: User input is now stored in the variables we created above — *age, gender, education, *etc.
  prefs: []
  type: TYPE_NORMAL
- en: However, this input isn’t in a format that can be easily ingested by the classifier.
    We are collecting strings in the form of *Yes/No *questions, and this needs to
    be encoded in the same way that the training data was.
  prefs: []
  type: TYPE_NORMAL
- en: 'Run the following lines of code to transform the user-input data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'We can just load the model we saved earlier and use it to make predictions
    on values entered by the user:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Finally, we need to display these predictions on the screen.
  prefs: []
  type: TYPE_NORMAL
- en: 'Navigate to the line of code where you created your predict button earlier,
    and modify it as shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: These changes have been added so that the output is only displayed once the
    user clicks on the Predict button. Also, we want text to be displayed to the user
    instead of just showing them the prediction values (0 and 1).
  prefs: []
  type: TYPE_NORMAL
- en: 'Save all your code and refresh your page again, and you will see the completed
    application on your screen. Add in random input numbers and click on the Predict
    button to make sure everything works:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Build a Machine Learning Web App in 5 Minutes](../Images/507ef4f898fa003865eb903d9edd9c2c.png)'
  prefs: []
  type: TYPE_IMG
- en: If you followed along to the entire tutorial, congratulations! You have successfully
    built a ML web application with Streamlit that is able to interact with end-users.
  prefs: []
  type: TYPE_NORMAL
- en: As a next step, you can look into deploying the application so it can be accessed
    by everyone on the Internet. This can be done using tools like [Heroku](https://devcenter.heroku.com/categories/reference), [GCP](https://towardsdatascience.com/deploying-streamlit-apps-to-gcp-79ad5933013e),
    and [AWS](https://towardsdatascience.com/how-to-deploy-a-streamlit-app-using-an-amazon-free-ec2-instance-416a41f69dc3).
  prefs: []
  type: TYPE_NORMAL
- en: '**[Natassha Selvaraj](https://www.natasshaselvaraj.com/)** is a self-taught
    data scientist with a passion for writing. You can connect with her on [LinkedIn](https://www.linkedin.com/in/natassha-selvaraj-33430717a/).'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[KDnuggets News March 9, 2022: Build a Machine Learning Web App in 5…](https://www.kdnuggets.com/2022/n10.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Build a Web Scraper with Python in 5 Minutes](https://www.kdnuggets.com/2022/02/build-web-scraper-python-5-minutes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deploy a Machine Learning Web App with Heroku](https://www.kdnuggets.com/2022/04/deploy-machine-learning-web-app-heroku.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Build a Command-Line App with Python in 7 Easy Steps](https://www.kdnuggets.com/build-a-command-line-app-with-python-in-7-easy-steps)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Build a Text-to-Speech Converter with Python in 5 Minutes](https://www.kdnuggets.com/2022/09/build-texttospeech-converter-python-5-minutes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Build AI Chatbot in 5 Minutes with Hugging Face and Gradio](https://www.kdnuggets.com/2023/06/build-ai-chatbot-5-minutes-hugging-face-gradio.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
