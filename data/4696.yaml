- en: Feature Reduction using Genetic Algorithm with Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 的遗传算法进行特征选择
- en: 原文：[https://www.kdnuggets.com/2019/03/feature-reduction-genetic-algorithm-python.html/2](https://www.kdnuggets.com/2019/03/feature-reduction-genetic-algorithm-python.html/2)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2019/03/feature-reduction-genetic-algorithm-python.html/2](https://www.kdnuggets.com/2019/03/feature-reduction-genetic-algorithm-python.html/2)
- en: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [comments](/2019/03/feature-reduction-genetic-algorithm-python.html?page=2#comments)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![c](../Images/3d9c022da2d331bb56691a9617b91b90.png) [评论](/2019/03/feature-reduction-genetic-algorithm-python.html?page=2#comments)'
- en: After preparing the features, class labels, and the GA parameters, we can go
    through the iterations of the GA according to the next code. At first, the fitness
    value for all solutions is calculated by calling the fitness function named **cal_pop_fitness()**
    defined in the GA file. This function accepts the current population, the extracted
    features, the class labels, the train indices, and the test indices. The function
    returns the fitness value for all solutions in a variable named **fitness**. Remember
    that the fitness value represents the classification accuracy. The best (i.e.
    highest) classification accuracy is saved into the **best_outputs** list.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在准备好特征、类别标签和GA参数后，我们可以按照下述代码进行GA的迭代。首先，通过调用GA文件中定义的名为**cal_pop_fitness()**的适应度函数来计算所有解的适应度值。该函数接受当前种群、提取的特征、类别标签、训练索引和测试索引。函数将所有解的适应度值返回到名为**fitness**的变量中。请记住，适应度值表示分类准确率。最佳（即最高）分类准确率被保存到**best_outputs**列表中。
- en: Based on the calculated fitness values, the best solutions which has the highest
    classification accuracy are selected as parents in the mating pool using the **select_mating_pool()**
    function defined in the GA.py file. It accepts the current population, fitness
    values, and the number of parents to return. It returns the selected parents into
    the **parents** variable.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 根据计算出的适应度值，使用**select_mating_pool()**函数选择分类准确率最高的最佳解作为交配池中的父代。该函数接受当前种群、适应度值和要返回的父代数量，并将选择的父代返回到**parents**变量中。
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Next is to apply the crossover operation over the selected parents to create
    the offspring. This is done inside the **crossover()** function defined in the
    GA.py file. It accepts the parents and the shape of the offspring array to be
    returned later into the **offspring_crossover** variable. The mutation operation
    is then applied over that array using the **mutation()** function which is also
    available within the GA.py file. In addition to the crossover results, this function
    accepts the number of mutations.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是对选择的父代应用交叉操作以创建后代。这是在GA.py文件中定义的**crossover()**函数中完成的。它接受父代和稍后返回的后代数组的形状，并将结果存入**offspring_crossover**变量中。然后，对该数组应用突变操作，使用GA.py文件中的**mutation()**函数。此外，该函数还接受突变的数量。
- en: Because the new population consists of the selected parents in addition to the
    offspring, both the **parents** and the **offspring_mutation** arrays are saved
    into the **new_population** variable. After that, a new generation is applied
    over the new population.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由于新种群包含选择的父代和后代，因此将**parents**和**offspring_mutation**数组保存到**new_population**变量中。之后，对新种群应用新的代际。
- en: After all generations complete, the next code is executed in order to return
    the best selected set of feature elements and the number of selected elements.
    After the 100 generations complete, the algorithm used 174 feature elements in
    order to reach an accuracy of 99.59%.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有代际完成后，执行下一段代码以返回最佳选择的特征元素集和选定的元素数量。在完成100代后，算法使用了174个特征元素，以达到99.59%的准确率。
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The above code also displays a figure showing the progress of the GA over all
    generations which is shown below.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码还显示了一个图形，展示了GA在所有代际中的进展，如下所示。
- en: '![genetic-algorithm-progress](../Images/ccd232bf7d3840d9cc79d648f2d92c8d.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![遗传算法进展](../Images/ccd232bf7d3840d9cc79d648f2d92c8d.png)'
- en: Here is the complete code of the main file.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是主文件的完整代码。
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: GA.py Implementation
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: GA.py 实现
- en: The implementation of the GA.py file is listed below. Within the **cal_pop_fitness()**
    function, the SVC is trained according to the selected feature elements by each
    solution. Before being trained, the features are filtered according to the selected
    elements whose genes are given a value of 1\. This is done inside the **reduce_features()**
    function. It accepts the current solution in addition to the complete features
    for all samples.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '`GA.py` 文件的实现如下。**cal_pop_fitness()** 函数中，SVC 根据每个解选择的特征元素进行训练。在训练之前，特征会根据选定的元素进行筛选，这些基因的值为
    1。这一步骤在 **reduce_features()** 函数中完成。它接受当前解以及所有样本的完整特征。'
- en: After being trained, its classification accuracy is calculated using the **classification_accuracy()**
    function. This function returns the accuracy which is stored into an array named
    accuracies within the **cal_pop_fitness()** function.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 训练完成后，使用 **classification_accuracy()** 函数计算其分类准确率。该函数返回的准确率存储在 **cal_pop_fitness()**
    函数中的一个名为 accuracies 的数组里。
- en: The implementation of the **crossover()** and **mutation()** functions are very
    similar to what is discussed in my previous tutorial titled "**Genetic Algorithm
    Implementation in Python**". One major difference is that the **mutation()** function
    changes the randomly selected genes by flipping their values because we are using
    binary representation.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**crossover()** 和 **mutation()** 函数的实现与我之前的教程“**Python 中的遗传算法实现**”中讨论的非常相似。主要区别在于，**mutation()**
    函数通过翻转基因值来改变随机选择的基因，因为我们使用的是二进制表示。'
- en: '[PRE3]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: For Contacting the Author
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 联系作者
- en: 'E-mail: [ahmed.f.gad@gmail.com](https://mailto:ahmed.f.gad@gmail.com)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子邮件：[ahmed.f.gad@gmail.com](https://mailto:ahmed.f.gad@gmail.com)
- en: 'LinkedIn: [https://linkedin.com/in/ahmedfgad/](https://linkedin.com/in/ahmedfgad/)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'LinkedIn: [https://linkedin.com/in/ahmedfgad/](https://linkedin.com/in/ahmedfgad/)'
- en: 'KDnuggets: [https://www.kdnuggets.com/author/ahmed-gad](/author/ahmed-gad)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'KDnuggets: [https://www.kdnuggets.com/author/ahmed-gad](/author/ahmed-gad)'
- en: 'YouTube: [https://youtube.com/AhmedGadFCIT](https://youtube.com/AhmedGadFCIT)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'YouTube: [https://youtube.com/AhmedGadFCIT](https://youtube.com/AhmedGadFCIT)'
- en: 'TowardsDataScience: [https://towardsdatascience.com/@ahmedfgad](https://towardsdatascience.com/@ahmedfgad)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'TowardsDataScience: [https://towardsdatascience.com/@ahmedfgad](https://towardsdatascience.com/@ahmedfgad)'
- en: 'GitHub: [https://github.com/ahmedfgad](https://github.com/ahmedfgad)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'GitHub: [https://github.com/ahmedfgad](https://github.com/ahmedfgad)'
- en: '**Bio: [Ahmed Gad](https://www.linkedin.com/in/ahmedfgad/)** received his B.Sc.
    degree with excellent with honors in information technology from the Faculty of
    Computers and Information (FCI), Menoufia University, Egypt, in July 2015\. For
    being ranked first in his faculty, he was recommended to work as a teaching assistant
    in one of the Egyptian institutes in 2015 and then in 2016 to work as a teaching
    assistant and a researcher in his faculty. His current research interests include
    deep learning, machine learning, artificial intelligence, digital signal processing,
    and computer vision.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**简历：[Ahmed Gad](https://www.linkedin.com/in/ahmedfgad/)** 于 2015 年 7 月从埃及梅努菲亚大学计算机与信息学院（FCI）获得信息技术荣誉学士学位。由于在学院中排名第一，他在
    2015 年被推荐到埃及的一所学院担任助教，随后在 2016 年继续担任助教及研究员。他当前的研究兴趣包括深度学习、机器学习、人工智能、数字信号处理和计算机视觉。'
- en: '[Original](https://www.linkedin.com/pulse/feature-reduction-using-genetic-algorithm-ahmed-gad/).
    Reposted with permission.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[原文](https://www.linkedin.com/pulse/feature-reduction-using-genetic-algorithm-ahmed-gad/)。经授权转载。'
- en: '**Related:**'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**相关：**'
- en: '[A Quick Guide to Feature Engineering](/2019/02/quick-guide-feature-engineering.html)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[特征工程快速指南](/2019/02/quick-guide-feature-engineering.html)'
- en: '[Artificial Neural Network Implementation using NumPy and Image Classification](/2019/02/artificial-neural-network-implementation-using-numpy-and-image-classification.html)'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 NumPy 和图像分类的人工神经网络实现](/2019/02/artificial-neural-network-implementation-using-numpy-and-image-classification.html)'
- en: '[Genetic Algorithm Implementation in Python](/2018/07/genetic-algorithm-implementation-python.html)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 中的遗传算法实现](/2018/07/genetic-algorithm-implementation-python.html)'
- en: '* * *'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的前三名课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织的 IT'
- en: '* * *'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: More On This Topic
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关话题
- en: '[Genetic Algorithm Key Terms, Explained](https://www.kdnuggets.com/2018/04/genetic-algorithm-key-terms-explained.html)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[遗传算法关键术语解析](https://www.kdnuggets.com/2018/04/genetic-algorithm-key-terms-explained.html)'
- en: '[Optimizing Genes with a Genetic Algorithm](https://www.kdnuggets.com/2022/04/optimizing-genes-genetic-algorithm.html)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[利用遗传算法优化基因](https://www.kdnuggets.com/2022/04/optimizing-genes-genetic-algorithm.html)'
- en: '[Dimensionality Reduction Techniques in Data Science](https://www.kdnuggets.com/2022/09/dimensionality-reduction-techniques-data-science.html)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数据科学中的降维技术](https://www.kdnuggets.com/2022/09/dimensionality-reduction-techniques-data-science.html)'
- en: '[Feature Store Summit 2022: A free conference on Feature Engineering](https://www.kdnuggets.com/2022/10/hopsworks-feature-store-summit-2022-free-conference-feature-engineering.html)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Feature Store 峰会 2022：关于特征工程的免费会议](https://www.kdnuggets.com/2022/10/hopsworks-feature-store-summit-2022-free-conference-feature-engineering.html)'
- en: '[Genetic Programming in Python: The Knapsack Problem](https://www.kdnuggets.com/2023/01/knapsack-problem-genetic-programming-python.html)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 中的遗传编程：背包问题](https://www.kdnuggets.com/2023/01/knapsack-problem-genetic-programming-python.html)'
- en: '[Understanding and Implementing Genetic Algorithms in Python](https://www.kdnuggets.com/understanding-and-implementing-genetic-algorithms-in-python)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 Python 中理解和实现遗传算法](https://www.kdnuggets.com/understanding-and-implementing-genetic-algorithms-in-python)'
