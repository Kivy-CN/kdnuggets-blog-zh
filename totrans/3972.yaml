- en: NumPy for Image Processing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/numpy-for-image-processing](https://www.kdnuggets.com/numpy-for-image-processing)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![NumPy for Image Processing](../Images/94513646e5d024dabc980fa9cecef53a.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by [freepik](https://www.freepik.com/free-photo/combination-facial-features-concept_36029178.htm#fromView=search&page=1&position=19&uuid=e5fa53f4-8eb8-4a51-ac7c-bc74f85aa07d)
  prefs: []
  type: TYPE_NORMAL
- en: NumPy is a robust tool for image processing in Python. It lets you manipulate
    images using array operations. This article explores several image processing
    techniques using NumPy.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Importing Libraries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We must import the required libraries: PIL, NumPy, and Matplotlib. PIL is used
    for opening images. NumPy allows for efficient array operations and image processing.
    Matplotlib is used for visualizing images'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Crop Image
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We define coordinates to mark the area we want to crop from the image. The new
    image contains only the selected part and discards the rest.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![Cropped_image](../Images/2fb66f7dbcc3909e72e85a7c6614a37a.png)'
  prefs: []
  type: TYPE_IMG
- en: Rotate Image
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We rotate the image array 90 degrees counterclockwise using NumPy's **'rot90'**
    function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![Rotated_image](../Images/a081fe73d36876f650f6c5dc5e6a8bea.png)'
  prefs: []
  type: TYPE_IMG
- en: Flip Image
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We use NumPy's **'fliplr'** function to flip the image array horizontally.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![Flipped_image](../Images/1a246e242681af3078cf7e7a27046a65.png)'
  prefs: []
  type: TYPE_IMG
- en: Negative of an Image
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The negative of an image is made by reversing its pixel values. In grayscale
    images, each pixel's value is subtracted from the maximum (255 for 8-bit images).
    In color images, this is done separately for each color channel.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![Negative_image](../Images/0e351b24bd7a7621b56296bd353c69e5.png)'
  prefs: []
  type: TYPE_IMG
- en: Binarize Image
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Binarizing an image converts it to black and white. Each pixel is marked black
    or white based on a threshold value. Pixels that are less than the threshold become
    0 (black) and above those above it become 255 (white).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![Binarize_image](../Images/e4b7c0bad77818b6bfd37654d0aa951f.png)'
  prefs: []
  type: TYPE_IMG
- en: Color Space Conversion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Color space conversion changes an image from one color model to another. This
    is done by changing the array of pixel values. We use a weighted sum of the RGB
    channels to convert a color image to a grayscale.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![Color_conversion](../Images/b401b33889ddb0569abcc086abc5e8bf.png)'
  prefs: []
  type: TYPE_IMG
- en: Pixel Intensity Histogram
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The histogram shows the distribution of pixel values in an image. The image
    is flattened into a one-dimensional array to compute the histogram.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![Histogram](../Images/48edb31106b04096721b51cf892eb592.png)'
  prefs: []
  type: TYPE_IMG
- en: Masking Image
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Masking an image means showing or hiding parts based on rules. Pixels marked
    as 1 are kept while pixels marked as 0 are hidden.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![Masked_image](../Images/b255bd686a67722dd9d15b6483165418.png)'
  prefs: []
  type: TYPE_IMG
- en: Wrapping Up
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This article showed different ways to process images using NumPy. We used PIL,
    NumPy and Matplotlib to crop, rotate, flip, and binarize images. Additionally,
    we learned about creating image negatives, changing color spaces, making histograms,
    and applying masks.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Jayita Gulati](https://www.linkedin.com/in/jayitagulati1998/)** is a machine
    learning enthusiast and technical writer driven by her passion for building machine
    learning models. She holds a Master''s degree in Computer Science from the University
    of Liverpool.'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Transfer Learning for Image Recognition and Natural Language Processing](https://www.kdnuggets.com/2022/01/transfer-learning-image-recognition-natural-language-processing.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Convert an RGB Image to Grayscale](https://www.kdnuggets.com/2019/12/convert-rgb-image-grayscale.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Image Classification with Convolutional Neural Networks (CNNs)](https://www.kdnuggets.com/2022/05/image-classification-convolutional-neural-networks-cnns.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Find a Picture in an Image Without Marking it Up](https://www.kdnuggets.com/2022/09/find-picture-image-without-marking.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[8 Best Python Image Manipulation Tools](https://www.kdnuggets.com/2022/11/8-best-python-image-manipulation-tools.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Guide to Train an Image Classification Model Using Tensorflow](https://www.kdnuggets.com/2022/12/guide-train-image-classification-model-tensorflow.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
