- en: Analyze Python Code in Jupyter Notebooks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.kdnuggets.com/2021/10/analyze-python-code-jupyter-notebooks.html](https://www.kdnuggets.com/2021/10/analyze-python-code-jupyter-notebooks.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[comments](#comments)'
  prefs: []
  type: TYPE_NORMAL
- en: '**By [Julien Delange](https://www.linkedin.com/in/juli1/), CEO of Codiga**'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../Images/05ab40eb82322f3b05051363d71b5f05.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Jupyter notebooks do not support traditional code analysis tools, which makes
    it harder to find bugs. We present a new tool that integrates modern code analysis
    techniques with Jupyter notebooks and helps developers find bugs as they write
    code.
  prefs: []
  type: TYPE_NORMAL
- en: Why verifying Python code?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Python became the most popular programming language (it’s ranked 1st in the
    [TIOBE index](https://www.tiobe.com/tiobe-index/)). Even such a popular language
    can be error-prone, especially because of its nature (an interpreted language
    with dynamic typing ) since its control flow is defined by the indentation. In
    a [2018 study](https://developers.slashdot.org/story/18/01/01/0242218/which-programming-languages-are-most-prone-to-bugs),
    Python was found to be one of the most error-prone languages (with C++, C, and
    Objective-C). As with other programming languages, Python has its own pitfalls
    that developers should avoid (and have been fixed over the years).
  prefs: []
  type: TYPE_NORMAL
- en: For these reasons, it’s always good practice to use code analyzers that check
    your code and detect potential errors. The primary objective is to help you find
    any potential errors before shipping your code to production. But it also helps
    you to follow good coding practices.
  prefs: []
  type: TYPE_NORMAL
- en: Existing ecosystem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Most IDE comes with some code analysis capabilities that validates the syntax
    of your code. For example, [PyCharm](https://www.jetbrains.com/pycharm/) comes
    with analysis capabilities that check for syntax and semantic issues. There are
    also multiple open source tools that check Python code either from a semantic
    (e.g. [pylint](https://pylint.org/)), security (e.g. [bandit](https://github.com/PyCQA/bandit)),
    or style (e.g. [black](https://github.com/psf/black)) perspective. These tools
    are often integrated into IDE using custom plugins and extensions.
  prefs: []
  type: TYPE_NORMAL
- en: However, static analysis tools are not integrated with Jupyter notebooks and
    developers cannot benefit from the analysis of such tools.
  prefs: []
  type: TYPE_NORMAL
- en: Checking code in Jupyter notebooks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As Python developers that regularly use Jupyter for data analysis, we wanted
    to bring these tools into the Jupyter ecosystem and help developers catch bugs
    quickly. We implemented a [Chrome plugin](https://chrome.google.com/webstore/detail/codiga/dbkhkhonmelajjempmoadocgneoadjge)
    that analyzes Python code in Jupyter notebooks and reports all issues while developers
    are writing code.
  prefs: []
  type: TYPE_NORMAL
- en: The tool executes static analyzers such as [Pylint](https://pylint.org/) and
    [Bandit](https://github.com/PyCQA/bandit) to detect syntax, semantic and security
    errors in Python code and reports the errors directly into the Jupyter notebook.
    The plugin is currently compatible with Jupyter notebooks and will soon support
    other platforms such as Google Colab or AWS Sagemaker.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../Images/4c81858ee0ce59e15a017a575ea72a70.png)'
  prefs: []
  type: TYPE_IMG
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Python is the most popular programming language today but writing flawless Python
    code is hard. Thankfully, multiple tools exist to help developers detect sub-optimal
    code. By interfacing these tools with Jupyter notebooks, our Chrome extension
    helps developers detect issues as they write code and fix them quickly, before
    shipping code into production.
  prefs: []
  type: TYPE_NORMAL
- en: Resources
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Chrome extension for Jupyter notebooks](https://chrome.google.com/webstore/detail/codiga/dbkhkhonmelajjempmoadocgneoadjge)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Code of the extension on GitHub](https://github.com/codeinspectorio/chrome-extension)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Pylint](https://pylint.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bandit](https://github.com/PyCQA/bandit)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Bio: [Julien Delange](https://www.linkedin.com/in/juli1/)** is the CEO of
    Codiga (formerly Code Inspector), a company that helps developers write better
    code faster. Julien is an experienced software developer and has worked at Twitter,
    Amazon Web Services, and is the author of the book [Technical Debt](https://techdebt-book.com/)
    in Practice published by MIT Press.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Related:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[Open Source Datasets for Computer Vision](/2021/08/open-source-datasets-computer-vision.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Machine & Deep Learning Compendium Open Book](/2021/09/machine-deep-learning-open-book.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Overview of Albumentations: Open-source library for advanced image augmentations](/2021/07/overview-albumentations-open-source-library-advanced-image-augmentations.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Our Top 3 Course Recommendations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Drag, Drop, Analyze: The Rise of No-Code Data Science](https://www.kdnuggets.com/drag-drop-analyze-the-rise-of-nocode-data-science)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top 5 Free Cloud Notebooks in 2022](https://www.kdnuggets.com/2022/04/top-5-free-cloud-notebooks-2022.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[New From Anaconda! Data Science Training and Cloud Hosted Notebooks](https://www.kdnuggets.com/2022/11/anaconda-new-anaconda-data-science-training-cloud-hosted-notebooks.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Top 7 Free Cloud Notebooks for Data Science](https://www.kdnuggets.com/top-7-free-cloud-notebooks-for-data-science)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python in Finance: Real Time Data Streaming within Jupyter Notebook](https://www.kdnuggets.com/python-in-finance-real-time-data-streaming-within-jupyter-notebook)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Cutting Down Implementation Time by Integrating Jupyter and KNIME](https://www.kdnuggets.com/2021/12/cutting-implementation-time-integrating-jupyter-knime.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
