- en: 3 Hard Python Coding Interview Questions For Data Science
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3个数据科学领域的难度较高的 Python 编程面试问题
- en: 原文：[https://www.kdnuggets.com/2023/03/3-hard-python-coding-interview-questions-data-science.html](https://www.kdnuggets.com/2023/03/3-hard-python-coding-interview-questions-data-science.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/2023/03/3-hard-python-coding-interview-questions-data-science.html](https://www.kdnuggets.com/2023/03/3-hard-python-coding-interview-questions-data-science.html)
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/ef834afd04b8f0fed2b9ef0cabf7c0fa.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![3个数据科学领域的难度较高的 Python 编程面试问题](../Images/ef834afd04b8f0fed2b9ef0cabf7c0fa.png)'
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: 'In today’s article, I’ll focus on Python skills for data science. A data scientist
    without Python is like a writer without a pen. Or a typewriter. Or a laptop. OK,
    how about this: A data scientist without Python is like me without an attempt
    at humor.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在今天的文章中，我将专注于数据科学的 Python 技能。没有 Python 的数据科学家就像没有笔的作家。或者说打字机。或者笔记本电脑。好吧，换句话说：没有
    Python 的数据科学家就像我没有尝试幽默感。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google 网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - 支持你组织的
    IT'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: You can know Python and not be a data scientist. But the other way around? Let
    me know if you know someone who made it in data science without Python. In the
    last 20 years, that is.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以了解 Python，但不一定是数据科学家。不过，反过来呢？如果你知道有谁在没有 Python 的情况下进入了数据科学领域，请告诉我。在过去 20
    年里，应该没有。
- en: To help you practice Python and interviewing skills, I selected three Python
    coding interview questions. Two are from [StrataScratch](https://www.stratascratch.com?utm_source=blog&utm_medium=click&utm_campaign=kdn+3+hard+python+questions),
    and are the type of questions that require using Python to solve a specific business
    problem. The third question is from [LeetCode](https://leetcode.com), and tests
    how good you are at Python algorithms.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 为帮助你练习 Python 和面试技巧，我挑选了三个 Python 编程面试题。其中两个来自于 [StrataScratch](https://www.stratascratch.com?utm_source=blog&utm_medium=click&utm_campaign=kdn+3+hard+python+questions)，这类问题需要使用
    Python 解决特定的业务问题。第三个问题来自于 [LeetCode](https://leetcode.com)，测试你在 Python 算法方面的能力。
- en: 'Python Coding Interview Question #1: Math in Python'
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'Python 编程面试题 #1：Python 中的数学'
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/921bd99bf32d8b42c3c05943fe0907d1.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![3个数据科学领域的难度较高的 Python 编程面试问题](../Images/921bd99bf32d8b42c3c05943fe0907d1.png)'
- en: Image by Author
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: Take a look at this question by Google.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 看看 Google 提出的这个问题。
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/27c123d68c90c7c62247b8d5fe2a8976.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![3个数据科学领域的难度较高的 Python 编程面试问题](../Images/27c123d68c90c7c62247b8d5fe2a8976.png)'
- en: 'Link to the question: [https://platform.stratascratch.com/coding/10067-google-fit-user-tracking](https://platform.stratascratch.com/coding/10067-google-fit-user-tracking?utm_source=blog&utm_medium=click&utm_campaign=kdn+3+hard+python+questions)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 问题链接：[https://platform.stratascratch.com/coding/10067-google-fit-user-tracking](https://platform.stratascratch.com/coding/10067-google-fit-user-tracking?utm_source=blog&utm_medium=click&utm_campaign=kdn+3+hard+python+questions)
- en: Your task is to calculate the average distance based on GPS data using the two
    approaches. One is taking into consideration the curvature of the Earth, the other
    is not taking it into consideration.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 你的任务是基于 GPS 数据计算平均距离，使用两种方法。一种考虑地球的曲率，另一种则不考虑。
- en: The question gives you formulas for both approaches. As you can see, this python
    coding interview question is math-heavy. Not only do you need to understand this
    level of mathematics, but you also need to know how to translate it into a Python
    code.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这些问题为两种方法提供了公式。如你所见，这个 Python 编程面试问题数学成分较重。你不仅需要理解这种水平的数学，还需要知道如何将其转化为 Python
    代码。
- en: Not that easy, right?
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这可不简单，对吧？
- en: The first thing you should do is recognize there’s a math Python module that
    gives you access to the mathematical functions. You’ll use this module a lot in
    this question.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你首先应该认识到有一个数学Python模块，它提供了数学函数的访问权限。你将在这个问题中频繁使用这个模块。
- en: Let's start by importing necessary libraries and sine, cosine, arccosine, and
    radian functions. The next step is to merge the available DataFrame with itself
    on the user ID, session ID, and day of the session. Also, add the suffixes to
    IDs so you can distinguish between them.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始导入必要的库和正弦、余弦、反余弦和弧度函数。下一步是将可用的DataFrame与其自身在用户ID、会话ID和会话日期上合并。同时，添加后缀以区分它们。
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Then find the difference between the two step IDs.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 然后找出两个步骤ID之间的差异。
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The previous step was necessary so we can exclude all the sessions that have
    only one step ID in the next step. That’s what the questions tell us to do. Here’s
    how to do it.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的步骤是必要的，以便在下一步中排除所有只有一个步骤ID的会话。这正是问题告诉我们要做的。下面是具体做法。
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Use the pandas idxmax() function to access the sessions with the biggest difference
    between the steps.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 使用pandas `idxmax()`函数来访问步骤之间差异最大的会话。
- en: After we prepared the dataset, now comes the mathematics part. Create a pandas
    Series and then the for loop. Use the iterrows() method to calculate the distance
    for each row, i.e., session. This is a distance that takes the Earth's curvature
    into account, and the code reflects the formula given in the question.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在准备好数据集后，现在进入数学部分。创建一个pandas Series，然后使用for循环。使用`iterrows()`方法计算每一行，即会话的距离。这是考虑了地球曲率的距离，代码反映了问题中给出的公式。
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now, do the same thing but considering the Earth is flat. This is the only occasion
    being a flat-Earther is beneficial.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，做同样的事情，但假设地球是平的。这是唯一一个成为平地球者有益的情况。
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Turn the result into a DataFrame and start calculating the output metrics. The
    first one is the average distance with Earth's curvature. Then the same calculation
    without the curvature. The final metric is the difference between the two.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 将结果转化为DataFrame并开始计算输出指标。第一个是考虑地球曲率的平均距离。然后是没有曲率的相同计算。最终指标是两者之间的差异。
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The complete code, and its result are given below.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 完整代码及其结果如下所示。
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '| **avg_distance_curvature** | **avg_distance_flat** | **distance_diff** |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| **avg_distance_curvature** | **avg_distance_flat** | **distance_diff** |'
- en: '| 0.077 | 0.088 | -0.01 |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 0.077 | 0.088 | -0.01 |'
- en: 'Python Coding Interview Question #2: Graph Theory in Python'
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python编程面试问题#2：Python中的图论
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/ae168e1bc2f8162e3544af4c093cfc2f.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![3个困难的Python编程面试问题](../Images/ae168e1bc2f8162e3544af4c093cfc2f.png)'
- en: Image by Author
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: This is one of the very interesting Python coding interview questions from StrataScratch.
    It puts you in a very common yet complex situation of a real-life data scientist.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这是StrataScratch中非常有趣的Python编程面试问题之一。它将你置于一个非常常见但复杂的现实数据科学家情况中。
- en: It’s a question by Delta Airlines. Let’s take a look at it.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Delta Airlines提出的问题。让我们来看看它。
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/6804eddaa007d73368fc15c9134e37db.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![3个困难的Python编程面试问题](../Images/6804eddaa007d73368fc15c9134e37db.png)'
- en: 'Link to the question: [https://platform.stratascratch.com/coding/2008-the-cheapest-airline-connection](https://platform.stratascratch.com/coding/2008-the-cheapest-airline-connection?utm_source=blog&utm_medium=click&utm_campaign=kdn+3+hard+python+questions)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 问题链接：[https://platform.stratascratch.com/coding/2008-the-cheapest-airline-connection](https://platform.stratascratch.com/coding/2008-the-cheapest-airline-connection?utm_source=blog&utm_medium=click&utm_campaign=kdn+3+hard+python+questions)
- en: 'This question asks you to find the cheapest airline connection with a maximum
    of two stops. This sounds awfully familiar, doesn’t it? Yes, it’s a somewhat modified
    [shortest path problem](https://en.wikipedia.org/wiki/Shortest_path_problem):
    instead of a path, there’s cost instead.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题要求你找到最多有两个停靠点的最便宜的航空公司连接。这听起来非常熟悉，对吧？是的，这是一种稍作修改的[最短路径问题](https://en.wikipedia.org/wiki/Shortest_path_problem)：不是路径，而是成本。
- en: The solution I’ll show you extensively uses the merge() pandas function. I’ll
    also use itertools for looping. After importing all the necessary libraries and
    modules, the first step is to generate all the possible combinations of the origin
    and destination.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我将展示的解决方案广泛使用了`merge()` pandas函数。我还会使用`itertools`进行循环。在导入所有必要的库和模块后，第一步是生成所有可能的原始和目的地组合。
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now, show only combinations where the origin is different from the destination.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Let’s now merge the da_flights with itself. I’ll use the merge() function, and
    the tables will be joined from the left on the destination and the origin. That
    way, you get all the direct flights to the first destination and then the connecting
    flight whose origin is the same as the first flight’s destination.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Then we merge this result with da_flights. That way, we’ll get the third flight.
    This equals two stops, which is the maximum allowed by the question.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Let’s now tidy the merge result by assigning the logical column names and calculate
    the cost of the flights with one and two stops. (We already have the costs of
    the direct flights!). It’s easy! The total cost of the one-stop flight is the
    first flight plus the second flight. For the two-stop flight, it’s a sum of the
    costs for all three flights.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: I will now merge the DataFrame I created with the given DataFrame. This way,
    I’ll be assigning the costs of each direct flight.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Next, merge the above result with connections_2 to get the costs for the flights
    to destinations requiring one stop.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Do the same for the two-stop flights.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The result of this is a table giving you costs from one origin to a destination
    with direct, one-stop, and two-stop flights. Now you only need to find the lowest
    cost using the min() method, remove the NA values and show the output.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: With these final lines of code, the complete solution is this.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Here’s the code output.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '| **origin** | **destination** | **min_price** |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
- en: '| SFO | JFK | 400 |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
- en: '| SFO | DFW | 200 |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
- en: '| SFO | MCO | 300 |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
- en: '| SFO | LHR | 1400 |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
- en: '| DFW | JFK | 200 |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
- en: '| DFW | MCO | 100 |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
- en: '| DFW | LHR | 1200 |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
- en: '| JFK | LHR | 1000 |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
- en: 'Python Coding Interview Question #3: Binary Tree in Python'
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/2b3717b071ec9f80cc360e48044643fb.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
- en: Image by Author
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: Besides graphs, you’ll also work with binary trees as a data scientist. That’s
    why it would be useful if you knew how to solve this Python coding interview question
    asked by likes of DoorDash, Facebook, Microsoft, Amazon, Bloomberg, Apple, and
    TikTok.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/bab29be0d74887f82eb7506fefa6c2ee.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
- en: 'Link to the question: [https://leetcode.com/problems/binary-tree-maximum-path-sum/description/](https://leetcode.com/problems/binary-tree-maximum-path-sum/description/)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: 'The constraints are:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/37c2d7aaaaeca4a3651124fd49e92861.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
- en: '[PRE17]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The first step towards the solution is defining a maxPathSum function. To determine
    if there is a path from the root down the left or right node, write the recursive
    function gain_from_subtree.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: The first instance is the root of a subtree. If the path is equal to a root
    (no child nodes), then the gain from a subtree is 0\. Then do the recursion in
    the left and the right node. If the path sum is negative, the question asks not
    to take it into account; we do that by setting it to 0.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Then compare the sum of the gains from a subtree with the current maximum path
    and update it if necessary.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: Finally, return the path sum of a subtree, which is a maximum of the root plus
    the left node and the root plus the right node.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: These are the outputs for Cases 1 & 2.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/c977db889f49dd2afacc0384bb6f5812.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
- en: '![3 Hard Python Coding Interview Questions For Data Science](../Images/1ec7ee12b021aea078eba2a7c2a5fce5.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
- en: Summary
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This time, I wanted to give you something different. There are plenty of Python
    concepts you should know as a data scientist. This time I decided to cover three
    topics I don’t see that often: mathematics, graph data structures, and binary
    trees.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: The three questions I showed you seemed ideal for showing you how to translate
    these concepts into Python code. Check out “[Python coding interview questions](https://www.stratascratch.com/blog/python-coding-interview-questions/?utm_source=blog&utm_medium=click&utm_campaign=kdn+3+hard+python+questions)”
    to practice such more Python concepts.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: '**[Nate Rosidi](https://www.stratascratch.com)** is a data scientist and in
    product strategy. He''s also an adjunct professor teaching analytics, and is the
    founder of [StrataScratch](https://www.stratascratch.com/), a platform helping
    data scientists prepare for their interviews with real interview questions from
    top companies. Connect with him on [Twitter: StrataScratch](https://twitter.com/StrataScratch)
    or [LinkedIn](https://www.linkedin.com/in/nathanrosidi/).'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: More On This Topic
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[KDnuggets News, May 4: 9 Free Harvard Courses to Learn Data…](https://www.kdnuggets.com/2022/n18.html)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stop Hard Coding in a Data Science Project - Use Config Files Instead](https://www.kdnuggets.com/2023/06/stop-hard-coding-data-science-project-config-files-instead.html)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[15 Python Coding Interview Questions You Must Know For Data Science](https://www.kdnuggets.com/2022/04/15-python-coding-interview-questions-must-know-data-science.html)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Answer Data Science Coding Interview Questions](https://www.kdnuggets.com/2022/01/answer-data-science-coding-interview-questions.html)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Want to Become a Data Scientist? Part 1: 10 Hard Skills You Need](https://www.kdnuggets.com/want-to-become-a-data-scientist-part-1-10-hard-skills-you-need)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How Hard is it to Get into FAANG Companies](https://www.kdnuggets.com/2023/05/hard-get-faang-companies.html)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
