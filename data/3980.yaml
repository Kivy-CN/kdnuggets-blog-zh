- en: How To Navigate the Filesystem with Python’s Pathlib
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 Python 的 Pathlib 浏览文件系统
- en: 原文：[https://www.kdnuggets.com/how-to-navigate-the-filesystem-with-pythons-pathlib](https://www.kdnuggets.com/how-to-navigate-the-filesystem-with-pythons-pathlib)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.kdnuggets.com/how-to-navigate-the-filesystem-with-pythons-pathlib](https://www.kdnuggets.com/how-to-navigate-the-filesystem-with-pythons-pathlib)
- en: '![pathlib](../Images/0cfef492124b3397208b71330312bdc2.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![pathlib](../Images/0cfef492124b3397208b71330312bdc2.png)'
- en: Image by Author
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: In Python, using regular strings for filesystem paths can be a pain, especially
    if you need to perform operations on the path strings. Switching to a different
    operating system causes breaking changes to your code, too. Yes, you can use [os.path](https://docs.python.org/3/library/os.path.html)
    from the [os module](https://docs.python.org/3/library/os.html) to make things
    easier. But the [pathlib](https://docs.python.org/3/library/pathlib.html) module
    makes all of this much more intuitive.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中，使用常规字符串来表示文件系统路径可能很麻烦，尤其是当你需要对路径字符串执行操作时。切换到不同的操作系统也会导致代码出错。是的，你可以使用
    [os.path](https://docs.python.org/3/library/os.path.html) 来简化操作，来自 [os 模块](https://docs.python.org/3/library/os.html)。但
    [pathlib](https://docs.python.org/3/library/pathlib.html) 模块使所有这些操作变得更加直观。
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Our Top 3 Course Recommendations
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的三大课程推荐
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [Google Cybersecurity
    Certificate](https://www.kdnuggets.com/google-cybersecurity) - Get on the fast
    track to a career in cybersecurity.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 1\. [谷歌网络安全证书](https://www.kdnuggets.com/google-cybersecurity)
    - 快速进入网络安全职业生涯。'
- en: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [Google Data Analytics
    Professional Certificate](https://www.kdnuggets.com/google-data-analytics) - Up
    your data analytics game'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/e225c49c3c91745821c8c0368bf04711.png) 2\. [谷歌数据分析专业证书](https://www.kdnuggets.com/google-data-analytics)
    - 提升你的数据分析技能'
- en: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [Google IT Support
    Professional Certificate](https://www.kdnuggets.com/google-itsupport) - Support
    your organization in IT'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/0244c01ba9267c002ef39d4907e0b8fb.png) 3\. [谷歌 IT 支持专业证书](https://www.kdnuggets.com/google-itsupport)
    - 支持你的组织 IT 工作'
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: The pathlib module introduced in Python 3.4 (yeah, it’s been around for a while)
    allows for an OOP approach that lets you create and work with path objects, and
    comes with batteries included for common operations such as joining and manipulating
    paths, resolving paths, and more.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Python 3.4 中引入的 pathlib 模块（是的，它已经存在一段时间了）允许采用面向对象的方式来创建和操作路径对象，并且内置了处理常见操作的功能，如连接和操作路径、解析路径等。
- en: This tutorial will introduce you to working with the file system using the pathlib
    module. Let's get started.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程将介绍如何使用 pathlib 模块操作文件系统。让我们开始吧。
- en: Working with Path Objects
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用路径对象
- en: 'To start using pathlib, you first need to import the `Path` class:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用 pathlib，你首先需要导入 `Path` 类：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Which allows you to instantiate path objects for creating and manipulating file
    system paths.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得你可以实例化路径对象来创建和操作文件系统路径。
- en: Creating Path Objects
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建路径对象
- en: 'You can create a `Path` object by passing in a string representing the path
    like so:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过传递表示路径的字符串来创建 `Path` 对象，方法如下：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You can create new path objects from existing paths as well. For instance,
    you can create path objects from your home directory or the current working directory:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以从现有路径创建新的路径对象。例如，你可以从你的主目录或当前工作目录创建路径对象：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This should give you a similar output:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会给你类似的输出：
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Suppose you have a base directory and you want to create a path to a file within
    a subdirectory. Here’s how you can do it:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你有一个基础目录，并且你想创建一个指向子目录中文件的路径。你可以这样做：
- en: '[PRE4]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This first creates a path object for the base directory: `/home/balapriya/Documents`.
    **Remember to replace this base path with a valid filesystem path in your working
    environment**.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 首先为基础目录创建一个路径对象：`/home/balapriya/Documents`。**请记得将这个基础路径替换为你工作环境中的有效文件系统路径**。
- en: It then creates `subdirectory_path` by joining `base_path` with the subdirectories
    `projects` and `project1`. Finally, the `file_path` is created by joining `subdirectory_path`
    with the filename `report.txt`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 然后通过将 `base_path` 与子目录 `projects` 和 `project1` 连接来创建 `subdirectory_path`。最后，通过将
    `subdirectory_path` 与文件名 `report.txt` 连接来创建 `file_path`。
- en: As seen, you can use the `/` operator to append a directory or file name to
    the current path, creating a new path object. Notice how the overloading of the
    `/` operator provides a readable and intuitive way to join paths.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如所见，你可以使用`/`操作符将目录或文件名附加到当前路径，创建一个新的路径对象。注意`/`操作符的重载提供了一种可读且直观的路径连接方式。
- en: 'When you run the above code, it''ll output the following paths:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行上述代码时，它将输出以下路径：
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Checking Status and Path Types
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查状态和路径类型
- en: Once you have a valid path object, you can call simple methods on it to check
    the status and type of the path.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你有了有效的路径对象，你可以调用简单的方法来检查路径的状态和类型。
- en: 'To check if a path exists, call the `exists()` method:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查路径是否存在，调用`exists()`方法：
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: If the path exists, it outputs `True`; else, it returns `False`.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果路径存在，它会输出`True`；否则，返回`False`。
- en: 'You can also check if a path is a file or directory:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以检查路径是文件还是目录：
- en: '[PRE8]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Note**: An object of the `Path` class creates a concrete path for your operating
    system. But you can also use `PurePath` when you need to handle paths without
    accessing the filesystem, like working with Windows path on a Unix machine.'
  id: totrans-40
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意**：`Path`类的对象为你的操作系统创建了一个具体的路径。但当你需要处理路径而不访问文件系统时，例如在Unix机器上处理Windows路径，你也可以使用`PurePath`。'
- en: Navigating the Filesystem
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导航文件系统
- en: Navigating the filesystem is pretty straightforward with pathlib. You can iterate
    over the contents of directories, rename and resolve paths, and more.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 使用pathlib导航文件系统非常简单。你可以遍历目录的内容，重命名和解析路径等。
- en: 'You can call the `iterdir()` method on the path object like so to iterate over
    all the contents of a directory:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以像这样在路径对象上调用`iterdir()`方法，以遍历目录中的所有内容：
- en: '[PRE10]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Here’s the sample output:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这是示例输出：
- en: '[PRE11]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Renaming Files
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重命名文件
- en: 'You can rename files by calling the `rename()` method on the path object:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在路径对象上调用`rename()`方法来重命名文件：
- en: '[PRE12]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Here, we rename `test.py` in the `project1` directory to `tests.py`:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将`project1`目录中的`test.py`重命名为`tests.py`：
- en: '[PRE13]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: You can now `cd` into the `project1` directory to check if the file has been
    renamed.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以`cd`进入`project1`目录，检查文件是否已经重命名。
- en: Deleting Files and Directories
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 删除文件和目录
- en: You can also delete a file and remove empty directories with the `unlink()`
    to and `rmdir()` methods, respectively.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用`unlink()`和`rmdir()`方法分别删除文件和移除空目录。
- en: '[PRE14]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '**Note**: Well, in case deleting empty directories got you curious about creating
    them. Yes, you can also create directories with `mkdir()` like so: `path.mkdir(parents=True,
    exist_ok=True)`. The `mkdir()` method creates a new directory. Setting `parents=True`
    allows the creation of parent directories as needed, and `exist_ok=True` prevents
    errors if the directory already exists.'
  id: totrans-56
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意**：如果你对删除空目录感到好奇，是否也可以创建它们。是的，你也可以使用`mkdir()`创建目录，如下所示：`path.mkdir(parents=True,
    exist_ok=True)`。`mkdir()`方法创建一个新目录。设置`parents=True`允许根据需要创建父目录，`exist_ok=True`则在目录已存在时防止出现错误。'
- en: Resolving Absolute Paths
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解析绝对路径
- en: 'Sometimes, it’s easier to work with relative paths and expand to the absolute
    path when needed. You can do it with the `resolve()` method, and the syntax is
    super simple:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，使用相对路径更方便，并在需要时扩展到绝对路径。你可以使用`resolve()`方法来完成，语法非常简单：
- en: '[PRE15]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Here’s an example:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个示例：
- en: '[PRE16]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'And the output:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 和输出：
- en: '[PRE17]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: File Globbing
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文件模式匹配
- en: 'Globbing is super helpful for finding files matching specific patterns. Let’s
    take a sample directory:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 模式匹配对于查找符合特定模式的文件非常有用。让我们看一个示例目录：
- en: '[PRE18]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Here’s the path:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这是路径：
- en: '[PRE19]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Let’s try to find all the text files using `glob()`:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试使用`glob()`查找所有文本文件：
- en: '[PRE20]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Surprisingly, we don’t get the text files. The list is empty:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 令人惊讶的是，我们没有得到文本文件。列表是空的：
- en: '[PRE21]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: It’s because these text files are in the subdirectory and glob doesn’t search
    through subdirectories. Enter recursive globbing with `rglob()`.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为这些文本文件在子目录中，模式匹配不会搜索子目录。使用递归模式匹配`rglob()`。
- en: '[PRE22]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The `rglob()` method performs a recursive search for all text files in the
    directory and all its subdirectories. So we should get the expected output:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`rglob()`方法执行递归搜索，查找目录及其所有子目录中的所有文本文件。因此我们应该得到预期的输出：'
- en: '[PRE23]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: And that's a wrap!
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 事情就这样结束了！
- en: Wrapping Up
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: In this tutorial, we've explored the pathlib module and how it makes file system
    navigation and manipulation in Python accessible. We’ve covered enough ground
    to help you create and work with filesystem paths in Python scripts.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们探讨了pathlib模块及其如何使Python中的文件系统导航和操作变得更加便捷。我们已经覆盖了足够的内容，以帮助你在Python脚本中创建和使用文件系统路径。
- en: You can find the code used in this tutorial [on GitHub](https://github.com/balapriyac/python-basics/tree/main/pathlib-tutorial).
    In the next tutorial, we’ll look at interesting practical applications. Until
    then, keep coding!
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这个教程中找到所使用的代码 [在 GitHub](https://github.com/balapriyac/python-basics/tree/main/pathlib-tutorial)。在下一个教程中，我们将探讨有趣的实际应用。在那之前，继续编程吧！
- en: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)****
    is a developer and technical writer from India. She likes working at the intersection
    of math, programming, data science, and content creation. Her areas of interest
    and expertise include DevOps, data science, and natural language processing. She
    enjoys reading, writing, coding, and coffee! Currently, she''s working on learning
    and sharing her knowledge with the developer community by authoring tutorials,
    how-to guides, opinion pieces, and more. Bala also creates engaging resource overviews
    and coding tutorials.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**[](https://twitter.com/balawc27)**[Bala Priya C](https://www.kdnuggets.com/wp-content/uploads/bala-priya-author-image-update-230821.jpg)**
    是一位来自印度的开发者和技术作家。她喜欢在数学、编程、数据科学和内容创作的交汇处工作。她的兴趣和专长领域包括 DevOps、数据科学和自然语言处理。她喜欢阅读、写作、编程和喝咖啡！目前，她正在通过撰写教程、操作指南、观点文章等方式，与开发者社区分享她的知识。Bala
    还创建了引人入胜的资源概述和编码教程。**'
- en: More On This Topic
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多相关主题
- en: '[How to Navigate the Filesystem Using Bash](https://www.kdnuggets.com/how-navigate-filesystem-bash)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[如何使用 Bash 导航文件系统](https://www.kdnuggets.com/how-navigate-filesystem-bash)'
- en: '[Organize, Search, and Back Up Files with Python''s Pathlib](https://www.kdnuggets.com/organize-search-and-back-up-files-with-pythons-pathlib)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用 Python 的 Pathlib 组织、搜索和备份文件](https://www.kdnuggets.com/organize-search-and-back-up-files-with-pythons-pathlib)'
- en: '[4 Career Lessons That Helped Me Navigate the Difficult Job Market](https://www.kdnuggets.com/2023/05/4-lessons-made-difference-navigating-current-job-market.html)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[帮助我应对困难就业市场的 4 个职业经验](https://www.kdnuggets.com/2023/05/4-lessons-made-difference-navigating-current-job-market.html)'
- en: '[AI Con USA: Navigate the Future of AI](https://www.kdnuggets.com/2024/02/techwell-ai-con-usa-navigate-the-future-of-ai)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[AI Con USA: 探索未来的 AI](https://www.kdnuggets.com/2024/02/techwell-ai-con-usa-navigate-the-future-of-ai)'
- en: '[AI Con USA: Navigate the Future of AI 2024](https://www.kdnuggets.com/2024/04/ai-con-usa-navigate-the-future-of-ai)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[AI Con USA: 探索未来的 AI 2024](https://www.kdnuggets.com/2024/04/ai-con-usa-navigate-the-future-of-ai)'
- en: '[Optimizing Python Code Performance: A Deep Dive into Python Profilers](https://www.kdnuggets.com/2023/02/optimizing-python-code-performance-deep-dive-python-profilers.html)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[优化 Python 代码性能：深入探讨 Python 性能分析工具](https://www.kdnuggets.com/2023/02/optimizing-python-code-performance-deep-dive-python-profilers.html)'
